#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Task_Bandit_SetAnimState

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_Bandit_MovementMode_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Task_Bandit_SetAnimState.Task_Bandit_SetAnimState_C
// 0x0020 (0x00C8 - 0x00A8)
class UTask_Bandit_SetAnimState_C final : public UBTTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          IsAim___if_worried_;                               // 0x00B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSprint___if_worried_;                            // 0x00B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainBanditAI_C*                        bandit;                                            // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	E_Bandit_MovementMode                         MovementMode;                                      // 0x00C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Task_Bandit_SetAnimState(int32 EntryPoint);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void SetMoveSpeed_MULTI(double Speed);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Task_Bandit_SetAnimState_C">();
	}
	static class UTask_Bandit_SetAnimState_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTask_Bandit_SetAnimState_C>();
	}
};
static_assert(alignof(UTask_Bandit_SetAnimState_C) == 0x000008, "Wrong alignment on UTask_Bandit_SetAnimState_C");
static_assert(sizeof(UTask_Bandit_SetAnimState_C) == 0x0000C8, "Wrong size on UTask_Bandit_SetAnimState_C");
static_assert(offsetof(UTask_Bandit_SetAnimState_C, UberGraphFrame) == 0x0000A8, "Member 'UTask_Bandit_SetAnimState_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTask_Bandit_SetAnimState_C, IsAim___if_worried_) == 0x0000B0, "Member 'UTask_Bandit_SetAnimState_C::IsAim___if_worried_' has a wrong offset!");
static_assert(offsetof(UTask_Bandit_SetAnimState_C, IsSprint___if_worried_) == 0x0000B1, "Member 'UTask_Bandit_SetAnimState_C::IsSprint___if_worried_' has a wrong offset!");
static_assert(offsetof(UTask_Bandit_SetAnimState_C, bandit) == 0x0000B8, "Member 'UTask_Bandit_SetAnimState_C::bandit' has a wrong offset!");
static_assert(offsetof(UTask_Bandit_SetAnimState_C, MovementMode) == 0x0000C0, "Member 'UTask_Bandit_SetAnimState_C::MovementMode' has a wrong offset!");

}

