#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MouseCameraController

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function MouseCameraController.MouseCameraController_C.CameraController
// 0x0002 (0x0002 - 0x0000)
struct MouseCameraController_C_CameraController final
{
public:
	bool                                          Clear;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Stop;                                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MouseCameraController_C_CameraController) == 0x000001, "Wrong alignment on MouseCameraController_C_CameraController");
static_assert(sizeof(MouseCameraController_C_CameraController) == 0x000002, "Wrong size on MouseCameraController_C_CameraController");
static_assert(offsetof(MouseCameraController_C_CameraController, Clear) == 0x000000, "Member 'MouseCameraController_C_CameraController::Clear' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_CameraController, Stop) == 0x000001, "Member 'MouseCameraController_C_CameraController::Stop' has a wrong offset!");

// Function MouseCameraController.MouseCameraController_C.CameraControllerTimerHandler
// 0x0398 (0x0398 - 0x0000)
struct MouseCameraController_C_CameraControllerTimerHandler final
{
public:
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Validate_Result;                          // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_GetHitResultUnderCursorByChannel_HitResult; // 0x0038(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_GetHitResultUnderCursorByChannel_ReturnValue; // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_123[0x1];                                      // 0x0123(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_TimerExistsHandle_ReturnValue;         // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_ClampAngel_ClaimedPitch;                  // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ClampAngel_ClaimedYaw;                    // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0298(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_ClampAngel_Pitch_ImplicitCast;            // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ClampAngel_Yaw_ImplicitCast;              // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MouseCameraController_C_CameraControllerTimerHandler) == 0x000008, "Wrong alignment on MouseCameraController_C_CameraControllerTimerHandler");
static_assert(sizeof(MouseCameraController_C_CameraControllerTimerHandler) == 0x000398, "Wrong size on MouseCameraController_C_CameraControllerTimerHandler");
static_assert(offsetof(MouseCameraController_C_CameraControllerTimerHandler, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000000, "Member 'MouseCameraController_C_CameraControllerTimerHandler::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_CameraControllerTimerHandler, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'MouseCameraController_C_CameraControllerTimerHandler::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_CameraControllerTimerHandler, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'MouseCameraController_C_CameraControllerTimerHandler::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_CameraControllerTimerHandler, CallFunc_IsValid_ReturnValue_1) == 0x000031, "Member 'MouseCameraController_C_CameraControllerTimerHandler::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_CameraControllerTimerHandler, CallFunc_Validate_Result) == 0x000032, "Member 'MouseCameraController_C_CameraControllerTimerHandler::CallFunc_Validate_Result' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_CameraControllerTimerHandler, CallFunc_IsValid_ReturnValue_2) == 0x000033, "Member 'MouseCameraController_C_CameraControllerTimerHandler::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_CameraControllerTimerHandler, CallFunc_IsValid_ReturnValue_3) == 0x000034, "Member 'MouseCameraController_C_CameraControllerTimerHandler::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_CameraControllerTimerHandler, CallFunc_GetHitResultUnderCursorByChannel_HitResult) == 0x000038, "Member 'MouseCameraController_C_CameraControllerTimerHandler::CallFunc_GetHitResultUnderCursorByChannel_HitResult' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_CameraControllerTimerHandler, CallFunc_GetHitResultUnderCursorByChannel_ReturnValue) == 0x000120, "Member 'MouseCameraController_C_CameraControllerTimerHandler::CallFunc_GetHitResultUnderCursorByChannel_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_CameraControllerTimerHandler, CallFunc_BreakHitResult_bBlockingHit) == 0x000121, "Member 'MouseCameraController_C_CameraControllerTimerHandler::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_CameraControllerTimerHandler, CallFunc_BreakHitResult_bInitialOverlap) == 0x000122, "Member 'MouseCameraController_C_CameraControllerTimerHandler::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_CameraControllerTimerHandler, CallFunc_BreakHitResult_Time) == 0x000124, "Member 'MouseCameraController_C_CameraControllerTimerHandler::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_CameraControllerTimerHandler, CallFunc_BreakHitResult_Distance) == 0x000128, "Member 'MouseCameraController_C_CameraControllerTimerHandler::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_CameraControllerTimerHandler, CallFunc_BreakHitResult_Location) == 0x000130, "Member 'MouseCameraController_C_CameraControllerTimerHandler::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_CameraControllerTimerHandler, CallFunc_BreakHitResult_ImpactPoint) == 0x000148, "Member 'MouseCameraController_C_CameraControllerTimerHandler::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_CameraControllerTimerHandler, CallFunc_BreakHitResult_Normal) == 0x000160, "Member 'MouseCameraController_C_CameraControllerTimerHandler::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_CameraControllerTimerHandler, CallFunc_BreakHitResult_ImpactNormal) == 0x000178, "Member 'MouseCameraController_C_CameraControllerTimerHandler::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_CameraControllerTimerHandler, CallFunc_BreakHitResult_PhysMat) == 0x000190, "Member 'MouseCameraController_C_CameraControllerTimerHandler::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_CameraControllerTimerHandler, CallFunc_BreakHitResult_HitActor) == 0x000198, "Member 'MouseCameraController_C_CameraControllerTimerHandler::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_CameraControllerTimerHandler, CallFunc_BreakHitResult_HitComponent) == 0x0001A0, "Member 'MouseCameraController_C_CameraControllerTimerHandler::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_CameraControllerTimerHandler, CallFunc_BreakHitResult_HitBoneName) == 0x0001A8, "Member 'MouseCameraController_C_CameraControllerTimerHandler::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_CameraControllerTimerHandler, CallFunc_BreakHitResult_BoneName) == 0x0001B0, "Member 'MouseCameraController_C_CameraControllerTimerHandler::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_CameraControllerTimerHandler, CallFunc_BreakHitResult_HitItem) == 0x0001B8, "Member 'MouseCameraController_C_CameraControllerTimerHandler::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_CameraControllerTimerHandler, CallFunc_BreakHitResult_ElementIndex) == 0x0001BC, "Member 'MouseCameraController_C_CameraControllerTimerHandler::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_CameraControllerTimerHandler, CallFunc_BreakHitResult_FaceIndex) == 0x0001C0, "Member 'MouseCameraController_C_CameraControllerTimerHandler::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_CameraControllerTimerHandler, CallFunc_BreakHitResult_TraceStart) == 0x0001C8, "Member 'MouseCameraController_C_CameraControllerTimerHandler::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_CameraControllerTimerHandler, CallFunc_BreakHitResult_TraceEnd) == 0x0001E0, "Member 'MouseCameraController_C_CameraControllerTimerHandler::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_CameraControllerTimerHandler, CallFunc_K2_TimerExistsHandle_ReturnValue) == 0x0001F8, "Member 'MouseCameraController_C_CameraControllerTimerHandler::CallFunc_K2_TimerExistsHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_CameraControllerTimerHandler, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000200, "Member 'MouseCameraController_C_CameraControllerTimerHandler::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_CameraControllerTimerHandler, CallFunc_Normal_ReturnValue) == 0x000218, "Member 'MouseCameraController_C_CameraControllerTimerHandler::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_CameraControllerTimerHandler, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000230, "Member 'MouseCameraController_C_CameraControllerTimerHandler::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_CameraControllerTimerHandler, CallFunc_BreakRotator_Roll) == 0x000248, "Member 'MouseCameraController_C_CameraControllerTimerHandler::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_CameraControllerTimerHandler, CallFunc_BreakRotator_Pitch) == 0x00024C, "Member 'MouseCameraController_C_CameraControllerTimerHandler::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_CameraControllerTimerHandler, CallFunc_BreakRotator_Yaw) == 0x000250, "Member 'MouseCameraController_C_CameraControllerTimerHandler::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_CameraControllerTimerHandler, CallFunc_ClampAngel_ClaimedPitch) == 0x000258, "Member 'MouseCameraController_C_CameraControllerTimerHandler::CallFunc_ClampAngel_ClaimedPitch' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_CameraControllerTimerHandler, CallFunc_ClampAngel_ClaimedYaw) == 0x000260, "Member 'MouseCameraController_C_CameraControllerTimerHandler::CallFunc_ClampAngel_ClaimedYaw' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_CameraControllerTimerHandler, CallFunc_MakeRotator_ReturnValue) == 0x000268, "Member 'MouseCameraController_C_CameraControllerTimerHandler::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_CameraControllerTimerHandler, CallFunc_RInterpTo_ReturnValue) == 0x000280, "Member 'MouseCameraController_C_CameraControllerTimerHandler::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_CameraControllerTimerHandler, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000298, "Member 'MouseCameraController_C_CameraControllerTimerHandler::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_CameraControllerTimerHandler, CallFunc_ClampAngel_Pitch_ImplicitCast) == 0x000380, "Member 'MouseCameraController_C_CameraControllerTimerHandler::CallFunc_ClampAngel_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_CameraControllerTimerHandler, CallFunc_ClampAngel_Yaw_ImplicitCast) == 0x000388, "Member 'MouseCameraController_C_CameraControllerTimerHandler::CallFunc_ClampAngel_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_CameraControllerTimerHandler, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x000390, "Member 'MouseCameraController_C_CameraControllerTimerHandler::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_CameraControllerTimerHandler, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000394, "Member 'MouseCameraController_C_CameraControllerTimerHandler::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function MouseCameraController.MouseCameraController_C.ClampAngel
// 0x00E0 (0x00E0 - 0x0000)
struct MouseCameraController_C_ClampAngel final
{
public:
	double                                        Pitch;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Yaw;                                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Condition;                                         // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ClaimedPitch;                                      // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ClaimedYaw;                                        // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_2;                     // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_2;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Option_0_ImplicitCast;               // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Option_0_ImplicitCast_1;             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Max_ImplicitCast;                  // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1;   // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast_2;   // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MouseCameraController_C_ClampAngel) == 0x000008, "Wrong alignment on MouseCameraController_C_ClampAngel");
static_assert(sizeof(MouseCameraController_C_ClampAngel) == 0x0000E0, "Wrong size on MouseCameraController_C_ClampAngel");
static_assert(offsetof(MouseCameraController_C_ClampAngel, Pitch) == 0x000000, "Member 'MouseCameraController_C_ClampAngel::Pitch' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_ClampAngel, Yaw) == 0x000008, "Member 'MouseCameraController_C_ClampAngel::Yaw' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_ClampAngel, Condition) == 0x000010, "Member 'MouseCameraController_C_ClampAngel::Condition' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_ClampAngel, ClaimedPitch) == 0x000018, "Member 'MouseCameraController_C_ClampAngel::ClaimedPitch' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_ClampAngel, ClaimedYaw) == 0x000020, "Member 'MouseCameraController_C_ClampAngel::ClaimedYaw' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_ClampAngel, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000028, "Member 'MouseCameraController_C_ClampAngel::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_ClampAngel, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'MouseCameraController_C_ClampAngel::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_ClampAngel, Temp_bool_Variable) == 0x00002A, "Member 'MouseCameraController_C_ClampAngel::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_ClampAngel, CallFunc_BooleanAND_ReturnValue) == 0x00002B, "Member 'MouseCameraController_C_ClampAngel::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_ClampAngel, Temp_bool_Variable_1) == 0x00002C, "Member 'MouseCameraController_C_ClampAngel::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_ClampAngel, Temp_bool_Variable_2) == 0x00002D, "Member 'MouseCameraController_C_ClampAngel::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_ClampAngel, CallFunc_BreakRotator_Roll) == 0x000030, "Member 'MouseCameraController_C_ClampAngel::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_ClampAngel, CallFunc_BreakRotator_Pitch) == 0x000034, "Member 'MouseCameraController_C_ClampAngel::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_ClampAngel, CallFunc_BreakRotator_Yaw) == 0x000038, "Member 'MouseCameraController_C_ClampAngel::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_ClampAngel, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000040, "Member 'MouseCameraController_C_ClampAngel::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_ClampAngel, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'MouseCameraController_C_ClampAngel::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_ClampAngel, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000050, "Member 'MouseCameraController_C_ClampAngel::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_ClampAngel, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'MouseCameraController_C_ClampAngel::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_ClampAngel, CallFunc_FClamp_ReturnValue) == 0x000060, "Member 'MouseCameraController_C_ClampAngel::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_ClampAngel, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'MouseCameraController_C_ClampAngel::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_ClampAngel, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000070, "Member 'MouseCameraController_C_ClampAngel::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_ClampAngel, CallFunc_FClamp_ReturnValue_1) == 0x000078, "Member 'MouseCameraController_C_ClampAngel::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_ClampAngel, CallFunc_FClamp_ReturnValue_2) == 0x000080, "Member 'MouseCameraController_C_ClampAngel::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_ClampAngel, K2Node_Select_Default) == 0x000088, "Member 'MouseCameraController_C_ClampAngel::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_ClampAngel, K2Node_Select_Default_1) == 0x000090, "Member 'MouseCameraController_C_ClampAngel::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_ClampAngel, K2Node_Select_Default_2) == 0x000098, "Member 'MouseCameraController_C_ClampAngel::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_ClampAngel, K2Node_Select_Option_0_ImplicitCast) == 0x0000A0, "Member 'MouseCameraController_C_ClampAngel::K2Node_Select_Option_0_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_ClampAngel, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0000A8, "Member 'MouseCameraController_C_ClampAngel::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_ClampAngel, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x0000B0, "Member 'MouseCameraController_C_ClampAngel::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_ClampAngel, K2Node_Select_Option_0_ImplicitCast_1) == 0x0000B8, "Member 'MouseCameraController_C_ClampAngel::K2Node_Select_Option_0_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_ClampAngel, CallFunc_FClamp_Max_ImplicitCast) == 0x0000C0, "Member 'MouseCameraController_C_ClampAngel::CallFunc_FClamp_Max_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_ClampAngel, CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1) == 0x0000C8, "Member 'MouseCameraController_C_ClampAngel::CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_ClampAngel, CallFunc_Subtract_DoubleDouble_A_ImplicitCast_2) == 0x0000D0, "Member 'MouseCameraController_C_ClampAngel::CallFunc_Subtract_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_ClampAngel, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0000D8, "Member 'MouseCameraController_C_ClampAngel::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function MouseCameraController.MouseCameraController_C.Invalidate
// 0x00F8 (0x00F8 - 0x0000)
struct MouseCameraController_C_Invalidate final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0008(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MouseCameraController_C_Invalidate) == 0x000008, "Wrong alignment on MouseCameraController_C_Invalidate");
static_assert(sizeof(MouseCameraController_C_Invalidate) == 0x0000F8, "Wrong size on MouseCameraController_C_Invalidate");
static_assert(offsetof(MouseCameraController_C_Invalidate, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'MouseCameraController_C_Invalidate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_Invalidate, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000008, "Member 'MouseCameraController_C_Invalidate::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_Invalidate, CallFunc_IsValid_ReturnValue_1) == 0x0000F0, "Member 'MouseCameraController_C_Invalidate::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function MouseCameraController.MouseCameraController_C.InvalidateWithDelay
// 0x0018 (0x0018 - 0x0000)
struct MouseCameraController_C_InvalidateWithDelay final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_TimerExistsHandle_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MouseCameraController_C_InvalidateWithDelay) == 0x000008, "Wrong alignment on MouseCameraController_C_InvalidateWithDelay");
static_assert(sizeof(MouseCameraController_C_InvalidateWithDelay) == 0x000018, "Wrong size on MouseCameraController_C_InvalidateWithDelay");
static_assert(offsetof(MouseCameraController_C_InvalidateWithDelay, Delay) == 0x000000, "Member 'MouseCameraController_C_InvalidateWithDelay::Delay' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_InvalidateWithDelay, CallFunc_K2_SetTimer_ReturnValue) == 0x000008, "Member 'MouseCameraController_C_InvalidateWithDelay::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_InvalidateWithDelay, CallFunc_K2_TimerExistsHandle_ReturnValue) == 0x000010, "Member 'MouseCameraController_C_InvalidateWithDelay::CallFunc_K2_TimerExistsHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_InvalidateWithDelay, CallFunc_K2_SetTimer_Time_ImplicitCast) == 0x000014, "Member 'MouseCameraController_C_InvalidateWithDelay::CallFunc_K2_SetTimer_Time_ImplicitCast' has a wrong offset!");

// Function MouseCameraController.MouseCameraController_C.Validate
// 0x0248 (0x0248 - 0x0000)
struct MouseCameraController_C_Validate final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FunctionResult;                                    // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UBoxComponent*                          CallFunc_AddComponentByClass_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0058(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult_1;     // 0x0160(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(MouseCameraController_C_Validate) == 0x000008, "Wrong alignment on MouseCameraController_C_Validate");
static_assert(sizeof(MouseCameraController_C_Validate) == 0x000248, "Wrong size on MouseCameraController_C_Validate");
static_assert(offsetof(MouseCameraController_C_Validate, Result) == 0x000000, "Member 'MouseCameraController_C_Validate::Result' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_Validate, FunctionResult) == 0x000001, "Member 'MouseCameraController_C_Validate::FunctionResult' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_Validate, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'MouseCameraController_C_Validate::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_Validate, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'MouseCameraController_C_Validate::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_Validate, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'MouseCameraController_C_Validate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_Validate, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000020, "Member 'MouseCameraController_C_Validate::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_Validate, CallFunc_AddComponentByClass_ReturnValue) == 0x000038, "Member 'MouseCameraController_C_Validate::CallFunc_AddComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_Validate, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'MouseCameraController_C_Validate::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_Validate, CallFunc_IsValid_ReturnValue_2) == 0x000041, "Member 'MouseCameraController_C_Validate::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_Validate, CallFunc_IsValid_ReturnValue_3) == 0x000042, "Member 'MouseCameraController_C_Validate::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_Validate, CallFunc_GetPlayerController_ReturnValue) == 0x000048, "Member 'MouseCameraController_C_Validate::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_Validate, CallFunc_IsValid_ReturnValue_4) == 0x000050, "Member 'MouseCameraController_C_Validate::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_Validate, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000058, "Member 'MouseCameraController_C_Validate::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_Validate, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000140, "Member 'MouseCameraController_C_Validate::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_Validate, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000148, "Member 'MouseCameraController_C_Validate::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_Validate, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000150, "Member 'MouseCameraController_C_Validate::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_Validate, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000158, "Member 'MouseCameraController_C_Validate::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MouseCameraController_C_Validate, CallFunc_K2_SetWorldRotation_SweepHitResult_1) == 0x000160, "Member 'MouseCameraController_C_Validate::CallFunc_K2_SetWorldRotation_SweepHitResult_1' has a wrong offset!");

}

