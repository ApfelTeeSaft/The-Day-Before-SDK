#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GPSMain

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FMODStudio_structs.hpp"


namespace SDK::Params
{

// Function WBP_GPSMain.WBP_GPSMain_C.ExecuteUbergraph_WBP_GPSMain
// 0x01A0 (0x01A0 - 0x0000)
struct WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x0028(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0040(0x0018)()
	int32                                         Temp_int_Variable_1;                               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_3;                              // 0x0060(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0078(0x0018)()
	int32                                         Temp_int_Variable_2;                               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_5;                              // 0x0098(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x00B0(0x0018)()
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue;                  // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable_7;                              // 0x00D8(0x0018)()
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIW_PlayerMain_C*                      CallFunc_GetGUI_GUI;                               // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default;                             // 0x0118(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x0138(0x0018)()
	class FText                                   K2Node_Select_Default_2;                           // 0x0150(0x0018)()
	class FText                                   K2Node_Select_Default_3;                           // 0x0168(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_PageIndex;                      // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain) == 0x000008, "Wrong alignment on WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain");
static_assert(sizeof(WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain) == 0x0001A0, "Wrong size on WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain");
static_assert(offsetof(WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain, EntryPoint) == 0x000000, "Member 'WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain, Temp_text_Variable) == 0x000008, "Member 'WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain, Temp_int_Variable) == 0x000020, "Member 'WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain, Temp_text_Variable_1) == 0x000028, "Member 'WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain, Temp_text_Variable_2) == 0x000040, "Member 'WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain, Temp_int_Variable_1) == 0x000058, "Member 'WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain, Temp_text_Variable_3) == 0x000060, "Member 'WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain, Temp_text_Variable_4) == 0x000078, "Member 'WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain, Temp_int_Variable_2) == 0x000090, "Member 'WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain, Temp_text_Variable_5) == 0x000098, "Member 'WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain, Temp_text_Variable_6) == 0x0000B0, "Member 'WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain, CallFunc_PlayEvent2D_ReturnValue) == 0x0000C8, "Member 'WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain::CallFunc_PlayEvent2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain, CallFunc_GetPlayerController_ReturnValue) == 0x0000D0, "Member 'WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain, Temp_text_Variable_7) == 0x0000D8, "Member 'WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain, CallFunc_GetHUD_ReturnValue) == 0x0000F0, "Member 'WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x0000F8, "Member 'WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain, K2Node_DynamicCast_bSuccess) == 0x000108, "Member 'WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain, Temp_int_Variable_3) == 0x00010C, "Member 'WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain, CallFunc_GetGUI_GUI) == 0x000110, "Member 'WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain::CallFunc_GetGUI_GUI' has a wrong offset!");
static_assert(offsetof(WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain, K2Node_Select_Default) == 0x000118, "Member 'WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain, CallFunc_IsValid_ReturnValue) == 0x000130, "Member 'WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain, K2Node_Select_Default_1) == 0x000138, "Member 'WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain, K2Node_Select_Default_2) == 0x000150, "Member 'WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain, K2Node_Select_Default_3) == 0x000168, "Member 'WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain, CallFunc_IsValid_ReturnValue_1) == 0x000180, "Member 'WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain, K2Node_CustomEvent_PageIndex) == 0x000184, "Member 'WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain::K2Node_CustomEvent_PageIndex' has a wrong offset!");
static_assert(offsetof(WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000188, "Member 'WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain, K2Node_DynamicCast_AsSurvival_Player) == 0x000190, "Member 'WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain, K2Node_DynamicCast_bSuccess_1) == 0x000198, "Member 'WBP_GPSMain_C_ExecuteUbergraph_WBP_GPSMain::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function WBP_GPSMain.WBP_GPSMain_C.GetCurrentPage
// 0x0004 (0x0004 - 0x0000)
struct WBP_GPSMain_C_GetCurrentPage final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GPSMain_C_GetCurrentPage) == 0x000004, "Wrong alignment on WBP_GPSMain_C_GetCurrentPage");
static_assert(sizeof(WBP_GPSMain_C_GetCurrentPage) == 0x000004, "Wrong size on WBP_GPSMain_C_GetCurrentPage");
static_assert(offsetof(WBP_GPSMain_C_GetCurrentPage, ReturnValue) == 0x000000, "Member 'WBP_GPSMain_C_GetCurrentPage::ReturnValue' has a wrong offset!");

// Function WBP_GPSMain.WBP_GPSMain_C.SetHintText
// 0x0160 (0x0160 - 0x0000)
struct WBP_GPSMain_C_SetHintText final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FInputActionKeyMapping>         CallFunc_GetActionMappingByName_OutMappings;       // 0x0010(0x0010)(ReferenceParm)
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue_1;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FInputActionKeyMapping>         CallFunc_GetActionMappingByName_OutMappings_1;     // 0x0028(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue;           // 0x0038(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue_1;         // 0x00B0(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00E0(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0130(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0140(0x0018)()
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GPSMain_C_SetHintText) == 0x000008, "Wrong alignment on WBP_GPSMain_C_SetHintText");
static_assert(sizeof(WBP_GPSMain_C_SetHintText) == 0x000160, "Wrong size on WBP_GPSMain_C_SetHintText");
static_assert(offsetof(WBP_GPSMain_C_SetHintText, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_GPSMain_C_SetHintText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSMain_C_SetHintText, CallFunc_GetInputSettings_ReturnValue) == 0x000008, "Member 'WBP_GPSMain_C_SetHintText::CallFunc_GetInputSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSMain_C_SetHintText, CallFunc_GetActionMappingByName_OutMappings) == 0x000010, "Member 'WBP_GPSMain_C_SetHintText::CallFunc_GetActionMappingByName_OutMappings' has a wrong offset!");
static_assert(offsetof(WBP_GPSMain_C_SetHintText, CallFunc_GetInputSettings_ReturnValue_1) == 0x000020, "Member 'WBP_GPSMain_C_SetHintText::CallFunc_GetInputSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GPSMain_C_SetHintText, CallFunc_GetActionMappingByName_OutMappings_1) == 0x000028, "Member 'WBP_GPSMain_C_SetHintText::CallFunc_GetActionMappingByName_OutMappings_1' has a wrong offset!");
static_assert(offsetof(WBP_GPSMain_C_SetHintText, CallFunc_Key_GetDisplayName_ReturnValue) == 0x000038, "Member 'WBP_GPSMain_C_SetHintText::CallFunc_Key_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSMain_C_SetHintText, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'WBP_GPSMain_C_SetHintText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_GPSMain_C_SetHintText, K2Node_MakeArray_Array) == 0x0000A0, "Member 'WBP_GPSMain_C_SetHintText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_GPSMain_C_SetHintText, CallFunc_Key_GetDisplayName_ReturnValue_1) == 0x0000B0, "Member 'WBP_GPSMain_C_SetHintText::CallFunc_Key_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GPSMain_C_SetHintText, CallFunc_Format_ReturnValue) == 0x0000C8, "Member 'WBP_GPSMain_C_SetHintText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSMain_C_SetHintText, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000E0, "Member 'WBP_GPSMain_C_SetHintText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_GPSMain_C_SetHintText, K2Node_MakeArray_Array_1) == 0x000130, "Member 'WBP_GPSMain_C_SetHintText::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_GPSMain_C_SetHintText, CallFunc_Format_ReturnValue_1) == 0x000140, "Member 'WBP_GPSMain_C_SetHintText::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GPSMain_C_SetHintText, K2Node_SwitchInteger_CmpSuccess) == 0x000158, "Member 'WBP_GPSMain_C_SetHintText::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function WBP_GPSMain.WBP_GPSMain_C.SetPage
// 0x0004 (0x0004 - 0x0000)
struct WBP_GPSMain_C_SetPage final
{
public:
	int32                                         PageIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GPSMain_C_SetPage) == 0x000004, "Wrong alignment on WBP_GPSMain_C_SetPage");
static_assert(sizeof(WBP_GPSMain_C_SetPage) == 0x000004, "Wrong size on WBP_GPSMain_C_SetPage");
static_assert(offsetof(WBP_GPSMain_C_SetPage, PageIndex) == 0x000000, "Member 'WBP_GPSMain_C_SetPage::PageIndex' has a wrong offset!");

}

