#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LightingController

#include "Basic.hpp"

#include "BP_LightingController_classes.hpp"
#include "BP_LightingController_parameters.hpp"


namespace SDK
{

// Function BP_LightingController.BP_LightingController_C.ExecuteUbergraph_BP_LightingController
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LightingController_C::ExecuteUbergraph_BP_LightingController(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightingController_C", "ExecuteUbergraph_BP_LightingController");

	Params::BP_LightingController_C_ExecuteUbergraph_BP_LightingController Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LightingController.BP_LightingController_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LightingController_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightingController_C", "ReceiveTick");

	Params::BP_LightingController_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LightingController.BP_LightingController_C.SetPlayerInHUB
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InHub                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LightingController_C::SetPlayerInHUB(bool InHub)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightingController_C", "SetPlayerInHUB");

	Params::BP_LightingController_C_SetPlayerInHUB Parms{};

	Parms.InHub = InHub;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LightingController.BP_LightingController_C.SetSkyLightColor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LightingController_C::SetSkyLightColor(const struct FLinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightingController_C", "SetSkyLightColor");

	Params::BP_LightingController_C_SetSkyLightColor Parms{};

	Parms.Color = std::move(Color);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LightingController.BP_LightingController_C.SetSkylightOffset
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Offset                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LightingController_C::SetSkylightOffset(double Offset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightingController_C", "SetSkylightOffset");

	Params::BP_LightingController_C_SetSkylightOffset Parms{};

	Parms.Offset = Offset;

	UObject::ProcessEvent(Func, &Parms);
}

}

