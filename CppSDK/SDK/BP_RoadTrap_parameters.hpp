#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RoadTrap

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_RoadTrap.BP_RoadTrap_C.ExecuteUbergraph_BP_RoadTrap
// 0x0018 (0x0018 - 0x0000)
struct BP_RoadTrap_C_ExecuteUbergraph_BP_RoadTrap final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_NewParam;                             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_NewParam_1;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RoadTrap_C_ExecuteUbergraph_BP_RoadTrap) == 0x000008, "Wrong alignment on BP_RoadTrap_C_ExecuteUbergraph_BP_RoadTrap");
static_assert(sizeof(BP_RoadTrap_C_ExecuteUbergraph_BP_RoadTrap) == 0x000018, "Wrong size on BP_RoadTrap_C_ExecuteUbergraph_BP_RoadTrap");
static_assert(offsetof(BP_RoadTrap_C_ExecuteUbergraph_BP_RoadTrap, EntryPoint) == 0x000000, "Member 'BP_RoadTrap_C_ExecuteUbergraph_BP_RoadTrap::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_RoadTrap_C_ExecuteUbergraph_BP_RoadTrap, K2Node_Event_NewParam) == 0x000008, "Member 'BP_RoadTrap_C_ExecuteUbergraph_BP_RoadTrap::K2Node_Event_NewParam' has a wrong offset!");
static_assert(offsetof(BP_RoadTrap_C_ExecuteUbergraph_BP_RoadTrap, K2Node_Event_NewParam_1) == 0x000010, "Member 'BP_RoadTrap_C_ExecuteUbergraph_BP_RoadTrap::K2Node_Event_NewParam_1' has a wrong offset!");

// Function BP_RoadTrap.BP_RoadTrap_C.OnCatch
// 0x0008 (0x0008 - 0x0000)
struct BP_RoadTrap_C_OnCatch final
{
public:
	class APawn*                                  NewParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RoadTrap_C_OnCatch) == 0x000008, "Wrong alignment on BP_RoadTrap_C_OnCatch");
static_assert(sizeof(BP_RoadTrap_C_OnCatch) == 0x000008, "Wrong size on BP_RoadTrap_C_OnCatch");
static_assert(offsetof(BP_RoadTrap_C_OnCatch, NewParam) == 0x000000, "Member 'BP_RoadTrap_C_OnCatch::NewParam' has a wrong offset!");

// Function BP_RoadTrap.BP_RoadTrap_C.OnCatchMulti
// 0x0008 (0x0008 - 0x0000)
struct BP_RoadTrap_C_OnCatchMulti final
{
public:
	class APawn*                                  NewParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RoadTrap_C_OnCatchMulti) == 0x000008, "Wrong alignment on BP_RoadTrap_C_OnCatchMulti");
static_assert(sizeof(BP_RoadTrap_C_OnCatchMulti) == 0x000008, "Wrong size on BP_RoadTrap_C_OnCatchMulti");
static_assert(offsetof(BP_RoadTrap_C_OnCatchMulti, NewParam) == 0x000000, "Member 'BP_RoadTrap_C_OnCatchMulti::NewParam' has a wrong offset!");

}

