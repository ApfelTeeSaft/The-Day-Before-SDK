#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BunkerSystem

#include "Basic.hpp"


namespace SDK::Params
{

// Function BunkerSystem.BunkerSystem_C.DoMagic
// 0x0002 (0x0002 - 0x0000)
struct BunkerSystem_C_DoMagic final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BunkerSystem_C_DoMagic) == 0x000001, "Wrong alignment on BunkerSystem_C_DoMagic");
static_assert(sizeof(BunkerSystem_C_DoMagic) == 0x000002, "Wrong size on BunkerSystem_C_DoMagic");
static_assert(offsetof(BunkerSystem_C_DoMagic, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BunkerSystem_C_DoMagic::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BunkerSystem_C_DoMagic, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BunkerSystem_C_DoMagic::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BunkerSystem.BunkerSystem_C.GetBunkerGeneratorEnabledLight
// 0x0028 (0x0028 - 0x0000)
struct BunkerSystem_C_GetBunkerGeneratorEnabledLight final
{
public:
	class FString                                 BunkerID;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	double                                        Light;                                             // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Map_Find_Value;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BunkerSystem_C_GetBunkerGeneratorEnabledLight) == 0x000008, "Wrong alignment on BunkerSystem_C_GetBunkerGeneratorEnabledLight");
static_assert(sizeof(BunkerSystem_C_GetBunkerGeneratorEnabledLight) == 0x000028, "Wrong size on BunkerSystem_C_GetBunkerGeneratorEnabledLight");
static_assert(offsetof(BunkerSystem_C_GetBunkerGeneratorEnabledLight, BunkerID) == 0x000000, "Member 'BunkerSystem_C_GetBunkerGeneratorEnabledLight::BunkerID' has a wrong offset!");
static_assert(offsetof(BunkerSystem_C_GetBunkerGeneratorEnabledLight, Light) == 0x000010, "Member 'BunkerSystem_C_GetBunkerGeneratorEnabledLight::Light' has a wrong offset!");
static_assert(offsetof(BunkerSystem_C_GetBunkerGeneratorEnabledLight, CallFunc_Map_Find_Value) == 0x000018, "Member 'BunkerSystem_C_GetBunkerGeneratorEnabledLight::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BunkerSystem_C_GetBunkerGeneratorEnabledLight, CallFunc_Map_Find_ReturnValue) == 0x000020, "Member 'BunkerSystem_C_GetBunkerGeneratorEnabledLight::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BunkerSystem.BunkerSystem_C.GetBunkerLevelNameByElevator
// 0x0028 (0x0028 - 0x0000)
struct BunkerSystem_C_GetBunkerLevelNameByElevator final
{
public:
	class ABunkerElevatorSender_C*                Elevator;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 LevelName;                                         // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetBunkerLevelNameByID_LevelName;         // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BunkerSystem_C_GetBunkerLevelNameByElevator) == 0x000008, "Wrong alignment on BunkerSystem_C_GetBunkerLevelNameByElevator");
static_assert(sizeof(BunkerSystem_C_GetBunkerLevelNameByElevator) == 0x000028, "Wrong size on BunkerSystem_C_GetBunkerLevelNameByElevator");
static_assert(offsetof(BunkerSystem_C_GetBunkerLevelNameByElevator, Elevator) == 0x000000, "Member 'BunkerSystem_C_GetBunkerLevelNameByElevator::Elevator' has a wrong offset!");
static_assert(offsetof(BunkerSystem_C_GetBunkerLevelNameByElevator, LevelName) == 0x000008, "Member 'BunkerSystem_C_GetBunkerLevelNameByElevator::LevelName' has a wrong offset!");
static_assert(offsetof(BunkerSystem_C_GetBunkerLevelNameByElevator, CallFunc_GetBunkerLevelNameByID_LevelName) == 0x000018, "Member 'BunkerSystem_C_GetBunkerLevelNameByElevator::CallFunc_GetBunkerLevelNameByID_LevelName' has a wrong offset!");

// Function BunkerSystem.BunkerSystem_C.GetBunkerLevelNameByID
// 0x0038 (0x0038 - 0x0000)
struct BunkerSystem_C_GetBunkerLevelNameByID final
{
public:
	class FString                                 ID;                                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 LevelName;                                         // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Map_Find_Value;                           // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BunkerSystem_C_GetBunkerLevelNameByID) == 0x000008, "Wrong alignment on BunkerSystem_C_GetBunkerLevelNameByID");
static_assert(sizeof(BunkerSystem_C_GetBunkerLevelNameByID) == 0x000038, "Wrong size on BunkerSystem_C_GetBunkerLevelNameByID");
static_assert(offsetof(BunkerSystem_C_GetBunkerLevelNameByID, ID) == 0x000000, "Member 'BunkerSystem_C_GetBunkerLevelNameByID::ID' has a wrong offset!");
static_assert(offsetof(BunkerSystem_C_GetBunkerLevelNameByID, LevelName) == 0x000010, "Member 'BunkerSystem_C_GetBunkerLevelNameByID::LevelName' has a wrong offset!");
static_assert(offsetof(BunkerSystem_C_GetBunkerLevelNameByID, CallFunc_Map_Find_Value) == 0x000020, "Member 'BunkerSystem_C_GetBunkerLevelNameByID::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BunkerSystem_C_GetBunkerLevelNameByID, CallFunc_Map_Find_ReturnValue) == 0x000030, "Member 'BunkerSystem_C_GetBunkerLevelNameByID::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BunkerSystem.BunkerSystem_C.GetBunkerSkyLight
// 0x0028 (0x0028 - 0x0000)
struct BunkerSystem_C_GetBunkerSkyLight final
{
public:
	class FString                                 BunkerID;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	double                                        Light;                                             // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Map_Find_Value;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BunkerSystem_C_GetBunkerSkyLight) == 0x000008, "Wrong alignment on BunkerSystem_C_GetBunkerSkyLight");
static_assert(sizeof(BunkerSystem_C_GetBunkerSkyLight) == 0x000028, "Wrong size on BunkerSystem_C_GetBunkerSkyLight");
static_assert(offsetof(BunkerSystem_C_GetBunkerSkyLight, BunkerID) == 0x000000, "Member 'BunkerSystem_C_GetBunkerSkyLight::BunkerID' has a wrong offset!");
static_assert(offsetof(BunkerSystem_C_GetBunkerSkyLight, Light) == 0x000010, "Member 'BunkerSystem_C_GetBunkerSkyLight::Light' has a wrong offset!");
static_assert(offsetof(BunkerSystem_C_GetBunkerSkyLight, CallFunc_Map_Find_Value) == 0x000018, "Member 'BunkerSystem_C_GetBunkerSkyLight::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BunkerSystem_C_GetBunkerSkyLight, CallFunc_Map_Find_ReturnValue) == 0x000020, "Member 'BunkerSystem_C_GetBunkerSkyLight::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BunkerSystem.BunkerSystem_C.HasBunker
// 0x0018 (0x0018 - 0x0000)
struct BunkerSystem_C_HasBunker final
{
public:
	class FString                                 BunkerID;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Param_HasBunker;                                   // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BunkerSystem_C_HasBunker) == 0x000008, "Wrong alignment on BunkerSystem_C_HasBunker");
static_assert(sizeof(BunkerSystem_C_HasBunker) == 0x000018, "Wrong size on BunkerSystem_C_HasBunker");
static_assert(offsetof(BunkerSystem_C_HasBunker, BunkerID) == 0x000000, "Member 'BunkerSystem_C_HasBunker::BunkerID' has a wrong offset!");
static_assert(offsetof(BunkerSystem_C_HasBunker, Param_HasBunker) == 0x000010, "Member 'BunkerSystem_C_HasBunker::Param_HasBunker' has a wrong offset!");
static_assert(offsetof(BunkerSystem_C_HasBunker, CallFunc_Map_Contains_ReturnValue) == 0x000011, "Member 'BunkerSystem_C_HasBunker::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");

// Function BunkerSystem.BunkerSystem_C.HasBunkerGeneratorEnabledLight
// 0x0018 (0x0018 - 0x0000)
struct BunkerSystem_C_HasBunkerGeneratorEnabledLight final
{
public:
	class FString                                 BunkerID;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Has;                                               // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BunkerSystem_C_HasBunkerGeneratorEnabledLight) == 0x000008, "Wrong alignment on BunkerSystem_C_HasBunkerGeneratorEnabledLight");
static_assert(sizeof(BunkerSystem_C_HasBunkerGeneratorEnabledLight) == 0x000018, "Wrong size on BunkerSystem_C_HasBunkerGeneratorEnabledLight");
static_assert(offsetof(BunkerSystem_C_HasBunkerGeneratorEnabledLight, BunkerID) == 0x000000, "Member 'BunkerSystem_C_HasBunkerGeneratorEnabledLight::BunkerID' has a wrong offset!");
static_assert(offsetof(BunkerSystem_C_HasBunkerGeneratorEnabledLight, Has) == 0x000010, "Member 'BunkerSystem_C_HasBunkerGeneratorEnabledLight::Has' has a wrong offset!");
static_assert(offsetof(BunkerSystem_C_HasBunkerGeneratorEnabledLight, CallFunc_Map_Contains_ReturnValue) == 0x000011, "Member 'BunkerSystem_C_HasBunkerGeneratorEnabledLight::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");

// Function BunkerSystem.BunkerSystem_C.HasBunkerSkyLight
// 0x0018 (0x0018 - 0x0000)
struct BunkerSystem_C_HasBunkerSkyLight final
{
public:
	class FString                                 BunkerID;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Has;                                               // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BunkerSystem_C_HasBunkerSkyLight) == 0x000008, "Wrong alignment on BunkerSystem_C_HasBunkerSkyLight");
static_assert(sizeof(BunkerSystem_C_HasBunkerSkyLight) == 0x000018, "Wrong size on BunkerSystem_C_HasBunkerSkyLight");
static_assert(offsetof(BunkerSystem_C_HasBunkerSkyLight, BunkerID) == 0x000000, "Member 'BunkerSystem_C_HasBunkerSkyLight::BunkerID' has a wrong offset!");
static_assert(offsetof(BunkerSystem_C_HasBunkerSkyLight, Has) == 0x000010, "Member 'BunkerSystem_C_HasBunkerSkyLight::Has' has a wrong offset!");
static_assert(offsetof(BunkerSystem_C_HasBunkerSkyLight, CallFunc_Map_Contains_ReturnValue) == 0x000011, "Member 'BunkerSystem_C_HasBunkerSkyLight::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");

}

