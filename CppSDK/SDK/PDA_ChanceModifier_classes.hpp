#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PDA_ChanceModifier

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass PDA_ChanceModifier.PDA_ChanceModifier_C
// 0x0068 (0x0098 - 0x0030)
class UPDA_ChanceModifier_C final : public UPrimaryDataAsset
{
public:
	double                                        HungerThreshold;                                   // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FoodIncreaseCount;                                 // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ThirstThreshold;                                   // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DrinkIncreaseCount;                                // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        HealthThreshold;                                   // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AidIncreaseCount;                                  // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FoodMultiplier;                                    // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DrinkMultiplier;                                   // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AidMultiplier;                                     // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PistolThreshold;                                   // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PistolDivisor;                                     // 0x006C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RifleThreshold;                                    // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RifleDivisor;                                      // 0x0074(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ShotgunThreshold;                                  // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ShotgunDivisor;                                    // 0x007C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BackpackThreshold;                                 // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BackpackDivisor;                                   // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AidThreshold;                                      // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AidDivisor;                                        // 0x008C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MeleeThreshold;                                    // 0x0090(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MeleeDivisor;                                      // 0x0094(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void GetCalculatedChance(int32 Chance, const struct FS_LootChanceModifier& LootChanceMod, int32* Food, int32* Drink, int32* Aid, int32* Pistol, int32* Rifle, int32* Shotgun, int32* Backpack, int32* MeleeAndWeapon);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PDA_ChanceModifier_C">();
	}
	static class UPDA_ChanceModifier_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPDA_ChanceModifier_C>();
	}
};
static_assert(alignof(UPDA_ChanceModifier_C) == 0x000008, "Wrong alignment on UPDA_ChanceModifier_C");
static_assert(sizeof(UPDA_ChanceModifier_C) == 0x000098, "Wrong size on UPDA_ChanceModifier_C");
static_assert(offsetof(UPDA_ChanceModifier_C, HungerThreshold) == 0x000030, "Member 'UPDA_ChanceModifier_C::HungerThreshold' has a wrong offset!");
static_assert(offsetof(UPDA_ChanceModifier_C, FoodIncreaseCount) == 0x000038, "Member 'UPDA_ChanceModifier_C::FoodIncreaseCount' has a wrong offset!");
static_assert(offsetof(UPDA_ChanceModifier_C, ThirstThreshold) == 0x000040, "Member 'UPDA_ChanceModifier_C::ThirstThreshold' has a wrong offset!");
static_assert(offsetof(UPDA_ChanceModifier_C, DrinkIncreaseCount) == 0x000048, "Member 'UPDA_ChanceModifier_C::DrinkIncreaseCount' has a wrong offset!");
static_assert(offsetof(UPDA_ChanceModifier_C, HealthThreshold) == 0x000050, "Member 'UPDA_ChanceModifier_C::HealthThreshold' has a wrong offset!");
static_assert(offsetof(UPDA_ChanceModifier_C, AidIncreaseCount) == 0x000058, "Member 'UPDA_ChanceModifier_C::AidIncreaseCount' has a wrong offset!");
static_assert(offsetof(UPDA_ChanceModifier_C, FoodMultiplier) == 0x00005C, "Member 'UPDA_ChanceModifier_C::FoodMultiplier' has a wrong offset!");
static_assert(offsetof(UPDA_ChanceModifier_C, DrinkMultiplier) == 0x000060, "Member 'UPDA_ChanceModifier_C::DrinkMultiplier' has a wrong offset!");
static_assert(offsetof(UPDA_ChanceModifier_C, AidMultiplier) == 0x000064, "Member 'UPDA_ChanceModifier_C::AidMultiplier' has a wrong offset!");
static_assert(offsetof(UPDA_ChanceModifier_C, PistolThreshold) == 0x000068, "Member 'UPDA_ChanceModifier_C::PistolThreshold' has a wrong offset!");
static_assert(offsetof(UPDA_ChanceModifier_C, PistolDivisor) == 0x00006C, "Member 'UPDA_ChanceModifier_C::PistolDivisor' has a wrong offset!");
static_assert(offsetof(UPDA_ChanceModifier_C, RifleThreshold) == 0x000070, "Member 'UPDA_ChanceModifier_C::RifleThreshold' has a wrong offset!");
static_assert(offsetof(UPDA_ChanceModifier_C, RifleDivisor) == 0x000074, "Member 'UPDA_ChanceModifier_C::RifleDivisor' has a wrong offset!");
static_assert(offsetof(UPDA_ChanceModifier_C, ShotgunThreshold) == 0x000078, "Member 'UPDA_ChanceModifier_C::ShotgunThreshold' has a wrong offset!");
static_assert(offsetof(UPDA_ChanceModifier_C, ShotgunDivisor) == 0x00007C, "Member 'UPDA_ChanceModifier_C::ShotgunDivisor' has a wrong offset!");
static_assert(offsetof(UPDA_ChanceModifier_C, BackpackThreshold) == 0x000080, "Member 'UPDA_ChanceModifier_C::BackpackThreshold' has a wrong offset!");
static_assert(offsetof(UPDA_ChanceModifier_C, BackpackDivisor) == 0x000084, "Member 'UPDA_ChanceModifier_C::BackpackDivisor' has a wrong offset!");
static_assert(offsetof(UPDA_ChanceModifier_C, AidThreshold) == 0x000088, "Member 'UPDA_ChanceModifier_C::AidThreshold' has a wrong offset!");
static_assert(offsetof(UPDA_ChanceModifier_C, AidDivisor) == 0x00008C, "Member 'UPDA_ChanceModifier_C::AidDivisor' has a wrong offset!");
static_assert(offsetof(UPDA_ChanceModifier_C, MeleeThreshold) == 0x000090, "Member 'UPDA_ChanceModifier_C::MeleeThreshold' has a wrong offset!");
static_assert(offsetof(UPDA_ChanceModifier_C, MeleeDivisor) == 0x000094, "Member 'UPDA_ChanceModifier_C::MeleeDivisor' has a wrong offset!");

}

