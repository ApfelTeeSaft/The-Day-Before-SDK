#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Task_Zombie_ChaseTarget

#include "Basic.hpp"

#include "Task_Zombie_ChaseTarget_classes.hpp"
#include "Task_Zombie_ChaseTarget_parameters.hpp"


namespace SDK
{

// Function Task_Zombie_ChaseTarget.Task_Zombie_ChaseTarget_C.Can Start Running
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    StartRunning                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTask_Zombie_ChaseTarget_C::Can_Start_Running(bool* StartRunning)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_Zombie_ChaseTarget_C", "Can Start Running");

	Params::Task_Zombie_ChaseTarget_C_Can_Start_Running Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (StartRunning != nullptr)
		*StartRunning = Parms.StartRunning;
}


// Function Task_Zombie_ChaseTarget.Task_Zombie_ChaseTarget_C.Continue Chasing
// (Public, BlueprintCallable, BlueprintEvent)

void UTask_Zombie_ChaseTarget_C::Continue_Chasing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_Zombie_ChaseTarget_C", "Continue Chasing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Task_Zombie_ChaseTarget.Task_Zombie_ChaseTarget_C.ExecuteUbergraph_Task_Zombie_ChaseTarget
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTask_Zombie_ChaseTarget_C::ExecuteUbergraph_Task_Zombie_ChaseTarget(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_Zombie_ChaseTarget_C", "ExecuteUbergraph_Task_Zombie_ChaseTarget");

	Params::Task_Zombie_ChaseTarget_C_ExecuteUbergraph_Task_Zombie_ChaseTarget Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Task_Zombie_ChaseTarget.Task_Zombie_ChaseTarget_C.IsAttackSetted
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    AttackIsSetted                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTask_Zombie_ChaseTarget_C::IsAttackSetted(bool* AttackIsSetted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_Zombie_ChaseTarget_C", "IsAttackSetted");

	Params::Task_Zombie_ChaseTarget_C_IsAttackSetted Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttackIsSetted != nullptr)
		*AttackIsSetted = Parms.AttackIsSetted;
}


// Function Task_Zombie_ChaseTarget.Task_Zombie_ChaseTarget_C.OnEndAttack
// (BlueprintCallable, BlueprintEvent)

void UTask_Zombie_ChaseTarget_C::OnEndAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_Zombie_ChaseTarget_C", "OnEndAttack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Task_Zombie_ChaseTarget.Task_Zombie_ChaseTarget_C.OnFinishTask
// (Public, BlueprintCallable, BlueprintEvent)

void UTask_Zombie_ChaseTarget_C::OnFinishTask()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_Zombie_ChaseTarget_C", "OnFinishTask");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Task_Zombie_ChaseTarget.Task_Zombie_ChaseTarget_C.ReceiveAbortAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UTask_Zombie_ChaseTarget_C::ReceiveAbortAI(class AAIController* OwnerController, class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_Zombie_ChaseTarget_C", "ReceiveAbortAI");

	Params::Task_Zombie_ChaseTarget_C_ReceiveAbortAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Task_Zombie_ChaseTarget.Task_Zombie_ChaseTarget_C.ReceiveExecuteAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UTask_Zombie_ChaseTarget_C::ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_Zombie_ChaseTarget_C", "ReceiveExecuteAI");

	Params::Task_Zombie_ChaseTarget_C_ReceiveExecuteAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Task_Zombie_ChaseTarget.Task_Zombie_ChaseTarget_C.RestartMovement
// (BlueprintCallable, BlueprintEvent)

void UTask_Zombie_ChaseTarget_C::RestartMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_Zombie_ChaseTarget_C", "RestartMovement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Task_Zombie_ChaseTarget.Task_Zombie_ChaseTarget_C.WaitTillStart
// (Public, BlueprintCallable, BlueprintEvent)

void UTask_Zombie_ChaseTarget_C::WaitTillStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_Zombie_ChaseTarget_C", "WaitTillStart");

	UObject::ProcessEvent(Func, nullptr);
}

}

