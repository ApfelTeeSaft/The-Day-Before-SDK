#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Button

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Button.W_Button_C
// 0x0180 (0x0400 - 0x0280)
class UW_Button_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       ResetRing;                                         // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FillingRing;                                       // 0x0290(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UButton*                                Button;                                            // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_BG;                                          // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Button;                                      // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                Spacer;                                            // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text;                                              // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnClicked;                                         // 0x02C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FText                                   ButtonText;                                        // 0x02D0(0x0018)(Edit, BlueprintVisible)
	struct FSlateFontInfo                         Font;                                              // 0x02E8(0x0058)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FMargin                                TextPadding;                                       // 0x0340(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              ShadowOffset;                                      // 0x0350(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ShadowColor;                                       // 0x0360(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              SpacerSize;                                        // 0x0370(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WithCircle;                                        // 0x0380(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPressed;                                         // 0x0381(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_382[0x6];                                      // 0x0382(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               RingMaterial;                                      // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Enabled;                                           // 0x0390(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391[0x7];                                      // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnPressed;                                         // 0x0398(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnReleased;                                        // 0x03A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsEnabled;                                         // 0x03B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B9[0x7];                                      // 0x03B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CircleButtonOffsets;                               // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BGOffsets;                                         // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        EnabledOpacity;                                    // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DisabledOpacity;                                   // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             ButtonTexture;                                     // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCapsule;                                         // 0x03E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E9[0x7];                                      // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CapsuleButtonOffsetVertical;                       // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CapsuleButtonOffsetHorizontal;                     // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__Button_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__Button_K2Node_ComponentBoundEvent_1_OnButtonPressedEvent__DelegateSignature();
	void BndEvt__Button_K2Node_ComponentBoundEvent_2_OnButtonReleasedEvent__DelegateSignature();
	void Construct();
	void ExecuteUbergraph_W_Button(int32 EntryPoint);
	void OnClicked__DelegateSignature();
	void OnPressed__DelegateSignature();
	void OnReleased__DelegateSignature();
	void PreConstruct(bool IsDesignTime);
	void RingAnimationStart(double PlayTime);
	void RingAnimationStop();
	void SetEnabled(bool NewEnabled);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Button_C">();
	}
	static class UW_Button_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Button_C>();
	}
};
static_assert(alignof(UW_Button_C) == 0x000008, "Wrong alignment on UW_Button_C");
static_assert(sizeof(UW_Button_C) == 0x000400, "Wrong size on UW_Button_C");
static_assert(offsetof(UW_Button_C, UberGraphFrame) == 0x000280, "Member 'UW_Button_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Button_C, ResetRing) == 0x000288, "Member 'UW_Button_C::ResetRing' has a wrong offset!");
static_assert(offsetof(UW_Button_C, FillingRing) == 0x000290, "Member 'UW_Button_C::FillingRing' has a wrong offset!");
static_assert(offsetof(UW_Button_C, Button) == 0x000298, "Member 'UW_Button_C::Button' has a wrong offset!");
static_assert(offsetof(UW_Button_C, Image_BG) == 0x0002A0, "Member 'UW_Button_C::Image_BG' has a wrong offset!");
static_assert(offsetof(UW_Button_C, Image_Button) == 0x0002A8, "Member 'UW_Button_C::Image_Button' has a wrong offset!");
static_assert(offsetof(UW_Button_C, Spacer) == 0x0002B0, "Member 'UW_Button_C::Spacer' has a wrong offset!");
static_assert(offsetof(UW_Button_C, Text) == 0x0002B8, "Member 'UW_Button_C::Text' has a wrong offset!");
static_assert(offsetof(UW_Button_C, OnClicked) == 0x0002C0, "Member 'UW_Button_C::OnClicked' has a wrong offset!");
static_assert(offsetof(UW_Button_C, ButtonText) == 0x0002D0, "Member 'UW_Button_C::ButtonText' has a wrong offset!");
static_assert(offsetof(UW_Button_C, Font) == 0x0002E8, "Member 'UW_Button_C::Font' has a wrong offset!");
static_assert(offsetof(UW_Button_C, TextPadding) == 0x000340, "Member 'UW_Button_C::TextPadding' has a wrong offset!");
static_assert(offsetof(UW_Button_C, ShadowOffset) == 0x000350, "Member 'UW_Button_C::ShadowOffset' has a wrong offset!");
static_assert(offsetof(UW_Button_C, ShadowColor) == 0x000360, "Member 'UW_Button_C::ShadowColor' has a wrong offset!");
static_assert(offsetof(UW_Button_C, SpacerSize) == 0x000370, "Member 'UW_Button_C::SpacerSize' has a wrong offset!");
static_assert(offsetof(UW_Button_C, WithCircle) == 0x000380, "Member 'UW_Button_C::WithCircle' has a wrong offset!");
static_assert(offsetof(UW_Button_C, IsPressed) == 0x000381, "Member 'UW_Button_C::IsPressed' has a wrong offset!");
static_assert(offsetof(UW_Button_C, RingMaterial) == 0x000388, "Member 'UW_Button_C::RingMaterial' has a wrong offset!");
static_assert(offsetof(UW_Button_C, Enabled) == 0x000390, "Member 'UW_Button_C::Enabled' has a wrong offset!");
static_assert(offsetof(UW_Button_C, OnPressed) == 0x000398, "Member 'UW_Button_C::OnPressed' has a wrong offset!");
static_assert(offsetof(UW_Button_C, OnReleased) == 0x0003A8, "Member 'UW_Button_C::OnReleased' has a wrong offset!");
static_assert(offsetof(UW_Button_C, IsEnabled) == 0x0003B8, "Member 'UW_Button_C::IsEnabled' has a wrong offset!");
static_assert(offsetof(UW_Button_C, CircleButtonOffsets) == 0x0003C0, "Member 'UW_Button_C::CircleButtonOffsets' has a wrong offset!");
static_assert(offsetof(UW_Button_C, BGOffsets) == 0x0003C8, "Member 'UW_Button_C::BGOffsets' has a wrong offset!");
static_assert(offsetof(UW_Button_C, EnabledOpacity) == 0x0003D0, "Member 'UW_Button_C::EnabledOpacity' has a wrong offset!");
static_assert(offsetof(UW_Button_C, DisabledOpacity) == 0x0003D8, "Member 'UW_Button_C::DisabledOpacity' has a wrong offset!");
static_assert(offsetof(UW_Button_C, ButtonTexture) == 0x0003E0, "Member 'UW_Button_C::ButtonTexture' has a wrong offset!");
static_assert(offsetof(UW_Button_C, IsCapsule) == 0x0003E8, "Member 'UW_Button_C::IsCapsule' has a wrong offset!");
static_assert(offsetof(UW_Button_C, CapsuleButtonOffsetVertical) == 0x0003F0, "Member 'UW_Button_C::CapsuleButtonOffsetVertical' has a wrong offset!");
static_assert(offsetof(UW_Button_C, CapsuleButtonOffsetHorizontal) == 0x0003F8, "Member 'UW_Button_C::CapsuleButtonOffsetHorizontal' has a wrong offset!");

}

