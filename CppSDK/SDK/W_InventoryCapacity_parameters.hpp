#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_InventoryCapacity

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function W_InventoryCapacity.W_InventoryCapacity_C.Activate
// 0x0008 (0x0008 - 0x0000)
struct W_InventoryCapacity_C_Activate final
{
public:
	class UJSIContainer_C*                        Param_Container;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_InventoryCapacity_C_Activate) == 0x000008, "Wrong alignment on W_InventoryCapacity_C_Activate");
static_assert(sizeof(W_InventoryCapacity_C_Activate) == 0x000008, "Wrong size on W_InventoryCapacity_C_Activate");
static_assert(offsetof(W_InventoryCapacity_C_Activate, Param_Container) == 0x000000, "Member 'W_InventoryCapacity_C_Activate::Param_Container' has a wrong offset!");

// Function W_InventoryCapacity.W_InventoryCapacity_C.ExecuteUbergraph_W_InventoryCapacity
// 0x0030 (0x0030 - 0x0000)
struct W_InventoryCapacity_C_ExecuteUbergraph_W_InventoryCapacity final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        K2Node_CustomEvent_Container;                      // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_InventoryCapacity_C_ExecuteUbergraph_W_InventoryCapacity) == 0x000008, "Wrong alignment on W_InventoryCapacity_C_ExecuteUbergraph_W_InventoryCapacity");
static_assert(sizeof(W_InventoryCapacity_C_ExecuteUbergraph_W_InventoryCapacity) == 0x000030, "Wrong size on W_InventoryCapacity_C_ExecuteUbergraph_W_InventoryCapacity");
static_assert(offsetof(W_InventoryCapacity_C_ExecuteUbergraph_W_InventoryCapacity, EntryPoint) == 0x000000, "Member 'W_InventoryCapacity_C_ExecuteUbergraph_W_InventoryCapacity::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_InventoryCapacity_C_ExecuteUbergraph_W_InventoryCapacity, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000004, "Member 'W_InventoryCapacity_C_ExecuteUbergraph_W_InventoryCapacity::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InventoryCapacity_C_ExecuteUbergraph_W_InventoryCapacity, K2Node_CustomEvent_Container) == 0x000008, "Member 'W_InventoryCapacity_C_ExecuteUbergraph_W_InventoryCapacity::K2Node_CustomEvent_Container' has a wrong offset!");
static_assert(offsetof(W_InventoryCapacity_C_ExecuteUbergraph_W_InventoryCapacity, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'W_InventoryCapacity_C_ExecuteUbergraph_W_InventoryCapacity::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InventoryCapacity_C_ExecuteUbergraph_W_InventoryCapacity, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'W_InventoryCapacity_C_ExecuteUbergraph_W_InventoryCapacity::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_InventoryCapacity_C_ExecuteUbergraph_W_InventoryCapacity, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000028, "Member 'W_InventoryCapacity_C_ExecuteUbergraph_W_InventoryCapacity::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function W_InventoryCapacity.W_InventoryCapacity_C.UpdateText
// 0x0010 (0x0010 - 0x0000)
struct W_InventoryCapacity_C_UpdateText final
{
public:
	int32                                         Capacity;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FreeSlots;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetContainerCapacity_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfFreeSlots_Num;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_InventoryCapacity_C_UpdateText) == 0x000004, "Wrong alignment on W_InventoryCapacity_C_UpdateText");
static_assert(sizeof(W_InventoryCapacity_C_UpdateText) == 0x000010, "Wrong size on W_InventoryCapacity_C_UpdateText");
static_assert(offsetof(W_InventoryCapacity_C_UpdateText, Capacity) == 0x000000, "Member 'W_InventoryCapacity_C_UpdateText::Capacity' has a wrong offset!");
static_assert(offsetof(W_InventoryCapacity_C_UpdateText, FreeSlots) == 0x000004, "Member 'W_InventoryCapacity_C_UpdateText::FreeSlots' has a wrong offset!");
static_assert(offsetof(W_InventoryCapacity_C_UpdateText, CallFunc_GetContainerCapacity_ReturnValue) == 0x000008, "Member 'W_InventoryCapacity_C_UpdateText::CallFunc_GetContainerCapacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InventoryCapacity_C_UpdateText, CallFunc_GetNumberOfFreeSlots_Num) == 0x00000C, "Member 'W_InventoryCapacity_C_UpdateText::CallFunc_GetNumberOfFreeSlots_Num' has a wrong offset!");

}

