#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CampTent

#include "Basic.hpp"

#include "E_InteractType_structs.hpp"
#include "Engine_structs.hpp"
#include "BP_CampPart_classes.hpp"
#include "E_ActorType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CampTent.BP_CampTent_C
// 0x0038 (0x02D8 - 0x02A0)
class ABP_CampTent_C final : public ABP_CampPart_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_CampTent_C;                      // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          Box;                                               // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_SleepingBag_01a;                                // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Tent_02d;                                       // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Players;                                           // 0x02C8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)

public:
	void AddPlayer(class AActor* Player);
	void CanAdd(bool* Can);
	void DestroyInteractable();
	void DoHeal(class AActor* NewParam);
	void DoMagic();
	void ExecuteUbergraph_BP_CampTent(int32 EntryPoint);
	void GetActorType(E_ActorType* ActorType);
	void IsLocked_(bool* Result);
	void OnBeginInteract(class APawn* Player);
	void OnFocused(class APawn* Player, class AActor* HighlightActor, class UActorComponent* HighlightActorComponent, E_InteractType* InteractType, double* LateTime);
	void OnInteract(class APawn* Player);
	void OnInteract2(class APawn* Player);
	void OnInteract3(class APawn* Player);
	void OnInteractVehicle(class APawn* Player, int32 SitIndex, bool SkipAnimation);
	void OnLocalInteract(class APawn* Player);
	void OnLostFocus(class APawn* Player);
	void OnPlaceCamp();
	void OnPlayerQuit(class ASurvivalPlayer_C* Player);
	void OnSeen(class APawn* Player);
	void OnSquadCheckComplete();
	void OnStopInteract(class APawn* Player);
	void ReceiveTick(float DeltaSeconds);
	void RemovePlayer(class AActor* Player);
	void Run_Lockpicking();
	void Set3DWidgetVisibility(bool Visible);
	void SetTutorial3DWidgetVisibility(bool Visible);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CampTent_C">();
	}
	static class ABP_CampTent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CampTent_C>();
	}
};
static_assert(alignof(ABP_CampTent_C) == 0x000008, "Wrong alignment on ABP_CampTent_C");
static_assert(sizeof(ABP_CampTent_C) == 0x0002D8, "Wrong size on ABP_CampTent_C");
static_assert(offsetof(ABP_CampTent_C, UberGraphFrame_BP_CampTent_C) == 0x0002A0, "Member 'ABP_CampTent_C::UberGraphFrame_BP_CampTent_C' has a wrong offset!");
static_assert(offsetof(ABP_CampTent_C, Box) == 0x0002A8, "Member 'ABP_CampTent_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_CampTent_C, SM_SleepingBag_01a) == 0x0002B0, "Member 'ABP_CampTent_C::SM_SleepingBag_01a' has a wrong offset!");
static_assert(offsetof(ABP_CampTent_C, Arrow) == 0x0002B8, "Member 'ABP_CampTent_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_CampTent_C, SM_Tent_02d) == 0x0002C0, "Member 'ABP_CampTent_C::SM_Tent_02d' has a wrong offset!");
static_assert(offsetof(ABP_CampTent_C, Players) == 0x0002C8, "Member 'ABP_CampTent_C::Players' has a wrong offset!");

}

