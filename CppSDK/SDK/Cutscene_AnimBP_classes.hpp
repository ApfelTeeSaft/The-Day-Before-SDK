#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Cutscene_AnimBP

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "Cutscene_AnimBP_structs.hpp"
#include "BPE_Weapon_Type_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass Cutscene_AnimBP.Cutscene_AnimBP_C
// 0x1300 (0x1650 - 0x0350)
class UCutscene_AnimBP_C final : public UAnimInstance
{
public:
	uint8                                         Pad_348[0x8];                                      // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct Cutscene_AnimBP::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0358(0x0030)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0388(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0390(0x0008)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_4;                    // 0x0398(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_11;                    // 0x04A0(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_2;                  // 0x04C8(0x00E0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_10;                    // 0x05A8(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x05D0(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_9;                     // 0x0618(0x0028)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_4;          // 0x0640(0x0118)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_8;                     // 0x0758(0x0028)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_3;          // 0x0780(0x0118)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_2;          // 0x0898(0x0118)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_1;          // 0x09B0(0x0118)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_7;                     // 0x0AC8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x0AF0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x0B18(0x0028)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace;            // 0x0B40(0x0118)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x0C58(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x0CA0(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x0CC8(0x00E0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_3;                    // 0x0DA8(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x0EB0(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x0ED8(0x0108)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0FE0(0x00E0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_3;                              // 0x10C0(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x1108(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x1130(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x1158(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x1180(0x0108)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x1288(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x12D0(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x1318(0x0108)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x1420(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x1440(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x1488(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x14D0(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x1518(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x1560(0x0048)()
	EBPE_Weapon_Type                              WeaponType;                                        // 0x15A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15A9[0x7];                                     // 0x15A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Yaw;                                               // 0x15B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Pitch;                                             // 0x15B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACutscenePersAnim_C*                    PersActor;                                         // 0x15C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          NeedAO;                                            // 0x15C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C9[0x7];                                     // 0x15C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             LeftHandEffector;                                  // 0x15D0(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NeedHandEffector;                                  // 0x1630(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dead;                                              // 0x1631(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1632[0x6];                                     // 0x1632(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 OwnerMesh;                                         // 0x1638(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          InCar;                                             // 0x1640(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void ExecuteUbergraph_Cutscene_AnimBP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Cutscene_AnimBP_C">();
	}
	static class UCutscene_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCutscene_AnimBP_C>();
	}
};
static_assert(alignof(UCutscene_AnimBP_C) == 0x000010, "Wrong alignment on UCutscene_AnimBP_C");
static_assert(sizeof(UCutscene_AnimBP_C) == 0x001650, "Wrong size on UCutscene_AnimBP_C");
static_assert(offsetof(UCutscene_AnimBP_C, UberGraphFrame) == 0x000350, "Member 'UCutscene_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, __AnimBlueprintMutables) == 0x000358, "Member 'UCutscene_AnimBP_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, AnimBlueprintExtension_PropertyAccess) == 0x000388, "Member 'UCutscene_AnimBP_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, AnimBlueprintExtension_Base) == 0x000390, "Member 'UCutscene_AnimBP_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, AnimGraphNode_SaveCachedPose_4) == 0x000398, "Member 'UCutscene_AnimBP_C::AnimGraphNode_SaveCachedPose_4' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, AnimGraphNode_UseCachedPose_11) == 0x0004A0, "Member 'UCutscene_AnimBP_C::AnimGraphNode_UseCachedPose_11' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, AnimGraphNode_LayeredBoneBlend_2) == 0x0004C8, "Member 'UCutscene_AnimBP_C::AnimGraphNode_LayeredBoneBlend_2' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, AnimGraphNode_UseCachedPose_10) == 0x0005A8, "Member 'UCutscene_AnimBP_C::AnimGraphNode_UseCachedPose_10' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, AnimGraphNode_BlendListByBool_1) == 0x0005D0, "Member 'UCutscene_AnimBP_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, AnimGraphNode_UseCachedPose_9) == 0x000618, "Member 'UCutscene_AnimBP_C::AnimGraphNode_UseCachedPose_9' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, AnimGraphNode_RotationOffsetBlendSpace_4) == 0x000640, "Member 'UCutscene_AnimBP_C::AnimGraphNode_RotationOffsetBlendSpace_4' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, AnimGraphNode_UseCachedPose_8) == 0x000758, "Member 'UCutscene_AnimBP_C::AnimGraphNode_UseCachedPose_8' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, AnimGraphNode_RotationOffsetBlendSpace_3) == 0x000780, "Member 'UCutscene_AnimBP_C::AnimGraphNode_RotationOffsetBlendSpace_3' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, AnimGraphNode_RotationOffsetBlendSpace_2) == 0x000898, "Member 'UCutscene_AnimBP_C::AnimGraphNode_RotationOffsetBlendSpace_2' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, AnimGraphNode_RotationOffsetBlendSpace_1) == 0x0009B0, "Member 'UCutscene_AnimBP_C::AnimGraphNode_RotationOffsetBlendSpace_1' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, AnimGraphNode_UseCachedPose_7) == 0x000AC8, "Member 'UCutscene_AnimBP_C::AnimGraphNode_UseCachedPose_7' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, AnimGraphNode_UseCachedPose_6) == 0x000AF0, "Member 'UCutscene_AnimBP_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, AnimGraphNode_UseCachedPose_5) == 0x000B18, "Member 'UCutscene_AnimBP_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, AnimGraphNode_RotationOffsetBlendSpace) == 0x000B40, "Member 'UCutscene_AnimBP_C::AnimGraphNode_RotationOffsetBlendSpace' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, AnimGraphNode_BlendListByEnum) == 0x000C58, "Member 'UCutscene_AnimBP_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, AnimGraphNode_UseCachedPose_4) == 0x000CA0, "Member 'UCutscene_AnimBP_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, AnimGraphNode_LayeredBoneBlend_1) == 0x000CC8, "Member 'UCutscene_AnimBP_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, AnimGraphNode_SaveCachedPose_3) == 0x000DA8, "Member 'UCutscene_AnimBP_C::AnimGraphNode_SaveCachedPose_3' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, AnimGraphNode_UseCachedPose_3) == 0x000EB0, "Member 'UCutscene_AnimBP_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, AnimGraphNode_SaveCachedPose_2) == 0x000ED8, "Member 'UCutscene_AnimBP_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, AnimGraphNode_LayeredBoneBlend) == 0x000FE0, "Member 'UCutscene_AnimBP_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, AnimGraphNode_Slot_3) == 0x0010C0, "Member 'UCutscene_AnimBP_C::AnimGraphNode_Slot_3' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, AnimGraphNode_UseCachedPose_2) == 0x001108, "Member 'UCutscene_AnimBP_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, AnimGraphNode_UseCachedPose_1) == 0x001130, "Member 'UCutscene_AnimBP_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, AnimGraphNode_UseCachedPose) == 0x001158, "Member 'UCutscene_AnimBP_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, AnimGraphNode_SaveCachedPose_1) == 0x001180, "Member 'UCutscene_AnimBP_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, AnimGraphNode_SequencePlayer_2) == 0x001288, "Member 'UCutscene_AnimBP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, AnimGraphNode_Slot_2) == 0x0012D0, "Member 'UCutscene_AnimBP_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, AnimGraphNode_SaveCachedPose) == 0x001318, "Member 'UCutscene_AnimBP_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, AnimGraphNode_Root) == 0x001420, "Member 'UCutscene_AnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, AnimGraphNode_Slot_1) == 0x001440, "Member 'UCutscene_AnimBP_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x001488, "Member 'UCutscene_AnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, AnimGraphNode_SequencePlayer) == 0x0014D0, "Member 'UCutscene_AnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, AnimGraphNode_BlendListByBool) == 0x001518, "Member 'UCutscene_AnimBP_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, AnimGraphNode_Slot) == 0x001560, "Member 'UCutscene_AnimBP_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, WeaponType) == 0x0015A8, "Member 'UCutscene_AnimBP_C::WeaponType' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, Yaw) == 0x0015B0, "Member 'UCutscene_AnimBP_C::Yaw' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, Pitch) == 0x0015B8, "Member 'UCutscene_AnimBP_C::Pitch' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, PersActor) == 0x0015C0, "Member 'UCutscene_AnimBP_C::PersActor' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, NeedAO) == 0x0015C8, "Member 'UCutscene_AnimBP_C::NeedAO' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, LeftHandEffector) == 0x0015D0, "Member 'UCutscene_AnimBP_C::LeftHandEffector' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, NeedHandEffector) == 0x001630, "Member 'UCutscene_AnimBP_C::NeedHandEffector' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, Dead) == 0x001631, "Member 'UCutscene_AnimBP_C::Dead' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, OwnerMesh) == 0x001638, "Member 'UCutscene_AnimBP_C::OwnerMesh' has a wrong offset!");
static_assert(offsetof(UCutscene_AnimBP_C, InCar) == 0x001640, "Member 'UCutscene_AnimBP_C::InCar' has a wrong offset!");

}

