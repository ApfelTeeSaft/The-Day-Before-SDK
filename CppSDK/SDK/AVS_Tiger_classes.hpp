#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AVS_Tiger

#include "Basic.hpp"

#include "AVS_VehicleMaster_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass AVS_Tiger.AVS_Tiger_C
// 0x00A0 (0x1090 - 0x0FF0)
class AAVS_Tiger_C final : public AAVS_VehicleMaster_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_AVS_Tiger_C;                        // 0x0FE8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      FlowmapBrush_NPC1;                                 // 0x0FF0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      FlowmapBrush_NPC;                                  // 0x0FF8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      FlowmapBrush_NPC3;                                 // 0x1000(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      FlowmapBrush_NPC2;                                 // 0x1008(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Tiger_Back;                                        // 0x1010(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Tiger_Hood;                                        // 0x1018(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Tiger_DoorFL;                                      // 0x1020(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Tiger_DoorBR;                                      // 0x1028(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Tiger_DoorBL;                                      // 0x1030(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Tiger_DoorFR;                                      // 0x1038(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Tiger_Door_FL_Door_FL_window;                      // 0x1040(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Tiger_Door_FR_Door_FR_window;                      // 0x1048(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Tiger_Door_BR_Door_BR_window;                      // 0x1050(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Tiger_Door_BL_Door_BL_window;                      // 0x1058(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Tiger_Kabina_Kabina_windows;                       // 0x1060(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Tiger_Kabina_Kabina;                               // 0x1068(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Tiger_Door_FR_Door_FR;                             // 0x1070(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Tiger_Door_FL_Door_FL;                             // 0x1078(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Tiger_Door_BR_Door_BR;                             // 0x1080(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Tiger_Door_BL_Door_BL;                             // 0x1088(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_AVS_Tiger(int32 EntryPoint);
	void AttachDoorToBone();
	void AttachDoorToMainMesh();
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AVS_Tiger_C">();
	}
	static class AAVS_Tiger_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAVS_Tiger_C>();
	}
};
static_assert(alignof(AAVS_Tiger_C) == 0x000010, "Wrong alignment on AAVS_Tiger_C");
static_assert(sizeof(AAVS_Tiger_C) == 0x001090, "Wrong size on AAVS_Tiger_C");
static_assert(offsetof(AAVS_Tiger_C, UberGraphFrame_AVS_Tiger_C) == 0x000FE8, "Member 'AAVS_Tiger_C::UberGraphFrame_AVS_Tiger_C' has a wrong offset!");
static_assert(offsetof(AAVS_Tiger_C, FlowmapBrush_NPC1) == 0x000FF0, "Member 'AAVS_Tiger_C::FlowmapBrush_NPC1' has a wrong offset!");
static_assert(offsetof(AAVS_Tiger_C, FlowmapBrush_NPC) == 0x000FF8, "Member 'AAVS_Tiger_C::FlowmapBrush_NPC' has a wrong offset!");
static_assert(offsetof(AAVS_Tiger_C, FlowmapBrush_NPC3) == 0x001000, "Member 'AAVS_Tiger_C::FlowmapBrush_NPC3' has a wrong offset!");
static_assert(offsetof(AAVS_Tiger_C, FlowmapBrush_NPC2) == 0x001008, "Member 'AAVS_Tiger_C::FlowmapBrush_NPC2' has a wrong offset!");
static_assert(offsetof(AAVS_Tiger_C, Tiger_Back) == 0x001010, "Member 'AAVS_Tiger_C::Tiger_Back' has a wrong offset!");
static_assert(offsetof(AAVS_Tiger_C, Tiger_Hood) == 0x001018, "Member 'AAVS_Tiger_C::Tiger_Hood' has a wrong offset!");
static_assert(offsetof(AAVS_Tiger_C, Tiger_DoorFL) == 0x001020, "Member 'AAVS_Tiger_C::Tiger_DoorFL' has a wrong offset!");
static_assert(offsetof(AAVS_Tiger_C, Tiger_DoorBR) == 0x001028, "Member 'AAVS_Tiger_C::Tiger_DoorBR' has a wrong offset!");
static_assert(offsetof(AAVS_Tiger_C, Tiger_DoorBL) == 0x001030, "Member 'AAVS_Tiger_C::Tiger_DoorBL' has a wrong offset!");
static_assert(offsetof(AAVS_Tiger_C, Tiger_DoorFR) == 0x001038, "Member 'AAVS_Tiger_C::Tiger_DoorFR' has a wrong offset!");
static_assert(offsetof(AAVS_Tiger_C, Tiger_Door_FL_Door_FL_window) == 0x001040, "Member 'AAVS_Tiger_C::Tiger_Door_FL_Door_FL_window' has a wrong offset!");
static_assert(offsetof(AAVS_Tiger_C, Tiger_Door_FR_Door_FR_window) == 0x001048, "Member 'AAVS_Tiger_C::Tiger_Door_FR_Door_FR_window' has a wrong offset!");
static_assert(offsetof(AAVS_Tiger_C, Tiger_Door_BR_Door_BR_window) == 0x001050, "Member 'AAVS_Tiger_C::Tiger_Door_BR_Door_BR_window' has a wrong offset!");
static_assert(offsetof(AAVS_Tiger_C, Tiger_Door_BL_Door_BL_window) == 0x001058, "Member 'AAVS_Tiger_C::Tiger_Door_BL_Door_BL_window' has a wrong offset!");
static_assert(offsetof(AAVS_Tiger_C, Tiger_Kabina_Kabina_windows) == 0x001060, "Member 'AAVS_Tiger_C::Tiger_Kabina_Kabina_windows' has a wrong offset!");
static_assert(offsetof(AAVS_Tiger_C, Tiger_Kabina_Kabina) == 0x001068, "Member 'AAVS_Tiger_C::Tiger_Kabina_Kabina' has a wrong offset!");
static_assert(offsetof(AAVS_Tiger_C, Tiger_Door_FR_Door_FR) == 0x001070, "Member 'AAVS_Tiger_C::Tiger_Door_FR_Door_FR' has a wrong offset!");
static_assert(offsetof(AAVS_Tiger_C, Tiger_Door_FL_Door_FL) == 0x001078, "Member 'AAVS_Tiger_C::Tiger_Door_FL_Door_FL' has a wrong offset!");
static_assert(offsetof(AAVS_Tiger_C, Tiger_Door_BR_Door_BR) == 0x001080, "Member 'AAVS_Tiger_C::Tiger_Door_BR_Door_BR' has a wrong offset!");
static_assert(offsetof(AAVS_Tiger_C, Tiger_Door_BL_Door_BL) == 0x001088, "Member 'AAVS_Tiger_C::Tiger_Door_BL_Door_BL' has a wrong offset!");

}

