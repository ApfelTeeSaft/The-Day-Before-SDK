#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: JSI_Slot

#include "Basic.hpp"

#include "JSItemType_structs.hpp"
#include "FMODStudio_structs.hpp"
#include "E_ShopContainer_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FItemInfo_structs.hpp"
#include "SlateCore_structs.hpp"
#include "ContainerType_structs.hpp"
#include "UMG_structs.hpp"
#include "AttachmentInfo_structs.hpp"
#include "S_ShopItemList_structs.hpp"
#include "S_Attachment_structs.hpp"
#include "E_ItemColorTypes_structs.hpp"
#include "Engine_structs.hpp"
#include "SlotRarity_structs.hpp"
#include "InputCore_structs.hpp"
#include "RarityColors_structs.hpp"


namespace SDK::Params
{

// Function JSI_Slot.JSI_Slot_C.AddAttachment
// 0x0014 (0x0014 - 0x0000)
struct JSI_Slot_C_AddAttachment final
{
public:
	struct FAttachmentInfo                        AttachmentInfo;                                    // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_AddAttachment) == 0x000004, "Wrong alignment on JSI_Slot_C_AddAttachment");
static_assert(sizeof(JSI_Slot_C_AddAttachment) == 0x000014, "Wrong size on JSI_Slot_C_AddAttachment");
static_assert(offsetof(JSI_Slot_C_AddAttachment, AttachmentInfo) == 0x000000, "Member 'JSI_Slot_C_AddAttachment::AttachmentInfo' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_AddAttachment, CallFunc_Array_Add_ReturnValue) == 0x000010, "Member 'JSI_Slot_C_AddAttachment::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.AddToXY
// 0x0058 (0x0058 - 0x0000)
struct JSI_Slot_C_AddToXY final
{
public:
	int32                                         X;                                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Y;                                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              SlotDimension;                                     // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_AddToXY) == 0x000008, "Wrong alignment on JSI_Slot_C_AddToXY");
static_assert(sizeof(JSI_Slot_C_AddToXY) == 0x000058, "Wrong size on JSI_Slot_C_AddToXY");
static_assert(offsetof(JSI_Slot_C_AddToXY, X) == 0x000000, "Member 'JSI_Slot_C_AddToXY::X' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_AddToXY, Y) == 0x000004, "Member 'JSI_Slot_C_AddToXY::Y' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_AddToXY, SlotDimension) == 0x000008, "Member 'JSI_Slot_C_AddToXY::SlotDimension' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_AddToXY, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000018, "Member 'JSI_Slot_C_AddToXY::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_AddToXY, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000020, "Member 'JSI_Slot_C_AddToXY::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_AddToXY, CallFunc_BreakVector2D_X) == 0x000028, "Member 'JSI_Slot_C_AddToXY::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_AddToXY, CallFunc_BreakVector2D_Y) == 0x000030, "Member 'JSI_Slot_C_AddToXY::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_AddToXY, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000038, "Member 'JSI_Slot_C_AddToXY::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_AddToXY, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'JSI_Slot_C_AddToXY::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_AddToXY, CallFunc_MakeVector2D_ReturnValue) == 0x000048, "Member 'JSI_Slot_C_AddToXY::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.BlockTimer
// 0x0008 (0x0008 - 0x0000)
struct JSI_Slot_C_BlockTimer final
{
public:
	double                                        Param_Time;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_BlockTimer) == 0x000008, "Wrong alignment on JSI_Slot_C_BlockTimer");
static_assert(sizeof(JSI_Slot_C_BlockTimer) == 0x000008, "Wrong size on JSI_Slot_C_BlockTimer");
static_assert(offsetof(JSI_Slot_C_BlockTimer, Param_Time) == 0x000000, "Member 'JSI_Slot_C_BlockTimer::Param_Time' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.ButtonPressed
// 0x0003 (0x0003 - 0x0000)
struct JSI_Slot_C_ButtonPressed final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_ButtonPressed) == 0x000001, "Wrong alignment on JSI_Slot_C_ButtonPressed");
static_assert(sizeof(JSI_Slot_C_ButtonPressed) == 0x000003, "Wrong size on JSI_Slot_C_ButtonPressed");
static_assert(offsetof(JSI_Slot_C_ButtonPressed, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'JSI_Slot_C_ButtonPressed::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ButtonPressed, CallFunc_Not_PreBool_ReturnValue_1) == 0x000001, "Member 'JSI_Slot_C_ButtonPressed::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ButtonPressed, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'JSI_Slot_C_ButtonPressed::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.Calculate Result Price
// 0x0518 (0x0518 - 0x0000)
struct JSI_Slot_C_Calculate_Result_Price final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Price;                                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ShopContainer                               Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJSItemType                                   Temp_byte_Variable_1;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_4;                              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ShopContainer                               Temp_byte_Variable_2;                              // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63[0x5];                                       // 0x0063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow;           // 0x0068(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_289[0x3];                                      // 0x0289(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAttachmentInfo                        CallFunc_Array_Get_Item;                           // 0x028C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x02A0(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C1[0x3];                                      // 0x04C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x04C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x04C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CA[0x2];                                      // 0x04CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Round_ReturnValue;                        // 0x04CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D1[0x3];                                      // 0x04D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x04D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D9[0x7];                                      // 0x04D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_2;                           // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x04E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EC[0x4];                                      // 0x04EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_Calculate_Result_Price) == 0x000008, "Wrong alignment on JSI_Slot_C_Calculate_Result_Price");
static_assert(sizeof(JSI_Slot_C_Calculate_Result_Price) == 0x000518, "Wrong size on JSI_Slot_C_Calculate_Result_Price");
static_assert(offsetof(JSI_Slot_C_Calculate_Result_Price, ReturnValue) == 0x000000, "Member 'JSI_Slot_C_Calculate_Result_Price::ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Result_Price, Price) == 0x000008, "Member 'JSI_Slot_C_Calculate_Result_Price::Price' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Result_Price, Temp_bool_Variable) == 0x000010, "Member 'JSI_Slot_C_Calculate_Result_Price::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Result_Price, Temp_byte_Variable) == 0x000011, "Member 'JSI_Slot_C_Calculate_Result_Price::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Result_Price, Temp_bool_Variable_1) == 0x000012, "Member 'JSI_Slot_C_Calculate_Result_Price::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Result_Price, Temp_bool_Variable_2) == 0x000013, "Member 'JSI_Slot_C_Calculate_Result_Price::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Result_Price, Temp_bool_Variable_3) == 0x000014, "Member 'JSI_Slot_C_Calculate_Result_Price::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Result_Price, Temp_bool_Variable_4) == 0x000015, "Member 'JSI_Slot_C_Calculate_Result_Price::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Result_Price, Temp_byte_Variable_1) == 0x000016, "Member 'JSI_Slot_C_Calculate_Result_Price::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Result_Price, Temp_real_Variable) == 0x000018, "Member 'JSI_Slot_C_Calculate_Result_Price::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Result_Price, Temp_real_Variable_1) == 0x000020, "Member 'JSI_Slot_C_Calculate_Result_Price::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Result_Price, Temp_real_Variable_2) == 0x000028, "Member 'JSI_Slot_C_Calculate_Result_Price::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Result_Price, Temp_real_Variable_3) == 0x000030, "Member 'JSI_Slot_C_Calculate_Result_Price::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Result_Price, Temp_real_Variable_4) == 0x000038, "Member 'JSI_Slot_C_Calculate_Result_Price::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Result_Price, Temp_int_Array_Index_Variable) == 0x000040, "Member 'JSI_Slot_C_Calculate_Result_Price::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Result_Price, Temp_bool_Variable_5) == 0x000044, "Member 'JSI_Slot_C_Calculate_Result_Price::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Result_Price, CallFunc_GetPlayerController_ReturnValue) == 0x000048, "Member 'JSI_Slot_C_Calculate_Result_Price::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Result_Price, CallFunc_K2_GetPawn_ReturnValue) == 0x000050, "Member 'JSI_Slot_C_Calculate_Result_Price::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Result_Price, K2Node_DynamicCast_AsSurvival_Player) == 0x000058, "Member 'JSI_Slot_C_Calculate_Result_Price::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Result_Price, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'JSI_Slot_C_Calculate_Result_Price::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Result_Price, K2Node_Select_Default) == 0x000061, "Member 'JSI_Slot_C_Calculate_Result_Price::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Result_Price, Temp_byte_Variable_2) == 0x000062, "Member 'JSI_Slot_C_Calculate_Result_Price::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Result_Price, CallFunc_GetDataTableRowFromName_OutRow) == 0x000068, "Member 'JSI_Slot_C_Calculate_Result_Price::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Result_Price, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000288, "Member 'JSI_Slot_C_Calculate_Result_Price::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Result_Price, CallFunc_Array_Get_Item) == 0x00028C, "Member 'JSI_Slot_C_Calculate_Result_Price::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Result_Price, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x0002A0, "Member 'JSI_Slot_C_Calculate_Result_Price::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Result_Price, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x0004C0, "Member 'JSI_Slot_C_Calculate_Result_Price::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Result_Price, CallFunc_Array_Length_ReturnValue) == 0x0004C4, "Member 'JSI_Slot_C_Calculate_Result_Price::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Result_Price, Temp_bool_Variable_6) == 0x0004C8, "Member 'JSI_Slot_C_Calculate_Result_Price::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Result_Price, Temp_bool_Variable_7) == 0x0004C9, "Member 'JSI_Slot_C_Calculate_Result_Price::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Result_Price, CallFunc_Round_ReturnValue) == 0x0004CC, "Member 'JSI_Slot_C_Calculate_Result_Price::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Result_Price, K2Node_Select_Default_1) == 0x0004D0, "Member 'JSI_Slot_C_Calculate_Result_Price::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Result_Price, Temp_int_Loop_Counter_Variable) == 0x0004D4, "Member 'JSI_Slot_C_Calculate_Result_Price::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Result_Price, CallFunc_Less_IntInt_ReturnValue) == 0x0004D8, "Member 'JSI_Slot_C_Calculate_Result_Price::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Result_Price, K2Node_Select_Default_2) == 0x0004E0, "Member 'JSI_Slot_C_Calculate_Result_Price::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Result_Price, CallFunc_Add_IntInt_ReturnValue) == 0x0004E8, "Member 'JSI_Slot_C_Calculate_Result_Price::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Result_Price, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0004F0, "Member 'JSI_Slot_C_Calculate_Result_Price::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Result_Price, CallFunc_SelectFloat_ReturnValue) == 0x0004F8, "Member 'JSI_Slot_C_Calculate_Result_Price::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Result_Price, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000500, "Member 'JSI_Slot_C_Calculate_Result_Price::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Result_Price, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000508, "Member 'JSI_Slot_C_Calculate_Result_Price::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Result_Price, CallFunc_SelectFloat_ReturnValue_1) == 0x000510, "Member 'JSI_Slot_C_Calculate_Result_Price::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.Calculate Size With Ratio
// 0x06B0 (0x06B0 - 0x0000)
struct JSI_Slot_C_Calculate_Size_With_Ratio final
{
public:
	struct FVector2D                              Param_Size;                                        // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              FinishSize;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              BaseSize;                                          // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CurrentSlotDimension;                              // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              LocalSize;                                         // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_6;                            // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_7;                            // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_8;                            // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_9;                            // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ItemColorTypes                              Temp_byte_Variable;                                // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0188(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A8[0x8];                                      // 0x01A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_GetSlotBrushes_BG_Brush;                  // 0x01B0(0x00D0)()
	struct FSlateBrush                            CallFunc_GetSlotBrushes_Gradient_Brush;            // 0x0280(0x00D0)()
	struct FSlateBrush                            CallFunc_GetSlotBrushes_Highlight_Brush;           // 0x0350(0x00D0)()
	struct FSlateBrush                            CallFunc_GetSlotBrushes_Hover_Brush;               // 0x0420(0x00D0)()
	class UPaperSprite*                           CallFunc_GetSlotBrushes_BGSprite;                  // 0x04F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_isRotated__ReturnValue;                   // 0x04F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F9[0x7];                                      // 0x04F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_MakeBrushFromSprite_ReturnValue;          // 0x0500(0x00D0)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D1[0xF];                                      // 0x05D1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_SetFieldsInStruct_StructOut;                // 0x05E0(0x00D0)()
};
static_assert(alignof(JSI_Slot_C_Calculate_Size_With_Ratio) == 0x000010, "Wrong alignment on JSI_Slot_C_Calculate_Size_With_Ratio");
static_assert(sizeof(JSI_Slot_C_Calculate_Size_With_Ratio) == 0x0006B0, "Wrong size on JSI_Slot_C_Calculate_Size_With_Ratio");
static_assert(offsetof(JSI_Slot_C_Calculate_Size_With_Ratio, Param_Size) == 0x000000, "Member 'JSI_Slot_C_Calculate_Size_With_Ratio::Param_Size' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Size_With_Ratio, FinishSize) == 0x000010, "Member 'JSI_Slot_C_Calculate_Size_With_Ratio::FinishSize' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Size_With_Ratio, BaseSize) == 0x000020, "Member 'JSI_Slot_C_Calculate_Size_With_Ratio::BaseSize' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Size_With_Ratio, CurrentSlotDimension) == 0x000030, "Member 'JSI_Slot_C_Calculate_Size_With_Ratio::CurrentSlotDimension' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Size_With_Ratio, LocalSize) == 0x000040, "Member 'JSI_Slot_C_Calculate_Size_With_Ratio::LocalSize' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Size_With_Ratio, Temp_struct_Variable) == 0x000050, "Member 'JSI_Slot_C_Calculate_Size_With_Ratio::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Size_With_Ratio, Temp_struct_Variable_1) == 0x000060, "Member 'JSI_Slot_C_Calculate_Size_With_Ratio::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Size_With_Ratio, Temp_struct_Variable_2) == 0x000070, "Member 'JSI_Slot_C_Calculate_Size_With_Ratio::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Size_With_Ratio, Temp_struct_Variable_3) == 0x000080, "Member 'JSI_Slot_C_Calculate_Size_With_Ratio::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Size_With_Ratio, Temp_struct_Variable_4) == 0x000090, "Member 'JSI_Slot_C_Calculate_Size_With_Ratio::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Size_With_Ratio, Temp_struct_Variable_5) == 0x0000A0, "Member 'JSI_Slot_C_Calculate_Size_With_Ratio::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Size_With_Ratio, Temp_struct_Variable_6) == 0x0000B0, "Member 'JSI_Slot_C_Calculate_Size_With_Ratio::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Size_With_Ratio, Temp_struct_Variable_7) == 0x0000C0, "Member 'JSI_Slot_C_Calculate_Size_With_Ratio::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Size_With_Ratio, Temp_struct_Variable_8) == 0x0000D0, "Member 'JSI_Slot_C_Calculate_Size_With_Ratio::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Size_With_Ratio, Temp_struct_Variable_9) == 0x0000E0, "Member 'JSI_Slot_C_Calculate_Size_With_Ratio::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Size_With_Ratio, Temp_byte_Variable) == 0x0000F0, "Member 'JSI_Slot_C_Calculate_Size_With_Ratio::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Size_With_Ratio, CallFunc_BreakVector2D_X) == 0x0000F8, "Member 'JSI_Slot_C_Calculate_Size_With_Ratio::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Size_With_Ratio, CallFunc_BreakVector2D_Y) == 0x000100, "Member 'JSI_Slot_C_Calculate_Size_With_Ratio::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Size_With_Ratio, CallFunc_BreakVector2D_X_1) == 0x000108, "Member 'JSI_Slot_C_Calculate_Size_With_Ratio::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Size_With_Ratio, CallFunc_BreakVector2D_Y_1) == 0x000110, "Member 'JSI_Slot_C_Calculate_Size_With_Ratio::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Size_With_Ratio, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000118, "Member 'JSI_Slot_C_Calculate_Size_With_Ratio::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Size_With_Ratio, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000120, "Member 'JSI_Slot_C_Calculate_Size_With_Ratio::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Size_With_Ratio, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000128, "Member 'JSI_Slot_C_Calculate_Size_With_Ratio::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Size_With_Ratio, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000130, "Member 'JSI_Slot_C_Calculate_Size_With_Ratio::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Size_With_Ratio, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000138, "Member 'JSI_Slot_C_Calculate_Size_With_Ratio::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Size_With_Ratio, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000140, "Member 'JSI_Slot_C_Calculate_Size_With_Ratio::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Size_With_Ratio, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000148, "Member 'JSI_Slot_C_Calculate_Size_With_Ratio::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Size_With_Ratio, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000150, "Member 'JSI_Slot_C_Calculate_Size_With_Ratio::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Size_With_Ratio, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000158, "Member 'JSI_Slot_C_Calculate_Size_With_Ratio::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Size_With_Ratio, CallFunc_MakeVector2D_ReturnValue) == 0x000160, "Member 'JSI_Slot_C_Calculate_Size_With_Ratio::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Size_With_Ratio, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000170, "Member 'JSI_Slot_C_Calculate_Size_With_Ratio::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Size_With_Ratio, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000178, "Member 'JSI_Slot_C_Calculate_Size_With_Ratio::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Size_With_Ratio, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000180, "Member 'JSI_Slot_C_Calculate_Size_With_Ratio::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Size_With_Ratio, CallFunc_MakeVector2D_ReturnValue_1) == 0x000188, "Member 'JSI_Slot_C_Calculate_Size_With_Ratio::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Size_With_Ratio, K2Node_Select_Default) == 0x000198, "Member 'JSI_Slot_C_Calculate_Size_With_Ratio::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Size_With_Ratio, CallFunc_GetSlotBrushes_BG_Brush) == 0x0001B0, "Member 'JSI_Slot_C_Calculate_Size_With_Ratio::CallFunc_GetSlotBrushes_BG_Brush' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Size_With_Ratio, CallFunc_GetSlotBrushes_Gradient_Brush) == 0x000280, "Member 'JSI_Slot_C_Calculate_Size_With_Ratio::CallFunc_GetSlotBrushes_Gradient_Brush' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Size_With_Ratio, CallFunc_GetSlotBrushes_Highlight_Brush) == 0x000350, "Member 'JSI_Slot_C_Calculate_Size_With_Ratio::CallFunc_GetSlotBrushes_Highlight_Brush' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Size_With_Ratio, CallFunc_GetSlotBrushes_Hover_Brush) == 0x000420, "Member 'JSI_Slot_C_Calculate_Size_With_Ratio::CallFunc_GetSlotBrushes_Hover_Brush' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Size_With_Ratio, CallFunc_GetSlotBrushes_BGSprite) == 0x0004F0, "Member 'JSI_Slot_C_Calculate_Size_With_Ratio::CallFunc_GetSlotBrushes_BGSprite' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Size_With_Ratio, CallFunc_isRotated__ReturnValue) == 0x0004F8, "Member 'JSI_Slot_C_Calculate_Size_With_Ratio::CallFunc_isRotated__ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Size_With_Ratio, CallFunc_MakeBrushFromSprite_ReturnValue) == 0x000500, "Member 'JSI_Slot_C_Calculate_Size_With_Ratio::CallFunc_MakeBrushFromSprite_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Size_With_Ratio, CallFunc_Not_PreBool_ReturnValue) == 0x0005D0, "Member 'JSI_Slot_C_Calculate_Size_With_Ratio::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Calculate_Size_With_Ratio, K2Node_SetFieldsInStruct_StructOut) == 0x0005E0, "Member 'JSI_Slot_C_Calculate_Size_With_Ratio::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.CanAttachAttachment
// 0x0030 (0x0030 - 0x0000)
struct JSI_Slot_C_CanAttachAttachment final
{
public:
	class FName                                   AttachmentID;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSupportedAttachment_ReturnValue;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttachmentInfo                        CallFunc_Array_Get_Item;                           // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_CanAttachAttachment) == 0x000004, "Wrong alignment on JSI_Slot_C_CanAttachAttachment");
static_assert(sizeof(JSI_Slot_C_CanAttachAttachment) == 0x000030, "Wrong size on JSI_Slot_C_CanAttachAttachment");
static_assert(offsetof(JSI_Slot_C_CanAttachAttachment, AttachmentID) == 0x000000, "Member 'JSI_Slot_C_CanAttachAttachment::AttachmentID' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_CanAttachAttachment, ReturnValue) == 0x000008, "Member 'JSI_Slot_C_CanAttachAttachment::ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_CanAttachAttachment, CallFunc_IsSupportedAttachment_ReturnValue) == 0x000009, "Member 'JSI_Slot_C_CanAttachAttachment::CallFunc_IsSupportedAttachment_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_CanAttachAttachment, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'JSI_Slot_C_CanAttachAttachment::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_CanAttachAttachment, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'JSI_Slot_C_CanAttachAttachment::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_CanAttachAttachment, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'JSI_Slot_C_CanAttachAttachment::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_CanAttachAttachment, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'JSI_Slot_C_CanAttachAttachment::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_CanAttachAttachment, CallFunc_Array_Get_Item) == 0x00001C, "Member 'JSI_Slot_C_CanAttachAttachment::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_CanAttachAttachment, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'JSI_Slot_C_CanAttachAttachment::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_CanAttachAttachment, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00002D, "Member 'JSI_Slot_C_CanAttachAttachment::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.CanOpenSpecialContainer?
// 0x0004 (0x0004 - 0x0000)
struct JSI_Slot_C_CanOpenSpecialContainer_ final
{
public:
	bool                                          Return_value;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_CanOpenSpecialContainer_) == 0x000001, "Wrong alignment on JSI_Slot_C_CanOpenSpecialContainer_");
static_assert(sizeof(JSI_Slot_C_CanOpenSpecialContainer_) == 0x000004, "Wrong size on JSI_Slot_C_CanOpenSpecialContainer_");
static_assert(offsetof(JSI_Slot_C_CanOpenSpecialContainer_, Return_value) == 0x000000, "Member 'JSI_Slot_C_CanOpenSpecialContainer_::Return_value' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_CanOpenSpecialContainer_, CallFunc_IsVisible_ReturnValue) == 0x000001, "Member 'JSI_Slot_C_CanOpenSpecialContainer_::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_CanOpenSpecialContainer_, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'JSI_Slot_C_CanOpenSpecialContainer_::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_CanOpenSpecialContainer_, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'JSI_Slot_C_CanOpenSpecialContainer_::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.ChangeImageAnchors
// 0x0001 (0x0001 - 0x0000)
struct JSI_Slot_C_ChangeImageAnchors final
{
public:
	bool                                          Equipped;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_ChangeImageAnchors) == 0x000001, "Wrong alignment on JSI_Slot_C_ChangeImageAnchors");
static_assert(sizeof(JSI_Slot_C_ChangeImageAnchors) == 0x000001, "Wrong size on JSI_Slot_C_ChangeImageAnchors");
static_assert(offsetof(JSI_Slot_C_ChangeImageAnchors, Equipped) == 0x000000, "Member 'JSI_Slot_C_ChangeImageAnchors::Equipped' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.ChangePrice
// 0x0008 (0x0008 - 0x0000)
struct JSI_Slot_C_ChangePrice final
{
public:
	double                                        Price;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_ChangePrice) == 0x000008, "Wrong alignment on JSI_Slot_C_ChangePrice");
static_assert(sizeof(JSI_Slot_C_ChangePrice) == 0x000008, "Wrong size on JSI_Slot_C_ChangePrice");
static_assert(offsetof(JSI_Slot_C_ChangePrice, Price) == 0x000000, "Member 'JSI_Slot_C_ChangePrice::Price' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.ChangeRarity
// 0x0002 (0x0002 - 0x0000)
struct JSI_Slot_C_ChangeRarity final
{
public:
	ESlotRarity                                   Param_Rarity;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Changed_;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_ChangeRarity) == 0x000001, "Wrong alignment on JSI_Slot_C_ChangeRarity");
static_assert(sizeof(JSI_Slot_C_ChangeRarity) == 0x000002, "Wrong size on JSI_Slot_C_ChangeRarity");
static_assert(offsetof(JSI_Slot_C_ChangeRarity, Param_Rarity) == 0x000000, "Member 'JSI_Slot_C_ChangeRarity::Param_Rarity' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ChangeRarity, Changed_) == 0x000001, "Member 'JSI_Slot_C_ChangeRarity::Changed_' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.ChangesImageAnchors
// 0x0050 (0x0050 - 0x0000)
struct JSI_Slot_C_ChangesImageAnchors final
{
public:
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform;                 // 0x0000(0x0038)(NoDestructor)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_ChangesImageAnchors) == 0x000008, "Wrong alignment on JSI_Slot_C_ChangesImageAnchors");
static_assert(sizeof(JSI_Slot_C_ChangesImageAnchors) == 0x000050, "Wrong size on JSI_Slot_C_ChangesImageAnchors");
static_assert(offsetof(JSI_Slot_C_ChangesImageAnchors, K2Node_MakeStruct_WidgetTransform) == 0x000000, "Member 'JSI_Slot_C_ChangesImageAnchors::K2Node_MakeStruct_WidgetTransform' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ChangesImageAnchors, CallFunc_BreakVector2D_X) == 0x000038, "Member 'JSI_Slot_C_ChangesImageAnchors::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ChangesImageAnchors, CallFunc_BreakVector2D_Y) == 0x000040, "Member 'JSI_Slot_C_ChangesImageAnchors::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ChangesImageAnchors, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000048, "Member 'JSI_Slot_C_ChangesImageAnchors::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ChangesImageAnchors, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x000049, "Member 'JSI_Slot_C_ChangesImageAnchors::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ChangesImageAnchors, CallFunc_BooleanAND_ReturnValue) == 0x00004A, "Member 'JSI_Slot_C_ChangesImageAnchors::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.CheckRootContainer
// 0x0028 (0x0028 - 0x0000)
struct JSI_Slot_C_CheckRootContainer final
{
public:
	class UJSI_Slot_C*                            DraggedItem;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CanAdd_;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetContainerHierarchy_Containers;         // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_CheckRootContainer) == 0x000008, "Wrong alignment on JSI_Slot_C_CheckRootContainer");
static_assert(sizeof(JSI_Slot_C_CheckRootContainer) == 0x000028, "Wrong size on JSI_Slot_C_CheckRootContainer");
static_assert(offsetof(JSI_Slot_C_CheckRootContainer, DraggedItem) == 0x000000, "Member 'JSI_Slot_C_CheckRootContainer::DraggedItem' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_CheckRootContainer, CanAdd_) == 0x000008, "Member 'JSI_Slot_C_CheckRootContainer::CanAdd_' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_CheckRootContainer, CallFunc_GetContainerHierarchy_Containers) == 0x000010, "Member 'JSI_Slot_C_CheckRootContainer::CallFunc_GetContainerHierarchy_Containers' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_CheckRootContainer, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'JSI_Slot_C_CheckRootContainer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_CheckRootContainer, CallFunc_Array_Contains_ReturnValue) == 0x000021, "Member 'JSI_Slot_C_CheckRootContainer::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_CheckRootContainer, CallFunc_Not_PreBool_ReturnValue) == 0x000022, "Member 'JSI_Slot_C_CheckRootContainer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_CheckRootContainer, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000023, "Member 'JSI_Slot_C_CheckRootContainer::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.CheckShopContainer
// 0x0048 (0x0048 - 0x0000)
struct JSI_Slot_C_CheckShopContainer final
{
public:
	int32                                         PageIndex;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ShopContainer                               GetShopContainer;                                  // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        ShopContainer;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UShopContainerWidget_C*                 K2Node_DynamicCast_AsShop_Container_Widget;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPageIndex_PageIndex;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_CheckShopContainer) == 0x000008, "Wrong alignment on JSI_Slot_C_CheckShopContainer");
static_assert(sizeof(JSI_Slot_C_CheckShopContainer) == 0x000048, "Wrong size on JSI_Slot_C_CheckShopContainer");
static_assert(offsetof(JSI_Slot_C_CheckShopContainer, PageIndex) == 0x000000, "Member 'JSI_Slot_C_CheckShopContainer::PageIndex' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_CheckShopContainer, GetShopContainer) == 0x000004, "Member 'JSI_Slot_C_CheckShopContainer::GetShopContainer' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_CheckShopContainer, ShopContainer) == 0x000008, "Member 'JSI_Slot_C_CheckShopContainer::ShopContainer' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_CheckShopContainer, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'JSI_Slot_C_CheckShopContainer::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_CheckShopContainer, CallFunc_K2_GetPawn_ReturnValue) == 0x000018, "Member 'JSI_Slot_C_CheckShopContainer::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_CheckShopContainer, K2Node_DynamicCast_AsSurvival_Player) == 0x000020, "Member 'JSI_Slot_C_CheckShopContainer::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_CheckShopContainer, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'JSI_Slot_C_CheckShopContainer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_CheckShopContainer, CallFunc_GetChildAt_ReturnValue) == 0x000030, "Member 'JSI_Slot_C_CheckShopContainer::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_CheckShopContainer, K2Node_DynamicCast_AsShop_Container_Widget) == 0x000038, "Member 'JSI_Slot_C_CheckShopContainer::K2Node_DynamicCast_AsShop_Container_Widget' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_CheckShopContainer, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'JSI_Slot_C_CheckShopContainer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_CheckShopContainer, CallFunc_GetPageIndex_PageIndex) == 0x000044, "Member 'JSI_Slot_C_CheckShopContainer::CallFunc_GetPageIndex_PageIndex' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.CheckSlotIsContainer
// 0x0098 (0x0098 - 0x0000)
struct JSI_Slot_C_CheckSlotIsContainer final
{
public:
	struct FVector2D                              Temp_struct_Variable;                              // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_2;                            // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_3;                            // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EContainerType                                Temp_byte_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0050(0x0018)()
	struct FVector2D                              K2Node_Select_Default;                             // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_CheckSlotIsContainer) == 0x000008, "Wrong alignment on JSI_Slot_C_CheckSlotIsContainer");
static_assert(sizeof(JSI_Slot_C_CheckSlotIsContainer) == 0x000098, "Wrong size on JSI_Slot_C_CheckSlotIsContainer");
static_assert(offsetof(JSI_Slot_C_CheckSlotIsContainer, Temp_struct_Variable) == 0x000000, "Member 'JSI_Slot_C_CheckSlotIsContainer::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_CheckSlotIsContainer, Temp_struct_Variable_1) == 0x000010, "Member 'JSI_Slot_C_CheckSlotIsContainer::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_CheckSlotIsContainer, CallFunc_Create_ReturnValue) == 0x000020, "Member 'JSI_Slot_C_CheckSlotIsContainer::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_CheckSlotIsContainer, Temp_struct_Variable_2) == 0x000028, "Member 'JSI_Slot_C_CheckSlotIsContainer::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_CheckSlotIsContainer, Temp_struct_Variable_3) == 0x000038, "Member 'JSI_Slot_C_CheckSlotIsContainer::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_CheckSlotIsContainer, Temp_byte_Variable) == 0x000048, "Member 'JSI_Slot_C_CheckSlotIsContainer::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_CheckSlotIsContainer, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'JSI_Slot_C_CheckSlotIsContainer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_CheckSlotIsContainer, CallFunc_Not_PreBool_ReturnValue) == 0x00004A, "Member 'JSI_Slot_C_CheckSlotIsContainer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_CheckSlotIsContainer, CallFunc_Conv_NameToText_ReturnValue) == 0x000050, "Member 'JSI_Slot_C_CheckSlotIsContainer::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_CheckSlotIsContainer, K2Node_Select_Default) == 0x000068, "Member 'JSI_Slot_C_CheckSlotIsContainer::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_CheckSlotIsContainer, CallFunc_BreakVector2D_X) == 0x000078, "Member 'JSI_Slot_C_CheckSlotIsContainer::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_CheckSlotIsContainer, CallFunc_BreakVector2D_Y) == 0x000080, "Member 'JSI_Slot_C_CheckSlotIsContainer::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_CheckSlotIsContainer, CallFunc_BooleanAND_ReturnValue) == 0x000088, "Member 'JSI_Slot_C_CheckSlotIsContainer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_CheckSlotIsContainer, CallFunc_FTrunc_ReturnValue) == 0x00008C, "Member 'JSI_Slot_C_CheckSlotIsContainer::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_CheckSlotIsContainer, CallFunc_FTrunc_ReturnValue_1) == 0x000090, "Member 'JSI_Slot_C_CheckSlotIsContainer::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.ClearSlot
// 0x0001 (0x0001 - 0x0000)
struct JSI_Slot_C_ClearSlot final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_ClearSlot) == 0x000001, "Wrong alignment on JSI_Slot_C_ClearSlot");
static_assert(sizeof(JSI_Slot_C_ClearSlot) == 0x000001, "Wrong size on JSI_Slot_C_ClearSlot");
static_assert(offsetof(JSI_Slot_C_ClearSlot, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'JSI_Slot_C_ClearSlot::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.ConfirmDragOperation
// 0x0018 (0x0018 - 0x0000)
struct JSI_Slot_C_ConfirmDragOperation final
{
public:
	class UJSIContainer_C*                        OutContainer;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        InContainer;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FunctionResult;                                    // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_ConfirmDragOperation) == 0x000008, "Wrong alignment on JSI_Slot_C_ConfirmDragOperation");
static_assert(sizeof(JSI_Slot_C_ConfirmDragOperation) == 0x000018, "Wrong size on JSI_Slot_C_ConfirmDragOperation");
static_assert(offsetof(JSI_Slot_C_ConfirmDragOperation, OutContainer) == 0x000000, "Member 'JSI_Slot_C_ConfirmDragOperation::OutContainer' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ConfirmDragOperation, InContainer) == 0x000008, "Member 'JSI_Slot_C_ConfirmDragOperation::InContainer' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ConfirmDragOperation, Result) == 0x000010, "Member 'JSI_Slot_C_ConfirmDragOperation::Result' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ConfirmDragOperation, FunctionResult) == 0x000011, "Member 'JSI_Slot_C_ConfirmDragOperation::FunctionResult' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ConfirmDragOperation, CallFunc_Array_IsEmpty_ReturnValue) == 0x000012, "Member 'JSI_Slot_C_ConfirmDragOperation::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ConfirmDragOperation, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000013, "Member 'JSI_Slot_C_ConfirmDragOperation::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ConfirmDragOperation, CallFunc_BooleanOR_ReturnValue) == 0x000014, "Member 'JSI_Slot_C_ConfirmDragOperation::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ConfirmDragOperation, CallFunc_IsValid_ReturnValue) == 0x000015, "Member 'JSI_Slot_C_ConfirmDragOperation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ConfirmDragOperation, CallFunc_IsValid_ReturnValue_1) == 0x000016, "Member 'JSI_Slot_C_ConfirmDragOperation::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.DetectChange
// 0x0018 (0x0018 - 0x0000)
struct JSI_Slot_C_DetectChange final
{
public:
	class UJSI_Slot_C*                            DroppedSlotRef;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          DraggedRotated_;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NOChange;                                          // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotIndexOnDrop_SlotIndex;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_DetectChange) == 0x000008, "Wrong alignment on JSI_Slot_C_DetectChange");
static_assert(sizeof(JSI_Slot_C_DetectChange) == 0x000018, "Wrong size on JSI_Slot_C_DetectChange");
static_assert(offsetof(JSI_Slot_C_DetectChange, DroppedSlotRef) == 0x000000, "Member 'JSI_Slot_C_DetectChange::DroppedSlotRef' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DetectChange, DraggedRotated_) == 0x000008, "Member 'JSI_Slot_C_DetectChange::DraggedRotated_' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DetectChange, NOChange) == 0x000009, "Member 'JSI_Slot_C_DetectChange::NOChange' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DetectChange, CallFunc_GetSlotIndexOnDrop_SlotIndex) == 0x00000C, "Member 'JSI_Slot_C_DetectChange::CallFunc_GetSlotIndexOnDrop_SlotIndex' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DetectChange, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'JSI_Slot_C_DetectChange::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DetectChange, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000011, "Member 'JSI_Slot_C_DetectChange::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DetectChange, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000012, "Member 'JSI_Slot_C_DetectChange::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DetectChange, CallFunc_BooleanAND_ReturnValue) == 0x000013, "Member 'JSI_Slot_C_DetectChange::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DetectChange, CallFunc_BooleanAND_ReturnValue_1) == 0x000014, "Member 'JSI_Slot_C_DetectChange::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.DoCustomNavigation_Down
// 0x00A0 (0x00A0 - 0x0000)
struct JSI_Slot_C_DoCustomNavigation_Down final
{
public:
	EUINavigation                                 Param_Navigation;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         ColumnIndex;                                       // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Iteration;                                         // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B[0x1];                                       // 0x004B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotIndexByColumnRow_ReturnValue;      // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemBySlotIndex_Found;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetItemBySlotIndex_Item;                  // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotIndexByColumnRow_ReturnValue_1;    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemBySlotIndex_Found_1;               // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetItemBySlotIndex_Item_1;                // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotLocationByIndex_ColumnIndex_;      // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotLocationByIndex_RowIndex_;         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_DoCustomNavigation_Down) == 0x000008, "Wrong alignment on JSI_Slot_C_DoCustomNavigation_Down");
static_assert(sizeof(JSI_Slot_C_DoCustomNavigation_Down) == 0x0000A0, "Wrong size on JSI_Slot_C_DoCustomNavigation_Down");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Down, Param_Navigation) == 0x000000, "Member 'JSI_Slot_C_DoCustomNavigation_Down::Param_Navigation' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Down, ReturnValue) == 0x000008, "Member 'JSI_Slot_C_DoCustomNavigation_Down::ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Down, ColumnIndex) == 0x000010, "Member 'JSI_Slot_C_DoCustomNavigation_Down::ColumnIndex' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Down, Iteration) == 0x000014, "Member 'JSI_Slot_C_DoCustomNavigation_Down::Iteration' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Down, Temp_int_Variable) == 0x000018, "Member 'JSI_Slot_C_DoCustomNavigation_Down::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Down, Temp_int_Variable_1) == 0x00001C, "Member 'JSI_Slot_C_DoCustomNavigation_Down::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Down, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'JSI_Slot_C_DoCustomNavigation_Down::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Down, Temp_int_Variable_2) == 0x000024, "Member 'JSI_Slot_C_DoCustomNavigation_Down::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Down, CallFunc_Subtract_IntInt_ReturnValue) == 0x000028, "Member 'JSI_Slot_C_DoCustomNavigation_Down::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Down, CallFunc_Add_IntInt_ReturnValue_1) == 0x00002C, "Member 'JSI_Slot_C_DoCustomNavigation_Down::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Down, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000030, "Member 'JSI_Slot_C_DoCustomNavigation_Down::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Down, CallFunc_Add_IntInt_ReturnValue_2) == 0x000034, "Member 'JSI_Slot_C_DoCustomNavigation_Down::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Down, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'JSI_Slot_C_DoCustomNavigation_Down::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Down, CallFunc_Add_IntInt_ReturnValue_3) == 0x00003C, "Member 'JSI_Slot_C_DoCustomNavigation_Down::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Down, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000040, "Member 'JSI_Slot_C_DoCustomNavigation_Down::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Down, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000044, "Member 'JSI_Slot_C_DoCustomNavigation_Down::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Down, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000048, "Member 'JSI_Slot_C_DoCustomNavigation_Down::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Down, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000049, "Member 'JSI_Slot_C_DoCustomNavigation_Down::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Down, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x00004A, "Member 'JSI_Slot_C_DoCustomNavigation_Down::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Down, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x00004C, "Member 'JSI_Slot_C_DoCustomNavigation_Down::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Down, CallFunc_GetSlotIndexByColumnRow_ReturnValue) == 0x000050, "Member 'JSI_Slot_C_DoCustomNavigation_Down::CallFunc_GetSlotIndexByColumnRow_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Down, CallFunc_Add_IntInt_ReturnValue_4) == 0x000054, "Member 'JSI_Slot_C_DoCustomNavigation_Down::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Down, CallFunc_GetItemBySlotIndex_Found) == 0x000058, "Member 'JSI_Slot_C_DoCustomNavigation_Down::CallFunc_GetItemBySlotIndex_Found' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Down, CallFunc_GetItemBySlotIndex_Item) == 0x000060, "Member 'JSI_Slot_C_DoCustomNavigation_Down::CallFunc_GetItemBySlotIndex_Item' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Down, CallFunc_GetSlotIndexByColumnRow_ReturnValue_1) == 0x000068, "Member 'JSI_Slot_C_DoCustomNavigation_Down::CallFunc_GetSlotIndexByColumnRow_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Down, CallFunc_GetItemBySlotIndex_Found_1) == 0x00006C, "Member 'JSI_Slot_C_DoCustomNavigation_Down::CallFunc_GetItemBySlotIndex_Found_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Down, CallFunc_GetItemBySlotIndex_Item_1) == 0x000070, "Member 'JSI_Slot_C_DoCustomNavigation_Down::CallFunc_GetItemBySlotIndex_Item_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Down, CallFunc_GetSlotLocationByIndex_ColumnIndex_) == 0x000078, "Member 'JSI_Slot_C_DoCustomNavigation_Down::CallFunc_GetSlotLocationByIndex_ColumnIndex_' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Down, CallFunc_GetSlotLocationByIndex_RowIndex_) == 0x00007C, "Member 'JSI_Slot_C_DoCustomNavigation_Down::CallFunc_GetSlotLocationByIndex_RowIndex_' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Down, CallFunc_BreakVector2D_X) == 0x000080, "Member 'JSI_Slot_C_DoCustomNavigation_Down::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Down, CallFunc_BreakVector2D_Y) == 0x000088, "Member 'JSI_Slot_C_DoCustomNavigation_Down::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Down, CallFunc_FTrunc_ReturnValue) == 0x000090, "Member 'JSI_Slot_C_DoCustomNavigation_Down::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Down, CallFunc_Add_IntInt_ReturnValue_5) == 0x000094, "Member 'JSI_Slot_C_DoCustomNavigation_Down::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Down, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'JSI_Slot_C_DoCustomNavigation_Down::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.DoCustomNavigation_Left
// 0x0098 (0x0098 - 0x0000)
struct JSI_Slot_C_DoCustomNavigation_Left final
{
public:
	EUINavigation                                 Param_Navigation;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         RowIndex;                                          // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ColumnIndex;                                       // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Iteration;                                         // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotIndexByColumnRow_ReturnValue;      // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemBySlotIndex_Found;                 // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetItemBySlotIndex_Item;                  // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotIndexByColumnRow_ReturnValue_1;    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemBySlotIndex_Found_1;               // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetItemBySlotIndex_Item_1;                // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotLocationByIndex_ColumnIndex_;      // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotLocationByIndex_RowIndex_;         // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_5;            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_DoCustomNavigation_Left) == 0x000008, "Wrong alignment on JSI_Slot_C_DoCustomNavigation_Left");
static_assert(sizeof(JSI_Slot_C_DoCustomNavigation_Left) == 0x000098, "Wrong size on JSI_Slot_C_DoCustomNavigation_Left");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Left, Param_Navigation) == 0x000000, "Member 'JSI_Slot_C_DoCustomNavigation_Left::Param_Navigation' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Left, ReturnValue) == 0x000008, "Member 'JSI_Slot_C_DoCustomNavigation_Left::ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Left, RowIndex) == 0x000010, "Member 'JSI_Slot_C_DoCustomNavigation_Left::RowIndex' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Left, ColumnIndex) == 0x000014, "Member 'JSI_Slot_C_DoCustomNavigation_Left::ColumnIndex' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Left, Iteration) == 0x000018, "Member 'JSI_Slot_C_DoCustomNavigation_Left::Iteration' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Left, Temp_int_Variable) == 0x00001C, "Member 'JSI_Slot_C_DoCustomNavigation_Left::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Left, Temp_int_Variable_1) == 0x000020, "Member 'JSI_Slot_C_DoCustomNavigation_Left::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Left, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'JSI_Slot_C_DoCustomNavigation_Left::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Left, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'JSI_Slot_C_DoCustomNavigation_Left::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Left, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00002C, "Member 'JSI_Slot_C_DoCustomNavigation_Left::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Left, Temp_int_Variable_2) == 0x000030, "Member 'JSI_Slot_C_DoCustomNavigation_Left::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Left, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000034, "Member 'JSI_Slot_C_DoCustomNavigation_Left::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Left, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000038, "Member 'JSI_Slot_C_DoCustomNavigation_Left::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Left, CallFunc_Add_IntInt_ReturnValue_1) == 0x00003C, "Member 'JSI_Slot_C_DoCustomNavigation_Left::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Left, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'JSI_Slot_C_DoCustomNavigation_Left::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Left, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000044, "Member 'JSI_Slot_C_DoCustomNavigation_Left::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Left, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000048, "Member 'JSI_Slot_C_DoCustomNavigation_Left::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Left, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x00004C, "Member 'JSI_Slot_C_DoCustomNavigation_Left::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Left, CallFunc_Add_IntInt_ReturnValue_2) == 0x000050, "Member 'JSI_Slot_C_DoCustomNavigation_Left::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Left, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000054, "Member 'JSI_Slot_C_DoCustomNavigation_Left::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Left, CallFunc_Add_IntInt_ReturnValue_3) == 0x000058, "Member 'JSI_Slot_C_DoCustomNavigation_Left::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Left, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x00005C, "Member 'JSI_Slot_C_DoCustomNavigation_Left::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Left, CallFunc_GetSlotIndexByColumnRow_ReturnValue) == 0x000060, "Member 'JSI_Slot_C_DoCustomNavigation_Left::CallFunc_GetSlotIndexByColumnRow_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Left, CallFunc_Add_IntInt_ReturnValue_4) == 0x000064, "Member 'JSI_Slot_C_DoCustomNavigation_Left::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Left, CallFunc_GetItemBySlotIndex_Found) == 0x000068, "Member 'JSI_Slot_C_DoCustomNavigation_Left::CallFunc_GetItemBySlotIndex_Found' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Left, CallFunc_GetItemBySlotIndex_Item) == 0x000070, "Member 'JSI_Slot_C_DoCustomNavigation_Left::CallFunc_GetItemBySlotIndex_Item' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Left, CallFunc_GetSlotIndexByColumnRow_ReturnValue_1) == 0x000078, "Member 'JSI_Slot_C_DoCustomNavigation_Left::CallFunc_GetSlotIndexByColumnRow_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Left, CallFunc_GetItemBySlotIndex_Found_1) == 0x00007C, "Member 'JSI_Slot_C_DoCustomNavigation_Left::CallFunc_GetItemBySlotIndex_Found_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Left, CallFunc_GetItemBySlotIndex_Item_1) == 0x000080, "Member 'JSI_Slot_C_DoCustomNavigation_Left::CallFunc_GetItemBySlotIndex_Item_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Left, CallFunc_GetSlotLocationByIndex_ColumnIndex_) == 0x000088, "Member 'JSI_Slot_C_DoCustomNavigation_Left::CallFunc_GetSlotLocationByIndex_ColumnIndex_' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Left, CallFunc_GetSlotLocationByIndex_RowIndex_) == 0x00008C, "Member 'JSI_Slot_C_DoCustomNavigation_Left::CallFunc_GetSlotLocationByIndex_RowIndex_' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Left, CallFunc_Greater_IntInt_ReturnValue) == 0x000090, "Member 'JSI_Slot_C_DoCustomNavigation_Left::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Left, CallFunc_Subtract_IntInt_ReturnValue_5) == 0x000094, "Member 'JSI_Slot_C_DoCustomNavigation_Left::CallFunc_Subtract_IntInt_ReturnValue_5' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.DoCustomNavigation_Right
// 0x00A0 (0x00A0 - 0x0000)
struct JSI_Slot_C_DoCustomNavigation_Right final
{
public:
	EUINavigation                                 Param_Navigation;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         RowIndex;                                          // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Iteration;                                         // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63[0x1];                                       // 0x0063(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotIndexByColumnRow_ReturnValue;      // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemBySlotIndex_Found;                 // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetItemBySlotIndex_Item;                  // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotIndexByColumnRow_ReturnValue_1;    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemBySlotIndex_Found_1;               // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetItemBySlotIndex_Item_1;                // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotLocationByIndex_ColumnIndex_;      // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotLocationByIndex_RowIndex_;         // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_DoCustomNavigation_Right) == 0x000008, "Wrong alignment on JSI_Slot_C_DoCustomNavigation_Right");
static_assert(sizeof(JSI_Slot_C_DoCustomNavigation_Right) == 0x0000A0, "Wrong size on JSI_Slot_C_DoCustomNavigation_Right");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Right, Param_Navigation) == 0x000000, "Member 'JSI_Slot_C_DoCustomNavigation_Right::Param_Navigation' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Right, ReturnValue) == 0x000008, "Member 'JSI_Slot_C_DoCustomNavigation_Right::ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Right, RowIndex) == 0x000010, "Member 'JSI_Slot_C_DoCustomNavigation_Right::RowIndex' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Right, Iteration) == 0x000014, "Member 'JSI_Slot_C_DoCustomNavigation_Right::Iteration' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Right, Temp_int_Variable) == 0x000018, "Member 'JSI_Slot_C_DoCustomNavigation_Right::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Right, CallFunc_BreakVector2D_X) == 0x000020, "Member 'JSI_Slot_C_DoCustomNavigation_Right::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Right, CallFunc_BreakVector2D_Y) == 0x000028, "Member 'JSI_Slot_C_DoCustomNavigation_Right::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Right, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'JSI_Slot_C_DoCustomNavigation_Right::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Right, CallFunc_FTrunc_ReturnValue) == 0x000034, "Member 'JSI_Slot_C_DoCustomNavigation_Right::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Right, Temp_int_Variable_1) == 0x000038, "Member 'JSI_Slot_C_DoCustomNavigation_Right::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Right, Temp_int_Variable_2) == 0x00003C, "Member 'JSI_Slot_C_DoCustomNavigation_Right::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Right, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'JSI_Slot_C_DoCustomNavigation_Right::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Right, CallFunc_Subtract_IntInt_ReturnValue) == 0x000044, "Member 'JSI_Slot_C_DoCustomNavigation_Right::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Right, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000048, "Member 'JSI_Slot_C_DoCustomNavigation_Right::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Right, CallFunc_Add_IntInt_ReturnValue_2) == 0x00004C, "Member 'JSI_Slot_C_DoCustomNavigation_Right::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Right, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'JSI_Slot_C_DoCustomNavigation_Right::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Right, CallFunc_Add_IntInt_ReturnValue_3) == 0x000054, "Member 'JSI_Slot_C_DoCustomNavigation_Right::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Right, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000058, "Member 'JSI_Slot_C_DoCustomNavigation_Right::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Right, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x00005C, "Member 'JSI_Slot_C_DoCustomNavigation_Right::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Right, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000060, "Member 'JSI_Slot_C_DoCustomNavigation_Right::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Right, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000061, "Member 'JSI_Slot_C_DoCustomNavigation_Right::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Right, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000062, "Member 'JSI_Slot_C_DoCustomNavigation_Right::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Right, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000064, "Member 'JSI_Slot_C_DoCustomNavigation_Right::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Right, CallFunc_GetSlotIndexByColumnRow_ReturnValue) == 0x000068, "Member 'JSI_Slot_C_DoCustomNavigation_Right::CallFunc_GetSlotIndexByColumnRow_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Right, CallFunc_Add_IntInt_ReturnValue_4) == 0x00006C, "Member 'JSI_Slot_C_DoCustomNavigation_Right::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Right, CallFunc_GetItemBySlotIndex_Found) == 0x000070, "Member 'JSI_Slot_C_DoCustomNavigation_Right::CallFunc_GetItemBySlotIndex_Found' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Right, CallFunc_GetItemBySlotIndex_Item) == 0x000078, "Member 'JSI_Slot_C_DoCustomNavigation_Right::CallFunc_GetItemBySlotIndex_Item' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Right, CallFunc_GetSlotIndexByColumnRow_ReturnValue_1) == 0x000080, "Member 'JSI_Slot_C_DoCustomNavigation_Right::CallFunc_GetSlotIndexByColumnRow_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Right, CallFunc_GetItemBySlotIndex_Found_1) == 0x000084, "Member 'JSI_Slot_C_DoCustomNavigation_Right::CallFunc_GetItemBySlotIndex_Found_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Right, CallFunc_GetItemBySlotIndex_Item_1) == 0x000088, "Member 'JSI_Slot_C_DoCustomNavigation_Right::CallFunc_GetItemBySlotIndex_Item_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Right, CallFunc_GetSlotLocationByIndex_ColumnIndex_) == 0x000090, "Member 'JSI_Slot_C_DoCustomNavigation_Right::CallFunc_GetSlotLocationByIndex_ColumnIndex_' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Right, CallFunc_GetSlotLocationByIndex_RowIndex_) == 0x000094, "Member 'JSI_Slot_C_DoCustomNavigation_Right::CallFunc_GetSlotLocationByIndex_RowIndex_' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Right, CallFunc_Add_IntInt_ReturnValue_5) == 0x000098, "Member 'JSI_Slot_C_DoCustomNavigation_Right::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Right, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'JSI_Slot_C_DoCustomNavigation_Right::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.DoCustomNavigation_Up
// 0x0098 (0x0098 - 0x0000)
struct JSI_Slot_C_DoCustomNavigation_Up final
{
public:
	EUINavigation                                 Param_Navigation;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         RowIndex;                                          // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ColumnIndex;                                       // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Iteration;                                         // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotIndexByColumnRow_ReturnValue;      // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemBySlotIndex_Found;                 // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetItemBySlotIndex_Item;                  // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotIndexByColumnRow_ReturnValue_1;    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemBySlotIndex_Found_1;               // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetItemBySlotIndex_Item_1;                // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotLocationByIndex_ColumnIndex_;      // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotLocationByIndex_RowIndex_;         // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_5;            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_DoCustomNavigation_Up) == 0x000008, "Wrong alignment on JSI_Slot_C_DoCustomNavigation_Up");
static_assert(sizeof(JSI_Slot_C_DoCustomNavigation_Up) == 0x000098, "Wrong size on JSI_Slot_C_DoCustomNavigation_Up");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Up, Param_Navigation) == 0x000000, "Member 'JSI_Slot_C_DoCustomNavigation_Up::Param_Navigation' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Up, ReturnValue) == 0x000008, "Member 'JSI_Slot_C_DoCustomNavigation_Up::ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Up, RowIndex) == 0x000010, "Member 'JSI_Slot_C_DoCustomNavigation_Up::RowIndex' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Up, ColumnIndex) == 0x000014, "Member 'JSI_Slot_C_DoCustomNavigation_Up::ColumnIndex' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Up, Iteration) == 0x000018, "Member 'JSI_Slot_C_DoCustomNavigation_Up::Iteration' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Up, Temp_int_Variable) == 0x00001C, "Member 'JSI_Slot_C_DoCustomNavigation_Up::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Up, Temp_int_Variable_1) == 0x000020, "Member 'JSI_Slot_C_DoCustomNavigation_Up::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Up, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'JSI_Slot_C_DoCustomNavigation_Up::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Up, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000028, "Member 'JSI_Slot_C_DoCustomNavigation_Up::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Up, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'JSI_Slot_C_DoCustomNavigation_Up::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Up, Temp_int_Variable_2) == 0x000030, "Member 'JSI_Slot_C_DoCustomNavigation_Up::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Up, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000034, "Member 'JSI_Slot_C_DoCustomNavigation_Up::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Up, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'JSI_Slot_C_DoCustomNavigation_Up::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Up, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x00003C, "Member 'JSI_Slot_C_DoCustomNavigation_Up::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Up, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000040, "Member 'JSI_Slot_C_DoCustomNavigation_Up::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Up, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'JSI_Slot_C_DoCustomNavigation_Up::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Up, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000048, "Member 'JSI_Slot_C_DoCustomNavigation_Up::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Up, CallFunc_Add_IntInt_ReturnValue_2) == 0x00004C, "Member 'JSI_Slot_C_DoCustomNavigation_Up::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Up, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000050, "Member 'JSI_Slot_C_DoCustomNavigation_Up::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Up, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000051, "Member 'JSI_Slot_C_DoCustomNavigation_Up::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Up, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x000054, "Member 'JSI_Slot_C_DoCustomNavigation_Up::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Up, CallFunc_Add_IntInt_ReturnValue_3) == 0x000058, "Member 'JSI_Slot_C_DoCustomNavigation_Up::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Up, CallFunc_GetSlotIndexByColumnRow_ReturnValue) == 0x00005C, "Member 'JSI_Slot_C_DoCustomNavigation_Up::CallFunc_GetSlotIndexByColumnRow_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Up, CallFunc_GetItemBySlotIndex_Found) == 0x000060, "Member 'JSI_Slot_C_DoCustomNavigation_Up::CallFunc_GetItemBySlotIndex_Found' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Up, CallFunc_GetItemBySlotIndex_Item) == 0x000068, "Member 'JSI_Slot_C_DoCustomNavigation_Up::CallFunc_GetItemBySlotIndex_Item' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Up, CallFunc_Add_IntInt_ReturnValue_4) == 0x000070, "Member 'JSI_Slot_C_DoCustomNavigation_Up::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Up, CallFunc_GetSlotIndexByColumnRow_ReturnValue_1) == 0x000074, "Member 'JSI_Slot_C_DoCustomNavigation_Up::CallFunc_GetSlotIndexByColumnRow_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Up, CallFunc_GetItemBySlotIndex_Found_1) == 0x000078, "Member 'JSI_Slot_C_DoCustomNavigation_Up::CallFunc_GetItemBySlotIndex_Found_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Up, CallFunc_GetItemBySlotIndex_Item_1) == 0x000080, "Member 'JSI_Slot_C_DoCustomNavigation_Up::CallFunc_GetItemBySlotIndex_Item_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Up, CallFunc_GetSlotLocationByIndex_ColumnIndex_) == 0x000088, "Member 'JSI_Slot_C_DoCustomNavigation_Up::CallFunc_GetSlotLocationByIndex_ColumnIndex_' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Up, CallFunc_GetSlotLocationByIndex_RowIndex_) == 0x00008C, "Member 'JSI_Slot_C_DoCustomNavigation_Up::CallFunc_GetSlotLocationByIndex_RowIndex_' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Up, CallFunc_Subtract_IntInt_ReturnValue_5) == 0x000090, "Member 'JSI_Slot_C_DoCustomNavigation_Up::CallFunc_Subtract_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_DoCustomNavigation_Up, CallFunc_Greater_IntInt_ReturnValue) == 0x000094, "Member 'JSI_Slot_C_DoCustomNavigation_Up::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.ExecuteUbergraph_JSI_Slot
// 0x0C88 (0x0C88 - 0x0000)
struct JSI_Slot_C_ExecuteUbergraph_JSI_Slot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EContainerType                                Temp_byte_Variable_5;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_3;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TSubclassOf<class UObject>                    K2Node_CustomEvent_Loaded;                         // 0x0048(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0050(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable;                               // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsUser_Widget;             // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Create_ReturnValue;                       // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface;  // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x009C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Rotate_;                        // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_FlipVector_;                    // 0x00AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_CalculateSize_ReturnValue;                // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x00C4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x00D4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E6[0x2];                                       // 0x00E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1; // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x010B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_1;                              // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A[0x6];                                      // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_PointerEvent_2;                       // 0x0120(0x0078)()
	class UDragDropOperation*                     K2Node_Event_Operation_2;                          // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Active;                         // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Index;                          // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A2[0x6];                                      // 0x01A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC;                  // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMPInGameInventory_C*                   CallFunc_GetInventoryWidget_Widget;                // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Selected;                       // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x01D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D5[0x3];                                      // 0x01D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x01E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMPInGameInventory_C*                   CallFunc_GetInventoryWidget_Widget_1;              // 0x0200(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_CustomEvent_Direction;                      // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Value;                          // 0x020D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x020E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20F[0x1];                                      // 0x020F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_PointerEvent_1;                       // 0x0210(0x0078)(ConstParm)
	class UDragDropOperation*                     K2Node_Event_Operation_1;                          // 0x0288(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Equipped;                       // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_291[0x3];                                      // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0294(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDragDropOperation*                     K2Node_CustomEvent_Op;                             // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UJigSDragOperation_C*                   K2Node_DynamicCast_AsJig_SDrag_Operation;          // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x02B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x02BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BB[0x5];                                      // 0x02BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UDragWidget_C*                          K2Node_DynamicCast_AsDrag_Widget;                  // 0x02C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Calculate_Size_With_Ratio_Size;           // 0x02D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x02E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x02E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x02E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry_1;                         // 0x02E4(0x0038)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_PointerEvent;                         // 0x0320(0x0078)()
	class UDragDropOperation*                     K2Node_Event_Operation;                            // 0x0398(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UJigSDragOperation_C*                   K2Node_DynamicCast_AsJig_SDrag_Operation_1;        // 0x03A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x03A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AA[0x6];                                      // 0x03AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UDragWidget_C*                          K2Node_DynamicCast_AsDrag_Widget_1;                // 0x03B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckRootContainer_CanAdd_;               // 0x03B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x03BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x03BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BC[0x4];                                      // 0x03BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 K2Node_CustomEvent_Image_Hovered_1;                // 0x03C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x03C8(0x0018)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x03E0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F1[0x7];                                      // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0400(0x0050)(HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_454[0x4];                                      // 0x0454(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0458(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_469[0x7];                                      // 0x0469(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0470(0x0018)()
	int32                                         CallFunc_CountOut_OutInt;                          // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_3;                           // 0x048C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_491[0x7];                                      // 0x0491(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x04A0(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F1[0x7];                                      // 0x04F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x04F8(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_509[0x7];                                      // 0x0509(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0510(0x0018)()
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0529(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x052A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x052B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x052C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x052D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52E[0x2];                                      // 0x052E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 K2Node_CustomEvent_Image_Hovered;                  // 0x0530(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_10;                             // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_539[0x7];                                      // 0x0539(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0540(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0548(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_551[0x7];                                      // 0x0551(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC_1;                // 0x0558(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0568(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_569[0x7];                                      // 0x0569(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 K2Node_CustomEvent_Image_ShopAnim;                 // 0x0570(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMPInGameInventory_C*                   CallFunc_GetInventoryWidget_Widget_2;              // 0x0578(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD_1;               // 0x0580(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetDragWidget_Success;                    // 0x0591(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_592[0x6];                                      // 0x0592(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UProgressBar*                           K2Node_CustomEvent_ProgressBar_Component_1;        // 0x0598(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x05A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x05A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AA[0x6];                                      // 0x05AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_3;        // 0x05B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvPC_C*                              K2Node_DynamicCast_AsSurv_PC;                      // 0x05B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C1[0x7];                                      // 0x05C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_4;        // 0x05C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvPC_C*                              K2Node_DynamicCast_AsSurv_PC_1;                    // 0x05D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x05D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D9[0x7];                                      // 0x05D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameHUD_C>        CallFunc_GetGUI_self_CastInput;                    // 0x05E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIW_PlayerMain_C*                      CallFunc_GetGUI_GUI;                               // 0x05F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x05F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F9[0x7];                                      // 0x05F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameHUD_C>        CallFunc_GetGUI_self_CastInput_1;                  // 0x0600(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIW_PlayerMain_C*                      CallFunc_GetGUI_GUI_1;                             // 0x0610(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x0619(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x061A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x061B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61C[0x4];                                      // 0x061C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0620(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow;           // 0x0628(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0848(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_849[0x7];                                      // 0x0849(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODAudioComponent*                    CallFunc_PlayEventAttached_ReturnValue;            // 0x0850(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UProgressBar*                           K2Node_CustomEvent_ProgressBar_Component;          // 0x0858(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_4;                           // 0x0860(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0868(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD_2;               // 0x0870(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x0880(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetDragWidget_Success_1;                  // 0x0881(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_882[0x2];                                      // 0x0882(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0884(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item;                           // 0x0888(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0890(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x08A0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x08B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x08B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B9[0x7];                                      // 0x08B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x08C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_5;                           // 0x08C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_6;                           // 0x08C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CA[0x2];                                      // 0x08CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x08CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_2;      // 0x08D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x08D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x08D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x08D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x08D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D5[0x3];                                      // 0x08D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSI_Slot_C*>                    K2Node_MakeArray_Array_2;                          // 0x08D8(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsSupportedType__Supported_;              // 0x08E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E9[0x7];                                      // 0x08E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_2;                              // 0x08F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x08F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x0900(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_9;        // 0x0901(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_902[0x6];                                      // 0x0902(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_7;                           // 0x0908(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_8;                           // 0x0910(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_9;                           // 0x0911(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_912[0x2];                                      // 0x0912(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFocusEvent                            K2Node_Event_InFocusEvent_1;                       // 0x0914(0x0008)(NoDestructor)
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x091C(0x0008)(NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0924(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0928(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_929[0x3];                                      // 0x0929(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x092C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0930(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0968(0x0078)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x09E0(0x0078)(ConstParm)
	TDelegate<void(EUINavigation Navigation)>     K2Node_CreateDelegate_OutputDelegate_5;            // 0x0A58(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EUINavigation Navigation)>     K2Node_CreateDelegate_OutputDelegate_6;            // 0x0A68(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EUINavigation Navigation)>     K2Node_CreateDelegate_OutputDelegate_7;            // 0x0A78(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EUINavigation Navigation)>     K2Node_CreateDelegate_OutputDelegate_8;            // 0x0A88(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_11;                             // 0x0A98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_12;                             // 0x0A99(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_13;                             // 0x0A9A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_14;                             // 0x0A9B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x0A9C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_10;                          // 0x0A9D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9E[0x2];                                      // 0x0A9E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0AA0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_5;        // 0x0AA8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0AB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AB1[0x7];                                      // 0x0AB1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvPC_C*                              K2Node_DynamicCast_AsSurv_PC_2;                    // 0x0AB8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x0AC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x0AC1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC2[0x6];                                      // 0x0AC2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetStat_Value;                            // 0x0AC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetStat_Value_1;                          // 0x0AD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0AD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_15;                             // 0x0AD9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_11;                             // 0x0ADA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ADB[0x5];                                      // 0x0ADB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default_11;                          // 0x0AE0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_12;                          // 0x0AE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AE9[0x7];                                      // 0x0AE9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0AF0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue_1;                // 0x0AF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_10;       // 0x0B00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0B01(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B02[0x6];                                      // 0x0B02(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_6;        // 0x0B08(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC_2;                // 0x0B10(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x0B20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B21[0x7];                                      // 0x0B21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_TabsWindow_C*                        CallFunc_GetTabsWidget_Widget;                     // 0x0B28(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDragDropping_ReturnValue;               // 0x0B30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B31[0x7];                                      // 0x0B31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_7;        // 0x0B38(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0B40(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_8;        // 0x0B48(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0B50(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x0B58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B59[0x7];                                      // 0x0B59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x0B60(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_StatsInterface_C>   K2Node_DynamicCast_AsI_Stats_Interface;            // 0x0B68(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x0B78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B79[0x7];                                      // 0x0B79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetStat_Value_2;                          // 0x0B80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBPC_PlayerStatsComponent_C*            CallFunc_GetStatsComponent_PlayerStats;            // 0x0B88(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetStat_Value_3;                          // 0x0B90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0B98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B99[0x7];                                      // 0x0B99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0BA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0BA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_9;        // 0x0BB0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationTimeRangeProxyObject_Result; // 0x0BB8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationTimeRangeProxyObject_ReturnValue; // 0x0BC0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_2;                 // 0x0BC8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_StatsInterface_C>   K2Node_DynamicCast_AsI_Stats_Interface_1;          // 0x0BD0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_17;                    // 0x0BE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x0BE1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BE2[0x6];                                      // 0x0BE2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPC_PlayerStatsComponent_C*            CallFunc_GetStatsComponent_PlayerStats_1;          // 0x0BE8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_time;                           // 0x0BF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0BF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0C00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0C08(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate_9;            // 0x0C10(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_10;       // 0x0C20(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC_3;                // 0x0C28(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_18;                    // 0x0C38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C39[0x7];                                      // 0x0C39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMPInGameInventory_C*                   CallFunc_GetInventoryWidget_Widget_3;              // 0x0C40(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x0C48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C49[0x7];                                      // 0x0C49(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default_13;                          // 0x0C50(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x0C58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x0C60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C64[0x4];                                      // 0x0C64(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_1;                // 0x0C68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0C70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderTransformAngle_Angle_ImplicitCast; // 0x0C78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CreatePlayAnimationTimeRangeProxyObject_PlaybackSpeed_ImplicitCast; // 0x0C7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RetriggerableDelay_Duration_ImplicitCast; // 0x0C80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0C84(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot) == 0x000008, "Wrong alignment on JSI_Slot_C_ExecuteUbergraph_JSI_Slot");
static_assert(sizeof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot) == 0x000C88, "Wrong size on JSI_Slot_C_ExecuteUbergraph_JSI_Slot");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, EntryPoint) == 0x000000, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::EntryPoint' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, Temp_byte_Variable) == 0x000004, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000005, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, Temp_bool_Variable) == 0x000006, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, Temp_byte_Variable_1) == 0x000007, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, Temp_byte_Variable_2) == 0x000008, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, Temp_bool_Variable_1) == 0x000009, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, Temp_byte_Variable_3) == 0x00000A, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, Temp_byte_Variable_4) == 0x00000B, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, Temp_byte_Variable_5) == 0x00000C, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_IsValid_ReturnValue) == 0x00000D, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, Temp_object_Variable) == 0x000010, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, Temp_object_Variable_1) == 0x000018, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, Temp_object_Variable_2) == 0x000020, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, Temp_object_Variable_3) == 0x000028, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_Select_Default) == 0x000030, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_PlayEvent2D_ReturnValue) == 0x000040, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_PlayEvent2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_CustomEvent_Loaded) == 0x000048, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_CreateDelegate_OutputDelegate) == 0x000050, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, Temp_class_Variable) == 0x000060, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_ClassDynamicCast_AsUser_Widget) == 0x000068, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_ClassDynamicCast_AsUser_Widget' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_ClassDynamicCast_bSuccess) == 0x000070, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_Create_ReturnValue) == 0x000078, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, Temp_bool_Variable_2) == 0x000080, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_DynamicCast_AsJSISpecial_Widget_Interface) == 0x000088, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_DynamicCast_AsJSISpecial_Widget_Interface' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, Temp_bool_Variable_3) == 0x000099, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_CreateDelegate_OutputDelegate_1) == 0x00009C, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, Temp_bool_Variable_4) == 0x0000AC, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000AD, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_CustomEvent_Rotate_) == 0x0000AE, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_CustomEvent_Rotate_' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_CustomEvent_FlipVector_) == 0x0000AF, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_CustomEvent_FlipVector_' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_CalculateSize_ReturnValue) == 0x0000B0, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_CalculateSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_IsValid_ReturnValue_2) == 0x0000C0, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_IsVisible_ReturnValue) == 0x0000C1, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_IsValid_ReturnValue_3) == 0x0000C2, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_IsValid_ReturnValue_4) == 0x0000C3, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_MakeStruct_LinearColor) == 0x0000C4, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_MakeStruct_LinearColor_1) == 0x0000D4, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_IsValid_ReturnValue_5) == 0x0000E4, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0000E5, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, Temp_real_Variable) == 0x0000E8, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_Select_Default_1) == 0x0000F0, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1) == 0x0000F8, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_DynamicCast_bSuccess_1) == 0x000108, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_IsValid_ReturnValue_6) == 0x000109, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_IsValid_ReturnValue_7) == 0x00010A, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_Not_PreBool_ReturnValue) == 0x00010B, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x00010C, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, Temp_real_Variable_1) == 0x000110, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_BooleanAND_ReturnValue) == 0x000118, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, Temp_bool_Variable_5) == 0x000119, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_Event_PointerEvent_2) == 0x000120, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_Event_PointerEvent_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_Event_Operation_2) == 0x000198, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_Event_Operation_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_CustomEvent_Active) == 0x0001A0, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_CustomEvent_Active' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_CustomEvent_Index) == 0x0001A1, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_CustomEvent_Index' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_GetPlayerController_ReturnValue) == 0x0001A8, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_DynamicCast_AsBPI_Surv_PC) == 0x0001B0, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_DynamicCast_AsBPI_Surv_PC' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_DynamicCast_bSuccess_2) == 0x0001C0, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_GetInventoryWidget_Widget) == 0x0001C8, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_GetInventoryWidget_Widget' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_CustomEvent_Selected) == 0x0001D0, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_CustomEvent_Selected' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0001D1, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x0001D2, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_BooleanOR_ReturnValue) == 0x0001D3, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_Not_PreBool_ReturnValue_1) == 0x0001D4, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_GetPlayerController_ReturnValue_1) == 0x0001D8, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_GetHUD_ReturnValue) == 0x0001E0, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x0001E8, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_DynamicCast_bSuccess_3) == 0x0001F8, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_GetInventoryWidget_Widget_1) == 0x000200, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_GetInventoryWidget_Widget_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_Array_Length_ReturnValue) == 0x000208, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_CustomEvent_Direction) == 0x00020C, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_CustomEvent_Direction' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_CustomEvent_Value) == 0x00020D, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_Select_Default_2) == 0x00020E, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_Event_PointerEvent_1) == 0x000210, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_Event_PointerEvent_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_Event_Operation_1) == 0x000288, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_Event_Operation_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_CustomEvent_Equipped) == 0x000290, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_CustomEvent_Equipped' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_MakeStruct_Margin) == 0x000294, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_CustomEvent_Op) == 0x0002A8, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_CustomEvent_Op' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_DynamicCast_AsJig_SDrag_Operation) == 0x0002B0, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_DynamicCast_AsJig_SDrag_Operation' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_DynamicCast_bSuccess_4) == 0x0002B8, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0002B9, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_BooleanAND_ReturnValue_1) == 0x0002BA, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_DynamicCast_AsDrag_Widget) == 0x0002C0, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_DynamicCast_AsDrag_Widget' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_DynamicCast_bSuccess_5) == 0x0002C8, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_Calculate_Size_With_Ratio_Size) == 0x0002D0, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_Calculate_Size_With_Ratio_Size' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_Not_PreBool_ReturnValue_2) == 0x0002E0, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x0002E1, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_BooleanOR_ReturnValue_1) == 0x0002E2, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, Temp_bool_Has_Been_Initd_Variable) == 0x0002E3, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_Event_MyGeometry_1) == 0x0002E4, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_Event_MyGeometry_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_Event_PointerEvent) == 0x000320, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_Event_PointerEvent' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_Event_Operation) == 0x000398, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_Event_Operation' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_DynamicCast_AsJig_SDrag_Operation_1) == 0x0003A0, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_DynamicCast_AsJig_SDrag_Operation_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_DynamicCast_bSuccess_6) == 0x0003A8, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, Temp_bool_IsClosed_Variable) == 0x0003A9, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_DynamicCast_AsDrag_Widget_1) == 0x0003B0, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_DynamicCast_AsDrag_Widget_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_DynamicCast_bSuccess_7) == 0x0003B8, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_CheckRootContainer_CanAdd_) == 0x0003B9, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_CheckRootContainer_CanAdd_' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x0003BA, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_BooleanAND_ReturnValue_2) == 0x0003BB, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_CustomEvent_Image_Hovered_1) == 0x0003C0, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_CustomEvent_Image_Hovered_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_Conv_NameToText_ReturnValue) == 0x0003C8, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_CreateDelegate_OutputDelegate_2) == 0x0003E0, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, Temp_byte_Variable_6) == 0x0003F0, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_Conv_IntToInt64_ReturnValue) == 0x0003F8, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_MakeStruct_FormatArgumentData) == 0x000400, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_FTrunc_ReturnValue) == 0x000450, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_MakeArray_Array) == 0x000458, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x000468, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_Format_ReturnValue) == 0x000470, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_CountOut_OutInt) == 0x000488, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_CountOut_OutInt' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_Select_Default_3) == 0x00048C, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, Temp_byte_Variable_7) == 0x000490, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000498, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_MakeStruct_FormatArgumentData_1) == 0x0004A0, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_Greater_IntInt_ReturnValue) == 0x0004F0, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_MakeArray_Array_1) == 0x0004F8, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_BooleanAND_ReturnValue_3) == 0x000508, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_Format_ReturnValue_1) == 0x000510, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_BooleanAND_ReturnValue_4) == 0x000528, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, Temp_bool_Variable_6) == 0x000529, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_BooleanOR_ReturnValue_2) == 0x00052A, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, Temp_byte_Variable_8) == 0x00052B, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, Temp_byte_Variable_9) == 0x00052C, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, Temp_bool_Variable_7) == 0x00052D, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_CustomEvent_Image_Hovered) == 0x000530, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_CustomEvent_Image_Hovered' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, Temp_byte_Variable_10) == 0x000538, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000540, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_GetPlayerController_ReturnValue_2) == 0x000548, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, Temp_bool_Variable_8) == 0x000550, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_DynamicCast_AsBPI_Surv_PC_1) == 0x000558, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_DynamicCast_AsBPI_Surv_PC_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_DynamicCast_bSuccess_8) == 0x000568, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_CustomEvent_Image_ShopAnim) == 0x000570, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_CustomEvent_Image_ShopAnim' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_GetInventoryWidget_Widget_2) == 0x000578, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_GetInventoryWidget_Widget_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_DynamicCast_AsBPI_Game_HUD_1) == 0x000580, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_DynamicCast_AsBPI_Game_HUD_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_DynamicCast_bSuccess_9) == 0x000590, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_SetDragWidget_Success) == 0x000591, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_SetDragWidget_Success' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_CustomEvent_ProgressBar_Component_1) == 0x000598, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_CustomEvent_ProgressBar_Component_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_Lerp_ReturnValue) == 0x0005A0, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x0005A8, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_IsValid_ReturnValue_8) == 0x0005A9, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_GetPlayerController_ReturnValue_3) == 0x0005B0, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_GetPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_DynamicCast_AsSurv_PC) == 0x0005B8, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_DynamicCast_AsSurv_PC' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_DynamicCast_bSuccess_10) == 0x0005C0, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_GetPlayerController_ReturnValue_4) == 0x0005C8, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_GetPlayerController_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_DynamicCast_AsSurv_PC_1) == 0x0005D0, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_DynamicCast_AsSurv_PC_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_DynamicCast_bSuccess_11) == 0x0005D8, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_GetGUI_self_CastInput) == 0x0005E0, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_GetGUI_self_CastInput' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_GetGUI_GUI) == 0x0005F0, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_GetGUI_GUI' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_IsValid_ReturnValue_9) == 0x0005F8, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_GetGUI_self_CastInput_1) == 0x000600, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_GetGUI_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_GetGUI_GUI_1) == 0x000610, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_GetGUI_GUI_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_IsValid_ReturnValue_10) == 0x000618, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_IsValid_ReturnValue_11) == 0x000619, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x00061A, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_Not_PreBool_ReturnValue_3) == 0x00061B, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000620, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_GetDataTableRowFromName_OutRow) == 0x000628, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000848, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_PlayEventAttached_ReturnValue) == 0x000850, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_PlayEventAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_CustomEvent_ProgressBar_Component) == 0x000858, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_CustomEvent_ProgressBar_Component' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_Select_Default_4) == 0x000860, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_Lerp_ReturnValue_1) == 0x000868, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_DynamicCast_AsBPI_Game_HUD_2) == 0x000870, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_DynamicCast_AsBPI_Game_HUD_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_DynamicCast_bSuccess_12) == 0x000880, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_SetDragWidget_Success_1) == 0x000881, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_SetDragWidget_Success_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, Temp_int_Array_Index_Variable) == 0x000884, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_Array_Get_Item) == 0x000888, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_CreateDelegate_OutputDelegate_3) == 0x000890, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_CreateDelegate_OutputDelegate_4) == 0x0008A0, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_PlayAnimationForward_ReturnValue) == 0x0008B0, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_BooleanAND_ReturnValue_5) == 0x0008B8, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x0008C0, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_Select_Default_5) == 0x0008C8, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_Select_Default_6) == 0x0008C9, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_GetEndTime_ReturnValue) == 0x0008CC, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_NotEqual_ObjectObject_ReturnValue_2) == 0x0008D0, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_NotEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_IsLocallyControlled_ReturnValue) == 0x0008D1, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x0008D2, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_BooleanAND_ReturnValue_6) == 0x0008D3, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_BooleanAND_ReturnValue_7) == 0x0008D4, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_MakeArray_Array_2) == 0x0008D8, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_IsSupportedType__Supported_) == 0x0008E8, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_IsSupportedType__Supported_' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, Temp_real_Variable_2) == 0x0008F0, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, Temp_real_Variable_3) == 0x0008F8, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, Temp_bool_Variable_9) == 0x000900, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_EqualEqual_ByteByte_ReturnValue_9) == 0x000901, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_EqualEqual_ByteByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_Select_Default_7) == 0x000908, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_Select_Default_8) == 0x000910, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_Select_Default_9) == 0x000911, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_Event_InFocusEvent_1) == 0x000914, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_Event_InFocusEvent_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_Event_InFocusEvent) == 0x00091C, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_Event_InFocusEvent' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, Temp_int_Loop_Counter_Variable) == 0x000924, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_Less_IntInt_ReturnValue) == 0x000928, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_Add_IntInt_ReturnValue) == 0x00092C, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_Event_MyGeometry) == 0x000930, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_Event_MouseEvent_1) == 0x000968, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_Event_MouseEvent) == 0x0009E0, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_CreateDelegate_OutputDelegate_5) == 0x000A58, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_CreateDelegate_OutputDelegate_6) == 0x000A68, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_CreateDelegate_OutputDelegate_7) == 0x000A78, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_CreateDelegate_OutputDelegate_8) == 0x000A88, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, Temp_byte_Variable_11) == 0x000A98, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, Temp_byte_Variable_12) == 0x000A99, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, Temp_byte_Variable_13) == 0x000A9A, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, Temp_byte_Variable_14) == 0x000A9B, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, Temp_bool_Variable_10) == 0x000A9C, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_Select_Default_10) == 0x000A9D, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_PlayAnimation_ReturnValue) == 0x000AA0, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_GetPlayerController_ReturnValue_5) == 0x000AA8, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_GetPlayerController_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_Event_IsDesignTime) == 0x000AB0, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_DynamicCast_AsSurv_PC_2) == 0x000AB8, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_DynamicCast_AsSurv_PC_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_DynamicCast_bSuccess_13) == 0x000AC0, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_IsValid_ReturnValue_12) == 0x000AC1, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_GetStat_Value) == 0x000AC8, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_GetStat_Value' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_GetStat_Value_1) == 0x000AD0, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_GetStat_Value_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000AD8, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, Temp_byte_Variable_15) == 0x000AD9, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, Temp_bool_Variable_11) == 0x000ADA, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_Select_Default_11) == 0x000AE0, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_Select_Default_12) == 0x000AE8, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_Select_Default_12' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000AF0, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_PlayEvent2D_ReturnValue_1) == 0x000AF8, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_PlayEvent2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_EqualEqual_ByteByte_ReturnValue_10) == 0x000B00, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_EqualEqual_ByteByte_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000B01, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_GetPlayerController_ReturnValue_6) == 0x000B08, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_GetPlayerController_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_DynamicCast_AsBPI_Surv_PC_2) == 0x000B10, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_DynamicCast_AsBPI_Surv_PC_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_DynamicCast_bSuccess_14) == 0x000B20, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_GetTabsWidget_Widget) == 0x000B28, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_GetTabsWidget_Widget' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_IsDragDropping_ReturnValue) == 0x000B30, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_IsDragDropping_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_GetPlayerController_ReturnValue_7) == 0x000B38, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_GetPlayerController_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_K2_GetPawn_ReturnValue) == 0x000B40, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_GetPlayerController_ReturnValue_8) == 0x000B48, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_GetPlayerController_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_DynamicCast_AsSurvival_Player) == 0x000B50, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_DynamicCast_bSuccess_15) == 0x000B58, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_K2_GetPawn_ReturnValue_1) == 0x000B60, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_DynamicCast_AsI_Stats_Interface) == 0x000B68, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_DynamicCast_AsI_Stats_Interface' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_DynamicCast_bSuccess_16) == 0x000B78, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_GetStat_Value_2) == 0x000B80, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_GetStat_Value_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_GetStatsComponent_PlayerStats) == 0x000B88, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_GetStatsComponent_PlayerStats' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_GetStat_Value_3) == 0x000B90, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_GetStat_Value_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000B98, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000BA0, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000BA8, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_GetPlayerController_ReturnValue_9) == 0x000BB0, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_GetPlayerController_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_CreatePlayAnimationTimeRangeProxyObject_Result) == 0x000BB8, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_CreatePlayAnimationTimeRangeProxyObject_Result' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_CreatePlayAnimationTimeRangeProxyObject_ReturnValue) == 0x000BC0, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_CreatePlayAnimationTimeRangeProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_K2_GetPawn_ReturnValue_2) == 0x000BC8, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_K2_GetPawn_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_DynamicCast_AsI_Stats_Interface_1) == 0x000BD0, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_DynamicCast_AsI_Stats_Interface_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_DynamicCast_bSuccess_17) == 0x000BE0, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_DynamicCast_bSuccess_17' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_IsValid_ReturnValue_13) == 0x000BE1, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_GetStatsComponent_PlayerStats_1) == 0x000BE8, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_GetStatsComponent_PlayerStats_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_CustomEvent_time) == 0x000BF0, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_CustomEvent_time' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000BF8, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000C00, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000C08, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_CreateDelegate_OutputDelegate_9) == 0x000C10, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_GetPlayerController_ReturnValue_10) == 0x000C20, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_GetPlayerController_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_DynamicCast_AsBPI_Surv_PC_3) == 0x000C28, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_DynamicCast_AsBPI_Surv_PC_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_DynamicCast_bSuccess_18) == 0x000C38, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_DynamicCast_bSuccess_18' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_GetInventoryWidget_Widget_3) == 0x000C40, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_GetInventoryWidget_Widget_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_BooleanAND_ReturnValue_8) == 0x000C48, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, K2Node_Select_Default_13) == 0x000C50, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::K2Node_Select_Default_13' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_Lerp_Alpha_ImplicitCast) == 0x000C58, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x000C60, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_Lerp_Alpha_ImplicitCast_1) == 0x000C68, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_Lerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000C70, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_SetRenderTransformAngle_Angle_ImplicitCast) == 0x000C78, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_SetRenderTransformAngle_Angle_ImplicitCast' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_CreatePlayAnimationTimeRangeProxyObject_PlaybackSpeed_ImplicitCast) == 0x000C7C, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_CreatePlayAnimationTimeRangeProxyObject_PlaybackSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_RetriggerableDelay_Duration_ImplicitCast) == 0x000C80, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_RetriggerableDelay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ExecuteUbergraph_JSI_Slot, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000C84, "Member 'JSI_Slot_C_ExecuteUbergraph_JSI_Slot::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.Get Enough Money
// 0x0001 (0x0001 - 0x0000)
struct JSI_Slot_C_Get_Enough_Money final
{
public:
	bool                                          Param_HaveEnoughMoney;                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_Get_Enough_Money) == 0x000001, "Wrong alignment on JSI_Slot_C_Get_Enough_Money");
static_assert(sizeof(JSI_Slot_C_Get_Enough_Money) == 0x000001, "Wrong size on JSI_Slot_C_Get_Enough_Money");
static_assert(offsetof(JSI_Slot_C_Get_Enough_Money, Param_HaveEnoughMoney) == 0x000000, "Member 'JSI_Slot_C_Get_Enough_Money::Param_HaveEnoughMoney' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.Get Icon
// 0x0258 (0x0258 - 0x0000)
struct JSI_Slot_C_Get_Icon final
{
public:
	struct FFItemInfo                             FItemInfo;                                         // 0x0000(0x0220)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	class ABP_GameHUD_C*                          HUD;                                               // 0x0220(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                Param_Image;                                       // 0x0228(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                FinishImage;                                       // 0x0230(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x023A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x023B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x023D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x023E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23F[0x1];                                      // 0x023F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_Get_Weapon_Icon_Image;                    // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_Get_Icon) == 0x000008, "Wrong alignment on JSI_Slot_C_Get_Icon");
static_assert(sizeof(JSI_Slot_C_Get_Icon) == 0x000258, "Wrong size on JSI_Slot_C_Get_Icon");
static_assert(offsetof(JSI_Slot_C_Get_Icon, FItemInfo) == 0x000000, "Member 'JSI_Slot_C_Get_Icon::FItemInfo' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Icon, HUD) == 0x000220, "Member 'JSI_Slot_C_Get_Icon::HUD' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Icon, Param_Image) == 0x000228, "Member 'JSI_Slot_C_Get_Icon::Param_Image' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Icon, FinishImage) == 0x000230, "Member 'JSI_Slot_C_Get_Icon::FinishImage' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Icon, CallFunc_IsLocalPlayerController_ReturnValue) == 0x000238, "Member 'JSI_Slot_C_Get_Icon::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Icon, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000239, "Member 'JSI_Slot_C_Get_Icon::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Icon, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00023A, "Member 'JSI_Slot_C_Get_Icon::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Icon, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00023B, "Member 'JSI_Slot_C_Get_Icon::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Icon, CallFunc_BooleanOR_ReturnValue) == 0x00023C, "Member 'JSI_Slot_C_Get_Icon::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Icon, CallFunc_BooleanAND_ReturnValue) == 0x00023D, "Member 'JSI_Slot_C_Get_Icon::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Icon, CallFunc_BooleanAND_ReturnValue_1) == 0x00023E, "Member 'JSI_Slot_C_Get_Icon::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Icon, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000240, "Member 'JSI_Slot_C_Get_Icon::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Icon, CallFunc_IsValid_ReturnValue) == 0x000248, "Member 'JSI_Slot_C_Get_Icon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Icon, CallFunc_Get_Weapon_Icon_Image) == 0x000250, "Member 'JSI_Slot_C_Get_Icon::CallFunc_Get_Weapon_Icon_Image' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.Get Image Border Visibility
// 0x0006 (0x0006 - 0x0000)
struct JSI_Slot_C_Get_Image_Border_Visibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_Get_Image_Border_Visibility) == 0x000001, "Wrong alignment on JSI_Slot_C_Get_Image_Border_Visibility");
static_assert(sizeof(JSI_Slot_C_Get_Image_Border_Visibility) == 0x000006, "Wrong size on JSI_Slot_C_Get_Image_Border_Visibility");
static_assert(offsetof(JSI_Slot_C_Get_Image_Border_Visibility, ReturnValue) == 0x000000, "Member 'JSI_Slot_C_Get_Image_Border_Visibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Image_Border_Visibility, Temp_bool_Variable) == 0x000001, "Member 'JSI_Slot_C_Get_Image_Border_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Image_Border_Visibility, Temp_byte_Variable) == 0x000002, "Member 'JSI_Slot_C_Get_Image_Border_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Image_Border_Visibility, Temp_byte_Variable_1) == 0x000003, "Member 'JSI_Slot_C_Get_Image_Border_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Image_Border_Visibility, K2Node_Select_Default) == 0x000004, "Member 'JSI_Slot_C_Get_Image_Border_Visibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Image_Border_Visibility, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000005, "Member 'JSI_Slot_C_Get_Image_Border_Visibility::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.Get Pivot Index
// 0x0328 (0x0328 - 0x0000)
struct JSI_Slot_C_Get_Pivot_Index final
{
public:
	struct FVector2D                              Param_DragOffset;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumberOfCellsInRow;                                // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumberOfCellsInColumn;                             // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Y_Location;                                        // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        X_Location;                                        // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_4;                        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_4;                        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_5;                        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_5;                        // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A[0x2];                                      // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_9;      // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_10;     // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_11;     // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_12;     // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_5;           // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_13;     // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_2;     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_3;     // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_192[0x6];                                      // 0x0192(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_14;     // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_4;     // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_3;           // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_15;     // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_5;     // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x3];                                      // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_4;           // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E2[0x6];                                      // 0x01E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_16;     // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_6;     // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_5;           // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_2;                  // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_17;     // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_7;     // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x3];                                      // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue_3;                  // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x021A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x021B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x021D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_6;          // 0x021E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x021F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_7;          // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x3];                                      // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x0224(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_235[0x3];                                      // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_18;     // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_19;     // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_20;     // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_21;     // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_6;           // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_7;           // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_8;           // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_9;           // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_10;          // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_11;          // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0288(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_8;          // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default;                             // 0x02A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_6;                        // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_6;                        // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_9;          // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_NormalizeToRange_ReturnValue;             // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_NormalizeToRange_ReturnValue_1;           // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_10;         // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_11;         // 0x02E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_12;         // 0x02E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x02E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_13;         // 0x02E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x02E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E6[0x2];                                      // 0x02E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1;   // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2;   // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_3;   // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_4;   // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_5;   // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_6;   // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_7;   // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_Get_Pivot_Index) == 0x000008, "Wrong alignment on JSI_Slot_C_Get_Pivot_Index");
static_assert(sizeof(JSI_Slot_C_Get_Pivot_Index) == 0x000328, "Wrong size on JSI_Slot_C_Get_Pivot_Index");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, Param_DragOffset) == 0x000000, "Member 'JSI_Slot_C_Get_Pivot_Index::Param_DragOffset' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, Param_Index) == 0x000010, "Member 'JSI_Slot_C_Get_Pivot_Index::Param_Index' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, NumberOfCellsInRow) == 0x000014, "Member 'JSI_Slot_C_Get_Pivot_Index::NumberOfCellsInRow' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, NumberOfCellsInColumn) == 0x000018, "Member 'JSI_Slot_C_Get_Pivot_Index::NumberOfCellsInColumn' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, Y_Location) == 0x000020, "Member 'JSI_Slot_C_Get_Pivot_Index::Y_Location' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, X_Location) == 0x000028, "Member 'JSI_Slot_C_Get_Pivot_Index::X_Location' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_BreakVector2D_X) == 0x000030, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_BreakVector2D_Y) == 0x000038, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_BreakVector2D_X_1) == 0x000040, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_BreakVector2D_Y_1) == 0x000048, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_BreakVector2D_X_2) == 0x000050, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_BreakVector2D_Y_2) == 0x000058, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_BreakVector2D_X_3) == 0x000060, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_BreakVector2D_Y_3) == 0x000068, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000070, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000078, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_BreakVector2D_X_4) == 0x000080, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_BreakVector2D_Y_4) == 0x000088, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000090, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000098, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0000A0, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000A8, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0000B0, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x0000B8, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0000C0, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x0000C8, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x0000D0, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x0000D8, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_BreakVector2D_X_5) == 0x0000E0, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_BreakVector2D_X_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_BreakVector2D_Y_5) == 0x0000E8, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_BreakVector2D_Y_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0000F0, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_FTrunc_ReturnValue) == 0x0000F8, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x000100, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000108, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x000109, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_FTrunc_ReturnValue_1) == 0x00010C, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, K2Node_MakeStruct_Margin) == 0x000110, "Member 'JSI_Slot_C_Get_Pivot_Index::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Multiply_DoubleDouble_ReturnValue_9) == 0x000120, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Multiply_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Multiply_DoubleDouble_ReturnValue_10) == 0x000128, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Multiply_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Multiply_DoubleDouble_ReturnValue_11) == 0x000130, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Multiply_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Multiply_DoubleDouble_ReturnValue_12) == 0x000138, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Multiply_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000140, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000148, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000150, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000158, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x000160, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Add_DoubleDouble_ReturnValue_5) == 0x000168, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Add_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_MakeVector2D_ReturnValue) == 0x000170, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000180, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Multiply_DoubleDouble_ReturnValue_13) == 0x000188, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Multiply_DoubleDouble_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_LessEqual_DoubleDouble_ReturnValue_2) == 0x000190, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_LessEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_LessEqual_DoubleDouble_ReturnValue_3) == 0x000191, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_LessEqual_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000198, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Multiply_DoubleDouble_ReturnValue_14) == 0x0001A0, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Multiply_DoubleDouble_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_LessEqual_DoubleDouble_ReturnValue_4) == 0x0001A8, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_LessEqual_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Conv_IntToDouble_ReturnValue_3) == 0x0001B0, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Conv_IntToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_SelectInt_ReturnValue) == 0x0001B8, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Multiply_DoubleDouble_ReturnValue_15) == 0x0001C0, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Multiply_DoubleDouble_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_LessEqual_DoubleDouble_ReturnValue_5) == 0x0001C8, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_LessEqual_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_SelectInt_ReturnValue_1) == 0x0001CC, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Conv_IntToDouble_ReturnValue_4) == 0x0001D0, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Conv_IntToDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Greater_IntInt_ReturnValue) == 0x0001D8, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Add_IntInt_ReturnValue) == 0x0001DC, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0001E0, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0001E1, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Multiply_DoubleDouble_ReturnValue_16) == 0x0001E8, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Multiply_DoubleDouble_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_LessEqual_DoubleDouble_ReturnValue_6) == 0x0001F0, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_LessEqual_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Conv_IntToDouble_ReturnValue_5) == 0x0001F8, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Conv_IntToDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_SelectInt_ReturnValue_2) == 0x000200, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_SelectInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Multiply_DoubleDouble_ReturnValue_17) == 0x000208, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Multiply_DoubleDouble_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_LessEqual_DoubleDouble_ReturnValue_7) == 0x000210, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_LessEqual_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_SelectInt_ReturnValue_3) == 0x000214, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_SelectInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, Temp_bool_Variable) == 0x000218, "Member 'JSI_Slot_C_Get_Pivot_Index::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000219, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x00021A, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_BooleanAND_ReturnValue) == 0x00021B, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x00021C, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x00021D, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_EqualEqual_IntInt_ReturnValue_6) == 0x00021E, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_EqualEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_BooleanAND_ReturnValue_1) == 0x00021F, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_EqualEqual_IntInt_ReturnValue_7) == 0x000220, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_EqualEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, K2Node_MakeStruct_Margin_1) == 0x000224, "Member 'JSI_Slot_C_Get_Pivot_Index::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_BooleanAND_ReturnValue_2) == 0x000234, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Multiply_DoubleDouble_ReturnValue_18) == 0x000238, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Multiply_DoubleDouble_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Multiply_DoubleDouble_ReturnValue_19) == 0x000240, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Multiply_DoubleDouble_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Multiply_DoubleDouble_ReturnValue_20) == 0x000248, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Multiply_DoubleDouble_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Multiply_DoubleDouble_ReturnValue_21) == 0x000250, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Multiply_DoubleDouble_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Add_DoubleDouble_ReturnValue_6) == 0x000258, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Add_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Add_DoubleDouble_ReturnValue_7) == 0x000260, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Add_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Add_DoubleDouble_ReturnValue_8) == 0x000268, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Add_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Add_DoubleDouble_ReturnValue_9) == 0x000270, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Add_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Add_DoubleDouble_ReturnValue_10) == 0x000278, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Add_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Add_DoubleDouble_ReturnValue_11) == 0x000280, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Add_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_MakeVector2D_ReturnValue_1) == 0x000288, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_EqualEqual_IntInt_ReturnValue_8) == 0x000298, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_EqualEqual_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, K2Node_Select_Default) == 0x0002A0, "Member 'JSI_Slot_C_Get_Pivot_Index::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_BreakVector2D_X_6) == 0x0002B0, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_BreakVector2D_X_6' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_BreakVector2D_Y_6) == 0x0002B8, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_BreakVector2D_Y_6' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_EqualEqual_IntInt_ReturnValue_9) == 0x0002C0, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_EqualEqual_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_NormalizeToRange_ReturnValue) == 0x0002C8, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_BooleanAND_ReturnValue_3) == 0x0002D0, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_NormalizeToRange_ReturnValue_1) == 0x0002D8, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_NormalizeToRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_EqualEqual_IntInt_ReturnValue_10) == 0x0002E0, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_EqualEqual_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_EqualEqual_IntInt_ReturnValue_11) == 0x0002E1, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_EqualEqual_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_EqualEqual_IntInt_ReturnValue_12) == 0x0002E2, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_EqualEqual_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_BooleanAND_ReturnValue_4) == 0x0002E3, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_EqualEqual_IntInt_ReturnValue_13) == 0x0002E4, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_EqualEqual_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_BooleanAND_ReturnValue_5) == 0x0002E5, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x0002E8, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1) == 0x0002F0, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2) == 0x0002F8, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_3) == 0x000300, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_4) == 0x000308, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_5) == 0x000310, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_6) == 0x000318, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Pivot_Index, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_7) == 0x000320, "Member 'JSI_Slot_C_Get_Pivot_Index::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_7' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.Get Repair Price
// 0x0004 (0x0004 - 0x0000)
struct JSI_Slot_C_Get_Repair_Price final
{
public:
	int32                                         Param_RepairPrice;                                 // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_Get_Repair_Price) == 0x000004, "Wrong alignment on JSI_Slot_C_Get_Repair_Price");
static_assert(sizeof(JSI_Slot_C_Get_Repair_Price) == 0x000004, "Wrong size on JSI_Slot_C_Get_Repair_Price");
static_assert(offsetof(JSI_Slot_C_Get_Repair_Price, Param_RepairPrice) == 0x000000, "Member 'JSI_Slot_C_Get_Repair_Price::Param_RepairPrice' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.Get_Background_Visibility_0
// 0x000C (0x000C - 0x0000)
struct JSI_Slot_C_Get_Background_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_Get_Background_Visibility_0) == 0x000001, "Wrong alignment on JSI_Slot_C_Get_Background_Visibility_0");
static_assert(sizeof(JSI_Slot_C_Get_Background_Visibility_0) == 0x00000C, "Wrong size on JSI_Slot_C_Get_Background_Visibility_0");
static_assert(offsetof(JSI_Slot_C_Get_Background_Visibility_0, ReturnValue) == 0x000000, "Member 'JSI_Slot_C_Get_Background_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Background_Visibility_0, Temp_bool_Variable) == 0x000001, "Member 'JSI_Slot_C_Get_Background_Visibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Background_Visibility_0, Temp_byte_Variable) == 0x000002, "Member 'JSI_Slot_C_Get_Background_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Background_Visibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'JSI_Slot_C_Get_Background_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Background_Visibility_0, Temp_bool_Variable_1) == 0x000004, "Member 'JSI_Slot_C_Get_Background_Visibility_0::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Background_Visibility_0, Temp_byte_Variable_2) == 0x000005, "Member 'JSI_Slot_C_Get_Background_Visibility_0::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Background_Visibility_0, Temp_byte_Variable_3) == 0x000006, "Member 'JSI_Slot_C_Get_Background_Visibility_0::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Background_Visibility_0, K2Node_Select_Default) == 0x000007, "Member 'JSI_Slot_C_Get_Background_Visibility_0::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Background_Visibility_0, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000008, "Member 'JSI_Slot_C_Get_Background_Visibility_0::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Background_Visibility_0, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000009, "Member 'JSI_Slot_C_Get_Background_Visibility_0::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Background_Visibility_0, CallFunc_BooleanOR_ReturnValue) == 0x00000A, "Member 'JSI_Slot_C_Get_Background_Visibility_0::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Background_Visibility_0, K2Node_Select_Default_1) == 0x00000B, "Member 'JSI_Slot_C_Get_Background_Visibility_0::K2Node_Select_Default_1' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.Get_Background_WithItem_Visibility_0
// 0x0005 (0x0005 - 0x0000)
struct JSI_Slot_C_Get_Background_WithItem_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_Get_Background_WithItem_Visibility_0) == 0x000001, "Wrong alignment on JSI_Slot_C_Get_Background_WithItem_Visibility_0");
static_assert(sizeof(JSI_Slot_C_Get_Background_WithItem_Visibility_0) == 0x000005, "Wrong size on JSI_Slot_C_Get_Background_WithItem_Visibility_0");
static_assert(offsetof(JSI_Slot_C_Get_Background_WithItem_Visibility_0, ReturnValue) == 0x000000, "Member 'JSI_Slot_C_Get_Background_WithItem_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Background_WithItem_Visibility_0, Temp_bool_Variable) == 0x000001, "Member 'JSI_Slot_C_Get_Background_WithItem_Visibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Background_WithItem_Visibility_0, Temp_byte_Variable) == 0x000002, "Member 'JSI_Slot_C_Get_Background_WithItem_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Background_WithItem_Visibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'JSI_Slot_C_Get_Background_WithItem_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Background_WithItem_Visibility_0, K2Node_Select_Default) == 0x000004, "Member 'JSI_Slot_C_Get_Background_WithItem_Visibility_0::K2Node_Select_Default' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.Get_Image_ColorGradient_Visibility_0
// 0x0005 (0x0005 - 0x0000)
struct JSI_Slot_C_Get_Image_ColorGradient_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_Get_Image_ColorGradient_Visibility_0) == 0x000001, "Wrong alignment on JSI_Slot_C_Get_Image_ColorGradient_Visibility_0");
static_assert(sizeof(JSI_Slot_C_Get_Image_ColorGradient_Visibility_0) == 0x000005, "Wrong size on JSI_Slot_C_Get_Image_ColorGradient_Visibility_0");
static_assert(offsetof(JSI_Slot_C_Get_Image_ColorGradient_Visibility_0, ReturnValue) == 0x000000, "Member 'JSI_Slot_C_Get_Image_ColorGradient_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Image_ColorGradient_Visibility_0, Temp_bool_Variable) == 0x000001, "Member 'JSI_Slot_C_Get_Image_ColorGradient_Visibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Image_ColorGradient_Visibility_0, Temp_byte_Variable) == 0x000002, "Member 'JSI_Slot_C_Get_Image_ColorGradient_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Image_ColorGradient_Visibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'JSI_Slot_C_Get_Image_ColorGradient_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Get_Image_ColorGradient_Visibility_0, K2Node_Select_Default) == 0x000004, "Member 'JSI_Slot_C_Get_Image_ColorGradient_Visibility_0::K2Node_Select_Default' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.GetBorderColorByRarity
// 0x0034 (0x0034 - 0x0000)
struct JSI_Slot_C_GetBorderColorByRarity final
{
public:
	ESlotRarity                                   Param_Rarity;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Color;                                             // 0x0004(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRarityColors                          CallFunc_Array_Get_Item;                           // 0x001C(0x0018)(HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_GetBorderColorByRarity) == 0x000004, "Wrong alignment on JSI_Slot_C_GetBorderColorByRarity");
static_assert(sizeof(JSI_Slot_C_GetBorderColorByRarity) == 0x000034, "Wrong size on JSI_Slot_C_GetBorderColorByRarity");
static_assert(offsetof(JSI_Slot_C_GetBorderColorByRarity, Param_Rarity) == 0x000000, "Member 'JSI_Slot_C_GetBorderColorByRarity::Param_Rarity' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetBorderColorByRarity, Color) == 0x000004, "Member 'JSI_Slot_C_GetBorderColorByRarity::Color' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetBorderColorByRarity, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000014, "Member 'JSI_Slot_C_GetBorderColorByRarity::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetBorderColorByRarity, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'JSI_Slot_C_GetBorderColorByRarity::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetBorderColorByRarity, CallFunc_Array_Get_Item) == 0x00001C, "Member 'JSI_Slot_C_GetBorderColorByRarity::CallFunc_Array_Get_Item' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.GetClickLocation
// 0x01E8 (0x01E8 - 0x0000)
struct JSI_Slot_C_GetClickLocation final
{
public:
	struct FGeometry                              Geometry;                                          // 0x0000(0x0038)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvents;                                       // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector2D                              Output_Get;                                        // 0x00B0(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDragPivot                                    Temp_byte_Variable;                                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue; // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_AbsoluteToLocal_ReturnValue;              // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0148(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_4;               // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_5;               // 0x0180(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_6;               // 0x0190(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_7;               // 0x01B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_8;               // 0x01C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default;                             // 0x01D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_GetClickLocation) == 0x000008, "Wrong alignment on JSI_Slot_C_GetClickLocation");
static_assert(sizeof(JSI_Slot_C_GetClickLocation) == 0x0001E8, "Wrong size on JSI_Slot_C_GetClickLocation");
static_assert(offsetof(JSI_Slot_C_GetClickLocation, Geometry) == 0x000000, "Member 'JSI_Slot_C_GetClickLocation::Geometry' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetClickLocation, MouseEvents) == 0x000038, "Member 'JSI_Slot_C_GetClickLocation::MouseEvents' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetClickLocation, Output_Get) == 0x0000B0, "Member 'JSI_Slot_C_GetClickLocation::Output_Get' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetClickLocation, Temp_byte_Variable) == 0x0000C0, "Member 'JSI_Slot_C_GetClickLocation::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetClickLocation, CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue) == 0x0000C8, "Member 'JSI_Slot_C_GetClickLocation::CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetClickLocation, CallFunc_MakeVector2D_ReturnValue) == 0x0000D8, "Member 'JSI_Slot_C_GetClickLocation::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetClickLocation, CallFunc_AbsoluteToLocal_ReturnValue) == 0x0000E8, "Member 'JSI_Slot_C_GetClickLocation::CallFunc_AbsoluteToLocal_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetClickLocation, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x0000F8, "Member 'JSI_Slot_C_GetClickLocation::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetClickLocation, CallFunc_BreakVector2D_X) == 0x000108, "Member 'JSI_Slot_C_GetClickLocation::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetClickLocation, CallFunc_BreakVector2D_Y) == 0x000110, "Member 'JSI_Slot_C_GetClickLocation::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetClickLocation, CallFunc_BreakVector2D_X_1) == 0x000118, "Member 'JSI_Slot_C_GetClickLocation::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetClickLocation, CallFunc_BreakVector2D_Y_1) == 0x000120, "Member 'JSI_Slot_C_GetClickLocation::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetClickLocation, CallFunc_MakeVector2D_ReturnValue_1) == 0x000128, "Member 'JSI_Slot_C_GetClickLocation::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetClickLocation, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000138, "Member 'JSI_Slot_C_GetClickLocation::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetClickLocation, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000140, "Member 'JSI_Slot_C_GetClickLocation::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetClickLocation, CallFunc_MakeVector2D_ReturnValue_2) == 0x000148, "Member 'JSI_Slot_C_GetClickLocation::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetClickLocation, CallFunc_MakeVector2D_ReturnValue_3) == 0x000158, "Member 'JSI_Slot_C_GetClickLocation::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetClickLocation, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000168, "Member 'JSI_Slot_C_GetClickLocation::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetClickLocation, CallFunc_MakeVector2D_ReturnValue_4) == 0x000170, "Member 'JSI_Slot_C_GetClickLocation::CallFunc_MakeVector2D_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetClickLocation, CallFunc_MakeVector2D_ReturnValue_5) == 0x000180, "Member 'JSI_Slot_C_GetClickLocation::CallFunc_MakeVector2D_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetClickLocation, CallFunc_MakeVector2D_ReturnValue_6) == 0x000190, "Member 'JSI_Slot_C_GetClickLocation::CallFunc_MakeVector2D_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetClickLocation, CallFunc_BreakVector2D_X_2) == 0x0001A0, "Member 'JSI_Slot_C_GetClickLocation::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetClickLocation, CallFunc_BreakVector2D_Y_2) == 0x0001A8, "Member 'JSI_Slot_C_GetClickLocation::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetClickLocation, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0001B0, "Member 'JSI_Slot_C_GetClickLocation::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetClickLocation, CallFunc_MakeVector2D_ReturnValue_7) == 0x0001B8, "Member 'JSI_Slot_C_GetClickLocation::CallFunc_MakeVector2D_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetClickLocation, CallFunc_MakeVector2D_ReturnValue_8) == 0x0001C8, "Member 'JSI_Slot_C_GetClickLocation::CallFunc_MakeVector2D_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetClickLocation, K2Node_Select_Default) == 0x0001D8, "Member 'JSI_Slot_C_GetClickLocation::K2Node_Select_Default' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.GetCount
// 0x0018 (0x0018 - 0x0000)
struct JSI_Slot_C_GetCount final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CountOut_OutInt;                          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CountCheck_Result;                        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_GetCount) == 0x000004, "Wrong alignment on JSI_Slot_C_GetCount");
static_assert(sizeof(JSI_Slot_C_GetCount) == 0x000018, "Wrong size on JSI_Slot_C_GetCount");
static_assert(offsetof(JSI_Slot_C_GetCount, Count) == 0x000000, "Member 'JSI_Slot_C_GetCount::Count' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetCount, CallFunc_CountOut_OutInt) == 0x000004, "Member 'JSI_Slot_C_GetCount::CallFunc_CountOut_OutInt' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetCount, CallFunc_CountCheck_Result) == 0x000008, "Member 'JSI_Slot_C_GetCount::CallFunc_CountCheck_Result' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetCount, CallFunc_Max_ReturnValue) == 0x00000C, "Member 'JSI_Slot_C_GetCount::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetCount, CallFunc_Max_ReturnValue_1) == 0x000010, "Member 'JSI_Slot_C_GetCount::CallFunc_Max_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetCount, CallFunc_SelectInt_ReturnValue) == 0x000014, "Member 'JSI_Slot_C_GetCount::CallFunc_SelectInt_ReturnValue' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.GetDismantleEnabled
// 0x0001 (0x0001 - 0x0000)
struct JSI_Slot_C_GetDismantleEnabled final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_GetDismantleEnabled) == 0x000001, "Wrong alignment on JSI_Slot_C_GetDismantleEnabled");
static_assert(sizeof(JSI_Slot_C_GetDismantleEnabled) == 0x000001, "Wrong size on JSI_Slot_C_GetDismantleEnabled");
static_assert(offsetof(JSI_Slot_C_GetDismantleEnabled, Enabled) == 0x000000, "Member 'JSI_Slot_C_GetDismantleEnabled::Enabled' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.GetDurability
// 0x0010 (0x0010 - 0x0000)
struct JSI_Slot_C_GetDurability final
{
public:
	double                                        Durability;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxDurability;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_GetDurability) == 0x000008, "Wrong alignment on JSI_Slot_C_GetDurability");
static_assert(sizeof(JSI_Slot_C_GetDurability) == 0x000010, "Wrong size on JSI_Slot_C_GetDurability");
static_assert(offsetof(JSI_Slot_C_GetDurability, Durability) == 0x000000, "Member 'JSI_Slot_C_GetDurability::Durability' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetDurability, MaxDurability) == 0x000008, "Member 'JSI_Slot_C_GetDurability::MaxDurability' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.GetHostedSlot
// 0x0008 (0x0008 - 0x0000)
struct JSI_Slot_C_GetHostedSlot final
{
public:
	class UJSI_Slot_C*                            HostingItem;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_GetHostedSlot) == 0x000008, "Wrong alignment on JSI_Slot_C_GetHostedSlot");
static_assert(sizeof(JSI_Slot_C_GetHostedSlot) == 0x000008, "Wrong size on JSI_Slot_C_GetHostedSlot");
static_assert(offsetof(JSI_Slot_C_GetHostedSlot, HostingItem) == 0x000000, "Member 'JSI_Slot_C_GetHostedSlot::HostingItem' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.GetItemName
// 0x0030 (0x0030 - 0x0000)
struct JSI_Slot_C_GetItemName final
{
public:
	class FText                                   Param_Name;                                        // 0x0000(0x0018)(Parm, OutParm)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0018(0x0018)()
};
static_assert(alignof(JSI_Slot_C_GetItemName) == 0x000008, "Wrong alignment on JSI_Slot_C_GetItemName");
static_assert(sizeof(JSI_Slot_C_GetItemName) == 0x000030, "Wrong size on JSI_Slot_C_GetItemName");
static_assert(offsetof(JSI_Slot_C_GetItemName, Param_Name) == 0x000000, "Member 'JSI_Slot_C_GetItemName::Param_Name' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetItemName, CallFunc_Conv_NameToText_ReturnValue) == 0x000018, "Member 'JSI_Slot_C_GetItemName::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.GetNewMaxDurability
// 0x0260 (0x0260 - 0x0000)
struct JSI_Slot_C_GetNewMaxDurability final
{
public:
	double                                        InputPin;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDurability_Durability;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDurability_MaxDurability;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow;           // 0x0020(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_GetNewMaxDurability) == 0x000008, "Wrong alignment on JSI_Slot_C_GetNewMaxDurability");
static_assert(sizeof(JSI_Slot_C_GetNewMaxDurability) == 0x000260, "Wrong size on JSI_Slot_C_GetNewMaxDurability");
static_assert(offsetof(JSI_Slot_C_GetNewMaxDurability, InputPin) == 0x000000, "Member 'JSI_Slot_C_GetNewMaxDurability::InputPin' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetNewMaxDurability, ReturnValue) == 0x000008, "Member 'JSI_Slot_C_GetNewMaxDurability::ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetNewMaxDurability, CallFunc_GetDurability_Durability) == 0x000010, "Member 'JSI_Slot_C_GetNewMaxDurability::CallFunc_GetDurability_Durability' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetNewMaxDurability, CallFunc_GetDurability_MaxDurability) == 0x000018, "Member 'JSI_Slot_C_GetNewMaxDurability::CallFunc_GetDurability_MaxDurability' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetNewMaxDurability, CallFunc_GetDataTableRowFromName_OutRow) == 0x000020, "Member 'JSI_Slot_C_GetNewMaxDurability::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetNewMaxDurability, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000240, "Member 'JSI_Slot_C_GetNewMaxDurability::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetNewMaxDurability, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000248, "Member 'JSI_Slot_C_GetNewMaxDurability::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetNewMaxDurability, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000250, "Member 'JSI_Slot_C_GetNewMaxDurability::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetNewMaxDurability, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000258, "Member 'JSI_Slot_C_GetNewMaxDurability::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.GetPrice(Shop)
// 0x0258 (0x0258 - 0x0000)
struct JSI_Slot_C_GetPrice_Shop_ final
{
public:
	class FText                                   BuybackContainerName;                              // 0x0000(0x0018)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ShopContainer                               Temp_byte_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ShopContainer                               Temp_byte_Variable_5;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ShopContainer                               Temp_byte_Variable_6;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_11;                             // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_12;                             // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_13;                             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_14;                             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_15;                             // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_16;                             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_10;                             // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_17;                             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_11;                             // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_12;                             // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ShopContainer                               Temp_byte_Variable_13;                             // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_18;                             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_19;                             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_20;                             // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_21;                             // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_22;                             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_14;                             // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTotalMoneyCount_ReturnedCount;         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_2;                 // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player_1;            // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player_2;            // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTotalMoneyCount_ReturnedCount_1;       // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_2;                           // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_3;                           // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x2];                                       // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x00AC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_23;                             // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_2;                // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00E0(0x0014)()
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_24;                             // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F6[0x2];                                       // 0x00F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_3;        // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_5;                           // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC;                  // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMPInGameInventory_C*                   CallFunc_GetInventoryWidget_Widget;                // 0x0120(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0128(0x0018)()
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_6;                           // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_25;                             // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_26;                             // 0x0143(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ShopContainer                               Temp_byte_Variable_15;                             // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_146[0x2];                                      // 0x0146(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_7;                           // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x015A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15B[0x1];                                      // 0x015B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Calculate_Result_Price_ReturnValue;       // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Calculate_Result_Price_ReturnValue_1;     // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0188(0x0018)()
	struct FS_ShopItemList                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x01A0(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x3];                                      // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Calculate_Result_Price_ReturnValue_2;     // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_3;                // 0x01DC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x01EC(0x0014)()
	ESlateVisibility                              K2Node_Select_Default_8;                           // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_16;                             // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_9;                           // 0x0202(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_203[0x1];                                      // 0x0203(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_4;                // 0x0204(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_17;                             // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_215[0x3];                                      // 0x0215(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Calculate_Result_Price_ReturnValue_3;     // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_10;                          // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x021D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21E[0x2];                                      // 0x021E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_5;                // 0x0220(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x0230(0x0014)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_245[0x3];                                      // 0x0245(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_4;             // 0x024D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x024E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x024F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_11;                          // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_252[0x2];                                      // 0x0252(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetMaxDesiredWidth_InMaxDesiredWidth_ImplicitCast; // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_GetPrice_Shop_) == 0x000008, "Wrong alignment on JSI_Slot_C_GetPrice_Shop_");
static_assert(sizeof(JSI_Slot_C_GetPrice_Shop_) == 0x000258, "Wrong size on JSI_Slot_C_GetPrice_Shop_");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, BuybackContainerName) == 0x000000, "Member 'JSI_Slot_C_GetPrice_Shop_::BuybackContainerName' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, Temp_bool_Variable) == 0x000018, "Member 'JSI_Slot_C_GetPrice_Shop_::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, Temp_byte_Variable) == 0x000019, "Member 'JSI_Slot_C_GetPrice_Shop_::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, Temp_bool_Variable_1) == 0x00001A, "Member 'JSI_Slot_C_GetPrice_Shop_::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, Temp_bool_Variable_2) == 0x00001B, "Member 'JSI_Slot_C_GetPrice_Shop_::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, Temp_bool_Variable_3) == 0x00001C, "Member 'JSI_Slot_C_GetPrice_Shop_::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, Temp_bool_Variable_4) == 0x00001D, "Member 'JSI_Slot_C_GetPrice_Shop_::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, Temp_bool_Variable_5) == 0x00001E, "Member 'JSI_Slot_C_GetPrice_Shop_::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, Temp_byte_Variable_1) == 0x00001F, "Member 'JSI_Slot_C_GetPrice_Shop_::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, Temp_byte_Variable_2) == 0x000020, "Member 'JSI_Slot_C_GetPrice_Shop_::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, Temp_bool_Variable_6) == 0x000021, "Member 'JSI_Slot_C_GetPrice_Shop_::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, Temp_byte_Variable_3) == 0x000022, "Member 'JSI_Slot_C_GetPrice_Shop_::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, Temp_byte_Variable_4) == 0x000023, "Member 'JSI_Slot_C_GetPrice_Shop_::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, Temp_byte_Variable_5) == 0x000024, "Member 'JSI_Slot_C_GetPrice_Shop_::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, Temp_bool_Variable_7) == 0x000025, "Member 'JSI_Slot_C_GetPrice_Shop_::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, Temp_bool_Variable_8) == 0x000026, "Member 'JSI_Slot_C_GetPrice_Shop_::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, Temp_bool_Variable_9) == 0x000027, "Member 'JSI_Slot_C_GetPrice_Shop_::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, Temp_bool_Variable_10) == 0x000028, "Member 'JSI_Slot_C_GetPrice_Shop_::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, Temp_byte_Variable_6) == 0x000029, "Member 'JSI_Slot_C_GetPrice_Shop_::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, Temp_bool_Variable_11) == 0x00002A, "Member 'JSI_Slot_C_GetPrice_Shop_::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, Temp_bool_Variable_12) == 0x00002B, "Member 'JSI_Slot_C_GetPrice_Shop_::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, Temp_bool_Variable_13) == 0x00002C, "Member 'JSI_Slot_C_GetPrice_Shop_::Temp_bool_Variable_13' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, Temp_bool_Variable_14) == 0x00002D, "Member 'JSI_Slot_C_GetPrice_Shop_::Temp_bool_Variable_14' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, Temp_bool_Variable_15) == 0x00002E, "Member 'JSI_Slot_C_GetPrice_Shop_::Temp_bool_Variable_15' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, Temp_byte_Variable_7) == 0x00002F, "Member 'JSI_Slot_C_GetPrice_Shop_::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, Temp_byte_Variable_8) == 0x000030, "Member 'JSI_Slot_C_GetPrice_Shop_::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, Temp_bool_Variable_16) == 0x000031, "Member 'JSI_Slot_C_GetPrice_Shop_::Temp_bool_Variable_16' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, Temp_byte_Variable_9) == 0x000032, "Member 'JSI_Slot_C_GetPrice_Shop_::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, Temp_byte_Variable_10) == 0x000033, "Member 'JSI_Slot_C_GetPrice_Shop_::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, Temp_bool_Variable_17) == 0x000034, "Member 'JSI_Slot_C_GetPrice_Shop_::Temp_bool_Variable_17' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, Temp_byte_Variable_11) == 0x000035, "Member 'JSI_Slot_C_GetPrice_Shop_::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, Temp_byte_Variable_12) == 0x000036, "Member 'JSI_Slot_C_GetPrice_Shop_::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, Temp_byte_Variable_13) == 0x000037, "Member 'JSI_Slot_C_GetPrice_Shop_::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, Temp_bool_Variable_18) == 0x000038, "Member 'JSI_Slot_C_GetPrice_Shop_::Temp_bool_Variable_18' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, Temp_bool_Variable_19) == 0x000039, "Member 'JSI_Slot_C_GetPrice_Shop_::Temp_bool_Variable_19' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, Temp_bool_Variable_20) == 0x00003A, "Member 'JSI_Slot_C_GetPrice_Shop_::Temp_bool_Variable_20' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, Temp_bool_Variable_21) == 0x00003B, "Member 'JSI_Slot_C_GetPrice_Shop_::Temp_bool_Variable_21' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, Temp_bool_Variable_22) == 0x00003C, "Member 'JSI_Slot_C_GetPrice_Shop_::Temp_bool_Variable_22' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, Temp_byte_Variable_14) == 0x00003D, "Member 'JSI_Slot_C_GetPrice_Shop_::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_GetPlayerController_ReturnValue) == 0x000040, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_K2_GetPawn_ReturnValue) == 0x000048, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, K2Node_DynamicCast_AsSurvival_Player) == 0x000050, "Member 'JSI_Slot_C_GetPrice_Shop_::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'JSI_Slot_C_GetPrice_Shop_::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_GetTotalMoneyCount_ReturnedCount) == 0x00005C, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_GetTotalMoneyCount_ReturnedCount' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, K2Node_SwitchEnum_CmpSuccess) == 0x000060, "Member 'JSI_Slot_C_GetPrice_Shop_::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, K2Node_Select_Default) == 0x000061, "Member 'JSI_Slot_C_GetPrice_Shop_::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000062, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, K2Node_Select_Default_1) == 0x000063, "Member 'JSI_Slot_C_GetPrice_Shop_::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_GetPlayerController_ReturnValue_1) == 0x000068, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_GetPlayerController_ReturnValue_2) == 0x000070, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_K2_GetPawn_ReturnValue_1) == 0x000078, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_K2_GetPawn_ReturnValue_2) == 0x000080, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_K2_GetPawn_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, K2Node_DynamicCast_AsSurvival_Player_1) == 0x000088, "Member 'JSI_Slot_C_GetPrice_Shop_::K2Node_DynamicCast_AsSurvival_Player_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'JSI_Slot_C_GetPrice_Shop_::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, K2Node_DynamicCast_AsSurvival_Player_2) == 0x000098, "Member 'JSI_Slot_C_GetPrice_Shop_::K2Node_DynamicCast_AsSurvival_Player_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, K2Node_DynamicCast_bSuccess_2) == 0x0000A0, "Member 'JSI_Slot_C_GetPrice_Shop_::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_GetTotalMoneyCount_ReturnedCount_1) == 0x0000A4, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_GetTotalMoneyCount_ReturnedCount_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, K2Node_Select_Default_2) == 0x0000A8, "Member 'JSI_Slot_C_GetPrice_Shop_::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, K2Node_Select_Default_3) == 0x0000A9, "Member 'JSI_Slot_C_GetPrice_Shop_::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_SelectColor_ReturnValue) == 0x0000AC, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, Temp_bool_Variable_23) == 0x0000BC, "Member 'JSI_Slot_C_GetPrice_Shop_::Temp_bool_Variable_23' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_BooleanAND_ReturnValue) == 0x0000BD, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, K2Node_Select_Default_4) == 0x0000BE, "Member 'JSI_Slot_C_GetPrice_Shop_::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000BF, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_SelectColor_ReturnValue_1) == 0x0000C0, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_SelectColor_ReturnValue_2) == 0x0000D0, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_SelectColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, K2Node_MakeStruct_SlateColor) == 0x0000E0, "Member 'JSI_Slot_C_GetPrice_Shop_::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x0000F4, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, Temp_bool_Variable_24) == 0x0000F5, "Member 'JSI_Slot_C_GetPrice_Shop_::Temp_bool_Variable_24' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_GetPlayerController_ReturnValue_3) == 0x0000F8, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_GetPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, K2Node_Select_Default_5) == 0x000100, "Member 'JSI_Slot_C_GetPrice_Shop_::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, K2Node_DynamicCast_AsBPI_Surv_PC) == 0x000108, "Member 'JSI_Slot_C_GetPrice_Shop_::K2Node_DynamicCast_AsBPI_Surv_PC' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, K2Node_DynamicCast_bSuccess_3) == 0x000118, "Member 'JSI_Slot_C_GetPrice_Shop_::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_GetInventoryWidget_Widget) == 0x000120, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_GetInventoryWidget_Widget' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_Conv_IntToText_ReturnValue) == 0x000128, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_BooleanAND_ReturnValue_1) == 0x000140, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, K2Node_Select_Default_6) == 0x000141, "Member 'JSI_Slot_C_GetPrice_Shop_::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, Temp_bool_Variable_25) == 0x000142, "Member 'JSI_Slot_C_GetPrice_Shop_::Temp_bool_Variable_25' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, Temp_bool_Variable_26) == 0x000143, "Member 'JSI_Slot_C_GetPrice_Shop_::Temp_bool_Variable_26' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, Temp_byte_Variable_15) == 0x000144, "Member 'JSI_Slot_C_GetPrice_Shop_::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_Greater_IntInt_ReturnValue) == 0x000145, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_BreakVector2D_X) == 0x000148, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_BreakVector2D_Y) == 0x000150, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, K2Node_Select_Default_7) == 0x000158, "Member 'JSI_Slot_C_GetPrice_Shop_::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000159, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x00015A, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_Calculate_Result_Price_ReturnValue) == 0x00015C, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_Calculate_Result_Price_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_BooleanAND_ReturnValue_2) == 0x000160, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000168, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_BooleanAND_ReturnValue_3) == 0x000170, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_SelectFloat_ReturnValue) == 0x000178, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_Calculate_Result_Price_ReturnValue_1) == 0x000180, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_Calculate_Result_Price_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000188, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_GetDataTableRowFromName_OutRow) == 0x0001A0, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0001D0, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_Calculate_Result_Price_ReturnValue_2) == 0x0001D4, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_Calculate_Result_Price_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0001D8, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_SelectColor_ReturnValue_3) == 0x0001DC, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_SelectColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, K2Node_MakeStruct_SlateColor_1) == 0x0001EC, "Member 'JSI_Slot_C_GetPrice_Shop_::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, K2Node_Select_Default_8) == 0x000200, "Member 'JSI_Slot_C_GetPrice_Shop_::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, Temp_byte_Variable_16) == 0x000201, "Member 'JSI_Slot_C_GetPrice_Shop_::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, K2Node_Select_Default_9) == 0x000202, "Member 'JSI_Slot_C_GetPrice_Shop_::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_SelectColor_ReturnValue_4) == 0x000204, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_SelectColor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, Temp_byte_Variable_17) == 0x000214, "Member 'JSI_Slot_C_GetPrice_Shop_::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_Calculate_Result_Price_ReturnValue_3) == 0x000218, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_Calculate_Result_Price_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, K2Node_Select_Default_10) == 0x00021C, "Member 'JSI_Slot_C_GetPrice_Shop_::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_Greater_IntInt_ReturnValue_2) == 0x00021D, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_SelectColor_ReturnValue_5) == 0x000220, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_SelectColor_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, K2Node_MakeStruct_SlateColor_2) == 0x000230, "Member 'JSI_Slot_C_GetPrice_Shop_::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_Greater_IntInt_ReturnValue_3) == 0x000244, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_FTrunc_ReturnValue) == 0x000248, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_BooleanAND_ReturnValue_4) == 0x00024C, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_Greater_IntInt_ReturnValue_4) == 0x00024D, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_Greater_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00024E, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_BooleanAND_ReturnValue_5) == 0x00024F, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_BooleanOR_ReturnValue) == 0x000250, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, K2Node_Select_Default_11) == 0x000251, "Member 'JSI_Slot_C_GetPrice_Shop_::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetPrice_Shop_, CallFunc_SetMaxDesiredWidth_InMaxDesiredWidth_ImplicitCast) == 0x000254, "Member 'JSI_Slot_C_GetPrice_Shop_::CallFunc_SetMaxDesiredWidth_InMaxDesiredWidth_ImplicitCast' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.GetRepairStatus
// 0x0070 (0x0070 - 0x0000)
struct JSI_Slot_C_GetRepairStatus final
{
public:
	double                                        K2Node_MathExpression_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x000C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC;                  // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMPInGameInventory_C*                   CallFunc_GetInventoryWidget_Widget;                // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_MathExpression_ReturnValue_1;               // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_GetRepairStatus) == 0x000008, "Wrong alignment on JSI_Slot_C_GetRepairStatus");
static_assert(sizeof(JSI_Slot_C_GetRepairStatus) == 0x000070, "Wrong size on JSI_Slot_C_GetRepairStatus");
static_assert(offsetof(JSI_Slot_C_GetRepairStatus, K2Node_MathExpression_ReturnValue) == 0x000000, "Member 'JSI_Slot_C_GetRepairStatus::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetRepairStatus, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000008, "Member 'JSI_Slot_C_GetRepairStatus::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetRepairStatus, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000009, "Member 'JSI_Slot_C_GetRepairStatus::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetRepairStatus, CallFunc_SelectColor_ReturnValue) == 0x00000C, "Member 'JSI_Slot_C_GetRepairStatus::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetRepairStatus, CallFunc_SelectColor_ReturnValue_1) == 0x00001C, "Member 'JSI_Slot_C_GetRepairStatus::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetRepairStatus, CallFunc_Not_PreBool_ReturnValue) == 0x00002C, "Member 'JSI_Slot_C_GetRepairStatus::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetRepairStatus, CallFunc_GetPlayerController_ReturnValue) == 0x000030, "Member 'JSI_Slot_C_GetRepairStatus::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetRepairStatus, K2Node_DynamicCast_AsBPI_Surv_PC) == 0x000038, "Member 'JSI_Slot_C_GetRepairStatus::K2Node_DynamicCast_AsBPI_Surv_PC' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetRepairStatus, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'JSI_Slot_C_GetRepairStatus::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetRepairStatus, CallFunc_GetInventoryWidget_Widget) == 0x000050, "Member 'JSI_Slot_C_GetRepairStatus::CallFunc_GetInventoryWidget_Widget' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetRepairStatus, K2Node_MathExpression_ReturnValue_1) == 0x000058, "Member 'JSI_Slot_C_GetRepairStatus::K2Node_MathExpression_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetRepairStatus, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'JSI_Slot_C_GetRepairStatus::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetRepairStatus, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000061, "Member 'JSI_Slot_C_GetRepairStatus::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetRepairStatus, CallFunc_BooleanAND_ReturnValue) == 0x000062, "Member 'JSI_Slot_C_GetRepairStatus::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetRepairStatus, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000063, "Member 'JSI_Slot_C_GetRepairStatus::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetRepairStatus, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000064, "Member 'JSI_Slot_C_GetRepairStatus::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetRepairStatus, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000065, "Member 'JSI_Slot_C_GetRepairStatus::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetRepairStatus, CallFunc_BooleanOR_ReturnValue) == 0x000066, "Member 'JSI_Slot_C_GetRepairStatus::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetRepairStatus, CallFunc_BooleanOR_ReturnValue_1) == 0x000067, "Member 'JSI_Slot_C_GetRepairStatus::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetRepairStatus, CallFunc_BooleanOR_ReturnValue_2) == 0x000068, "Member 'JSI_Slot_C_GetRepairStatus::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetRepairStatus, CallFunc_BooleanAND_ReturnValue_1) == 0x000069, "Member 'JSI_Slot_C_GetRepairStatus::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.GetSlotIndexOnDrop
// 0x0004 (0x0004 - 0x0000)
struct JSI_Slot_C_GetSlotIndexOnDrop final
{
public:
	int32                                         Param_SlotIndex;                                   // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_GetSlotIndexOnDrop) == 0x000004, "Wrong alignment on JSI_Slot_C_GetSlotIndexOnDrop");
static_assert(sizeof(JSI_Slot_C_GetSlotIndexOnDrop) == 0x000004, "Wrong size on JSI_Slot_C_GetSlotIndexOnDrop");
static_assert(offsetof(JSI_Slot_C_GetSlotIndexOnDrop, Param_SlotIndex) == 0x000000, "Member 'JSI_Slot_C_GetSlotIndexOnDrop::Param_SlotIndex' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.GetSlotSizeBaground
// 0x0180 (0x0180 - 0x0000)
struct JSI_Slot_C_GetSlotSizeBaground final
{
public:
	class UObject*                                Imag3_1;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                Image2_2;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                Image2_1;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	EJSItemType                                   Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_2;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_3;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_4;                            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_5;                            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_6;                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_7;                            // 0x0058(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_8;                            // 0x0060(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_9;                            // 0x0068(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_10;                           // 0x0070(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_11;                           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	EJSItemType                                   CallFunc_Array_Get_Item;                           // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Select_Default;                             // 0x0090(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x00A0(0x00D0)()
	struct FDeprecateSlateVector2D                K2Node_MakeStruct_ImageSize_ImplicitCast;          // 0x0170(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_GetSlotSizeBaground) == 0x000010, "Wrong alignment on JSI_Slot_C_GetSlotSizeBaground");
static_assert(sizeof(JSI_Slot_C_GetSlotSizeBaground) == 0x000180, "Wrong size on JSI_Slot_C_GetSlotSizeBaground");
static_assert(offsetof(JSI_Slot_C_GetSlotSizeBaground, Imag3_1) == 0x000000, "Member 'JSI_Slot_C_GetSlotSizeBaground::Imag3_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotSizeBaground, Image2_2) == 0x000008, "Member 'JSI_Slot_C_GetSlotSizeBaground::Image2_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotSizeBaground, Image2_1) == 0x000010, "Member 'JSI_Slot_C_GetSlotSizeBaground::Image2_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotSizeBaground, Temp_byte_Variable) == 0x000018, "Member 'JSI_Slot_C_GetSlotSizeBaground::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotSizeBaground, Temp_object_Variable) == 0x000020, "Member 'JSI_Slot_C_GetSlotSizeBaground::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotSizeBaground, Temp_object_Variable_1) == 0x000028, "Member 'JSI_Slot_C_GetSlotSizeBaground::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotSizeBaground, Temp_object_Variable_2) == 0x000030, "Member 'JSI_Slot_C_GetSlotSizeBaground::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotSizeBaground, Temp_object_Variable_3) == 0x000038, "Member 'JSI_Slot_C_GetSlotSizeBaground::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotSizeBaground, Temp_object_Variable_4) == 0x000040, "Member 'JSI_Slot_C_GetSlotSizeBaground::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotSizeBaground, Temp_object_Variable_5) == 0x000048, "Member 'JSI_Slot_C_GetSlotSizeBaground::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotSizeBaground, Temp_object_Variable_6) == 0x000050, "Member 'JSI_Slot_C_GetSlotSizeBaground::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotSizeBaground, Temp_object_Variable_7) == 0x000058, "Member 'JSI_Slot_C_GetSlotSizeBaground::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotSizeBaground, Temp_object_Variable_8) == 0x000060, "Member 'JSI_Slot_C_GetSlotSizeBaground::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotSizeBaground, Temp_object_Variable_9) == 0x000068, "Member 'JSI_Slot_C_GetSlotSizeBaground::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotSizeBaground, Temp_object_Variable_10) == 0x000070, "Member 'JSI_Slot_C_GetSlotSizeBaground::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotSizeBaground, Temp_object_Variable_11) == 0x000078, "Member 'JSI_Slot_C_GetSlotSizeBaground::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotSizeBaground, CallFunc_Array_Get_Item) == 0x000080, "Member 'JSI_Slot_C_GetSlotSizeBaground::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotSizeBaground, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'JSI_Slot_C_GetSlotSizeBaground::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotSizeBaground, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000088, "Member 'JSI_Slot_C_GetSlotSizeBaground::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotSizeBaground, K2Node_Select_Default) == 0x000090, "Member 'JSI_Slot_C_GetSlotSizeBaground::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotSizeBaground, K2Node_MakeStruct_SlateBrush) == 0x0000A0, "Member 'JSI_Slot_C_GetSlotSizeBaground::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotSizeBaground, K2Node_MakeStruct_ImageSize_ImplicitCast) == 0x000170, "Member 'JSI_Slot_C_GetSlotSizeBaground::K2Node_MakeStruct_ImageSize_ImplicitCast' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.GetSpecialContainerRef
// 0x0008 (0x0008 - 0x0000)
struct JSI_Slot_C_GetSpecialContainerRef final
{
public:
	class UUserWidget*                            SpecialContainerRef;                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_GetSpecialContainerRef) == 0x000008, "Wrong alignment on JSI_Slot_C_GetSpecialContainerRef");
static_assert(sizeof(JSI_Slot_C_GetSpecialContainerRef) == 0x000008, "Wrong size on JSI_Slot_C_GetSpecialContainerRef");
static_assert(offsetof(JSI_Slot_C_GetSpecialContainerRef, SpecialContainerRef) == 0x000000, "Member 'JSI_Slot_C_GetSpecialContainerRef::SpecialContainerRef' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.GetType
// 0x0001 (0x0001 - 0x0000)
struct JSI_Slot_C_GetType final
{
public:
	EJSItemType                                   Type;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_GetType) == 0x000001, "Wrong alignment on JSI_Slot_C_GetType");
static_assert(sizeof(JSI_Slot_C_GetType) == 0x000001, "Wrong size on JSI_Slot_C_GetType");
static_assert(offsetof(JSI_Slot_C_GetType, Type) == 0x000000, "Member 'JSI_Slot_C_GetType::Type' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.GetUniqueID
// 0x0004 (0x0004 - 0x0000)
struct JSI_Slot_C_GetUniqueID final
{
public:
	int32                                         UniqueServerID;                                    // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_GetUniqueID) == 0x000004, "Wrong alignment on JSI_Slot_C_GetUniqueID");
static_assert(sizeof(JSI_Slot_C_GetUniqueID) == 0x000004, "Wrong size on JSI_Slot_C_GetUniqueID");
static_assert(offsetof(JSI_Slot_C_GetUniqueID, UniqueServerID) == 0x000000, "Member 'JSI_Slot_C_GetUniqueID::UniqueServerID' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.GetWeaponIcon
// 0x0008 (0x0008 - 0x0000)
struct JSI_Slot_C_GetWeaponIcon final
{
public:
	class UMaterialInterface*                     Param_GeneratedWeaponIcon;                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_GetWeaponIcon) == 0x000008, "Wrong alignment on JSI_Slot_C_GetWeaponIcon");
static_assert(sizeof(JSI_Slot_C_GetWeaponIcon) == 0x000008, "Wrong size on JSI_Slot_C_GetWeaponIcon");
static_assert(offsetof(JSI_Slot_C_GetWeaponIcon, Param_GeneratedWeaponIcon) == 0x000000, "Member 'JSI_Slot_C_GetWeaponIcon::Param_GeneratedWeaponIcon' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.GetWeight
// 0x0008 (0x0008 - 0x0000)
struct JSI_Slot_C_GetWeight final
{
public:
	double                                        Weight;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_GetWeight) == 0x000008, "Wrong alignment on JSI_Slot_C_GetWeight");
static_assert(sizeof(JSI_Slot_C_GetWeight) == 0x000008, "Wrong size on JSI_Slot_C_GetWeight");
static_assert(offsetof(JSI_Slot_C_GetWeight, Weight) == 0x000000, "Member 'JSI_Slot_C_GetWeight::Weight' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.Handle Size Box
// 0x0018 (0x0018 - 0x0000)
struct JSI_Slot_C_Handle_Size_Box final
{
public:
	double                                        CallFunc_BreakVector2D_X;                          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_Handle_Size_Box) == 0x000008, "Wrong alignment on JSI_Slot_C_Handle_Size_Box");
static_assert(sizeof(JSI_Slot_C_Handle_Size_Box) == 0x000018, "Wrong size on JSI_Slot_C_Handle_Size_Box");
static_assert(offsetof(JSI_Slot_C_Handle_Size_Box, CallFunc_BreakVector2D_X) == 0x000000, "Member 'JSI_Slot_C_Handle_Size_Box::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Handle_Size_Box, CallFunc_BreakVector2D_Y) == 0x000008, "Member 'JSI_Slot_C_Handle_Size_Box::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Handle_Size_Box, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast) == 0x000010, "Member 'JSI_Slot_C_Handle_Size_Box::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Handle_Size_Box, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x000014, "Member 'JSI_Slot_C_Handle_Size_Box::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.Image_Hovered_Event
// 0x0008 (0x0008 - 0x0000)
struct JSI_Slot_C_Image_Hovered_Event final
{
public:
	class UImage*                                 Param_Image_Hovered;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_Image_Hovered_Event) == 0x000008, "Wrong alignment on JSI_Slot_C_Image_Hovered_Event");
static_assert(sizeof(JSI_Slot_C_Image_Hovered_Event) == 0x000008, "Wrong size on JSI_Slot_C_Image_Hovered_Event");
static_assert(offsetof(JSI_Slot_C_Image_Hovered_Event, Param_Image_Hovered) == 0x000000, "Member 'JSI_Slot_C_Image_Hovered_Event::Param_Image_Hovered' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.Image_Hovered_Event_0
// 0x0008 (0x0008 - 0x0000)
struct JSI_Slot_C_Image_Hovered_Event_0 final
{
public:
	class UImage*                                 Param_Image_Hovered;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_Image_Hovered_Event_0) == 0x000008, "Wrong alignment on JSI_Slot_C_Image_Hovered_Event_0");
static_assert(sizeof(JSI_Slot_C_Image_Hovered_Event_0) == 0x000008, "Wrong size on JSI_Slot_C_Image_Hovered_Event_0");
static_assert(offsetof(JSI_Slot_C_Image_Hovered_Event_0, Param_Image_Hovered) == 0x000000, "Member 'JSI_Slot_C_Image_Hovered_Event_0::Param_Image_Hovered' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.IsBroken
// 0x0020 (0x0020 - 0x0000)
struct JSI_Slot_C_IsBroken final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetDurability_Durability;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDurability_MaxDurability;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_IsBroken) == 0x000008, "Wrong alignment on JSI_Slot_C_IsBroken");
static_assert(sizeof(JSI_Slot_C_IsBroken) == 0x000020, "Wrong size on JSI_Slot_C_IsBroken");
static_assert(offsetof(JSI_Slot_C_IsBroken, Return) == 0x000000, "Member 'JSI_Slot_C_IsBroken::Return' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_IsBroken, CallFunc_GetDurability_Durability) == 0x000008, "Member 'JSI_Slot_C_IsBroken::CallFunc_GetDurability_Durability' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_IsBroken, CallFunc_GetDurability_MaxDurability) == 0x000010, "Member 'JSI_Slot_C_IsBroken::CallFunc_GetDurability_MaxDurability' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_IsBroken, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000018, "Member 'JSI_Slot_C_IsBroken::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.IsContainer?
// 0x0001 (0x0001 - 0x0000)
struct JSI_Slot_C_IsContainer_ final
{
public:
	bool                                          Param_IsContainer_;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_IsContainer_) == 0x000001, "Wrong alignment on JSI_Slot_C_IsContainer_");
static_assert(sizeof(JSI_Slot_C_IsContainer_) == 0x000001, "Wrong size on JSI_Slot_C_IsContainer_");
static_assert(offsetof(JSI_Slot_C_IsContainer_, Param_IsContainer_) == 0x000000, "Member 'JSI_Slot_C_IsContainer_::Param_IsContainer_' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.IsEmptySlot
// 0x0001 (0x0001 - 0x0000)
struct JSI_Slot_C_IsEmptySlot final
{
public:
	bool                                          Param_IsEmpty;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_IsEmptySlot) == 0x000001, "Wrong alignment on JSI_Slot_C_IsEmptySlot");
static_assert(sizeof(JSI_Slot_C_IsEmptySlot) == 0x000001, "Wrong size on JSI_Slot_C_IsEmptySlot");
static_assert(offsetof(JSI_Slot_C_IsEmptySlot, Param_IsEmpty) == 0x000000, "Member 'JSI_Slot_C_IsEmptySlot::Param_IsEmpty' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.isRotated?
// 0x0018 (0x0018 - 0x0000)
struct JSI_Slot_C_IsRotated_ final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRenderTransformAngle_ReturnValue;      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_IsRotated_) == 0x000008, "Wrong alignment on JSI_Slot_C_IsRotated_");
static_assert(sizeof(JSI_Slot_C_IsRotated_) == 0x000018, "Wrong size on JSI_Slot_C_IsRotated_");
static_assert(offsetof(JSI_Slot_C_IsRotated_, ReturnValue) == 0x000000, "Member 'JSI_Slot_C_IsRotated_::ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_IsRotated_, CallFunc_GetRenderTransformAngle_ReturnValue) == 0x000004, "Member 'JSI_Slot_C_IsRotated_::CallFunc_GetRenderTransformAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_IsRotated_, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'JSI_Slot_C_IsRotated_::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_IsRotated_, CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast) == 0x000010, "Member 'JSI_Slot_C_IsRotated_::CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.IsSpecialContainer?
// 0x0002 (0x0002 - 0x0000)
struct JSI_Slot_C_IsSpecialContainer_ final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_IsSpecialContainer_) == 0x000001, "Wrong alignment on JSI_Slot_C_IsSpecialContainer_");
static_assert(sizeof(JSI_Slot_C_IsSpecialContainer_) == 0x000002, "Wrong size on JSI_Slot_C_IsSpecialContainer_");
static_assert(offsetof(JSI_Slot_C_IsSpecialContainer_, ReturnValue) == 0x000000, "Member 'JSI_Slot_C_IsSpecialContainer_::ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_IsSpecialContainer_, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'JSI_Slot_C_IsSpecialContainer_::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.IsStillValid
// 0x0028 (0x0028 - 0x0000)
struct JSI_Slot_C_IsStillValid final
{
public:
	class UJSI_Slot_C*                            Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmptySlot_isEmpty;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_IsStillValid) == 0x000008, "Wrong alignment on JSI_Slot_C_IsStillValid");
static_assert(sizeof(JSI_Slot_C_IsStillValid) == 0x000028, "Wrong size on JSI_Slot_C_IsStillValid");
static_assert(offsetof(JSI_Slot_C_IsStillValid, Param_Slot) == 0x000000, "Member 'JSI_Slot_C_IsStillValid::Param_Slot' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_IsStillValid, Valid) == 0x000008, "Member 'JSI_Slot_C_IsStillValid::Valid' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_IsStillValid, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'JSI_Slot_C_IsStillValid::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_IsStillValid, CallFunc_Array_Get_Item) == 0x000010, "Member 'JSI_Slot_C_IsStillValid::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_IsStillValid, CallFunc_IsEmptySlot_isEmpty) == 0x000018, "Member 'JSI_Slot_C_IsStillValid::CallFunc_IsEmptySlot_isEmpty' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_IsStillValid, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'JSI_Slot_C_IsStillValid::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_IsStillValid, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'JSI_Slot_C_IsStillValid::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_IsStillValid, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'JSI_Slot_C_IsStillValid::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.IsSupportedAttachment
// 0x0014 (0x0014 - 0x0000)
struct JSI_Slot_C_IsSupportedAttachment final
{
public:
	class FName                                   AttachmentID;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_IsSupportedAttachment) == 0x000004, "Wrong alignment on JSI_Slot_C_IsSupportedAttachment");
static_assert(sizeof(JSI_Slot_C_IsSupportedAttachment) == 0x000014, "Wrong size on JSI_Slot_C_IsSupportedAttachment");
static_assert(offsetof(JSI_Slot_C_IsSupportedAttachment, AttachmentID) == 0x000000, "Member 'JSI_Slot_C_IsSupportedAttachment::AttachmentID' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_IsSupportedAttachment, ReturnValue) == 0x000008, "Member 'JSI_Slot_C_IsSupportedAttachment::ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_IsSupportedAttachment, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'JSI_Slot_C_IsSupportedAttachment::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_IsSupportedAttachment, CallFunc_Array_Contains_ReturnValue) == 0x000010, "Member 'JSI_Slot_C_IsSupportedAttachment::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_IsSupportedAttachment, CallFunc_Greater_IntInt_ReturnValue) == 0x000011, "Member 'JSI_Slot_C_IsSupportedAttachment::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.On_MouseDoubleClick
// 0x0520 (0x0520 - 0x0000)
struct JSI_Slot_C_On_MouseDoubleClick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC;                  // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMPInGameInventory_C*                   CallFunc_GetInventoryWidget_Widget;                // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetMousePositionOnViewport_ReturnValue;   // 0x0188(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow;           // 0x01A0(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C1[0x7];                                      // 0x03C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODAudioComponent*                    CallFunc_PlayEventAttached_ReturnValue;            // 0x03C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   CallFunc_PointerEvent_GetEffectingButton_ReturnValue; // 0x03D0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x03E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EA[0x6];                                      // 0x03EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UContainerWindowWidget_C*               CallFunc_Create_ReturnValue;                       // 0x03F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface;  // 0x03F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_409[0x7];                                      // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0410(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanOpenSpecialContainer__Return_value;    // 0x0419(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41A[0x6];                                      // 0x041A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UContainerWindowWidget_C*               CallFunc_Create_ReturnValue_1;                     // 0x0420(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0428(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0431(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0432(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_433[0x5];                                      // 0x0433(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1; // 0x0438(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0449(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x044A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44B[0x5];                                      // 0x044B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue_1;                   // 0x0450(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0459(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x045A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x045B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x045C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x045D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x045E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45F[0x1];                                      // 0x045F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0460(0x00B8)()
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0519(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x051A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x051B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_On_MouseDoubleClick) == 0x000008, "Wrong alignment on JSI_Slot_C_On_MouseDoubleClick");
static_assert(sizeof(JSI_Slot_C_On_MouseDoubleClick) == 0x000520, "Wrong size on JSI_Slot_C_On_MouseDoubleClick");
static_assert(offsetof(JSI_Slot_C_On_MouseDoubleClick, MyGeometry) == 0x000000, "Member 'JSI_Slot_C_On_MouseDoubleClick::MyGeometry' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_On_MouseDoubleClick, MouseEvent) == 0x000038, "Member 'JSI_Slot_C_On_MouseDoubleClick::MouseEvent' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_On_MouseDoubleClick, ReturnValue) == 0x0000B0, "Member 'JSI_Slot_C_On_MouseDoubleClick::ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_On_MouseDoubleClick, K2Node_DynamicCast_AsBPI_Surv_PC) == 0x000168, "Member 'JSI_Slot_C_On_MouseDoubleClick::K2Node_DynamicCast_AsBPI_Surv_PC' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_On_MouseDoubleClick, K2Node_DynamicCast_bSuccess) == 0x000178, "Member 'JSI_Slot_C_On_MouseDoubleClick::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_On_MouseDoubleClick, CallFunc_GetInventoryWidget_Widget) == 0x000180, "Member 'JSI_Slot_C_On_MouseDoubleClick::CallFunc_GetInventoryWidget_Widget' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_On_MouseDoubleClick, CallFunc_GetMousePositionOnViewport_ReturnValue) == 0x000188, "Member 'JSI_Slot_C_On_MouseDoubleClick::CallFunc_GetMousePositionOnViewport_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_On_MouseDoubleClick, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000198, "Member 'JSI_Slot_C_On_MouseDoubleClick::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_On_MouseDoubleClick, CallFunc_GetDataTableRowFromName_OutRow) == 0x0001A0, "Member 'JSI_Slot_C_On_MouseDoubleClick::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_On_MouseDoubleClick, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0003C0, "Member 'JSI_Slot_C_On_MouseDoubleClick::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_On_MouseDoubleClick, CallFunc_PlayEventAttached_ReturnValue) == 0x0003C8, "Member 'JSI_Slot_C_On_MouseDoubleClick::CallFunc_PlayEventAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_On_MouseDoubleClick, CallFunc_PointerEvent_GetEffectingButton_ReturnValue) == 0x0003D0, "Member 'JSI_Slot_C_On_MouseDoubleClick::CallFunc_PointerEvent_GetEffectingButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_On_MouseDoubleClick, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x0003E8, "Member 'JSI_Slot_C_On_MouseDoubleClick::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_On_MouseDoubleClick, CallFunc_IsValid_ReturnValue) == 0x0003E9, "Member 'JSI_Slot_C_On_MouseDoubleClick::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_On_MouseDoubleClick, CallFunc_Create_ReturnValue) == 0x0003F0, "Member 'JSI_Slot_C_On_MouseDoubleClick::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_On_MouseDoubleClick, K2Node_DynamicCast_AsJSISpecial_Widget_Interface) == 0x0003F8, "Member 'JSI_Slot_C_On_MouseDoubleClick::K2Node_DynamicCast_AsJSISpecial_Widget_Interface' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_On_MouseDoubleClick, K2Node_DynamicCast_bSuccess_1) == 0x000408, "Member 'JSI_Slot_C_On_MouseDoubleClick::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_On_MouseDoubleClick, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000410, "Member 'JSI_Slot_C_On_MouseDoubleClick::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_On_MouseDoubleClick, CallFunc_Not_PreBool_ReturnValue) == 0x000418, "Member 'JSI_Slot_C_On_MouseDoubleClick::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_On_MouseDoubleClick, CallFunc_CanOpenSpecialContainer__Return_value) == 0x000419, "Member 'JSI_Slot_C_On_MouseDoubleClick::CallFunc_CanOpenSpecialContainer__Return_value' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_On_MouseDoubleClick, CallFunc_Create_ReturnValue_1) == 0x000420, "Member 'JSI_Slot_C_On_MouseDoubleClick::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_On_MouseDoubleClick, CallFunc_AddChild_ReturnValue) == 0x000428, "Member 'JSI_Slot_C_On_MouseDoubleClick::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_On_MouseDoubleClick, CallFunc_Not_PreBool_ReturnValue_1) == 0x000430, "Member 'JSI_Slot_C_On_MouseDoubleClick::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_On_MouseDoubleClick, CallFunc_BooleanOR_ReturnValue) == 0x000431, "Member 'JSI_Slot_C_On_MouseDoubleClick::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_On_MouseDoubleClick, CallFunc_Not_PreBool_ReturnValue_2) == 0x000432, "Member 'JSI_Slot_C_On_MouseDoubleClick::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_On_MouseDoubleClick, K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1) == 0x000438, "Member 'JSI_Slot_C_On_MouseDoubleClick::K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_On_MouseDoubleClick, K2Node_DynamicCast_bSuccess_2) == 0x000448, "Member 'JSI_Slot_C_On_MouseDoubleClick::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_On_MouseDoubleClick, CallFunc_BooleanAND_ReturnValue) == 0x000449, "Member 'JSI_Slot_C_On_MouseDoubleClick::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_On_MouseDoubleClick, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00044A, "Member 'JSI_Slot_C_On_MouseDoubleClick::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_On_MouseDoubleClick, CallFunc_AddChild_ReturnValue_1) == 0x000450, "Member 'JSI_Slot_C_On_MouseDoubleClick::CallFunc_AddChild_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_On_MouseDoubleClick, CallFunc_IsVisible_ReturnValue) == 0x000458, "Member 'JSI_Slot_C_On_MouseDoubleClick::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_On_MouseDoubleClick, CallFunc_IsValid_ReturnValue_1) == 0x000459, "Member 'JSI_Slot_C_On_MouseDoubleClick::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_On_MouseDoubleClick, CallFunc_IsValid_ReturnValue_2) == 0x00045A, "Member 'JSI_Slot_C_On_MouseDoubleClick::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_On_MouseDoubleClick, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x00045B, "Member 'JSI_Slot_C_On_MouseDoubleClick::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_On_MouseDoubleClick, CallFunc_Not_PreBool_ReturnValue_3) == 0x00045C, "Member 'JSI_Slot_C_On_MouseDoubleClick::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_On_MouseDoubleClick, CallFunc_Not_PreBool_ReturnValue_4) == 0x00045D, "Member 'JSI_Slot_C_On_MouseDoubleClick::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_On_MouseDoubleClick, CallFunc_BooleanAND_ReturnValue_1) == 0x00045E, "Member 'JSI_Slot_C_On_MouseDoubleClick::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_On_MouseDoubleClick, CallFunc_Handled_ReturnValue) == 0x000460, "Member 'JSI_Slot_C_On_MouseDoubleClick::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_On_MouseDoubleClick, CallFunc_BooleanAND_ReturnValue_2) == 0x000518, "Member 'JSI_Slot_C_On_MouseDoubleClick::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_On_MouseDoubleClick, CallFunc_BooleanAND_ReturnValue_3) == 0x000519, "Member 'JSI_Slot_C_On_MouseDoubleClick::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_On_MouseDoubleClick, CallFunc_BooleanAND_ReturnValue_4) == 0x00051A, "Member 'JSI_Slot_C_On_MouseDoubleClick::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_On_MouseDoubleClick, CallFunc_BooleanAND_ReturnValue_5) == 0x00051B, "Member 'JSI_Slot_C_On_MouseDoubleClick::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.OnAddedToFocusPath
// 0x0008 (0x0008 - 0x0000)
struct JSI_Slot_C_OnAddedToFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(JSI_Slot_C_OnAddedToFocusPath) == 0x000004, "Wrong alignment on JSI_Slot_C_OnAddedToFocusPath");
static_assert(sizeof(JSI_Slot_C_OnAddedToFocusPath) == 0x000008, "Wrong size on JSI_Slot_C_OnAddedToFocusPath");
static_assert(offsetof(JSI_Slot_C_OnAddedToFocusPath, InFocusEvent) == 0x000000, "Member 'JSI_Slot_C_OnAddedToFocusPath::InFocusEvent' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.OnDragCancelled
// 0x0080 (0x0080 - 0x0000)
struct JSI_Slot_C_OnDragCancelled final
{
public:
	struct FPointerEvent                          PointerEvent;                                      // 0x0000(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UDragDropOperation*                     Operation;                                         // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_OnDragCancelled) == 0x000008, "Wrong alignment on JSI_Slot_C_OnDragCancelled");
static_assert(sizeof(JSI_Slot_C_OnDragCancelled) == 0x000080, "Wrong size on JSI_Slot_C_OnDragCancelled");
static_assert(offsetof(JSI_Slot_C_OnDragCancelled, PointerEvent) == 0x000000, "Member 'JSI_Slot_C_OnDragCancelled::PointerEvent' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragCancelled, Operation) == 0x000078, "Member 'JSI_Slot_C_OnDragCancelled::Operation' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.OnDragDetected
// 0x04B0 (0x04B0 - 0x0000)
struct JSI_Slot_C_OnDragDetected final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          PointerEvent;                                      // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UDragDropOperation*                     Operation;                                         // 0x00B0(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EContainerType                                Temp_byte_Variable;                                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_2;                            // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJigSDragOperation_C*                   CallFunc_CreateDragDropOperation_ReturnValue;      // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsBeginner_IsBeginner;                 // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UDragWidget_C*                          CallFunc_Create_ReturnValue;                       // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC;                  // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12A[0x6];                                      // 0x012A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      CallFunc_GetPlayerRef_SurvivalPlayer;              // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetPointedWidget_PointedWidget;           // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AA_Item_C*                              CallFunc_FindItemOnGround_AItem;                   // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindItemOnGround_Found;                   // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15A[0x6];                                      // 0x015A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDragInventoryItemsAllowed_Enabled;     // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_182[0x6];                                      // 0x0182(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Pivot_Index_Index;                    // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B5[0x3];                                      // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD_1;               // 0x01B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetDragWidget_Success;                    // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CA[0x6];                                      // 0x01CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x01E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow;           // 0x01F0(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_411[0x7];                                      // 0x0411(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default;                             // 0x0418(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0428(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_PlayEventAttached_ReturnValue;            // 0x0430(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0438(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x0448(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_1;                           // 0x0458(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0469(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46A[0x6];                                      // 0x046A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0470(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInputKeyDown_ReturnValue;               // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0479(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x047A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47B[0x5];                                      // 0x047B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item;                           // 0x0480(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x048C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48D[0x3];                                      // 0x048D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_BreakVector2D_InVec_ImplicitCast;         // 0x0490(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Option_0_ImplicitCast;               // 0x04A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_OnDragDetected) == 0x000008, "Wrong alignment on JSI_Slot_C_OnDragDetected");
static_assert(sizeof(JSI_Slot_C_OnDragDetected) == 0x0004B0, "Wrong size on JSI_Slot_C_OnDragDetected");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, MyGeometry) == 0x000000, "Member 'JSI_Slot_C_OnDragDetected::MyGeometry' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, PointerEvent) == 0x000038, "Member 'JSI_Slot_C_OnDragDetected::PointerEvent' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, Operation) == 0x0000B0, "Member 'JSI_Slot_C_OnDragDetected::Operation' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, Temp_byte_Variable) == 0x0000B8, "Member 'JSI_Slot_C_OnDragDetected::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, Temp_struct_Variable) == 0x0000C0, "Member 'JSI_Slot_C_OnDragDetected::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, Temp_struct_Variable_1) == 0x0000D0, "Member 'JSI_Slot_C_OnDragDetected::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, Temp_struct_Variable_2) == 0x0000E0, "Member 'JSI_Slot_C_OnDragDetected::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, CallFunc_CreateDragDropOperation_ReturnValue) == 0x0000F0, "Member 'JSI_Slot_C_OnDragDetected::CallFunc_CreateDragDropOperation_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, Temp_int_Array_Index_Variable) == 0x0000F8, "Member 'JSI_Slot_C_OnDragDetected::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, CallFunc_GetIsBeginner_IsBeginner) == 0x0000FC, "Member 'JSI_Slot_C_OnDragDetected::CallFunc_GetIsBeginner_IsBeginner' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, CallFunc_Create_ReturnValue) == 0x000100, "Member 'JSI_Slot_C_OnDragDetected::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, CallFunc_Not_PreBool_ReturnValue) == 0x000108, "Member 'JSI_Slot_C_OnDragDetected::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, CallFunc_GetPlayerController_ReturnValue) == 0x000110, "Member 'JSI_Slot_C_OnDragDetected::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, K2Node_DynamicCast_AsBPI_Surv_PC) == 0x000118, "Member 'JSI_Slot_C_OnDragDetected::K2Node_DynamicCast_AsBPI_Surv_PC' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, K2Node_DynamicCast_bSuccess) == 0x000128, "Member 'JSI_Slot_C_OnDragDetected::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, CallFunc_IsValid_ReturnValue) == 0x000129, "Member 'JSI_Slot_C_OnDragDetected::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, CallFunc_GetPlayerRef_SurvivalPlayer) == 0x000130, "Member 'JSI_Slot_C_OnDragDetected::CallFunc_GetPlayerRef_SurvivalPlayer' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, CallFunc_IsValid_ReturnValue_1) == 0x000138, "Member 'JSI_Slot_C_OnDragDetected::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, CallFunc_GetPointedWidget_PointedWidget) == 0x000140, "Member 'JSI_Slot_C_OnDragDetected::CallFunc_GetPointedWidget_PointedWidget' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000148, "Member 'JSI_Slot_C_OnDragDetected::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, CallFunc_FindItemOnGround_AItem) == 0x000150, "Member 'JSI_Slot_C_OnDragDetected::CallFunc_FindItemOnGround_AItem' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, CallFunc_FindItemOnGround_Found) == 0x000158, "Member 'JSI_Slot_C_OnDragDetected::CallFunc_FindItemOnGround_Found' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, CallFunc_ActorHasTag_ReturnValue) == 0x000159, "Member 'JSI_Slot_C_OnDragDetected::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, CallFunc_GetPlayerController_ReturnValue_1) == 0x000160, "Member 'JSI_Slot_C_OnDragDetected::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, CallFunc_GetHUD_ReturnValue) == 0x000168, "Member 'JSI_Slot_C_OnDragDetected::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x000170, "Member 'JSI_Slot_C_OnDragDetected::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, K2Node_DynamicCast_bSuccess_1) == 0x000180, "Member 'JSI_Slot_C_OnDragDetected::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, CallFunc_GetDragInventoryItemsAllowed_Enabled) == 0x000181, "Member 'JSI_Slot_C_OnDragDetected::CallFunc_GetDragInventoryItemsAllowed_Enabled' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, CallFunc_BreakVector2D_X) == 0x000188, "Member 'JSI_Slot_C_OnDragDetected::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, CallFunc_BreakVector2D_Y) == 0x000190, "Member 'JSI_Slot_C_OnDragDetected::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000198, "Member 'JSI_Slot_C_OnDragDetected::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x0001A0, "Member 'JSI_Slot_C_OnDragDetected::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, CallFunc_Get_Pivot_Index_Index) == 0x0001A4, "Member 'JSI_Slot_C_OnDragDetected::CallFunc_Get_Pivot_Index_Index' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, CallFunc_SelectInt_ReturnValue) == 0x0001A8, "Member 'JSI_Slot_C_OnDragDetected::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, Temp_int_Loop_Counter_Variable) == 0x0001AC, "Member 'JSI_Slot_C_OnDragDetected::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, CallFunc_Add_IntInt_ReturnValue) == 0x0001B0, "Member 'JSI_Slot_C_OnDragDetected::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, Temp_bool_Variable) == 0x0001B4, "Member 'JSI_Slot_C_OnDragDetected::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, K2Node_DynamicCast_AsBPI_Game_HUD_1) == 0x0001B8, "Member 'JSI_Slot_C_OnDragDetected::K2Node_DynamicCast_AsBPI_Game_HUD_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, K2Node_DynamicCast_bSuccess_2) == 0x0001C8, "Member 'JSI_Slot_C_OnDragDetected::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, CallFunc_SetDragWidget_Success) == 0x0001C9, "Member 'JSI_Slot_C_OnDragDetected::CallFunc_SetDragWidget_Success' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, CallFunc_BreakVector2D_X_1) == 0x0001D0, "Member 'JSI_Slot_C_OnDragDetected::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, CallFunc_BreakVector2D_Y_1) == 0x0001D8, "Member 'JSI_Slot_C_OnDragDetected::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, CallFunc_MakeVector2D_ReturnValue) == 0x0001E0, "Member 'JSI_Slot_C_OnDragDetected::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, CallFunc_GetDataTableRowFromName_OutRow) == 0x0001F0, "Member 'JSI_Slot_C_OnDragDetected::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000410, "Member 'JSI_Slot_C_OnDragDetected::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, K2Node_Select_Default) == 0x000418, "Member 'JSI_Slot_C_OnDragDetected::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000428, "Member 'JSI_Slot_C_OnDragDetected::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, CallFunc_PlayEventAttached_ReturnValue) == 0x000430, "Member 'JSI_Slot_C_OnDragDetected::CallFunc_PlayEventAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, K2Node_MakeStruct_LinearColor) == 0x000438, "Member 'JSI_Slot_C_OnDragDetected::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, K2Node_MakeStruct_LinearColor_1) == 0x000448, "Member 'JSI_Slot_C_OnDragDetected::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, K2Node_Select_Default_1) == 0x000458, "Member 'JSI_Slot_C_OnDragDetected::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, CallFunc_Greater_IntInt_ReturnValue) == 0x000468, "Member 'JSI_Slot_C_OnDragDetected::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, CallFunc_BooleanAND_ReturnValue) == 0x000469, "Member 'JSI_Slot_C_OnDragDetected::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, CallFunc_GetPlayerController_ReturnValue_2) == 0x000470, "Member 'JSI_Slot_C_OnDragDetected::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, CallFunc_IsInputKeyDown_ReturnValue) == 0x000478, "Member 'JSI_Slot_C_OnDragDetected::CallFunc_IsInputKeyDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, CallFunc_BooleanAND_ReturnValue_1) == 0x000479, "Member 'JSI_Slot_C_OnDragDetected::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, CallFunc_BooleanAND_ReturnValue_2) == 0x00047A, "Member 'JSI_Slot_C_OnDragDetected::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, CallFunc_Array_Get_Item) == 0x000480, "Member 'JSI_Slot_C_OnDragDetected::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, CallFunc_Array_Length_ReturnValue) == 0x000488, "Member 'JSI_Slot_C_OnDragDetected::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, CallFunc_Less_IntInt_ReturnValue) == 0x00048C, "Member 'JSI_Slot_C_OnDragDetected::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, CallFunc_BreakVector2D_InVec_ImplicitCast) == 0x000490, "Member 'JSI_Slot_C_OnDragDetected::CallFunc_BreakVector2D_InVec_ImplicitCast' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragDetected, K2Node_Select_Option_0_ImplicitCast) == 0x0004A0, "Member 'JSI_Slot_C_OnDragDetected::K2Node_Select_Option_0_ImplicitCast' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.OnDragEnter
// 0x00B8 (0x00B8 - 0x0000)
struct JSI_Slot_C_OnDragEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          PointerEvent;                                      // 0x0038(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UDragDropOperation*                     Operation;                                         // 0x00B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_OnDragEnter) == 0x000008, "Wrong alignment on JSI_Slot_C_OnDragEnter");
static_assert(sizeof(JSI_Slot_C_OnDragEnter) == 0x0000B8, "Wrong size on JSI_Slot_C_OnDragEnter");
static_assert(offsetof(JSI_Slot_C_OnDragEnter, MyGeometry) == 0x000000, "Member 'JSI_Slot_C_OnDragEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragEnter, PointerEvent) == 0x000038, "Member 'JSI_Slot_C_OnDragEnter::PointerEvent' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragEnter, Operation) == 0x0000B0, "Member 'JSI_Slot_C_OnDragEnter::Operation' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.OnDragLeave
// 0x0080 (0x0080 - 0x0000)
struct JSI_Slot_C_OnDragLeave final
{
public:
	struct FPointerEvent                          PointerEvent;                                      // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UDragDropOperation*                     Operation;                                         // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_OnDragLeave) == 0x000008, "Wrong alignment on JSI_Slot_C_OnDragLeave");
static_assert(sizeof(JSI_Slot_C_OnDragLeave) == 0x000080, "Wrong size on JSI_Slot_C_OnDragLeave");
static_assert(offsetof(JSI_Slot_C_OnDragLeave, PointerEvent) == 0x000000, "Member 'JSI_Slot_C_OnDragLeave::PointerEvent' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragLeave, Operation) == 0x000078, "Member 'JSI_Slot_C_OnDragLeave::Operation' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.OnDragOver
// 0x00C0 (0x00C0 - 0x0000)
struct JSI_Slot_C_OnDragOver final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          PointerEvent;                                      // 0x0038(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UDragDropOperation*                     Operation;                                         // 0x00B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x00B8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_OnDragOver) == 0x000008, "Wrong alignment on JSI_Slot_C_OnDragOver");
static_assert(sizeof(JSI_Slot_C_OnDragOver) == 0x0000C0, "Wrong size on JSI_Slot_C_OnDragOver");
static_assert(offsetof(JSI_Slot_C_OnDragOver, MyGeometry) == 0x000000, "Member 'JSI_Slot_C_OnDragOver::MyGeometry' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragOver, PointerEvent) == 0x000038, "Member 'JSI_Slot_C_OnDragOver::PointerEvent' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragOver, Operation) == 0x0000B0, "Member 'JSI_Slot_C_OnDragOver::Operation' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDragOver, ReturnValue) == 0x0000B8, "Member 'JSI_Slot_C_OnDragOver::ReturnValue' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.OnDrop
// 0x0318 (0x0318 - 0x0000)
struct JSI_Slot_C_OnDrop final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          PointerEvent;                                      // 0x0038(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UDragDropOperation*                     Operation;                                         // 0x00B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x00B8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        FromContainer;                                     // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJigSDragOperation_C*                   DragOperation;                                     // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Rotated_;                                          // 0x00D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            DroppedSlotRef;                                    // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJigSDragOperation_C*                   K2Node_DynamicCast_AsJig_SDrag_Operation;          // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EA[0x6];                                       // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJigSplitWidget_C*                      CallFunc_Create_ReturnValue;                       // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CheckShopContainer_PageIndex;             // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ShopContainer                               CallFunc_CheckShopContainer_GetShopContainer;      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_CheckShopContainer_ShopContainer;         // 0x0108(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0113(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckTutorial_Locked;                     // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckTutorial_IsCase;                     // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckTutorial_Locked_1;                   // 0x0116(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckTutorial_IsCase_1;                   // 0x0117(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckMoneyMoveToCase_Allow;               // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckRootContainer_CanAdd_;               // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A[0x6];                                      // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC;                  // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13A[0x6];                                      // 0x013A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMPInGameInventory_C*                   CallFunc_GetInventoryWidget_Widget;                // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CountOut_OutInt;                          // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC_1;                // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMPInGameInventory_C*                   CallFunc_GetInventoryWidget_Widget_1;              // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x017B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ConfirmDragOperation_Result;              // 0x017D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17E[0x2];                                      // 0x017E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item;                           // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x018B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18D[0x3];                                      // 0x018D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_UpdateCount_Count;                        // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_195[0x3];                                      // 0x0195(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_UnhandledGetTargetContainer_Target;       // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_Found_;                // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef;               // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDragWidget_C*                          K2Node_DynamicCast_AsDrag_Widget;                  // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemBySlotIndex_Found;                 // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CA[0x6];                                      // 0x01CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetItemBySlotIndex_Item;                  // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckRootContainer_CanAdd__1;             // 0x01DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DB[0x5];                                      // 0x01DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UDragWidget_C*                          K2Node_DynamicCast_AsDrag_Widget_1;                // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DetectChange_NOChange;                    // 0x01EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EB[0x5];                                      // 0x01EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x01F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetDragWidget_Success;                    // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0202(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_Found__1;              // 0x0203(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef_1;             // 0x0208(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_4;    // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x3];                                      // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item_1;                         // 0x0218(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x3];                                      // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotIndexOnDrop_SlotIndex;             // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22A[0x2];                                      // 0x022A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x022C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x023D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x023E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23F[0x1];                                      // 0x023F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0245(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0246(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0247(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            K2Node_Select_Default;                             // 0x0250(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            K2Node_Select_Default_1;                           // 0x0260(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_5;    // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsContainer__IsContainer_;                // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x026A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x026B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        K2Node_Select_Default_2;                           // 0x0278(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_Found__2;              // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef_2;             // 0x0288(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0294(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_295[0x3];                                      // 0x0295(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmptySlot_isEmpty;                      // 0x029C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x029D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29E[0x2];                                      // 0x029E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD_1;               // 0x02B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMPInGameInventory_C*                   CallFunc_GetInventoryWidget_Widget_2;              // 0x02C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item_2;                         // 0x02D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_2;      // 0x02DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSupportedType__Supported_;              // 0x02DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x02DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x02E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x02E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x02E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x02E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_3;      // 0x02E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E6[0x2];                                      // 0x02E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x02EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x02ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x02EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x02EF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_11;                // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_12;                // 0x02F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x02F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x02F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmptySlot_isEmpty_1;                    // 0x02FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FB[0x1];                                      // 0x02FB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCount_Count;                           // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_6;    // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0301(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0302(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_13;                // 0x0303(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotIndexOnDrop_SlotIndex_1;           // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_14;                // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x0309(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30A[0x2];                                      // 0x030A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_4;      // 0x0311(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0312(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PerfromDrop_Moved;                        // 0x0313(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0314(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_3;                           // 0x0315(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_4;                           // 0x0316(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_OnDrop) == 0x000008, "Wrong alignment on JSI_Slot_C_OnDrop");
static_assert(sizeof(JSI_Slot_C_OnDrop) == 0x000318, "Wrong size on JSI_Slot_C_OnDrop");
static_assert(offsetof(JSI_Slot_C_OnDrop, MyGeometry) == 0x000000, "Member 'JSI_Slot_C_OnDrop::MyGeometry' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, PointerEvent) == 0x000038, "Member 'JSI_Slot_C_OnDrop::PointerEvent' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, Operation) == 0x0000B0, "Member 'JSI_Slot_C_OnDrop::Operation' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, ReturnValue) == 0x0000B8, "Member 'JSI_Slot_C_OnDrop::ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, FromContainer) == 0x0000C0, "Member 'JSI_Slot_C_OnDrop::FromContainer' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, DragOperation) == 0x0000C8, "Member 'JSI_Slot_C_OnDrop::DragOperation' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, Rotated_) == 0x0000D0, "Member 'JSI_Slot_C_OnDrop::Rotated_' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, DroppedSlotRef) == 0x0000D8, "Member 'JSI_Slot_C_OnDrop::DroppedSlotRef' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, K2Node_DynamicCast_AsJig_SDrag_Operation) == 0x0000E0, "Member 'JSI_Slot_C_OnDrop::K2Node_DynamicCast_AsJig_SDrag_Operation' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'JSI_Slot_C_OnDrop::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_Not_PreBool_ReturnValue) == 0x0000E9, "Member 'JSI_Slot_C_OnDrop::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_Create_ReturnValue) == 0x0000F0, "Member 'JSI_Slot_C_OnDrop::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000F8, "Member 'JSI_Slot_C_OnDrop::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_CheckShopContainer_PageIndex) == 0x0000FC, "Member 'JSI_Slot_C_OnDrop::CallFunc_CheckShopContainer_PageIndex' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_CheckShopContainer_GetShopContainer) == 0x000100, "Member 'JSI_Slot_C_OnDrop::CallFunc_CheckShopContainer_GetShopContainer' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_CheckShopContainer_ShopContainer) == 0x000108, "Member 'JSI_Slot_C_OnDrop::CallFunc_CheckShopContainer_ShopContainer' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000110, "Member 'JSI_Slot_C_OnDrop::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000111, "Member 'JSI_Slot_C_OnDrop::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000112, "Member 'JSI_Slot_C_OnDrop::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_BooleanAND_ReturnValue) == 0x000113, "Member 'JSI_Slot_C_OnDrop::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_CheckTutorial_Locked) == 0x000114, "Member 'JSI_Slot_C_OnDrop::CallFunc_CheckTutorial_Locked' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_CheckTutorial_IsCase) == 0x000115, "Member 'JSI_Slot_C_OnDrop::CallFunc_CheckTutorial_IsCase' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_CheckTutorial_Locked_1) == 0x000116, "Member 'JSI_Slot_C_OnDrop::CallFunc_CheckTutorial_Locked_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_CheckTutorial_IsCase_1) == 0x000117, "Member 'JSI_Slot_C_OnDrop::CallFunc_CheckTutorial_IsCase_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_CheckMoneyMoveToCase_Allow) == 0x000118, "Member 'JSI_Slot_C_OnDrop::CallFunc_CheckMoneyMoveToCase_Allow' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_CheckRootContainer_CanAdd_) == 0x000119, "Member 'JSI_Slot_C_OnDrop::CallFunc_CheckRootContainer_CanAdd_' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_GetPlayerController_ReturnValue) == 0x000120, "Member 'JSI_Slot_C_OnDrop::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, K2Node_DynamicCast_AsBPI_Surv_PC) == 0x000128, "Member 'JSI_Slot_C_OnDrop::K2Node_DynamicCast_AsBPI_Surv_PC' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, K2Node_DynamicCast_bSuccess_1) == 0x000138, "Member 'JSI_Slot_C_OnDrop::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000139, "Member 'JSI_Slot_C_OnDrop::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_GetInventoryWidget_Widget) == 0x000140, "Member 'JSI_Slot_C_OnDrop::CallFunc_GetInventoryWidget_Widget' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_GetPlayerController_ReturnValue_1) == 0x000148, "Member 'JSI_Slot_C_OnDrop::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_CountOut_OutInt) == 0x000150, "Member 'JSI_Slot_C_OnDrop::CallFunc_CountOut_OutInt' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, K2Node_DynamicCast_AsBPI_Surv_PC_1) == 0x000158, "Member 'JSI_Slot_C_OnDrop::K2Node_DynamicCast_AsBPI_Surv_PC_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, K2Node_DynamicCast_bSuccess_2) == 0x000168, "Member 'JSI_Slot_C_OnDrop::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_GetInventoryWidget_Widget_1) == 0x000170, "Member 'JSI_Slot_C_OnDrop::CallFunc_GetInventoryWidget_Widget_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, Temp_bool_Variable) == 0x000178, "Member 'JSI_Slot_C_OnDrop::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, Temp_bool_Variable_1) == 0x000179, "Member 'JSI_Slot_C_OnDrop::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00017A, "Member 'JSI_Slot_C_OnDrop::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x00017B, "Member 'JSI_Slot_C_OnDrop::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_BooleanAND_ReturnValue_1) == 0x00017C, "Member 'JSI_Slot_C_OnDrop::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_ConfirmDragOperation_Result) == 0x00017D, "Member 'JSI_Slot_C_OnDrop::CallFunc_ConfirmDragOperation_Result' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_Array_Get_Item) == 0x000180, "Member 'JSI_Slot_C_OnDrop::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_IsValid_ReturnValue) == 0x000188, "Member 'JSI_Slot_C_OnDrop::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_IsValid_ReturnValue_1) == 0x000189, "Member 'JSI_Slot_C_OnDrop::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_Not_PreBool_ReturnValue_2) == 0x00018A, "Member 'JSI_Slot_C_OnDrop::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_BooleanAND_ReturnValue_2) == 0x00018B, "Member 'JSI_Slot_C_OnDrop::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, Temp_bool_Variable_2) == 0x00018C, "Member 'JSI_Slot_C_OnDrop::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_UpdateCount_Count) == 0x000190, "Member 'JSI_Slot_C_OnDrop::CallFunc_UpdateCount_Count' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x000194, "Member 'JSI_Slot_C_OnDrop::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_Array_Length_ReturnValue) == 0x000198, "Member 'JSI_Slot_C_OnDrop::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_UnhandledGetTargetContainer_Target) == 0x0001A0, "Member 'JSI_Slot_C_OnDrop::CallFunc_UnhandledGetTargetContainer_Target' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_GetEquippedItemRef_Found_) == 0x0001A8, "Member 'JSI_Slot_C_OnDrop::CallFunc_GetEquippedItemRef_Found_' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_GetEquippedItemRef_ItemRef) == 0x0001B0, "Member 'JSI_Slot_C_OnDrop::CallFunc_GetEquippedItemRef_ItemRef' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_Not_PreBool_ReturnValue_3) == 0x0001B8, "Member 'JSI_Slot_C_OnDrop::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_Not_PreBool_ReturnValue_4) == 0x0001B9, "Member 'JSI_Slot_C_OnDrop::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_BooleanOR_ReturnValue) == 0x0001BA, "Member 'JSI_Slot_C_OnDrop::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_IsValid_ReturnValue_2) == 0x0001BB, "Member 'JSI_Slot_C_OnDrop::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, K2Node_DynamicCast_AsDrag_Widget) == 0x0001C0, "Member 'JSI_Slot_C_OnDrop::K2Node_DynamicCast_AsDrag_Widget' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, K2Node_DynamicCast_bSuccess_3) == 0x0001C8, "Member 'JSI_Slot_C_OnDrop::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_GetItemBySlotIndex_Found) == 0x0001C9, "Member 'JSI_Slot_C_OnDrop::CallFunc_GetItemBySlotIndex_Found' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_GetItemBySlotIndex_Item) == 0x0001D0, "Member 'JSI_Slot_C_OnDrop::CallFunc_GetItemBySlotIndex_Item' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x0001D8, "Member 'JSI_Slot_C_OnDrop::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_BooleanAND_ReturnValue_3) == 0x0001D9, "Member 'JSI_Slot_C_OnDrop::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_CheckRootContainer_CanAdd__1) == 0x0001DA, "Member 'JSI_Slot_C_OnDrop::CallFunc_CheckRootContainer_CanAdd__1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, K2Node_DynamicCast_AsDrag_Widget_1) == 0x0001E0, "Member 'JSI_Slot_C_OnDrop::K2Node_DynamicCast_AsDrag_Widget_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, K2Node_DynamicCast_bSuccess_4) == 0x0001E8, "Member 'JSI_Slot_C_OnDrop::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0001E9, "Member 'JSI_Slot_C_OnDrop::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_DetectChange_NOChange) == 0x0001EA, "Member 'JSI_Slot_C_OnDrop::CallFunc_DetectChange_NOChange' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x0001F0, "Member 'JSI_Slot_C_OnDrop::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, K2Node_DynamicCast_bSuccess_5) == 0x000200, "Member 'JSI_Slot_C_OnDrop::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_SetDragWidget_Success) == 0x000201, "Member 'JSI_Slot_C_OnDrop::CallFunc_SetDragWidget_Success' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, Temp_bool_Variable_3) == 0x000202, "Member 'JSI_Slot_C_OnDrop::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_GetEquippedItemRef_Found__1) == 0x000203, "Member 'JSI_Slot_C_OnDrop::CallFunc_GetEquippedItemRef_Found__1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_GetEquippedItemRef_ItemRef_1) == 0x000208, "Member 'JSI_Slot_C_OnDrop::CallFunc_GetEquippedItemRef_ItemRef_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_EqualEqual_ObjectObject_ReturnValue_4) == 0x000210, "Member 'JSI_Slot_C_OnDrop::CallFunc_EqualEqual_ObjectObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, Temp_int_Array_Index_Variable) == 0x000214, "Member 'JSI_Slot_C_OnDrop::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_Array_Get_Item_1) == 0x000218, "Member 'JSI_Slot_C_OnDrop::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000220, "Member 'JSI_Slot_C_OnDrop::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_GetSlotIndexOnDrop_SlotIndex) == 0x000224, "Member 'JSI_Slot_C_OnDrop::CallFunc_GetSlotIndexOnDrop_SlotIndex' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_BooleanAND_ReturnValue_4) == 0x000228, "Member 'JSI_Slot_C_OnDrop::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_BooleanOR_ReturnValue_1) == 0x000229, "Member 'JSI_Slot_C_OnDrop::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, K2Node_MakeStruct_LinearColor) == 0x00022C, "Member 'JSI_Slot_C_OnDrop::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_IsValid_ReturnValue_3) == 0x00023C, "Member 'JSI_Slot_C_OnDrop::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x00023D, "Member 'JSI_Slot_C_OnDrop::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_IsValid_ReturnValue_4) == 0x00023E, "Member 'JSI_Slot_C_OnDrop::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_Array_Length_ReturnValue_1) == 0x000240, "Member 'JSI_Slot_C_OnDrop::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_Greater_IntInt_ReturnValue) == 0x000244, "Member 'JSI_Slot_C_OnDrop::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000245, "Member 'JSI_Slot_C_OnDrop::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000246, "Member 'JSI_Slot_C_OnDrop::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_BooleanOR_ReturnValue_2) == 0x000247, "Member 'JSI_Slot_C_OnDrop::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_BooleanAND_ReturnValue_5) == 0x000248, "Member 'JSI_Slot_C_OnDrop::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, K2Node_Select_Default) == 0x000250, "Member 'JSI_Slot_C_OnDrop::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_Not_PreBool_ReturnValue_5) == 0x000258, "Member 'JSI_Slot_C_OnDrop::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, K2Node_Select_Default_1) == 0x000260, "Member 'JSI_Slot_C_OnDrop::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_EqualEqual_ObjectObject_ReturnValue_5) == 0x000268, "Member 'JSI_Slot_C_OnDrop::CallFunc_EqualEqual_ObjectObject_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_IsContainer__IsContainer_) == 0x000269, "Member 'JSI_Slot_C_OnDrop::CallFunc_IsContainer__IsContainer_' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_BooleanAND_ReturnValue_6) == 0x00026A, "Member 'JSI_Slot_C_OnDrop::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_BooleanAND_ReturnValue_7) == 0x00026B, "Member 'JSI_Slot_C_OnDrop::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_SelectInt_ReturnValue) == 0x00026C, "Member 'JSI_Slot_C_OnDrop::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_BooleanAND_ReturnValue_8) == 0x000270, "Member 'JSI_Slot_C_OnDrop::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, K2Node_Select_Default_2) == 0x000278, "Member 'JSI_Slot_C_OnDrop::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_GetEquippedItemRef_Found__2) == 0x000280, "Member 'JSI_Slot_C_OnDrop::CallFunc_GetEquippedItemRef_Found__2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_GetEquippedItemRef_ItemRef_2) == 0x000288, "Member 'JSI_Slot_C_OnDrop::CallFunc_GetEquippedItemRef_ItemRef_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, Temp_int_Loop_Counter_Variable) == 0x000290, "Member 'JSI_Slot_C_OnDrop::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_Less_IntInt_ReturnValue) == 0x000294, "Member 'JSI_Slot_C_OnDrop::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_Add_IntInt_ReturnValue) == 0x000298, "Member 'JSI_Slot_C_OnDrop::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_IsEmptySlot_isEmpty) == 0x00029C, "Member 'JSI_Slot_C_OnDrop::CallFunc_IsEmptySlot_isEmpty' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_Not_PreBool_ReturnValue_6) == 0x00029D, "Member 'JSI_Slot_C_OnDrop::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_GetPlayerController_ReturnValue_2) == 0x0002A0, "Member 'JSI_Slot_C_OnDrop::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_GetHUD_ReturnValue) == 0x0002A8, "Member 'JSI_Slot_C_OnDrop::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, K2Node_DynamicCast_AsBPI_Game_HUD_1) == 0x0002B0, "Member 'JSI_Slot_C_OnDrop::K2Node_DynamicCast_AsBPI_Game_HUD_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, K2Node_DynamicCast_bSuccess_6) == 0x0002C0, "Member 'JSI_Slot_C_OnDrop::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_GetInventoryWidget_Widget_2) == 0x0002C8, "Member 'JSI_Slot_C_OnDrop::CallFunc_GetInventoryWidget_Widget_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_Array_Get_Item_2) == 0x0002D0, "Member 'JSI_Slot_C_OnDrop::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_Array_Length_ReturnValue_2) == 0x0002D8, "Member 'JSI_Slot_C_OnDrop::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0002DC, "Member 'JSI_Slot_C_OnDrop::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_NotEqual_ObjectObject_ReturnValue_2) == 0x0002DD, "Member 'JSI_Slot_C_OnDrop::CallFunc_NotEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_IsSupportedType__Supported_) == 0x0002DE, "Member 'JSI_Slot_C_OnDrop::CallFunc_IsSupportedType__Supported_' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0002DF, "Member 'JSI_Slot_C_OnDrop::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x0002E0, "Member 'JSI_Slot_C_OnDrop::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_BooleanOR_ReturnValue_3) == 0x0002E1, "Member 'JSI_Slot_C_OnDrop::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_BooleanAND_ReturnValue_9) == 0x0002E2, "Member 'JSI_Slot_C_OnDrop::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, Temp_bool_Variable_4) == 0x0002E3, "Member 'JSI_Slot_C_OnDrop::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_IsValid_ReturnValue_5) == 0x0002E4, "Member 'JSI_Slot_C_OnDrop::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_NotEqual_ObjectObject_ReturnValue_3) == 0x0002E5, "Member 'JSI_Slot_C_OnDrop::CallFunc_NotEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_Array_Length_ReturnValue_3) == 0x0002E8, "Member 'JSI_Slot_C_OnDrop::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0002EC, "Member 'JSI_Slot_C_OnDrop::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_BooleanAND_ReturnValue_10) == 0x0002ED, "Member 'JSI_Slot_C_OnDrop::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_Array_Contains_ReturnValue) == 0x0002EE, "Member 'JSI_Slot_C_OnDrop::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_IsValid_ReturnValue_6) == 0x0002EF, "Member 'JSI_Slot_C_OnDrop::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_Not_PreBool_ReturnValue_7) == 0x0002F0, "Member 'JSI_Slot_C_OnDrop::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_BooleanAND_ReturnValue_11) == 0x0002F1, "Member 'JSI_Slot_C_OnDrop::CallFunc_BooleanAND_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_BooleanAND_ReturnValue_12) == 0x0002F2, "Member 'JSI_Slot_C_OnDrop::CallFunc_BooleanAND_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_Array_Contains_ReturnValue_1) == 0x0002F3, "Member 'JSI_Slot_C_OnDrop::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_Array_Length_ReturnValue_4) == 0x0002F4, "Member 'JSI_Slot_C_OnDrop::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x0002F8, "Member 'JSI_Slot_C_OnDrop::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_IsValid_ReturnValue_7) == 0x0002F9, "Member 'JSI_Slot_C_OnDrop::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_IsEmptySlot_isEmpty_1) == 0x0002FA, "Member 'JSI_Slot_C_OnDrop::CallFunc_IsEmptySlot_isEmpty_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_GetCount_Count) == 0x0002FC, "Member 'JSI_Slot_C_OnDrop::CallFunc_GetCount_Count' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_EqualEqual_ObjectObject_ReturnValue_6) == 0x000300, "Member 'JSI_Slot_C_OnDrop::CallFunc_EqualEqual_ObjectObject_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_Less_IntInt_ReturnValue_1) == 0x000301, "Member 'JSI_Slot_C_OnDrop::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000302, "Member 'JSI_Slot_C_OnDrop::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_BooleanAND_ReturnValue_13) == 0x000303, "Member 'JSI_Slot_C_OnDrop::CallFunc_BooleanAND_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_GetSlotIndexOnDrop_SlotIndex_1) == 0x000304, "Member 'JSI_Slot_C_OnDrop::CallFunc_GetSlotIndexOnDrop_SlotIndex_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_BooleanAND_ReturnValue_14) == 0x000308, "Member 'JSI_Slot_C_OnDrop::CallFunc_BooleanAND_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_Array_Contains_ReturnValue_2) == 0x000309, "Member 'JSI_Slot_C_OnDrop::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_Array_Length_ReturnValue_5) == 0x00030C, "Member 'JSI_Slot_C_OnDrop::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x000310, "Member 'JSI_Slot_C_OnDrop::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_NotEqual_ObjectObject_ReturnValue_4) == 0x000311, "Member 'JSI_Slot_C_OnDrop::CallFunc_NotEqual_ObjectObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_BooleanOR_ReturnValue_4) == 0x000312, "Member 'JSI_Slot_C_OnDrop::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, CallFunc_PerfromDrop_Moved) == 0x000313, "Member 'JSI_Slot_C_OnDrop::CallFunc_PerfromDrop_Moved' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, Temp_bool_Variable_5) == 0x000314, "Member 'JSI_Slot_C_OnDrop::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, K2Node_Select_Default_3) == 0x000315, "Member 'JSI_Slot_C_OnDrop::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnDrop, K2Node_Select_Default_4) == 0x000316, "Member 'JSI_Slot_C_OnDrop::K2Node_Select_Default_4' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.OnHideItemInfo
// 0x0030 (0x0030 - 0x0000)
struct JSI_Slot_C_OnHideItemInfo final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_ItemInfo_C*                          CallFunc_GetItemInfoWidget_Widget;                 // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_OnHideItemInfo) == 0x000008, "Wrong alignment on JSI_Slot_C_OnHideItemInfo");
static_assert(sizeof(JSI_Slot_C_OnHideItemInfo) == 0x000030, "Wrong size on JSI_Slot_C_OnHideItemInfo");
static_assert(offsetof(JSI_Slot_C_OnHideItemInfo, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'JSI_Slot_C_OnHideItemInfo::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnHideItemInfo, CallFunc_GetHUD_ReturnValue) == 0x000008, "Member 'JSI_Slot_C_OnHideItemInfo::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnHideItemInfo, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x000010, "Member 'JSI_Slot_C_OnHideItemInfo::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnHideItemInfo, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'JSI_Slot_C_OnHideItemInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnHideItemInfo, CallFunc_GetItemInfoWidget_Widget) == 0x000028, "Member 'JSI_Slot_C_OnHideItemInfo::CallFunc_GetItemInfoWidget_Widget' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.OnKeyDown
// 0x0208 (0x0208 - 0x0000)
struct JSI_Slot_C_OnKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x0130(0x0018)(HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0148(0x00B8)()
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_OnKeyDown) == 0x000008, "Wrong alignment on JSI_Slot_C_OnKeyDown");
static_assert(sizeof(JSI_Slot_C_OnKeyDown) == 0x000208, "Wrong size on JSI_Slot_C_OnKeyDown");
static_assert(offsetof(JSI_Slot_C_OnKeyDown, MyGeometry) == 0x000000, "Member 'JSI_Slot_C_OnKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnKeyDown, InKeyEvent) == 0x000038, "Member 'JSI_Slot_C_OnKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnKeyDown, ReturnValue) == 0x000078, "Member 'JSI_Slot_C_OnKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnKeyDown, CallFunc_GetKey_ReturnValue) == 0x000130, "Member 'JSI_Slot_C_OnKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnKeyDown, CallFunc_Unhandled_ReturnValue) == 0x000148, "Member 'JSI_Slot_C_OnKeyDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000200, "Member 'JSI_Slot_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.OnLoaded_7D15951943AF1C18C4E3788AE52A2621
// 0x0008 (0x0008 - 0x0000)
struct JSI_Slot_C_OnLoaded_7D15951943AF1C18C4E3788AE52A2621 final
{
public:
	TSubclassOf<class UObject>                    Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_OnLoaded_7D15951943AF1C18C4E3788AE52A2621) == 0x000008, "Wrong alignment on JSI_Slot_C_OnLoaded_7D15951943AF1C18C4E3788AE52A2621");
static_assert(sizeof(JSI_Slot_C_OnLoaded_7D15951943AF1C18C4E3788AE52A2621) == 0x000008, "Wrong size on JSI_Slot_C_OnLoaded_7D15951943AF1C18C4E3788AE52A2621");
static_assert(offsetof(JSI_Slot_C_OnLoaded_7D15951943AF1C18C4E3788AE52A2621, Loaded) == 0x000000, "Member 'JSI_Slot_C_OnLoaded_7D15951943AF1C18C4E3788AE52A2621::Loaded' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.OnMouseButtonDoubleClick
// 0x0228 (0x0228 - 0x0000)
struct JSI_Slot_C_OnMouseButtonDoubleClick final
{
public:
	struct FGeometry                              InMyGeometry;                                      // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          InMouseEvent;                                      // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue; // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16B[0x5];                                      // 0x016B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            K2Node_MakeStruct_EventReply;                      // 0x0170(0x00B8)()
};
static_assert(alignof(JSI_Slot_C_OnMouseButtonDoubleClick) == 0x000008, "Wrong alignment on JSI_Slot_C_OnMouseButtonDoubleClick");
static_assert(sizeof(JSI_Slot_C_OnMouseButtonDoubleClick) == 0x000228, "Wrong size on JSI_Slot_C_OnMouseButtonDoubleClick");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDoubleClick, InMyGeometry) == 0x000000, "Member 'JSI_Slot_C_OnMouseButtonDoubleClick::InMyGeometry' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDoubleClick, InMouseEvent) == 0x000038, "Member 'JSI_Slot_C_OnMouseButtonDoubleClick::InMouseEvent' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDoubleClick, ReturnValue) == 0x0000B0, "Member 'JSI_Slot_C_OnMouseButtonDoubleClick::ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDoubleClick, CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue) == 0x000168, "Member 'JSI_Slot_C_OnMouseButtonDoubleClick::CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDoubleClick, CallFunc_Not_PreBool_ReturnValue) == 0x000169, "Member 'JSI_Slot_C_OnMouseButtonDoubleClick::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDoubleClick, CallFunc_BooleanAND_ReturnValue) == 0x00016A, "Member 'JSI_Slot_C_OnMouseButtonDoubleClick::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDoubleClick, K2Node_MakeStruct_EventReply) == 0x000170, "Member 'JSI_Slot_C_OnMouseButtonDoubleClick::K2Node_MakeStruct_EventReply' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.OnMouseButtonDown
// 0x0468 (0x0468 - 0x0000)
struct JSI_Slot_C_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x016C(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue; // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable;                              // 0x01B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_AbsoluteToLocal_ReturnValue;              // 0x01C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x01D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   CallFunc_PointerEvent_GetEffectingButton_ReturnValue; // 0x01E8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_PointerEvent_GetEffectingButton_ReturnValue_1; // 0x0200(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21A[0x6];                                      // 0x021A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x0220(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   CallFunc_PointerEvent_GetEffectingButton_ReturnValue_2; // 0x0230(0x0018)(HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0270(0x00B8)()
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0329(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x032A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x032B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x032C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32D[0x3];                                      // 0x032D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetClickLocation_Output_Get;              // 0x0330(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_DetectDragIfPressed_ReturnValue;          // 0x0340(0x00B8)()
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_409[0x7];                                      // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0418(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0441(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_442[0x6];                                      // 0x0442(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default;                             // 0x0448(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_1;                           // 0x0458(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_OnMouseButtonDown) == 0x000008, "Wrong alignment on JSI_Slot_C_OnMouseButtonDown");
static_assert(sizeof(JSI_Slot_C_OnMouseButtonDown) == 0x000468, "Wrong size on JSI_Slot_C_OnMouseButtonDown");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'JSI_Slot_C_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDown, MouseEvent) == 0x000038, "Member 'JSI_Slot_C_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDown, ReturnValue) == 0x0000B0, "Member 'JSI_Slot_C_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDown, Temp_bool_Variable) == 0x000168, "Member 'JSI_Slot_C_OnMouseButtonDown::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDown, CallFunc_GetCachedGeometry_ReturnValue) == 0x00016C, "Member 'JSI_Slot_C_OnMouseButtonDown::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDown, CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue) == 0x0001A8, "Member 'JSI_Slot_C_OnMouseButtonDown::CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDown, Temp_struct_Variable) == 0x0001B8, "Member 'JSI_Slot_C_OnMouseButtonDown::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDown, CallFunc_AbsoluteToLocal_ReturnValue) == 0x0001C8, "Member 'JSI_Slot_C_OnMouseButtonDown::CallFunc_AbsoluteToLocal_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDown, Temp_struct_Variable_1) == 0x0001D8, "Member 'JSI_Slot_C_OnMouseButtonDown::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDown, CallFunc_PointerEvent_GetEffectingButton_ReturnValue) == 0x0001E8, "Member 'JSI_Slot_C_OnMouseButtonDown::CallFunc_PointerEvent_GetEffectingButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDown, CallFunc_PointerEvent_GetEffectingButton_ReturnValue_1) == 0x000200, "Member 'JSI_Slot_C_OnMouseButtonDown::CallFunc_PointerEvent_GetEffectingButton_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000218, "Member 'JSI_Slot_C_OnMouseButtonDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDown, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x000219, "Member 'JSI_Slot_C_OnMouseButtonDown::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDown, CallFunc_GetLocalSize_ReturnValue) == 0x000220, "Member 'JSI_Slot_C_OnMouseButtonDown::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDown, CallFunc_PointerEvent_GetEffectingButton_ReturnValue_2) == 0x000230, "Member 'JSI_Slot_C_OnMouseButtonDown::CallFunc_PointerEvent_GetEffectingButton_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDown, CallFunc_BreakVector2D_X) == 0x000248, "Member 'JSI_Slot_C_OnMouseButtonDown::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDown, CallFunc_BreakVector2D_Y) == 0x000250, "Member 'JSI_Slot_C_OnMouseButtonDown::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDown, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000258, "Member 'JSI_Slot_C_OnMouseButtonDown::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDown, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000260, "Member 'JSI_Slot_C_OnMouseButtonDown::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDown, CallFunc_Not_PreBool_ReturnValue) == 0x000268, "Member 'JSI_Slot_C_OnMouseButtonDown::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDown, CallFunc_Handled_ReturnValue) == 0x000270, "Member 'JSI_Slot_C_OnMouseButtonDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDown, CallFunc_Not_PreBool_ReturnValue_1) == 0x000328, "Member 'JSI_Slot_C_OnMouseButtonDown::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDown, CallFunc_BooleanOR_ReturnValue) == 0x000329, "Member 'JSI_Slot_C_OnMouseButtonDown::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDown, CallFunc_Not_PreBool_ReturnValue_2) == 0x00032A, "Member 'JSI_Slot_C_OnMouseButtonDown::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDown, CallFunc_Not_PreBool_ReturnValue_3) == 0x00032B, "Member 'JSI_Slot_C_OnMouseButtonDown::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDown, CallFunc_BooleanOR_ReturnValue_1) == 0x00032C, "Member 'JSI_Slot_C_OnMouseButtonDown::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDown, CallFunc_GetClickLocation_Output_Get) == 0x000330, "Member 'JSI_Slot_C_OnMouseButtonDown::CallFunc_GetClickLocation_Output_Get' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDown, CallFunc_DetectDragIfPressed_ReturnValue) == 0x000340, "Member 'JSI_Slot_C_OnMouseButtonDown::CallFunc_DetectDragIfPressed_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDown, CallFunc_BreakVector2D_X_1) == 0x0003F8, "Member 'JSI_Slot_C_OnMouseButtonDown::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDown, CallFunc_BreakVector2D_Y_1) == 0x000400, "Member 'JSI_Slot_C_OnMouseButtonDown::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDown, Temp_bool_Variable_1) == 0x000408, "Member 'JSI_Slot_C_OnMouseButtonDown::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDown, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000410, "Member 'JSI_Slot_C_OnMouseButtonDown::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDown, CallFunc_MakeVector2D_ReturnValue) == 0x000418, "Member 'JSI_Slot_C_OnMouseButtonDown::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDown, CallFunc_BreakVector2D_X_2) == 0x000428, "Member 'JSI_Slot_C_OnMouseButtonDown::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDown, CallFunc_BreakVector2D_Y_2) == 0x000430, "Member 'JSI_Slot_C_OnMouseButtonDown::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDown, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000438, "Member 'JSI_Slot_C_OnMouseButtonDown::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDown, CallFunc_Not_PreBool_ReturnValue_4) == 0x000440, "Member 'JSI_Slot_C_OnMouseButtonDown::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDown, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000441, "Member 'JSI_Slot_C_OnMouseButtonDown::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDown, K2Node_Select_Default) == 0x000448, "Member 'JSI_Slot_C_OnMouseButtonDown::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonDown, K2Node_Select_Default_1) == 0x000458, "Member 'JSI_Slot_C_OnMouseButtonDown::K2Node_Select_Default_1' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.OnMouseButtonUp
// 0x0228 (0x0228 - 0x0000)
struct JSI_Slot_C_OnMouseButtonUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0168(0x00B8)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_OnMouseButtonUp) == 0x000008, "Wrong alignment on JSI_Slot_C_OnMouseButtonUp");
static_assert(sizeof(JSI_Slot_C_OnMouseButtonUp) == 0x000228, "Wrong size on JSI_Slot_C_OnMouseButtonUp");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonUp, MyGeometry) == 0x000000, "Member 'JSI_Slot_C_OnMouseButtonUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonUp, MouseEvent) == 0x000038, "Member 'JSI_Slot_C_OnMouseButtonUp::MouseEvent' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonUp, ReturnValue) == 0x0000B0, "Member 'JSI_Slot_C_OnMouseButtonUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonUp, CallFunc_Handled_ReturnValue) == 0x000168, "Member 'JSI_Slot_C_OnMouseButtonUp::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseButtonUp, CallFunc_PlayAnimationForward_ReturnValue) == 0x000220, "Member 'JSI_Slot_C_OnMouseButtonUp::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.OnMouseEnter
// 0x00B0 (0x00B0 - 0x0000)
struct JSI_Slot_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(JSI_Slot_C_OnMouseEnter) == 0x000008, "Wrong alignment on JSI_Slot_C_OnMouseEnter");
static_assert(sizeof(JSI_Slot_C_OnMouseEnter) == 0x0000B0, "Wrong size on JSI_Slot_C_OnMouseEnter");
static_assert(offsetof(JSI_Slot_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'JSI_Slot_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'JSI_Slot_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.OnMouseLeave
// 0x0078 (0x0078 - 0x0000)
struct JSI_Slot_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(JSI_Slot_C_OnMouseLeave) == 0x000008, "Wrong alignment on JSI_Slot_C_OnMouseLeave");
static_assert(sizeof(JSI_Slot_C_OnMouseLeave) == 0x000078, "Wrong size on JSI_Slot_C_OnMouseLeave");
static_assert(offsetof(JSI_Slot_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'JSI_Slot_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.OnRemovedFromFocusPath
// 0x0008 (0x0008 - 0x0000)
struct JSI_Slot_C_OnRemovedFromFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(JSI_Slot_C_OnRemovedFromFocusPath) == 0x000004, "Wrong alignment on JSI_Slot_C_OnRemovedFromFocusPath");
static_assert(sizeof(JSI_Slot_C_OnRemovedFromFocusPath) == 0x000008, "Wrong size on JSI_Slot_C_OnRemovedFromFocusPath");
static_assert(offsetof(JSI_Slot_C_OnRemovedFromFocusPath, InFocusEvent) == 0x000000, "Member 'JSI_Slot_C_OnRemovedFromFocusPath::InFocusEvent' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.OnSelected(Clicked)__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct JSI_Slot_C_OnSelected_Clicked___DelegateSignature final
{
public:
	class UJSI_Slot_C*                            SlotWidgetRef;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_OnSelected_Clicked___DelegateSignature) == 0x000008, "Wrong alignment on JSI_Slot_C_OnSelected_Clicked___DelegateSignature");
static_assert(sizeof(JSI_Slot_C_OnSelected_Clicked___DelegateSignature) == 0x000008, "Wrong size on JSI_Slot_C_OnSelected_Clicked___DelegateSignature");
static_assert(offsetof(JSI_Slot_C_OnSelected_Clicked___DelegateSignature, SlotWidgetRef) == 0x000000, "Member 'JSI_Slot_C_OnSelected_Clicked___DelegateSignature::SlotWidgetRef' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.OnSelected(ClickedRMB)__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct JSI_Slot_C_OnSelected_ClickedRMB___DelegateSignature final
{
public:
	class UJSI_Slot_C*                            SlotWidgetRef;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_OnSelected_ClickedRMB___DelegateSignature) == 0x000008, "Wrong alignment on JSI_Slot_C_OnSelected_ClickedRMB___DelegateSignature");
static_assert(sizeof(JSI_Slot_C_OnSelected_ClickedRMB___DelegateSignature) == 0x000008, "Wrong size on JSI_Slot_C_OnSelected_ClickedRMB___DelegateSignature");
static_assert(offsetof(JSI_Slot_C_OnSelected_ClickedRMB___DelegateSignature, SlotWidgetRef) == 0x000000, "Member 'JSI_Slot_C_OnSelected_ClickedRMB___DelegateSignature::SlotWidgetRef' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.OnShowItemInfo
// 0x00C0 (0x00C0 - 0x0000)
struct JSI_Slot_C_OnShowItemInfo final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Attachment                          CallFunc_GetDataTableRowFromName_OutRow;           // 0x0030(0x0080)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_ItemInfo_C*                          CallFunc_GetItemInfoWidget_Widget;                 // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_OnShowItemInfo) == 0x000008, "Wrong alignment on JSI_Slot_C_OnShowItemInfo");
static_assert(sizeof(JSI_Slot_C_OnShowItemInfo) == 0x0000C0, "Wrong size on JSI_Slot_C_OnShowItemInfo");
static_assert(offsetof(JSI_Slot_C_OnShowItemInfo, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'JSI_Slot_C_OnShowItemInfo::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnShowItemInfo, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000008, "Member 'JSI_Slot_C_OnShowItemInfo::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnShowItemInfo, CallFunc_GetHUD_ReturnValue) == 0x000010, "Member 'JSI_Slot_C_OnShowItemInfo::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnShowItemInfo, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x000018, "Member 'JSI_Slot_C_OnShowItemInfo::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnShowItemInfo, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'JSI_Slot_C_OnShowItemInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnShowItemInfo, CallFunc_GetDataTableRowFromName_OutRow) == 0x000030, "Member 'JSI_Slot_C_OnShowItemInfo::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnShowItemInfo, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000B0, "Member 'JSI_Slot_C_OnShowItemInfo::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_OnShowItemInfo, CallFunc_GetItemInfoWidget_Widget) == 0x0000B8, "Member 'JSI_Slot_C_OnShowItemInfo::CallFunc_GetItemInfoWidget_Widget' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.PlayDropAnimation
// 0x0001 (0x0001 - 0x0000)
struct JSI_Slot_C_PlayDropAnimation final
{
public:
	EUMGSequencePlayMode                          Direction;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_PlayDropAnimation) == 0x000001, "Wrong alignment on JSI_Slot_C_PlayDropAnimation");
static_assert(sizeof(JSI_Slot_C_PlayDropAnimation) == 0x000001, "Wrong size on JSI_Slot_C_PlayDropAnimation");
static_assert(offsetof(JSI_Slot_C_PlayDropAnimation, Direction) == 0x000000, "Member 'JSI_Slot_C_PlayDropAnimation::Direction' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.PlayDropSound
// 0x0258 (0x0258 - 0x0000)
struct JSI_Slot_C_PlayDropSound final
{
public:
	class UJSI_Slot_C*                            SlotRef;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        ToContainerRef;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Local;                                             // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFMODOcclusionDetails                  K2Node_MakeStruct_FMODOcclusionDetails;            // 0x0011(0x0003)(NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow;           // 0x0018(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             K2Node_Select_Default;                             // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_FMODPlayEventAttachedBullet_ReturnValue;  // 0x0250(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_PlayDropSound) == 0x000008, "Wrong alignment on JSI_Slot_C_PlayDropSound");
static_assert(sizeof(JSI_Slot_C_PlayDropSound) == 0x000258, "Wrong size on JSI_Slot_C_PlayDropSound");
static_assert(offsetof(JSI_Slot_C_PlayDropSound, SlotRef) == 0x000000, "Member 'JSI_Slot_C_PlayDropSound::SlotRef' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_PlayDropSound, ToContainerRef) == 0x000008, "Member 'JSI_Slot_C_PlayDropSound::ToContainerRef' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_PlayDropSound, Local) == 0x000010, "Member 'JSI_Slot_C_PlayDropSound::Local' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_PlayDropSound, K2Node_MakeStruct_FMODOcclusionDetails) == 0x000011, "Member 'JSI_Slot_C_PlayDropSound::K2Node_MakeStruct_FMODOcclusionDetails' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_PlayDropSound, CallFunc_Not_PreBool_ReturnValue) == 0x000014, "Member 'JSI_Slot_C_PlayDropSound::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_PlayDropSound, Temp_bool_Variable) == 0x000015, "Member 'JSI_Slot_C_PlayDropSound::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_PlayDropSound, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000016, "Member 'JSI_Slot_C_PlayDropSound::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_PlayDropSound, CallFunc_GetDataTableRowFromName_OutRow) == 0x000018, "Member 'JSI_Slot_C_PlayDropSound::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_PlayDropSound, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000238, "Member 'JSI_Slot_C_PlayDropSound::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_PlayDropSound, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000240, "Member 'JSI_Slot_C_PlayDropSound::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_PlayDropSound, K2Node_Select_Default) == 0x000248, "Member 'JSI_Slot_C_PlayDropSound::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_PlayDropSound, CallFunc_FMODPlayEventAttachedBullet_ReturnValue) == 0x000250, "Member 'JSI_Slot_C_PlayDropSound::CallFunc_FMODPlayEventAttachedBullet_ReturnValue' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct JSI_Slot_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_PreConstruct) == 0x000001, "Wrong alignment on JSI_Slot_C_PreConstruct");
static_assert(sizeof(JSI_Slot_C_PreConstruct) == 0x000001, "Wrong size on JSI_Slot_C_PreConstruct");
static_assert(offsetof(JSI_Slot_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'JSI_Slot_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.ProgressBar5s
// 0x0008 (0x0008 - 0x0000)
struct JSI_Slot_C_ProgressBar5s final
{
public:
	class UProgressBar*                           Param_ProgressBar_Component;                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_ProgressBar5s) == 0x000008, "Wrong alignment on JSI_Slot_C_ProgressBar5s");
static_assert(sizeof(JSI_Slot_C_ProgressBar5s) == 0x000008, "Wrong size on JSI_Slot_C_ProgressBar5s");
static_assert(offsetof(JSI_Slot_C_ProgressBar5s, Param_ProgressBar_Component) == 0x000000, "Member 'JSI_Slot_C_ProgressBar5s::Param_ProgressBar_Component' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.ProgressBar6s
// 0x0008 (0x0008 - 0x0000)
struct JSI_Slot_C_ProgressBar6s final
{
public:
	class UProgressBar*                           Param_ProgressBar_Component;                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_ProgressBar6s) == 0x000008, "Wrong alignment on JSI_Slot_C_ProgressBar6s");
static_assert(sizeof(JSI_Slot_C_ProgressBar6s) == 0x000008, "Wrong size on JSI_Slot_C_ProgressBar6s");
static_assert(offsetof(JSI_Slot_C_ProgressBar6s, Param_ProgressBar_Component) == 0x000000, "Member 'JSI_Slot_C_ProgressBar6s::Param_ProgressBar_Component' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.RefreshOnDragEnter
// 0x0008 (0x0008 - 0x0000)
struct JSI_Slot_C_RefreshOnDragEnter final
{
public:
	class UDragDropOperation*                     Op;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_RefreshOnDragEnter) == 0x000008, "Wrong alignment on JSI_Slot_C_RefreshOnDragEnter");
static_assert(sizeof(JSI_Slot_C_RefreshOnDragEnter) == 0x000008, "Wrong size on JSI_Slot_C_RefreshOnDragEnter");
static_assert(offsetof(JSI_Slot_C_RefreshOnDragEnter, Op) == 0x000000, "Member 'JSI_Slot_C_RefreshOnDragEnter::Op' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.Repair
// 0x00A8 (0x00A8 - 0x0000)
struct JSI_Slot_C_Repair final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetNewMaxDurability_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC;                  // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      CallFunc_GetPlayerRef_SurvivalPlayer;              // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemByName_ReturnedCount;              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSI_Slot_C*>                    K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item_1;                         // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_Repair) == 0x000008, "Wrong alignment on JSI_Slot_C_Repair");
static_assert(sizeof(JSI_Slot_C_Repair) == 0x0000A8, "Wrong size on JSI_Slot_C_Repair");
static_assert(offsetof(JSI_Slot_C_Repair, Temp_int_Array_Index_Variable) == 0x000000, "Member 'JSI_Slot_C_Repair::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Repair, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'JSI_Slot_C_Repair::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Repair, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'JSI_Slot_C_Repair::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Repair, CallFunc_GetNewMaxDurability_ReturnValue) == 0x000010, "Member 'JSI_Slot_C_Repair::CallFunc_GetNewMaxDurability_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Repair, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'JSI_Slot_C_Repair::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Repair, CallFunc_GetHUD_ReturnValue) == 0x000020, "Member 'JSI_Slot_C_Repair::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Repair, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x000028, "Member 'JSI_Slot_C_Repair::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Repair, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'JSI_Slot_C_Repair::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Repair, Temp_int_Array_Index_Variable_1) == 0x00003C, "Member 'JSI_Slot_C_Repair::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Repair, Temp_int_Loop_Counter_Variable_1) == 0x000040, "Member 'JSI_Slot_C_Repair::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Repair, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'JSI_Slot_C_Repair::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Repair, CallFunc_GetPlayerController_ReturnValue_1) == 0x000048, "Member 'JSI_Slot_C_Repair::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Repair, K2Node_DynamicCast_AsBPI_Surv_PC) == 0x000050, "Member 'JSI_Slot_C_Repair::K2Node_DynamicCast_AsBPI_Surv_PC' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Repair, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'JSI_Slot_C_Repair::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Repair, CallFunc_GetPlayerRef_SurvivalPlayer) == 0x000068, "Member 'JSI_Slot_C_Repair::CallFunc_GetPlayerRef_SurvivalPlayer' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Repair, CallFunc_GetItemByName_ReturnedCount) == 0x000070, "Member 'JSI_Slot_C_Repair::CallFunc_GetItemByName_ReturnedCount' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Repair, K2Node_MakeArray_Array) == 0x000078, "Member 'JSI_Slot_C_Repair::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Repair, CallFunc_Array_Get_Item) == 0x000088, "Member 'JSI_Slot_C_Repair::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Repair, CallFunc_Array_Get_Item_1) == 0x000090, "Member 'JSI_Slot_C_Repair::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Repair, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000098, "Member 'JSI_Slot_C_Repair::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Repair, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000099, "Member 'JSI_Slot_C_Repair::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Repair, CallFunc_Array_Length_ReturnValue) == 0x00009C, "Member 'JSI_Slot_C_Repair::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Repair, CallFunc_Array_Length_ReturnValue_1) == 0x0000A0, "Member 'JSI_Slot_C_Repair::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Repair, CallFunc_Less_IntInt_ReturnValue) == 0x0000A4, "Member 'JSI_Slot_C_Repair::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Repair, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000A5, "Member 'JSI_Slot_C_Repair::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.ResizeSlot
// 0x0048 (0x0048 - 0x0000)
struct JSI_Slot_C_ResizeSlot final
{
public:
	struct FVector2D                              NewSize;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              SlotDimension;                                     // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Param_Size;                                        // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_ResizeSlot) == 0x000008, "Wrong alignment on JSI_Slot_C_ResizeSlot");
static_assert(sizeof(JSI_Slot_C_ResizeSlot) == 0x000048, "Wrong size on JSI_Slot_C_ResizeSlot");
static_assert(offsetof(JSI_Slot_C_ResizeSlot, NewSize) == 0x000000, "Member 'JSI_Slot_C_ResizeSlot::NewSize' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ResizeSlot, SlotDimension) == 0x000010, "Member 'JSI_Slot_C_ResizeSlot::SlotDimension' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ResizeSlot, Param_Size) == 0x000020, "Member 'JSI_Slot_C_ResizeSlot::Param_Size' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ResizeSlot, CallFunc_BreakVector2D_X) == 0x000030, "Member 'JSI_Slot_C_ResizeSlot::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ResizeSlot, CallFunc_BreakVector2D_Y) == 0x000038, "Member 'JSI_Slot_C_ResizeSlot::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ResizeSlot, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast) == 0x000040, "Member 'JSI_Slot_C_ResizeSlot::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ResizeSlot, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x000044, "Member 'JSI_Slot_C_ResizeSlot::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.RotateSlot
// 0x0002 (0x0002 - 0x0000)
struct JSI_Slot_C_RotateSlot final
{
public:
	bool                                          Rotate_;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FlipVector_;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_RotateSlot) == 0x000001, "Wrong alignment on JSI_Slot_C_RotateSlot");
static_assert(sizeof(JSI_Slot_C_RotateSlot) == 0x000002, "Wrong size on JSI_Slot_C_RotateSlot");
static_assert(offsetof(JSI_Slot_C_RotateSlot, Rotate_) == 0x000000, "Member 'JSI_Slot_C_RotateSlot::Rotate_' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_RotateSlot, FlipVector_) == 0x000001, "Member 'JSI_Slot_C_RotateSlot::FlipVector_' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.SequenceEvent__ENTRYPOINTJSI_Slot
// 0x0008 (0x0008 - 0x0000)
struct JSI_Slot_C_SequenceEvent__ENTRYPOINTJSI_Slot final
{
public:
	class UProgressBar*                           Param_ProgressBar_Component;                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_SequenceEvent__ENTRYPOINTJSI_Slot) == 0x000008, "Wrong alignment on JSI_Slot_C_SequenceEvent__ENTRYPOINTJSI_Slot");
static_assert(sizeof(JSI_Slot_C_SequenceEvent__ENTRYPOINTJSI_Slot) == 0x000008, "Wrong size on JSI_Slot_C_SequenceEvent__ENTRYPOINTJSI_Slot");
static_assert(offsetof(JSI_Slot_C_SequenceEvent__ENTRYPOINTJSI_Slot, Param_ProgressBar_Component) == 0x000000, "Member 'JSI_Slot_C_SequenceEvent__ENTRYPOINTJSI_Slot::Param_ProgressBar_Component' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.SequenceEvent__ENTRYPOINTJSI_Slot_0
// 0x0008 (0x0008 - 0x0000)
struct JSI_Slot_C_SequenceEvent__ENTRYPOINTJSI_Slot_0 final
{
public:
	class UProgressBar*                           Param_ProgressBar_Component;                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_SequenceEvent__ENTRYPOINTJSI_Slot_0) == 0x000008, "Wrong alignment on JSI_Slot_C_SequenceEvent__ENTRYPOINTJSI_Slot_0");
static_assert(sizeof(JSI_Slot_C_SequenceEvent__ENTRYPOINTJSI_Slot_0) == 0x000008, "Wrong size on JSI_Slot_C_SequenceEvent__ENTRYPOINTJSI_Slot_0");
static_assert(offsetof(JSI_Slot_C_SequenceEvent__ENTRYPOINTJSI_Slot_0, Param_ProgressBar_Component) == 0x000000, "Member 'JSI_Slot_C_SequenceEvent__ENTRYPOINTJSI_Slot_0::Param_ProgressBar_Component' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.SequenceEvent__ENTRYPOINTJSI_Slot_1
// 0x0008 (0x0008 - 0x0000)
struct JSI_Slot_C_SequenceEvent__ENTRYPOINTJSI_Slot_1 final
{
public:
	class UImage*                                 Param_Image_ShopAnim;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_SequenceEvent__ENTRYPOINTJSI_Slot_1) == 0x000008, "Wrong alignment on JSI_Slot_C_SequenceEvent__ENTRYPOINTJSI_Slot_1");
static_assert(sizeof(JSI_Slot_C_SequenceEvent__ENTRYPOINTJSI_Slot_1) == 0x000008, "Wrong size on JSI_Slot_C_SequenceEvent__ENTRYPOINTJSI_Slot_1");
static_assert(offsetof(JSI_Slot_C_SequenceEvent__ENTRYPOINTJSI_Slot_1, Param_Image_ShopAnim) == 0x000000, "Member 'JSI_Slot_C_SequenceEvent__ENTRYPOINTJSI_Slot_1::Param_Image_ShopAnim' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.SequenceEvent__ENTRYPOINTJSI_Slot_2
// 0x0008 (0x0008 - 0x0000)
struct JSI_Slot_C_SequenceEvent__ENTRYPOINTJSI_Slot_2 final
{
public:
	class UImage*                                 Param_Image_Hovered;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_SequenceEvent__ENTRYPOINTJSI_Slot_2) == 0x000008, "Wrong alignment on JSI_Slot_C_SequenceEvent__ENTRYPOINTJSI_Slot_2");
static_assert(sizeof(JSI_Slot_C_SequenceEvent__ENTRYPOINTJSI_Slot_2) == 0x000008, "Wrong size on JSI_Slot_C_SequenceEvent__ENTRYPOINTJSI_Slot_2");
static_assert(offsetof(JSI_Slot_C_SequenceEvent__ENTRYPOINTJSI_Slot_2, Param_Image_Hovered) == 0x000000, "Member 'JSI_Slot_C_SequenceEvent__ENTRYPOINTJSI_Slot_2::Param_Image_Hovered' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.SequenceEvent__ENTRYPOINTJSI_Slot_3
// 0x0008 (0x0008 - 0x0000)
struct JSI_Slot_C_SequenceEvent__ENTRYPOINTJSI_Slot_3 final
{
public:
	class UImage*                                 Param_Image_Hovered;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_SequenceEvent__ENTRYPOINTJSI_Slot_3) == 0x000008, "Wrong alignment on JSI_Slot_C_SequenceEvent__ENTRYPOINTJSI_Slot_3");
static_assert(sizeof(JSI_Slot_C_SequenceEvent__ENTRYPOINTJSI_Slot_3) == 0x000008, "Wrong size on JSI_Slot_C_SequenceEvent__ENTRYPOINTJSI_Slot_3");
static_assert(offsetof(JSI_Slot_C_SequenceEvent__ENTRYPOINTJSI_Slot_3, Param_Image_Hovered) == 0x000000, "Member 'JSI_Slot_C_SequenceEvent__ENTRYPOINTJSI_Slot_3::Param_Image_Hovered' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.Set Percent To Progress Bar
// 0x0030 (0x0030 - 0x0000)
struct JSI_Slot_C_Set_Percent_To_Progress_Bar final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_Set_Percent_To_Progress_Bar) == 0x000008, "Wrong alignment on JSI_Slot_C_Set_Percent_To_Progress_Bar");
static_assert(sizeof(JSI_Slot_C_Set_Percent_To_Progress_Bar) == 0x000030, "Wrong size on JSI_Slot_C_Set_Percent_To_Progress_Bar");
static_assert(offsetof(JSI_Slot_C_Set_Percent_To_Progress_Bar, ReturnValue) == 0x000000, "Member 'JSI_Slot_C_Set_Percent_To_Progress_Bar::ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Set_Percent_To_Progress_Bar, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000008, "Member 'JSI_Slot_C_Set_Percent_To_Progress_Bar::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Set_Percent_To_Progress_Bar, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'JSI_Slot_C_Set_Percent_To_Progress_Bar::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Set_Percent_To_Progress_Bar, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000018, "Member 'JSI_Slot_C_Set_Percent_To_Progress_Bar::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Set_Percent_To_Progress_Bar, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'JSI_Slot_C_Set_Percent_To_Progress_Bar::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Set_Percent_To_Progress_Bar, CallFunc_BooleanOR_ReturnValue) == 0x000028, "Member 'JSI_Slot_C_Set_Percent_To_Progress_Bar::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.SetActiveHighlight
// 0x0001 (0x0001 - 0x0000)
struct JSI_Slot_C_SetActiveHighlight final
{
public:
	bool                                          Param_Index;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_SetActiveHighlight) == 0x000001, "Wrong alignment on JSI_Slot_C_SetActiveHighlight");
static_assert(sizeof(JSI_Slot_C_SetActiveHighlight) == 0x000001, "Wrong size on JSI_Slot_C_SetActiveHighlight");
static_assert(offsetof(JSI_Slot_C_SetActiveHighlight, Param_Index) == 0x000000, "Member 'JSI_Slot_C_SetActiveHighlight::Param_Index' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.SetActiveSlot
// 0x0001 (0x0001 - 0x0000)
struct JSI_Slot_C_SetActiveSlot final
{
public:
	bool                                          Param_Active;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_SetActiveSlot) == 0x000001, "Wrong alignment on JSI_Slot_C_SetActiveSlot");
static_assert(sizeof(JSI_Slot_C_SetActiveSlot) == 0x000001, "Wrong size on JSI_Slot_C_SetActiveSlot");
static_assert(offsetof(JSI_Slot_C_SetActiveSlot, Param_Active) == 0x000000, "Member 'JSI_Slot_C_SetActiveSlot::Param_Active' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.SetBorderHidden
// 0x0001 (0x0001 - 0x0000)
struct JSI_Slot_C_SetBorderHidden final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_SetBorderHidden) == 0x000001, "Wrong alignment on JSI_Slot_C_SetBorderHidden");
static_assert(sizeof(JSI_Slot_C_SetBorderHidden) == 0x000001, "Wrong size on JSI_Slot_C_SetBorderHidden");
static_assert(offsetof(JSI_Slot_C_SetBorderHidden, Value) == 0x000000, "Member 'JSI_Slot_C_SetBorderHidden::Value' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.SetContentHidden
// 0x00B0 (0x00B0 - 0x0000)
struct JSI_Slot_C_SetContentHidden final
{
public:
	bool                                          bIsHidden;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC;                  // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CheckShopContainer_PageIndex;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ShopContainer                               CallFunc_CheckShopContainer_GetShopContainer;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_CheckShopContainer_ShopContainer;         // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMPInGameInventory_C*                   CallFunc_GetInventoryWidget_Widget;                // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCount_Count;                           // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC_1;                // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMPInGameInventory_C*                   CallFunc_GetInventoryWidget_Widget_1;              // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_83[0x5];                                       // 0x0083(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default;                             // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_1;                           // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_2;                           // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_3;                           // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x00A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x00A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_SetContentHidden) == 0x000008, "Wrong alignment on JSI_Slot_C_SetContentHidden");
static_assert(sizeof(JSI_Slot_C_SetContentHidden) == 0x0000B0, "Wrong size on JSI_Slot_C_SetContentHidden");
static_assert(offsetof(JSI_Slot_C_SetContentHidden, bIsHidden) == 0x000000, "Member 'JSI_Slot_C_SetContentHidden::bIsHidden' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetContentHidden, Temp_bool_Variable) == 0x000001, "Member 'JSI_Slot_C_SetContentHidden::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetContentHidden, Temp_bool_Variable_1) == 0x000002, "Member 'JSI_Slot_C_SetContentHidden::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetContentHidden, Temp_bool_Variable_2) == 0x000003, "Member 'JSI_Slot_C_SetContentHidden::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetContentHidden, Temp_bool_Variable_3) == 0x000004, "Member 'JSI_Slot_C_SetContentHidden::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetContentHidden, Temp_bool_Variable_4) == 0x000005, "Member 'JSI_Slot_C_SetContentHidden::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetContentHidden, Temp_bool_Variable_5) == 0x000006, "Member 'JSI_Slot_C_SetContentHidden::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetContentHidden, Temp_byte_Variable) == 0x000007, "Member 'JSI_Slot_C_SetContentHidden::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetContentHidden, Temp_byte_Variable_1) == 0x000008, "Member 'JSI_Slot_C_SetContentHidden::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetContentHidden, Temp_bool_Variable_6) == 0x000009, "Member 'JSI_Slot_C_SetContentHidden::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetContentHidden, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000A, "Member 'JSI_Slot_C_SetContentHidden::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetContentHidden, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'JSI_Slot_C_SetContentHidden::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetContentHidden, K2Node_DynamicCast_AsBPI_Surv_PC) == 0x000018, "Member 'JSI_Slot_C_SetContentHidden::K2Node_DynamicCast_AsBPI_Surv_PC' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetContentHidden, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'JSI_Slot_C_SetContentHidden::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetContentHidden, CallFunc_CheckShopContainer_PageIndex) == 0x00002C, "Member 'JSI_Slot_C_SetContentHidden::CallFunc_CheckShopContainer_PageIndex' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetContentHidden, CallFunc_CheckShopContainer_GetShopContainer) == 0x000030, "Member 'JSI_Slot_C_SetContentHidden::CallFunc_CheckShopContainer_GetShopContainer' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetContentHidden, CallFunc_CheckShopContainer_ShopContainer) == 0x000038, "Member 'JSI_Slot_C_SetContentHidden::CallFunc_CheckShopContainer_ShopContainer' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetContentHidden, CallFunc_GetInventoryWidget_Widget) == 0x000040, "Member 'JSI_Slot_C_SetContentHidden::CallFunc_GetInventoryWidget_Widget' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetContentHidden, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000048, "Member 'JSI_Slot_C_SetContentHidden::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetContentHidden, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000049, "Member 'JSI_Slot_C_SetContentHidden::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetContentHidden, CallFunc_BooleanAND_ReturnValue) == 0x00004A, "Member 'JSI_Slot_C_SetContentHidden::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetContentHidden, CallFunc_BooleanAND_ReturnValue_1) == 0x00004B, "Member 'JSI_Slot_C_SetContentHidden::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetContentHidden, CallFunc_GetPlayerController_ReturnValue_1) == 0x000050, "Member 'JSI_Slot_C_SetContentHidden::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetContentHidden, CallFunc_GetCount_Count) == 0x000058, "Member 'JSI_Slot_C_SetContentHidden::CallFunc_GetCount_Count' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetContentHidden, K2Node_DynamicCast_AsBPI_Surv_PC_1) == 0x000060, "Member 'JSI_Slot_C_SetContentHidden::K2Node_DynamicCast_AsBPI_Surv_PC_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetContentHidden, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'JSI_Slot_C_SetContentHidden::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetContentHidden, CallFunc_GetInventoryWidget_Widget_1) == 0x000078, "Member 'JSI_Slot_C_SetContentHidden::CallFunc_GetInventoryWidget_Widget_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetContentHidden, Temp_bool_Variable_7) == 0x000080, "Member 'JSI_Slot_C_SetContentHidden::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetContentHidden, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000081, "Member 'JSI_Slot_C_SetContentHidden::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetContentHidden, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000082, "Member 'JSI_Slot_C_SetContentHidden::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetContentHidden, K2Node_Select_Default) == 0x000088, "Member 'JSI_Slot_C_SetContentHidden::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetContentHidden, CallFunc_BooleanOR_ReturnValue) == 0x000090, "Member 'JSI_Slot_C_SetContentHidden::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetContentHidden, CallFunc_FTrunc_ReturnValue) == 0x000094, "Member 'JSI_Slot_C_SetContentHidden::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetContentHidden, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000098, "Member 'JSI_Slot_C_SetContentHidden::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetContentHidden, K2Node_Select_Default_1) == 0x00009C, "Member 'JSI_Slot_C_SetContentHidden::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetContentHidden, CallFunc_Greater_IntInt_ReturnValue) == 0x0000A0, "Member 'JSI_Slot_C_SetContentHidden::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetContentHidden, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000A1, "Member 'JSI_Slot_C_SetContentHidden::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetContentHidden, CallFunc_BooleanOR_ReturnValue_1) == 0x0000A2, "Member 'JSI_Slot_C_SetContentHidden::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetContentHidden, CallFunc_BooleanAND_ReturnValue_2) == 0x0000A3, "Member 'JSI_Slot_C_SetContentHidden::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetContentHidden, K2Node_Select_Default_2) == 0x0000A4, "Member 'JSI_Slot_C_SetContentHidden::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetContentHidden, K2Node_Select_Default_3) == 0x0000A5, "Member 'JSI_Slot_C_SetContentHidden::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetContentHidden, CallFunc_BooleanAND_ReturnValue_3) == 0x0000A6, "Member 'JSI_Slot_C_SetContentHidden::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetContentHidden, CallFunc_BooleanAND_ReturnValue_4) == 0x0000A7, "Member 'JSI_Slot_C_SetContentHidden::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetContentHidden, CallFunc_BooleanOR_ReturnValue_2) == 0x0000A8, "Member 'JSI_Slot_C_SetContentHidden::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetContentHidden, K2Node_Select_Default_4) == 0x0000A9, "Member 'JSI_Slot_C_SetContentHidden::K2Node_Select_Default_4' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.SetDismantleEnabled
// 0x0018 (0x0018 - 0x0000)
struct JSI_Slot_C_SetDismantleEnabled final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_SetDismantleEnabled) == 0x000008, "Wrong alignment on JSI_Slot_C_SetDismantleEnabled");
static_assert(sizeof(JSI_Slot_C_SetDismantleEnabled) == 0x000018, "Wrong size on JSI_Slot_C_SetDismantleEnabled");
static_assert(offsetof(JSI_Slot_C_SetDismantleEnabled, Enable) == 0x000000, "Member 'JSI_Slot_C_SetDismantleEnabled::Enable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetDismantleEnabled, Temp_bool_Variable) == 0x000001, "Member 'JSI_Slot_C_SetDismantleEnabled::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetDismantleEnabled, Temp_byte_Variable) == 0x000002, "Member 'JSI_Slot_C_SetDismantleEnabled::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetDismantleEnabled, Temp_byte_Variable_1) == 0x000003, "Member 'JSI_Slot_C_SetDismantleEnabled::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetDismantleEnabled, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'JSI_Slot_C_SetDismantleEnabled::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetDismantleEnabled, K2Node_Select_Default) == 0x000010, "Member 'JSI_Slot_C_SetDismantleEnabled::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetDismantleEnabled, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x000014, "Member 'JSI_Slot_C_SetDismantleEnabled::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.SetDurability
// 0x0010 (0x0010 - 0x0000)
struct JSI_Slot_C_SetDurability final
{
public:
	double                                        NewDurability;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetNewMaxDurability_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_SetDurability) == 0x000008, "Wrong alignment on JSI_Slot_C_SetDurability");
static_assert(sizeof(JSI_Slot_C_SetDurability) == 0x000010, "Wrong size on JSI_Slot_C_SetDurability");
static_assert(offsetof(JSI_Slot_C_SetDurability, NewDurability) == 0x000000, "Member 'JSI_Slot_C_SetDurability::NewDurability' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetDurability, CallFunc_GetNewMaxDurability_ReturnValue) == 0x000008, "Member 'JSI_Slot_C_SetDurability::CallFunc_GetNewMaxDurability_ReturnValue' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.SetFillValue
// 0x0008 (0x0008 - 0x0000)
struct JSI_Slot_C_SetFillValue final
{
public:
	double                                        Param_Values;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_SetFillValue) == 0x000008, "Wrong alignment on JSI_Slot_C_SetFillValue");
static_assert(sizeof(JSI_Slot_C_SetFillValue) == 0x000008, "Wrong size on JSI_Slot_C_SetFillValue");
static_assert(offsetof(JSI_Slot_C_SetFillValue, Param_Values) == 0x000000, "Member 'JSI_Slot_C_SetFillValue::Param_Values' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.SetHighlight
// 0x001C (0x001C - 0x0000)
struct JSI_Slot_C_SetHighlight final
{
public:
	bool                                          Highlight_;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            HighlightColor;                                    // 0x0004(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Drop;                                              // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_SetHighlight) == 0x000004, "Wrong alignment on JSI_Slot_C_SetHighlight");
static_assert(sizeof(JSI_Slot_C_SetHighlight) == 0x00001C, "Wrong size on JSI_Slot_C_SetHighlight");
static_assert(offsetof(JSI_Slot_C_SetHighlight, Highlight_) == 0x000000, "Member 'JSI_Slot_C_SetHighlight::Highlight_' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetHighlight, HighlightColor) == 0x000004, "Member 'JSI_Slot_C_SetHighlight::HighlightColor' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetHighlight, Drop) == 0x000018, "Member 'JSI_Slot_C_SetHighlight::Drop' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.SetHostedSlot
// 0x0008 (0x0008 - 0x0000)
struct JSI_Slot_C_SetHostedSlot final
{
public:
	class UJSI_Slot_C*                            HostingItem;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_SetHostedSlot) == 0x000008, "Wrong alignment on JSI_Slot_C_SetHostedSlot");
static_assert(sizeof(JSI_Slot_C_SetHostedSlot) == 0x000008, "Wrong size on JSI_Slot_C_SetHostedSlot");
static_assert(offsetof(JSI_Slot_C_SetHostedSlot, HostingItem) == 0x000000, "Member 'JSI_Slot_C_SetHostedSlot::HostingItem' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.SetHostingArray
// 0x0010 (0x0010 - 0x0000)
struct JSI_Slot_C_SetHostingArray final
{
public:
	TArray<class UJSI_Slot_C*>                    Param_ArrayOfHostingItem;                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(JSI_Slot_C_SetHostingArray) == 0x000008, "Wrong alignment on JSI_Slot_C_SetHostingArray");
static_assert(sizeof(JSI_Slot_C_SetHostingArray) == 0x000010, "Wrong size on JSI_Slot_C_SetHostingArray");
static_assert(offsetof(JSI_Slot_C_SetHostingArray, Param_ArrayOfHostingItem) == 0x000000, "Member 'JSI_Slot_C_SetHostingArray::Param_ArrayOfHostingItem' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.SetImageDefaultBackground
// 0x00E0 (0x00E0 - 0x0000)
struct JSI_Slot_C_SetImageDefaultBackground final
{
public:
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0000(0x00D0)()
	struct FDeprecateSlateVector2D                K2Node_MakeStruct_ImageSize_ImplicitCast;          // 0x00D0(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_SetImageDefaultBackground) == 0x000010, "Wrong alignment on JSI_Slot_C_SetImageDefaultBackground");
static_assert(sizeof(JSI_Slot_C_SetImageDefaultBackground) == 0x0000E0, "Wrong size on JSI_Slot_C_SetImageDefaultBackground");
static_assert(offsetof(JSI_Slot_C_SetImageDefaultBackground, K2Node_MakeStruct_SlateBrush) == 0x000000, "Member 'JSI_Slot_C_SetImageDefaultBackground::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetImageDefaultBackground, K2Node_MakeStruct_ImageSize_ImplicitCast) == 0x0000D0, "Member 'JSI_Slot_C_SetImageDefaultBackground::K2Node_MakeStruct_ImageSize_ImplicitCast' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.SetOverlaySlot
// 0x0008 (0x0008 - 0x0000)
struct JSI_Slot_C_SetOverlaySlot final
{
public:
	class UOverlaySlot*                           Param_OverlayRef;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_SetOverlaySlot) == 0x000008, "Wrong alignment on JSI_Slot_C_SetOverlaySlot");
static_assert(sizeof(JSI_Slot_C_SetOverlaySlot) == 0x000008, "Wrong size on JSI_Slot_C_SetOverlaySlot");
static_assert(offsetof(JSI_Slot_C_SetOverlaySlot, Param_OverlayRef) == 0x000000, "Member 'JSI_Slot_C_SetOverlaySlot::Param_OverlayRef' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.SetRenderIcon
// 0x00A0 (0x00A0 - 0x0000)
struct JSI_Slot_C_SetRenderIcon final
{
public:
	bool                                          bForced;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        IconBaseSize;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RenderTargetResolutionMultiplier;                  // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0020(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_IconManufacturer_C*                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_Get_Weapon_Icon_Image;                    // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_SetRenderIcon) == 0x000010, "Wrong alignment on JSI_Slot_C_SetRenderIcon");
static_assert(sizeof(JSI_Slot_C_SetRenderIcon) == 0x0000A0, "Wrong size on JSI_Slot_C_SetRenderIcon");
static_assert(offsetof(JSI_Slot_C_SetRenderIcon, bForced) == 0x000000, "Member 'JSI_Slot_C_SetRenderIcon::bForced' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetRenderIcon, IconBaseSize) == 0x000008, "Member 'JSI_Slot_C_SetRenderIcon::IconBaseSize' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetRenderIcon, RenderTargetResolutionMultiplier) == 0x000010, "Member 'JSI_Slot_C_SetRenderIcon::RenderTargetResolutionMultiplier' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetRenderIcon, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'JSI_Slot_C_SetRenderIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetRenderIcon, CallFunc_MakeTransform_ReturnValue) == 0x000020, "Member 'JSI_Slot_C_SetRenderIcon::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetRenderIcon, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000080, "Member 'JSI_Slot_C_SetRenderIcon::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetRenderIcon, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000088, "Member 'JSI_Slot_C_SetRenderIcon::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetRenderIcon, CallFunc_FinishSpawningActor_ReturnValue) == 0x000090, "Member 'JSI_Slot_C_SetRenderIcon::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetRenderIcon, CallFunc_Get_Weapon_Icon_Image) == 0x000098, "Member 'JSI_Slot_C_SetRenderIcon::CallFunc_Get_Weapon_Icon_Image' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.SetRepair
// 0x0088 (0x0088 - 0x0000)
struct JSI_Slot_C_SetRepair final
{
public:
	double                                        RepairPricePerDurabilityPoint;                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC;                  // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      CallFunc_GetPlayerRef_SurvivalPlayer;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemCountByName_ReturnedCount;         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC_1;                // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMPInGameInventory_C*                   CallFunc_GetInventoryWidget_Widget;                // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_SetRepair) == 0x000008, "Wrong alignment on JSI_Slot_C_SetRepair");
static_assert(sizeof(JSI_Slot_C_SetRepair) == 0x000088, "Wrong size on JSI_Slot_C_SetRepair");
static_assert(offsetof(JSI_Slot_C_SetRepair, RepairPricePerDurabilityPoint) == 0x000000, "Member 'JSI_Slot_C_SetRepair::RepairPricePerDurabilityPoint' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetRepair, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'JSI_Slot_C_SetRepair::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetRepair, K2Node_DynamicCast_AsBPI_Surv_PC) == 0x000010, "Member 'JSI_Slot_C_SetRepair::K2Node_DynamicCast_AsBPI_Surv_PC' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetRepair, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'JSI_Slot_C_SetRepair::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetRepair, CallFunc_GetPlayerRef_SurvivalPlayer) == 0x000028, "Member 'JSI_Slot_C_SetRepair::CallFunc_GetPlayerRef_SurvivalPlayer' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetRepair, CallFunc_GetItemCountByName_ReturnedCount) == 0x000030, "Member 'JSI_Slot_C_SetRepair::CallFunc_GetItemCountByName_ReturnedCount' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetRepair, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000034, "Member 'JSI_Slot_C_SetRepair::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetRepair, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000035, "Member 'JSI_Slot_C_SetRepair::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetRepair, CallFunc_SelectFloat_ReturnValue) == 0x000038, "Member 'JSI_Slot_C_SetRepair::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetRepair, CallFunc_GetPlayerController_ReturnValue_1) == 0x000040, "Member 'JSI_Slot_C_SetRepair::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetRepair, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000048, "Member 'JSI_Slot_C_SetRepair::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetRepair, K2Node_DynamicCast_AsBPI_Surv_PC_1) == 0x000050, "Member 'JSI_Slot_C_SetRepair::K2Node_DynamicCast_AsBPI_Surv_PC_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetRepair, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'JSI_Slot_C_SetRepair::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetRepair, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000068, "Member 'JSI_Slot_C_SetRepair::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetRepair, CallFunc_GetInventoryWidget_Widget) == 0x000070, "Member 'JSI_Slot_C_SetRepair::CallFunc_GetInventoryWidget_Widget' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetRepair, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000078, "Member 'JSI_Slot_C_SetRepair::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetRepair, CallFunc_FTrunc_ReturnValue) == 0x000080, "Member 'JSI_Slot_C_SetRepair::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetRepair, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000084, "Member 'JSI_Slot_C_SetRepair::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.SetSelected
// 0x0001 (0x0001 - 0x0000)
struct JSI_Slot_C_SetSelected final
{
public:
	bool                                          Selected;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_SetSelected) == 0x000001, "Wrong alignment on JSI_Slot_C_SetSelected");
static_assert(sizeof(JSI_Slot_C_SetSelected) == 0x000001, "Wrong size on JSI_Slot_C_SetSelected");
static_assert(offsetof(JSI_Slot_C_SetSelected, Selected) == 0x000000, "Member 'JSI_Slot_C_SetSelected::Selected' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.SetSlotBrushes
// 0x0210 (0x0210 - 0x0000)
struct JSI_Slot_C_SetSlotBrushes final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Calculate_Size_With_Ratio_Size;           // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_1;         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0030(0x00D0)()
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0104(0x0014)()
	struct FSlateColor                            K2Node_Select_Default;                             // 0x0118(0x0014)()
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_1;                    // 0x0130(0x00D0)()
	struct FDeprecateSlateVector2D                K2Node_MakeStruct_ImageSize_ImplicitCast;          // 0x0200(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FDeprecateSlateVector2D                K2Node_MakeStruct_ImageSize_ImplicitCast_1;        // 0x0208(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_SetSlotBrushes) == 0x000010, "Wrong alignment on JSI_Slot_C_SetSlotBrushes");
static_assert(sizeof(JSI_Slot_C_SetSlotBrushes) == 0x000210, "Wrong size on JSI_Slot_C_SetSlotBrushes");
static_assert(offsetof(JSI_Slot_C_SetSlotBrushes, Temp_bool_Variable) == 0x000000, "Member 'JSI_Slot_C_SetSlotBrushes::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetSlotBrushes, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'JSI_Slot_C_SetSlotBrushes::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetSlotBrushes, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000008, "Member 'JSI_Slot_C_SetSlotBrushes::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetSlotBrushes, CallFunc_Calculate_Size_With_Ratio_Size) == 0x000010, "Member 'JSI_Slot_C_SetSlotBrushes::CallFunc_Calculate_Size_With_Ratio_Size' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetSlotBrushes, CallFunc_LoadAsset_Blocking_ReturnValue_1) == 0x000020, "Member 'JSI_Slot_C_SetSlotBrushes::CallFunc_LoadAsset_Blocking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetSlotBrushes, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'JSI_Slot_C_SetSlotBrushes::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetSlotBrushes, K2Node_MakeStruct_SlateBrush) == 0x000030, "Member 'JSI_Slot_C_SetSlotBrushes::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetSlotBrushes, CallFunc_Not_PreBool_ReturnValue_1) == 0x000100, "Member 'JSI_Slot_C_SetSlotBrushes::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetSlotBrushes, K2Node_MakeStruct_SlateColor) == 0x000104, "Member 'JSI_Slot_C_SetSlotBrushes::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetSlotBrushes, K2Node_Select_Default) == 0x000118, "Member 'JSI_Slot_C_SetSlotBrushes::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetSlotBrushes, K2Node_MakeStruct_SlateBrush_1) == 0x000130, "Member 'JSI_Slot_C_SetSlotBrushes::K2Node_MakeStruct_SlateBrush_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetSlotBrushes, K2Node_MakeStruct_ImageSize_ImplicitCast) == 0x000200, "Member 'JSI_Slot_C_SetSlotBrushes::K2Node_MakeStruct_ImageSize_ImplicitCast' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetSlotBrushes, K2Node_MakeStruct_ImageSize_ImplicitCast_1) == 0x000208, "Member 'JSI_Slot_C_SetSlotBrushes::K2Node_MakeStruct_ImageSize_ImplicitCast_1' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.SetSortHighlight
// 0x0001 (0x0001 - 0x0000)
struct JSI_Slot_C_SetSortHighlight final
{
public:
	bool                                          IsFaded;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_SetSortHighlight) == 0x000001, "Wrong alignment on JSI_Slot_C_SetSortHighlight");
static_assert(sizeof(JSI_Slot_C_SetSortHighlight) == 0x000001, "Wrong size on JSI_Slot_C_SetSortHighlight");
static_assert(offsetof(JSI_Slot_C_SetSortHighlight, IsFaded) == 0x000000, "Member 'JSI_Slot_C_SetSortHighlight::IsFaded' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.SetSpecialContainer
// 0x0008 (0x0008 - 0x0000)
struct JSI_Slot_C_SetSpecialContainer final
{
public:
	class UUserWidget*                            SpecialContainerRef;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_SetSpecialContainer) == 0x000008, "Wrong alignment on JSI_Slot_C_SetSpecialContainer");
static_assert(sizeof(JSI_Slot_C_SetSpecialContainer) == 0x000008, "Wrong size on JSI_Slot_C_SetSpecialContainer");
static_assert(offsetof(JSI_Slot_C_SetSpecialContainer, SpecialContainerRef) == 0x000000, "Member 'JSI_Slot_C_SetSpecialContainer::SpecialContainerRef' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.SetUniqueID
// 0x0008 (0x0008 - 0x0000)
struct JSI_Slot_C_SetUniqueID final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         UniqueId;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_SetUniqueID) == 0x000004, "Wrong alignment on JSI_Slot_C_SetUniqueID");
static_assert(sizeof(JSI_Slot_C_SetUniqueID) == 0x000008, "Wrong size on JSI_Slot_C_SetUniqueID");
static_assert(offsetof(JSI_Slot_C_SetUniqueID, ID) == 0x000000, "Member 'JSI_Slot_C_SetUniqueID::ID' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SetUniqueID, UniqueId) == 0x000004, "Member 'JSI_Slot_C_SetUniqueID::UniqueId' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.ShopAnimFinished
// 0x0008 (0x0008 - 0x0000)
struct JSI_Slot_C_ShopAnimFinished final
{
public:
	class UImage*                                 Param_Image_ShopAnim;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_ShopAnimFinished) == 0x000008, "Wrong alignment on JSI_Slot_C_ShopAnimFinished");
static_assert(sizeof(JSI_Slot_C_ShopAnimFinished) == 0x000008, "Wrong size on JSI_Slot_C_ShopAnimFinished");
static_assert(offsetof(JSI_Slot_C_ShopAnimFinished, Param_Image_ShopAnim) == 0x000000, "Member 'JSI_Slot_C_ShopAnimFinished::Param_Image_ShopAnim' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.ToggleHighlight
// 0x0310 (0x0310 - 0x0000)
struct JSI_Slot_C_ToggleHighlight final
{
public:
	bool                                          DragEnter;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDragDropOperation*                     Operation;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperSprite*                           Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           Temp_object_Variable_1;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_1;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0xF];                                       // 0x0051(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0060(0x00D0)()
	class UPaperSprite*                           K2Node_Select_Default;                             // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_138[0x8];                                      // 0x0138(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_1;                    // 0x0140(0x00D0)()
	struct FSlateBrush                            K2Node_Select_Default_1;                           // 0x0210(0x00D0)(ConstParm)
	double                                        K2Node_Select_Default_2;                           // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_3;                           // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F1[0x3];                                      // 0x02F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDeprecateSlateVector2D                K2Node_MakeStruct_ImageSize_ImplicitCast;          // 0x02F4(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FDeprecateSlateVector2D                K2Node_MakeStruct_ImageSize_ImplicitCast_1;        // 0x02FC(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_ToggleHighlight) == 0x000010, "Wrong alignment on JSI_Slot_C_ToggleHighlight");
static_assert(sizeof(JSI_Slot_C_ToggleHighlight) == 0x000310, "Wrong size on JSI_Slot_C_ToggleHighlight");
static_assert(offsetof(JSI_Slot_C_ToggleHighlight, DragEnter) == 0x000000, "Member 'JSI_Slot_C_ToggleHighlight::DragEnter' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ToggleHighlight, Operation) == 0x000008, "Member 'JSI_Slot_C_ToggleHighlight::Operation' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ToggleHighlight, Temp_bool_Variable) == 0x000010, "Member 'JSI_Slot_C_ToggleHighlight::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ToggleHighlight, Temp_object_Variable) == 0x000018, "Member 'JSI_Slot_C_ToggleHighlight::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ToggleHighlight, Temp_object_Variable_1) == 0x000020, "Member 'JSI_Slot_C_ToggleHighlight::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ToggleHighlight, Temp_bool_Variable_1) == 0x000028, "Member 'JSI_Slot_C_ToggleHighlight::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ToggleHighlight, Temp_real_Variable) == 0x000030, "Member 'JSI_Slot_C_ToggleHighlight::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ToggleHighlight, Temp_bool_Variable_2) == 0x000038, "Member 'JSI_Slot_C_ToggleHighlight::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ToggleHighlight, Temp_real_Variable_1) == 0x000040, "Member 'JSI_Slot_C_ToggleHighlight::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ToggleHighlight, Temp_real_Variable_2) == 0x000048, "Member 'JSI_Slot_C_ToggleHighlight::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ToggleHighlight, Temp_bool_Variable_3) == 0x000050, "Member 'JSI_Slot_C_ToggleHighlight::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ToggleHighlight, K2Node_MakeStruct_SlateBrush) == 0x000060, "Member 'JSI_Slot_C_ToggleHighlight::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ToggleHighlight, K2Node_Select_Default) == 0x000130, "Member 'JSI_Slot_C_ToggleHighlight::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ToggleHighlight, K2Node_MakeStruct_SlateBrush_1) == 0x000140, "Member 'JSI_Slot_C_ToggleHighlight::K2Node_MakeStruct_SlateBrush_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ToggleHighlight, K2Node_Select_Default_1) == 0x000210, "Member 'JSI_Slot_C_ToggleHighlight::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ToggleHighlight, K2Node_Select_Default_2) == 0x0002E0, "Member 'JSI_Slot_C_ToggleHighlight::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ToggleHighlight, K2Node_Select_Default_3) == 0x0002E8, "Member 'JSI_Slot_C_ToggleHighlight::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ToggleHighlight, CallFunc_Not_PreBool_ReturnValue) == 0x0002F0, "Member 'JSI_Slot_C_ToggleHighlight::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ToggleHighlight, K2Node_MakeStruct_ImageSize_ImplicitCast) == 0x0002F4, "Member 'JSI_Slot_C_ToggleHighlight::K2Node_MakeStruct_ImageSize_ImplicitCast' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ToggleHighlight, K2Node_MakeStruct_ImageSize_ImplicitCast_1) == 0x0002FC, "Member 'JSI_Slot_C_ToggleHighlight::K2Node_MakeStruct_ImageSize_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_ToggleHighlight, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x000304, "Member 'JSI_Slot_C_ToggleHighlight::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.UnhandledGetTargetContainer
// 0x0030 (0x0030 - 0x0000)
struct JSI_Slot_C_UnhandledGetTargetContainer final
{
public:
	class UJSIContainer_C*                        Container1;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        Container2;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        Target;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_UnhandledGetTargetContainer) == 0x000008, "Wrong alignment on JSI_Slot_C_UnhandledGetTargetContainer");
static_assert(sizeof(JSI_Slot_C_UnhandledGetTargetContainer) == 0x000030, "Wrong size on JSI_Slot_C_UnhandledGetTargetContainer");
static_assert(offsetof(JSI_Slot_C_UnhandledGetTargetContainer, Container1) == 0x000000, "Member 'JSI_Slot_C_UnhandledGetTargetContainer::Container1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UnhandledGetTargetContainer, Container2) == 0x000008, "Member 'JSI_Slot_C_UnhandledGetTargetContainer::Container2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UnhandledGetTargetContainer, Target) == 0x000010, "Member 'JSI_Slot_C_UnhandledGetTargetContainer::Target' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UnhandledGetTargetContainer, Temp_bool_Variable) == 0x000018, "Member 'JSI_Slot_C_UnhandledGetTargetContainer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UnhandledGetTargetContainer, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'JSI_Slot_C_UnhandledGetTargetContainer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UnhandledGetTargetContainer, CallFunc_IsValid_ReturnValue_1) == 0x00001A, "Member 'JSI_Slot_C_UnhandledGetTargetContainer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UnhandledGetTargetContainer, K2Node_Select_Default) == 0x000020, "Member 'JSI_Slot_C_UnhandledGetTargetContainer::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UnhandledGetTargetContainer, CallFunc_BooleanAND_ReturnValue) == 0x000028, "Member 'JSI_Slot_C_UnhandledGetTargetContainer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.Update Slot Info
// 0x0160 (0x0160 - 0x0000)
struct JSI_Slot_C_Update_Slot_Info final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC;                  // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMPInGameInventory_C*                   CallFunc_GetInventoryWidget_Widget;                // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CountOut_OutInt;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0058(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A8(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F8(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0108(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0118(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0130(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x014B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default_1;                           // 0x0150(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x015A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x015B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x015E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_Update_Slot_Info) == 0x000008, "Wrong alignment on JSI_Slot_C_Update_Slot_Info");
static_assert(sizeof(JSI_Slot_C_Update_Slot_Info) == 0x000160, "Wrong size on JSI_Slot_C_Update_Slot_Info");
static_assert(offsetof(JSI_Slot_C_Update_Slot_Info, Temp_bool_Variable) == 0x000000, "Member 'JSI_Slot_C_Update_Slot_Info::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Update_Slot_Info, Temp_byte_Variable) == 0x000001, "Member 'JSI_Slot_C_Update_Slot_Info::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Update_Slot_Info, Temp_byte_Variable_1) == 0x000002, "Member 'JSI_Slot_C_Update_Slot_Info::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Update_Slot_Info, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000003, "Member 'JSI_Slot_C_Update_Slot_Info::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Update_Slot_Info, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'JSI_Slot_C_Update_Slot_Info::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Update_Slot_Info, K2Node_DynamicCast_AsBPI_Surv_PC) == 0x000010, "Member 'JSI_Slot_C_Update_Slot_Info::K2Node_DynamicCast_AsBPI_Surv_PC' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Update_Slot_Info, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'JSI_Slot_C_Update_Slot_Info::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Update_Slot_Info, CallFunc_GetInventoryWidget_Widget) == 0x000028, "Member 'JSI_Slot_C_Update_Slot_Info::CallFunc_GetInventoryWidget_Widget' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Update_Slot_Info, Temp_bool_Variable_1) == 0x000030, "Member 'JSI_Slot_C_Update_Slot_Info::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Update_Slot_Info, CallFunc_BooleanAND_ReturnValue) == 0x000031, "Member 'JSI_Slot_C_Update_Slot_Info::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Update_Slot_Info, CallFunc_FTrunc_ReturnValue) == 0x000034, "Member 'JSI_Slot_C_Update_Slot_Info::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Update_Slot_Info, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000038, "Member 'JSI_Slot_C_Update_Slot_Info::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Update_Slot_Info, CallFunc_CountOut_OutInt) == 0x00003C, "Member 'JSI_Slot_C_Update_Slot_Info::CallFunc_CountOut_OutInt' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Update_Slot_Info, K2Node_Select_Default) == 0x000040, "Member 'JSI_Slot_C_Update_Slot_Info::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Update_Slot_Info, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000048, "Member 'JSI_Slot_C_Update_Slot_Info::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Update_Slot_Info, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000050, "Member 'JSI_Slot_C_Update_Slot_Info::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Update_Slot_Info, K2Node_MakeStruct_FormatArgumentData) == 0x000058, "Member 'JSI_Slot_C_Update_Slot_Info::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Update_Slot_Info, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A8, "Member 'JSI_Slot_C_Update_Slot_Info::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Update_Slot_Info, K2Node_MakeArray_Array) == 0x0000F8, "Member 'JSI_Slot_C_Update_Slot_Info::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Update_Slot_Info, K2Node_MakeArray_Array_1) == 0x000108, "Member 'JSI_Slot_C_Update_Slot_Info::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Update_Slot_Info, CallFunc_Format_ReturnValue) == 0x000118, "Member 'JSI_Slot_C_Update_Slot_Info::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Update_Slot_Info, CallFunc_Format_ReturnValue_1) == 0x000130, "Member 'JSI_Slot_C_Update_Slot_Info::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Update_Slot_Info, CallFunc_Greater_IntInt_ReturnValue) == 0x000148, "Member 'JSI_Slot_C_Update_Slot_Info::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Update_Slot_Info, Temp_bool_Variable_2) == 0x000149, "Member 'JSI_Slot_C_Update_Slot_Info::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Update_Slot_Info, CallFunc_BooleanAND_ReturnValue_1) == 0x00014A, "Member 'JSI_Slot_C_Update_Slot_Info::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Update_Slot_Info, CallFunc_BooleanAND_ReturnValue_2) == 0x00014B, "Member 'JSI_Slot_C_Update_Slot_Info::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Update_Slot_Info, K2Node_Select_Default_1) == 0x000150, "Member 'JSI_Slot_C_Update_Slot_Info::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Update_Slot_Info, CallFunc_BooleanOR_ReturnValue) == 0x000158, "Member 'JSI_Slot_C_Update_Slot_Info::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Update_Slot_Info, K2Node_Select_Default_2) == 0x000159, "Member 'JSI_Slot_C_Update_Slot_Info::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Update_Slot_Info, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00015A, "Member 'JSI_Slot_C_Update_Slot_Info::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Update_Slot_Info, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00015B, "Member 'JSI_Slot_C_Update_Slot_Info::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Update_Slot_Info, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x00015C, "Member 'JSI_Slot_C_Update_Slot_Info::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Update_Slot_Info, CallFunc_BooleanOR_ReturnValue_1) == 0x00015D, "Member 'JSI_Slot_C_Update_Slot_Info::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_Update_Slot_Info, CallFunc_BooleanOR_ReturnValue_2) == 0x00015E, "Member 'JSI_Slot_C_Update_Slot_Info::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.UpdateCount
// 0x01B0 (0x01B0 - 0x0000)
struct JSI_Slot_C_UpdateCount final
{
public:
	int32                                         NewCount;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        NewDurability;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WithDurabilty;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Count;                                             // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC;                  // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMPInGameInventory_C*                   CallFunc_GetInventoryWidget_Widget;                // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default;                             // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CountIn_OutInt;                           // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CountOut_OutInt;                          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0088(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F0(0x0018)()
	int32                                         K2Node_Select_Default_1;                           // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0120(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0178(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0190(0x0018)()
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x01AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x01AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x01AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_UpdateCount) == 0x000008, "Wrong alignment on JSI_Slot_C_UpdateCount");
static_assert(sizeof(JSI_Slot_C_UpdateCount) == 0x0001B0, "Wrong size on JSI_Slot_C_UpdateCount");
static_assert(offsetof(JSI_Slot_C_UpdateCount, NewCount) == 0x000000, "Member 'JSI_Slot_C_UpdateCount::NewCount' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateCount, NewDurability) == 0x000008, "Member 'JSI_Slot_C_UpdateCount::NewDurability' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateCount, WithDurabilty) == 0x000010, "Member 'JSI_Slot_C_UpdateCount::WithDurabilty' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateCount, Count) == 0x000014, "Member 'JSI_Slot_C_UpdateCount::Count' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateCount, Temp_bool_Variable) == 0x000018, "Member 'JSI_Slot_C_UpdateCount::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateCount, Temp_byte_Variable) == 0x000019, "Member 'JSI_Slot_C_UpdateCount::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateCount, Temp_byte_Variable_1) == 0x00001A, "Member 'JSI_Slot_C_UpdateCount::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateCount, CallFunc_GetPlayerController_ReturnValue) == 0x000020, "Member 'JSI_Slot_C_UpdateCount::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateCount, K2Node_DynamicCast_AsBPI_Surv_PC) == 0x000028, "Member 'JSI_Slot_C_UpdateCount::K2Node_DynamicCast_AsBPI_Surv_PC' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateCount, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'JSI_Slot_C_UpdateCount::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateCount, CallFunc_GetInventoryWidget_Widget) == 0x000040, "Member 'JSI_Slot_C_UpdateCount::CallFunc_GetInventoryWidget_Widget' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateCount, Temp_bool_Variable_1) == 0x000048, "Member 'JSI_Slot_C_UpdateCount::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateCount, Temp_bool_Variable_2) == 0x000049, "Member 'JSI_Slot_C_UpdateCount::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateCount, K2Node_Select_Default) == 0x000050, "Member 'JSI_Slot_C_UpdateCount::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateCount, CallFunc_SelectInt_ReturnValue) == 0x000058, "Member 'JSI_Slot_C_UpdateCount::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateCount, CallFunc_SelectFloat_ReturnValue) == 0x000060, "Member 'JSI_Slot_C_UpdateCount::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateCount, CallFunc_CountIn_OutInt) == 0x000068, "Member 'JSI_Slot_C_UpdateCount::CallFunc_CountIn_OutInt' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateCount, CallFunc_CountOut_OutInt) == 0x00006C, "Member 'JSI_Slot_C_UpdateCount::CallFunc_CountOut_OutInt' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateCount, CallFunc_FTrunc_ReturnValue) == 0x000070, "Member 'JSI_Slot_C_UpdateCount::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateCount, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000078, "Member 'JSI_Slot_C_UpdateCount::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateCount, CallFunc_Greater_IntInt_ReturnValue) == 0x000080, "Member 'JSI_Slot_C_UpdateCount::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateCount, K2Node_MakeStruct_FormatArgumentData) == 0x000088, "Member 'JSI_Slot_C_UpdateCount::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateCount, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000D8, "Member 'JSI_Slot_C_UpdateCount::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateCount, K2Node_MakeArray_Array) == 0x0000E0, "Member 'JSI_Slot_C_UpdateCount::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateCount, CallFunc_Format_ReturnValue) == 0x0000F0, "Member 'JSI_Slot_C_UpdateCount::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateCount, K2Node_Select_Default_1) == 0x000108, "Member 'JSI_Slot_C_UpdateCount::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateCount, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000110, "Member 'JSI_Slot_C_UpdateCount::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateCount, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000118, "Member 'JSI_Slot_C_UpdateCount::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateCount, K2Node_MakeStruct_FormatArgumentData_1) == 0x000120, "Member 'JSI_Slot_C_UpdateCount::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateCount, CallFunc_BooleanAND_ReturnValue) == 0x000170, "Member 'JSI_Slot_C_UpdateCount::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateCount, K2Node_MakeArray_Array_1) == 0x000178, "Member 'JSI_Slot_C_UpdateCount::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateCount, CallFunc_BooleanAND_ReturnValue_1) == 0x000188, "Member 'JSI_Slot_C_UpdateCount::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateCount, CallFunc_Format_ReturnValue_1) == 0x000190, "Member 'JSI_Slot_C_UpdateCount::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateCount, CallFunc_BooleanOR_ReturnValue) == 0x0001A8, "Member 'JSI_Slot_C_UpdateCount::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateCount, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0001A9, "Member 'JSI_Slot_C_UpdateCount::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateCount, K2Node_Select_Default_2) == 0x0001AA, "Member 'JSI_Slot_C_UpdateCount::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateCount, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0001AB, "Member 'JSI_Slot_C_UpdateCount::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateCount, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0001AC, "Member 'JSI_Slot_C_UpdateCount::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateCount, CallFunc_BooleanOR_ReturnValue_1) == 0x0001AD, "Member 'JSI_Slot_C_UpdateCount::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateCount, CallFunc_BooleanOR_ReturnValue_2) == 0x0001AE, "Member 'JSI_Slot_C_UpdateCount::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.UpdateDurabilityProgressBar
// 0x00A0 (0x00A0 - 0x0000)
struct JSI_Slot_C_UpdateDurabilityProgressBar final
{
public:
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0068(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0080(0x0018)()
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_UpdateDurabilityProgressBar) == 0x000008, "Wrong alignment on JSI_Slot_C_UpdateDurabilityProgressBar");
static_assert(sizeof(JSI_Slot_C_UpdateDurabilityProgressBar) == 0x0000A0, "Wrong size on JSI_Slot_C_UpdateDurabilityProgressBar");
static_assert(offsetof(JSI_Slot_C_UpdateDurabilityProgressBar, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000000, "Member 'JSI_Slot_C_UpdateDurabilityProgressBar::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateDurabilityProgressBar, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'JSI_Slot_C_UpdateDurabilityProgressBar::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateDurabilityProgressBar, CallFunc_Round_ReturnValue) == 0x000010, "Member 'JSI_Slot_C_UpdateDurabilityProgressBar::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateDurabilityProgressBar, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000014, "Member 'JSI_Slot_C_UpdateDurabilityProgressBar::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateDurabilityProgressBar, CallFunc_Conv_IntToString_ReturnValue) == 0x000018, "Member 'JSI_Slot_C_UpdateDurabilityProgressBar::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateDurabilityProgressBar, CallFunc_Concat_StrStr_ReturnValue) == 0x000028, "Member 'JSI_Slot_C_UpdateDurabilityProgressBar::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateDurabilityProgressBar, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000038, "Member 'JSI_Slot_C_UpdateDurabilityProgressBar::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateDurabilityProgressBar, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000048, "Member 'JSI_Slot_C_UpdateDurabilityProgressBar::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateDurabilityProgressBar, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000058, "Member 'JSI_Slot_C_UpdateDurabilityProgressBar::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateDurabilityProgressBar, CallFunc_Conv_StringToText_ReturnValue) == 0x000068, "Member 'JSI_Slot_C_UpdateDurabilityProgressBar::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateDurabilityProgressBar, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000080, "Member 'JSI_Slot_C_UpdateDurabilityProgressBar::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateDurabilityProgressBar, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000098, "Member 'JSI_Slot_C_UpdateDurabilityProgressBar::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateDurabilityProgressBar, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x00009C, "Member 'JSI_Slot_C_UpdateDurabilityProgressBar::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.UpdateImage
// 0x0020 (0x0020 - 0x0000)
struct JSI_Slot_C_UpdateImage final
{
public:
	class UPaperSprite*                           NewTexture;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Updated;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_UpdateImage) == 0x000008, "Wrong alignment on JSI_Slot_C_UpdateImage");
static_assert(sizeof(JSI_Slot_C_UpdateImage) == 0x000020, "Wrong size on JSI_Slot_C_UpdateImage");
static_assert(offsetof(JSI_Slot_C_UpdateImage, NewTexture) == 0x000000, "Member 'JSI_Slot_C_UpdateImage::NewTexture' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateImage, Updated) == 0x000008, "Member 'JSI_Slot_C_UpdateImage::Updated' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateImage, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000010, "Member 'JSI_Slot_C_UpdateImage::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateImage, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'JSI_Slot_C_UpdateImage::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.UpdateInfo
// 0x0120 (0x0120 - 0x0000)
struct JSI_Slot_C_UpdateInfo final
{
public:
	class UObject*                                Param_Image;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Image_Size;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0028(0x0014)()
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0040(0x00D0)()
	struct FDeprecateSlateVector2D                K2Node_MakeStruct_ImageSize_ImplicitCast;          // 0x0110(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_UpdateInfo) == 0x000010, "Wrong alignment on JSI_Slot_C_UpdateInfo");
static_assert(sizeof(JSI_Slot_C_UpdateInfo) == 0x000120, "Wrong size on JSI_Slot_C_UpdateInfo");
static_assert(offsetof(JSI_Slot_C_UpdateInfo, Param_Image) == 0x000000, "Member 'JSI_Slot_C_UpdateInfo::Param_Image' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateInfo, Image_Size) == 0x000008, "Member 'JSI_Slot_C_UpdateInfo::Image_Size' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateInfo, CallFunc_MakeColor_ReturnValue) == 0x000018, "Member 'JSI_Slot_C_UpdateInfo::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateInfo, K2Node_MakeStruct_SlateColor) == 0x000028, "Member 'JSI_Slot_C_UpdateInfo::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateInfo, K2Node_MakeStruct_SlateBrush) == 0x000040, "Member 'JSI_Slot_C_UpdateInfo::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_UpdateInfo, K2Node_MakeStruct_ImageSize_ImplicitCast) == 0x000110, "Member 'JSI_Slot_C_UpdateInfo::K2Node_MakeStruct_ImageSize_ImplicitCast' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.GetSlotBrushes
// 0x0AF0 (0x0AF0 - 0x0000)
struct JSI_Slot_C_GetSlotBrushes final
{
public:
	struct FSlateBrush                            BG_Brush;                                          // 0x0000(0x00D0)(Parm, OutParm)
	struct FSlateBrush                            Gradient_Brush;                                    // 0x00D0(0x00D0)(Parm, OutParm)
	struct FSlateBrush                            Highlight_Brush;                                   // 0x01A0(0x00D0)(Parm, OutParm)
	struct FSlateBrush                            Hover_Brush;                                       // 0x0270(0x00D0)(Parm, OutParm)
	class UPaperSprite*                           BGSprite;                                          // 0x0340(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              L_SlotSize;                                        // 0x0348(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              SwappedSlotSize;                                   // 0x0358(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CurrentSlotSize;                                   // 0x0368(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Hover_Sprite;                                      // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                Highlight_Sprite;                                  // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                Gradient_Sprite;                                   // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UPaperSprite*                           BG_Sprite;                                         // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         Y;                                                 // 0x0398(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         X;                                                 // 0x039C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           Temp_object_Variable;                              // 0x03A0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UPaperSprite*                           Temp_object_Variable_1;                            // 0x03A8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperSprite*                           Temp_object_Variable_2;                            // 0x03B8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UPaperSprite*                           Temp_object_Variable_3;                            // 0x03C0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C9[0x7];                                      // 0x03C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperSprite*                           K2Node_Select_Default;                             // 0x03D0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UPaperSprite*                           Temp_object_Variable_4;                            // 0x03D8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UPaperSprite*                           Temp_object_Variable_5;                            // 0x03E0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E9[0x7];                                      // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperSprite*                           K2Node_Select_Default_1;                           // 0x03F0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UPaperSprite*                           Temp_object_Variable_6;                            // 0x03F8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UPaperSprite*                           Temp_object_Variable_7;                            // 0x0400(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_409[0x7];                                      // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperSprite*                           K2Node_Select_Default_2;                           // 0x0410(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UPaperSprite*                           Temp_object_Variable_8;                            // 0x0418(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UPaperSprite*                           Temp_object_Variable_9;                            // 0x0420(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_429[0x7];                                      // 0x0429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperSprite*                           K2Node_Select_Default_3;                           // 0x0430(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UPaperSprite*                           Temp_object_Variable_10;                           // 0x0438(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UPaperSprite*                           Temp_object_Variable_11;                           // 0x0440(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_449[0x7];                                      // 0x0449(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperSprite*                           K2Node_Select_Default_4;                           // 0x0450(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UPaperSprite*                           Temp_object_Variable_12;                           // 0x0458(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UPaperSprite*                           Temp_object_Variable_13;                           // 0x0460(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_469[0x7];                                      // 0x0469(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperSprite*                           K2Node_Select_Default_5;                           // 0x0470(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_489[0x7];                                      // 0x0489(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49C[0x4];                                      // 0x049C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x04A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4AC[0x4];                                      // 0x04AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_SwapVector_ReturnValue;                   // 0x04B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C1[0x7];                                      // 0x04C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperSprite*                           Temp_object_Variable_14;                           // 0x04C8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UPaperSprite*                           K2Node_Select_Default_6;                           // 0x04D0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UPaperSprite*                           Temp_object_Variable_15;                           // 0x04D8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E1[0x7];                                      // 0x04E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperSprite*                           Temp_object_Variable_16;                           // 0x04E8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UPaperSprite*                           K2Node_Select_Default_7;                           // 0x04F0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UPaperSprite*                           Temp_object_Variable_17;                           // 0x04F8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_501[0x7];                                      // 0x0501(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           Temp_object_Variable_18;                           // 0x0518(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UPaperSprite*                           K2Node_Select_Default_8;                           // 0x0520(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UPaperSprite*                           Temp_object_Variable_19;                           // 0x0528(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_4;                        // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_4;                        // 0x0568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C1[0x3];                                      // 0x05C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x05C4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D4[0x4];                                      // 0x05D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperSprite*                           K2Node_Select_Default_9;                           // 0x05D8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_9;      // 0x05E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_10;     // 0x05F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_11;     // 0x05F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0610(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0618(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_5;           // 0x0628(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0630(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_648[0x8];                                      // 0x0648(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0650(0x00D0)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_1;                    // 0x0720(0x00D0)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_2;                    // 0x07F0(0x00D0)()
	double                                        CallFunc_BreakVector2D_X_5;                        // 0x08C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_5;                        // 0x08C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_4;      // 0x08D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x08D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D9[0x7];                                      // 0x08D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_5;      // 0x08E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x08E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x08F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x08F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x08FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x08FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x08FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x08FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x08FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x08FF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0900(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_6;          // 0x0901(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_7;          // 0x0902(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0903(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_8;          // 0x0904(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_905[0x3];                                      // 0x0905(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x0908(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_9;          // 0x0918(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0919(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91A[0x6];                                      // 0x091A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_12;     // 0x0920(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_13;     // 0x0928(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_14;     // 0x0930(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_15;     // 0x0938(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_6;           // 0x0940(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_7;           // 0x0948(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_8;           // 0x0950(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_9;           // 0x0958(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_10;          // 0x0960(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_11;          // 0x0968(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0970(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_10;         // 0x0980(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_981[0x7];                                      // 0x0981(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default_10;                          // 0x0988(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_11;         // 0x0998(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0999(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99A[0x6];                                      // 0x099A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_6;                        // 0x09A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_6;                        // 0x09A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_3;                    // 0x09B0(0x00D0)()
	int32                                         CallFunc_Round_ReturnValue_2;                      // 0x0A80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_3;                      // 0x0A84(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0A88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1;   // 0x0A90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2;   // 0x0A98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_3;   // 0x0AA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDeprecateSlateVector2D                K2Node_MakeStruct_ImageSize_ImplicitCast;          // 0x0AA8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FDeprecateSlateVector2D                K2Node_MakeStruct_ImageSize_ImplicitCast_1;        // 0x0AB0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FDeprecateSlateVector2D                K2Node_MakeStruct_ImageSize_ImplicitCast_2;        // 0x0AB8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FDeprecateSlateVector2D                K2Node_MakeStruct_ImageSize_ImplicitCast_3;        // 0x0AC0(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderTransformAngle_Angle_ImplicitCast; // 0x0AC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ACC[0x4];                                      // 0x0ACC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_4;   // 0x0AD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_5;   // 0x0AD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_6;   // 0x0AE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_7;   // 0x0AE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_GetSlotBrushes) == 0x000010, "Wrong alignment on JSI_Slot_C_GetSlotBrushes");
static_assert(sizeof(JSI_Slot_C_GetSlotBrushes) == 0x000AF0, "Wrong size on JSI_Slot_C_GetSlotBrushes");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, BG_Brush) == 0x000000, "Member 'JSI_Slot_C_GetSlotBrushes::BG_Brush' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, Gradient_Brush) == 0x0000D0, "Member 'JSI_Slot_C_GetSlotBrushes::Gradient_Brush' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, Highlight_Brush) == 0x0001A0, "Member 'JSI_Slot_C_GetSlotBrushes::Highlight_Brush' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, Hover_Brush) == 0x000270, "Member 'JSI_Slot_C_GetSlotBrushes::Hover_Brush' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, BGSprite) == 0x000340, "Member 'JSI_Slot_C_GetSlotBrushes::BGSprite' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, L_SlotSize) == 0x000348, "Member 'JSI_Slot_C_GetSlotBrushes::L_SlotSize' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, SwappedSlotSize) == 0x000358, "Member 'JSI_Slot_C_GetSlotBrushes::SwappedSlotSize' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CurrentSlotSize) == 0x000368, "Member 'JSI_Slot_C_GetSlotBrushes::CurrentSlotSize' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, Hover_Sprite) == 0x000378, "Member 'JSI_Slot_C_GetSlotBrushes::Hover_Sprite' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, Highlight_Sprite) == 0x000380, "Member 'JSI_Slot_C_GetSlotBrushes::Highlight_Sprite' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, Gradient_Sprite) == 0x000388, "Member 'JSI_Slot_C_GetSlotBrushes::Gradient_Sprite' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, BG_Sprite) == 0x000390, "Member 'JSI_Slot_C_GetSlotBrushes::BG_Sprite' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, Y) == 0x000398, "Member 'JSI_Slot_C_GetSlotBrushes::Y' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, X) == 0x00039C, "Member 'JSI_Slot_C_GetSlotBrushes::X' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, Temp_object_Variable) == 0x0003A0, "Member 'JSI_Slot_C_GetSlotBrushes::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, Temp_object_Variable_1) == 0x0003A8, "Member 'JSI_Slot_C_GetSlotBrushes::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, Temp_bool_Variable) == 0x0003B0, "Member 'JSI_Slot_C_GetSlotBrushes::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, Temp_object_Variable_2) == 0x0003B8, "Member 'JSI_Slot_C_GetSlotBrushes::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, Temp_object_Variable_3) == 0x0003C0, "Member 'JSI_Slot_C_GetSlotBrushes::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, Temp_bool_Variable_1) == 0x0003C8, "Member 'JSI_Slot_C_GetSlotBrushes::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, K2Node_Select_Default) == 0x0003D0, "Member 'JSI_Slot_C_GetSlotBrushes::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, Temp_object_Variable_4) == 0x0003D8, "Member 'JSI_Slot_C_GetSlotBrushes::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, Temp_object_Variable_5) == 0x0003E0, "Member 'JSI_Slot_C_GetSlotBrushes::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, Temp_bool_Variable_2) == 0x0003E8, "Member 'JSI_Slot_C_GetSlotBrushes::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, K2Node_Select_Default_1) == 0x0003F0, "Member 'JSI_Slot_C_GetSlotBrushes::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, Temp_object_Variable_6) == 0x0003F8, "Member 'JSI_Slot_C_GetSlotBrushes::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, Temp_object_Variable_7) == 0x000400, "Member 'JSI_Slot_C_GetSlotBrushes::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, Temp_bool_Variable_3) == 0x000408, "Member 'JSI_Slot_C_GetSlotBrushes::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, K2Node_Select_Default_2) == 0x000410, "Member 'JSI_Slot_C_GetSlotBrushes::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, Temp_object_Variable_8) == 0x000418, "Member 'JSI_Slot_C_GetSlotBrushes::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, Temp_object_Variable_9) == 0x000420, "Member 'JSI_Slot_C_GetSlotBrushes::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, Temp_bool_Variable_4) == 0x000428, "Member 'JSI_Slot_C_GetSlotBrushes::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, K2Node_Select_Default_3) == 0x000430, "Member 'JSI_Slot_C_GetSlotBrushes::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, Temp_object_Variable_10) == 0x000438, "Member 'JSI_Slot_C_GetSlotBrushes::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, Temp_object_Variable_11) == 0x000440, "Member 'JSI_Slot_C_GetSlotBrushes::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, Temp_bool_Variable_5) == 0x000448, "Member 'JSI_Slot_C_GetSlotBrushes::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, K2Node_Select_Default_4) == 0x000450, "Member 'JSI_Slot_C_GetSlotBrushes::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, Temp_object_Variable_12) == 0x000458, "Member 'JSI_Slot_C_GetSlotBrushes::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, Temp_object_Variable_13) == 0x000460, "Member 'JSI_Slot_C_GetSlotBrushes::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_IsValid_ReturnValue) == 0x000468, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, K2Node_Select_Default_5) == 0x000470, "Member 'JSI_Slot_C_GetSlotBrushes::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_BreakVector2D_X) == 0x000478, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_BreakVector2D_Y) == 0x000480, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000488, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000490, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Round_ReturnValue) == 0x000498, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0004A0, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Round_ReturnValue_1) == 0x0004A8, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_SwapVector_ReturnValue) == 0x0004B0, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_SwapVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, Temp_bool_Variable_6) == 0x0004C0, "Member 'JSI_Slot_C_GetSlotBrushes::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, Temp_object_Variable_14) == 0x0004C8, "Member 'JSI_Slot_C_GetSlotBrushes::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, K2Node_Select_Default_6) == 0x0004D0, "Member 'JSI_Slot_C_GetSlotBrushes::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, Temp_object_Variable_15) == 0x0004D8, "Member 'JSI_Slot_C_GetSlotBrushes::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, Temp_bool_Variable_7) == 0x0004E0, "Member 'JSI_Slot_C_GetSlotBrushes::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, Temp_object_Variable_16) == 0x0004E8, "Member 'JSI_Slot_C_GetSlotBrushes::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, K2Node_Select_Default_7) == 0x0004F0, "Member 'JSI_Slot_C_GetSlotBrushes::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, Temp_object_Variable_17) == 0x0004F8, "Member 'JSI_Slot_C_GetSlotBrushes::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, Temp_bool_Variable_8) == 0x000500, "Member 'JSI_Slot_C_GetSlotBrushes::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_BreakVector2D_X_1) == 0x000508, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_BreakVector2D_Y_1) == 0x000510, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, Temp_object_Variable_18) == 0x000518, "Member 'JSI_Slot_C_GetSlotBrushes::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, K2Node_Select_Default_8) == 0x000520, "Member 'JSI_Slot_C_GetSlotBrushes::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, Temp_object_Variable_19) == 0x000528, "Member 'JSI_Slot_C_GetSlotBrushes::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_BreakVector2D_X_2) == 0x000530, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_BreakVector2D_Y_2) == 0x000538, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_BreakVector2D_X_3) == 0x000540, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_BreakVector2D_Y_3) == 0x000548, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000550, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000558, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_BreakVector2D_X_4) == 0x000560, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_BreakVector2D_Y_4) == 0x000568, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000570, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000578, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000580, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000588, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000590, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000598, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0005A0, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x0005A8, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x0005B0, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x0005B8, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, Temp_bool_Variable_9) == 0x0005C0, "Member 'JSI_Slot_C_GetSlotBrushes::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, K2Node_MakeStruct_Margin) == 0x0005C4, "Member 'JSI_Slot_C_GetSlotBrushes::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, K2Node_Select_Default_9) == 0x0005D8, "Member 'JSI_Slot_C_GetSlotBrushes::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x0005E0, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Multiply_DoubleDouble_ReturnValue_9) == 0x0005E8, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Multiply_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Multiply_DoubleDouble_ReturnValue_10) == 0x0005F0, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Multiply_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Multiply_DoubleDouble_ReturnValue_11) == 0x0005F8, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Multiply_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000600, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000608, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000610, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000618, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x000620, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Add_DoubleDouble_ReturnValue_5) == 0x000628, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Add_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_MakeVector2D_ReturnValue) == 0x000630, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_SelectFloat_ReturnValue) == 0x000640, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, K2Node_MakeStruct_SlateBrush) == 0x000650, "Member 'JSI_Slot_C_GetSlotBrushes::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, K2Node_MakeStruct_SlateBrush_1) == 0x000720, "Member 'JSI_Slot_C_GetSlotBrushes::K2Node_MakeStruct_SlateBrush_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, K2Node_MakeStruct_SlateBrush_2) == 0x0007F0, "Member 'JSI_Slot_C_GetSlotBrushes::K2Node_MakeStruct_SlateBrush_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_BreakVector2D_X_5) == 0x0008C0, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_BreakVector2D_X_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_BreakVector2D_Y_5) == 0x0008C8, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_BreakVector2D_Y_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Subtract_DoubleDouble_ReturnValue_4) == 0x0008D0, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Subtract_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0008D8, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Subtract_DoubleDouble_ReturnValue_5) == 0x0008E0, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Subtract_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_MakeVector2D_ReturnValue_1) == 0x0008E8, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0008F8, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_BooleanAND_ReturnValue) == 0x0008F9, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x0008FA, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x0008FB, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x0008FC, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_BooleanAND_ReturnValue_1) == 0x0008FD, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x0008FE, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, Temp_bool_Variable_10) == 0x0008FF, "Member 'JSI_Slot_C_GetSlotBrushes::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_BooleanAND_ReturnValue_2) == 0x000900, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue_6) == 0x000901, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue_7) == 0x000902, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_BooleanAND_ReturnValue_3) == 0x000903, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue_8) == 0x000904, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, K2Node_MakeStruct_Margin_1) == 0x000908, "Member 'JSI_Slot_C_GetSlotBrushes::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue_9) == 0x000918, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_BooleanAND_ReturnValue_4) == 0x000919, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Multiply_DoubleDouble_ReturnValue_12) == 0x000920, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Multiply_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Multiply_DoubleDouble_ReturnValue_13) == 0x000928, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Multiply_DoubleDouble_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Multiply_DoubleDouble_ReturnValue_14) == 0x000930, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Multiply_DoubleDouble_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Multiply_DoubleDouble_ReturnValue_15) == 0x000938, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Multiply_DoubleDouble_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Add_DoubleDouble_ReturnValue_6) == 0x000940, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Add_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Add_DoubleDouble_ReturnValue_7) == 0x000948, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Add_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Add_DoubleDouble_ReturnValue_8) == 0x000950, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Add_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Add_DoubleDouble_ReturnValue_9) == 0x000958, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Add_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Add_DoubleDouble_ReturnValue_10) == 0x000960, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Add_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Add_DoubleDouble_ReturnValue_11) == 0x000968, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Add_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_MakeVector2D_ReturnValue_2) == 0x000970, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue_10) == 0x000980, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, K2Node_Select_Default_10) == 0x000988, "Member 'JSI_Slot_C_GetSlotBrushes::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue_11) == 0x000998, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_BooleanAND_ReturnValue_5) == 0x000999, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_BreakVector2D_X_6) == 0x0009A0, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_BreakVector2D_X_6' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_BreakVector2D_Y_6) == 0x0009A8, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_BreakVector2D_Y_6' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, K2Node_MakeStruct_SlateBrush_3) == 0x0009B0, "Member 'JSI_Slot_C_GetSlotBrushes::K2Node_MakeStruct_SlateBrush_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Round_ReturnValue_2) == 0x000A80, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Round_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Round_ReturnValue_3) == 0x000A84, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Round_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000A88, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1) == 0x000A90, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2) == 0x000A98, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_3) == 0x000AA0, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, K2Node_MakeStruct_ImageSize_ImplicitCast) == 0x000AA8, "Member 'JSI_Slot_C_GetSlotBrushes::K2Node_MakeStruct_ImageSize_ImplicitCast' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, K2Node_MakeStruct_ImageSize_ImplicitCast_1) == 0x000AB0, "Member 'JSI_Slot_C_GetSlotBrushes::K2Node_MakeStruct_ImageSize_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, K2Node_MakeStruct_ImageSize_ImplicitCast_2) == 0x000AB8, "Member 'JSI_Slot_C_GetSlotBrushes::K2Node_MakeStruct_ImageSize_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, K2Node_MakeStruct_ImageSize_ImplicitCast_3) == 0x000AC0, "Member 'JSI_Slot_C_GetSlotBrushes::K2Node_MakeStruct_ImageSize_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_SetRenderTransformAngle_Angle_ImplicitCast) == 0x000AC8, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_SetRenderTransformAngle_Angle_ImplicitCast' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_4) == 0x000AD0, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_5) == 0x000AD8, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_6) == 0x000AE0, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_GetSlotBrushes, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_7) == 0x000AE8, "Member 'JSI_Slot_C_GetSlotBrushes::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_7' has a wrong offset!");

// Function JSI_Slot.JSI_Slot_C.SwapVector
// 0x0050 (0x0050 - 0x0000)
struct JSI_Slot_C_SwapVector final
{
public:
	struct FVector2D                              Vector;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JSI_Slot_C_SwapVector) == 0x000008, "Wrong alignment on JSI_Slot_C_SwapVector");
static_assert(sizeof(JSI_Slot_C_SwapVector) == 0x000050, "Wrong size on JSI_Slot_C_SwapVector");
static_assert(offsetof(JSI_Slot_C_SwapVector, Vector) == 0x000000, "Member 'JSI_Slot_C_SwapVector::Vector' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SwapVector, ReturnValue) == 0x000010, "Member 'JSI_Slot_C_SwapVector::ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SwapVector, CallFunc_BreakVector2D_X) == 0x000020, "Member 'JSI_Slot_C_SwapVector::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SwapVector, CallFunc_BreakVector2D_Y) == 0x000028, "Member 'JSI_Slot_C_SwapVector::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SwapVector, CallFunc_SelectFloat_ReturnValue) == 0x000030, "Member 'JSI_Slot_C_SwapVector::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SwapVector, CallFunc_SelectFloat_ReturnValue_1) == 0x000038, "Member 'JSI_Slot_C_SwapVector::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JSI_Slot_C_SwapVector, CallFunc_MakeVector2D_ReturnValue) == 0x000040, "Member 'JSI_Slot_C_SwapVector::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

}

