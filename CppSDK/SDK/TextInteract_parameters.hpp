#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TextInteract

#include "Basic.hpp"

#include "E_ActorType_structs.hpp"
#include "E_InteractType_structs.hpp"


namespace SDK::Params
{

// Function TextInteract.TextInteract_C.CallClientInteract
// 0x0010 (0x0010 - 0x0000)
struct TextInteract_C_CallClientInteract final
{
public:
	class FString                                 Param_Text;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(TextInteract_C_CallClientInteract) == 0x000008, "Wrong alignment on TextInteract_C_CallClientInteract");
static_assert(sizeof(TextInteract_C_CallClientInteract) == 0x000010, "Wrong size on TextInteract_C_CallClientInteract");
static_assert(offsetof(TextInteract_C_CallClientInteract, Param_Text) == 0x000000, "Member 'TextInteract_C_CallClientInteract::Param_Text' has a wrong offset!");

// Function TextInteract.TextInteract_C.CallClientInteractWithWindow
// 0x0010 (0x0010 - 0x0000)
struct TextInteract_C_CallClientInteractWithWindow final
{
public:
	class FString                                 Param_Text;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(TextInteract_C_CallClientInteractWithWindow) == 0x000008, "Wrong alignment on TextInteract_C_CallClientInteractWithWindow");
static_assert(sizeof(TextInteract_C_CallClientInteractWithWindow) == 0x000010, "Wrong size on TextInteract_C_CallClientInteractWithWindow");
static_assert(offsetof(TextInteract_C_CallClientInteractWithWindow, Param_Text) == 0x000000, "Member 'TextInteract_C_CallClientInteractWithWindow::Param_Text' has a wrong offset!");

// Function TextInteract.TextInteract_C.ExecuteUbergraph_TextInteract
// 0x00E8 (0x00E8 - 0x0000)
struct TextInteract_C_ExecuteUbergraph_TextInteract final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_8;                             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_7;                             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player_6;                             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SitIndex;                             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_SkipAnimation;                        // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_PlayerMain_C*                      CallFunc_GetGUI_GUI;                               // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_5;                             // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_4;                             // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_3;                             // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_2;                             // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Visible_1;                            // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Visible;                              // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player_1;                             // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Text_1;                         // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player;                               // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Text;                           // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_FMODPlayEventAttached_ReturnValue;        // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_1;                     // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD_1;               // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_PlayerMain_C*                      CallFunc_GetGUI_GUI_1;                             // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TextInteract_C_ExecuteUbergraph_TextInteract) == 0x000008, "Wrong alignment on TextInteract_C_ExecuteUbergraph_TextInteract");
static_assert(sizeof(TextInteract_C_ExecuteUbergraph_TextInteract) == 0x0000E8, "Wrong size on TextInteract_C_ExecuteUbergraph_TextInteract");
static_assert(offsetof(TextInteract_C_ExecuteUbergraph_TextInteract, EntryPoint) == 0x000000, "Member 'TextInteract_C_ExecuteUbergraph_TextInteract::EntryPoint' has a wrong offset!");
static_assert(offsetof(TextInteract_C_ExecuteUbergraph_TextInteract, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'TextInteract_C_ExecuteUbergraph_TextInteract::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextInteract_C_ExecuteUbergraph_TextInteract, K2Node_Event_Player_8) == 0x000010, "Member 'TextInteract_C_ExecuteUbergraph_TextInteract::K2Node_Event_Player_8' has a wrong offset!");
static_assert(offsetof(TextInteract_C_ExecuteUbergraph_TextInteract, CallFunc_GetHUD_ReturnValue) == 0x000018, "Member 'TextInteract_C_ExecuteUbergraph_TextInteract::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextInteract_C_ExecuteUbergraph_TextInteract, K2Node_Event_Player_7) == 0x000020, "Member 'TextInteract_C_ExecuteUbergraph_TextInteract::K2Node_Event_Player_7' has a wrong offset!");
static_assert(offsetof(TextInteract_C_ExecuteUbergraph_TextInteract, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x000028, "Member 'TextInteract_C_ExecuteUbergraph_TextInteract::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(TextInteract_C_ExecuteUbergraph_TextInteract, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'TextInteract_C_ExecuteUbergraph_TextInteract::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TextInteract_C_ExecuteUbergraph_TextInteract, K2Node_Event_Player_6) == 0x000040, "Member 'TextInteract_C_ExecuteUbergraph_TextInteract::K2Node_Event_Player_6' has a wrong offset!");
static_assert(offsetof(TextInteract_C_ExecuteUbergraph_TextInteract, K2Node_Event_SitIndex) == 0x000048, "Member 'TextInteract_C_ExecuteUbergraph_TextInteract::K2Node_Event_SitIndex' has a wrong offset!");
static_assert(offsetof(TextInteract_C_ExecuteUbergraph_TextInteract, K2Node_Event_SkipAnimation) == 0x00004C, "Member 'TextInteract_C_ExecuteUbergraph_TextInteract::K2Node_Event_SkipAnimation' has a wrong offset!");
static_assert(offsetof(TextInteract_C_ExecuteUbergraph_TextInteract, CallFunc_GetGUI_GUI) == 0x000050, "Member 'TextInteract_C_ExecuteUbergraph_TextInteract::CallFunc_GetGUI_GUI' has a wrong offset!");
static_assert(offsetof(TextInteract_C_ExecuteUbergraph_TextInteract, K2Node_Event_Player_5) == 0x000058, "Member 'TextInteract_C_ExecuteUbergraph_TextInteract::K2Node_Event_Player_5' has a wrong offset!");
static_assert(offsetof(TextInteract_C_ExecuteUbergraph_TextInteract, K2Node_Event_Player_4) == 0x000060, "Member 'TextInteract_C_ExecuteUbergraph_TextInteract::K2Node_Event_Player_4' has a wrong offset!");
static_assert(offsetof(TextInteract_C_ExecuteUbergraph_TextInteract, K2Node_Event_Player_3) == 0x000068, "Member 'TextInteract_C_ExecuteUbergraph_TextInteract::K2Node_Event_Player_3' has a wrong offset!");
static_assert(offsetof(TextInteract_C_ExecuteUbergraph_TextInteract, K2Node_Event_Player_2) == 0x000070, "Member 'TextInteract_C_ExecuteUbergraph_TextInteract::K2Node_Event_Player_2' has a wrong offset!");
static_assert(offsetof(TextInteract_C_ExecuteUbergraph_TextInteract, K2Node_Event_Visible_1) == 0x000078, "Member 'TextInteract_C_ExecuteUbergraph_TextInteract::K2Node_Event_Visible_1' has a wrong offset!");
static_assert(offsetof(TextInteract_C_ExecuteUbergraph_TextInteract, K2Node_Event_Visible) == 0x000079, "Member 'TextInteract_C_ExecuteUbergraph_TextInteract::K2Node_Event_Visible' has a wrong offset!");
static_assert(offsetof(TextInteract_C_ExecuteUbergraph_TextInteract, K2Node_Event_Player_1) == 0x000080, "Member 'TextInteract_C_ExecuteUbergraph_TextInteract::K2Node_Event_Player_1' has a wrong offset!");
static_assert(offsetof(TextInteract_C_ExecuteUbergraph_TextInteract, K2Node_CustomEvent_Text_1) == 0x000088, "Member 'TextInteract_C_ExecuteUbergraph_TextInteract::K2Node_CustomEvent_Text_1' has a wrong offset!");
static_assert(offsetof(TextInteract_C_ExecuteUbergraph_TextInteract, K2Node_Event_Player) == 0x000098, "Member 'TextInteract_C_ExecuteUbergraph_TextInteract::K2Node_Event_Player' has a wrong offset!");
static_assert(offsetof(TextInteract_C_ExecuteUbergraph_TextInteract, K2Node_CustomEvent_Text) == 0x0000A0, "Member 'TextInteract_C_ExecuteUbergraph_TextInteract::K2Node_CustomEvent_Text' has a wrong offset!");
static_assert(offsetof(TextInteract_C_ExecuteUbergraph_TextInteract, CallFunc_GetPlayerController_ReturnValue_1) == 0x0000B0, "Member 'TextInteract_C_ExecuteUbergraph_TextInteract::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TextInteract_C_ExecuteUbergraph_TextInteract, CallFunc_FMODPlayEventAttached_ReturnValue) == 0x0000B8, "Member 'TextInteract_C_ExecuteUbergraph_TextInteract::CallFunc_FMODPlayEventAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextInteract_C_ExecuteUbergraph_TextInteract, CallFunc_GetHUD_ReturnValue_1) == 0x0000C0, "Member 'TextInteract_C_ExecuteUbergraph_TextInteract::CallFunc_GetHUD_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TextInteract_C_ExecuteUbergraph_TextInteract, K2Node_DynamicCast_AsBPI_Game_HUD_1) == 0x0000C8, "Member 'TextInteract_C_ExecuteUbergraph_TextInteract::K2Node_DynamicCast_AsBPI_Game_HUD_1' has a wrong offset!");
static_assert(offsetof(TextInteract_C_ExecuteUbergraph_TextInteract, K2Node_DynamicCast_bSuccess_1) == 0x0000D8, "Member 'TextInteract_C_ExecuteUbergraph_TextInteract::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(TextInteract_C_ExecuteUbergraph_TextInteract, CallFunc_GetGUI_GUI_1) == 0x0000E0, "Member 'TextInteract_C_ExecuteUbergraph_TextInteract::CallFunc_GetGUI_GUI_1' has a wrong offset!");

// Function TextInteract.TextInteract_C.GetActorType
// 0x0001 (0x0001 - 0x0000)
struct TextInteract_C_GetActorType final
{
public:
	E_ActorType                                   ActorType;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TextInteract_C_GetActorType) == 0x000001, "Wrong alignment on TextInteract_C_GetActorType");
static_assert(sizeof(TextInteract_C_GetActorType) == 0x000001, "Wrong size on TextInteract_C_GetActorType");
static_assert(offsetof(TextInteract_C_GetActorType, ActorType) == 0x000000, "Member 'TextInteract_C_GetActorType::ActorType' has a wrong offset!");

// Function TextInteract.TextInteract_C.IsLocked?
// 0x0001 (0x0001 - 0x0000)
struct TextInteract_C_IsLocked_ final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TextInteract_C_IsLocked_) == 0x000001, "Wrong alignment on TextInteract_C_IsLocked_");
static_assert(sizeof(TextInteract_C_IsLocked_) == 0x000001, "Wrong size on TextInteract_C_IsLocked_");
static_assert(offsetof(TextInteract_C_IsLocked_, Result) == 0x000000, "Member 'TextInteract_C_IsLocked_::Result' has a wrong offset!");

// Function TextInteract.TextInteract_C.OnBeginInteract
// 0x0008 (0x0008 - 0x0000)
struct TextInteract_C_OnBeginInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TextInteract_C_OnBeginInteract) == 0x000008, "Wrong alignment on TextInteract_C_OnBeginInteract");
static_assert(sizeof(TextInteract_C_OnBeginInteract) == 0x000008, "Wrong size on TextInteract_C_OnBeginInteract");
static_assert(offsetof(TextInteract_C_OnBeginInteract, Player) == 0x000000, "Member 'TextInteract_C_OnBeginInteract::Player' has a wrong offset!");

// Function TextInteract.TextInteract_C.OnFocused
// 0x0068 (0x0068 - 0x0000)
struct TextInteract_C_OnFocused final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HighlightActor;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        HighlightActorComponent;                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_InteractType                                InteractType;                                      // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LateTime;                                          // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0048(0x0018)()
	class UUIW_PlayerMain_C*                      CallFunc_GetGUI_GUI;                               // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TextInteract_C_OnFocused) == 0x000008, "Wrong alignment on TextInteract_C_OnFocused");
static_assert(sizeof(TextInteract_C_OnFocused) == 0x000068, "Wrong size on TextInteract_C_OnFocused");
static_assert(offsetof(TextInteract_C_OnFocused, Player) == 0x000000, "Member 'TextInteract_C_OnFocused::Player' has a wrong offset!");
static_assert(offsetof(TextInteract_C_OnFocused, HighlightActor) == 0x000008, "Member 'TextInteract_C_OnFocused::HighlightActor' has a wrong offset!");
static_assert(offsetof(TextInteract_C_OnFocused, HighlightActorComponent) == 0x000010, "Member 'TextInteract_C_OnFocused::HighlightActorComponent' has a wrong offset!");
static_assert(offsetof(TextInteract_C_OnFocused, InteractType) == 0x000018, "Member 'TextInteract_C_OnFocused::InteractType' has a wrong offset!");
static_assert(offsetof(TextInteract_C_OnFocused, LateTime) == 0x000020, "Member 'TextInteract_C_OnFocused::LateTime' has a wrong offset!");
static_assert(offsetof(TextInteract_C_OnFocused, CallFunc_GetPlayerController_ReturnValue) == 0x000028, "Member 'TextInteract_C_OnFocused::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextInteract_C_OnFocused, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x000030, "Member 'TextInteract_C_OnFocused::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(TextInteract_C_OnFocused, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'TextInteract_C_OnFocused::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TextInteract_C_OnFocused, CallFunc_Conv_StringToText_ReturnValue) == 0x000048, "Member 'TextInteract_C_OnFocused::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextInteract_C_OnFocused, CallFunc_GetGUI_GUI) == 0x000060, "Member 'TextInteract_C_OnFocused::CallFunc_GetGUI_GUI' has a wrong offset!");

// Function TextInteract.TextInteract_C.OnInteract
// 0x0008 (0x0008 - 0x0000)
struct TextInteract_C_OnInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TextInteract_C_OnInteract) == 0x000008, "Wrong alignment on TextInteract_C_OnInteract");
static_assert(sizeof(TextInteract_C_OnInteract) == 0x000008, "Wrong size on TextInteract_C_OnInteract");
static_assert(offsetof(TextInteract_C_OnInteract, Player) == 0x000000, "Member 'TextInteract_C_OnInteract::Player' has a wrong offset!");

// Function TextInteract.TextInteract_C.OnInteract2
// 0x0008 (0x0008 - 0x0000)
struct TextInteract_C_OnInteract2 final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TextInteract_C_OnInteract2) == 0x000008, "Wrong alignment on TextInteract_C_OnInteract2");
static_assert(sizeof(TextInteract_C_OnInteract2) == 0x000008, "Wrong size on TextInteract_C_OnInteract2");
static_assert(offsetof(TextInteract_C_OnInteract2, Player) == 0x000000, "Member 'TextInteract_C_OnInteract2::Player' has a wrong offset!");

// Function TextInteract.TextInteract_C.OnInteract3
// 0x0008 (0x0008 - 0x0000)
struct TextInteract_C_OnInteract3 final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TextInteract_C_OnInteract3) == 0x000008, "Wrong alignment on TextInteract_C_OnInteract3");
static_assert(sizeof(TextInteract_C_OnInteract3) == 0x000008, "Wrong size on TextInteract_C_OnInteract3");
static_assert(offsetof(TextInteract_C_OnInteract3, Player) == 0x000000, "Member 'TextInteract_C_OnInteract3::Player' has a wrong offset!");

// Function TextInteract.TextInteract_C.OnInteractVehicle
// 0x0010 (0x0010 - 0x0000)
struct TextInteract_C_OnInteractVehicle final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         SitIndex;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipAnimation;                                     // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TextInteract_C_OnInteractVehicle) == 0x000008, "Wrong alignment on TextInteract_C_OnInteractVehicle");
static_assert(sizeof(TextInteract_C_OnInteractVehicle) == 0x000010, "Wrong size on TextInteract_C_OnInteractVehicle");
static_assert(offsetof(TextInteract_C_OnInteractVehicle, Player) == 0x000000, "Member 'TextInteract_C_OnInteractVehicle::Player' has a wrong offset!");
static_assert(offsetof(TextInteract_C_OnInteractVehicle, SitIndex) == 0x000008, "Member 'TextInteract_C_OnInteractVehicle::SitIndex' has a wrong offset!");
static_assert(offsetof(TextInteract_C_OnInteractVehicle, SkipAnimation) == 0x00000C, "Member 'TextInteract_C_OnInteractVehicle::SkipAnimation' has a wrong offset!");

// Function TextInteract.TextInteract_C.OnLocalInteract
// 0x0008 (0x0008 - 0x0000)
struct TextInteract_C_OnLocalInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TextInteract_C_OnLocalInteract) == 0x000008, "Wrong alignment on TextInteract_C_OnLocalInteract");
static_assert(sizeof(TextInteract_C_OnLocalInteract) == 0x000008, "Wrong size on TextInteract_C_OnLocalInteract");
static_assert(offsetof(TextInteract_C_OnLocalInteract, Player) == 0x000000, "Member 'TextInteract_C_OnLocalInteract::Player' has a wrong offset!");

// Function TextInteract.TextInteract_C.OnLostFocus
// 0x0008 (0x0008 - 0x0000)
struct TextInteract_C_OnLostFocus final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TextInteract_C_OnLostFocus) == 0x000008, "Wrong alignment on TextInteract_C_OnLostFocus");
static_assert(sizeof(TextInteract_C_OnLostFocus) == 0x000008, "Wrong size on TextInteract_C_OnLostFocus");
static_assert(offsetof(TextInteract_C_OnLostFocus, Player) == 0x000000, "Member 'TextInteract_C_OnLostFocus::Player' has a wrong offset!");

// Function TextInteract.TextInteract_C.OnSeen
// 0x0008 (0x0008 - 0x0000)
struct TextInteract_C_OnSeen final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TextInteract_C_OnSeen) == 0x000008, "Wrong alignment on TextInteract_C_OnSeen");
static_assert(sizeof(TextInteract_C_OnSeen) == 0x000008, "Wrong size on TextInteract_C_OnSeen");
static_assert(offsetof(TextInteract_C_OnSeen, Player) == 0x000000, "Member 'TextInteract_C_OnSeen::Player' has a wrong offset!");

// Function TextInteract.TextInteract_C.OnStopInteract
// 0x0008 (0x0008 - 0x0000)
struct TextInteract_C_OnStopInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TextInteract_C_OnStopInteract) == 0x000008, "Wrong alignment on TextInteract_C_OnStopInteract");
static_assert(sizeof(TextInteract_C_OnStopInteract) == 0x000008, "Wrong size on TextInteract_C_OnStopInteract");
static_assert(offsetof(TextInteract_C_OnStopInteract, Player) == 0x000000, "Member 'TextInteract_C_OnStopInteract::Player' has a wrong offset!");

// Function TextInteract.TextInteract_C.Set3DWidgetVisibility
// 0x0001 (0x0001 - 0x0000)
struct TextInteract_C_Set3DWidgetVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TextInteract_C_Set3DWidgetVisibility) == 0x000001, "Wrong alignment on TextInteract_C_Set3DWidgetVisibility");
static_assert(sizeof(TextInteract_C_Set3DWidgetVisibility) == 0x000001, "Wrong size on TextInteract_C_Set3DWidgetVisibility");
static_assert(offsetof(TextInteract_C_Set3DWidgetVisibility, Visible) == 0x000000, "Member 'TextInteract_C_Set3DWidgetVisibility::Visible' has a wrong offset!");

// Function TextInteract.TextInteract_C.SetInteractText
// 0x0010 (0x0010 - 0x0000)
struct TextInteract_C_SetInteractText final
{
public:
	class FString                                 Param_InteractText;                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(TextInteract_C_SetInteractText) == 0x000008, "Wrong alignment on TextInteract_C_SetInteractText");
static_assert(sizeof(TextInteract_C_SetInteractText) == 0x000010, "Wrong size on TextInteract_C_SetInteractText");
static_assert(offsetof(TextInteract_C_SetInteractText, Param_InteractText) == 0x000000, "Member 'TextInteract_C_SetInteractText::Param_InteractText' has a wrong offset!");

// Function TextInteract.TextInteract_C.SetText
// 0x0010 (0x0010 - 0x0000)
struct TextInteract_C_SetText final
{
public:
	class FString                                 Param_Text;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(TextInteract_C_SetText) == 0x000008, "Wrong alignment on TextInteract_C_SetText");
static_assert(sizeof(TextInteract_C_SetText) == 0x000010, "Wrong size on TextInteract_C_SetText");
static_assert(offsetof(TextInteract_C_SetText, Param_Text) == 0x000000, "Member 'TextInteract_C_SetText::Param_Text' has a wrong offset!");

// Function TextInteract.TextInteract_C.SetTutorial3DWidgetVisibility
// 0x0001 (0x0001 - 0x0000)
struct TextInteract_C_SetTutorial3DWidgetVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TextInteract_C_SetTutorial3DWidgetVisibility) == 0x000001, "Wrong alignment on TextInteract_C_SetTutorial3DWidgetVisibility");
static_assert(sizeof(TextInteract_C_SetTutorial3DWidgetVisibility) == 0x000001, "Wrong size on TextInteract_C_SetTutorial3DWidgetVisibility");
static_assert(offsetof(TextInteract_C_SetTutorial3DWidgetVisibility, Visible) == 0x000000, "Member 'TextInteract_C_SetTutorial3DWidgetVisibility::Visible' has a wrong offset!");

}

