#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ShotgunCrosshair

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ShotgunCrosshair.WBP_ShotgunCrosshair_C
// 0x0028 (0x02A8 - 0x0280)
class UWBP_ShotgunCrosshair_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Kill_Anim;                                         // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Ready_Anim;                                        // 0x0290(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Image_Left;                                        // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Right;                                       // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void Aim(bool Param_Aim);
	void ExecuteUbergraph_WBP_ShotgunCrosshair(int32 EntryPoint);
	void Hit();
	void Kill();
	void Shoot(bool Shooting, bool* Result);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ShotgunCrosshair_C">();
	}
	static class UWBP_ShotgunCrosshair_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ShotgunCrosshair_C>();
	}
};
static_assert(alignof(UWBP_ShotgunCrosshair_C) == 0x000008, "Wrong alignment on UWBP_ShotgunCrosshair_C");
static_assert(sizeof(UWBP_ShotgunCrosshair_C) == 0x0002A8, "Wrong size on UWBP_ShotgunCrosshair_C");
static_assert(offsetof(UWBP_ShotgunCrosshair_C, UberGraphFrame) == 0x000280, "Member 'UWBP_ShotgunCrosshair_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ShotgunCrosshair_C, Kill_Anim) == 0x000288, "Member 'UWBP_ShotgunCrosshair_C::Kill_Anim' has a wrong offset!");
static_assert(offsetof(UWBP_ShotgunCrosshair_C, Ready_Anim) == 0x000290, "Member 'UWBP_ShotgunCrosshair_C::Ready_Anim' has a wrong offset!");
static_assert(offsetof(UWBP_ShotgunCrosshair_C, Image_Left) == 0x000298, "Member 'UWBP_ShotgunCrosshair_C::Image_Left' has a wrong offset!");
static_assert(offsetof(UWBP_ShotgunCrosshair_C, Image_Right) == 0x0002A0, "Member 'UWBP_ShotgunCrosshair_C::Image_Right' has a wrong offset!");

}

