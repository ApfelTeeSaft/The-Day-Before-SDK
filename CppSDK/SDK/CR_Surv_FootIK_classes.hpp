#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CR_Surv_FootIK

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ControlRig_structs.hpp"
#include "ControlRig_classes.hpp"
#include "RigVM_structs.hpp"
#include "RigVM_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// ControlRigBlueprintGeneratedClass CR_Surv_FootIK.CR_Surv_FootIK_C
// 0x0118 (0x0510 - 0x03F8)
class UCR_Surv_FootIK_C final : public UControlRig
{
public:
	double                                        FloorL;                                            // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FloorR;                                            // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enabled;                                           // 0x0408(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_409[0x7];                                      // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LeftAlpha;                                         // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RightAlpha;                                        // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FLockLocation_R;                                   // 0x0420(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FLockLocation_L;                                   // 0x0438(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               FLockRotation_R;                                   // 0x0450(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               FLockRotation_L;                                   // 0x0468(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        FLockAlpha_R;                                      // 0x0480(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FLockAlpha_L;                                      // 0x0488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PelvisOffset;                                      // 0x0490(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A8[0x8];                                      // 0x04A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             LeftHandEffTransform;                              // 0x04B0(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CR_Surv_FootIK_C">();
	}
	static class UCR_Surv_FootIK_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCR_Surv_FootIK_C>();
	}
};
static_assert(alignof(UCR_Surv_FootIK_C) == 0x000010, "Wrong alignment on UCR_Surv_FootIK_C");
static_assert(sizeof(UCR_Surv_FootIK_C) == 0x000510, "Wrong size on UCR_Surv_FootIK_C");
static_assert(offsetof(UCR_Surv_FootIK_C, FloorL) == 0x0003F8, "Member 'UCR_Surv_FootIK_C::FloorL' has a wrong offset!");
static_assert(offsetof(UCR_Surv_FootIK_C, FloorR) == 0x000400, "Member 'UCR_Surv_FootIK_C::FloorR' has a wrong offset!");
static_assert(offsetof(UCR_Surv_FootIK_C, Enabled) == 0x000408, "Member 'UCR_Surv_FootIK_C::Enabled' has a wrong offset!");
static_assert(offsetof(UCR_Surv_FootIK_C, LeftAlpha) == 0x000410, "Member 'UCR_Surv_FootIK_C::LeftAlpha' has a wrong offset!");
static_assert(offsetof(UCR_Surv_FootIK_C, RightAlpha) == 0x000418, "Member 'UCR_Surv_FootIK_C::RightAlpha' has a wrong offset!");
static_assert(offsetof(UCR_Surv_FootIK_C, FLockLocation_R) == 0x000420, "Member 'UCR_Surv_FootIK_C::FLockLocation_R' has a wrong offset!");
static_assert(offsetof(UCR_Surv_FootIK_C, FLockLocation_L) == 0x000438, "Member 'UCR_Surv_FootIK_C::FLockLocation_L' has a wrong offset!");
static_assert(offsetof(UCR_Surv_FootIK_C, FLockRotation_R) == 0x000450, "Member 'UCR_Surv_FootIK_C::FLockRotation_R' has a wrong offset!");
static_assert(offsetof(UCR_Surv_FootIK_C, FLockRotation_L) == 0x000468, "Member 'UCR_Surv_FootIK_C::FLockRotation_L' has a wrong offset!");
static_assert(offsetof(UCR_Surv_FootIK_C, FLockAlpha_R) == 0x000480, "Member 'UCR_Surv_FootIK_C::FLockAlpha_R' has a wrong offset!");
static_assert(offsetof(UCR_Surv_FootIK_C, FLockAlpha_L) == 0x000488, "Member 'UCR_Surv_FootIK_C::FLockAlpha_L' has a wrong offset!");
static_assert(offsetof(UCR_Surv_FootIK_C, PelvisOffset) == 0x000490, "Member 'UCR_Surv_FootIK_C::PelvisOffset' has a wrong offset!");
static_assert(offsetof(UCR_Surv_FootIK_C, LeftHandEffTransform) == 0x0004B0, "Member 'UCR_Surv_FootIK_C::LeftHandEffTransform' has a wrong offset!");

// RigVMMemoryStorageGeneratorClass CR_Surv_FootIK.RigVMMemory_Literal
// 0x06D8 (0x0700 - 0x0028)
class CR_Surv_FootIK::URigVMMemory_Literal final : public URigVMMemoryStorage
{
public:
	struct FRigElementKey                         RigVMModel___RigUnit_OffsetTransformForItem_Item__Const; // 0x0028(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0xC];                                       // 0x0034(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_OffsetTransform__Const; // 0x0040(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___RigUnit_OffsetTransformForItem_Weight__Const; // 0x00A0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___RigUnit_OffsetTransformForItem_bPropagateToChildren__Const; // 0x00A4(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigElementKey                         RigVMModel___RigUnit_OffsetTransformForItem_1_Item__Const; // 0x00A8(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0xC];                                       // 0x00B4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_1_OffsetTransform__Const; // 0x00C0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_SetRelativeTransformForItem_Child__Const; // 0x0120(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_SetRelativeTransformForItem_Parent__Const; // 0x012C(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___RigUnit_SetRelativeTransformForItem_bParentInitial__Const; // 0x0138(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_SetRelativeTransformForItem_Value__Const; // 0x0140(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_SetRelativeTransformForItem_1_Child__Const; // 0x01A0(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_SetRelativeTransformForItem_1_Parent__Const; // 0x01AC(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	ERigVMTransformSpace                          RigVMModel___RigUnit_GetTransform_3_Space__Const;  // 0x01B8(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___MathFloatRemap_1_SourceMinimum__Const; // 0x01BC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_1_SourceMaximum__Const; // 0x01C0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_1_TargetMaximum__Const; // 0x01C4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FInputRange                            RigVMModel___RigUnit_AlphaInterp_3_InRange__Const; // 0x01C8(0x0008)(Edit, EditConst, NonTransactional, NoDestructor)
	float                                         RigVMModel___RigUnit_AlphaInterp_3_InterpSpeedIncreasing__Const; // 0x01D0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___MathVectorAdd_1_B__Const;             // 0x01D8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathVectorAdd_2_B__Const;             // 0x01F0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	ECollisionChannel                             RigVMModel___SphereTraceWorld_Channel__Const;      // 0x0208(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_209[0x3];                                      // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___SphereTraceWorld_Radius__Const;       // 0x020C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_B__Const;                // 0x0210(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_B__Const;                // 0x0214(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_Primary__Const;               // 0x0218(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_Secondary__Const;             // 0x0260(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	uint8                                         Pad_2A8[0x8];                                      // 0x02A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_AimBone_DebugSettings         RigVMModel___AimItem_DebugSettings__Const;         // 0x02B0(0x0070)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FInputRange                            RigVMModel___RigUnit_AlphaInterp_1_InRange__Const; // 0x0320(0x0008)(Edit, EditConst, NonTransactional, NoDestructor)
	float                                         RigVMModel___RigUnit_AlphaInterp_1_InterpSpeedIncreasing__Const; // 0x0328(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32C[0x4];                                      // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_1_Primary__Const;             // 0x0330(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_1_Secondary__Const;           // 0x0378(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FRigElementKey                         RigVMModel___RigUnit_SetTransform_Item__Const;     // 0x03C0(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CC[0x4];                                      // 0x03CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_SetTransform_Value__Const;    // 0x03D0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathVectorAdd_B__Const;               // 0x0430(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_3_B__Const;              // 0x0448(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_SetTranslation_1_Item__Const; // 0x044C(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___TwoBoneIKSimplePerItem_ItemA__Const;  // 0x0458(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___TwoBoneIKSimplePerItem_ItemB__Const;  // 0x0464(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___TwoBoneIKSimplePerItem_Effector__Const; // 0x0470(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___TwoBoneIKSimplePerItem_PrimaryAxis__Const; // 0x04D0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___TwoBoneIKSimplePerItem_SecondaryAxis__Const; // 0x04E8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___RigUnit_VisualDebugVectorItemSpace_Value__Const; // 0x0500(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	ERigUnitVisualDebugPointMode                  RigVMModel___RigUnit_VisualDebugVectorItemSpace_Mode__Const; // 0x0518(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_519[0x3];                                      // 0x0519(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           RigVMModel___RigUnit_VisualDebugVectorItemSpace_Color__Const; // 0x051C(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EControlRigVectorKind                         RigVMModel___TwoBoneIKSimplePerItem_PoleVectorKind__Const; // 0x052C(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52D[0x3];                                      // 0x052D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___TwoBoneIKSimplePerItem_StretchStartRatio__Const; // 0x0530(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___TwoBoneIKSimplePerItem_StretchMaximumRatio__Const; // 0x0534(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_538[0x8];                                      // 0x0538(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_TwoBoneIKSimple_DebugSettings RigVMModel___TwoBoneIKSimplePerItem_DebugSettings__Const; // 0x0540(0x0070)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FRigElementKey                         RigVMModel___RigUnit_SetTranslation_Item__Const;   // 0x05B0(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___TwoBoneIKSimplePerItem_1_ItemA__Const; // 0x05BC(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___TwoBoneIKSimplePerItem_1_ItemB__Const; // 0x05C8(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D4[0xC];                                      // 0x05D4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___TwoBoneIKSimplePerItem_1_Effector__Const; // 0x05E0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___TwoBoneIKSimplePerItem_1_PrimaryAxis__Const; // 0x0640(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___TwoBoneIKSimplePerItem_1_SecondaryAxis__Const; // 0x0658(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___TwoBoneIKSimplePerItem_1_PoleVectorSpace__Const; // 0x0670(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_67C[0x4];                                      // 0x067C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_TwoBoneIKSimple_DebugSettings RigVMModel___TwoBoneIKSimplePerItem_1_DebugSettings__Const; // 0x0680(0x0070)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FRigElementKey                         RigVMModel___RigUnit_SetTransform_1_Item__Const;   // 0x06F0(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass CR_Surv_FootIK.RigVMMemory_Literal", true>();
	}
	static class CR_Surv_FootIK::URigVMMemory_Literal* GetDefaultObj()
	{
		return GetDefaultObjImpl<CR_Surv_FootIK::URigVMMemory_Literal>();
	}
};
static_assert(alignof(CR_Surv_FootIK::URigVMMemory_Literal) == 0x000010, "Wrong alignment on CR_Surv_FootIK::URigVMMemory_Literal");
static_assert(sizeof(CR_Surv_FootIK::URigVMMemory_Literal) == 0x000700, "Wrong size on CR_Surv_FootIK::URigVMMemory_Literal");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___RigUnit_OffsetTransformForItem_Item__Const) == 0x000028, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___RigUnit_OffsetTransformForItem_Item__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___RigUnit_OffsetTransformForItem_OffsetTransform__Const) == 0x000040, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___RigUnit_OffsetTransformForItem_OffsetTransform__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___RigUnit_OffsetTransformForItem_Weight__Const) == 0x0000A0, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___RigUnit_OffsetTransformForItem_Weight__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___RigUnit_OffsetTransformForItem_bPropagateToChildren__Const) == 0x0000A4, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___RigUnit_OffsetTransformForItem_bPropagateToChildren__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___RigUnit_OffsetTransformForItem_1_Item__Const) == 0x0000A8, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___RigUnit_OffsetTransformForItem_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___RigUnit_OffsetTransformForItem_1_OffsetTransform__Const) == 0x0000C0, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___RigUnit_OffsetTransformForItem_1_OffsetTransform__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___RigUnit_SetRelativeTransformForItem_Child__Const) == 0x000120, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___RigUnit_SetRelativeTransformForItem_Child__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___RigUnit_SetRelativeTransformForItem_Parent__Const) == 0x00012C, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___RigUnit_SetRelativeTransformForItem_Parent__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___RigUnit_SetRelativeTransformForItem_bParentInitial__Const) == 0x000138, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___RigUnit_SetRelativeTransformForItem_bParentInitial__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___RigUnit_SetRelativeTransformForItem_Value__Const) == 0x000140, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___RigUnit_SetRelativeTransformForItem_Value__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___RigUnit_SetRelativeTransformForItem_1_Child__Const) == 0x0001A0, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___RigUnit_SetRelativeTransformForItem_1_Child__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___RigUnit_SetRelativeTransformForItem_1_Parent__Const) == 0x0001AC, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___RigUnit_SetRelativeTransformForItem_1_Parent__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___RigUnit_GetTransform_3_Space__Const) == 0x0001B8, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___RigUnit_GetTransform_3_Space__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___MathFloatRemap_1_SourceMinimum__Const) == 0x0001BC, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___MathFloatRemap_1_SourceMinimum__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___MathFloatRemap_1_SourceMaximum__Const) == 0x0001C0, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___MathFloatRemap_1_SourceMaximum__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___MathFloatRemap_1_TargetMaximum__Const) == 0x0001C4, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___MathFloatRemap_1_TargetMaximum__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___RigUnit_AlphaInterp_3_InRange__Const) == 0x0001C8, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___RigUnit_AlphaInterp_3_InRange__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___RigUnit_AlphaInterp_3_InterpSpeedIncreasing__Const) == 0x0001D0, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___RigUnit_AlphaInterp_3_InterpSpeedIncreasing__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___MathVectorAdd_1_B__Const) == 0x0001D8, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___MathVectorAdd_1_B__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___MathVectorAdd_2_B__Const) == 0x0001F0, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___MathVectorAdd_2_B__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___SphereTraceWorld_Channel__Const) == 0x000208, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___SphereTraceWorld_Channel__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___SphereTraceWorld_Radius__Const) == 0x00020C, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___SphereTraceWorld_Radius__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___MathFloatMul_B__Const) == 0x000210, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___MathFloatMul_B__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___MathFloatAdd_B__Const) == 0x000214, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___MathFloatAdd_B__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___AimItem_Primary__Const) == 0x000218, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___AimItem_Primary__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___AimItem_Secondary__Const) == 0x000260, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___AimItem_Secondary__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___AimItem_DebugSettings__Const) == 0x0002B0, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___AimItem_DebugSettings__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___RigUnit_AlphaInterp_1_InRange__Const) == 0x000320, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___RigUnit_AlphaInterp_1_InRange__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___RigUnit_AlphaInterp_1_InterpSpeedIncreasing__Const) == 0x000328, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___RigUnit_AlphaInterp_1_InterpSpeedIncreasing__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___AimItem_1_Primary__Const) == 0x000330, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___AimItem_1_Primary__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___AimItem_1_Secondary__Const) == 0x000378, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___AimItem_1_Secondary__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___RigUnit_SetTransform_Item__Const) == 0x0003C0, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___RigUnit_SetTransform_Item__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___RigUnit_SetTransform_Value__Const) == 0x0003D0, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___RigUnit_SetTransform_Value__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___MathVectorAdd_B__Const) == 0x000430, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___MathVectorAdd_B__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___MathFloatAdd_3_B__Const) == 0x000448, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___MathFloatAdd_3_B__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___RigUnit_SetTranslation_1_Item__Const) == 0x00044C, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___RigUnit_SetTranslation_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___TwoBoneIKSimplePerItem_ItemA__Const) == 0x000458, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___TwoBoneIKSimplePerItem_ItemA__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___TwoBoneIKSimplePerItem_ItemB__Const) == 0x000464, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___TwoBoneIKSimplePerItem_ItemB__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___TwoBoneIKSimplePerItem_Effector__Const) == 0x000470, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___TwoBoneIKSimplePerItem_Effector__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___TwoBoneIKSimplePerItem_PrimaryAxis__Const) == 0x0004D0, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___TwoBoneIKSimplePerItem_PrimaryAxis__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___TwoBoneIKSimplePerItem_SecondaryAxis__Const) == 0x0004E8, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___TwoBoneIKSimplePerItem_SecondaryAxis__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___RigUnit_VisualDebugVectorItemSpace_Value__Const) == 0x000500, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___RigUnit_VisualDebugVectorItemSpace_Value__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___RigUnit_VisualDebugVectorItemSpace_Mode__Const) == 0x000518, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___RigUnit_VisualDebugVectorItemSpace_Mode__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___RigUnit_VisualDebugVectorItemSpace_Color__Const) == 0x00051C, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___RigUnit_VisualDebugVectorItemSpace_Color__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___TwoBoneIKSimplePerItem_PoleVectorKind__Const) == 0x00052C, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___TwoBoneIKSimplePerItem_PoleVectorKind__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___TwoBoneIKSimplePerItem_StretchStartRatio__Const) == 0x000530, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___TwoBoneIKSimplePerItem_StretchStartRatio__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___TwoBoneIKSimplePerItem_StretchMaximumRatio__Const) == 0x000534, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___TwoBoneIKSimplePerItem_StretchMaximumRatio__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___TwoBoneIKSimplePerItem_DebugSettings__Const) == 0x000540, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___TwoBoneIKSimplePerItem_DebugSettings__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___RigUnit_SetTranslation_Item__Const) == 0x0005B0, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___RigUnit_SetTranslation_Item__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___TwoBoneIKSimplePerItem_1_ItemA__Const) == 0x0005BC, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___TwoBoneIKSimplePerItem_1_ItemA__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___TwoBoneIKSimplePerItem_1_ItemB__Const) == 0x0005C8, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___TwoBoneIKSimplePerItem_1_ItemB__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___TwoBoneIKSimplePerItem_1_Effector__Const) == 0x0005E0, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___TwoBoneIKSimplePerItem_1_Effector__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___TwoBoneIKSimplePerItem_1_PrimaryAxis__Const) == 0x000640, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___TwoBoneIKSimplePerItem_1_PrimaryAxis__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___TwoBoneIKSimplePerItem_1_SecondaryAxis__Const) == 0x000658, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___TwoBoneIKSimplePerItem_1_SecondaryAxis__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___TwoBoneIKSimplePerItem_1_PoleVectorSpace__Const) == 0x000670, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___TwoBoneIKSimplePerItem_1_PoleVectorSpace__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___TwoBoneIKSimplePerItem_1_DebugSettings__Const) == 0x000680, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___TwoBoneIKSimplePerItem_1_DebugSettings__Const' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Literal, RigVMModel___RigUnit_SetTransform_1_Item__Const) == 0x0006F0, "Member 'CR_Surv_FootIK::URigVMMemory_Literal::RigVMModel___RigUnit_SetTransform_1_Item__Const' has a wrong offset!");

// RigVMMemoryStorageGeneratorClass CR_Surv_FootIK.RigVMMemory_Work
// 0x08F8 (0x0920 - 0x0028)
class CR_Surv_FootIK::URigVMMemory_Work final : public URigVMMemoryStorage
{
public:
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_CachedIndex; // 0x0028(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_1_CachedIndex; // 0x0038(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_SetRelativeTransformForItem_CachedChild; // 0x0048(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_SetRelativeTransformForItem_CachedParent; // 0x0058(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_SetRelativeTransformForItem_1_CachedChild; // 0x0068(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_SetRelativeTransformForItem_1_CachedParent; // 0x0078(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___RigUnit_AlphaInterp_3_Result;         // 0x0088(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_1_Result;              // 0x008C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_3_Transform;     // 0x0090(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_3_CachedIndex;   // 0x00F0(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___MathFloatRemap_1_Value;               // 0x0100(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInputScaleBiasClamp>           RigVMModel___RigUnit_AlphaInterp_3_ScaleBiasClamp; // 0x0108(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___RigUnit_AlphaInterp_Result;           // 0x0118(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_Result;                  // 0x011C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_Result;                  // 0x0120(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___SphereTraceWorld_HitLocation;         // 0x0128(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathVectorAdd_1_Result;               // 0x0140(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathVectorAdd_1_A;                    // 0x0158(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathVectorAdd_2_Result;               // 0x0170(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___SphereTraceWorld_bHit;                // 0x0188(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___SphereTraceWorld_HitNormal;           // 0x0190(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_A;                       // 0x01A8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInputScaleBiasClamp>           RigVMModel___RigUnit_AlphaInterp_ScaleBiasClamp;   // 0x01B0(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_Primary__IO;                  // 0x01C0(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	float                                         RigVMModel___AimItem_Weight;                       // 0x0208(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_CachedItem;                   // 0x0210(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_PrimaryCachedSpace;           // 0x0220(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_SecondaryCachedSpace;         // 0x0230(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimItem_bIsInitialized;               // 0x0240(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___RigUnit_AlphaInterp_4_Result;         // 0x0250(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_Result;                // 0x0254(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_258[0x8];                                      // 0x0258(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_GetTransform_3_1_Transform;   // 0x0260(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_3_1_CachedIndex; // 0x02C0(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___MathFloatRemap_Value;                 // 0x02D0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInputScaleBiasClamp>           RigVMModel___RigUnit_AlphaInterp_4_ScaleBiasClamp; // 0x02D8(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___RigUnit_AlphaInterp_1_Result;         // 0x02E8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_1_Result;                // 0x02EC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_1_Result;                // 0x02F0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___SphereTraceWorld_1_HitLocation;       // 0x02F8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathVectorAdd_1_1_Result;             // 0x0310(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathVectorAdd_1_1_A;                  // 0x0328(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathVectorAdd_2_1_Result;             // 0x0340(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___SphereTraceWorld_1_bHit;              // 0x0358(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___SphereTraceWorld_1_HitNormal;         // 0x0360(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_1_A;                     // 0x0378(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInputScaleBiasClamp>           RigVMModel___RigUnit_AlphaInterp_1_ScaleBiasClamp; // 0x0380(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_1_Primary__IO;                // 0x0390(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	float                                         RigVMModel___AimItem_1_Weight;                     // 0x03D8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DC[0x4];                                      // 0x03DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_CachedItem;                 // 0x03E0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_PrimaryCachedSpace;         // 0x03F0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_SecondaryCachedSpace;       // 0x0400(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimItem_1_bIsInitialized;             // 0x0410(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_2_Transform;     // 0x0420(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_2_CachedIndex;   // 0x0480(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___MathVectorAdd_4_Result;               // 0x0490(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathVectorAdd_Result;                 // 0x04A8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathVectorAdd_A;                      // 0x04C0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_3_Result;                // 0x04D8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___RigUnit_AlphaInterp_2_Result;         // 0x04DC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMin_Result;                  // 0x04E0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMin_A;                       // 0x04E4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMin_B;                       // 0x04E8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EC[0x4];                                      // 0x04EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInputScaleBiasClamp>           RigVMModel___RigUnit_AlphaInterp_2_ScaleBiasClamp; // 0x04F0(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___MathVectorAdd_B__IO;                  // 0x0500(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_518[0x8];                                      // 0x0518(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_SetTransform_Value__IO;       // 0x0520(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_SetTransform_CachedIndex;     // 0x0580(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___MathVectorAdd_3_Result;               // 0x0590(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A8[0x8];                                      // 0x05A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_GetTransform_4_Transform;     // 0x05B0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_4_CachedIndex;   // 0x0610(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___MathVectorAdd_3_A;                    // 0x0620(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathVectorAdd_3_B__IO;                // 0x0638(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_SetTranslation_1_CachedIndex; // 0x0650(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___TwoBoneIKSimplePerItem_Effector__IO;  // 0x0660(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___RigUnit_VisualDebugVectorItemSpace_Value__IO; // 0x06C0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___TwoBoneIKSimplePerItem_CachedItemAIndex; // 0x06D8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___TwoBoneIKSimplePerItem_CachedItemBIndex; // 0x06E8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___TwoBoneIKSimplePerItem_CachedEffectorItemIndex; // 0x06F8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___TwoBoneIKSimplePerItem_CachedPoleVectorSpaceIndex; // 0x0708(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___MathVectorAdd_3_1_Result;             // 0x0718(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_4_1_Transform;   // 0x0730(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_4_1_CachedIndex; // 0x0790(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___MathVectorAdd_3_1_A;                  // 0x07A0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathVectorAdd_3_1_B__IO;              // 0x07B8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_SetTranslation_CachedIndex;   // 0x07D0(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___TwoBoneIKSimplePerItem_1_Effector__IO; // 0x07E0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_1_Transform;     // 0x0840(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_1_CachedIndex;   // 0x08A0(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___TwoBoneIKSimplePerItem_1_PoleVector;  // 0x08B0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___TwoBoneIKSimplePerItem_1_CachedItemAIndex; // 0x08C8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___TwoBoneIKSimplePerItem_1_CachedItemBIndex; // 0x08D8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___TwoBoneIKSimplePerItem_1_CachedEffectorItemIndex; // 0x08E8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___TwoBoneIKSimplePerItem_1_CachedPoleVectorSpaceIndex; // 0x08F8(0x0010)(Edit, EditConst, NonTransactional)
	class FName                                   RigVMModel___Branch_BlockToRun;                    // 0x0908(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_SetTransform_1_CachedIndex;   // 0x0910(0x0010)(Edit, EditConst, NonTransactional)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass CR_Surv_FootIK.RigVMMemory_Work", true>();
	}
	static class CR_Surv_FootIK::URigVMMemory_Work* GetDefaultObj()
	{
		return GetDefaultObjImpl<CR_Surv_FootIK::URigVMMemory_Work>();
	}
};
static_assert(alignof(CR_Surv_FootIK::URigVMMemory_Work) == 0x000010, "Wrong alignment on CR_Surv_FootIK::URigVMMemory_Work");
static_assert(sizeof(CR_Surv_FootIK::URigVMMemory_Work) == 0x000920, "Wrong size on CR_Surv_FootIK::URigVMMemory_Work");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_CachedIndex) == 0x000028, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_1_CachedIndex) == 0x000038, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___RigUnit_SetRelativeTransformForItem_CachedChild) == 0x000048, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___RigUnit_SetRelativeTransformForItem_CachedChild' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___RigUnit_SetRelativeTransformForItem_CachedParent) == 0x000058, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___RigUnit_SetRelativeTransformForItem_CachedParent' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___RigUnit_SetRelativeTransformForItem_1_CachedChild) == 0x000068, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___RigUnit_SetRelativeTransformForItem_1_CachedChild' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___RigUnit_SetRelativeTransformForItem_1_CachedParent) == 0x000078, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___RigUnit_SetRelativeTransformForItem_1_CachedParent' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___RigUnit_AlphaInterp_3_Result) == 0x000088, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___RigUnit_AlphaInterp_3_Result' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___MathFloatRemap_1_Result) == 0x00008C, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___MathFloatRemap_1_Result' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_3_Transform) == 0x000090, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_3_Transform' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_3_CachedIndex) == 0x0000F0, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_3_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___MathFloatRemap_1_Value) == 0x000100, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___MathFloatRemap_1_Value' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___RigUnit_AlphaInterp_3_ScaleBiasClamp) == 0x000108, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___RigUnit_AlphaInterp_3_ScaleBiasClamp' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___RigUnit_AlphaInterp_Result) == 0x000118, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___RigUnit_AlphaInterp_Result' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___MathFloatAdd_Result) == 0x00011C, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___MathFloatAdd_Result' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___MathFloatMul_Result) == 0x000120, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___MathFloatMul_Result' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___SphereTraceWorld_HitLocation) == 0x000128, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___SphereTraceWorld_HitLocation' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___MathVectorAdd_1_Result) == 0x000140, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___MathVectorAdd_1_Result' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___MathVectorAdd_1_A) == 0x000158, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___MathVectorAdd_1_A' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___MathVectorAdd_2_Result) == 0x000170, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___MathVectorAdd_2_Result' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___SphereTraceWorld_bHit) == 0x000188, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___SphereTraceWorld_bHit' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___SphereTraceWorld_HitNormal) == 0x000190, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___SphereTraceWorld_HitNormal' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___MathFloatMul_A) == 0x0001A8, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___MathFloatMul_A' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___RigUnit_AlphaInterp_ScaleBiasClamp) == 0x0001B0, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___RigUnit_AlphaInterp_ScaleBiasClamp' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___AimItem_Primary__IO) == 0x0001C0, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___AimItem_Primary__IO' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___AimItem_Weight) == 0x000208, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___AimItem_Weight' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___AimItem_CachedItem) == 0x000210, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___AimItem_CachedItem' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___AimItem_PrimaryCachedSpace) == 0x000220, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___AimItem_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___AimItem_SecondaryCachedSpace) == 0x000230, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___AimItem_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___AimItem_bIsInitialized) == 0x000240, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___AimItem_bIsInitialized' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___RigUnit_AlphaInterp_4_Result) == 0x000250, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___RigUnit_AlphaInterp_4_Result' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___MathFloatRemap_Result) == 0x000254, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___MathFloatRemap_Result' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_3_1_Transform) == 0x000260, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_3_1_Transform' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_3_1_CachedIndex) == 0x0002C0, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_3_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___MathFloatRemap_Value) == 0x0002D0, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___MathFloatRemap_Value' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___RigUnit_AlphaInterp_4_ScaleBiasClamp) == 0x0002D8, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___RigUnit_AlphaInterp_4_ScaleBiasClamp' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___RigUnit_AlphaInterp_1_Result) == 0x0002E8, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___RigUnit_AlphaInterp_1_Result' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___MathFloatAdd_1_Result) == 0x0002EC, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___MathFloatAdd_1_Result' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___MathFloatMul_1_Result) == 0x0002F0, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___MathFloatMul_1_Result' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___SphereTraceWorld_1_HitLocation) == 0x0002F8, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___SphereTraceWorld_1_HitLocation' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___MathVectorAdd_1_1_Result) == 0x000310, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___MathVectorAdd_1_1_Result' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___MathVectorAdd_1_1_A) == 0x000328, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___MathVectorAdd_1_1_A' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___MathVectorAdd_2_1_Result) == 0x000340, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___MathVectorAdd_2_1_Result' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___SphereTraceWorld_1_bHit) == 0x000358, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___SphereTraceWorld_1_bHit' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___SphereTraceWorld_1_HitNormal) == 0x000360, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___SphereTraceWorld_1_HitNormal' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___MathFloatMul_1_A) == 0x000378, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___MathFloatMul_1_A' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___RigUnit_AlphaInterp_1_ScaleBiasClamp) == 0x000380, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___RigUnit_AlphaInterp_1_ScaleBiasClamp' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___AimItem_1_Primary__IO) == 0x000390, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___AimItem_1_Primary__IO' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___AimItem_1_Weight) == 0x0003D8, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___AimItem_1_Weight' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___AimItem_1_CachedItem) == 0x0003E0, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___AimItem_1_CachedItem' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___AimItem_1_PrimaryCachedSpace) == 0x0003F0, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___AimItem_1_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___AimItem_1_SecondaryCachedSpace) == 0x000400, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___AimItem_1_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___AimItem_1_bIsInitialized) == 0x000410, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___AimItem_1_bIsInitialized' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_Transform) == 0x000420, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_Transform' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_CachedIndex) == 0x000480, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___MathVectorAdd_4_Result) == 0x000490, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___MathVectorAdd_4_Result' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___MathVectorAdd_Result) == 0x0004A8, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___MathVectorAdd_Result' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___MathVectorAdd_A) == 0x0004C0, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___MathVectorAdd_A' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___MathFloatAdd_3_Result) == 0x0004D8, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___MathFloatAdd_3_Result' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___RigUnit_AlphaInterp_2_Result) == 0x0004DC, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___RigUnit_AlphaInterp_2_Result' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___MathFloatMin_Result) == 0x0004E0, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___MathFloatMin_Result' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___MathFloatMin_A) == 0x0004E4, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___MathFloatMin_A' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___MathFloatMin_B) == 0x0004E8, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___MathFloatMin_B' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___RigUnit_AlphaInterp_2_ScaleBiasClamp) == 0x0004F0, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___RigUnit_AlphaInterp_2_ScaleBiasClamp' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___MathVectorAdd_B__IO) == 0x000500, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___MathVectorAdd_B__IO' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_Value__IO) == 0x000520, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_Value__IO' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_CachedIndex) == 0x000580, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___MathVectorAdd_3_Result) == 0x000590, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___MathVectorAdd_3_Result' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_4_Transform) == 0x0005B0, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_4_Transform' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_4_CachedIndex) == 0x000610, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_4_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___MathVectorAdd_3_A) == 0x000620, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___MathVectorAdd_3_A' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___MathVectorAdd_3_B__IO) == 0x000638, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___MathVectorAdd_3_B__IO' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___RigUnit_SetTranslation_1_CachedIndex) == 0x000650, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___RigUnit_SetTranslation_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___TwoBoneIKSimplePerItem_Effector__IO) == 0x000660, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___TwoBoneIKSimplePerItem_Effector__IO' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___RigUnit_VisualDebugVectorItemSpace_Value__IO) == 0x0006C0, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___RigUnit_VisualDebugVectorItemSpace_Value__IO' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___TwoBoneIKSimplePerItem_CachedItemAIndex) == 0x0006D8, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___TwoBoneIKSimplePerItem_CachedItemAIndex' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___TwoBoneIKSimplePerItem_CachedItemBIndex) == 0x0006E8, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___TwoBoneIKSimplePerItem_CachedItemBIndex' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___TwoBoneIKSimplePerItem_CachedEffectorItemIndex) == 0x0006F8, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___TwoBoneIKSimplePerItem_CachedEffectorItemIndex' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___TwoBoneIKSimplePerItem_CachedPoleVectorSpaceIndex) == 0x000708, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___TwoBoneIKSimplePerItem_CachedPoleVectorSpaceIndex' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___MathVectorAdd_3_1_Result) == 0x000718, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___MathVectorAdd_3_1_Result' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_4_1_Transform) == 0x000730, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_4_1_Transform' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_4_1_CachedIndex) == 0x000790, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_4_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___MathVectorAdd_3_1_A) == 0x0007A0, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___MathVectorAdd_3_1_A' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___MathVectorAdd_3_1_B__IO) == 0x0007B8, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___MathVectorAdd_3_1_B__IO' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___RigUnit_SetTranslation_CachedIndex) == 0x0007D0, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___RigUnit_SetTranslation_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___TwoBoneIKSimplePerItem_1_Effector__IO) == 0x0007E0, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___TwoBoneIKSimplePerItem_1_Effector__IO' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_Transform) == 0x000840, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_Transform' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_CachedIndex) == 0x0008A0, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___TwoBoneIKSimplePerItem_1_PoleVector) == 0x0008B0, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___TwoBoneIKSimplePerItem_1_PoleVector' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___TwoBoneIKSimplePerItem_1_CachedItemAIndex) == 0x0008C8, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___TwoBoneIKSimplePerItem_1_CachedItemAIndex' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___TwoBoneIKSimplePerItem_1_CachedItemBIndex) == 0x0008D8, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___TwoBoneIKSimplePerItem_1_CachedItemBIndex' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___TwoBoneIKSimplePerItem_1_CachedEffectorItemIndex) == 0x0008E8, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___TwoBoneIKSimplePerItem_1_CachedEffectorItemIndex' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___TwoBoneIKSimplePerItem_1_CachedPoleVectorSpaceIndex) == 0x0008F8, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___TwoBoneIKSimplePerItem_1_CachedPoleVectorSpaceIndex' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___Branch_BlockToRun) == 0x000908, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___Branch_BlockToRun' has a wrong offset!");
static_assert(offsetof(CR_Surv_FootIK::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_1_CachedIndex) == 0x000910, "Member 'CR_Surv_FootIK::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_1_CachedIndex' has a wrong offset!");

}

