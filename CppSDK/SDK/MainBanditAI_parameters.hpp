#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MainBanditAI

#include "Basic.hpp"

#include "DefaultItemInfo_structs.hpp"
#include "BPS_HitDecals_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "FItemInfo_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GeneralChanceByType_structs.hpp"
#include "ItemIdGenerateChance_structs.hpp"
#include "Engine_structs.hpp"
#include "BPS_HitParticles_structs.hpp"
#include "BPS_WeaponData_structs.hpp"
#include "E_Bandit_MovementMode_structs.hpp"
#include "BPE_Weapon_Type_structs.hpp"
#include "S_WeaponAccuracy_structs.hpp"


namespace SDK::Params
{

// Function mainBanditAI.mainBanditAI_C.ApplyPointDamage
// 0x0150 (0x0150 - 0x0000)
struct MainBanditAI_C_ApplyPointDamage final
{
public:
	class AActor*                                 DamagedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0008(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	const class UObject*                          ZombieObject;                                      // 0x00F0(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Param_Damage;                                      // 0x00F8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetInstigatorController_ReturnValue;      // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyPointDamage_ReturnValue;             // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyPointDamage_BaseDamage_ImplicitCast; // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainBanditAI_C_ApplyPointDamage) == 0x000008, "Wrong alignment on MainBanditAI_C_ApplyPointDamage");
static_assert(sizeof(MainBanditAI_C_ApplyPointDamage) == 0x000150, "Wrong size on MainBanditAI_C_ApplyPointDamage");
static_assert(offsetof(MainBanditAI_C_ApplyPointDamage, DamagedActor) == 0x000000, "Member 'MainBanditAI_C_ApplyPointDamage::DamagedActor' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ApplyPointDamage, HitInfo) == 0x000008, "Member 'MainBanditAI_C_ApplyPointDamage::HitInfo' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ApplyPointDamage, ZombieObject) == 0x0000F0, "Member 'MainBanditAI_C_ApplyPointDamage::ZombieObject' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ApplyPointDamage, Param_Damage) == 0x0000F8, "Member 'MainBanditAI_C_ApplyPointDamage::Param_Damage' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ApplyPointDamage, Temp_bool_Variable) == 0x000100, "Member 'MainBanditAI_C_ApplyPointDamage::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ApplyPointDamage, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000108, "Member 'MainBanditAI_C_ApplyPointDamage::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ApplyPointDamage, CallFunc_GetObjectClass_ReturnValue) == 0x000110, "Member 'MainBanditAI_C_ApplyPointDamage::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ApplyPointDamage, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000118, "Member 'MainBanditAI_C_ApplyPointDamage::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ApplyPointDamage, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000130, "Member 'MainBanditAI_C_ApplyPointDamage::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ApplyPointDamage, CallFunc_GetInstigatorController_ReturnValue) == 0x000138, "Member 'MainBanditAI_C_ApplyPointDamage::CallFunc_GetInstigatorController_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ApplyPointDamage, K2Node_Select_Default) == 0x000140, "Member 'MainBanditAI_C_ApplyPointDamage::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ApplyPointDamage, CallFunc_ApplyPointDamage_ReturnValue) == 0x000148, "Member 'MainBanditAI_C_ApplyPointDamage::CallFunc_ApplyPointDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ApplyPointDamage, CallFunc_ApplyPointDamage_BaseDamage_ImplicitCast) == 0x00014C, "Member 'MainBanditAI_C_ApplyPointDamage::CallFunc_ApplyPointDamage_BaseDamage_ImplicitCast' has a wrong offset!");

// Function mainBanditAI.mainBanditAI_C.Bandit_Shoot(SERV)
// 0x0028 (0x0028 - 0x0000)
struct MainBanditAI_C_Bandit_Shoot_SERV_ final
{
public:
	bool                                          Target_;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Actor;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainBanditAI_C_Bandit_Shoot_SERV_) == 0x000008, "Wrong alignment on MainBanditAI_C_Bandit_Shoot_SERV_");
static_assert(sizeof(MainBanditAI_C_Bandit_Shoot_SERV_) == 0x000028, "Wrong size on MainBanditAI_C_Bandit_Shoot_SERV_");
static_assert(offsetof(MainBanditAI_C_Bandit_Shoot_SERV_, Target_) == 0x000000, "Member 'MainBanditAI_C_Bandit_Shoot_SERV_::Target_' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_Bandit_Shoot_SERV_, Actor) == 0x000008, "Member 'MainBanditAI_C_Bandit_Shoot_SERV_::Actor' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_Bandit_Shoot_SERV_, Location) == 0x000010, "Member 'MainBanditAI_C_Bandit_Shoot_SERV_::Location' has a wrong offset!");

// Function mainBanditAI.mainBanditAI_C.DelayDecalSpawn
// 0x0048 (0x0048 - 0x0000)
struct MainBanditAI_C_DelayDecalSpawn final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Forward;                                           // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     DecalMaterial;                                     // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         ActorsToIgnore;                                    // 0x0038(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(MainBanditAI_C_DelayDecalSpawn) == 0x000008, "Wrong alignment on MainBanditAI_C_DelayDecalSpawn");
static_assert(sizeof(MainBanditAI_C_DelayDecalSpawn) == 0x000048, "Wrong size on MainBanditAI_C_DelayDecalSpawn");
static_assert(offsetof(MainBanditAI_C_DelayDecalSpawn, Location) == 0x000000, "Member 'MainBanditAI_C_DelayDecalSpawn::Location' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_DelayDecalSpawn, Forward) == 0x000018, "Member 'MainBanditAI_C_DelayDecalSpawn::Forward' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_DelayDecalSpawn, DecalMaterial) == 0x000030, "Member 'MainBanditAI_C_DelayDecalSpawn::DecalMaterial' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_DelayDecalSpawn, ActorsToIgnore) == 0x000038, "Member 'MainBanditAI_C_DelayDecalSpawn::ActorsToIgnore' has a wrong offset!");

// Function mainBanditAI.mainBanditAI_C.ExecuteUbergraph_mainBanditAI
// 0x1268 (0x1268 - 0x0000)
struct MainBanditAI_C_ExecuteUbergraph_mainBanditAI final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x006C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_Weapon_Type                              Temp_byte_Variable;                                // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Temp_object_Variable;                              // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_1;                            // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_2;                            // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_3;                            // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_4;                            // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_5;                            // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_6;                            // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EBPE_Weapon_Type                              Temp_byte_Variable_1;                              // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Temp_object_Variable_7;                            // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_8;                            // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_9;                            // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_10;                           // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_11;                           // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_12;                           // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_13;                           // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EBPE_Weapon_Type                              Temp_byte_Variable_2;                              // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Temp_object_Variable_14;                           // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_15;                           // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_16;                           // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_17;                           // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_18;                           // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_19;                           // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_20;                           // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EBPE_Weapon_Type                              Temp_byte_Variable_3;                              // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Temp_object_Variable_21;                           // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_22;                           // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_23;                           // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_24;                           // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_25;                           // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_26;                           // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_27;                           // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_28;                           // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x019A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x019B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19D[0x3];                                      // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_1;                              // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_10;                  // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x01B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x01B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Target_;                        // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Actor;                          // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location_1;                     // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage;                               // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      K2Node_Event_DamageType;                           // 0x01E8(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitLocation;                          // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_HitComponent;                         // 0x0220(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_BoneName;                             // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_ShotFromDirection;                    // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo;                              // 0x0258(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341[0x7];                                      // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0348(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetHitAngle_HitAngle;                     // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0360(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0368(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x0380(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_389[0x7];                                      // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0390(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_PickDamageAnimByBone_DamageAnim;          // 0x03A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_5;            // 0x03B8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_Weapon_Type                              Temp_byte_Variable_4;                              // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D9[0x7];                                      // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_2;                              // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_Weapon_Type                              Temp_byte_Variable_5;                              // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x03E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EA[0x6];                                      // 0x03EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x03F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F9[0x7];                                      // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0400(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0418(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0430(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0448(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance2D_ReturnValue;            // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0468(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_481[0x7];                                      // 0x0481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0488(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x04A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x04BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C4[0x4];                                      // 0x04C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x04C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_1;         // 0x04D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_2;         // 0x04D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x04D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x04D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D5[0x3];                                      // 0x04D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_11;                  // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E1[0x7];                                      // 0x04E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_3;                              // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x04F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F4[0x4];                                      // 0x04F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Target;                         // 0x04F8(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqualExactly_VectorVector_ReturnValue; // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_511[0x3];                                      // 0x0511(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_6;            // 0x0514(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_524[0x4];                                      // 0x0524(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0528(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0530(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0534(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x053C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_1; // 0x053D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_2; // 0x053E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x053F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0541(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_542[0x6];                                      // 0x0542(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_4;                              // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0550(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_WeaponTrace_HitActor;                     // 0x0560(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_WeaponTrace_OutputHit;                    // 0x0568(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_WeaponTrace_ReturnValue;                  // 0x0650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_651[0x3];                                      // 0x0651(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0654(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_WeaponAccuracy                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x065C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0668(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0669(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66A[0x2];                                      // 0x066A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_12;                  // 0x066C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_674[0x4];                                      // 0x0674(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_5;                              // 0x0678(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_6;                              // 0x0680(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_7;                              // 0x0688(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0690(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0691(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_692[0x6];                                      // 0x0692(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_8;                              // 0x0698(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x06A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A1[0x7];                                      // 0x06A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x06A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x06B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B1[0x7];                                      // 0x06B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_9;                              // 0x06B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_Weapon_Type                              Temp_byte_Variable_6;                              // 0x06C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_3;               // 0x06C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x06C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C3[0x5];                                      // 0x06C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1; // 0x06C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x06D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D1[0x7];                                      // 0x06D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_SpreadPitchMin;                 // 0x06D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_SpreadPitchMax;                 // 0x06E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_SpreadYawMin;                   // 0x06E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_SpreadYawMax;                   // 0x06F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_WeaponTrace_HitActor_1;                   // 0x06F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_WeaponTrace_OutputHit_1;                  // 0x0700(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_WeaponTrace_ReturnValue_1;                // 0x07E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x07E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7EA[0x6];                                      // 0x07EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Temp_object_Variable_29;                           // 0x07F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x07F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x07FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_30;                           // 0x0800(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue_1;               // 0x0808(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_80C[0x4];                                      // 0x080C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Temp_object_Variable_31;                           // 0x0810(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 K2Node_CustomEvent_Mesh;                           // 0x0818(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_InBlendOutTime;                 // 0x0820(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_CustomEvent_Montage;                        // 0x0828(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_2;            // 0x0830(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_32;                           // 0x0838(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_33;                           // 0x0840(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_34;                           // 0x0848(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_3;                     // 0x0850(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_851[0x7];                                      // 0x0851(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Temp_object_Variable_35;                           // 0x0858(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_3;            // 0x0860(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Montage_IsPlaying_ReturnValue;            // 0x0868(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_869[0x7];                                      // 0x0869(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_4;            // 0x0870(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Montage_IsPlaying_ReturnValue_1;          // 0x0878(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0879(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x087A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x087B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_Weapon_Type                              Temp_byte_Variable_7;                              // 0x087C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87D[0x3];                                      // 0x087D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0880(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0888(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0890(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0891(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0892(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0893(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x0894(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0895(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x0896(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_897[0x1];                                      // 0x0897(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0898(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x089C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x08A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_Select_Default;                             // 0x08B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_10;                             // 0x08C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x08C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x08D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_2;                           // 0x08D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_3;                           // 0x08E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_11;                             // 0x08E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x08F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x08F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8F2[0x6];                                      // 0x08F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_12;                             // 0x08F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_3; // 0x0900(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_901[0x7];                                      // 0x0901(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_5;        // 0x0908(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_7;            // 0x0920(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0930(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0938(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0940(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_WeaponTrace_HitActor_2;                   // 0x0948(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_WeaponTrace_OutputHit_2;                  // 0x0950(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_WeaponTrace_ReturnValue_2;                // 0x0A38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A39[0x7];                                      // 0x0A39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue_3;         // 0x0A40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0A48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0A50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x0A58(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Forward;                        // 0x0A70(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_CustomEvent_DecalMaterial;                  // 0x0A88(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_CustomEvent_ActorsToIgnore;                 // 0x0A90(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0AA0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDecalDelaySpawner_C*                   CallFunc_SpawnObject_ReturnValue;                  // 0x0AB8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0AC0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_13;                             // 0x0AD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0AE0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0AF8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0BE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_Weapon_Type                              Temp_byte_Variable_8;                              // 0x0BE1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0BE2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0BE3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0BE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0BE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BEC[0x4];                                      // 0x0BEC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0BF0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0C08(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0C20(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0C38(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0C50(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0C58(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0C60(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0C68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0C70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0C78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0C7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0C80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C84[0x4];                                      // 0x0C84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0C88(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0CA0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0CB8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_4;                           // 0x0CD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue_1;       // 0x0CD8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0CF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_CustomEvent_HitResult;                      // 0x0CF8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Temp_bool_Has_Been_Initd_Variable_4;               // 0x0DE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DE1[0x7];                                      // 0x0DE1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UChildActorComponent*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x0DE8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_6;        // 0x0DF0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0E08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E09[0x7];                                      // 0x0E09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_7;        // 0x0E10(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player_1;            // 0x0E28(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0E30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E31[0x3];                                      // 0x0E31(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_2;                              // 0x0E34(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_5;                   // 0x0E3C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_8;            // 0x0E44(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_6;                   // 0x0E54(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_7;                   // 0x0E5C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_9;            // 0x0E64(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_4; // 0x0E74(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E75[0x3];                                      // 0x0E75(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_13;                  // 0x0E78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_4;                     // 0x0E80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E81[0x3];                                      // 0x0E81(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_10;           // 0x0E84(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0E94(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E95[0x3];                                      // 0x0E95(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_5;            // 0x0E98(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Montage_IsPlaying_ReturnValue_2;          // 0x0EA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x0EA1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x0EA2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_9;                // 0x0EA3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EA4[0x4];                                      // 0x0EA4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_6;            // 0x0EA8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFalling_ReturnValue_1;                  // 0x0EB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Montage_IsPlaying_ReturnValue_3;          // 0x0EB1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_10;               // 0x0EB2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_11;               // 0x0EB3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_12;               // 0x0EB4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_13;               // 0x0EB5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0EB6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0EB7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0EB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0EB9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x0EBA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x0EBB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x0EBC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x0EBD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_11;                // 0x0EBE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_12;                // 0x0EBF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_11;           // 0x0EC0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0ED0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0EE8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_8;                   // 0x0F00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue_1;         // 0x0F08(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_Select_Default_5;                           // 0x0F20(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0F38(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_12;           // 0x0F40(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0F50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0F54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_14;                  // 0x0F58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0F60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F61[0x3];                                      // 0x0F61(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0F64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_PlayEventWithOcclusion_FMODAudioComponent; // 0x0F68(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x0F70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0F71(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F72[0x6];                                      // 0x0F72(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x0F78(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue_1;     // 0x0F90(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_2;          // 0x0F98(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue_2;     // 0x0FB0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_3;          // 0x0FB8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue_3;     // 0x0FD0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_13;           // 0x0FD8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2; // 0x0FE8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0FF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FF1[0x3];                                      // 0x0FF1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_1;            // 0x0FF4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FFC[0x4];                                      // 0x0FFC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue_1;              // 0x1000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValueAsBool_ReturnValue;               // 0x1008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1009[0x7];                                     // 0x1009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x1010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_PlayerNamePlate_C*                   K2Node_DynamicCast_AsW_Player_Name_Plate;          // 0x1018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x1020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Show;                           // 0x1021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1022[0x6];                                     // 0x1022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_4;          // 0x1028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x1040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x1058(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_WasRecentlyRendered_ReturnValue;          // 0x1140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1141[0x7];                                     // 0x1141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Select_Default_6;                           // 0x1148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_Select_Default_7;                           // 0x1150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_Select_Default_8;                           // 0x1158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_Select_Default_9;                           // 0x1160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_Select_Default_10;                          // 0x1168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_Select_Default_11;                          // 0x1170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x1178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_117C[0x4];                                     // 0x117C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Select_Default_12;                          // 0x1180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x1188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_5;               // 0x1190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1191[0x7];                                     // 0x1191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODAudioComponent*                    CallFunc_PlayEventWithOcclusion_FMODAudioComponent_1; // 0x1198(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x11A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A1[0x3];                                     // 0x11A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_9;                   // 0x11A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_5;                     // 0x11AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11AD[0x3];                                     // 0x11AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_14;           // 0x11B0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x11C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C1[0x3];                                     // 0x11C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_15;           // 0x11C4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11D4[0x4];                                     // 0x11D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x11D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_InRange_FloatFloat_Value_ImplicitCast;    // 0x11E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_InRange_FloatFloat_Value_ImplicitCast_1;  // 0x11E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_InRange_FloatFloat_Value_ImplicitCast_2;  // 0x11F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_NewEnumerator1_ImplicitCast;         // 0x11F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_NewEnumerator2_ImplicitCast;         // 0x1200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_NewEnumerator3_ImplicitCast;         // 0x1208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_NewEnumerator4_ImplicitCast;         // 0x1210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_NewEnumerator5_ImplicitCast;         // 0x1218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_NewEnumerator0_ImplicitCast;         // 0x1220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_NewEnumerator1_ImplicitCast_1;       // 0x1228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_NewEnumerator2_ImplicitCast_1;       // 0x1230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_NewEnumerator3_ImplicitCast_1;       // 0x1238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_NewEnumerator4_ImplicitCast_1;       // 0x1240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_NewEnumerator5_ImplicitCast_1;       // 0x1248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Stop_InBlendOutTime_ImplicitCast; // 0x1250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeNoise_MaxRange_ImplicitCast;          // 0x1254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x1258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x1260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetParameter_Value_ImplicitCast;          // 0x1264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI) == 0x000008, "Wrong alignment on MainBanditAI_C_ExecuteUbergraph_mainBanditAI");
static_assert(sizeof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI) == 0x001268, "Wrong size on MainBanditAI_C_ExecuteUbergraph_mainBanditAI");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, EntryPoint) == 0x000000, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::EntryPoint' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CustomEvent_NotifyName_4) == 0x000004, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CustomEvent_NotifyName_3) == 0x00001C, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CustomEvent_NotifyName_2) == 0x000034, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CreateDelegate_OutputDelegate_2) == 0x00003C, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CustomEvent_NotifyName_1) == 0x00004C, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CreateDelegate_OutputDelegate_3) == 0x000054, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CustomEvent_NotifyName) == 0x000064, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CreateDelegate_OutputDelegate_4) == 0x00006C, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_name_Variable) == 0x00007C, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_byte_Variable) == 0x000084, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_object_Variable) == 0x000088, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_object_Variable_1) == 0x000090, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_object_Variable_2) == 0x000098, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_object_Variable_3) == 0x0000A0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_object_Variable_4) == 0x0000A8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_object_Variable_5) == 0x0000B0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_object_Variable_6) == 0x0000B8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_byte_Variable_1) == 0x0000C0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_object_Variable_7) == 0x0000C8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_object_Variable_8) == 0x0000D0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_object_Variable_9) == 0x0000D8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_object_Variable_10) == 0x0000E0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_object_Variable_11) == 0x0000E8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_object_Variable_12) == 0x0000F0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_object_Variable_13) == 0x0000F8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_byte_Variable_2) == 0x000100, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_object_Variable_14) == 0x000108, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_object_Variable_15) == 0x000110, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_object_Variable_16) == 0x000118, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_object_Variable_17) == 0x000120, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_object_Variable_18) == 0x000128, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_object_Variable_19) == 0x000130, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_object_Variable_20) == 0x000138, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_byte_Variable_3) == 0x000140, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_object_Variable_21) == 0x000148, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_object_Variable_21' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_object_Variable_22) == 0x000150, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_object_Variable_22' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_object_Variable_23) == 0x000158, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_object_Variable_23' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_object_Variable_24) == 0x000160, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_object_Variable_24' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_object_Variable_25) == 0x000168, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_object_Variable_25' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_object_Variable_26) == 0x000170, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_object_Variable_26' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_object_Variable_27) == 0x000178, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_object_Variable_27' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CustomEvent_Loaded) == 0x000180, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_object_Variable_28) == 0x000188, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_object_Variable_28' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_DynamicCast_AsAnim_Montage) == 0x000190, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_DynamicCast_bSuccess) == 0x000198, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_bool_Has_Been_Initd_Variable) == 0x000199, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_bool_IsClosed_Variable) == 0x00019A, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_bool_IsClosed_Variable_1) == 0x00019B, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_bool_Has_Been_Initd_Variable_1) == 0x00019C, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_name_Variable_1) == 0x0001A0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CustomEvent_NotifyName_10) == 0x0001A8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CustomEvent_NotifyName_10' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x0001B0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_HasAuthority_ReturnValue) == 0x0001B1, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_bool_Has_Been_Initd_Variable_2) == 0x0001B2, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_HasAuthority_ReturnValue_1) == 0x0001B3, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_Event_DeltaSeconds) == 0x0001B4, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CustomEvent_Target_) == 0x0001B8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CustomEvent_Target_' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CustomEvent_Actor) == 0x0001C0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CustomEvent_Actor' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CustomEvent_Location_1) == 0x0001C8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CustomEvent_Location_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_Event_Damage) == 0x0001E0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_Event_DamageType) == 0x0001E8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_Event_HitLocation) == 0x0001F0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_Event_HitNormal) == 0x000208, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_Event_HitComponent) == 0x000220, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_Event_HitComponent' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_Event_BoneName) == 0x000228, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_Event_BoneName' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_Event_ShotFromDirection) == 0x000230, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_Event_ShotFromDirection' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_Event_InstigatedBy) == 0x000248, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_Event_DamageCauser) == 0x000250, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_Event_HitInfo) == 0x000258, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_Event_HitInfo' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000340, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_DynamicCast_AsSurvival_Player) == 0x000348, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_DynamicCast_bSuccess_1) == 0x000350, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_GetHitAngle_HitAngle) == 0x000358, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_GetHitAngle_HitAngle' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_K2_GetPawn_ReturnValue) == 0x000360, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000368, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_K2_GetPawn_ReturnValue_1) == 0x000380, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000388, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000390, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_PickDamageAnimByBone_DamageAnim) == 0x0003A8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_PickDamageAnimByBone_DamageAnim' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_real_Variable) == 0x0003B0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CreateDelegate_OutputDelegate_5) == 0x0003B8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_real_Variable_1) == 0x0003C8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0003D0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_byte_Variable_4) == 0x0003D8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_real_Variable_2) == 0x0003E0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_byte_Variable_5) == 0x0003E8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_bool_Variable) == 0x0003E9, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_GetAnimInstance_ReturnValue) == 0x0003F0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_bool_IsClosed_Variable_2) == 0x0003F8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000400, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000418, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000430, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000448, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Vector_Distance2D_ReturnValue) == 0x000460, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Vector_Distance2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Normal_ReturnValue) == 0x000468, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000480, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000488, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x0004A0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_BreakRotator_Roll) == 0x0004B8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_BreakRotator_Pitch) == 0x0004BC, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_BreakRotator_Yaw) == 0x0004C0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_GetAnimInstance_ReturnValue_1) == 0x0004C8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_InRange_FloatFloat_ReturnValue) == 0x0004D0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_InRange_FloatFloat_ReturnValue_1) == 0x0004D1, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_InRange_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_InRange_FloatFloat_ReturnValue_2) == 0x0004D2, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_InRange_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_bool_Variable_1) == 0x0004D3, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_bool_Variable_2) == 0x0004D4, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CustomEvent_NotifyName_11) == 0x0004D8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CustomEvent_NotifyName_11' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_bool_Variable_3) == 0x0004E0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_real_Variable_3) == 0x0004E8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_int_Variable) == 0x0004F0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CustomEvent_Target) == 0x0004F8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CustomEvent_Target' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_NotEqualExactly_VectorVector_ReturnValue) == 0x000510, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_NotEqualExactly_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CreateDelegate_OutputDelegate_6) == 0x000514, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_GetBlackboard_ReturnValue) == 0x000528, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Add_IntInt_ReturnValue) == 0x000530, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_MakeLiteralName_ReturnValue) == 0x000534, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Greater_IntInt_ReturnValue) == 0x00053C, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_1) == 0x00053D, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_2) == 0x00053E, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00053F, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000540, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_BooleanOR_ReturnValue) == 0x000541, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_real_Variable_4) == 0x000548, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000550, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_WeaponTrace_HitActor) == 0x000560, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_WeaponTrace_HitActor' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_WeaponTrace_OutputHit) == 0x000568, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_WeaponTrace_OutputHit' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_WeaponTrace_ReturnValue) == 0x000650, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_WeaponTrace_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Conv_StringToName_ReturnValue) == 0x000654, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_GetDataTableRowFromName_OutRow) == 0x00065C, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000668, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_SwitchEnum_CmpSuccess) == 0x000669, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CustomEvent_NotifyName_12) == 0x00066C, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CustomEvent_NotifyName_12' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_real_Variable_5) == 0x000678, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_real_Variable_6) == 0x000680, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_real_Variable_6' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_real_Variable_7) == 0x000688, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_real_Variable_7' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Not_PreBool_ReturnValue) == 0x000690, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Not_PreBool_ReturnValue_1) == 0x000691, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_real_Variable_8) == 0x000698, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_real_Variable_8' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_BooleanAND_ReturnValue) == 0x0006A0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x0006A8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_IsValid_ReturnValue) == 0x0006B0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_real_Variable_9) == 0x0006B8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_real_Variable_9' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_byte_Variable_6) == 0x0006C0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_bool_Has_Been_Initd_Variable_3) == 0x0006C1, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_bool_Has_Been_Initd_Variable_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0006C2, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1) == 0x0006C8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_IsValid_ReturnValue_1) == 0x0006D0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CustomEvent_SpreadPitchMin) == 0x0006D8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CustomEvent_SpreadPitchMin' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CustomEvent_SpreadPitchMax) == 0x0006E0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CustomEvent_SpreadPitchMax' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CustomEvent_SpreadYawMin) == 0x0006E8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CustomEvent_SpreadYawMin' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CustomEvent_SpreadYawMax) == 0x0006F0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CustomEvent_SpreadYawMax' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_WeaponTrace_HitActor_1) == 0x0006F8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_WeaponTrace_HitActor_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_WeaponTrace_OutputHit_1) == 0x000700, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_WeaponTrace_OutputHit_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_WeaponTrace_ReturnValue_1) == 0x0007E8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_WeaponTrace_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_IsValid_ReturnValue_2) == 0x0007E9, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_object_Variable_29) == 0x0007F0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_object_Variable_29' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Array_Find_ReturnValue) == 0x0007F8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Montage_Play_ReturnValue) == 0x0007FC, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_object_Variable_30) == 0x000800, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_object_Variable_30' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Montage_Play_ReturnValue_1) == 0x000808, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Montage_Play_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_object_Variable_31) == 0x000810, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_object_Variable_31' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CustomEvent_Mesh) == 0x000818, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CustomEvent_Mesh' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CustomEvent_InBlendOutTime) == 0x000820, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CustomEvent_InBlendOutTime' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CustomEvent_Montage) == 0x000828, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CustomEvent_Montage' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_GetAnimInstance_ReturnValue_2) == 0x000830, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_GetAnimInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_object_Variable_32) == 0x000838, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_object_Variable_32' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_object_Variable_33) == 0x000840, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_object_Variable_33' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_object_Variable_34) == 0x000848, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_object_Variable_34' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_bool_IsClosed_Variable_3) == 0x000850, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_bool_IsClosed_Variable_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_object_Variable_35) == 0x000858, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_object_Variable_35' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_GetAnimInstance_ReturnValue_3) == 0x000860, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_GetAnimInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Montage_IsPlaying_ReturnValue) == 0x000868, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Montage_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_GetAnimInstance_ReturnValue_4) == 0x000870, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_GetAnimInstance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Montage_IsPlaying_ReturnValue_1) == 0x000878, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Montage_IsPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Not_PreBool_ReturnValue_2) == 0x000879, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_BooleanOR_ReturnValue_1) == 0x00087A, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Not_PreBool_ReturnValue_3) == 0x00087B, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_byte_Variable_7) == 0x00087C, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_RandomFloatInRange_ReturnValue) == 0x000880, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000888, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000890, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Not_PreBool_ReturnValue_4) == 0x000891, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000892, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_BooleanOR_ReturnValue_2) == 0x000893, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Not_PreBool_ReturnValue_5) == 0x000894, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_BooleanAND_ReturnValue_1) == 0x000895, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Not_PreBool_ReturnValue_6) == 0x000896, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Add_IntInt_ReturnValue_1) == 0x000898, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Subtract_IntInt_ReturnValue) == 0x00089C, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x0008A0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_Select_Default) == 0x0008B8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_real_Variable_10) == 0x0008C0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_real_Variable_10' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_Select_Default_1) == 0x0008C8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x0008D0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_Select_Default_2) == 0x0008D8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_Select_Default_3) == 0x0008E0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_real_Variable_11) == 0x0008E8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_real_Variable_11' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Not_PreBool_ReturnValue_7) == 0x0008F0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_BooleanAND_ReturnValue_2) == 0x0008F1, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_real_Variable_12) == 0x0008F8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_real_Variable_12' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_3) == 0x000900, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_K2_GetActorLocation_ReturnValue_5) == 0x000908, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_K2_GetActorLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CreateDelegate_OutputDelegate_7) == 0x000920, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Vector_Distance_ReturnValue) == 0x000930, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_MapRangeClamped_ReturnValue) == 0x000938, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000940, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_WeaponTrace_HitActor_2) == 0x000948, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_WeaponTrace_HitActor_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_WeaponTrace_OutputHit_2) == 0x000950, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_WeaponTrace_OutputHit_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_WeaponTrace_ReturnValue_2) == 0x000A38, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_WeaponTrace_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_RandomFloatInRange_ReturnValue_3) == 0x000A40, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_RandomFloatInRange_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000A48, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000A50, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CustomEvent_Location) == 0x000A58, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CustomEvent_Forward) == 0x000A70, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CustomEvent_Forward' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CustomEvent_DecalMaterial) == 0x000A88, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CustomEvent_DecalMaterial' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CustomEvent_ActorsToIgnore) == 0x000A90, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CustomEvent_ActorsToIgnore' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000AA0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_SpawnObject_ReturnValue) == 0x000AB8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000AC0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_real_Variable_13) == 0x000AD8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_real_Variable_13' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000AE0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_LineTraceSingle_OutHit) == 0x000AF8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_LineTraceSingle_ReturnValue) == 0x000BE0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_byte_Variable_8) == 0x000BE1, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_BreakHitResult_bBlockingHit) == 0x000BE2, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_BreakHitResult_bInitialOverlap) == 0x000BE3, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_BreakHitResult_Time) == 0x000BE4, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_BreakHitResult_Distance) == 0x000BE8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_BreakHitResult_Location) == 0x000BF0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_BreakHitResult_ImpactPoint) == 0x000C08, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_BreakHitResult_Normal) == 0x000C20, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_BreakHitResult_ImpactNormal) == 0x000C38, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_BreakHitResult_PhysMat) == 0x000C50, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_BreakHitResult_HitActor) == 0x000C58, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_BreakHitResult_HitComponent) == 0x000C60, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_BreakHitResult_HitBoneName) == 0x000C68, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_BreakHitResult_BoneName) == 0x000C70, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_BreakHitResult_HitItem) == 0x000C78, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_BreakHitResult_ElementIndex) == 0x000C7C, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_BreakHitResult_FaceIndex) == 0x000C80, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_BreakHitResult_TraceStart) == 0x000C88, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_BreakHitResult_TraceEnd) == 0x000CA0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000CB8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_Select_Default_4) == 0x000CD0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Conv_VectorToRotator_ReturnValue_1) == 0x000CD8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Conv_VectorToRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000CF0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CustomEvent_HitResult) == 0x000CF8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CustomEvent_HitResult' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_bool_Has_Been_Initd_Variable_4) == 0x000DE0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_bool_Has_Been_Initd_Variable_4' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_GetComponentByClass_ReturnValue) == 0x000DE8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_K2_GetActorLocation_ReturnValue_6) == 0x000DF0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_K2_GetActorLocation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_IsValid_ReturnValue_3) == 0x000E08, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_K2_GetActorLocation_ReturnValue_7) == 0x000E10, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_K2_GetActorLocation_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_DynamicCast_AsSurvival_Player_1) == 0x000E28, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_DynamicCast_AsSurvival_Player_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_DynamicCast_bSuccess_2) == 0x000E30, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_name_Variable_2) == 0x000E34, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CustomEvent_NotifyName_5) == 0x000E3C, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CustomEvent_NotifyName_5' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CreateDelegate_OutputDelegate_8) == 0x000E44, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CustomEvent_NotifyName_6) == 0x000E54, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CustomEvent_NotifyName_6' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CustomEvent_NotifyName_7) == 0x000E5C, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CustomEvent_NotifyName_7' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CreateDelegate_OutputDelegate_9) == 0x000E64, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_4) == 0x000E74, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_4' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CustomEvent_NotifyName_13) == 0x000E78, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CustomEvent_NotifyName_13' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_bool_IsClosed_Variable_4) == 0x000E80, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_bool_IsClosed_Variable_4' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CreateDelegate_OutputDelegate_10) == 0x000E84, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_HasAuthority_ReturnValue_2) == 0x000E94, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_GetAnimInstance_ReturnValue_5) == 0x000E98, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_GetAnimInstance_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Montage_IsPlaying_ReturnValue_2) == 0x000EA0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Montage_IsPlaying_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_IsFalling_ReturnValue) == 0x000EA1, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Not_PreBool_ReturnValue_8) == 0x000EA2, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Not_PreBool_ReturnValue_9) == 0x000EA3, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Not_PreBool_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_GetAnimInstance_ReturnValue_6) == 0x000EA8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_GetAnimInstance_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_IsFalling_ReturnValue_1) == 0x000EB0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_IsFalling_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Montage_IsPlaying_ReturnValue_3) == 0x000EB1, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Montage_IsPlaying_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Not_PreBool_ReturnValue_10) == 0x000EB2, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Not_PreBool_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Not_PreBool_ReturnValue_11) == 0x000EB3, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Not_PreBool_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Not_PreBool_ReturnValue_12) == 0x000EB4, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Not_PreBool_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Not_PreBool_ReturnValue_13) == 0x000EB5, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Not_PreBool_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_BooleanAND_ReturnValue_3) == 0x000EB6, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_BooleanAND_ReturnValue_4) == 0x000EB7, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_BooleanAND_ReturnValue_5) == 0x000EB8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_BooleanAND_ReturnValue_6) == 0x000EB9, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_BooleanAND_ReturnValue_7) == 0x000EBA, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_BooleanAND_ReturnValue_8) == 0x000EBB, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_BooleanAND_ReturnValue_9) == 0x000EBC, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_BooleanAND_ReturnValue_10) == 0x000EBD, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_BooleanAND_ReturnValue_11) == 0x000EBE, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_BooleanAND_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_BooleanAND_ReturnValue_12) == 0x000EBF, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_BooleanAND_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CreateDelegate_OutputDelegate_11) == 0x000EC0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_GetSocketLocation_ReturnValue) == 0x000ED0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_FindLookAtRotation_ReturnValue) == 0x000EE8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CustomEvent_NotifyName_8) == 0x000F00, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CustomEvent_NotifyName_8' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_FindLookAtRotation_ReturnValue_1) == 0x000F08, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_FindLookAtRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_Select_Default_5) == 0x000F20, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000F38, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CreateDelegate_OutputDelegate_12) == 0x000F40, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_int_Variable_1) == 0x000F50, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_int_Variable_2) == 0x000F54, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CustomEvent_NotifyName_14) == 0x000F58, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CustomEvent_NotifyName_14' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000F60, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Add_IntInt_ReturnValue_2) == 0x000F64, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_PlayEventWithOcclusion_FMODAudioComponent) == 0x000F68, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_PlayEventWithOcclusion_FMODAudioComponent' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_HasAuthority_ReturnValue_3) == 0x000F70, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_IsValid_ReturnValue_4) == 0x000F71, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_GetSocketLocation_ReturnValue_1) == 0x000F78, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_SpawnEmitterAtLocation_ReturnValue_1) == 0x000F90, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_SpawnEmitterAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_GetSocketLocation_ReturnValue_2) == 0x000F98, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_GetSocketLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_SpawnEmitterAtLocation_ReturnValue_2) == 0x000FB0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_SpawnEmitterAtLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_GetSocketLocation_ReturnValue_3) == 0x000FB8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_GetSocketLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_SpawnEmitterAtLocation_ReturnValue_3) == 0x000FD0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_SpawnEmitterAtLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CreateDelegate_OutputDelegate_13) == 0x000FD8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2) == 0x000FE8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_IsValid_ReturnValue_5) == 0x000FF0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_MakeLiteralName_ReturnValue_1) == 0x000FF4, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_MakeLiteralName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_GetBlackboard_ReturnValue_1) == 0x001000, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_GetBlackboard_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_GetValueAsBool_ReturnValue) == 0x001008, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_GetValueAsBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_GetUserWidgetObject_ReturnValue) == 0x001010, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_DynamicCast_AsW_Player_Name_Plate) == 0x001018, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_DynamicCast_AsW_Player_Name_Plate' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_DynamicCast_bSuccess_3) == 0x001020, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CustomEvent_Show) == 0x001021, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CustomEvent_Show' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_GetSocketLocation_ReturnValue_4) == 0x001028, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_GetSocketLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Add_VectorVector_ReturnValue) == 0x001040, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x001058, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_WasRecentlyRendered_ReturnValue) == 0x001140, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_WasRecentlyRendered_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_Select_Default_6) == 0x001148, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_Select_Default_7) == 0x001150, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_Select_Default_8) == 0x001158, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_Select_Default_9) == 0x001160, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_Select_Default_10) == 0x001168, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_Select_Default_11) == 0x001170, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_RandomIntegerInRange_ReturnValue) == 0x001178, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_Select_Default_12) == 0x001180, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_Select_Default_12' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Conv_IntToDouble_ReturnValue) == 0x001188, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_bool_Has_Been_Initd_Variable_5) == 0x001190, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_bool_Has_Been_Initd_Variable_5' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_PlayEventWithOcclusion_FMODAudioComponent_1) == 0x001198, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_PlayEventWithOcclusion_FMODAudioComponent_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_IsValid_ReturnValue_6) == 0x0011A0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CustomEvent_NotifyName_9) == 0x0011A4, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CustomEvent_NotifyName_9' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, Temp_bool_IsClosed_Variable_5) == 0x0011AC, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::Temp_bool_IsClosed_Variable_5' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CreateDelegate_OutputDelegate_14) == 0x0011B0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0011C0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_CreateDelegate_OutputDelegate_15) == 0x0011C4, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x0011D8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_InRange_FloatFloat_Value_ImplicitCast) == 0x0011E0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_InRange_FloatFloat_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_InRange_FloatFloat_Value_ImplicitCast_1) == 0x0011E8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_InRange_FloatFloat_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_InRange_FloatFloat_Value_ImplicitCast_2) == 0x0011F0, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_InRange_FloatFloat_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_Select_NewEnumerator1_ImplicitCast) == 0x0011F8, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_Select_NewEnumerator1_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_Select_NewEnumerator2_ImplicitCast) == 0x001200, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_Select_NewEnumerator2_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_Select_NewEnumerator3_ImplicitCast) == 0x001208, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_Select_NewEnumerator3_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_Select_NewEnumerator4_ImplicitCast) == 0x001210, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_Select_NewEnumerator4_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_Select_NewEnumerator5_ImplicitCast) == 0x001218, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_Select_NewEnumerator5_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_Select_NewEnumerator0_ImplicitCast) == 0x001220, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_Select_NewEnumerator0_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_Select_NewEnumerator1_ImplicitCast_1) == 0x001228, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_Select_NewEnumerator1_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_Select_NewEnumerator2_ImplicitCast_1) == 0x001230, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_Select_NewEnumerator2_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_Select_NewEnumerator3_ImplicitCast_1) == 0x001238, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_Select_NewEnumerator3_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_Select_NewEnumerator4_ImplicitCast_1) == 0x001240, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_Select_NewEnumerator4_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, K2Node_Select_NewEnumerator5_ImplicitCast_1) == 0x001248, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::K2Node_Select_NewEnumerator5_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Montage_Stop_InBlendOutTime_ImplicitCast) == 0x001250, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Montage_Stop_InBlendOutTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_MakeNoise_MaxRange_ImplicitCast) == 0x001254, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_MakeNoise_MaxRange_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x001258, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_Delay_Duration_ImplicitCast) == 0x001260, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ExecuteUbergraph_mainBanditAI, CallFunc_SetParameter_Value_ImplicitCast) == 0x001264, "Member 'MainBanditAI_C_ExecuteUbergraph_mainBanditAI::CallFunc_SetParameter_Value_ImplicitCast' has a wrong offset!");

// Function mainBanditAI.mainBanditAI_C.GetDecalMaterial
// 0x01D8 (0x01D8 - 0x0000)
struct MainBanditAI_C_GetDecalMaterial final
{
public:
	EPhysicalSurface                              SurfaceType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      DynMaterial;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_1;                              // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_6;                              // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_7;                              // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_8;                              // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_9;                              // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_10;                             // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_11;                             // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_12;                             // 0x0074(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_13;                             // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_14;                             // 0x0084(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_15;                             // 0x008C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_16;                             // 0x0094(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_17;                             // 0x009C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_18;                             // 0x00A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_19;                             // 0x00AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_20;                             // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_21;                             // 0x00BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_22;                             // 0x00C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_23;                             // 0x00CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_24;                             // 0x00D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_25;                             // 0x00DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_26;                             // 0x00E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_27;                             // 0x00EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_28;                             // 0x00F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_29;                             // 0x00FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_30;                             // 0x0104(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_31;                             // 0x010C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_32;                             // 0x0114(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_33;                             // 0x011C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_34;                             // 0x0124(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_35;                             // 0x012C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_36;                             // 0x0134(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_37;                             // 0x013C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_38;                             // 0x0144(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_39;                             // 0x014C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_40;                             // 0x0154(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_41;                             // 0x015C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_42;                             // 0x0164(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_43;                             // 0x016C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_44;                             // 0x0174(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17D[0x3];                                      // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBPS_HitDecals                         CallFunc_GetDataTableRowFromName_OutRow;           // 0x0188(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      CallFunc_Array_Get_Item;                           // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainBanditAI_C_GetDecalMaterial) == 0x000008, "Wrong alignment on MainBanditAI_C_GetDecalMaterial");
static_assert(sizeof(MainBanditAI_C_GetDecalMaterial) == 0x0001D8, "Wrong size on MainBanditAI_C_GetDecalMaterial");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, SurfaceType) == 0x000000, "Member 'MainBanditAI_C_GetDecalMaterial::SurfaceType' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, DynMaterial) == 0x000008, "Member 'MainBanditAI_C_GetDecalMaterial::DynMaterial' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, Temp_name_Variable) == 0x000010, "Member 'MainBanditAI_C_GetDecalMaterial::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'MainBanditAI_C_GetDecalMaterial::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, Temp_name_Variable_1) == 0x00001C, "Member 'MainBanditAI_C_GetDecalMaterial::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, Temp_name_Variable_2) == 0x000024, "Member 'MainBanditAI_C_GetDecalMaterial::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, Temp_name_Variable_3) == 0x00002C, "Member 'MainBanditAI_C_GetDecalMaterial::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, Temp_name_Variable_4) == 0x000034, "Member 'MainBanditAI_C_GetDecalMaterial::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, Temp_name_Variable_5) == 0x00003C, "Member 'MainBanditAI_C_GetDecalMaterial::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, Temp_name_Variable_6) == 0x000044, "Member 'MainBanditAI_C_GetDecalMaterial::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, Temp_name_Variable_7) == 0x00004C, "Member 'MainBanditAI_C_GetDecalMaterial::Temp_name_Variable_7' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, Temp_name_Variable_8) == 0x000054, "Member 'MainBanditAI_C_GetDecalMaterial::Temp_name_Variable_8' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, Temp_name_Variable_9) == 0x00005C, "Member 'MainBanditAI_C_GetDecalMaterial::Temp_name_Variable_9' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, Temp_name_Variable_10) == 0x000064, "Member 'MainBanditAI_C_GetDecalMaterial::Temp_name_Variable_10' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, Temp_name_Variable_11) == 0x00006C, "Member 'MainBanditAI_C_GetDecalMaterial::Temp_name_Variable_11' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, Temp_name_Variable_12) == 0x000074, "Member 'MainBanditAI_C_GetDecalMaterial::Temp_name_Variable_12' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, Temp_name_Variable_13) == 0x00007C, "Member 'MainBanditAI_C_GetDecalMaterial::Temp_name_Variable_13' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, Temp_name_Variable_14) == 0x000084, "Member 'MainBanditAI_C_GetDecalMaterial::Temp_name_Variable_14' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, Temp_name_Variable_15) == 0x00008C, "Member 'MainBanditAI_C_GetDecalMaterial::Temp_name_Variable_15' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, Temp_name_Variable_16) == 0x000094, "Member 'MainBanditAI_C_GetDecalMaterial::Temp_name_Variable_16' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, Temp_name_Variable_17) == 0x00009C, "Member 'MainBanditAI_C_GetDecalMaterial::Temp_name_Variable_17' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, Temp_name_Variable_18) == 0x0000A4, "Member 'MainBanditAI_C_GetDecalMaterial::Temp_name_Variable_18' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, Temp_name_Variable_19) == 0x0000AC, "Member 'MainBanditAI_C_GetDecalMaterial::Temp_name_Variable_19' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, Temp_name_Variable_20) == 0x0000B4, "Member 'MainBanditAI_C_GetDecalMaterial::Temp_name_Variable_20' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, Temp_name_Variable_21) == 0x0000BC, "Member 'MainBanditAI_C_GetDecalMaterial::Temp_name_Variable_21' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, Temp_name_Variable_22) == 0x0000C4, "Member 'MainBanditAI_C_GetDecalMaterial::Temp_name_Variable_22' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, Temp_name_Variable_23) == 0x0000CC, "Member 'MainBanditAI_C_GetDecalMaterial::Temp_name_Variable_23' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, Temp_name_Variable_24) == 0x0000D4, "Member 'MainBanditAI_C_GetDecalMaterial::Temp_name_Variable_24' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, Temp_name_Variable_25) == 0x0000DC, "Member 'MainBanditAI_C_GetDecalMaterial::Temp_name_Variable_25' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, Temp_name_Variable_26) == 0x0000E4, "Member 'MainBanditAI_C_GetDecalMaterial::Temp_name_Variable_26' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, Temp_name_Variable_27) == 0x0000EC, "Member 'MainBanditAI_C_GetDecalMaterial::Temp_name_Variable_27' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, Temp_name_Variable_28) == 0x0000F4, "Member 'MainBanditAI_C_GetDecalMaterial::Temp_name_Variable_28' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, Temp_name_Variable_29) == 0x0000FC, "Member 'MainBanditAI_C_GetDecalMaterial::Temp_name_Variable_29' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, Temp_name_Variable_30) == 0x000104, "Member 'MainBanditAI_C_GetDecalMaterial::Temp_name_Variable_30' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, Temp_name_Variable_31) == 0x00010C, "Member 'MainBanditAI_C_GetDecalMaterial::Temp_name_Variable_31' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, Temp_name_Variable_32) == 0x000114, "Member 'MainBanditAI_C_GetDecalMaterial::Temp_name_Variable_32' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, Temp_name_Variable_33) == 0x00011C, "Member 'MainBanditAI_C_GetDecalMaterial::Temp_name_Variable_33' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, Temp_name_Variable_34) == 0x000124, "Member 'MainBanditAI_C_GetDecalMaterial::Temp_name_Variable_34' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, Temp_name_Variable_35) == 0x00012C, "Member 'MainBanditAI_C_GetDecalMaterial::Temp_name_Variable_35' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, Temp_name_Variable_36) == 0x000134, "Member 'MainBanditAI_C_GetDecalMaterial::Temp_name_Variable_36' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, Temp_name_Variable_37) == 0x00013C, "Member 'MainBanditAI_C_GetDecalMaterial::Temp_name_Variable_37' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, Temp_name_Variable_38) == 0x000144, "Member 'MainBanditAI_C_GetDecalMaterial::Temp_name_Variable_38' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, Temp_name_Variable_39) == 0x00014C, "Member 'MainBanditAI_C_GetDecalMaterial::Temp_name_Variable_39' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, Temp_name_Variable_40) == 0x000154, "Member 'MainBanditAI_C_GetDecalMaterial::Temp_name_Variable_40' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, Temp_name_Variable_41) == 0x00015C, "Member 'MainBanditAI_C_GetDecalMaterial::Temp_name_Variable_41' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, Temp_name_Variable_42) == 0x000164, "Member 'MainBanditAI_C_GetDecalMaterial::Temp_name_Variable_42' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, Temp_name_Variable_43) == 0x00016C, "Member 'MainBanditAI_C_GetDecalMaterial::Temp_name_Variable_43' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, Temp_name_Variable_44) == 0x000174, "Member 'MainBanditAI_C_GetDecalMaterial::Temp_name_Variable_44' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, Temp_byte_Variable) == 0x00017C, "Member 'MainBanditAI_C_GetDecalMaterial::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, K2Node_Select_Default) == 0x000180, "Member 'MainBanditAI_C_GetDecalMaterial::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, CallFunc_GetDataTableRowFromName_OutRow) == 0x000188, "Member 'MainBanditAI_C_GetDecalMaterial::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0001B8, "Member 'MainBanditAI_C_GetDecalMaterial::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, CallFunc_Array_Length_ReturnValue) == 0x0001BC, "Member 'MainBanditAI_C_GetDecalMaterial::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, CallFunc_Subtract_IntInt_ReturnValue) == 0x0001C0, "Member 'MainBanditAI_C_GetDecalMaterial::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, CallFunc_RandomIntegerInRange_ReturnValue) == 0x0001C4, "Member 'MainBanditAI_C_GetDecalMaterial::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, CallFunc_Array_Get_Item) == 0x0001C8, "Member 'MainBanditAI_C_GetDecalMaterial::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_GetDecalMaterial, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0001D0, "Member 'MainBanditAI_C_GetDecalMaterial::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function mainBanditAI.mainBanditAI_C.OnBlendOut_06798E9C421B2FF496BC24AA7C8B7A0C
// 0x0008 (0x0008 - 0x0000)
struct MainBanditAI_C_OnBlendOut_06798E9C421B2FF496BC24AA7C8B7A0C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainBanditAI_C_OnBlendOut_06798E9C421B2FF496BC24AA7C8B7A0C) == 0x000004, "Wrong alignment on MainBanditAI_C_OnBlendOut_06798E9C421B2FF496BC24AA7C8B7A0C");
static_assert(sizeof(MainBanditAI_C_OnBlendOut_06798E9C421B2FF496BC24AA7C8B7A0C) == 0x000008, "Wrong size on MainBanditAI_C_OnBlendOut_06798E9C421B2FF496BC24AA7C8B7A0C");
static_assert(offsetof(MainBanditAI_C_OnBlendOut_06798E9C421B2FF496BC24AA7C8B7A0C, NotifyName) == 0x000000, "Member 'MainBanditAI_C_OnBlendOut_06798E9C421B2FF496BC24AA7C8B7A0C::NotifyName' has a wrong offset!");

// Function mainBanditAI.mainBanditAI_C.OnBlendOut_3678A9F449B5807D7A90BE904F8A4C83
// 0x0008 (0x0008 - 0x0000)
struct MainBanditAI_C_OnBlendOut_3678A9F449B5807D7A90BE904F8A4C83 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainBanditAI_C_OnBlendOut_3678A9F449B5807D7A90BE904F8A4C83) == 0x000004, "Wrong alignment on MainBanditAI_C_OnBlendOut_3678A9F449B5807D7A90BE904F8A4C83");
static_assert(sizeof(MainBanditAI_C_OnBlendOut_3678A9F449B5807D7A90BE904F8A4C83) == 0x000008, "Wrong size on MainBanditAI_C_OnBlendOut_3678A9F449B5807D7A90BE904F8A4C83");
static_assert(offsetof(MainBanditAI_C_OnBlendOut_3678A9F449B5807D7A90BE904F8A4C83, NotifyName) == 0x000000, "Member 'MainBanditAI_C_OnBlendOut_3678A9F449B5807D7A90BE904F8A4C83::NotifyName' has a wrong offset!");

// Function mainBanditAI.mainBanditAI_C.OnBlendOut_ED1B2C8F46C7CDA788649E9DF5587AE9
// 0x0008 (0x0008 - 0x0000)
struct MainBanditAI_C_OnBlendOut_ED1B2C8F46C7CDA788649E9DF5587AE9 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainBanditAI_C_OnBlendOut_ED1B2C8F46C7CDA788649E9DF5587AE9) == 0x000004, "Wrong alignment on MainBanditAI_C_OnBlendOut_ED1B2C8F46C7CDA788649E9DF5587AE9");
static_assert(sizeof(MainBanditAI_C_OnBlendOut_ED1B2C8F46C7CDA788649E9DF5587AE9) == 0x000008, "Wrong size on MainBanditAI_C_OnBlendOut_ED1B2C8F46C7CDA788649E9DF5587AE9");
static_assert(offsetof(MainBanditAI_C_OnBlendOut_ED1B2C8F46C7CDA788649E9DF5587AE9, NotifyName) == 0x000000, "Member 'MainBanditAI_C_OnBlendOut_ED1B2C8F46C7CDA788649E9DF5587AE9::NotifyName' has a wrong offset!");

// Function mainBanditAI.mainBanditAI_C.OnCompleted_06798E9C421B2FF496BC24AA7C8B7A0C
// 0x0008 (0x0008 - 0x0000)
struct MainBanditAI_C_OnCompleted_06798E9C421B2FF496BC24AA7C8B7A0C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainBanditAI_C_OnCompleted_06798E9C421B2FF496BC24AA7C8B7A0C) == 0x000004, "Wrong alignment on MainBanditAI_C_OnCompleted_06798E9C421B2FF496BC24AA7C8B7A0C");
static_assert(sizeof(MainBanditAI_C_OnCompleted_06798E9C421B2FF496BC24AA7C8B7A0C) == 0x000008, "Wrong size on MainBanditAI_C_OnCompleted_06798E9C421B2FF496BC24AA7C8B7A0C");
static_assert(offsetof(MainBanditAI_C_OnCompleted_06798E9C421B2FF496BC24AA7C8B7A0C, NotifyName) == 0x000000, "Member 'MainBanditAI_C_OnCompleted_06798E9C421B2FF496BC24AA7C8B7A0C::NotifyName' has a wrong offset!");

// Function mainBanditAI.mainBanditAI_C.OnCompleted_3678A9F449B5807D7A90BE904F8A4C83
// 0x0008 (0x0008 - 0x0000)
struct MainBanditAI_C_OnCompleted_3678A9F449B5807D7A90BE904F8A4C83 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainBanditAI_C_OnCompleted_3678A9F449B5807D7A90BE904F8A4C83) == 0x000004, "Wrong alignment on MainBanditAI_C_OnCompleted_3678A9F449B5807D7A90BE904F8A4C83");
static_assert(sizeof(MainBanditAI_C_OnCompleted_3678A9F449B5807D7A90BE904F8A4C83) == 0x000008, "Wrong size on MainBanditAI_C_OnCompleted_3678A9F449B5807D7A90BE904F8A4C83");
static_assert(offsetof(MainBanditAI_C_OnCompleted_3678A9F449B5807D7A90BE904F8A4C83, NotifyName) == 0x000000, "Member 'MainBanditAI_C_OnCompleted_3678A9F449B5807D7A90BE904F8A4C83::NotifyName' has a wrong offset!");

// Function mainBanditAI.mainBanditAI_C.OnCompleted_ED1B2C8F46C7CDA788649E9DF5587AE9
// 0x0008 (0x0008 - 0x0000)
struct MainBanditAI_C_OnCompleted_ED1B2C8F46C7CDA788649E9DF5587AE9 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainBanditAI_C_OnCompleted_ED1B2C8F46C7CDA788649E9DF5587AE9) == 0x000004, "Wrong alignment on MainBanditAI_C_OnCompleted_ED1B2C8F46C7CDA788649E9DF5587AE9");
static_assert(sizeof(MainBanditAI_C_OnCompleted_ED1B2C8F46C7CDA788649E9DF5587AE9) == 0x000008, "Wrong size on MainBanditAI_C_OnCompleted_ED1B2C8F46C7CDA788649E9DF5587AE9");
static_assert(offsetof(MainBanditAI_C_OnCompleted_ED1B2C8F46C7CDA788649E9DF5587AE9, NotifyName) == 0x000000, "Member 'MainBanditAI_C_OnCompleted_ED1B2C8F46C7CDA788649E9DF5587AE9::NotifyName' has a wrong offset!");

// Function mainBanditAI.mainBanditAI_C.OnInterrupted_06798E9C421B2FF496BC24AA7C8B7A0C
// 0x0008 (0x0008 - 0x0000)
struct MainBanditAI_C_OnInterrupted_06798E9C421B2FF496BC24AA7C8B7A0C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainBanditAI_C_OnInterrupted_06798E9C421B2FF496BC24AA7C8B7A0C) == 0x000004, "Wrong alignment on MainBanditAI_C_OnInterrupted_06798E9C421B2FF496BC24AA7C8B7A0C");
static_assert(sizeof(MainBanditAI_C_OnInterrupted_06798E9C421B2FF496BC24AA7C8B7A0C) == 0x000008, "Wrong size on MainBanditAI_C_OnInterrupted_06798E9C421B2FF496BC24AA7C8B7A0C");
static_assert(offsetof(MainBanditAI_C_OnInterrupted_06798E9C421B2FF496BC24AA7C8B7A0C, NotifyName) == 0x000000, "Member 'MainBanditAI_C_OnInterrupted_06798E9C421B2FF496BC24AA7C8B7A0C::NotifyName' has a wrong offset!");

// Function mainBanditAI.mainBanditAI_C.OnInterrupted_3678A9F449B5807D7A90BE904F8A4C83
// 0x0008 (0x0008 - 0x0000)
struct MainBanditAI_C_OnInterrupted_3678A9F449B5807D7A90BE904F8A4C83 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainBanditAI_C_OnInterrupted_3678A9F449B5807D7A90BE904F8A4C83) == 0x000004, "Wrong alignment on MainBanditAI_C_OnInterrupted_3678A9F449B5807D7A90BE904F8A4C83");
static_assert(sizeof(MainBanditAI_C_OnInterrupted_3678A9F449B5807D7A90BE904F8A4C83) == 0x000008, "Wrong size on MainBanditAI_C_OnInterrupted_3678A9F449B5807D7A90BE904F8A4C83");
static_assert(offsetof(MainBanditAI_C_OnInterrupted_3678A9F449B5807D7A90BE904F8A4C83, NotifyName) == 0x000000, "Member 'MainBanditAI_C_OnInterrupted_3678A9F449B5807D7A90BE904F8A4C83::NotifyName' has a wrong offset!");

// Function mainBanditAI.mainBanditAI_C.OnInterrupted_ED1B2C8F46C7CDA788649E9DF5587AE9
// 0x0008 (0x0008 - 0x0000)
struct MainBanditAI_C_OnInterrupted_ED1B2C8F46C7CDA788649E9DF5587AE9 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainBanditAI_C_OnInterrupted_ED1B2C8F46C7CDA788649E9DF5587AE9) == 0x000004, "Wrong alignment on MainBanditAI_C_OnInterrupted_ED1B2C8F46C7CDA788649E9DF5587AE9");
static_assert(sizeof(MainBanditAI_C_OnInterrupted_ED1B2C8F46C7CDA788649E9DF5587AE9) == 0x000008, "Wrong size on MainBanditAI_C_OnInterrupted_ED1B2C8F46C7CDA788649E9DF5587AE9");
static_assert(offsetof(MainBanditAI_C_OnInterrupted_ED1B2C8F46C7CDA788649E9DF5587AE9, NotifyName) == 0x000000, "Member 'MainBanditAI_C_OnInterrupted_ED1B2C8F46C7CDA788649E9DF5587AE9::NotifyName' has a wrong offset!");

// Function mainBanditAI.mainBanditAI_C.OnLoaded_ECEF658C499C85FBFD3F9FA519EC773D
// 0x0008 (0x0008 - 0x0000)
struct MainBanditAI_C_OnLoaded_ECEF658C499C85FBFD3F9FA519EC773D final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainBanditAI_C_OnLoaded_ECEF658C499C85FBFD3F9FA519EC773D) == 0x000008, "Wrong alignment on MainBanditAI_C_OnLoaded_ECEF658C499C85FBFD3F9FA519EC773D");
static_assert(sizeof(MainBanditAI_C_OnLoaded_ECEF658C499C85FBFD3F9FA519EC773D) == 0x000008, "Wrong size on MainBanditAI_C_OnLoaded_ECEF658C499C85FBFD3F9FA519EC773D");
static_assert(offsetof(MainBanditAI_C_OnLoaded_ECEF658C499C85FBFD3F9FA519EC773D, Loaded) == 0x000000, "Member 'MainBanditAI_C_OnLoaded_ECEF658C499C85FBFD3F9FA519EC773D::Loaded' has a wrong offset!");

// Function mainBanditAI.mainBanditAI_C.OnNotifyBegin_06798E9C421B2FF496BC24AA7C8B7A0C
// 0x0008 (0x0008 - 0x0000)
struct MainBanditAI_C_OnNotifyBegin_06798E9C421B2FF496BC24AA7C8B7A0C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainBanditAI_C_OnNotifyBegin_06798E9C421B2FF496BC24AA7C8B7A0C) == 0x000004, "Wrong alignment on MainBanditAI_C_OnNotifyBegin_06798E9C421B2FF496BC24AA7C8B7A0C");
static_assert(sizeof(MainBanditAI_C_OnNotifyBegin_06798E9C421B2FF496BC24AA7C8B7A0C) == 0x000008, "Wrong size on MainBanditAI_C_OnNotifyBegin_06798E9C421B2FF496BC24AA7C8B7A0C");
static_assert(offsetof(MainBanditAI_C_OnNotifyBegin_06798E9C421B2FF496BC24AA7C8B7A0C, NotifyName) == 0x000000, "Member 'MainBanditAI_C_OnNotifyBegin_06798E9C421B2FF496BC24AA7C8B7A0C::NotifyName' has a wrong offset!");

// Function mainBanditAI.mainBanditAI_C.OnNotifyBegin_3678A9F449B5807D7A90BE904F8A4C83
// 0x0008 (0x0008 - 0x0000)
struct MainBanditAI_C_OnNotifyBegin_3678A9F449B5807D7A90BE904F8A4C83 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainBanditAI_C_OnNotifyBegin_3678A9F449B5807D7A90BE904F8A4C83) == 0x000004, "Wrong alignment on MainBanditAI_C_OnNotifyBegin_3678A9F449B5807D7A90BE904F8A4C83");
static_assert(sizeof(MainBanditAI_C_OnNotifyBegin_3678A9F449B5807D7A90BE904F8A4C83) == 0x000008, "Wrong size on MainBanditAI_C_OnNotifyBegin_3678A9F449B5807D7A90BE904F8A4C83");
static_assert(offsetof(MainBanditAI_C_OnNotifyBegin_3678A9F449B5807D7A90BE904F8A4C83, NotifyName) == 0x000000, "Member 'MainBanditAI_C_OnNotifyBegin_3678A9F449B5807D7A90BE904F8A4C83::NotifyName' has a wrong offset!");

// Function mainBanditAI.mainBanditAI_C.OnNotifyBegin_ED1B2C8F46C7CDA788649E9DF5587AE9
// 0x0008 (0x0008 - 0x0000)
struct MainBanditAI_C_OnNotifyBegin_ED1B2C8F46C7CDA788649E9DF5587AE9 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainBanditAI_C_OnNotifyBegin_ED1B2C8F46C7CDA788649E9DF5587AE9) == 0x000004, "Wrong alignment on MainBanditAI_C_OnNotifyBegin_ED1B2C8F46C7CDA788649E9DF5587AE9");
static_assert(sizeof(MainBanditAI_C_OnNotifyBegin_ED1B2C8F46C7CDA788649E9DF5587AE9) == 0x000008, "Wrong size on MainBanditAI_C_OnNotifyBegin_ED1B2C8F46C7CDA788649E9DF5587AE9");
static_assert(offsetof(MainBanditAI_C_OnNotifyBegin_ED1B2C8F46C7CDA788649E9DF5587AE9, NotifyName) == 0x000000, "Member 'MainBanditAI_C_OnNotifyBegin_ED1B2C8F46C7CDA788649E9DF5587AE9::NotifyName' has a wrong offset!");

// Function mainBanditAI.mainBanditAI_C.OnNotifyEnd_06798E9C421B2FF496BC24AA7C8B7A0C
// 0x0008 (0x0008 - 0x0000)
struct MainBanditAI_C_OnNotifyEnd_06798E9C421B2FF496BC24AA7C8B7A0C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainBanditAI_C_OnNotifyEnd_06798E9C421B2FF496BC24AA7C8B7A0C) == 0x000004, "Wrong alignment on MainBanditAI_C_OnNotifyEnd_06798E9C421B2FF496BC24AA7C8B7A0C");
static_assert(sizeof(MainBanditAI_C_OnNotifyEnd_06798E9C421B2FF496BC24AA7C8B7A0C) == 0x000008, "Wrong size on MainBanditAI_C_OnNotifyEnd_06798E9C421B2FF496BC24AA7C8B7A0C");
static_assert(offsetof(MainBanditAI_C_OnNotifyEnd_06798E9C421B2FF496BC24AA7C8B7A0C, NotifyName) == 0x000000, "Member 'MainBanditAI_C_OnNotifyEnd_06798E9C421B2FF496BC24AA7C8B7A0C::NotifyName' has a wrong offset!");

// Function mainBanditAI.mainBanditAI_C.OnNotifyEnd_3678A9F449B5807D7A90BE904F8A4C83
// 0x0008 (0x0008 - 0x0000)
struct MainBanditAI_C_OnNotifyEnd_3678A9F449B5807D7A90BE904F8A4C83 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainBanditAI_C_OnNotifyEnd_3678A9F449B5807D7A90BE904F8A4C83) == 0x000004, "Wrong alignment on MainBanditAI_C_OnNotifyEnd_3678A9F449B5807D7A90BE904F8A4C83");
static_assert(sizeof(MainBanditAI_C_OnNotifyEnd_3678A9F449B5807D7A90BE904F8A4C83) == 0x000008, "Wrong size on MainBanditAI_C_OnNotifyEnd_3678A9F449B5807D7A90BE904F8A4C83");
static_assert(offsetof(MainBanditAI_C_OnNotifyEnd_3678A9F449B5807D7A90BE904F8A4C83, NotifyName) == 0x000000, "Member 'MainBanditAI_C_OnNotifyEnd_3678A9F449B5807D7A90BE904F8A4C83::NotifyName' has a wrong offset!");

// Function mainBanditAI.mainBanditAI_C.OnNotifyEnd_ED1B2C8F46C7CDA788649E9DF5587AE9
// 0x0008 (0x0008 - 0x0000)
struct MainBanditAI_C_OnNotifyEnd_ED1B2C8F46C7CDA788649E9DF5587AE9 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainBanditAI_C_OnNotifyEnd_ED1B2C8F46C7CDA788649E9DF5587AE9) == 0x000004, "Wrong alignment on MainBanditAI_C_OnNotifyEnd_ED1B2C8F46C7CDA788649E9DF5587AE9");
static_assert(sizeof(MainBanditAI_C_OnNotifyEnd_ED1B2C8F46C7CDA788649E9DF5587AE9) == 0x000008, "Wrong size on MainBanditAI_C_OnNotifyEnd_ED1B2C8F46C7CDA788649E9DF5587AE9");
static_assert(offsetof(MainBanditAI_C_OnNotifyEnd_ED1B2C8F46C7CDA788649E9DF5587AE9, NotifyName) == 0x000000, "Member 'MainBanditAI_C_OnNotifyEnd_ED1B2C8F46C7CDA788649E9DF5587AE9::NotifyName' has a wrong offset!");

// Function mainBanditAI.mainBanditAI_C.OnRep_Lootpoint
// 0x0010 (0x0010 - 0x0000)
struct MainBanditAI_C_OnRep_Lootpoint final
{
public:
	TDelegate<void(class FName NewParam)>         K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainBanditAI_C_OnRep_Lootpoint) == 0x000004, "Wrong alignment on MainBanditAI_C_OnRep_Lootpoint");
static_assert(sizeof(MainBanditAI_C_OnRep_Lootpoint) == 0x000010, "Wrong size on MainBanditAI_C_OnRep_Lootpoint");
static_assert(offsetof(MainBanditAI_C_OnRep_Lootpoint, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'MainBanditAI_C_OnRep_Lootpoint::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function mainBanditAI.mainBanditAI_C.OnRep_WeaponData
// 0x0038 (0x0038 - 0x0000)
struct MainBanditAI_C_OnRep_WeaponData final
{
public:
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_1;         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh;                // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainBanditAI_C_OnRep_WeaponData) == 0x000008, "Wrong alignment on MainBanditAI_C_OnRep_WeaponData");
static_assert(sizeof(MainBanditAI_C_OnRep_WeaponData) == 0x000038, "Wrong size on MainBanditAI_C_OnRep_WeaponData");
static_assert(offsetof(MainBanditAI_C_OnRep_WeaponData, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000000, "Member 'MainBanditAI_C_OnRep_WeaponData::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_OnRep_WeaponData, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000008, "Member 'MainBanditAI_C_OnRep_WeaponData::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_OnRep_WeaponData, K2Node_DynamicCast_AsAnim_Montage) == 0x000010, "Member 'MainBanditAI_C_OnRep_WeaponData::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_OnRep_WeaponData, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'MainBanditAI_C_OnRep_WeaponData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_OnRep_WeaponData, CallFunc_LoadAsset_Blocking_ReturnValue_1) == 0x000020, "Member 'MainBanditAI_C_OnRep_WeaponData::CallFunc_LoadAsset_Blocking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_OnRep_WeaponData, K2Node_DynamicCast_AsSkeletal_Mesh) == 0x000028, "Member 'MainBanditAI_C_OnRep_WeaponData::K2Node_DynamicCast_AsSkeletal_Mesh' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_OnRep_WeaponData, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'MainBanditAI_C_OnRep_WeaponData::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function mainBanditAI.mainBanditAI_C.PickDamageAnimByBone
// 0x0078 (0x0078 - 0x0000)
struct MainBanditAI_C_PickDamageAnimByBone final
{
public:
	class FName                                   BoneName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           DamageAnim;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_1;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_2;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Temp_object_Variable_3;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Temp_object_Variable_4;                            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BoneIsChildOf_ReturnValue;                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_Select_Default;                             // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BoneIsChildOf_ReturnValue_1;              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Select_Default_1;                           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_Select_Default_2;                           // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainBanditAI_C_PickDamageAnimByBone) == 0x000008, "Wrong alignment on MainBanditAI_C_PickDamageAnimByBone");
static_assert(sizeof(MainBanditAI_C_PickDamageAnimByBone) == 0x000078, "Wrong size on MainBanditAI_C_PickDamageAnimByBone");
static_assert(offsetof(MainBanditAI_C_PickDamageAnimByBone, BoneName) == 0x000000, "Member 'MainBanditAI_C_PickDamageAnimByBone::BoneName' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PickDamageAnimByBone, DamageAnim) == 0x000008, "Member 'MainBanditAI_C_PickDamageAnimByBone::DamageAnim' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PickDamageAnimByBone, Temp_int_Variable) == 0x000010, "Member 'MainBanditAI_C_PickDamageAnimByBone::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PickDamageAnimByBone, Temp_object_Variable) == 0x000018, "Member 'MainBanditAI_C_PickDamageAnimByBone::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PickDamageAnimByBone, Temp_object_Variable_1) == 0x000020, "Member 'MainBanditAI_C_PickDamageAnimByBone::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PickDamageAnimByBone, Temp_object_Variable_2) == 0x000028, "Member 'MainBanditAI_C_PickDamageAnimByBone::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PickDamageAnimByBone, Temp_bool_Variable) == 0x000030, "Member 'MainBanditAI_C_PickDamageAnimByBone::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PickDamageAnimByBone, Temp_object_Variable_3) == 0x000038, "Member 'MainBanditAI_C_PickDamageAnimByBone::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PickDamageAnimByBone, Temp_bool_Variable_1) == 0x000040, "Member 'MainBanditAI_C_PickDamageAnimByBone::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PickDamageAnimByBone, Temp_object_Variable_4) == 0x000048, "Member 'MainBanditAI_C_PickDamageAnimByBone::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PickDamageAnimByBone, CallFunc_BoneIsChildOf_ReturnValue) == 0x000050, "Member 'MainBanditAI_C_PickDamageAnimByBone::CallFunc_BoneIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PickDamageAnimByBone, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000054, "Member 'MainBanditAI_C_PickDamageAnimByBone::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PickDamageAnimByBone, K2Node_Select_Default) == 0x000058, "Member 'MainBanditAI_C_PickDamageAnimByBone::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PickDamageAnimByBone, CallFunc_BoneIsChildOf_ReturnValue_1) == 0x000060, "Member 'MainBanditAI_C_PickDamageAnimByBone::CallFunc_BoneIsChildOf_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PickDamageAnimByBone, K2Node_Select_Default_1) == 0x000068, "Member 'MainBanditAI_C_PickDamageAnimByBone::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PickDamageAnimByBone, K2Node_Select_Default_2) == 0x000070, "Member 'MainBanditAI_C_PickDamageAnimByBone::K2Node_Select_Default_2' has a wrong offset!");

// Function mainBanditAI.mainBanditAI_C.PlayHitParticle
// 0x0DD0 (0x0DD0 - 0x0000)
struct MainBanditAI_C_PlayHitParticle final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x00E8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 HitActor;                                          // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    ImpactSound;                                       // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    HitComp;                                           // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0100(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpactNormal;                                      // 0x0120(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpactPoint;                                       // 0x0138(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              SurfaceType;                                       // 0x0150(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0154(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15E[0x2];                                      // 0x015E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_6;                              // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_7;                              // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_8;                              // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_9;                              // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_10;                             // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_11;                             // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_12;                             // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_13;                             // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_14;                             // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_15;                             // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBPS_HitParticles                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x02A8(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x02D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DA[0x2];                                      // 0x02DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        CallFunc_Array_Get_Item;                           // 0x02F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_4;                              // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_5;                              // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_6;                              // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_7;                              // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_8;                              // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_9;                              // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_10;                             // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_11;                             // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_12;                             // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_13;                             // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_14;                             // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_15;                             // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_16;                             // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_17;                             // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_18;                             // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_19;                             // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_20;                             // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_21;                             // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_22;                             // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_23;                             // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_24;                             // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_25;                             // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_26;                             // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_27;                             // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_28;                             // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_29;                             // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_30;                             // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_31;                             // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_32;                             // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_33;                             // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_34;                             // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_35;                             // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_36;                             // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_37;                             // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_38;                             // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_39;                             // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_40;                             // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_41;                             // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_42;                             // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_43;                             // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_44;                             // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_459[0x7];                                      // 0x0459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             Temp_object_Variable;                              // 0x0460(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_1;                            // 0x0468(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable_1;                              // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_471[0x7];                                      // 0x0471(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_45;                             // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_46;                             // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_47;                             // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_48;                             // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_49;                             // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_50;                             // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_51;                             // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_52;                             // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_53;                             // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_54;                             // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_55;                             // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_56;                             // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_57;                             // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_58;                             // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_59;                             // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_60;                             // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_61;                             // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_62;                             // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_63;                             // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_64;                             // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_65;                             // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_66;                             // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_67;                             // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_68;                             // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_69;                             // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_70;                             // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_71;                             // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_72;                             // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_73;                             // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_74;                             // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_75;                             // 0x0568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_76;                             // 0x0570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_77;                             // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_78;                             // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_79;                             // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_80;                             // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_81;                             // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_82;                             // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_83;                             // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_84;                             // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_85;                             // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_86;                             // 0x05C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_87;                             // 0x05C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_88;                             // 0x05D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_89;                             // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_16;                             // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x05E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x05F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0608(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_17;                             // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_1;     // 0x0628(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0630(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0648(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_18;                             // 0x0660(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_19;                             // 0x0668(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_2;     // 0x0670(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0678(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x0690(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x06A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_20;                             // 0x06C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_21;                             // 0x06C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_22;                             // 0x06D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_23;                             // 0x06D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_24;                             // 0x06E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x06E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E9[0x7];                                      // 0x06E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_3;     // 0x06F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x06F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_3;    // 0x0700(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0718(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_719[0x7];                                      // 0x0719(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_Distance_ReturnValue_1;            // 0x0720(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0728(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x0729(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x072A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x072B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72C[0x4];                                      // 0x072C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0730(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0738(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_739[0x7];                                      // 0x0739(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_4;       // 0x0740(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0758(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0760(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_5;       // 0x0778(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_1;               // 0x0790(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue_2;            // 0x07A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_2;               // 0x07B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_2;     // 0x07C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2;  // 0x07C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7CA[0x6];                                      // 0x07CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x07D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x07D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D9[0x7];                                      // 0x07D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_6;       // 0x07E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_3;               // 0x07F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue_3;            // 0x0810(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_4;               // 0x0818(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_3;     // 0x0830(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_3;  // 0x0831(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_832[0x6];                                      // 0x0832(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue_3;            // 0x0838(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0840(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_841[0x7];                                      // 0x0841(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_7;       // 0x0848(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0860(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_861[0x7];                                      // 0x0861(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue_5;               // 0x0868(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_6;               // 0x0880(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADestructibleActor*                     K2Node_DynamicCast_AsDestructible_Actor;           // 0x0898(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x08A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A1[0x7];                                      // 0x08A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_8;       // 0x08A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x08C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   Temp_name_Variable_25;                             // 0x08D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      CallFunc_GetDecalMaterial_DynMaterial;             // 0x08E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        CallFunc_SpawnDecalAttached_ReturnValue;           // 0x08E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x08F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8F1[0x3];                                      // 0x08F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_26;                             // 0x08F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_27;                             // 0x08FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_904[0x4];                                      // 0x0904(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0908(0x0010)(ConstParm, ReferenceParm)
	class FName                                   Temp_name_Variable_28;                             // 0x0918(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_29;                             // 0x0920(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_30;                             // 0x0928(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x0930(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_RandomUnitVectorInEllipticalConeInDegrees_ReturnValue; // 0x0940(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorInt_ReturnValue;           // 0x0958(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0970(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_31;                             // 0x0988(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0990(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0A78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0A79(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0A7A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A7B[0x1];                                      // 0x0A7B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0A7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0A80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A84[0x4];                                      // 0x0A84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0A88(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0AA0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0AB8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0AD0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0AE8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0AF0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0AF8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0B00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x0B08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0B10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x0B14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0B18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1C[0x4];                                      // 0x0B1C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0B20(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0B38(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_32;                             // 0x0B50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0B58(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0B60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B61[0x7];                                      // 0x0B61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_9;       // 0x0B68(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_33;                             // 0x0B80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0B88(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotFromZ_ReturnValue;                 // 0x0BA0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotFromZ_ReturnValue_1;               // 0x0BB8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotFromZ_ReturnValue_2;               // 0x0BD0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotFromZ_ReturnValue_3;               // 0x0BE8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0C00(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZ_ReturnValue_4;               // 0x0C08(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0C20(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_ElectricDoorBox_C*                  K2Node_DynamicCast_AsBP_Electric_Door_Box;         // 0x0C28(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0C30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C31[0x3];                                      // 0x0C31(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_34;                             // 0x0C34(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C3C[0x4];                                      // 0x0C3C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AElectricityBlocker_C*                  K2Node_DynamicCast_AsElectricity_Blocker;          // 0x0C40(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0C48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C49[0x3];                                      // 0x0C49(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_35;                             // 0x0C4C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_36;                             // 0x0C54(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5C[0x4];                                      // 0x0C5C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0C60(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_1;       // 0x0C68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C6C[0x4];                                      // 0x0C6C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0C70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        CallFunc_SpawnDecalAttached_ReturnValue_1;         // 0x0C78(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        CallFunc_SpawnDecalAttached_ReturnValue_2;         // 0x0C80(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable_2;                              // 0x0C88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C89[0x3];                                      // 0x0C89(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_37;                             // 0x0C8C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0C94(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C95[0x3];                                      // 0x0C95(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_38;                             // 0x0C98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_39;                             // 0x0CA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_40;                             // 0x0CA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0CB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x0CB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_41;                             // 0x0CC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_42;                             // 0x0CC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0CD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CD1[0x3];                                      // 0x0CD1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_43;                             // 0x0CD4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0CDC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0CDD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CDE[0x2];                                      // 0x0CDE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             K2Node_Select_Default_2;                           // 0x0CE0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_FMODPlayEventAttached_ReturnValue;        // 0x0CE8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_7;               // 0x0CF0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue_1;       // 0x0D08(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_44;                             // 0x0D10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0D18(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0D30(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_3;                           // 0x0D48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0D50(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBPS_HitParticles                      CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0D68(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0D98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0D99(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9A[0x2];                                      // 0x0D9A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0D9C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0DA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_2;       // 0x0DA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        CallFunc_Array_Get_Item_1;                         // 0x0DA8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue_2;       // 0x0DB0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue_3;       // 0x0DB8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0DC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetParameter_Value_ImplicitCast;          // 0x0DC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetParameter_Value_ImplicitCast_1;        // 0x0DC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainBanditAI_C_PlayHitParticle) == 0x000008, "Wrong alignment on MainBanditAI_C_PlayHitParticle");
static_assert(sizeof(MainBanditAI_C_PlayHitParticle) == 0x000DD0, "Wrong size on MainBanditAI_C_PlayHitParticle");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, HitResult) == 0x000000, "Member 'MainBanditAI_C_PlayHitParticle::HitResult' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, HitActor) == 0x0000E8, "Member 'MainBanditAI_C_PlayHitParticle::HitActor' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, ImpactSound) == 0x0000F0, "Member 'MainBanditAI_C_PlayHitParticle::ImpactSound' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, HitComp) == 0x0000F8, "Member 'MainBanditAI_C_PlayHitParticle::HitComp' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, HitNormal) == 0x000100, "Member 'MainBanditAI_C_PlayHitParticle::HitNormal' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, BoneName) == 0x000118, "Member 'MainBanditAI_C_PlayHitParticle::BoneName' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, ImpactNormal) == 0x000120, "Member 'MainBanditAI_C_PlayHitParticle::ImpactNormal' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, ImpactPoint) == 0x000138, "Member 'MainBanditAI_C_PlayHitParticle::ImpactPoint' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, SurfaceType) == 0x000150, "Member 'MainBanditAI_C_PlayHitParticle::SurfaceType' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_name_Variable) == 0x000154, "Member 'MainBanditAI_C_PlayHitParticle::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_BreakHitResult_bBlockingHit) == 0x00015C, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_BreakHitResult_bInitialOverlap) == 0x00015D, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_BreakHitResult_Time) == 0x000160, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_BreakHitResult_Distance) == 0x000164, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_BreakHitResult_Location) == 0x000168, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_BreakHitResult_ImpactPoint) == 0x000180, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_BreakHitResult_Normal) == 0x000198, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_BreakHitResult_ImpactNormal) == 0x0001B0, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_BreakHitResult_PhysMat) == 0x0001C8, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_BreakHitResult_HitActor) == 0x0001D0, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_BreakHitResult_HitComponent) == 0x0001D8, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_BreakHitResult_HitBoneName) == 0x0001E0, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_BreakHitResult_BoneName) == 0x0001E8, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_BreakHitResult_HitItem) == 0x0001F0, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_BreakHitResult_ElementIndex) == 0x0001F4, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_BreakHitResult_FaceIndex) == 0x0001F8, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_BreakHitResult_TraceStart) == 0x000200, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_BreakHitResult_TraceEnd) == 0x000218, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_name_Variable_1) == 0x000230, "Member 'MainBanditAI_C_PlayHitParticle::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_name_Variable_2) == 0x000238, "Member 'MainBanditAI_C_PlayHitParticle::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_name_Variable_3) == 0x000240, "Member 'MainBanditAI_C_PlayHitParticle::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_name_Variable_4) == 0x000248, "Member 'MainBanditAI_C_PlayHitParticle::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_name_Variable_5) == 0x000250, "Member 'MainBanditAI_C_PlayHitParticle::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_name_Variable_6) == 0x000258, "Member 'MainBanditAI_C_PlayHitParticle::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_name_Variable_7) == 0x000260, "Member 'MainBanditAI_C_PlayHitParticle::Temp_name_Variable_7' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_name_Variable_8) == 0x000268, "Member 'MainBanditAI_C_PlayHitParticle::Temp_name_Variable_8' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_name_Variable_9) == 0x000270, "Member 'MainBanditAI_C_PlayHitParticle::Temp_name_Variable_9' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_name_Variable_10) == 0x000278, "Member 'MainBanditAI_C_PlayHitParticle::Temp_name_Variable_10' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_name_Variable_11) == 0x000280, "Member 'MainBanditAI_C_PlayHitParticle::Temp_name_Variable_11' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_name_Variable_12) == 0x000288, "Member 'MainBanditAI_C_PlayHitParticle::Temp_name_Variable_12' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_name_Variable_13) == 0x000290, "Member 'MainBanditAI_C_PlayHitParticle::Temp_name_Variable_13' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_name_Variable_14) == 0x000298, "Member 'MainBanditAI_C_PlayHitParticle::Temp_name_Variable_14' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_name_Variable_15) == 0x0002A0, "Member 'MainBanditAI_C_PlayHitParticle::Temp_name_Variable_15' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_GetDataTableRowFromName_OutRow) == 0x0002A8, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0002D8, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_byte_Variable) == 0x0002D9, "Member 'MainBanditAI_C_PlayHitParticle::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_Array_Length_ReturnValue) == 0x0002DC, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable) == 0x0002E0, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_Subtract_IntInt_ReturnValue) == 0x0002E8, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_RandomIntegerInRange_ReturnValue) == 0x0002EC, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_1) == 0x0002F0, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_Array_Get_Item) == 0x0002F8, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_2) == 0x000300, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_3) == 0x000308, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_4) == 0x000310, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_5) == 0x000318, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_6) == 0x000320, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_6' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_7) == 0x000328, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_7' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_8) == 0x000330, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_8' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_9) == 0x000338, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_9' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_10) == 0x000340, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_10' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_11) == 0x000348, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_11' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_12) == 0x000350, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_12' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_13) == 0x000358, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_13' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_14) == 0x000360, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_14' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_15) == 0x000368, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_15' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_16) == 0x000370, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_16' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_17) == 0x000378, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_17' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_18) == 0x000380, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_18' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_19) == 0x000388, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_19' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_20) == 0x000390, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_20' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_21) == 0x000398, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_21' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_22) == 0x0003A0, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_22' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_23) == 0x0003A8, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_23' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_24) == 0x0003B0, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_24' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_25) == 0x0003B8, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_25' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_26) == 0x0003C0, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_26' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_27) == 0x0003C8, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_27' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_28) == 0x0003D0, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_28' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_29) == 0x0003D8, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_29' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_30) == 0x0003E0, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_30' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_31) == 0x0003E8, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_31' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_32) == 0x0003F0, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_32' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_33) == 0x0003F8, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_33' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_34) == 0x000400, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_34' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_35) == 0x000408, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_35' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_36) == 0x000410, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_36' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_37) == 0x000418, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_37' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_38) == 0x000420, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_38' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_39) == 0x000428, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_39' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_40) == 0x000430, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_40' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_41) == 0x000438, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_41' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_42) == 0x000440, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_42' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_43) == 0x000448, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_43' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_44) == 0x000450, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_44' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_bool_Variable) == 0x000458, "Member 'MainBanditAI_C_PlayHitParticle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_object_Variable) == 0x000460, "Member 'MainBanditAI_C_PlayHitParticle::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_object_Variable_1) == 0x000468, "Member 'MainBanditAI_C_PlayHitParticle::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_byte_Variable_1) == 0x000470, "Member 'MainBanditAI_C_PlayHitParticle::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_45) == 0x000478, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_45' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_46) == 0x000480, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_46' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_47) == 0x000488, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_47' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_48) == 0x000490, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_48' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_49) == 0x000498, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_49' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_50) == 0x0004A0, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_50' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_51) == 0x0004A8, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_51' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_52) == 0x0004B0, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_52' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_53) == 0x0004B8, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_53' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_54) == 0x0004C0, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_54' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_55) == 0x0004C8, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_55' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_56) == 0x0004D0, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_56' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_57) == 0x0004D8, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_57' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_58) == 0x0004E0, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_58' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_59) == 0x0004E8, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_59' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_60) == 0x0004F0, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_60' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_61) == 0x0004F8, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_61' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_62) == 0x000500, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_62' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_63) == 0x000508, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_63' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_64) == 0x000510, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_64' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_65) == 0x000518, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_65' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_66) == 0x000520, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_66' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_67) == 0x000528, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_67' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_68) == 0x000530, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_68' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_69) == 0x000538, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_69' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_70) == 0x000540, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_70' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_71) == 0x000548, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_71' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_72) == 0x000550, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_72' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_73) == 0x000558, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_73' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_74) == 0x000560, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_74' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_75) == 0x000568, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_75' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_76) == 0x000570, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_76' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_77) == 0x000578, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_77' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_78) == 0x000580, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_78' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_79) == 0x000588, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_79' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_80) == 0x000590, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_80' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_81) == 0x000598, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_81' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_82) == 0x0005A0, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_82' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_83) == 0x0005A8, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_83' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_84) == 0x0005B0, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_84' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_85) == 0x0005B8, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_85' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_86) == 0x0005C0, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_86' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_87) == 0x0005C8, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_87' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_88) == 0x0005D0, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_88' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_real_Variable_89) == 0x0005D8, "Member 'MainBanditAI_C_PlayHitParticle::Temp_real_Variable_89' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_name_Variable_16) == 0x0005E0, "Member 'MainBanditAI_C_PlayHitParticle::Temp_name_Variable_16' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x0005E8, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0005F0, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000608, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_name_Variable_17) == 0x000620, "Member 'MainBanditAI_C_PlayHitParticle::Temp_name_Variable_17' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_GetPlayerCameraManager_ReturnValue_1) == 0x000628, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_GetPlayerCameraManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000630, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000648, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_name_Variable_18) == 0x000660, "Member 'MainBanditAI_C_PlayHitParticle::Temp_name_Variable_18' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_name_Variable_19) == 0x000668, "Member 'MainBanditAI_C_PlayHitParticle::Temp_name_Variable_19' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_GetPlayerCameraManager_ReturnValue_2) == 0x000670, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_GetPlayerCameraManager_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000678, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x000690, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x0006A8, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_name_Variable_20) == 0x0006C0, "Member 'MainBanditAI_C_PlayHitParticle::Temp_name_Variable_20' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_name_Variable_21) == 0x0006C8, "Member 'MainBanditAI_C_PlayHitParticle::Temp_name_Variable_21' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_name_Variable_22) == 0x0006D0, "Member 'MainBanditAI_C_PlayHitParticle::Temp_name_Variable_22' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_name_Variable_23) == 0x0006D8, "Member 'MainBanditAI_C_PlayHitParticle::Temp_name_Variable_23' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_name_Variable_24) == 0x0006E0, "Member 'MainBanditAI_C_PlayHitParticle::Temp_name_Variable_24' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_IsValid_ReturnValue) == 0x0006E8, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_GetPlayerCameraManager_ReturnValue_3) == 0x0006F0, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_GetPlayerCameraManager_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_Vector_Distance_ReturnValue) == 0x0006F8, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_K2_GetComponentLocation_ReturnValue_3) == 0x000700, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_K2_GetComponentLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000718, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_Vector_Distance_ReturnValue_1) == 0x000720, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_Vector_Distance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000728, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x000729, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_BooleanAND_ReturnValue) == 0x00072A, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x00072B, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_MapRangeClamped_ReturnValue) == 0x000730, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_BooleanAND_ReturnValue_1) == 0x000738, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_Multiply_VectorFloat_ReturnValue_4) == 0x000740, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_Multiply_VectorFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000758, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_SelectVector_ReturnValue) == 0x000760, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_Multiply_VectorFloat_ReturnValue_5) == 0x000778, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_Multiply_VectorFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_SelectVector_ReturnValue_1) == 0x000790, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_SelectVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_Vector_Distance_ReturnValue_2) == 0x0007A8, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_Vector_Distance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_SelectVector_ReturnValue_2) == 0x0007B0, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_SelectVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_LessEqual_DoubleDouble_ReturnValue_2) == 0x0007C8, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_LessEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2) == 0x0007C9, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_MapRangeClamped_ReturnValue_2) == 0x0007D0, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_BooleanAND_ReturnValue_2) == 0x0007D8, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_Multiply_VectorFloat_ReturnValue_6) == 0x0007E0, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_Multiply_VectorFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_SelectVector_ReturnValue_3) == 0x0007F8, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_SelectVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_Vector_Distance_ReturnValue_3) == 0x000810, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_Vector_Distance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_SelectVector_ReturnValue_4) == 0x000818, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_SelectVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_LessEqual_DoubleDouble_ReturnValue_3) == 0x000830, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_LessEqual_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_3) == 0x000831, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_MapRangeClamped_ReturnValue_3) == 0x000838, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_BooleanAND_ReturnValue_3) == 0x000840, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_Multiply_VectorFloat_ReturnValue_7) == 0x000848, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_Multiply_VectorFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_HasAuthority_ReturnValue) == 0x000860, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_SelectVector_ReturnValue_5) == 0x000868, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_SelectVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_SelectVector_ReturnValue_6) == 0x000880, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_SelectVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, K2Node_DynamicCast_AsDestructible_Actor) == 0x000898, "Member 'MainBanditAI_C_PlayHitParticle::K2Node_DynamicCast_AsDestructible_Actor' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, K2Node_DynamicCast_bSuccess) == 0x0008A0, "Member 'MainBanditAI_C_PlayHitParticle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_Multiply_VectorFloat_ReturnValue_8) == 0x0008A8, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_Multiply_VectorFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_MakeRotFromX_ReturnValue) == 0x0008C0, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_name_Variable_25) == 0x0008D8, "Member 'MainBanditAI_C_PlayHitParticle::Temp_name_Variable_25' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_GetDecalMaterial_DynMaterial) == 0x0008E0, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_GetDecalMaterial_DynMaterial' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_SpawnDecalAttached_ReturnValue) == 0x0008E8, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_SpawnDecalAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_IsValid_ReturnValue_1) == 0x0008F0, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_name_Variable_26) == 0x0008F4, "Member 'MainBanditAI_C_PlayHitParticle::Temp_name_Variable_26' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_name_Variable_27) == 0x0008FC, "Member 'MainBanditAI_C_PlayHitParticle::Temp_name_Variable_27' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, K2Node_MakeArray_Array) == 0x000908, "Member 'MainBanditAI_C_PlayHitParticle::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_name_Variable_28) == 0x000918, "Member 'MainBanditAI_C_PlayHitParticle::Temp_name_Variable_28' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_name_Variable_29) == 0x000920, "Member 'MainBanditAI_C_PlayHitParticle::Temp_name_Variable_29' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_name_Variable_30) == 0x000928, "Member 'MainBanditAI_C_PlayHitParticle::Temp_name_Variable_30' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, K2Node_MakeArray_Array_1) == 0x000930, "Member 'MainBanditAI_C_PlayHitParticle::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_RandomUnitVectorInEllipticalConeInDegrees_ReturnValue) == 0x000940, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_RandomUnitVectorInEllipticalConeInDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_Multiply_VectorInt_ReturnValue) == 0x000958, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_Multiply_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_Add_VectorVector_ReturnValue) == 0x000970, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_name_Variable_31) == 0x000988, "Member 'MainBanditAI_C_PlayHitParticle::Temp_name_Variable_31' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_LineTraceSingle_OutHit) == 0x000990, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_LineTraceSingle_ReturnValue) == 0x000A78, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000A79, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000A7A, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_BreakHitResult_Time_1) == 0x000A7C, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_BreakHitResult_Distance_1) == 0x000A80, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_BreakHitResult_Location_1) == 0x000A88, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000AA0, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_BreakHitResult_Normal_1) == 0x000AB8, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000AD0, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_BreakHitResult_PhysMat_1) == 0x000AE8, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_BreakHitResult_HitActor_1) == 0x000AF0, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_BreakHitResult_HitComponent_1) == 0x000AF8, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_BreakHitResult_HitBoneName_1) == 0x000B00, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_BreakHitResult_BoneName_1) == 0x000B08, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_BreakHitResult_HitItem_1) == 0x000B10, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_BreakHitResult_ElementIndex_1) == 0x000B14, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_BreakHitResult_FaceIndex_1) == 0x000B18, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_BreakHitResult_TraceStart_1) == 0x000B20, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_BreakHitResult_TraceEnd_1) == 0x000B38, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_name_Variable_32) == 0x000B50, "Member 'MainBanditAI_C_PlayHitParticle::Temp_name_Variable_32' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, K2Node_DynamicCast_AsPawn) == 0x000B58, "Member 'MainBanditAI_C_PlayHitParticle::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, K2Node_DynamicCast_bSuccess_1) == 0x000B60, "Member 'MainBanditAI_C_PlayHitParticle::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_Multiply_VectorFloat_ReturnValue_9) == 0x000B68, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_Multiply_VectorFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_name_Variable_33) == 0x000B80, "Member 'MainBanditAI_C_PlayHitParticle::Temp_name_Variable_33' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000B88, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_MakeRotFromZ_ReturnValue) == 0x000BA0, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_MakeRotFromZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_MakeRotFromZ_ReturnValue_1) == 0x000BB8, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_MakeRotFromZ_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_MakeRotFromZ_ReturnValue_2) == 0x000BD0, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_MakeRotFromZ_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_MakeRotFromZ_ReturnValue_3) == 0x000BE8, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_MakeRotFromZ_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000C00, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_MakeRotFromZ_ReturnValue_4) == 0x000C08, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_MakeRotFromZ_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000C20, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, K2Node_DynamicCast_AsBP_Electric_Door_Box) == 0x000C28, "Member 'MainBanditAI_C_PlayHitParticle::K2Node_DynamicCast_AsBP_Electric_Door_Box' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, K2Node_DynamicCast_bSuccess_2) == 0x000C30, "Member 'MainBanditAI_C_PlayHitParticle::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_name_Variable_34) == 0x000C34, "Member 'MainBanditAI_C_PlayHitParticle::Temp_name_Variable_34' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, K2Node_DynamicCast_AsElectricity_Blocker) == 0x000C40, "Member 'MainBanditAI_C_PlayHitParticle::K2Node_DynamicCast_AsElectricity_Blocker' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, K2Node_DynamicCast_bSuccess_3) == 0x000C48, "Member 'MainBanditAI_C_PlayHitParticle::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_name_Variable_35) == 0x000C4C, "Member 'MainBanditAI_C_PlayHitParticle::Temp_name_Variable_35' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_name_Variable_36) == 0x000C54, "Member 'MainBanditAI_C_PlayHitParticle::Temp_name_Variable_36' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000C60, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_RandomIntegerInRange_ReturnValue_1) == 0x000C68, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_RandomIntegerInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000C70, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_SpawnDecalAttached_ReturnValue_1) == 0x000C78, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_SpawnDecalAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_SpawnDecalAttached_ReturnValue_2) == 0x000C80, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_SpawnDecalAttached_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_byte_Variable_2) == 0x000C88, "Member 'MainBanditAI_C_PlayHitParticle::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_name_Variable_37) == 0x000C8C, "Member 'MainBanditAI_C_PlayHitParticle::Temp_name_Variable_37' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000C94, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_name_Variable_38) == 0x000C98, "Member 'MainBanditAI_C_PlayHitParticle::Temp_name_Variable_38' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_name_Variable_39) == 0x000CA0, "Member 'MainBanditAI_C_PlayHitParticle::Temp_name_Variable_39' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_name_Variable_40) == 0x000CA8, "Member 'MainBanditAI_C_PlayHitParticle::Temp_name_Variable_40' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, K2Node_Select_Default) == 0x000CB0, "Member 'MainBanditAI_C_PlayHitParticle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, K2Node_Select_Default_1) == 0x000CB8, "Member 'MainBanditAI_C_PlayHitParticle::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_name_Variable_41) == 0x000CC0, "Member 'MainBanditAI_C_PlayHitParticle::Temp_name_Variable_41' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_name_Variable_42) == 0x000CC8, "Member 'MainBanditAI_C_PlayHitParticle::Temp_name_Variable_42' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_IsValid_ReturnValue_2) == 0x000CD0, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_name_Variable_43) == 0x000CD4, "Member 'MainBanditAI_C_PlayHitParticle::Temp_name_Variable_43' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_HasAuthority_ReturnValue_1) == 0x000CDC, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000CDD, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, K2Node_Select_Default_2) == 0x000CE0, "Member 'MainBanditAI_C_PlayHitParticle::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_FMODPlayEventAttached_ReturnValue) == 0x000CE8, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_FMODPlayEventAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_SelectVector_ReturnValue_7) == 0x000CF0, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_SelectVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_SpawnEmitterAttached_ReturnValue_1) == 0x000D08, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_SpawnEmitterAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, Temp_name_Variable_44) == 0x000D10, "Member 'MainBanditAI_C_PlayHitParticle::Temp_name_Variable_44' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000D18, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000D30, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, K2Node_Select_Default_3) == 0x000D48, "Member 'MainBanditAI_C_PlayHitParticle::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_Normal_ReturnValue) == 0x000D50, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000D68, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000D98, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000D99, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_Array_Length_ReturnValue_1) == 0x000D9C, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000DA0, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_RandomIntegerInRange_ReturnValue_2) == 0x000DA4, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_RandomIntegerInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_Array_Get_Item_1) == 0x000DA8, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_SpawnEmitterAttached_ReturnValue_2) == 0x000DB0, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_SpawnEmitterAttached_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_SpawnEmitterAttached_ReturnValue_3) == 0x000DB8, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_SpawnEmitterAttached_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000DC0, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_SetParameter_Value_ImplicitCast) == 0x000DC4, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_SetParameter_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle, CallFunc_SetParameter_Value_ImplicitCast_1) == 0x000DC8, "Member 'MainBanditAI_C_PlayHitParticle::CallFunc_SetParameter_Value_ImplicitCast_1' has a wrong offset!");

// Function mainBanditAI.mainBanditAI_C.PlayHitParticle_MULTI
// 0x00E8 (0x00E8 - 0x0000)
struct MainBanditAI_C_PlayHitParticle_MULTI final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x00E8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(MainBanditAI_C_PlayHitParticle_MULTI) == 0x000008, "Wrong alignment on MainBanditAI_C_PlayHitParticle_MULTI");
static_assert(sizeof(MainBanditAI_C_PlayHitParticle_MULTI) == 0x0000E8, "Wrong size on MainBanditAI_C_PlayHitParticle_MULTI");
static_assert(offsetof(MainBanditAI_C_PlayHitParticle_MULTI, HitResult) == 0x000000, "Member 'MainBanditAI_C_PlayHitParticle_MULTI::HitResult' has a wrong offset!");

// Function mainBanditAI.mainBanditAI_C.ReceivePointDamage
// 0x0160 (0x0160 - 0x0000)
struct MainBanditAI_C_ReceivePointDamage final
{
public:
	float                                         Param_Damage;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Param_HitComponent;                                // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ShotFromDirection;                                 // 0x0050(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0078(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(MainBanditAI_C_ReceivePointDamage) == 0x000008, "Wrong alignment on MainBanditAI_C_ReceivePointDamage");
static_assert(sizeof(MainBanditAI_C_ReceivePointDamage) == 0x000160, "Wrong size on MainBanditAI_C_ReceivePointDamage");
static_assert(offsetof(MainBanditAI_C_ReceivePointDamage, Param_Damage) == 0x000000, "Member 'MainBanditAI_C_ReceivePointDamage::Param_Damage' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ReceivePointDamage, DamageType) == 0x000008, "Member 'MainBanditAI_C_ReceivePointDamage::DamageType' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ReceivePointDamage, HitLocation) == 0x000010, "Member 'MainBanditAI_C_ReceivePointDamage::HitLocation' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ReceivePointDamage, HitNormal) == 0x000028, "Member 'MainBanditAI_C_ReceivePointDamage::HitNormal' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ReceivePointDamage, Param_HitComponent) == 0x000040, "Member 'MainBanditAI_C_ReceivePointDamage::Param_HitComponent' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ReceivePointDamage, BoneName) == 0x000048, "Member 'MainBanditAI_C_ReceivePointDamage::BoneName' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ReceivePointDamage, ShotFromDirection) == 0x000050, "Member 'MainBanditAI_C_ReceivePointDamage::ShotFromDirection' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ReceivePointDamage, InstigatedBy) == 0x000068, "Member 'MainBanditAI_C_ReceivePointDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ReceivePointDamage, DamageCauser) == 0x000070, "Member 'MainBanditAI_C_ReceivePointDamage::DamageCauser' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_ReceivePointDamage, HitInfo) == 0x000078, "Member 'MainBanditAI_C_ReceivePointDamage::HitInfo' has a wrong offset!");

// Function mainBanditAI.mainBanditAI_C.SetWeapon
// 0x0510 (0x0510 - 0x0000)
struct MainBanditAI_C_SetWeapon final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomInteger_Server__Clients__RandomInteger; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_1;                           // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBPS_WeaponData                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0048(0x04C0)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainBanditAI_C_SetWeapon) == 0x000008, "Wrong alignment on MainBanditAI_C_SetWeapon");
static_assert(sizeof(MainBanditAI_C_SetWeapon) == 0x000510, "Wrong size on MainBanditAI_C_SetWeapon");
static_assert(offsetof(MainBanditAI_C_SetWeapon, Temp_int_Variable) == 0x000000, "Member 'MainBanditAI_C_SetWeapon::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SetWeapon, Temp_name_Variable) == 0x000004, "Member 'MainBanditAI_C_SetWeapon::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SetWeapon, Temp_name_Variable_1) == 0x00000C, "Member 'MainBanditAI_C_SetWeapon::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SetWeapon, Temp_name_Variable_2) == 0x000014, "Member 'MainBanditAI_C_SetWeapon::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SetWeapon, Temp_name_Variable_3) == 0x00001C, "Member 'MainBanditAI_C_SetWeapon::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SetWeapon, Temp_name_Variable_4) == 0x000024, "Member 'MainBanditAI_C_SetWeapon::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SetWeapon, Temp_bool_Variable) == 0x00002C, "Member 'MainBanditAI_C_SetWeapon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SetWeapon, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00002D, "Member 'MainBanditAI_C_SetWeapon::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SetWeapon, CallFunc_RandomInteger_Server__Clients__RandomInteger) == 0x000030, "Member 'MainBanditAI_C_SetWeapon::CallFunc_RandomInteger_Server__Clients__RandomInteger' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SetWeapon, K2Node_Select_Default) == 0x000034, "Member 'MainBanditAI_C_SetWeapon::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SetWeapon, K2Node_Select_Default_1) == 0x00003C, "Member 'MainBanditAI_C_SetWeapon::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SetWeapon, CallFunc_GetDataTableRowFromName_OutRow) == 0x000048, "Member 'MainBanditAI_C_SetWeapon::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SetWeapon, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000508, "Member 'MainBanditAI_C_SetWeapon::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function mainBanditAI.mainBanditAI_C.ShowNickWidget
// 0x0001 (0x0001 - 0x0000)
struct MainBanditAI_C_ShowNickWidget final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainBanditAI_C_ShowNickWidget) == 0x000001, "Wrong alignment on MainBanditAI_C_ShowNickWidget");
static_assert(sizeof(MainBanditAI_C_ShowNickWidget) == 0x000001, "Wrong size on MainBanditAI_C_ShowNickWidget");
static_assert(offsetof(MainBanditAI_C_ShowNickWidget, Show) == 0x000000, "Member 'MainBanditAI_C_ShowNickWidget::Show' has a wrong offset!");

// Function mainBanditAI.mainBanditAI_C.SpawnLootPoint
// 0x0DC0 (0x0DC0 - 0x0000)
struct MainBanditAI_C_SpawnLootPoint final
{
public:
	TArray<struct FDefaultItemInfo>               ItemsArray;                                        // 0x0000(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow;           // 0x0038(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDefaultItemInfo                       K2Node_MakeStruct_DefaultItemInfo;                 // 0x0260(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A5[0x3];                                      // 0x02A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x02A8(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C9[0x7];                                      // 0x04C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x04D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x04E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x04EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4ED[0x3];                                      // 0x04ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeneralChanceByType                   CallFunc_GetDataTableRowFromName_OutRow_2;         // 0x04F0(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_2;    // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_521[0x7];                                      // 0x0521(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemIdGenerateChance                  CallFunc_Array_Get_Item_1;                         // 0x0528(0x0020)(HasGetValueTypeHash)
	struct FDefaultItemInfo                       K2Node_MakeStruct_DefaultItemInfo_1;               // 0x0548(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0588(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58C[0x4];                                      // 0x058C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow_3;         // 0x0598(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_3;    // 0x07B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B9[0x7];                                      // 0x07B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x07C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x07C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C9[0x7];                                      // 0x07C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDefaultItemInfo                       K2Node_MakeStruct_DefaultItemInfo_2;               // 0x07D0(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0810(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_814[0x4];                                      // 0x0814(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0818(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0820(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_821[0x7];                                      // 0x0821(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0828(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue_1;       // 0x0830(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0831(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_832[0x6];                                      // 0x0832(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow_4;         // 0x0838(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_4;    // 0x0A58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A59[0x3];                                      // 0x0A59(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0A5C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDefaultItemInfo                       K2Node_MakeStruct_DefaultItemInfo_3;               // 0x0A60(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0AA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA4[0xC];                                      // 0x0AA4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0AB0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0B10(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0B18(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item_2;                         // 0x0B28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0B30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B34[0x4];                                      // 0x0B34(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow_5;         // 0x0B38(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_5;    // 0x0D58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0D59(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D5A[0x6];                                      // 0x0D5A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDefaultItemInfo                       K2Node_MakeStruct_DefaultItemInfo_4;               // 0x0D60(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	class APawnLoot_C*                            CallFunc_FinishSpawningActor_ReturnValue;          // 0x0DA0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x0DA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0DAC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DAD[0x3];                                      // 0x0DAD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomBoolWithWeight_Weight_ImplicitCast; // 0x0DB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomBoolWithWeight_Weight_ImplicitCast_1; // 0x0DB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainBanditAI_C_SpawnLootPoint) == 0x000010, "Wrong alignment on MainBanditAI_C_SpawnLootPoint");
static_assert(sizeof(MainBanditAI_C_SpawnLootPoint) == 0x000DC0, "Wrong size on MainBanditAI_C_SpawnLootPoint");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, ItemsArray) == 0x000000, "Member 'MainBanditAI_C_SpawnLootPoint::ItemsArray' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, Temp_int_Array_Index_Variable) == 0x000010, "Member 'MainBanditAI_C_SpawnLootPoint::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'MainBanditAI_C_SpawnLootPoint::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'MainBanditAI_C_SpawnLootPoint::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'MainBanditAI_C_SpawnLootPoint::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, Temp_int_Loop_Counter_Variable_1) == 0x000020, "Member 'MainBanditAI_C_SpawnLootPoint::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, CallFunc_Add_IntInt_ReturnValue_1) == 0x000024, "Member 'MainBanditAI_C_SpawnLootPoint::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, Temp_int_Loop_Counter_Variable_2) == 0x000028, "Member 'MainBanditAI_C_SpawnLootPoint::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, CallFunc_Add_IntInt_ReturnValue_2) == 0x00002C, "Member 'MainBanditAI_C_SpawnLootPoint::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, Temp_int_Array_Index_Variable_2) == 0x000030, "Member 'MainBanditAI_C_SpawnLootPoint::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, CallFunc_GetDataTableRowFromName_OutRow) == 0x000038, "Member 'MainBanditAI_C_SpawnLootPoint::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000258, "Member 'MainBanditAI_C_SpawnLootPoint::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, K2Node_MakeStruct_DefaultItemInfo) == 0x000260, "Member 'MainBanditAI_C_SpawnLootPoint::K2Node_MakeStruct_DefaultItemInfo' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, CallFunc_Array_Add_ReturnValue) == 0x0002A0, "Member 'MainBanditAI_C_SpawnLootPoint::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, K2Node_SwitchEnum_CmpSuccess) == 0x0002A4, "Member 'MainBanditAI_C_SpawnLootPoint::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x0002A8, "Member 'MainBanditAI_C_SpawnLootPoint::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x0004C8, "Member 'MainBanditAI_C_SpawnLootPoint::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, CallFunc_Array_Get_Item) == 0x0004D0, "Member 'MainBanditAI_C_SpawnLootPoint::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, CallFunc_Array_Length_ReturnValue) == 0x0004E0, "Member 'MainBanditAI_C_SpawnLootPoint::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, CallFunc_Conv_StringToName_ReturnValue) == 0x0004E4, "Member 'MainBanditAI_C_SpawnLootPoint::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, CallFunc_Less_IntInt_ReturnValue) == 0x0004EC, "Member 'MainBanditAI_C_SpawnLootPoint::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, CallFunc_GetDataTableRowFromName_OutRow_2) == 0x0004F0, "Member 'MainBanditAI_C_SpawnLootPoint::CallFunc_GetDataTableRowFromName_OutRow_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, CallFunc_GetDataTableRowFromName_ReturnValue_2) == 0x000520, "Member 'MainBanditAI_C_SpawnLootPoint::CallFunc_GetDataTableRowFromName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, CallFunc_Array_Get_Item_1) == 0x000528, "Member 'MainBanditAI_C_SpawnLootPoint::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, K2Node_MakeStruct_DefaultItemInfo_1) == 0x000548, "Member 'MainBanditAI_C_SpawnLootPoint::K2Node_MakeStruct_DefaultItemInfo_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, CallFunc_Array_Add_ReturnValue_1) == 0x000588, "Member 'MainBanditAI_C_SpawnLootPoint::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000590, "Member 'MainBanditAI_C_SpawnLootPoint::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, CallFunc_GetDataTableRowFromName_OutRow_3) == 0x000598, "Member 'MainBanditAI_C_SpawnLootPoint::CallFunc_GetDataTableRowFromName_OutRow_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, CallFunc_GetDataTableRowFromName_ReturnValue_3) == 0x0007B8, "Member 'MainBanditAI_C_SpawnLootPoint::CallFunc_GetDataTableRowFromName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0007C0, "Member 'MainBanditAI_C_SpawnLootPoint::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x0007C8, "Member 'MainBanditAI_C_SpawnLootPoint::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, K2Node_MakeStruct_DefaultItemInfo_2) == 0x0007D0, "Member 'MainBanditAI_C_SpawnLootPoint::K2Node_MakeStruct_DefaultItemInfo_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, CallFunc_Array_Length_ReturnValue_1) == 0x000810, "Member 'MainBanditAI_C_SpawnLootPoint::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000818, "Member 'MainBanditAI_C_SpawnLootPoint::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, CallFunc_Less_IntInt_ReturnValue_1) == 0x000820, "Member 'MainBanditAI_C_SpawnLootPoint::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000828, "Member 'MainBanditAI_C_SpawnLootPoint::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, CallFunc_RandomBoolWithWeight_ReturnValue_1) == 0x000830, "Member 'MainBanditAI_C_SpawnLootPoint::CallFunc_RandomBoolWithWeight_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000831, "Member 'MainBanditAI_C_SpawnLootPoint::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, CallFunc_GetDataTableRowFromName_OutRow_4) == 0x000838, "Member 'MainBanditAI_C_SpawnLootPoint::CallFunc_GetDataTableRowFromName_OutRow_4' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, CallFunc_GetDataTableRowFromName_ReturnValue_4) == 0x000A58, "Member 'MainBanditAI_C_SpawnLootPoint::CallFunc_GetDataTableRowFromName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, CallFunc_Array_Add_ReturnValue_2) == 0x000A5C, "Member 'MainBanditAI_C_SpawnLootPoint::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, K2Node_MakeStruct_DefaultItemInfo_3) == 0x000A60, "Member 'MainBanditAI_C_SpawnLootPoint::K2Node_MakeStruct_DefaultItemInfo_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, CallFunc_Array_Add_ReturnValue_3) == 0x000AA0, "Member 'MainBanditAI_C_SpawnLootPoint::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, CallFunc_GetTransform_ReturnValue) == 0x000AB0, "Member 'MainBanditAI_C_SpawnLootPoint::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000B10, "Member 'MainBanditAI_C_SpawnLootPoint::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, K2Node_MakeArray_Array) == 0x000B18, "Member 'MainBanditAI_C_SpawnLootPoint::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, CallFunc_Array_Get_Item_2) == 0x000B28, "Member 'MainBanditAI_C_SpawnLootPoint::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, CallFunc_Array_Length_ReturnValue_2) == 0x000B30, "Member 'MainBanditAI_C_SpawnLootPoint::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, CallFunc_GetDataTableRowFromName_OutRow_5) == 0x000B38, "Member 'MainBanditAI_C_SpawnLootPoint::CallFunc_GetDataTableRowFromName_OutRow_5' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, CallFunc_GetDataTableRowFromName_ReturnValue_5) == 0x000D58, "Member 'MainBanditAI_C_SpawnLootPoint::CallFunc_GetDataTableRowFromName_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, CallFunc_Less_IntInt_ReturnValue_2) == 0x000D59, "Member 'MainBanditAI_C_SpawnLootPoint::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, K2Node_MakeStruct_DefaultItemInfo_4) == 0x000D60, "Member 'MainBanditAI_C_SpawnLootPoint::K2Node_MakeStruct_DefaultItemInfo_4' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, CallFunc_FinishSpawningActor_ReturnValue) == 0x000DA0, "Member 'MainBanditAI_C_SpawnLootPoint::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, CallFunc_Array_Add_ReturnValue_4) == 0x000DA8, "Member 'MainBanditAI_C_SpawnLootPoint::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000DAC, "Member 'MainBanditAI_C_SpawnLootPoint::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, CallFunc_RandomBoolWithWeight_Weight_ImplicitCast) == 0x000DB0, "Member 'MainBanditAI_C_SpawnLootPoint::CallFunc_RandomBoolWithWeight_Weight_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_SpawnLootPoint, CallFunc_RandomBoolWithWeight_Weight_ImplicitCast_1) == 0x000DB4, "Member 'MainBanditAI_C_SpawnLootPoint::CallFunc_RandomBoolWithWeight_Weight_ImplicitCast_1' has a wrong offset!");

// Function mainBanditAI.mainBanditAI_C.SpawnTrail
// 0x0018 (0x0018 - 0x0000)
struct MainBanditAI_C_SpawnTrail final
{
public:
	struct FVector                                Target;                                            // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainBanditAI_C_SpawnTrail) == 0x000008, "Wrong alignment on MainBanditAI_C_SpawnTrail");
static_assert(sizeof(MainBanditAI_C_SpawnTrail) == 0x000018, "Wrong size on MainBanditAI_C_SpawnTrail");
static_assert(offsetof(MainBanditAI_C_SpawnTrail, Target) == 0x000000, "Member 'MainBanditAI_C_SpawnTrail::Target' has a wrong offset!");

// Function mainBanditAI.mainBanditAI_C.StopMontage_MULTI
// 0x0018 (0x0018 - 0x0000)
struct MainBanditAI_C_StopMontage_MULTI final
{
public:
	class USkeletalMeshComponent*                 Param_Mesh;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        InBlendOutTime;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Montage;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainBanditAI_C_StopMontage_MULTI) == 0x000008, "Wrong alignment on MainBanditAI_C_StopMontage_MULTI");
static_assert(sizeof(MainBanditAI_C_StopMontage_MULTI) == 0x000018, "Wrong size on MainBanditAI_C_StopMontage_MULTI");
static_assert(offsetof(MainBanditAI_C_StopMontage_MULTI, Param_Mesh) == 0x000000, "Member 'MainBanditAI_C_StopMontage_MULTI::Param_Mesh' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_StopMontage_MULTI, InBlendOutTime) == 0x000008, "Member 'MainBanditAI_C_StopMontage_MULTI::InBlendOutTime' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_StopMontage_MULTI, Montage) == 0x000010, "Member 'MainBanditAI_C_StopMontage_MULTI::Montage' has a wrong offset!");

// Function mainBanditAI.mainBanditAI_C.Trace
// 0x0020 (0x0020 - 0x0000)
struct MainBanditAI_C_Trace final
{
public:
	double                                        SpreadPitchMin;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SpreadPitchMax;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SpreadYawMin;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SpreadYawMax;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainBanditAI_C_Trace) == 0x000008, "Wrong alignment on MainBanditAI_C_Trace");
static_assert(sizeof(MainBanditAI_C_Trace) == 0x000020, "Wrong size on MainBanditAI_C_Trace");
static_assert(offsetof(MainBanditAI_C_Trace, SpreadPitchMin) == 0x000000, "Member 'MainBanditAI_C_Trace::SpreadPitchMin' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_Trace, SpreadPitchMax) == 0x000008, "Member 'MainBanditAI_C_Trace::SpreadPitchMax' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_Trace, SpreadYawMin) == 0x000010, "Member 'MainBanditAI_C_Trace::SpreadYawMin' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_Trace, SpreadYawMax) == 0x000018, "Member 'MainBanditAI_C_Trace::SpreadYawMax' has a wrong offset!");

// Function mainBanditAI.mainBanditAI_C.UserConstructionScript
// 0x0048 (0x0048 - 0x0000)
struct MainBanditAI_C_UserConstructionScript final
{
public:
	E_Bandit_MovementMode                         Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_4;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_5;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxWalkSpeed_ImplicitCast;      // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainBanditAI_C_UserConstructionScript) == 0x000008, "Wrong alignment on MainBanditAI_C_UserConstructionScript");
static_assert(sizeof(MainBanditAI_C_UserConstructionScript) == 0x000048, "Wrong size on MainBanditAI_C_UserConstructionScript");
static_assert(offsetof(MainBanditAI_C_UserConstructionScript, Temp_byte_Variable) == 0x000000, "Member 'MainBanditAI_C_UserConstructionScript::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_UserConstructionScript, Temp_real_Variable) == 0x000008, "Member 'MainBanditAI_C_UserConstructionScript::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_UserConstructionScript, Temp_real_Variable_1) == 0x000010, "Member 'MainBanditAI_C_UserConstructionScript::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_UserConstructionScript, Temp_real_Variable_2) == 0x000018, "Member 'MainBanditAI_C_UserConstructionScript::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_UserConstructionScript, Temp_real_Variable_3) == 0x000020, "Member 'MainBanditAI_C_UserConstructionScript::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_UserConstructionScript, Temp_real_Variable_4) == 0x000028, "Member 'MainBanditAI_C_UserConstructionScript::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_UserConstructionScript, Temp_real_Variable_5) == 0x000030, "Member 'MainBanditAI_C_UserConstructionScript::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_UserConstructionScript, K2Node_Select_Default) == 0x000038, "Member 'MainBanditAI_C_UserConstructionScript::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_UserConstructionScript, K2Node_VariableSet_MaxWalkSpeed_ImplicitCast) == 0x000040, "Member 'MainBanditAI_C_UserConstructionScript::K2Node_VariableSet_MaxWalkSpeed_ImplicitCast' has a wrong offset!");

// Function mainBanditAI.mainBanditAI_C.WeaponTrace
// 0x0678 (0x0678 - 0x0000)
struct MainBanditAI_C_WeaponTrace final
{
public:
	double                                        SpreadPitchMin;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SpreadPitchMax;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SpreadYawMin;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SpreadYawMax;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HitActor;                                          // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             OutputHit;                                         // 0x0028(0x00E8)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x0110(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_3;         // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x01A0(0x0010)(ConstParm, ReferenceParm)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x01E0(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_1; // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x02A8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391[0x7];                                      // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_1;                 // 0x0398(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_1;            // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0481(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0482(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_483[0x1];                                      // 0x0483(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0484(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48C[0x4];                                      // 0x048C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0490(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x04A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x04C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x04D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x04F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x04F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0500(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0518(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x051C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0520(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_524[0x4];                                      // 0x0524(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0528(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0540(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0559(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55A[0x2];                                      // 0x055A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x055C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0560(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_564[0x4];                                      // 0x0564(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0568(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0580(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0598(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x05B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x05C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x05D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x05D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x05E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x05F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x05F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x05F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5FC[0x4];                                      // 0x05FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0600(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0618(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0630(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default_1;                           // 0x0648(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0660(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_1;           // 0x0664(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x0668(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast_1;         // 0x066C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomBoolWithWeight_Weight_ImplicitCast; // 0x0670(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainBanditAI_C_WeaponTrace) == 0x000008, "Wrong alignment on MainBanditAI_C_WeaponTrace");
static_assert(sizeof(MainBanditAI_C_WeaponTrace) == 0x000678, "Wrong size on MainBanditAI_C_WeaponTrace");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, SpreadPitchMin) == 0x000000, "Member 'MainBanditAI_C_WeaponTrace::SpreadPitchMin' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, SpreadPitchMax) == 0x000008, "Member 'MainBanditAI_C_WeaponTrace::SpreadPitchMax' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, SpreadYawMin) == 0x000010, "Member 'MainBanditAI_C_WeaponTrace::SpreadYawMin' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, SpreadYawMax) == 0x000018, "Member 'MainBanditAI_C_WeaponTrace::SpreadYawMax' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, HitActor) == 0x000020, "Member 'MainBanditAI_C_WeaponTrace::HitActor' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, OutputHit) == 0x000028, "Member 'MainBanditAI_C_WeaponTrace::OutputHit' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, ReturnValue) == 0x000110, "Member 'MainBanditAI_C_WeaponTrace::ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000118, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_RandomFloatInRange_ReturnValue) == 0x000120, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000128, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000130, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000138, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000140, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000148, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_MakeRotator_ReturnValue) == 0x000150, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_RandomFloatInRange_ReturnValue_3) == 0x000168, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_RandomFloatInRange_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_MakeRotator_ReturnValue_1) == 0x000170, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000188, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, K2Node_DynamicCast_AsSurvival_Player) == 0x000190, "Member 'MainBanditAI_C_WeaponTrace::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, K2Node_DynamicCast_bSuccess) == 0x000198, "Member 'MainBanditAI_C_WeaponTrace::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, K2Node_MakeArray_Array) == 0x0001A0, "Member 'MainBanditAI_C_WeaponTrace::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_MapRangeClamped_ReturnValue) == 0x0001B0, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x0001B8, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_GetSocketLocation_ReturnValue) == 0x0001C0, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_Not_PreBool_ReturnValue) == 0x0001D8, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, K2Node_MakeArray_Array_1) == 0x0001E0, "Member 'MainBanditAI_C_WeaponTrace::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x0001F0, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_GetSocketLocation_ReturnValue_1) == 0x000208, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000220, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, Temp_bool_Variable) == 0x000238, "Member 'MainBanditAI_C_WeaponTrace::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_Normal_ReturnValue) == 0x000240, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, Temp_bool_Variable_1) == 0x000258, "Member 'MainBanditAI_C_WeaponTrace::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000260, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_Add_VectorVector_ReturnValue) == 0x000278, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_GreaterGreater_VectorRotator_ReturnValue_1) == 0x000290, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_GreaterGreater_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_LineTraceSingle_OutHit) == 0x0002A8, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_LineTraceSingle_ReturnValue) == 0x000390, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_LineTraceSingle_OutHit_1) == 0x000398, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_LineTraceSingle_OutHit_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_LineTraceSingle_ReturnValue_1) == 0x000480, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_LineTraceSingle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_BreakHitResult_bBlockingHit) == 0x000481, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_BreakHitResult_bInitialOverlap) == 0x000482, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_BreakHitResult_Time) == 0x000484, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_BreakHitResult_Distance) == 0x000488, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_BreakHitResult_Location) == 0x000490, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_BreakHitResult_ImpactPoint) == 0x0004A8, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_BreakHitResult_Normal) == 0x0004C0, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_BreakHitResult_ImpactNormal) == 0x0004D8, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_BreakHitResult_PhysMat) == 0x0004F0, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_BreakHitResult_HitActor) == 0x0004F8, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_BreakHitResult_HitComponent) == 0x000500, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_BreakHitResult_HitBoneName) == 0x000508, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_BreakHitResult_BoneName) == 0x000510, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_BreakHitResult_HitItem) == 0x000518, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_BreakHitResult_ElementIndex) == 0x00051C, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_BreakHitResult_FaceIndex) == 0x000520, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_BreakHitResult_TraceStart) == 0x000528, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_BreakHitResult_TraceEnd) == 0x000540, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000558, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000559, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_BreakHitResult_Time_1) == 0x00055C, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_BreakHitResult_Distance_1) == 0x000560, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_BreakHitResult_Location_1) == 0x000568, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000580, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_BreakHitResult_Normal_1) == 0x000598, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_BreakHitResult_ImpactNormal_1) == 0x0005B0, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_BreakHitResult_PhysMat_1) == 0x0005C8, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_BreakHitResult_HitActor_1) == 0x0005D0, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_BreakHitResult_HitComponent_1) == 0x0005D8, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_BreakHitResult_HitBoneName_1) == 0x0005E0, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_BreakHitResult_BoneName_1) == 0x0005E8, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_BreakHitResult_HitItem_1) == 0x0005F0, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_BreakHitResult_ElementIndex_1) == 0x0005F4, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_BreakHitResult_FaceIndex_1) == 0x0005F8, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_BreakHitResult_TraceStart_1) == 0x000600, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_BreakHitResult_TraceEnd_1) == 0x000618, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, K2Node_Select_Default) == 0x000630, "Member 'MainBanditAI_C_WeaponTrace::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, K2Node_Select_Default_1) == 0x000648, "Member 'MainBanditAI_C_WeaponTrace::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000660, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_MakeRotator_Yaw_ImplicitCast_1) == 0x000664, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_MakeRotator_Yaw_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x000668, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_MakeRotator_Pitch_ImplicitCast_1) == 0x00066C, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_MakeRotator_Pitch_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WeaponTrace, CallFunc_RandomBoolWithWeight_Weight_ImplicitCast) == 0x000670, "Member 'MainBanditAI_C_WeaponTrace::CallFunc_RandomBoolWithWeight_Weight_ImplicitCast' has a wrong offset!");

// Function mainBanditAI.mainBanditAI_C.WPGetLefHandEffectorTransform
// 0x0130 (0x0130 - 0x0000)
struct MainBanditAI_C_WPGetLefHandEffectorTransform final
{
public:
	struct FVector                                TransformLocation;                                 // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               TransformRotation;                                 // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                TransformScale;                                    // 0x0030(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasEffector;                                       // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue;              // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0050(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue_1;            // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformToBoneSpace_OutPosition;         // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_TransformToBoneSpace_OutRotation;         // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainBanditAI_C_WPGetLefHandEffectorTransform) == 0x000010, "Wrong alignment on MainBanditAI_C_WPGetLefHandEffectorTransform");
static_assert(sizeof(MainBanditAI_C_WPGetLefHandEffectorTransform) == 0x000130, "Wrong size on MainBanditAI_C_WPGetLefHandEffectorTransform");
static_assert(offsetof(MainBanditAI_C_WPGetLefHandEffectorTransform, TransformLocation) == 0x000000, "Member 'MainBanditAI_C_WPGetLefHandEffectorTransform::TransformLocation' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WPGetLefHandEffectorTransform, TransformRotation) == 0x000018, "Member 'MainBanditAI_C_WPGetLefHandEffectorTransform::TransformRotation' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WPGetLefHandEffectorTransform, TransformScale) == 0x000030, "Member 'MainBanditAI_C_WPGetLefHandEffectorTransform::TransformScale' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WPGetLefHandEffectorTransform, HasEffector) == 0x000048, "Member 'MainBanditAI_C_WPGetLefHandEffectorTransform::HasEffector' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WPGetLefHandEffectorTransform, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'MainBanditAI_C_WPGetLefHandEffectorTransform::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WPGetLefHandEffectorTransform, CallFunc_DoesSocketExist_ReturnValue) == 0x00004A, "Member 'MainBanditAI_C_WPGetLefHandEffectorTransform::CallFunc_DoesSocketExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WPGetLefHandEffectorTransform, CallFunc_GetSocketTransform_ReturnValue) == 0x000050, "Member 'MainBanditAI_C_WPGetLefHandEffectorTransform::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WPGetLefHandEffectorTransform, CallFunc_DoesSocketExist_ReturnValue_1) == 0x0000B0, "Member 'MainBanditAI_C_WPGetLefHandEffectorTransform::CallFunc_DoesSocketExist_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WPGetLefHandEffectorTransform, CallFunc_BreakTransform_Location) == 0x0000B8, "Member 'MainBanditAI_C_WPGetLefHandEffectorTransform::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WPGetLefHandEffectorTransform, CallFunc_BreakTransform_Rotation) == 0x0000D0, "Member 'MainBanditAI_C_WPGetLefHandEffectorTransform::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WPGetLefHandEffectorTransform, CallFunc_BreakTransform_Scale) == 0x0000E8, "Member 'MainBanditAI_C_WPGetLefHandEffectorTransform::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WPGetLefHandEffectorTransform, CallFunc_TransformToBoneSpace_OutPosition) == 0x000100, "Member 'MainBanditAI_C_WPGetLefHandEffectorTransform::CallFunc_TransformToBoneSpace_OutPosition' has a wrong offset!");
static_assert(offsetof(MainBanditAI_C_WPGetLefHandEffectorTransform, CallFunc_TransformToBoneSpace_OutRotation) == 0x000118, "Member 'MainBanditAI_C_WPGetLefHandEffectorTransform::CallFunc_TransformToBoneSpace_OutRotation' has a wrong offset!");

// Function mainBanditAI.mainBanditAI_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct MainBanditAI_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainBanditAI_C_ReceiveTick) == 0x000004, "Wrong alignment on MainBanditAI_C_ReceiveTick");
static_assert(sizeof(MainBanditAI_C_ReceiveTick) == 0x000004, "Wrong size on MainBanditAI_C_ReceiveTick");
static_assert(offsetof(MainBanditAI_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'MainBanditAI_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

