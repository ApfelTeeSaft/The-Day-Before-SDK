#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MPMainContainerBox

#include "Basic.hpp"

#include "E_InteractType_structs.hpp"
#include "E_ActorType_structs.hpp"
#include "ContainerPickupsInfo_structs.hpp"
#include "MpContentRep_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "DefaultItemInfo_structs.hpp"
#include "FItemInfo_structs.hpp"
#include "PickupAttachments_structs.hpp"
#include "ELootTypes_structs.hpp"
#include "LootPointType_structs.hpp"
#include "Engine_structs.hpp"
#include "SlotRarity_structs.hpp"
#include "S_LootChanceModifier_structs.hpp"
#include "LG2_LootRareType_structs.hpp"
#include "ItemIdGenerateChance_structs.hpp"
#include "LootGeneratorType_structs.hpp"
#include "GeneralChanceByType_structs.hpp"
#include "CountChance_structs.hpp"
#include "ServerSlotInfo_structs.hpp"
#include "ServerSlotInfoArray_structs.hpp"


namespace SDK::Params
{

// Function MPMainContainerBox.MPMainContainerBox_C.AddContainersToDictionary
// 0x0038 (0x0038 - 0x0000)
struct MPMainContainerBox_C_AddContainersToDictionary final
{
public:
	TArray<class UJSIContainer_C*>                Containers;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotMotherUID_UDID;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_AddContainersToDictionary) == 0x000008, "Wrong alignment on MPMainContainerBox_C_AddContainersToDictionary");
static_assert(sizeof(MPMainContainerBox_C_AddContainersToDictionary) == 0x000038, "Wrong size on MPMainContainerBox_C_AddContainersToDictionary");
static_assert(offsetof(MPMainContainerBox_C_AddContainersToDictionary, Containers) == 0x000000, "Member 'MPMainContainerBox_C_AddContainersToDictionary::Containers' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddContainersToDictionary, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'MPMainContainerBox_C_AddContainersToDictionary::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddContainersToDictionary, Temp_int_Array_Index_Variable) == 0x000014, "Member 'MPMainContainerBox_C_AddContainersToDictionary::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddContainersToDictionary, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'MPMainContainerBox_C_AddContainersToDictionary::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddContainersToDictionary, CallFunc_Array_Get_Item) == 0x000020, "Member 'MPMainContainerBox_C_AddContainersToDictionary::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddContainersToDictionary, CallFunc_GetSlotMotherUID_UDID) == 0x000028, "Member 'MPMainContainerBox_C_AddContainersToDictionary::CallFunc_GetSlotMotherUID_UDID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddContainersToDictionary, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'MPMainContainerBox_C_AddContainersToDictionary::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddContainersToDictionary, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'MPMainContainerBox_C_AddContainersToDictionary::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.AddContainerToContainer
// 0x0448 (0x0448 - 0x0000)
struct MPMainContainerBox_C_AddContainerToContainer final
{
public:
	struct FContainerPickupsInfo                  Container;                                         // 0x0000(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FContainerPickupsInfo>          ContainerData;                                     // 0x0068(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<struct FContainerPickupsInfo>          Param_ContainerItems;                              // 0x0078(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	int32                                         ToContainerUID;                                    // 0x0088(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToSlot;                                            // 0x008C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rotated_;                                          // 0x0090(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NotSync;                                           // 0x0091(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ArrIndex;                                          // 0x0094(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Uid;                                               // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  CallFunc_Array_Get_Item;                           // 0x00E0(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotDataArrIndexByUID_Index;           // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_Array_Get_Item_1;                         // 0x0160(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow;           // 0x01D0(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F1[0x7];                                      // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x03F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0408(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0418(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x043C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_AddContainerToContainer) == 0x000008, "Wrong alignment on MPMainContainerBox_C_AddContainerToContainer");
static_assert(sizeof(MPMainContainerBox_C_AddContainerToContainer) == 0x000448, "Wrong size on MPMainContainerBox_C_AddContainerToContainer");
static_assert(offsetof(MPMainContainerBox_C_AddContainerToContainer, Container) == 0x000000, "Member 'MPMainContainerBox_C_AddContainerToContainer::Container' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddContainerToContainer, ContainerData) == 0x000068, "Member 'MPMainContainerBox_C_AddContainerToContainer::ContainerData' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddContainerToContainer, Param_ContainerItems) == 0x000078, "Member 'MPMainContainerBox_C_AddContainerToContainer::Param_ContainerItems' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddContainerToContainer, ToContainerUID) == 0x000088, "Member 'MPMainContainerBox_C_AddContainerToContainer::ToContainerUID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddContainerToContainer, ToSlot) == 0x00008C, "Member 'MPMainContainerBox_C_AddContainerToContainer::ToSlot' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddContainerToContainer, Rotated_) == 0x000090, "Member 'MPMainContainerBox_C_AddContainerToContainer::Rotated_' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddContainerToContainer, NotSync) == 0x000091, "Member 'MPMainContainerBox_C_AddContainerToContainer::NotSync' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddContainerToContainer, ArrIndex) == 0x000094, "Member 'MPMainContainerBox_C_AddContainerToContainer::ArrIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddContainerToContainer, Uid) == 0x000098, "Member 'MPMainContainerBox_C_AddContainerToContainer::Uid' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddContainerToContainer, Temp_int_Array_Index_Variable) == 0x00009C, "Member 'MPMainContainerBox_C_AddContainerToContainer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddContainerToContainer, Temp_int_Loop_Counter_Variable) == 0x0000A0, "Member 'MPMainContainerBox_C_AddContainerToContainer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddContainerToContainer, Temp_int_Loop_Counter_Variable_1) == 0x0000A4, "Member 'MPMainContainerBox_C_AddContainerToContainer::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddContainerToContainer, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'MPMainContainerBox_C_AddContainerToContainer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddContainerToContainer, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000AC, "Member 'MPMainContainerBox_C_AddContainerToContainer::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddContainerToContainer, Temp_int_Array_Index_Variable_1) == 0x0000B0, "Member 'MPMainContainerBox_C_AddContainerToContainer::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddContainerToContainer, CallFunc_HasAuthority_ReturnValue) == 0x0000B4, "Member 'MPMainContainerBox_C_AddContainerToContainer::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddContainerToContainer, CallFunc_Array_Length_ReturnValue) == 0x0000B8, "Member 'MPMainContainerBox_C_AddContainerToContainer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddContainerToContainer, CallFunc_Conv_IntToString_ReturnValue) == 0x0000C0, "Member 'MPMainContainerBox_C_AddContainerToContainer::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddContainerToContainer, CallFunc_Concat_StrStr_ReturnValue) == 0x0000D0, "Member 'MPMainContainerBox_C_AddContainerToContainer::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddContainerToContainer, CallFunc_Array_Get_Item) == 0x0000E0, "Member 'MPMainContainerBox_C_AddContainerToContainer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddContainerToContainer, CallFunc_Array_Length_ReturnValue_1) == 0x000148, "Member 'MPMainContainerBox_C_AddContainerToContainer::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddContainerToContainer, CallFunc_Less_IntInt_ReturnValue) == 0x00014C, "Member 'MPMainContainerBox_C_AddContainerToContainer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddContainerToContainer, CallFunc_GetSlotDataArrIndexByUID_Index) == 0x000150, "Member 'MPMainContainerBox_C_AddContainerToContainer::CallFunc_GetSlotDataArrIndexByUID_Index' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddContainerToContainer, CallFunc_Array_Add_ReturnValue) == 0x000154, "Member 'MPMainContainerBox_C_AddContainerToContainer::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddContainerToContainer, CallFunc_Array_Length_ReturnValue_2) == 0x000158, "Member 'MPMainContainerBox_C_AddContainerToContainer::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddContainerToContainer, CallFunc_Array_Get_Item_1) == 0x000160, "Member 'MPMainContainerBox_C_AddContainerToContainer::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddContainerToContainer, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001C8, "Member 'MPMainContainerBox_C_AddContainerToContainer::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddContainerToContainer, CallFunc_GetDataTableRowFromName_OutRow) == 0x0001D0, "Member 'MPMainContainerBox_C_AddContainerToContainer::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddContainerToContainer, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0003F0, "Member 'MPMainContainerBox_C_AddContainerToContainer::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddContainerToContainer, CallFunc_Conv_NameToString_ReturnValue) == 0x0003F8, "Member 'MPMainContainerBox_C_AddContainerToContainer::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddContainerToContainer, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000408, "Member 'MPMainContainerBox_C_AddContainerToContainer::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddContainerToContainer, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000418, "Member 'MPMainContainerBox_C_AddContainerToContainer::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddContainerToContainer, CallFunc_BreakVector2D_X) == 0x000428, "Member 'MPMainContainerBox_C_AddContainerToContainer::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddContainerToContainer, CallFunc_BreakVector2D_Y) == 0x000430, "Member 'MPMainContainerBox_C_AddContainerToContainer::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddContainerToContainer, CallFunc_FTrunc_ReturnValue) == 0x000438, "Member 'MPMainContainerBox_C_AddContainerToContainer::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddContainerToContainer, CallFunc_FTrunc_ReturnValue_1) == 0x00043C, "Member 'MPMainContainerBox_C_AddContainerToContainer::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddContainerToContainer, CallFunc_Array_Add_ReturnValue_1) == 0x000440, "Member 'MPMainContainerBox_C_AddContainerToContainer::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.AddItemToContainer
// 0x05F8 (0x05F8 - 0x0000)
struct MPMainContainerBox_C_AddItemToContainer final
{
public:
	int32                                         ToContainerUID;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToSlotIndex;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  ItemPInfo;                                         // 0x0008(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Rotated_;                                          // 0x0070(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallMCEvent_;                                      // 0x0071(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Added;                                             // 0x0072(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_73[0x5];                                       // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             ItemInfo;                                          // 0x0078(0x0220)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         AddedTo;                                           // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  NewItem;                                           // 0x02A0(0x0068)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         ItemUID;                                           // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ArrIndex;                                          // 0x030C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ItemVector;                                        // 0x0310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow;           // 0x0328(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_549[0x7];                                      // 0x0549(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0550(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0560(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0570(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0580(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0584(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0588(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x058C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0590(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0594(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0595(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_596[0x2];                                      // 0x0596(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x05A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x05AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BlindAddNewItemToContainer_Added;         // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B1[0x3];                                      // 0x05B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BlindAddNewItemToContainer_ToSlotIndex;   // 0x05B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BlindAddNewItemToContainer_UniqueId;      // 0x05B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x05BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5BD[0x3];                                      // 0x05BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x05C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x05C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetHostingSlots_Indexes;                  // 0x05C8(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetSlotDataArrIndexByUID_Index;           // 0x05D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x05DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x05E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x05E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x05E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E9[0x3];                                      // 0x05E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x05EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x05F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_AddItemToContainer) == 0x000008, "Wrong alignment on MPMainContainerBox_C_AddItemToContainer");
static_assert(sizeof(MPMainContainerBox_C_AddItemToContainer) == 0x0005F8, "Wrong size on MPMainContainerBox_C_AddItemToContainer");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer, ToContainerUID) == 0x000000, "Member 'MPMainContainerBox_C_AddItemToContainer::ToContainerUID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer, ToSlotIndex) == 0x000004, "Member 'MPMainContainerBox_C_AddItemToContainer::ToSlotIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer, ItemPInfo) == 0x000008, "Member 'MPMainContainerBox_C_AddItemToContainer::ItemPInfo' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer, Rotated_) == 0x000070, "Member 'MPMainContainerBox_C_AddItemToContainer::Rotated_' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer, CallMCEvent_) == 0x000071, "Member 'MPMainContainerBox_C_AddItemToContainer::CallMCEvent_' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer, Added) == 0x000072, "Member 'MPMainContainerBox_C_AddItemToContainer::Added' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer, ItemInfo) == 0x000078, "Member 'MPMainContainerBox_C_AddItemToContainer::ItemInfo' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer, AddedTo) == 0x000298, "Member 'MPMainContainerBox_C_AddItemToContainer::AddedTo' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer, NewItem) == 0x0002A0, "Member 'MPMainContainerBox_C_AddItemToContainer::NewItem' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer, ItemUID) == 0x000308, "Member 'MPMainContainerBox_C_AddItemToContainer::ItemUID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer, ArrIndex) == 0x00030C, "Member 'MPMainContainerBox_C_AddItemToContainer::ArrIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer, ItemVector) == 0x000310, "Member 'MPMainContainerBox_C_AddItemToContainer::ItemVector' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer, Temp_int_Array_Index_Variable) == 0x000320, "Member 'MPMainContainerBox_C_AddItemToContainer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer, CallFunc_GetDataTableRowFromName_OutRow) == 0x000328, "Member 'MPMainContainerBox_C_AddItemToContainer::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000548, "Member 'MPMainContainerBox_C_AddItemToContainer::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer, CallFunc_Conv_NameToString_ReturnValue) == 0x000550, "Member 'MPMainContainerBox_C_AddItemToContainer::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer, CallFunc_Concat_StrStr_ReturnValue) == 0x000560, "Member 'MPMainContainerBox_C_AddItemToContainer::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000570, "Member 'MPMainContainerBox_C_AddItemToContainer::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer, Temp_int_Loop_Counter_Variable) == 0x000580, "Member 'MPMainContainerBox_C_AddItemToContainer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer, Temp_int_Loop_Counter_Variable_1) == 0x000584, "Member 'MPMainContainerBox_C_AddItemToContainer::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer, CallFunc_Add_IntInt_ReturnValue) == 0x000588, "Member 'MPMainContainerBox_C_AddItemToContainer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer, CallFunc_Add_IntInt_ReturnValue_1) == 0x00058C, "Member 'MPMainContainerBox_C_AddItemToContainer::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer, Temp_int_Array_Index_Variable_1) == 0x000590, "Member 'MPMainContainerBox_C_AddItemToContainer::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer, CallFunc_HasAuthority_ReturnValue) == 0x000594, "Member 'MPMainContainerBox_C_AddItemToContainer::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000595, "Member 'MPMainContainerBox_C_AddItemToContainer::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer, CallFunc_BreakVector2D_X) == 0x000598, "Member 'MPMainContainerBox_C_AddItemToContainer::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer, CallFunc_BreakVector2D_Y) == 0x0005A0, "Member 'MPMainContainerBox_C_AddItemToContainer::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer, CallFunc_FTrunc_ReturnValue) == 0x0005A8, "Member 'MPMainContainerBox_C_AddItemToContainer::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer, CallFunc_FTrunc_ReturnValue_1) == 0x0005AC, "Member 'MPMainContainerBox_C_AddItemToContainer::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer, CallFunc_BlindAddNewItemToContainer_Added) == 0x0005B0, "Member 'MPMainContainerBox_C_AddItemToContainer::CallFunc_BlindAddNewItemToContainer_Added' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer, CallFunc_BlindAddNewItemToContainer_ToSlotIndex) == 0x0005B4, "Member 'MPMainContainerBox_C_AddItemToContainer::CallFunc_BlindAddNewItemToContainer_ToSlotIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer, CallFunc_BlindAddNewItemToContainer_UniqueId) == 0x0005B8, "Member 'MPMainContainerBox_C_AddItemToContainer::CallFunc_BlindAddNewItemToContainer_UniqueId' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0005BC, "Member 'MPMainContainerBox_C_AddItemToContainer::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer, CallFunc_Array_Add_ReturnValue) == 0x0005C0, "Member 'MPMainContainerBox_C_AddItemToContainer::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer, CallFunc_Array_Add_ReturnValue_1) == 0x0005C4, "Member 'MPMainContainerBox_C_AddItemToContainer::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer, CallFunc_GetHostingSlots_Indexes) == 0x0005C8, "Member 'MPMainContainerBox_C_AddItemToContainer::CallFunc_GetHostingSlots_Indexes' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer, CallFunc_GetSlotDataArrIndexByUID_Index) == 0x0005D8, "Member 'MPMainContainerBox_C_AddItemToContainer::CallFunc_GetSlotDataArrIndexByUID_Index' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer, CallFunc_Array_Get_Item) == 0x0005DC, "Member 'MPMainContainerBox_C_AddItemToContainer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer, CallFunc_Array_Get_Item_1) == 0x0005E0, "Member 'MPMainContainerBox_C_AddItemToContainer::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer, CallFunc_Array_Length_ReturnValue) == 0x0005E4, "Member 'MPMainContainerBox_C_AddItemToContainer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer, CallFunc_Less_IntInt_ReturnValue) == 0x0005E8, "Member 'MPMainContainerBox_C_AddItemToContainer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer, CallFunc_Array_Length_ReturnValue_1) == 0x0005EC, "Member 'MPMainContainerBox_C_AddItemToContainer::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer, CallFunc_Less_IntInt_ReturnValue_1) == 0x0005F0, "Member 'MPMainContainerBox_C_AddItemToContainer::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.AddItemToContainer_NoData
// 0x01C8 (0x01C8 - 0x0000)
struct MPMainContainerBox_C_AddItemToContainer_NoData final
{
public:
	int32                                         ContainerUID;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NOfColumns;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NOfRows;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              SlotVector;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Added;                                             // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AddedTo;                                           // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 HostingSlots;                                      // 0x0028(0x0010)(Parm, OutParm)
	int32                                         CurrentIndex;                                      // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Y;                                                 // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         X;                                                 // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 AllUsedSlots;                                      // 0x0048(0x0010)(Edit, BlueprintVisible)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86[0x2];                                       // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetHostingSlots_Indexes;                  // 0x0098(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetColumnRowBySlotIndex_Column;           // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetColumnRowBySlotIndex_Row;              // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CE[0x2];                                       // 0x00CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E6[0x2];                                       // 0x00E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_Array_Get_Item_1;                         // 0x00E8(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0155(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_156[0x2];                                      // 0x0156(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_Array_Get_Item_2;                         // 0x0158(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x01C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_AddItemToContainer_NoData) == 0x000008, "Wrong alignment on MPMainContainerBox_C_AddItemToContainer_NoData");
static_assert(sizeof(MPMainContainerBox_C_AddItemToContainer_NoData) == 0x0001C8, "Wrong size on MPMainContainerBox_C_AddItemToContainer_NoData");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, ContainerUID) == 0x000000, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::ContainerUID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, NOfColumns) == 0x000004, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::NOfColumns' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, NOfRows) == 0x000008, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::NOfRows' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, SlotVector) == 0x000010, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::SlotVector' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, Added) == 0x000020, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::Added' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, AddedTo) == 0x000024, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::AddedTo' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, HostingSlots) == 0x000028, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::HostingSlots' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, CurrentIndex) == 0x000038, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::CurrentIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, Y) == 0x00003C, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::Y' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, X) == 0x000040, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::X' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, AllUsedSlots) == 0x000048, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::AllUsedSlots' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, CallFunc_BreakVector2D_X) == 0x000058, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, CallFunc_BreakVector2D_Y) == 0x000060, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, Temp_int_Loop_Counter_Variable) == 0x000068, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, CallFunc_FTrunc_ReturnValue) == 0x00006C, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, CallFunc_FTrunc_ReturnValue_1) == 0x000074, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, Temp_int_Loop_Counter_Variable_1) == 0x000078, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, CallFunc_Add_IntInt_ReturnValue_1) == 0x00007C, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, Temp_int_Array_Index_Variable) == 0x000080, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, Temp_bool_Variable) == 0x000084, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, CallFunc_Not_PreBool_ReturnValue) == 0x000085, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, Temp_int_Loop_Counter_Variable_2) == 0x000088, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, CallFunc_Add_IntInt_ReturnValue_2) == 0x00008C, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, Temp_int_Array_Index_Variable_1) == 0x000090, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, Temp_int_Array_Index_Variable_2) == 0x000094, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, CallFunc_GetHostingSlots_Indexes) == 0x000098, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::CallFunc_GetHostingSlots_Indexes' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, CallFunc_Array_Get_Item) == 0x0000A8, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, CallFunc_Array_Length_ReturnValue) == 0x0000AC, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, CallFunc_Less_IntInt_ReturnValue) == 0x0000B0, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, CallFunc_GetColumnRowBySlotIndex_Column) == 0x0000B4, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::CallFunc_GetColumnRowBySlotIndex_Column' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, CallFunc_GetColumnRowBySlotIndex_Row) == 0x0000B8, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::CallFunc_GetColumnRowBySlotIndex_Row' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, CallFunc_Array_Contains_ReturnValue) == 0x0000BC, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000C0, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, CallFunc_Greater_IntInt_ReturnValue) == 0x0000C4, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000C8, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0000CC, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, CallFunc_BooleanOR_ReturnValue) == 0x0000CD, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, CallFunc_Multiply_IntInt_ReturnValue) == 0x0000D0, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000D4, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000D8, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, Temp_int_Variable) == 0x0000DC, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, CallFunc_Add_IntInt_ReturnValue_5) == 0x0000E0, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000E4, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, CallFunc_BooleanAND_ReturnValue) == 0x0000E5, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, CallFunc_Array_Get_Item_1) == 0x0000E8, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, CallFunc_Array_Length_ReturnValue_1) == 0x000150, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, CallFunc_Less_IntInt_ReturnValue_1) == 0x000154, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000155, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, CallFunc_Array_Get_Item_2) == 0x000158, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, CallFunc_Array_Length_ReturnValue_2) == 0x0001C0, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001C4, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToContainer_NoData, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0001C5, "Member 'MPMainContainerBox_C_AddItemToContainer_NoData::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.AddItemToDropBox (Multicast)
// 0x0048 (0x0048 - 0x0000)
struct MPMainContainerBox_C_AddItemToDropBox__Multicast_ final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDefaultItemInfo                       Item;                                              // 0x0008(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_AddItemToDropBox__Multicast_) == 0x000008, "Wrong alignment on MPMainContainerBox_C_AddItemToDropBox__Multicast_");
static_assert(sizeof(MPMainContainerBox_C_AddItemToDropBox__Multicast_) == 0x000048, "Wrong size on MPMainContainerBox_C_AddItemToDropBox__Multicast_");
static_assert(offsetof(MPMainContainerBox_C_AddItemToDropBox__Multicast_, Actor) == 0x000000, "Member 'MPMainContainerBox_C_AddItemToDropBox__Multicast_::Actor' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToDropBox__Multicast_, Item) == 0x000008, "Member 'MPMainContainerBox_C_AddItemToDropBox__Multicast_::Item' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.AddItemToFreeSlot (OnlyServer)
// 0x08D0 (0x08D0 - 0x0000)
struct MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_ final
{
public:
	int32                                         ContainerUID;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDefaultItemInfo                       Item;                                              // 0x0008(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          AutoUpdate;                                        // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0049(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  Container;                                         // 0x0050(0x0068)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	struct FDefaultItemInfo                       DefItem;                                           // 0x00B8(0x0040)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  FunctionContainer;                                 // 0x00F8(0x0068)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Uid;                                               // 0x0160(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AddedTo;                                           // 0x0164(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CurrentItem;                                       // 0x0168(0x0220)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          FunctionResult;                                    // 0x0388(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0389(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38A[0x6];                                      // 0x038A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow;           // 0x0390(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B1[0x7];                                      // 0x05B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x05C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x05C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FContainerPickupsInfo>          K2Node_MakeArray_Array;                            // 0x05D8(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_UpdateContainerData__OnlyServer__Result;  // 0x05E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x05E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BlindAddNewItemToContainer_Added;         // 0x05EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EB[0x1];                                      // 0x05EB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BlindAddNewItemToContainer_ToSlotIndex;   // 0x05EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BlindAddNewItemToContainer_UniqueId;      // 0x05F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F4[0x4];                                      // 0x05F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x05F8(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0818(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_819[0x7];                                      // 0x0819(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0820(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0830(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0840(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0850(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCompiledContainerStructure_Result;     // 0x0851(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_852[0x6];                                      // 0x0852(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_GetCompiledContainerStructure_Container;  // 0x0858(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_BlindAddNewItemToContainer_Added_1;       // 0x08C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C1[0x3];                                      // 0x08C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BlindAddNewItemToContainer_ToSlotIndex_1; // 0x08C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BlindAddNewItemToContainer_UniqueId_1;    // 0x08C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_) == 0x000008, "Wrong alignment on MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_");
static_assert(sizeof(MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_) == 0x0008D0, "Wrong size on MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_");
static_assert(offsetof(MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_, ContainerUID) == 0x000000, "Member 'MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_::ContainerUID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_, Item) == 0x000008, "Member 'MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_::Item' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_, AutoUpdate) == 0x000048, "Member 'MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_::AutoUpdate' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_, Result) == 0x000049, "Member 'MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_::Result' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_, Container) == 0x000050, "Member 'MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_::Container' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_, DefItem) == 0x0000B8, "Member 'MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_::DefItem' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_, FunctionContainer) == 0x0000F8, "Member 'MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_::FunctionContainer' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_, Uid) == 0x000160, "Member 'MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_::Uid' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_, AddedTo) == 0x000164, "Member 'MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_::AddedTo' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_, CurrentItem) == 0x000168, "Member 'MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_::CurrentItem' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_, FunctionResult) == 0x000388, "Member 'MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_::FunctionResult' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000389, "Member 'MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_, CallFunc_GetDataTableRowFromName_OutRow) == 0x000390, "Member 'MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0005B0, "Member 'MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_, CallFunc_BreakVector2D_X) == 0x0005B8, "Member 'MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_, CallFunc_BreakVector2D_Y) == 0x0005C0, "Member 'MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_, CallFunc_MakeVector2D_ReturnValue) == 0x0005C8, "Member 'MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_, K2Node_MakeArray_Array) == 0x0005D8, "Member 'MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_, CallFunc_UpdateContainerData__OnlyServer__Result) == 0x0005E8, "Member 'MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_::CallFunc_UpdateContainerData__OnlyServer__Result' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x0005E9, "Member 'MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_, CallFunc_BlindAddNewItemToContainer_Added) == 0x0005EA, "Member 'MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_::CallFunc_BlindAddNewItemToContainer_Added' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_, CallFunc_BlindAddNewItemToContainer_ToSlotIndex) == 0x0005EC, "Member 'MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_::CallFunc_BlindAddNewItemToContainer_ToSlotIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_, CallFunc_BlindAddNewItemToContainer_UniqueId) == 0x0005F0, "Member 'MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_::CallFunc_BlindAddNewItemToContainer_UniqueId' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x0005F8, "Member 'MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000818, "Member 'MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_, CallFunc_Conv_NameToString_ReturnValue) == 0x000820, "Member 'MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_, CallFunc_Concat_StrStr_ReturnValue) == 0x000830, "Member 'MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000840, "Member 'MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_, CallFunc_HasAuthority_ReturnValue) == 0x000850, "Member 'MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_, CallFunc_GetCompiledContainerStructure_Result) == 0x000851, "Member 'MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_::CallFunc_GetCompiledContainerStructure_Result' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_, CallFunc_GetCompiledContainerStructure_Container) == 0x000858, "Member 'MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_::CallFunc_GetCompiledContainerStructure_Container' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_, CallFunc_BlindAddNewItemToContainer_Added_1) == 0x0008C0, "Member 'MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_::CallFunc_BlindAddNewItemToContainer_Added_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_, CallFunc_BlindAddNewItemToContainer_ToSlotIndex_1) == 0x0008C4, "Member 'MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_::CallFunc_BlindAddNewItemToContainer_ToSlotIndex_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_, CallFunc_BlindAddNewItemToContainer_UniqueId_1) == 0x0008C8, "Member 'MPMainContainerBox_C_AddItemToFreeSlot__OnlyServer_::CallFunc_BlindAddNewItemToContainer_UniqueId_1' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.BlindAddNewItemToContainer
// 0x0140 (0x0140 - 0x0000)
struct MPMainContainerBox_C_BlindAddNewItemToContainer final
{
public:
	struct FVector2D                              SlotVector;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemUID;                                           // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToContainerUID;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Shop;                                              // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Added;                                             // 0x0019(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ToSlotIndex;                                       // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         UniqueId;                                          // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NOfRows;                                           // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NOfColumns;                                        // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ArrIndex;                                          // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewUID;                                            // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FServerSlotInfo>                EmptySlots;                                        // 0x0038(0x0010)(Edit, BlueprintVisible)
	struct FServerSlotInfo                        CurrentSlot;                                       // 0x0048(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentSlotIndex;                                  // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Y;                                                 // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         X;                                                 // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotDataArrIndexByUID_Index;           // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FServerSlotInfo                        CallFunc_Array_Get_Item;                           // 0x00B0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUniqueServerID_NewUID;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FServerSlotInfo                        CallFunc_Array_Get_Item_1;                         // 0x00C8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA[0x2];                                       // 0x00DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FServerSlotInfo                        CallFunc_Array_Get_Item_2;                         // 0x00DC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA[0x2];                                       // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetColumnRowBySlotIndex_Column;           // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetColumnRowBySlotIndex_Row;              // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotIndexByRowColumn_ReturnValue;      // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FServerSlotInfo                        CallFunc_Array_Get_Item_3;                         // 0x0114(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_136[0x2];                                      // 0x0136(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_BlindAddNewItemToContainer) == 0x000008, "Wrong alignment on MPMainContainerBox_C_BlindAddNewItemToContainer");
static_assert(sizeof(MPMainContainerBox_C_BlindAddNewItemToContainer) == 0x000140, "Wrong size on MPMainContainerBox_C_BlindAddNewItemToContainer");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, SlotVector) == 0x000000, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::SlotVector' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, ItemUID) == 0x000010, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::ItemUID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, ToContainerUID) == 0x000014, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::ToContainerUID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, Shop) == 0x000018, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::Shop' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, Added) == 0x000019, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::Added' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, ToSlotIndex) == 0x00001C, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::ToSlotIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, UniqueId) == 0x000020, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::UniqueId' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, NOfRows) == 0x000024, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::NOfRows' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, NOfColumns) == 0x000028, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::NOfColumns' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, ArrIndex) == 0x00002C, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::ArrIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, NewUID) == 0x000030, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::NewUID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, EmptySlots) == 0x000038, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::EmptySlots' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, CurrentSlot) == 0x000048, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::CurrentSlot' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, CurrentSlotIndex) == 0x000054, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::CurrentSlotIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, Y) == 0x000058, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::Y' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, X) == 0x00005C, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::X' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, Temp_int_Variable) == 0x000060, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, CallFunc_GetSlotDataArrIndexByUID_Index) == 0x000064, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::CallFunc_GetSlotDataArrIndexByUID_Index' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, CallFunc_BreakVector2D_X) == 0x000070, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, CallFunc_BreakVector2D_Y) == 0x000078, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, CallFunc_FTrunc_ReturnValue) == 0x000080, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, CallFunc_FTrunc_ReturnValue_1) == 0x000084, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, Temp_int_Variable_1) == 0x000088, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00008C, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, CallFunc_Add_IntInt_ReturnValue_1) == 0x000090, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, Temp_int_Loop_Counter_Variable) == 0x000094, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, CallFunc_Add_IntInt_ReturnValue_2) == 0x000098, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, Temp_int_Loop_Counter_Variable_1) == 0x00009C, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000A0, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, Temp_int_Array_Index_Variable) == 0x0000A4, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, Temp_int_Array_Index_Variable_1) == 0x0000A8, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000AC, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, CallFunc_Array_Length_ReturnValue) == 0x0000BC, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, CallFunc_Less_IntInt_ReturnValue) == 0x0000C0, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, CallFunc_GetUniqueServerID_NewUID) == 0x0000C4, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::CallFunc_GetUniqueServerID_NewUID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, CallFunc_Array_Get_Item_1) == 0x0000C8, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, CallFunc_Array_Length_ReturnValue_1) == 0x0000D4, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000D8, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, Temp_bool_Variable) == 0x0000D9, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, CallFunc_Array_Get_Item_2) == 0x0000DC, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, CallFunc_Not_PreBool_ReturnValue) == 0x0000E8, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, CallFunc_Array_Length_ReturnValue_2) == 0x0000EC, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, CallFunc_Greater_IntInt_ReturnValue) == 0x0000F0, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000F4, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000F8, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, CallFunc_BooleanAND_ReturnValue) == 0x0000F9, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, CallFunc_GetColumnRowBySlotIndex_Column) == 0x0000FC, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::CallFunc_GetColumnRowBySlotIndex_Column' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, CallFunc_GetColumnRowBySlotIndex_Row) == 0x000100, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::CallFunc_GetColumnRowBySlotIndex_Row' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, CallFunc_Add_IntInt_ReturnValue_4) == 0x000104, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, CallFunc_Add_IntInt_ReturnValue_5) == 0x000108, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, CallFunc_GetSlotIndexByRowColumn_ReturnValue) == 0x00010C, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::CallFunc_GetSlotIndexByRowColumn_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000110, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, CallFunc_Array_Get_Item_3) == 0x000114, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, CallFunc_Add_IntInt_ReturnValue_6) == 0x000120, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, CallFunc_Add_IntInt_ReturnValue_7) == 0x000124, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, CallFunc_Add_IntInt_ReturnValue_8) == 0x000128, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x00012C, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, CallFunc_Add_IntInt_ReturnValue_9) == 0x000130, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000134, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, CallFunc_BooleanOR_ReturnValue) == 0x000135, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BlindAddNewItemToContainer, CallFunc_Array_Add_ReturnValue) == 0x000138, "Member 'MPMainContainerBox_C_BlindAddNewItemToContainer::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.BuildContainerDataToWidget
// 0x0698 (0x0698 - 0x0000)
struct MPMainContainerBox_C_BuildContainerDataToWidget final
{
public:
	TArray<struct FContainerPickupsInfo>          ItemData_Containers;                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<struct FContainerPickupsInfo>          ItemData_Items;                                    // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class UJSIContainer_C*                        MainContainer;                                     // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UJSIContainer_C*>                CreatedContainerList;                              // 0x0028(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UJSIContainer_C*>                ReturnCreatedContainers;                           // 0x0038(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<int32>                                 RemoveIndexList;                                   // 0x0048(0x0010)(Edit, BlueprintVisible)
	TArray<class UJSIContainer_C*>                CreatedContainers;                                 // 0x0058(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TMap<int32, class UJSIContainer_C*>           AllContainers;                                     // 0x0068(0x0050)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         CurrentParentID;                                   // 0x00B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CurrentMainWidget;                                 // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotMotherUID_UDID;                    // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_Array_Get_Item;                           // 0x00E8(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_Array_Get_Item_1;                         // 0x0158(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddNewInventoryItem_Added;                // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x3];                                      // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddNewInventoryItem_SlotIndex;            // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_AddNewInventoryItem_ItemInfo;             // 0x01D0(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_AddNewInventoryItem_SlotItemRef;          // 0x03F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddNewInventoryItem_StackRemainder;       // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SetUniqueID_UniqueID;                     // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_401[0x3];                                      // 0x0401(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        CallFunc_Map_Find_Value;                           // 0x0408(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_411[0x3];                                      // 0x0411(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x0414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotMotherUID_UDID_1;                  // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0424(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0425(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_426[0x2];                                      // 0x0426(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42C[0x4];                                      // 0x042C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0430(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddNewInventoryItem_Added_1;              // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_441[0x3];                                      // 0x0441(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddNewInventoryItem_SlotIndex_1;          // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_AddNewInventoryItem_ItemInfo_1;           // 0x0448(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_AddNewInventoryItem_SlotItemRef_1;        // 0x0668(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddNewInventoryItem_StackRemainder_1;     // 0x0670(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SetUniqueID_UniqueID_1;                   // 0x0674(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0678(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x067C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        CallFunc_Array_Get_Item_3;                         // 0x0680(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0688(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x068C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68D[0x3];                                      // 0x068D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotMotherUID_UDID_2;                  // 0x0690(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0694(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_BuildContainerDataToWidget) == 0x000008, "Wrong alignment on MPMainContainerBox_C_BuildContainerDataToWidget");
static_assert(sizeof(MPMainContainerBox_C_BuildContainerDataToWidget) == 0x000698, "Wrong size on MPMainContainerBox_C_BuildContainerDataToWidget");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, ItemData_Containers) == 0x000000, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::ItemData_Containers' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, ItemData_Items) == 0x000010, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::ItemData_Items' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, MainContainer) == 0x000020, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::MainContainer' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, CreatedContainerList) == 0x000028, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::CreatedContainerList' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, ReturnCreatedContainers) == 0x000038, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::ReturnCreatedContainers' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, RemoveIndexList) == 0x000048, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::RemoveIndexList' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, CreatedContainers) == 0x000058, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::CreatedContainers' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, AllContainers) == 0x000068, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::AllContainers' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, CurrentParentID) == 0x0000B8, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::CurrentParentID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, CurrentMainWidget) == 0x0000C0, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::CurrentMainWidget' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, CallFunc_GetSlotMotherUID_UDID) == 0x0000C8, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::CallFunc_GetSlotMotherUID_UDID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, CallFunc_IsValid_ReturnValue) == 0x0000CC, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, Temp_int_Array_Index_Variable) == 0x0000D0, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, Temp_int_Loop_Counter_Variable) == 0x0000D4, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, CallFunc_Add_IntInt_ReturnValue) == 0x0000D8, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, Temp_int_Array_Index_Variable_1) == 0x0000DC, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, Temp_int_Array_Index_Variable_2) == 0x0000E0, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, CallFunc_Array_Get_Item) == 0x0000E8, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, CallFunc_Array_Length_ReturnValue) == 0x000150, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, CallFunc_Less_IntInt_ReturnValue) == 0x000154, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, CallFunc_Array_Get_Item_1) == 0x000158, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, CallFunc_Array_Length_ReturnValue_1) == 0x0001C0, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, Temp_int_Loop_Counter_Variable_1) == 0x0001C4, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, CallFunc_AddNewInventoryItem_Added) == 0x0001C8, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::CallFunc_AddNewInventoryItem_Added' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, CallFunc_AddNewInventoryItem_SlotIndex) == 0x0001CC, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::CallFunc_AddNewInventoryItem_SlotIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, CallFunc_AddNewInventoryItem_ItemInfo) == 0x0001D0, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::CallFunc_AddNewInventoryItem_ItemInfo' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, CallFunc_AddNewInventoryItem_SlotItemRef) == 0x0003F0, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::CallFunc_AddNewInventoryItem_SlotItemRef' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, CallFunc_AddNewInventoryItem_StackRemainder) == 0x0003F8, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::CallFunc_AddNewInventoryItem_StackRemainder' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, CallFunc_SetUniqueID_UniqueID) == 0x0003FC, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::CallFunc_SetUniqueID_UniqueID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, CallFunc_Less_IntInt_ReturnValue_1) == 0x000400, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, CallFunc_Add_IntInt_ReturnValue_1) == 0x000404, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, CallFunc_Map_Find_Value) == 0x000408, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, CallFunc_Map_Find_ReturnValue) == 0x000410, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, CallFunc_Array_Get_Item_2) == 0x000414, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, CallFunc_Array_Length_ReturnValue_2) == 0x000418, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, Temp_int_Loop_Counter_Variable_2) == 0x00041C, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, CallFunc_GetSlotMotherUID_UDID_1) == 0x000420, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::CallFunc_GetSlotMotherUID_UDID_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, CallFunc_Less_IntInt_ReturnValue_2) == 0x000424, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000425, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, CallFunc_Add_IntInt_ReturnValue_2) == 0x000428, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, CallFunc_Conv_IntToString_ReturnValue) == 0x000430, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, CallFunc_AddNewInventoryItem_Added_1) == 0x000440, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::CallFunc_AddNewInventoryItem_Added_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, CallFunc_AddNewInventoryItem_SlotIndex_1) == 0x000444, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::CallFunc_AddNewInventoryItem_SlotIndex_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, CallFunc_AddNewInventoryItem_ItemInfo_1) == 0x000448, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::CallFunc_AddNewInventoryItem_ItemInfo_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, CallFunc_AddNewInventoryItem_SlotItemRef_1) == 0x000668, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::CallFunc_AddNewInventoryItem_SlotItemRef_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, CallFunc_AddNewInventoryItem_StackRemainder_1) == 0x000670, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::CallFunc_AddNewInventoryItem_StackRemainder_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, CallFunc_SetUniqueID_UniqueID_1) == 0x000674, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::CallFunc_SetUniqueID_UniqueID_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, CallFunc_Array_Add_ReturnValue) == 0x000678, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, CallFunc_Array_Add_ReturnValue_1) == 0x00067C, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, CallFunc_Array_Get_Item_3) == 0x000680, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, CallFunc_Array_Length_ReturnValue_3) == 0x000688, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, CallFunc_Greater_IntInt_ReturnValue) == 0x00068C, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, CallFunc_GetSlotMotherUID_UDID_2) == 0x000690, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::CallFunc_GetSlotMotherUID_UDID_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerDataToWidget, CallFunc_Array_Add_ReturnValue_2) == 0x000694, "Member 'MPMainContainerBox_C_BuildContainerDataToWidget::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.BuildContainerSlotData
// 0x0060 (0x0060 - 0x0000)
struct MPMainContainerBox_C_BuildContainerSlotData final
{
public:
	int32                                         NumOfColumns;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumOfRows;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ContainerUID;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Shop;                                              // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NewItemIndex;                                      // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FServerSlotInfoArray                   K2Node_MakeStruct_ServerSlotInfoArray;             // 0x0018(0x0020)(HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FServerSlotInfo                        K2Node_MakeStruct_ServerSlotInfo;                  // 0x0044(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_BuildContainerSlotData) == 0x000008, "Wrong alignment on MPMainContainerBox_C_BuildContainerSlotData");
static_assert(sizeof(MPMainContainerBox_C_BuildContainerSlotData) == 0x000060, "Wrong size on MPMainContainerBox_C_BuildContainerSlotData");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerSlotData, NumOfColumns) == 0x000000, "Member 'MPMainContainerBox_C_BuildContainerSlotData::NumOfColumns' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerSlotData, NumOfRows) == 0x000004, "Member 'MPMainContainerBox_C_BuildContainerSlotData::NumOfRows' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerSlotData, ContainerUID) == 0x000008, "Member 'MPMainContainerBox_C_BuildContainerSlotData::ContainerUID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerSlotData, Shop) == 0x00000C, "Member 'MPMainContainerBox_C_BuildContainerSlotData::Shop' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerSlotData, NewItemIndex) == 0x000010, "Member 'MPMainContainerBox_C_BuildContainerSlotData::NewItemIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerSlotData, K2Node_MakeStruct_ServerSlotInfoArray) == 0x000018, "Member 'MPMainContainerBox_C_BuildContainerSlotData::K2Node_MakeStruct_ServerSlotInfoArray' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerSlotData, CallFunc_Multiply_IntInt_ReturnValue) == 0x000038, "Member 'MPMainContainerBox_C_BuildContainerSlotData::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerSlotData, Temp_int_Variable) == 0x00003C, "Member 'MPMainContainerBox_C_BuildContainerSlotData::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerSlotData, CallFunc_Subtract_IntInt_ReturnValue) == 0x000040, "Member 'MPMainContainerBox_C_BuildContainerSlotData::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerSlotData, K2Node_MakeStruct_ServerSlotInfo) == 0x000044, "Member 'MPMainContainerBox_C_BuildContainerSlotData::K2Node_MakeStruct_ServerSlotInfo' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerSlotData, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000050, "Member 'MPMainContainerBox_C_BuildContainerSlotData::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerSlotData, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'MPMainContainerBox_C_BuildContainerSlotData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerSlotData, CallFunc_Array_Add_ReturnValue) == 0x000058, "Member 'MPMainContainerBox_C_BuildContainerSlotData::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildContainerSlotData, CallFunc_Array_Add_ReturnValue_1) == 0x00005C, "Member 'MPMainContainerBox_C_BuildContainerSlotData::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.BuildData (OnlyServer)
// 0x0190 (0x0190 - 0x0000)
struct MPMainContainerBox_C_BuildData__OnlyServer_ final
{
public:
	struct FS_LootChanceModifier                  LootChanceMod;                                     // 0x0000(0x0009)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReMinusBuild;                                      // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FDefaultItemInfo>               Items;                                             // 0x0010(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Uid;                                               // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AddedTo;                                           // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FContainerPickupsInfo>          Containers;                                        // 0x0028(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	struct FDefaultItemInfo                       Item;                                              // 0x0038(0x0040)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateContainerData__OnlyServer__Result;  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLootPoint_Result;                       // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ALootPoint_C*                           CallFunc_IsLootPoint_Loot;                         // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDefaultItemInfo                       CallFunc_Array_Get_Item;                           // 0x00A0(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EA[0x2];                                       // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA[0x2];                                       // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddItemToFreeSlot__OnlyServer__Result;    // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_AddItemToFreeSlot__OnlyServer__Container; // 0x0110(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FDefaultItemInfo>               CallFunc_GenerateContainerItems_Items;             // 0x0178(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x018D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x018E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_BuildData__OnlyServer_) == 0x000008, "Wrong alignment on MPMainContainerBox_C_BuildData__OnlyServer_");
static_assert(sizeof(MPMainContainerBox_C_BuildData__OnlyServer_) == 0x000190, "Wrong size on MPMainContainerBox_C_BuildData__OnlyServer_");
static_assert(offsetof(MPMainContainerBox_C_BuildData__OnlyServer_, LootChanceMod) == 0x000000, "Member 'MPMainContainerBox_C_BuildData__OnlyServer_::LootChanceMod' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildData__OnlyServer_, ReMinusBuild) == 0x000009, "Member 'MPMainContainerBox_C_BuildData__OnlyServer_::ReMinusBuild' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildData__OnlyServer_, Items) == 0x000010, "Member 'MPMainContainerBox_C_BuildData__OnlyServer_::Items' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildData__OnlyServer_, Uid) == 0x000020, "Member 'MPMainContainerBox_C_BuildData__OnlyServer_::Uid' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildData__OnlyServer_, AddedTo) == 0x000024, "Member 'MPMainContainerBox_C_BuildData__OnlyServer_::AddedTo' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildData__OnlyServer_, Containers) == 0x000028, "Member 'MPMainContainerBox_C_BuildData__OnlyServer_::Containers' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildData__OnlyServer_, Item) == 0x000038, "Member 'MPMainContainerBox_C_BuildData__OnlyServer_::Item' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildData__OnlyServer_, CallFunc_UpdateContainerData__OnlyServer__Result) == 0x000078, "Member 'MPMainContainerBox_C_BuildData__OnlyServer_::CallFunc_UpdateContainerData__OnlyServer__Result' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildData__OnlyServer_, CallFunc_Array_Length_ReturnValue) == 0x00007C, "Member 'MPMainContainerBox_C_BuildData__OnlyServer_::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildData__OnlyServer_, CallFunc_HasAuthority_ReturnValue) == 0x000080, "Member 'MPMainContainerBox_C_BuildData__OnlyServer_::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildData__OnlyServer_, CallFunc_IsLootPoint_Result) == 0x000081, "Member 'MPMainContainerBox_C_BuildData__OnlyServer_::CallFunc_IsLootPoint_Result' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildData__OnlyServer_, CallFunc_IsLootPoint_Loot) == 0x000088, "Member 'MPMainContainerBox_C_BuildData__OnlyServer_::CallFunc_IsLootPoint_Loot' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildData__OnlyServer_, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000090, "Member 'MPMainContainerBox_C_BuildData__OnlyServer_::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildData__OnlyServer_, Temp_int_Array_Index_Variable) == 0x000094, "Member 'MPMainContainerBox_C_BuildData__OnlyServer_::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildData__OnlyServer_, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000098, "Member 'MPMainContainerBox_C_BuildData__OnlyServer_::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildData__OnlyServer_, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'MPMainContainerBox_C_BuildData__OnlyServer_::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildData__OnlyServer_, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000E0, "Member 'MPMainContainerBox_C_BuildData__OnlyServer_::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildData__OnlyServer_, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000E1, "Member 'MPMainContainerBox_C_BuildData__OnlyServer_::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildData__OnlyServer_, CallFunc_BooleanOR_ReturnValue) == 0x0000E2, "Member 'MPMainContainerBox_C_BuildData__OnlyServer_::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildData__OnlyServer_, CallFunc_BooleanAND_ReturnValue) == 0x0000E3, "Member 'MPMainContainerBox_C_BuildData__OnlyServer_::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildData__OnlyServer_, CallFunc_BooleanAND_ReturnValue_1) == 0x0000E4, "Member 'MPMainContainerBox_C_BuildData__OnlyServer_::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildData__OnlyServer_, CallFunc_Greater_IntInt_ReturnValue) == 0x0000E5, "Member 'MPMainContainerBox_C_BuildData__OnlyServer_::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildData__OnlyServer_, CallFunc_Not_PreBool_ReturnValue) == 0x0000E6, "Member 'MPMainContainerBox_C_BuildData__OnlyServer_::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildData__OnlyServer_, CallFunc_BooleanAND_ReturnValue_2) == 0x0000E7, "Member 'MPMainContainerBox_C_BuildData__OnlyServer_::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildData__OnlyServer_, CallFunc_NotEqual_NameName_ReturnValue) == 0x0000E8, "Member 'MPMainContainerBox_C_BuildData__OnlyServer_::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildData__OnlyServer_, CallFunc_BooleanAND_ReturnValue_3) == 0x0000E9, "Member 'MPMainContainerBox_C_BuildData__OnlyServer_::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildData__OnlyServer_, Temp_int_Loop_Counter_Variable) == 0x0000EC, "Member 'MPMainContainerBox_C_BuildData__OnlyServer_::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildData__OnlyServer_, CallFunc_Less_IntInt_ReturnValue) == 0x0000F0, "Member 'MPMainContainerBox_C_BuildData__OnlyServer_::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildData__OnlyServer_, CallFunc_Add_IntInt_ReturnValue) == 0x0000F4, "Member 'MPMainContainerBox_C_BuildData__OnlyServer_::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildData__OnlyServer_, Temp_bool_Variable) == 0x0000F8, "Member 'MPMainContainerBox_C_BuildData__OnlyServer_::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildData__OnlyServer_, Temp_bool_Variable_1) == 0x0000F9, "Member 'MPMainContainerBox_C_BuildData__OnlyServer_::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildData__OnlyServer_, K2Node_Select_Default) == 0x0000FC, "Member 'MPMainContainerBox_C_BuildData__OnlyServer_::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildData__OnlyServer_, K2Node_Select_Default_1) == 0x000100, "Member 'MPMainContainerBox_C_BuildData__OnlyServer_::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildData__OnlyServer_, CallFunc_AddItemToFreeSlot__OnlyServer__Result) == 0x000108, "Member 'MPMainContainerBox_C_BuildData__OnlyServer_::CallFunc_AddItemToFreeSlot__OnlyServer__Result' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildData__OnlyServer_, CallFunc_AddItemToFreeSlot__OnlyServer__Container) == 0x000110, "Member 'MPMainContainerBox_C_BuildData__OnlyServer_::CallFunc_AddItemToFreeSlot__OnlyServer__Container' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildData__OnlyServer_, CallFunc_GenerateContainerItems_Items) == 0x000178, "Member 'MPMainContainerBox_C_BuildData__OnlyServer_::CallFunc_GenerateContainerItems_Items' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildData__OnlyServer_, CallFunc_Array_Add_ReturnValue) == 0x000188, "Member 'MPMainContainerBox_C_BuildData__OnlyServer_::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildData__OnlyServer_, CallFunc_Not_PreBool_ReturnValue_1) == 0x00018C, "Member 'MPMainContainerBox_C_BuildData__OnlyServer_::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildData__OnlyServer_, CallFunc_BooleanOR_ReturnValue_1) == 0x00018D, "Member 'MPMainContainerBox_C_BuildData__OnlyServer_::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_BuildData__OnlyServer_, CallFunc_IsValid_ReturnValue) == 0x00018E, "Member 'MPMainContainerBox_C_BuildData__OnlyServer_::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.CallLootAnim
// 0x0010 (0x0010 - 0x0000)
struct MPMainContainerBox_C_CallLootAnim final
{
public:
	double                                        LootingHeight;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LootPointOpened;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_CallLootAnim) == 0x000008, "Wrong alignment on MPMainContainerBox_C_CallLootAnim");
static_assert(sizeof(MPMainContainerBox_C_CallLootAnim) == 0x000010, "Wrong size on MPMainContainerBox_C_CallLootAnim");
static_assert(offsetof(MPMainContainerBox_C_CallLootAnim, LootingHeight) == 0x000000, "Member 'MPMainContainerBox_C_CallLootAnim::LootingHeight' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_CallLootAnim, LootPointOpened) == 0x000008, "Member 'MPMainContainerBox_C_CallLootAnim::LootPointOpened' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.CheckTierAndLootTypes
// 0x0268 (0x0268 - 0x0000)
struct MPMainContainerBox_C_CheckTierAndLootTypes final
{
public:
	struct FFItemInfo                             FItemInfo;                                         // 0x0000(0x0220)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	class ATDB_GameMode_C*                        GameMode;                                          // 0x0220(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0228(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           ArrayTypes;                                        // 0x0230(0x0010)(Parm, OutParm)
	ELootTypes                                    Temp_byte_Variable;                                // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           Temp_name_Variable;                                // 0x0248(0x0010)(ReferenceParm)
	TArray<class FName>                           K2Node_Select_Default;                             // 0x0258(0x0010)(ReferenceParm)
};
static_assert(alignof(MPMainContainerBox_C_CheckTierAndLootTypes) == 0x000008, "Wrong alignment on MPMainContainerBox_C_CheckTierAndLootTypes");
static_assert(sizeof(MPMainContainerBox_C_CheckTierAndLootTypes) == 0x000268, "Wrong size on MPMainContainerBox_C_CheckTierAndLootTypes");
static_assert(offsetof(MPMainContainerBox_C_CheckTierAndLootTypes, FItemInfo) == 0x000000, "Member 'MPMainContainerBox_C_CheckTierAndLootTypes::FItemInfo' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_CheckTierAndLootTypes, GameMode) == 0x000220, "Member 'MPMainContainerBox_C_CheckTierAndLootTypes::GameMode' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_CheckTierAndLootTypes, ReturnValue) == 0x000228, "Member 'MPMainContainerBox_C_CheckTierAndLootTypes::ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_CheckTierAndLootTypes, ArrayTypes) == 0x000230, "Member 'MPMainContainerBox_C_CheckTierAndLootTypes::ArrayTypes' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_CheckTierAndLootTypes, Temp_byte_Variable) == 0x000240, "Member 'MPMainContainerBox_C_CheckTierAndLootTypes::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_CheckTierAndLootTypes, Temp_name_Variable) == 0x000248, "Member 'MPMainContainerBox_C_CheckTierAndLootTypes::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_CheckTierAndLootTypes, K2Node_Select_Default) == 0x000258, "Member 'MPMainContainerBox_C_CheckTierAndLootTypes::K2Node_Select_Default' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.CompleteQuest
// 0x0008 (0x0008 - 0x0000)
struct MPMainContainerBox_C_CompleteQuest final
{
public:
	int32                                         QuestIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ObjectiveIndex;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_CompleteQuest) == 0x000004, "Wrong alignment on MPMainContainerBox_C_CompleteQuest");
static_assert(sizeof(MPMainContainerBox_C_CompleteQuest) == 0x000008, "Wrong size on MPMainContainerBox_C_CompleteQuest");
static_assert(offsetof(MPMainContainerBox_C_CompleteQuest, QuestIndex) == 0x000000, "Member 'MPMainContainerBox_C_CompleteQuest::QuestIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_CompleteQuest, ObjectiveIndex) == 0x000004, "Member 'MPMainContainerBox_C_CompleteQuest::ObjectiveIndex' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.Craft
// 0x0008 (0x0008 - 0x0000)
struct MPMainContainerBox_C_Craft final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_Craft) == 0x000008, "Wrong alignment on MPMainContainerBox_C_Craft");
static_assert(sizeof(MPMainContainerBox_C_Craft) == 0x000008, "Wrong size on MPMainContainerBox_C_Craft");
static_assert(offsetof(MPMainContainerBox_C_Craft, Player) == 0x000000, "Member 'MPMainContainerBox_C_Craft::Player' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.DoesItemExist
// 0x0178 (0x0178 - 0x0000)
struct MPMainContainerBox_C_DoesItemExist final
{
public:
	int32                                         Uid;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsContainer_;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Exists;                                            // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  PickupItem;                                        // 0x0008(0x0068)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         ArrayIndex;                                        // 0x0070(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_Array_Get_Item;                           // 0x0090(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_Array_Get_Item_1;                         // 0x0108(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_DoesItemExist) == 0x000008, "Wrong alignment on MPMainContainerBox_C_DoesItemExist");
static_assert(sizeof(MPMainContainerBox_C_DoesItemExist) == 0x000178, "Wrong size on MPMainContainerBox_C_DoesItemExist");
static_assert(offsetof(MPMainContainerBox_C_DoesItemExist, Uid) == 0x000000, "Member 'MPMainContainerBox_C_DoesItemExist::Uid' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_DoesItemExist, IsContainer_) == 0x000004, "Member 'MPMainContainerBox_C_DoesItemExist::IsContainer_' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_DoesItemExist, Exists) == 0x000005, "Member 'MPMainContainerBox_C_DoesItemExist::Exists' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_DoesItemExist, PickupItem) == 0x000008, "Member 'MPMainContainerBox_C_DoesItemExist::PickupItem' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_DoesItemExist, ArrayIndex) == 0x000070, "Member 'MPMainContainerBox_C_DoesItemExist::ArrayIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_DoesItemExist, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'MPMainContainerBox_C_DoesItemExist::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_DoesItemExist, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'MPMainContainerBox_C_DoesItemExist::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_DoesItemExist, Temp_int_Array_Index_Variable) == 0x00007C, "Member 'MPMainContainerBox_C_DoesItemExist::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_DoesItemExist, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'MPMainContainerBox_C_DoesItemExist::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_DoesItemExist, Temp_int_Loop_Counter_Variable_1) == 0x000084, "Member 'MPMainContainerBox_C_DoesItemExist::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_DoesItemExist, Temp_int_Array_Index_Variable_1) == 0x000088, "Member 'MPMainContainerBox_C_DoesItemExist::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_DoesItemExist, CallFunc_Less_IntInt_ReturnValue) == 0x00008C, "Member 'MPMainContainerBox_C_DoesItemExist::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_DoesItemExist, CallFunc_Array_Get_Item) == 0x000090, "Member 'MPMainContainerBox_C_DoesItemExist::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_DoesItemExist, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000F8, "Member 'MPMainContainerBox_C_DoesItemExist::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_DoesItemExist, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000FC, "Member 'MPMainContainerBox_C_DoesItemExist::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_DoesItemExist, CallFunc_Array_Length_ReturnValue_1) == 0x000100, "Member 'MPMainContainerBox_C_DoesItemExist::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_DoesItemExist, CallFunc_Array_Get_Item_1) == 0x000108, "Member 'MPMainContainerBox_C_DoesItemExist::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_DoesItemExist, CallFunc_Less_IntInt_ReturnValue_1) == 0x000170, "Member 'MPMainContainerBox_C_DoesItemExist::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_DoesItemExist, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000171, "Member 'MPMainContainerBox_C_DoesItemExist::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.EventOnContainerAction
// 0x0028 (0x0028 - 0x0000)
struct MPMainContainerBox_C_EventOnContainerAction final
{
public:
	class UJSIContainer_C*                        FromContainer;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        ToContainer;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            DroppedSlotRef;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            SlotReceiverRef;                                   // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         ToSlotIndex;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rotated_;                                          // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RightMouseButton;                                  // 0x0025(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_EventOnContainerAction) == 0x000008, "Wrong alignment on MPMainContainerBox_C_EventOnContainerAction");
static_assert(sizeof(MPMainContainerBox_C_EventOnContainerAction) == 0x000028, "Wrong size on MPMainContainerBox_C_EventOnContainerAction");
static_assert(offsetof(MPMainContainerBox_C_EventOnContainerAction, FromContainer) == 0x000000, "Member 'MPMainContainerBox_C_EventOnContainerAction::FromContainer' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_EventOnContainerAction, ToContainer) == 0x000008, "Member 'MPMainContainerBox_C_EventOnContainerAction::ToContainer' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_EventOnContainerAction, DroppedSlotRef) == 0x000010, "Member 'MPMainContainerBox_C_EventOnContainerAction::DroppedSlotRef' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_EventOnContainerAction, SlotReceiverRef) == 0x000018, "Member 'MPMainContainerBox_C_EventOnContainerAction::SlotReceiverRef' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_EventOnContainerAction, ToSlotIndex) == 0x000020, "Member 'MPMainContainerBox_C_EventOnContainerAction::ToSlotIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_EventOnContainerAction, Rotated_) == 0x000024, "Member 'MPMainContainerBox_C_EventOnContainerAction::Rotated_' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_EventOnContainerAction, RightMouseButton) == 0x000025, "Member 'MPMainContainerBox_C_EventOnContainerAction::RightMouseButton' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.ExecuteUbergraph_MPMainContainerBox
// 0x1280 (0x1280 - 0x0000)
struct MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMPContainerWidget_C*                   CallFunc_GetMainContainer_ContainerWidget;         // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        K2Node_CustomEvent_Container;                      // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ToContainerUID_2;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  K2Node_CustomEvent_PickupItem_1;                   // 0x0020(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ToSlot_1;                       // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_Map_Find_Value;                           // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemByUniqueID_Found;                  // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B[0x5];                                       // 0x009B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetItemByUniqueID_Item;                   // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow;           // 0x00A8(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x02D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x02E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddNewInventoryItem_Added;                // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F1[0x3];                                      // 0x02F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddNewInventoryItem_SlotIndex;            // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_AddNewInventoryItem_ItemInfo;             // 0x02F8(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_AddNewInventoryItem_SlotItemRef;          // 0x0518(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddNewInventoryItem_StackRemainder;       // 0x0520(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_524[0x4];                                      // 0x0524(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0528(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ToContainerUID_1;               // 0x0538(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53C[0x4];                                      // 0x053C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  K2Node_CustomEvent_PickupItem;                     // 0x0540(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ToSlot;                         // 0x05A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Rotated__1;                     // 0x05AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AD[0x3];                                      // 0x05AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FContainerPickupsInfo>          K2Node_CustomEvent_ContainerData;                  // 0x05B0(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	TArray<struct FContainerPickupsInfo>          K2Node_CustomEvent_ContainerItems;                 // 0x05C0(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	bool                                          K2Node_CustomEvent_BlockAddContainer;              // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D1[0x3];                                      // 0x05D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x05D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x05D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x05E8(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0808(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_809[0x7];                                      // 0x0809(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0810(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0820(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0830(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ContainerUID_1;                 // 0x0840(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ItemUID_2;                      // 0x0844(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0848(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        CallFunc_Map_Find_Value_1;                         // 0x0858(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0860(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveItemByUniqueID_Sucess;              // 0x0861(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemByUniqueID_Found_1;                // 0x0862(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_863[0x5];                                      // 0x0863(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetItemByUniqueID_Item_1;                 // 0x0868(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        CallFunc_Map_Find_Value_2;                         // 0x0870(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0878(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddNewInventoryItem_Added_1;              // 0x0879(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87A[0x2];                                      // 0x087A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddNewInventoryItem_SlotIndex_1;          // 0x087C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_AddNewInventoryItem_ItemInfo_1;           // 0x0880(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_AddNewInventoryItem_SlotItemRef_1;        // 0x0AA0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddNewInventoryItem_StackRemainder_1;     // 0x0AA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsContainer__IsContainer_;                // 0x0AAC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsContainer__IsContainer__1;              // 0x0AAD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AAE[0x2];                                      // 0x0AAE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SetUniqueID_UniqueID;                     // 0x0AB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AB4[0x4];                                      // 0x0AB4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_BuildContainerDataToWidget_CreatedContainerList; // 0x0AB8(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0AC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUniqueID_UniqueServerID;               // 0x0ACC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0AD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD1[0x3];                                      // 0x0AD1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_ContainerID;                    // 0x0AD4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ItemSlotIndex;                  // 0x0AD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ToSlotIndex;                    // 0x0ADC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Rotated__2;                     // 0x0AE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AE1[0x7];                                      // 0x0AE1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_Map_Find_Value_3;                         // 0x0AE8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_3;                   // 0x0AF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AF1[0x3];                                      // 0x0AF1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0AF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemBySlotIndex_Found;                 // 0x0AF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AF9[0x7];                                      // 0x0AF9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetItemBySlotIndex_Item;                  // 0x0B00(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MoveItemToIndexByItemRef_Moved_;          // 0x0B08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B09[0x7];                                      // 0x0B09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        K2Node_CustomEvent_FromContainer;                  // 0x0B10(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        K2Node_CustomEvent_ToContainer;                    // 0x0B18(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_CustomEvent_DroppedSlotRef;                 // 0x0B20(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_CustomEvent_SlotReceiverRef;                // 0x0B28(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ToSlotIndex_1;                  // 0x0B30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Rotated__3;                     // 0x0B34(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_RightMouseButton;               // 0x0B35(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B36[0x2];                                      // 0x0B36(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_ItemUID_1;                      // 0x0B38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_FromContainerUID;               // 0x0B3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ToContainerUID;                 // 0x0B40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ToIndex;                        // 0x0B44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Rotated_;                       // 0x0B48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0B49(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0B4A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0B4B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0B4C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0B4D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0B4E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4F[0x1];                                      // 0x0B4F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_Map_Find_Value_4;                         // 0x0B50(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_4;                   // 0x0B58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemByUniqueID_Found_2;                // 0x0B59(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5A[0x6];                                      // 0x0B5A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetItemByUniqueID_Item_2;                 // 0x0B60(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        K2Node_CustomEvent_Container_1;                    // 0x0B68(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_SetID_;                         // 0x0B70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B71[0x3];                                      // 0x0B71(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUniqueID_UniqueServerID_1;             // 0x0B74(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0B78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0B79(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsContainer__IsContainer__2;              // 0x0B7A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveInventoryItemByRef_Removed;         // 0x0B7B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B7C[0x4];                                      // 0x0B7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_Map_Find_Value_5;                         // 0x0B80(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_5;                   // 0x0B88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0B89(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddNewInventoryItem_Added_2;              // 0x0B8A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B8B[0x1];                                      // 0x0B8B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddNewInventoryItem_SlotIndex_2;          // 0x0B8C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_AddNewInventoryItem_ItemInfo_2;           // 0x0B90(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_AddNewInventoryItem_SlotItemRef_2;        // 0x0DB0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddNewInventoryItem_StackRemainder_2;     // 0x0DB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SetUniqueID_UniqueID_1;                   // 0x0DBC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_NewEnable;                            // 0x0DC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_NewParam;                             // 0x0DC1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Attach;                               // 0x0DC2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC3[0x5];                                      // 0x0DC3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Canister_C*                         K2Node_Event_Canister;                             // 0x0DC8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Door_C*                             K2Node_Event_Door;                                 // 0x0DD0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsOpen;                               // 0x0DD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD9[0x7];                                      // 0x0DD9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_String;                               // 0x0DE0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0DF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0DF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0DF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DFC[0x4];                                      // 0x0DFC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ALootPoint_C*                           K2Node_Event_LootPoint;                            // 0x0E00(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0E08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E09[0x3];                                      // 0x0E09(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* DroppedSlotRef, class UJSI_Slot_C* SlotReceiverRef, int32 ToSlotIndex, bool Rotated_, bool RightMouseButton)> K2Node_CreateDelegate_OutputDelegate;              // 0x0E0C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1C[0x4];                                      // 0x0E1C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_LootingHeight;                        // 0x0E20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_LootPointOpened;                      // 0x0E28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E29[0x7];                                      // 0x0E29(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player;                               // 0x0E30(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_1;                             // 0x0E38(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_TileName;                             // 0x0E40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_TileName_1;                           // 0x0E48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0E50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_QuestIndex;                           // 0x0E54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_ObjectiveIndex;                       // 0x0E58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Visible;                              // 0x0E5C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Visible_1;                            // 0x0E5D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E5E[0x2];                                      // 0x0E5E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player_2;                             // 0x0E60(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_3;                             // 0x0E68(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_4;                             // 0x0E70(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_5;                             // 0x0E78(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_6;                             // 0x0E80(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SitIndex;                             // 0x0E88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_SkipAnimation;                        // 0x0E8C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E8D[0x3];                                      // 0x0E8D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player_7;                             // 0x0E90(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_8;                             // 0x0E98(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_9;                             // 0x0EA0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_10;                            // 0x0EA8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0EB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EB1[0x3];                                      // 0x0EB1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0EB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0EB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0EBC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0EBD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EBE[0x2];                                      // 0x0EBE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0EC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0EC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        CallFunc_Array_Get_Item;                           // 0x0EC8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotMotherUID_UDID;                    // 0x0ED0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0ED4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0ED8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0EDC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EDD[0x3];                                      // 0x0EDD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0EE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0EE4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EE5[0x3];                                      // 0x0EE5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0EE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0EEC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0EED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EEE[0x2];                                      // 0x0EEE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0EF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EF4[0x4];                                      // 0x0EF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0EF8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0F10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0F18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0F20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Success;                        // 0x0F28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F29[0x7];                                      // 0x0F29(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0F30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0F38(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0F50(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0FB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FB1[0x7];                                      // 0x0FB1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0FB8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_LockpickingGame_C*                  CallFunc_FinishSpawningActor_ReturnValue;          // 0x0FC0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0FC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0FCC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FCD[0x3];                                      // 0x0FCD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0FD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0FD4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0FD5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0FD6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0FD7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDefaultItemInfo                       CallFunc_Array_Get_Item_1;                         // 0x0FD8(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x1018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x101C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x1020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1021[0x3];                                     // 0x1021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x1024(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Actor;                          // 0x1028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDefaultItemInfo                       K2Node_CustomEvent_Item;                           // 0x1030(0x0040)(ConstParm, ContainsInstancedReference, HasGetValueTypeHash)
	class UJSIContainer_C*                        CallFunc_Map_Find_Value_6;                         // 0x1070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_6;                   // 0x1078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1079[0x7];                                     // 0x1079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_Array_Get_Item_2;                         // 0x1080(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x10E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x10EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10ED[0x3];                                     // 0x10ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDefaultItemInfo                       K2Node_MakeStruct_DefaultItemInfo;                 // 0x10F0(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_1;                   // 0x1130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1131[0x7];                                     // 0x1131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_Array_Get_Item_3;                         // 0x1138(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x11A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x11A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A5[0x3];                                     // 0x11A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDefaultItemInfo                       K2Node_MakeStruct_DefaultItemInfo_1;               // 0x11A8(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x11E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x11EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x11F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x11F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x11F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x11F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11FA[0x2];                                     // 0x11FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x11FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x1200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x1208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x1210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1211[0x7];                                     // 0x1211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMPContainerWidget_C*                   CallFunc_Create_ReturnValue;                       // 0x1218(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ContainerUID;                   // 0x1220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ItemUID;                        // 0x1224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Count;                          // 0x1228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x122C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        CallFunc_Map_Find_Value_7;                         // 0x1230(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_7;                   // 0x1238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1239[0x7];                                     // 0x1239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_Map_Find_Value_8;                         // 0x1240(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_8;                   // 0x1248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateCountByUniqueID_Sucess;             // 0x1249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemByUniqueID_Found_3;                // 0x124A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124B[0x5];                                     // 0x124B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetItemByUniqueID_Item_3;                 // 0x1250(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool Success)>                 K2Node_CreateDelegate_OutputDelegate_1;            // 0x1258(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_UpdateCount_Count;                        // 0x1268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsContainer__IsContainer__3;              // 0x126C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_126D[0x3];                                     // 0x126D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SetUniqueID_UniqueID_2;                   // 0x1270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x1274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox) == 0x000010, "Wrong alignment on MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox");
static_assert(sizeof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox) == 0x001280, "Wrong size on MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, EntryPoint) == 0x000000, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::EntryPoint' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, Temp_int_Variable) == 0x000004, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_GetMainContainer_ContainerWidget) == 0x000008, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_GetMainContainer_ContainerWidget' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_CustomEvent_Container) == 0x000010, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_CustomEvent_Container' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_CustomEvent_ToContainerUID_2) == 0x000018, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_CustomEvent_ToContainerUID_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_CustomEvent_PickupItem_1) == 0x000020, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_CustomEvent_PickupItem_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_CustomEvent_ToSlot_1) == 0x000088, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_CustomEvent_ToSlot_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Map_Find_Value) == 0x000090, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Map_Find_ReturnValue) == 0x000098, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Greater_IntInt_ReturnValue) == 0x000099, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_GetItemByUniqueID_Found) == 0x00009A, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_GetItemByUniqueID_Found' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_GetItemByUniqueID_Item) == 0x0000A0, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_GetItemByUniqueID_Item' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000A8, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0002C8, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Conv_NameToString_ReturnValue) == 0x0002D0, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Concat_StrStr_ReturnValue) == 0x0002E0, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_AddNewInventoryItem_Added) == 0x0002F0, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_AddNewInventoryItem_Added' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_AddNewInventoryItem_SlotIndex) == 0x0002F4, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_AddNewInventoryItem_SlotIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_AddNewInventoryItem_ItemInfo) == 0x0002F8, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_AddNewInventoryItem_ItemInfo' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_AddNewInventoryItem_SlotItemRef) == 0x000518, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_AddNewInventoryItem_SlotItemRef' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_AddNewInventoryItem_StackRemainder) == 0x000520, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_AddNewInventoryItem_StackRemainder' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000528, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_CustomEvent_ToContainerUID_1) == 0x000538, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_CustomEvent_ToContainerUID_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_CustomEvent_PickupItem) == 0x000540, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_CustomEvent_PickupItem' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_CustomEvent_ToSlot) == 0x0005A8, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_CustomEvent_ToSlot' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_CustomEvent_Rotated__1) == 0x0005AC, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_CustomEvent_Rotated__1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_CustomEvent_ContainerData) == 0x0005B0, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_CustomEvent_ContainerData' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_CustomEvent_ContainerItems) == 0x0005C0, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_CustomEvent_ContainerItems' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_CustomEvent_BlockAddContainer) == 0x0005D0, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_CustomEvent_BlockAddContainer' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Array_Length_ReturnValue) == 0x0005D4, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Conv_IntToString_ReturnValue) == 0x0005D8, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x0005E8, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000808, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000810, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000820, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000830, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_CustomEvent_ContainerUID_1) == 0x000840, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_CustomEvent_ContainerUID_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_CustomEvent_ItemUID_2) == 0x000844, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_CustomEvent_ItemUID_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000848, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Map_Find_Value_1) == 0x000858, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Map_Find_ReturnValue_1) == 0x000860, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_RemoveItemByUniqueID_Sucess) == 0x000861, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_RemoveItemByUniqueID_Sucess' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_GetItemByUniqueID_Found_1) == 0x000862, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_GetItemByUniqueID_Found_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_GetItemByUniqueID_Item_1) == 0x000868, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_GetItemByUniqueID_Item_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Map_Find_Value_2) == 0x000870, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Map_Find_ReturnValue_2) == 0x000878, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_AddNewInventoryItem_Added_1) == 0x000879, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_AddNewInventoryItem_Added_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_AddNewInventoryItem_SlotIndex_1) == 0x00087C, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_AddNewInventoryItem_SlotIndex_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_AddNewInventoryItem_ItemInfo_1) == 0x000880, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_AddNewInventoryItem_ItemInfo_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_AddNewInventoryItem_SlotItemRef_1) == 0x000AA0, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_AddNewInventoryItem_SlotItemRef_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_AddNewInventoryItem_StackRemainder_1) == 0x000AA8, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_AddNewInventoryItem_StackRemainder_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_IsContainer__IsContainer_) == 0x000AAC, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_IsContainer__IsContainer_' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_IsContainer__IsContainer__1) == 0x000AAD, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_IsContainer__IsContainer__1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_SetUniqueID_UniqueID) == 0x000AB0, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_SetUniqueID_UniqueID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_BuildContainerDataToWidget_CreatedContainerList) == 0x000AB8, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_BuildContainerDataToWidget_CreatedContainerList' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Array_Length_ReturnValue_1) == 0x000AC8, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_GetUniqueID_UniqueServerID) == 0x000ACC, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_GetUniqueID_UniqueServerID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Map_Remove_ReturnValue) == 0x000AD0, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_CustomEvent_ContainerID) == 0x000AD4, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_CustomEvent_ContainerID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_CustomEvent_ItemSlotIndex) == 0x000AD8, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_CustomEvent_ItemSlotIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_CustomEvent_ToSlotIndex) == 0x000ADC, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_CustomEvent_ToSlotIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_CustomEvent_Rotated__2) == 0x000AE0, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_CustomEvent_Rotated__2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Map_Find_Value_3) == 0x000AE8, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Map_Find_Value_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Map_Find_ReturnValue_3) == 0x000AF0, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Map_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Add_IntInt_ReturnValue) == 0x000AF4, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_GetItemBySlotIndex_Found) == 0x000AF8, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_GetItemBySlotIndex_Found' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_GetItemBySlotIndex_Item) == 0x000B00, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_GetItemBySlotIndex_Item' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_MoveItemToIndexByItemRef_Moved_) == 0x000B08, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_MoveItemToIndexByItemRef_Moved_' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_CustomEvent_FromContainer) == 0x000B10, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_CustomEvent_FromContainer' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_CustomEvent_ToContainer) == 0x000B18, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_CustomEvent_ToContainer' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_CustomEvent_DroppedSlotRef) == 0x000B20, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_CustomEvent_DroppedSlotRef' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_CustomEvent_SlotReceiverRef) == 0x000B28, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_CustomEvent_SlotReceiverRef' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_CustomEvent_ToSlotIndex_1) == 0x000B30, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_CustomEvent_ToSlotIndex_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_CustomEvent_Rotated__3) == 0x000B34, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_CustomEvent_Rotated__3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_CustomEvent_RightMouseButton) == 0x000B35, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_CustomEvent_RightMouseButton' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_CustomEvent_ItemUID_1) == 0x000B38, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_CustomEvent_ItemUID_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_CustomEvent_FromContainerUID) == 0x000B3C, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_CustomEvent_FromContainerUID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_CustomEvent_ToContainerUID) == 0x000B40, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_CustomEvent_ToContainerUID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_CustomEvent_ToIndex) == 0x000B44, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_CustomEvent_ToIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_CustomEvent_Rotated_) == 0x000B48, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_CustomEvent_Rotated_' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_IsDedicatedServer_ReturnValue) == 0x000B49, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Not_PreBool_ReturnValue) == 0x000B4A, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000B4B, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_BooleanAND_ReturnValue) == 0x000B4C, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Not_PreBool_ReturnValue_1) == 0x000B4D, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_BooleanAND_ReturnValue_1) == 0x000B4E, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Map_Find_Value_4) == 0x000B50, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Map_Find_Value_4' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Map_Find_ReturnValue_4) == 0x000B58, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Map_Find_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_GetItemByUniqueID_Found_2) == 0x000B59, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_GetItemByUniqueID_Found_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_GetItemByUniqueID_Item_2) == 0x000B60, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_GetItemByUniqueID_Item_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_CustomEvent_Container_1) == 0x000B68, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_CustomEvent_Container_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_CustomEvent_SetID_) == 0x000B70, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_CustomEvent_SetID_' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_GetUniqueID_UniqueServerID_1) == 0x000B74, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_GetUniqueID_UniqueServerID_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000B78, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_IsValid_ReturnValue) == 0x000B79, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_IsContainer__IsContainer__2) == 0x000B7A, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_IsContainer__IsContainer__2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_RemoveInventoryItemByRef_Removed) == 0x000B7B, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_RemoveInventoryItemByRef_Removed' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Map_Find_Value_5) == 0x000B80, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Map_Find_Value_5' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Map_Find_ReturnValue_5) == 0x000B88, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Map_Find_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_BooleanAND_ReturnValue_2) == 0x000B89, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_AddNewInventoryItem_Added_2) == 0x000B8A, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_AddNewInventoryItem_Added_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_AddNewInventoryItem_SlotIndex_2) == 0x000B8C, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_AddNewInventoryItem_SlotIndex_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_AddNewInventoryItem_ItemInfo_2) == 0x000B90, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_AddNewInventoryItem_ItemInfo_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_AddNewInventoryItem_SlotItemRef_2) == 0x000DB0, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_AddNewInventoryItem_SlotItemRef_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_AddNewInventoryItem_StackRemainder_2) == 0x000DB8, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_AddNewInventoryItem_StackRemainder_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_SetUniqueID_UniqueID_1) == 0x000DBC, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_SetUniqueID_UniqueID_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_Event_NewEnable) == 0x000DC0, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_Event_NewEnable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_Event_NewParam) == 0x000DC1, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_Event_NewParam' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_Event_Attach) == 0x000DC2, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_Event_Attach' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_Event_Canister) == 0x000DC8, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_Event_Canister' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_Event_Door) == 0x000DD0, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_Event_Door' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_Event_IsOpen) == 0x000DD8, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_Event_IsOpen' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_Event_String) == 0x000DE0, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_Event_String' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, Temp_int_Array_Index_Variable) == 0x000DF0, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, Temp_int_Loop_Counter_Variable) == 0x000DF4, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Add_IntInt_ReturnValue_1) == 0x000DF8, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_Event_LootPoint) == 0x000E00, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_Event_LootPoint' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_HasAuthority_ReturnValue) == 0x000E08, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_CreateDelegate_OutputDelegate) == 0x000E0C, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_Event_LootingHeight) == 0x000E20, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_Event_LootingHeight' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_Event_LootPointOpened) == 0x000E28, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_Event_LootPointOpened' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_Event_Player) == 0x000E30, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_Event_Player' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_Event_Player_1) == 0x000E38, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_Event_Player_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_Event_TileName) == 0x000E40, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_Event_TileName' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_Event_TileName_1) == 0x000E48, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_Event_TileName_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, Temp_int_Array_Index_Variable_1) == 0x000E50, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_Event_QuestIndex) == 0x000E54, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_Event_QuestIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_Event_ObjectiveIndex) == 0x000E58, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_Event_ObjectiveIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_Event_Visible) == 0x000E5C, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_Event_Visible' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_Event_Visible_1) == 0x000E5D, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_Event_Visible_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_Event_Player_2) == 0x000E60, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_Event_Player_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_Event_Player_3) == 0x000E68, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_Event_Player_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_Event_Player_4) == 0x000E70, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_Event_Player_4' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_Event_Player_5) == 0x000E78, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_Event_Player_5' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_Event_Player_6) == 0x000E80, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_Event_Player_6' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_Event_SitIndex) == 0x000E88, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_Event_SitIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_Event_SkipAnimation) == 0x000E8C, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_Event_SkipAnimation' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_Event_Player_7) == 0x000E90, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_Event_Player_7' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_Event_Player_8) == 0x000E98, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_Event_Player_8' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_Event_Player_9) == 0x000EA0, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_Event_Player_9' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_Event_Player_10) == 0x000EA8, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_Event_Player_10' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_HasAuthority_ReturnValue_1) == 0x000EB0, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Array_Length_ReturnValue_2) == 0x000EB4, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Array_Length_ReturnValue_3) == 0x000EB8, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000EBC, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000EBD, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, Temp_int_Array_Index_Variable_2) == 0x000EC0, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, Temp_int_Loop_Counter_Variable_1) == 0x000EC4, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Array_Get_Item) == 0x000EC8, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_GetSlotMotherUID_UDID) == 0x000ED0, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_GetSlotMotherUID_UDID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Add_IntInt_ReturnValue_2) == 0x000ED4, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, Temp_int_Array_Index_Variable_3) == 0x000ED8, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_IsServer_ReturnValue) == 0x000EDC, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Array_Length_ReturnValue_4) == 0x000EE0, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000EE4, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, Temp_int_Loop_Counter_Variable_2) == 0x000EE8, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_BooleanAND_ReturnValue_3) == 0x000EEC, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_BooleanAND_ReturnValue_4) == 0x000EED, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Add_IntInt_ReturnValue_3) == 0x000EF0, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000EF8, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_BreakVector_X) == 0x000F10, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_BreakVector_Y) == 0x000F18, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_BreakVector_Z) == 0x000F20, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_CustomEvent_Success) == 0x000F28, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_CustomEvent_Success' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000F30, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_MakeVector_ReturnValue) == 0x000F38, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_MakeTransform_ReturnValue) == 0x000F50, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_HasAuthority_ReturnValue_2) == 0x000FB0, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000FB8, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_FinishSpawningActor_ReturnValue) == 0x000FC0, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Array_Length_ReturnValue_5) == 0x000FC8, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000FCC, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Array_Length_ReturnValue_6) == 0x000FD0, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_BooleanAND_ReturnValue_5) == 0x000FD4, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000FD5, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_BooleanOR_ReturnValue) == 0x000FD6, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_BooleanAND_ReturnValue_6) == 0x000FD7, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Array_Get_Item_1) == 0x000FD8, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Array_Length_ReturnValue_7) == 0x001018, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Array_Add_ReturnValue) == 0x00101C, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Less_IntInt_ReturnValue) == 0x001020, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, Temp_int_Variable_1) == 0x001024, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_CustomEvent_Actor) == 0x001028, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_CustomEvent_Actor' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_CustomEvent_Item) == 0x001030, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_CustomEvent_Item' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Map_Find_Value_6) == 0x001070, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Map_Find_Value_6' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Map_Find_ReturnValue_6) == 0x001078, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Map_Find_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Array_Get_Item_2) == 0x001080, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Array_Length_ReturnValue_8) == 0x0010E8, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Less_IntInt_ReturnValue_1) == 0x0010EC, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_MakeStruct_DefaultItemInfo) == 0x0010F0, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_MakeStruct_DefaultItemInfo' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_IsServer_ReturnValue_1) == 0x001130, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_IsServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Array_Get_Item_3) == 0x001138, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Array_Length_ReturnValue_9) == 0x0011A0, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Less_IntInt_ReturnValue_2) == 0x0011A4, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_MakeStruct_DefaultItemInfo_1) == 0x0011A8, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_MakeStruct_DefaultItemInfo_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Array_Add_ReturnValue_1) == 0x0011E8, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Array_Add_ReturnValue_2) == 0x0011EC, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Array_Add_ReturnValue_3) == 0x0011F0, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, Temp_int_Loop_Counter_Variable_3) == 0x0011F4, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_HasAuthority_ReturnValue_3) == 0x0011F8, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Less_IntInt_ReturnValue_3) == 0x0011F9, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Add_IntInt_ReturnValue_4) == 0x0011FC, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_GetController_ReturnValue) == 0x001200, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_DynamicCast_AsPlayer_Controller) == 0x001208, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_DynamicCast_bSuccess) == 0x001210, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Create_ReturnValue) == 0x001218, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_CustomEvent_ContainerUID) == 0x001220, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_CustomEvent_ContainerUID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_CustomEvent_ItemUID) == 0x001224, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_CustomEvent_ItemUID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_CustomEvent_Count) == 0x001228, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_CustomEvent_Count' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, Temp_int_Variable_2) == 0x00122C, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Map_Find_Value_7) == 0x001230, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Map_Find_Value_7' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Map_Find_ReturnValue_7) == 0x001238, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Map_Find_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Map_Find_Value_8) == 0x001240, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Map_Find_Value_8' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_Map_Find_ReturnValue_8) == 0x001248, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_Map_Find_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_UpdateCountByUniqueID_Sucess) == 0x001249, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_UpdateCountByUniqueID_Sucess' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_GetItemByUniqueID_Found_3) == 0x00124A, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_GetItemByUniqueID_Found_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_GetItemByUniqueID_Item_3) == 0x001250, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_GetItemByUniqueID_Item_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, K2Node_CreateDelegate_OutputDelegate_1) == 0x001258, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_UpdateCount_Count) == 0x001268, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_UpdateCount_Count' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_IsContainer__IsContainer__3) == 0x00126C, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_IsContainer__IsContainer__3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_SetUniqueID_UniqueID_2) == 0x001270, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_SetUniqueID_UniqueID_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox, CallFunc_IsValid_ReturnValue_1) == 0x001274, "Member 'MPMainContainerBox_C_ExecuteUbergraph_MPMainContainerBox::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.GenerateContainerItems
// 0x1160 (0x1160 - 0x0000)
struct MPMainContainerBox_C_GenerateContainerItems final
{
public:
	struct FS_LootChanceModifier                  LootChanceMod;                                     // 0x0000(0x0009)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FDefaultItemInfo>               Items;                                             // 0x0010(0x0010)(Parm, OutParm, ContainsInstancedReference)
	bool                                          FindItemInLoop;                                    // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FDefaultItemInfo>               GeneratedItems;                                    // 0x0028(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         LootItems;                                         // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AmountItems;                                       // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RandomCountItems;                                  // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CountItemsRandomGenerate;                          // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELG2_LootRareType                             LootZone;                                          // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FDefaultItemInfo>               RandomITems;                                       // 0x0050(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<struct FItemIdGenerateChance>          TradeItems;                                        // 0x0060(0x0010)(Edit, BlueprintVisible)
	int32                                         RandomValue;                                       // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RandomIndex;                                       // 0x0074(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDefaultItemInfo                       CurrentItemInfo;                                   // 0x0078(0x0040)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvPC_C*                              K2Node_DynamicCast_AsSurv_PC;                      // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UQuestData_C*                     CallFunc_GetRandCurrentQuestsData_AsQuest_Data;    // 0x00E0(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetRandCurrentQuestsData_Chance;          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Get_Rand_Unique_Item_ItemName;            // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow;           // 0x0108(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_329[0x3];                                      // 0x0329(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331[0x3];                                      // 0x0331(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0341(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_342[0x2];                                      // 0x0342(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0348(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C[0x4];                                      // 0x035C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0360(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0370(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0380(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0390(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4[0x4];                                      // 0x03A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x03A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x03C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x03C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C3[0x1];                                      // 0x03C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C9[0x3];                                      // 0x03C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomInteger_ReturnValue_1;              // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D1[0x3];                                      // 0x03D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_IsNotEmpty_ReturnValue;               // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D9[0x7];                                      // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             Temp_object_Variable;                              // 0x03E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_1;                            // 0x03E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_2;                            // 0x03F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue_2;              // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FC[0x4];                                      // 0x03FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             Temp_object_Variable_3;                            // 0x0400(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_4;                            // 0x0408(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_5;                            // 0x0410(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41C[0x4];                                      // 0x041C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             Temp_object_Variable_6;                            // 0x0420(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_7;                            // 0x0428(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_8;                            // 0x0430(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_9;                            // 0x0438(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_10;                           // 0x0440(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44C[0x4];                                      // 0x044C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0450(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELootGeneratorType                            Temp_byte_Variable;                                // 0x0461(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_462[0x2];                                      // 0x0462(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0464(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0469(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x046A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_2;        // 0x046B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x046C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46D[0x3];                                      // 0x046D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0470(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0478(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC;                  // 0x0490(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_3;        // 0x04A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELG2_LootRareType                             CallFunc_GetLootZoneType_Type;                     // 0x04A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x04A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_4;        // 0x04A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x04A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A6[0x2];                                      // 0x04A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x04A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x04AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4AD[0x3];                                      // 0x04AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x04B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x04BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x04C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x04C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_5;        // 0x04CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x04CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CE[0x2];                                      // 0x04CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x04D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue_3;              // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DC[0x4];                                      // 0x04DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             K2Node_Select_Default;                             // 0x04E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             K2Node_Select_Default_1;                           // 0x04E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x04F0(0x0010)(ReferenceParm)
	int32                                         CallFunc_RandomInteger_ReturnValue_4;              // 0x0500(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0504(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50C[0x4];                                      // 0x050C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeneralChanceByType                   CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0510(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_541[0x3];                                      // 0x0541(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0544(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0549(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54A[0x6];                                      // 0x054A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCountChance                           CallFunc_Array_Get_Item_1;                         // 0x0550(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0568(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x056C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0571(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_572[0x6];                                      // 0x0572(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0588(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x058C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0590(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GenerateRandomItemsOnType_ID;             // 0x0594(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GenerateRandomItemsOnType_Canstack;       // 0x059C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59D[0x3];                                      // 0x059D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GenerateRandomItemsOnType_MaxCountStack;  // 0x05A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A4[0x4];                                      // 0x05A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATDB_GameMode_C*                        CallFunc_GenerateRandomItemsOnType_AsTDB_Game_Mode; // 0x05A8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FItemIdGenerateChance                  CallFunc_Array_Get_Item_2;                         // 0x05B0(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D1[0x7];                                      // 0x05D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCountChance                           CallFunc_Array_Get_Item_3;                         // 0x05D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x05F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F4[0x4];                                      // 0x05F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x05F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0608(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_609[0x3];                                      // 0x0609(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Round_ReturnValue_2;                      // 0x060C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_611[0x3];                                      // 0x0611(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Round_ReturnValue_3;                      // 0x0614(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_1;       // 0x0618(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61C[0x4];                                      // 0x061C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow_2;         // 0x0620(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_2;    // 0x0840(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_841[0x7];                                      // 0x0841(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow_3;         // 0x0848(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_3;    // 0x0A68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A69[0x7];                                      // 0x0A69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             K2Node_Select_Default_2;                           // 0x0A70(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0C90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckTierAndLootTypes_ReturnValue;        // 0x0C94(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C95[0x3];                                      // 0x0C95(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_CheckTierAndLootTypes_ArrayTypes;         // 0x0C98(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0CA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA9[0x3];                                      // 0x0CA9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item_4;                         // 0x0CAC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0CB4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CB5[0x3];                                      // 0x0CB5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow_4;         // 0x0CB8(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_4;    // 0x0ED8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ED9[0x3];                                      // 0x0ED9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item_5;                         // 0x0EDC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EE4[0x4];                                      // 0x0EE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow_5;         // 0x0EE8(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_5;    // 0x1108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x1109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x110A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x110B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x110C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x1110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1111[0x3];                                     // 0x1111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x1114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x1118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1119[0x3];                                     // 0x1119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x111C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x1120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x1124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x1128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x1129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x112A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_112B[0x1];                                     // 0x112B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x112C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x1130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x1131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1132[0x2];                                     // 0x1132(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x1134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x1138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1139[0x3];                                     // 0x1139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x113C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x1140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_4;           // 0x1144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_5;           // 0x1145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1146[0x2];                                     // 0x1146(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x1148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue_5;              // 0x114C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_6;           // 0x1150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1151[0x3];                                     // 0x1151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x1154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x1158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x1159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_GenerateContainerItems) == 0x000008, "Wrong alignment on MPMainContainerBox_C_GenerateContainerItems");
static_assert(sizeof(MPMainContainerBox_C_GenerateContainerItems) == 0x001160, "Wrong size on MPMainContainerBox_C_GenerateContainerItems");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, LootChanceMod) == 0x000000, "Member 'MPMainContainerBox_C_GenerateContainerItems::LootChanceMod' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, Items) == 0x000010, "Member 'MPMainContainerBox_C_GenerateContainerItems::Items' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, FindItemInLoop) == 0x000020, "Member 'MPMainContainerBox_C_GenerateContainerItems::FindItemInLoop' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, GeneratedItems) == 0x000028, "Member 'MPMainContainerBox_C_GenerateContainerItems::GeneratedItems' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, LootItems) == 0x000038, "Member 'MPMainContainerBox_C_GenerateContainerItems::LootItems' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, AmountItems) == 0x00003C, "Member 'MPMainContainerBox_C_GenerateContainerItems::AmountItems' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, RandomCountItems) == 0x000040, "Member 'MPMainContainerBox_C_GenerateContainerItems::RandomCountItems' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CountItemsRandomGenerate) == 0x000044, "Member 'MPMainContainerBox_C_GenerateContainerItems::CountItemsRandomGenerate' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, LootZone) == 0x000048, "Member 'MPMainContainerBox_C_GenerateContainerItems::LootZone' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, RandomITems) == 0x000050, "Member 'MPMainContainerBox_C_GenerateContainerItems::RandomITems' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, TradeItems) == 0x000060, "Member 'MPMainContainerBox_C_GenerateContainerItems::TradeItems' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, RandomValue) == 0x000070, "Member 'MPMainContainerBox_C_GenerateContainerItems::RandomValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, RandomIndex) == 0x000074, "Member 'MPMainContainerBox_C_GenerateContainerItems::RandomIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CurrentItemInfo) == 0x000078, "Member 'MPMainContainerBox_C_GenerateContainerItems::CurrentItemInfo' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, K2Node_DynamicCast_AsSurvival_Player) == 0x0000B8, "Member 'MPMainContainerBox_C_GenerateContainerItems::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'MPMainContainerBox_C_GenerateContainerItems::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_GetController_ReturnValue) == 0x0000C8, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, K2Node_DynamicCast_AsSurv_PC) == 0x0000D0, "Member 'MPMainContainerBox_C_GenerateContainerItems::K2Node_DynamicCast_AsSurv_PC' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, K2Node_DynamicCast_bSuccess_1) == 0x0000D8, "Member 'MPMainContainerBox_C_GenerateContainerItems::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_GetRandCurrentQuestsData_AsQuest_Data) == 0x0000E0, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_GetRandCurrentQuestsData_AsQuest_Data' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_GetRandCurrentQuestsData_Chance) == 0x0000E8, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_GetRandCurrentQuestsData_Chance' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Get_Rand_Unique_Item_ItemName) == 0x0000F0, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Get_Rand_Unique_Item_ItemName' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Conv_StringToName_ReturnValue) == 0x000100, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_GetDataTableRowFromName_OutRow) == 0x000108, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000328, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, Temp_int_Loop_Counter_Variable) == 0x00032C, "Member 'MPMainContainerBox_C_GenerateContainerItems::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, Temp_bool_Variable) == 0x000330, "Member 'MPMainContainerBox_C_GenerateContainerItems::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Add_IntInt_ReturnValue) == 0x000334, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, Temp_int_Loop_Counter_Variable_1) == 0x000338, "Member 'MPMainContainerBox_C_GenerateContainerItems::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Add_IntInt_ReturnValue_1) == 0x00033C, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, Temp_bool_True_if_break_was_hit_Variable) == 0x000340, "Member 'MPMainContainerBox_C_GenerateContainerItems::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Not_PreBool_ReturnValue) == 0x000341, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_RandomInteger_ReturnValue) == 0x000344, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Conv_IntToString_ReturnValue) == 0x000348, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, Temp_int_Array_Index_Variable) == 0x000358, "Member 'MPMainContainerBox_C_GenerateContainerItems::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000360, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Concat_StrStr_ReturnValue) == 0x000370, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000380, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000390, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Add_IntInt_ReturnValue_2) == 0x0003A0, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0003A8, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_RandomFloatInRange_ReturnValue) == 0x0003B8, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0003C0, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0003C1, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, Temp_bool_True_if_break_was_hit_Variable_1) == 0x0003C2, "Member 'MPMainContainerBox_C_GenerateContainerItems::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, Temp_int_Array_Index_Variable_1) == 0x0003C4, "Member 'MPMainContainerBox_C_GenerateContainerItems::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Not_PreBool_ReturnValue_1) == 0x0003C8, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_RandomInteger_ReturnValue_1) == 0x0003CC, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_RandomInteger_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0003D0, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Array_Add_ReturnValue) == 0x0003D4, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Map_IsNotEmpty_ReturnValue) == 0x0003D8, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Map_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, Temp_object_Variable) == 0x0003E0, "Member 'MPMainContainerBox_C_GenerateContainerItems::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, Temp_object_Variable_1) == 0x0003E8, "Member 'MPMainContainerBox_C_GenerateContainerItems::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, Temp_object_Variable_2) == 0x0003F0, "Member 'MPMainContainerBox_C_GenerateContainerItems::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_RandomInteger_ReturnValue_2) == 0x0003F8, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_RandomInteger_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, Temp_object_Variable_3) == 0x000400, "Member 'MPMainContainerBox_C_GenerateContainerItems::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, Temp_object_Variable_4) == 0x000408, "Member 'MPMainContainerBox_C_GenerateContainerItems::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, Temp_object_Variable_5) == 0x000410, "Member 'MPMainContainerBox_C_GenerateContainerItems::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, Temp_int_Array_Index_Variable_2) == 0x000418, "Member 'MPMainContainerBox_C_GenerateContainerItems::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, Temp_object_Variable_6) == 0x000420, "Member 'MPMainContainerBox_C_GenerateContainerItems::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, Temp_object_Variable_7) == 0x000428, "Member 'MPMainContainerBox_C_GenerateContainerItems::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, Temp_object_Variable_8) == 0x000430, "Member 'MPMainContainerBox_C_GenerateContainerItems::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, Temp_object_Variable_9) == 0x000438, "Member 'MPMainContainerBox_C_GenerateContainerItems::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, Temp_object_Variable_10) == 0x000440, "Member 'MPMainContainerBox_C_GenerateContainerItems::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Array_Add_ReturnValue_1) == 0x000448, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Conv_NameToString_ReturnValue) == 0x000450, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000460, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, Temp_byte_Variable) == 0x000461, "Member 'MPMainContainerBox_C_GenerateContainerItems::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, Temp_int_Array_Index_Variable_3) == 0x000464, "Member 'MPMainContainerBox_C_GenerateContainerItems::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, Temp_bool_Variable_1) == 0x000468, "Member 'MPMainContainerBox_C_GenerateContainerItems::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000469, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x00046A, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, Temp_bool_True_if_break_was_hit_Variable_2) == 0x00046B, "Member 'MPMainContainerBox_C_GenerateContainerItems::Temp_bool_True_if_break_was_hit_Variable_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Not_PreBool_ReturnValue_2) == 0x00046C, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_GetPlayerController_ReturnValue) == 0x000470, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000478, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, K2Node_DynamicCast_AsBPI_Surv_PC) == 0x000490, "Member 'MPMainContainerBox_C_GenerateContainerItems::K2Node_DynamicCast_AsBPI_Surv_PC' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, K2Node_DynamicCast_bSuccess_2) == 0x0004A0, "Member 'MPMainContainerBox_C_GenerateContainerItems::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, Temp_bool_True_if_break_was_hit_Variable_3) == 0x0004A1, "Member 'MPMainContainerBox_C_GenerateContainerItems::Temp_bool_True_if_break_was_hit_Variable_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_GetLootZoneType_Type) == 0x0004A2, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_GetLootZoneType_Type' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Not_PreBool_ReturnValue_3) == 0x0004A3, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, Temp_bool_True_if_break_was_hit_Variable_4) == 0x0004A4, "Member 'MPMainContainerBox_C_GenerateContainerItems::Temp_bool_True_if_break_was_hit_Variable_4' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Not_PreBool_ReturnValue_4) == 0x0004A5, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, Temp_int_Loop_Counter_Variable_2) == 0x0004A8, "Member 'MPMainContainerBox_C_GenerateContainerItems::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_IsValid_ReturnValue) == 0x0004AC, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Add_IntInt_ReturnValue_3) == 0x0004B0, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, Temp_int_Loop_Counter_Variable_3) == 0x0004B4, "Member 'MPMainContainerBox_C_GenerateContainerItems::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, Temp_int_Array_Index_Variable_4) == 0x0004B8, "Member 'MPMainContainerBox_C_GenerateContainerItems::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Add_IntInt_ReturnValue_4) == 0x0004BC, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, Temp_int_Loop_Counter_Variable_4) == 0x0004C0, "Member 'MPMainContainerBox_C_GenerateContainerItems::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, Temp_int_Array_Index_Variable_5) == 0x0004C4, "Member 'MPMainContainerBox_C_GenerateContainerItems::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Add_IntInt_ReturnValue_5) == 0x0004C8, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, Temp_bool_True_if_break_was_hit_Variable_5) == 0x0004CC, "Member 'MPMainContainerBox_C_GenerateContainerItems::Temp_bool_True_if_break_was_hit_Variable_5' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Not_PreBool_ReturnValue_5) == 0x0004CD, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, Temp_int_Loop_Counter_Variable_5) == 0x0004D0, "Member 'MPMainContainerBox_C_GenerateContainerItems::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Add_IntInt_ReturnValue_6) == 0x0004D4, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_RandomInteger_ReturnValue_3) == 0x0004D8, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_RandomInteger_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, K2Node_Select_Default) == 0x0004E0, "Member 'MPMainContainerBox_C_GenerateContainerItems::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, K2Node_Select_Default_1) == 0x0004E8, "Member 'MPMainContainerBox_C_GenerateContainerItems::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_GetDataTableRowNames_OutRowNames) == 0x0004F0, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_RandomInteger_ReturnValue_4) == 0x000500, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_RandomInteger_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Array_Get_Item) == 0x000504, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000510, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000540, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Array_Length_ReturnValue) == 0x000544, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Less_IntInt_ReturnValue) == 0x000548, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_BooleanAND_ReturnValue) == 0x000549, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Array_Get_Item_1) == 0x000550, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Array_Length_ReturnValue_1) == 0x000568, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Add_IntInt_ReturnValue_7) == 0x00056C, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Less_IntInt_ReturnValue_1) == 0x000570, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_BooleanAND_ReturnValue_1) == 0x000571, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_BreakVector2D_X) == 0x000578, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_BreakVector2D_Y) == 0x000580, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Round_ReturnValue) == 0x000588, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Round_ReturnValue_1) == 0x00058C, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000590, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_GenerateRandomItemsOnType_ID) == 0x000594, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_GenerateRandomItemsOnType_ID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_GenerateRandomItemsOnType_Canstack) == 0x00059C, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_GenerateRandomItemsOnType_Canstack' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_GenerateRandomItemsOnType_MaxCountStack) == 0x0005A0, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_GenerateRandomItemsOnType_MaxCountStack' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_GenerateRandomItemsOnType_AsTDB_Game_Mode) == 0x0005A8, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_GenerateRandomItemsOnType_AsTDB_Game_Mode' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Array_Get_Item_2) == 0x0005B0, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Greater_IntInt_ReturnValue) == 0x0005D0, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Array_Get_Item_3) == 0x0005D8, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Array_Length_ReturnValue_2) == 0x0005F0, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_BreakVector2D_X_1) == 0x0005F8, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_BreakVector2D_Y_1) == 0x000600, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Less_IntInt_ReturnValue_2) == 0x000608, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Round_ReturnValue_2) == 0x00060C, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Round_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_BooleanAND_ReturnValue_2) == 0x000610, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Round_ReturnValue_3) == 0x000614, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Round_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_RandomIntegerInRange_ReturnValue_1) == 0x000618, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_RandomIntegerInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_GetDataTableRowFromName_OutRow_2) == 0x000620, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_GetDataTableRowFromName_OutRow_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_GetDataTableRowFromName_ReturnValue_2) == 0x000840, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_GetDataTableRowFromName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_GetDataTableRowFromName_OutRow_3) == 0x000848, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_GetDataTableRowFromName_OutRow_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_GetDataTableRowFromName_ReturnValue_3) == 0x000A68, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_GetDataTableRowFromName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, K2Node_Select_Default_2) == 0x000A70, "Member 'MPMainContainerBox_C_GenerateContainerItems::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Array_Length_ReturnValue_3) == 0x000C90, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_CheckTierAndLootTypes_ReturnValue) == 0x000C94, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_CheckTierAndLootTypes_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_CheckTierAndLootTypes_ArrayTypes) == 0x000C98, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_CheckTierAndLootTypes_ArrayTypes' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Less_IntInt_ReturnValue_3) == 0x000CA8, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Array_Get_Item_4) == 0x000CAC, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_BooleanAND_ReturnValue_3) == 0x000CB4, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_GetDataTableRowFromName_OutRow_4) == 0x000CB8, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_GetDataTableRowFromName_OutRow_4' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_GetDataTableRowFromName_ReturnValue_4) == 0x000ED8, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_GetDataTableRowFromName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Array_Get_Item_5) == 0x000EDC, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_GetDataTableRowFromName_OutRow_5) == 0x000EE8, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_GetDataTableRowFromName_OutRow_5' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_GetDataTableRowFromName_ReturnValue_5) == 0x001108, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_GetDataTableRowFromName_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x001109, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_BooleanAND_ReturnValue_4) == 0x00110A, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00110B, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Array_Length_ReturnValue_4) == 0x00110C, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_BooleanAND_ReturnValue_5) == 0x001110, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Subtract_IntInt_ReturnValue) == 0x001114, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x001118, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Array_Length_ReturnValue_5) == 0x00111C, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x001120, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Array_Length_ReturnValue_6) == 0x001124, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x001128, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Less_IntInt_ReturnValue_4) == 0x001129, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_BooleanAND_ReturnValue_6) == 0x00112A, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Array_Length_ReturnValue_7) == 0x00112C, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Less_IntInt_ReturnValue_5) == 0x001130, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_BooleanAND_ReturnValue_7) == 0x001131, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x001134, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x001138, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Array_Add_ReturnValue_2) == 0x00113C, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Add_IntInt_ReturnValue_8) == 0x001140, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_LessEqual_IntInt_ReturnValue_4) == 0x001144, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_LessEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_LessEqual_IntInt_ReturnValue_5) == 0x001145, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_LessEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Add_IntInt_ReturnValue_9) == 0x001148, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_RandomInteger_ReturnValue_5) == 0x00114C, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_RandomInteger_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_LessEqual_IntInt_ReturnValue_6) == 0x001150, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_LessEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_Array_Length_ReturnValue_8) == 0x001154, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x001158, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateContainerItems, CallFunc_BooleanOR_ReturnValue) == 0x001159, "Member 'MPMainContainerBox_C_GenerateContainerItems::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.GenerateRandomItemsOnType
// 0x02C8 (0x02C8 - 0x0000)
struct MPMainContainerBox_C_GenerateRandomItemsOnType final
{
public:
	ELootTypes                                    Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlotRarity                                   LootTier;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Chance;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ID;                                                // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Canstack;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxCountStack;                                     // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATDB_GameMode_C*                        AsTDB_Game_Mode;                                   // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         RandomValue;                                       // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   NameItem;                                          // 0x0024(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RandomIndex;                                       // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RandomIndexFunc;                                   // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RandomValueFunc;                                   // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ATDB_GameMode_C*                        K2Node_DynamicCast_AsTDB_Game_Mode;                // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           Temp_name_Variable;                                // 0x0068(0x0010)(ReferenceParm)
	ELootTypes                                    Temp_byte_Variable;                                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_Select_Default;                             // 0x0080(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow;           // 0x00A0(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x02C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x02C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x02C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_GenerateRandomItemsOnType) == 0x000008, "Wrong alignment on MPMainContainerBox_C_GenerateRandomItemsOnType");
static_assert(sizeof(MPMainContainerBox_C_GenerateRandomItemsOnType) == 0x0002C8, "Wrong size on MPMainContainerBox_C_GenerateRandomItemsOnType");
static_assert(offsetof(MPMainContainerBox_C_GenerateRandomItemsOnType, Type) == 0x000000, "Member 'MPMainContainerBox_C_GenerateRandomItemsOnType::Type' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateRandomItemsOnType, LootTier) == 0x000001, "Member 'MPMainContainerBox_C_GenerateRandomItemsOnType::LootTier' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateRandomItemsOnType, Chance) == 0x000004, "Member 'MPMainContainerBox_C_GenerateRandomItemsOnType::Chance' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateRandomItemsOnType, ID) == 0x000008, "Member 'MPMainContainerBox_C_GenerateRandomItemsOnType::ID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateRandomItemsOnType, Canstack) == 0x000010, "Member 'MPMainContainerBox_C_GenerateRandomItemsOnType::Canstack' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateRandomItemsOnType, MaxCountStack) == 0x000014, "Member 'MPMainContainerBox_C_GenerateRandomItemsOnType::MaxCountStack' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateRandomItemsOnType, AsTDB_Game_Mode) == 0x000018, "Member 'MPMainContainerBox_C_GenerateRandomItemsOnType::AsTDB_Game_Mode' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateRandomItemsOnType, RandomValue) == 0x000020, "Member 'MPMainContainerBox_C_GenerateRandomItemsOnType::RandomValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateRandomItemsOnType, NameItem) == 0x000024, "Member 'MPMainContainerBox_C_GenerateRandomItemsOnType::NameItem' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateRandomItemsOnType, RandomIndex) == 0x00002C, "Member 'MPMainContainerBox_C_GenerateRandomItemsOnType::RandomIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateRandomItemsOnType, RandomIndexFunc) == 0x000030, "Member 'MPMainContainerBox_C_GenerateRandomItemsOnType::RandomIndexFunc' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateRandomItemsOnType, RandomValueFunc) == 0x000034, "Member 'MPMainContainerBox_C_GenerateRandomItemsOnType::RandomValueFunc' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateRandomItemsOnType, Temp_bool_True_if_break_was_hit_Variable) == 0x000038, "Member 'MPMainContainerBox_C_GenerateRandomItemsOnType::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateRandomItemsOnType, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'MPMainContainerBox_C_GenerateRandomItemsOnType::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateRandomItemsOnType, CallFunc_Not_PreBool_ReturnValue) == 0x000040, "Member 'MPMainContainerBox_C_GenerateRandomItemsOnType::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateRandomItemsOnType, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'MPMainContainerBox_C_GenerateRandomItemsOnType::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateRandomItemsOnType, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'MPMainContainerBox_C_GenerateRandomItemsOnType::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateRandomItemsOnType, CallFunc_GetGameMode_ReturnValue) == 0x000050, "Member 'MPMainContainerBox_C_GenerateRandomItemsOnType::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateRandomItemsOnType, K2Node_DynamicCast_AsTDB_Game_Mode) == 0x000058, "Member 'MPMainContainerBox_C_GenerateRandomItemsOnType::K2Node_DynamicCast_AsTDB_Game_Mode' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateRandomItemsOnType, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'MPMainContainerBox_C_GenerateRandomItemsOnType::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateRandomItemsOnType, Temp_name_Variable) == 0x000068, "Member 'MPMainContainerBox_C_GenerateRandomItemsOnType::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateRandomItemsOnType, Temp_byte_Variable) == 0x000078, "Member 'MPMainContainerBox_C_GenerateRandomItemsOnType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateRandomItemsOnType, K2Node_Select_Default) == 0x000080, "Member 'MPMainContainerBox_C_GenerateRandomItemsOnType::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateRandomItemsOnType, CallFunc_Array_Get_Item) == 0x000090, "Member 'MPMainContainerBox_C_GenerateRandomItemsOnType::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateRandomItemsOnType, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'MPMainContainerBox_C_GenerateRandomItemsOnType::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateRandomItemsOnType, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000A0, "Member 'MPMainContainerBox_C_GenerateRandomItemsOnType::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateRandomItemsOnType, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0002C0, "Member 'MPMainContainerBox_C_GenerateRandomItemsOnType::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateRandomItemsOnType, CallFunc_Less_IntInt_ReturnValue) == 0x0002C1, "Member 'MPMainContainerBox_C_GenerateRandomItemsOnType::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateRandomItemsOnType, CallFunc_BooleanAND_ReturnValue) == 0x0002C2, "Member 'MPMainContainerBox_C_GenerateRandomItemsOnType::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateRandomItemsOnType, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0002C3, "Member 'MPMainContainerBox_C_GenerateRandomItemsOnType::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateRandomItemsOnType, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0002C4, "Member 'MPMainContainerBox_C_GenerateRandomItemsOnType::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GenerateRandomItemsOnType, CallFunc_BooleanAND_ReturnValue_1) == 0x0002C5, "Member 'MPMainContainerBox_C_GenerateRandomItemsOnType::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.Get Rand Unique Item
// 0x00B8 (0x00B8 - 0x0000)
struct MPMainContainerBox_C_Get_Rand_Unique_Item final
{
public:
	const class UQuestData_C*                     QuestData;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      Surv;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 ItemName;                                          // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         ValidItemsNames;                                   // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_Map_Values_Values;                        // 0x0038(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_Map_Keys_Keys;                            // 0x0050(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Random_OutItem;                     // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_Get_Rand_Unique_Item) == 0x000008, "Wrong alignment on MPMainContainerBox_C_Get_Rand_Unique_Item");
static_assert(sizeof(MPMainContainerBox_C_Get_Rand_Unique_Item) == 0x0000B8, "Wrong size on MPMainContainerBox_C_Get_Rand_Unique_Item");
static_assert(offsetof(MPMainContainerBox_C_Get_Rand_Unique_Item, QuestData) == 0x000000, "Member 'MPMainContainerBox_C_Get_Rand_Unique_Item::QuestData' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_Get_Rand_Unique_Item, Surv) == 0x000008, "Member 'MPMainContainerBox_C_Get_Rand_Unique_Item::Surv' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_Get_Rand_Unique_Item, ItemName) == 0x000010, "Member 'MPMainContainerBox_C_Get_Rand_Unique_Item::ItemName' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_Get_Rand_Unique_Item, ValidItemsNames) == 0x000020, "Member 'MPMainContainerBox_C_Get_Rand_Unique_Item::ValidItemsNames' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_Get_Rand_Unique_Item, Temp_int_Array_Index_Variable) == 0x000030, "Member 'MPMainContainerBox_C_Get_Rand_Unique_Item::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_Get_Rand_Unique_Item, CallFunc_Map_Values_Values) == 0x000038, "Member 'MPMainContainerBox_C_Get_Rand_Unique_Item::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_Get_Rand_Unique_Item, CallFunc_Array_Get_Item) == 0x000048, "Member 'MPMainContainerBox_C_Get_Rand_Unique_Item::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_Get_Rand_Unique_Item, CallFunc_Map_Keys_Keys) == 0x000050, "Member 'MPMainContainerBox_C_Get_Rand_Unique_Item::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_Get_Rand_Unique_Item, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'MPMainContainerBox_C_Get_Rand_Unique_Item::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_Get_Rand_Unique_Item, CallFunc_Array_Get_Item_1) == 0x000068, "Member 'MPMainContainerBox_C_Get_Rand_Unique_Item::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_Get_Rand_Unique_Item, CallFunc_Array_Find_ReturnValue) == 0x000078, "Member 'MPMainContainerBox_C_Get_Rand_Unique_Item::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_Get_Rand_Unique_Item, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'MPMainContainerBox_C_Get_Rand_Unique_Item::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_Get_Rand_Unique_Item, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000080, "Member 'MPMainContainerBox_C_Get_Rand_Unique_Item::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_Get_Rand_Unique_Item, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'MPMainContainerBox_C_Get_Rand_Unique_Item::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_Get_Rand_Unique_Item, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'MPMainContainerBox_C_Get_Rand_Unique_Item::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_Get_Rand_Unique_Item, CallFunc_Array_Add_ReturnValue) == 0x00008C, "Member 'MPMainContainerBox_C_Get_Rand_Unique_Item::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_Get_Rand_Unique_Item, CallFunc_Array_Add_ReturnValue_1) == 0x000090, "Member 'MPMainContainerBox_C_Get_Rand_Unique_Item::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_Get_Rand_Unique_Item, CallFunc_Array_Get_Item_2) == 0x000094, "Member 'MPMainContainerBox_C_Get_Rand_Unique_Item::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_Get_Rand_Unique_Item, CallFunc_Less_IntInt_ReturnValue_1) == 0x000098, "Member 'MPMainContainerBox_C_Get_Rand_Unique_Item::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_Get_Rand_Unique_Item, CallFunc_Array_Random_OutItem) == 0x0000A0, "Member 'MPMainContainerBox_C_Get_Rand_Unique_Item::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_Get_Rand_Unique_Item, CallFunc_Array_Random_OutIndex) == 0x0000B0, "Member 'MPMainContainerBox_C_Get_Rand_Unique_Item::CallFunc_Array_Random_OutIndex' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.GetActorType
// 0x0001 (0x0001 - 0x0000)
struct MPMainContainerBox_C_GetActorType final
{
public:
	E_ActorType                                   ActorType;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_GetActorType) == 0x000001, "Wrong alignment on MPMainContainerBox_C_GetActorType");
static_assert(sizeof(MPMainContainerBox_C_GetActorType) == 0x000001, "Wrong size on MPMainContainerBox_C_GetActorType");
static_assert(offsetof(MPMainContainerBox_C_GetActorType, ActorType) == 0x000000, "Member 'MPMainContainerBox_C_GetActorType::ActorType' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.GetColumnRowBySlotIndex
// 0x0028 (0x0028 - 0x0000)
struct MPMainContainerBox_C_GetColumnRowBySlotIndex final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumOfColumns;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumOfRows;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Column;                                            // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Row;                                               // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempRow;                                           // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempColumn;                                        // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_GetColumnRowBySlotIndex) == 0x000004, "Wrong alignment on MPMainContainerBox_C_GetColumnRowBySlotIndex");
static_assert(sizeof(MPMainContainerBox_C_GetColumnRowBySlotIndex) == 0x000028, "Wrong size on MPMainContainerBox_C_GetColumnRowBySlotIndex");
static_assert(offsetof(MPMainContainerBox_C_GetColumnRowBySlotIndex, SlotIndex) == 0x000000, "Member 'MPMainContainerBox_C_GetColumnRowBySlotIndex::SlotIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetColumnRowBySlotIndex, NumOfColumns) == 0x000004, "Member 'MPMainContainerBox_C_GetColumnRowBySlotIndex::NumOfColumns' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetColumnRowBySlotIndex, NumOfRows) == 0x000008, "Member 'MPMainContainerBox_C_GetColumnRowBySlotIndex::NumOfRows' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetColumnRowBySlotIndex, Column) == 0x00000C, "Member 'MPMainContainerBox_C_GetColumnRowBySlotIndex::Column' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetColumnRowBySlotIndex, Row) == 0x000010, "Member 'MPMainContainerBox_C_GetColumnRowBySlotIndex::Row' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetColumnRowBySlotIndex, TempRow) == 0x000014, "Member 'MPMainContainerBox_C_GetColumnRowBySlotIndex::TempRow' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetColumnRowBySlotIndex, TempColumn) == 0x000018, "Member 'MPMainContainerBox_C_GetColumnRowBySlotIndex::TempColumn' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetColumnRowBySlotIndex, CallFunc_Percent_IntInt_ReturnValue) == 0x00001C, "Member 'MPMainContainerBox_C_GetColumnRowBySlotIndex::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetColumnRowBySlotIndex, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'MPMainContainerBox_C_GetColumnRowBySlotIndex::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetColumnRowBySlotIndex, CallFunc_Divide_IntInt_ReturnValue) == 0x000024, "Member 'MPMainContainerBox_C_GetColumnRowBySlotIndex::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.GetCompiledContainerStructure
// 0x03D8 (0x03D8 - 0x0000)
struct MPMainContainerBox_C_GetCompiledContainerStructure final
{
public:
	struct FFItemInfo                             Item;                                              // 0x0000(0x0220)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	struct FDefaultItemInfo                       DefItem;                                           // 0x0220(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         ContainerMotherID;                                 // 0x0260(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SlotIndex;                                         // 0x0264(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AutoUpdateChild;                                   // 0x0268(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0269(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26A[0x6];                                      // 0x026A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  Container;                                         // 0x0270(0x0068)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  FunctionContainer;                                 // 0x02D8(0x0068)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          FunctionResult;                                    // 0x0340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0341(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0342(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0343(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0344(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0345(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_346[0x2];                                      // 0x0346(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPickupAttachments                     K2Node_Select_Default;                             // 0x0348(0x0010)(HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_2;                           // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_3;                           // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36C[0x4];                                      // 0x036C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  K2Node_MakeStruct_ContainerPickupsInfo;            // 0x0370(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_GetCompiledContainerStructure) == 0x000008, "Wrong alignment on MPMainContainerBox_C_GetCompiledContainerStructure");
static_assert(sizeof(MPMainContainerBox_C_GetCompiledContainerStructure) == 0x0003D8, "Wrong size on MPMainContainerBox_C_GetCompiledContainerStructure");
static_assert(offsetof(MPMainContainerBox_C_GetCompiledContainerStructure, Item) == 0x000000, "Member 'MPMainContainerBox_C_GetCompiledContainerStructure::Item' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetCompiledContainerStructure, DefItem) == 0x000220, "Member 'MPMainContainerBox_C_GetCompiledContainerStructure::DefItem' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetCompiledContainerStructure, ContainerMotherID) == 0x000260, "Member 'MPMainContainerBox_C_GetCompiledContainerStructure::ContainerMotherID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetCompiledContainerStructure, SlotIndex) == 0x000264, "Member 'MPMainContainerBox_C_GetCompiledContainerStructure::SlotIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetCompiledContainerStructure, AutoUpdateChild) == 0x000268, "Member 'MPMainContainerBox_C_GetCompiledContainerStructure::AutoUpdateChild' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetCompiledContainerStructure, Result) == 0x000269, "Member 'MPMainContainerBox_C_GetCompiledContainerStructure::Result' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetCompiledContainerStructure, Container) == 0x000270, "Member 'MPMainContainerBox_C_GetCompiledContainerStructure::Container' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetCompiledContainerStructure, FunctionContainer) == 0x0002D8, "Member 'MPMainContainerBox_C_GetCompiledContainerStructure::FunctionContainer' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetCompiledContainerStructure, FunctionResult) == 0x000340, "Member 'MPMainContainerBox_C_GetCompiledContainerStructure::FunctionResult' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetCompiledContainerStructure, Temp_bool_Variable) == 0x000341, "Member 'MPMainContainerBox_C_GetCompiledContainerStructure::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetCompiledContainerStructure, Temp_bool_Variable_1) == 0x000342, "Member 'MPMainContainerBox_C_GetCompiledContainerStructure::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetCompiledContainerStructure, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000343, "Member 'MPMainContainerBox_C_GetCompiledContainerStructure::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetCompiledContainerStructure, Temp_bool_Variable_2) == 0x000344, "Member 'MPMainContainerBox_C_GetCompiledContainerStructure::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetCompiledContainerStructure, Temp_bool_Variable_3) == 0x000345, "Member 'MPMainContainerBox_C_GetCompiledContainerStructure::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetCompiledContainerStructure, K2Node_Select_Default) == 0x000348, "Member 'MPMainContainerBox_C_GetCompiledContainerStructure::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetCompiledContainerStructure, K2Node_Select_Default_1) == 0x000358, "Member 'MPMainContainerBox_C_GetCompiledContainerStructure::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetCompiledContainerStructure, K2Node_Select_Default_2) == 0x000360, "Member 'MPMainContainerBox_C_GetCompiledContainerStructure::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetCompiledContainerStructure, K2Node_Select_Default_3) == 0x000368, "Member 'MPMainContainerBox_C_GetCompiledContainerStructure::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetCompiledContainerStructure, K2Node_MakeStruct_ContainerPickupsInfo) == 0x000370, "Member 'MPMainContainerBox_C_GetCompiledContainerStructure::K2Node_MakeStruct_ContainerPickupsInfo' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.GetFreePickup
// 0x0001 (0x0001 - 0x0000)
struct MPMainContainerBox_C_GetFreePickup final
{
public:
	bool                                          Param_bFreePickup;                                 // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_GetFreePickup) == 0x000001, "Wrong alignment on MPMainContainerBox_C_GetFreePickup");
static_assert(sizeof(MPMainContainerBox_C_GetFreePickup) == 0x000001, "Wrong size on MPMainContainerBox_C_GetFreePickup");
static_assert(offsetof(MPMainContainerBox_C_GetFreePickup, Param_bFreePickup) == 0x000000, "Member 'MPMainContainerBox_C_GetFreePickup::Param_bFreePickup' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.GetHostingSlots
// 0x00B8 (0x00B8 - 0x0000)
struct MPMainContainerBox_C_GetHostingSlots final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NOfColumns;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NOfRows;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              ItemVector;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Indexes;                                           // 0x0020(0x0010)(Parm, OutParm)
	TArray<int32>                                 HostingSlots;                                      // 0x0030(0x0010)(Edit, BlueprintVisible)
	int32                                         Y;                                                 // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         X;                                                 // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StartingRow;                                       // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StartingCol;                                       // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetColumnRowBySlotIndex_Column;           // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetColumnRowBySlotIndex_Row;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotIndexByRowColumn_ReturnValue;      // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_GetHostingSlots) == 0x000008, "Wrong alignment on MPMainContainerBox_C_GetHostingSlots");
static_assert(sizeof(MPMainContainerBox_C_GetHostingSlots) == 0x0000B8, "Wrong size on MPMainContainerBox_C_GetHostingSlots");
static_assert(offsetof(MPMainContainerBox_C_GetHostingSlots, InIndex) == 0x000000, "Member 'MPMainContainerBox_C_GetHostingSlots::InIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetHostingSlots, NOfColumns) == 0x000004, "Member 'MPMainContainerBox_C_GetHostingSlots::NOfColumns' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetHostingSlots, NOfRows) == 0x000008, "Member 'MPMainContainerBox_C_GetHostingSlots::NOfRows' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetHostingSlots, ItemVector) == 0x000010, "Member 'MPMainContainerBox_C_GetHostingSlots::ItemVector' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetHostingSlots, Indexes) == 0x000020, "Member 'MPMainContainerBox_C_GetHostingSlots::Indexes' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetHostingSlots, HostingSlots) == 0x000030, "Member 'MPMainContainerBox_C_GetHostingSlots::HostingSlots' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetHostingSlots, Y) == 0x000040, "Member 'MPMainContainerBox_C_GetHostingSlots::Y' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetHostingSlots, X) == 0x000044, "Member 'MPMainContainerBox_C_GetHostingSlots::X' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetHostingSlots, StartingRow) == 0x000048, "Member 'MPMainContainerBox_C_GetHostingSlots::StartingRow' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetHostingSlots, StartingCol) == 0x00004C, "Member 'MPMainContainerBox_C_GetHostingSlots::StartingCol' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetHostingSlots, CallFunc_BreakVector2D_X) == 0x000050, "Member 'MPMainContainerBox_C_GetHostingSlots::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetHostingSlots, CallFunc_BreakVector2D_Y) == 0x000058, "Member 'MPMainContainerBox_C_GetHostingSlots::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetHostingSlots, CallFunc_GetColumnRowBySlotIndex_Column) == 0x000060, "Member 'MPMainContainerBox_C_GetHostingSlots::CallFunc_GetColumnRowBySlotIndex_Column' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetHostingSlots, CallFunc_GetColumnRowBySlotIndex_Row) == 0x000064, "Member 'MPMainContainerBox_C_GetHostingSlots::CallFunc_GetColumnRowBySlotIndex_Row' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetHostingSlots, CallFunc_FTrunc_ReturnValue) == 0x000068, "Member 'MPMainContainerBox_C_GetHostingSlots::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetHostingSlots, CallFunc_FTrunc_ReturnValue_1) == 0x00006C, "Member 'MPMainContainerBox_C_GetHostingSlots::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetHostingSlots, Temp_int_Variable) == 0x000070, "Member 'MPMainContainerBox_C_GetHostingSlots::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetHostingSlots, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'MPMainContainerBox_C_GetHostingSlots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetHostingSlots, CallFunc_Add_IntInt_ReturnValue_1) == 0x000078, "Member 'MPMainContainerBox_C_GetHostingSlots::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetHostingSlots, Temp_int_Variable_1) == 0x00007C, "Member 'MPMainContainerBox_C_GetHostingSlots::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetHostingSlots, CallFunc_Add_IntInt_ReturnValue_2) == 0x000080, "Member 'MPMainContainerBox_C_GetHostingSlots::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetHostingSlots, CallFunc_GetSlotIndexByRowColumn_ReturnValue) == 0x000084, "Member 'MPMainContainerBox_C_GetHostingSlots::CallFunc_GetSlotIndexByRowColumn_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetHostingSlots, CallFunc_Add_IntInt_ReturnValue_3) == 0x000088, "Member 'MPMainContainerBox_C_GetHostingSlots::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetHostingSlots, CallFunc_Array_Add_ReturnValue) == 0x00008C, "Member 'MPMainContainerBox_C_GetHostingSlots::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetHostingSlots, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000090, "Member 'MPMainContainerBox_C_GetHostingSlots::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetHostingSlots, CallFunc_Add_IntInt_ReturnValue_4) == 0x000094, "Member 'MPMainContainerBox_C_GetHostingSlots::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetHostingSlots, CallFunc_Subtract_IntInt_ReturnValue) == 0x000098, "Member 'MPMainContainerBox_C_GetHostingSlots::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetHostingSlots, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x00009C, "Member 'MPMainContainerBox_C_GetHostingSlots::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetHostingSlots, CallFunc_Add_IntInt_ReturnValue_5) == 0x0000A0, "Member 'MPMainContainerBox_C_GetHostingSlots::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetHostingSlots, CallFunc_Greater_IntInt_ReturnValue) == 0x0000A4, "Member 'MPMainContainerBox_C_GetHostingSlots::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetHostingSlots, CallFunc_Add_IntInt_ReturnValue_6) == 0x0000A8, "Member 'MPMainContainerBox_C_GetHostingSlots::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetHostingSlots, CallFunc_Add_IntInt_ReturnValue_7) == 0x0000AC, "Member 'MPMainContainerBox_C_GetHostingSlots::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetHostingSlots, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000B0, "Member 'MPMainContainerBox_C_GetHostingSlots::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetHostingSlots, CallFunc_BooleanOR_ReturnValue) == 0x0000B1, "Member 'MPMainContainerBox_C_GetHostingSlots::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetHostingSlots, CallFunc_Not_PreBool_ReturnValue) == 0x0000B2, "Member 'MPMainContainerBox_C_GetHostingSlots::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.GetMainContainer
// 0x0008 (0x0008 - 0x0000)
struct MPMainContainerBox_C_GetMainContainer final
{
public:
	class UMPContainerWidget_C*                   Param_ContainerWidget;                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_GetMainContainer) == 0x000008, "Wrong alignment on MPMainContainerBox_C_GetMainContainer");
static_assert(sizeof(MPMainContainerBox_C_GetMainContainer) == 0x000008, "Wrong size on MPMainContainerBox_C_GetMainContainer");
static_assert(offsetof(MPMainContainerBox_C_GetMainContainer, Param_ContainerWidget) == 0x000000, "Member 'MPMainContainerBox_C_GetMainContainer::Param_ContainerWidget' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.GetPointedItemSlot
// 0x0008 (0x0008 - 0x0000)
struct MPMainContainerBox_C_GetPointedItemSlot final
{
public:
	class UJSI_Slot_C*                            Param_PointedItemSlot;                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_GetPointedItemSlot) == 0x000008, "Wrong alignment on MPMainContainerBox_C_GetPointedItemSlot");
static_assert(sizeof(MPMainContainerBox_C_GetPointedItemSlot) == 0x000008, "Wrong size on MPMainContainerBox_C_GetPointedItemSlot");
static_assert(offsetof(MPMainContainerBox_C_GetPointedItemSlot, Param_PointedItemSlot) == 0x000000, "Member 'MPMainContainerBox_C_GetPointedItemSlot::Param_PointedItemSlot' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.GetRandCurrentQuestsData
// 0x0178 (0x0178 - 0x0000)
struct MPMainContainerBox_C_GetRandCurrentQuestsData final
{
public:
	class ASurvPC_C*                              Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UQuestData_C*                           AsQuest_Data;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Chance;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSet<class UQuest*>                           Quests;                                            // 0x0018(0x0050)(Edit, BlueprintVisible)
	TArray<class UQuest*>                         ValidQuests;                                       // 0x0068(0x0010)(Edit, BlueprintVisible)
	TArray<class UQuest*>                         RandomQuests;                                      // 0x0078(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<class UQuest*>                           CallFunc_Set_Intersection_Result;                  // 0x0098(0x0050)()
	TArray<class UQuest*>                         CallFunc_Map_Keys_Keys;                            // 0x00E8(0x0010)(ReferenceParm)
	TArray<class UQuest*>                         CallFunc_Set_ToArray_Result;                       // 0x00F8(0x0010)(ReferenceParm)
	class UQuest*                                 CallFunc_Array_Get_Item;                           // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UQuestCustomData*                 CallFunc_GetCustomData_ReturnValue;                // 0x0118(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UQuestData_C*                     K2Node_DynamicCast_AsQuest_Data;                   // 0x0128(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_132[0x2];                                      // 0x0132(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13A[0x6];                                      // 0x013A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuest*                                 CallFunc_Array_Random_OutItem;                     // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value;                           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UQuestCustomData*                 CallFunc_GetCustomData_ReturnValue_1;              // 0x0160(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UQuestData_C*                     K2Node_DynamicCast_AsQuest_Data_1;                 // 0x0168(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_GetRandCurrentQuestsData) == 0x000008, "Wrong alignment on MPMainContainerBox_C_GetRandCurrentQuestsData");
static_assert(sizeof(MPMainContainerBox_C_GetRandCurrentQuestsData) == 0x000178, "Wrong size on MPMainContainerBox_C_GetRandCurrentQuestsData");
static_assert(offsetof(MPMainContainerBox_C_GetRandCurrentQuestsData, Controller) == 0x000000, "Member 'MPMainContainerBox_C_GetRandCurrentQuestsData::Controller' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetRandCurrentQuestsData, AsQuest_Data) == 0x000008, "Member 'MPMainContainerBox_C_GetRandCurrentQuestsData::AsQuest_Data' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetRandCurrentQuestsData, Chance) == 0x000010, "Member 'MPMainContainerBox_C_GetRandCurrentQuestsData::Chance' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetRandCurrentQuestsData, Quests) == 0x000018, "Member 'MPMainContainerBox_C_GetRandCurrentQuestsData::Quests' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetRandCurrentQuestsData, ValidQuests) == 0x000068, "Member 'MPMainContainerBox_C_GetRandCurrentQuestsData::ValidQuests' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetRandCurrentQuestsData, RandomQuests) == 0x000078, "Member 'MPMainContainerBox_C_GetRandCurrentQuestsData::RandomQuests' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetRandCurrentQuestsData, Temp_int_Array_Index_Variable) == 0x000088, "Member 'MPMainContainerBox_C_GetRandCurrentQuestsData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetRandCurrentQuestsData, Temp_int_Loop_Counter_Variable) == 0x00008C, "Member 'MPMainContainerBox_C_GetRandCurrentQuestsData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetRandCurrentQuestsData, CallFunc_Add_IntInt_ReturnValue) == 0x000090, "Member 'MPMainContainerBox_C_GetRandCurrentQuestsData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetRandCurrentQuestsData, CallFunc_Set_Intersection_Result) == 0x000098, "Member 'MPMainContainerBox_C_GetRandCurrentQuestsData::CallFunc_Set_Intersection_Result' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetRandCurrentQuestsData, CallFunc_Map_Keys_Keys) == 0x0000E8, "Member 'MPMainContainerBox_C_GetRandCurrentQuestsData::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetRandCurrentQuestsData, CallFunc_Set_ToArray_Result) == 0x0000F8, "Member 'MPMainContainerBox_C_GetRandCurrentQuestsData::CallFunc_Set_ToArray_Result' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetRandCurrentQuestsData, CallFunc_Array_Get_Item) == 0x000108, "Member 'MPMainContainerBox_C_GetRandCurrentQuestsData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetRandCurrentQuestsData, CallFunc_Array_Length_ReturnValue) == 0x000110, "Member 'MPMainContainerBox_C_GetRandCurrentQuestsData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetRandCurrentQuestsData, CallFunc_GetCustomData_ReturnValue) == 0x000118, "Member 'MPMainContainerBox_C_GetRandCurrentQuestsData::CallFunc_GetCustomData_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetRandCurrentQuestsData, CallFunc_Less_IntInt_ReturnValue) == 0x000120, "Member 'MPMainContainerBox_C_GetRandCurrentQuestsData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetRandCurrentQuestsData, K2Node_DynamicCast_AsQuest_Data) == 0x000128, "Member 'MPMainContainerBox_C_GetRandCurrentQuestsData::K2Node_DynamicCast_AsQuest_Data' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetRandCurrentQuestsData, K2Node_DynamicCast_bSuccess) == 0x000130, "Member 'MPMainContainerBox_C_GetRandCurrentQuestsData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetRandCurrentQuestsData, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000131, "Member 'MPMainContainerBox_C_GetRandCurrentQuestsData::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetRandCurrentQuestsData, CallFunc_Array_Add_ReturnValue) == 0x000134, "Member 'MPMainContainerBox_C_GetRandCurrentQuestsData::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetRandCurrentQuestsData, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000138, "Member 'MPMainContainerBox_C_GetRandCurrentQuestsData::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetRandCurrentQuestsData, CallFunc_BooleanOR_ReturnValue) == 0x000139, "Member 'MPMainContainerBox_C_GetRandCurrentQuestsData::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetRandCurrentQuestsData, CallFunc_Array_Random_OutItem) == 0x000140, "Member 'MPMainContainerBox_C_GetRandCurrentQuestsData::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetRandCurrentQuestsData, CallFunc_Array_Random_OutIndex) == 0x000148, "Member 'MPMainContainerBox_C_GetRandCurrentQuestsData::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetRandCurrentQuestsData, CallFunc_Map_Find_Value) == 0x000150, "Member 'MPMainContainerBox_C_GetRandCurrentQuestsData::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetRandCurrentQuestsData, CallFunc_Map_Find_ReturnValue) == 0x000158, "Member 'MPMainContainerBox_C_GetRandCurrentQuestsData::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetRandCurrentQuestsData, CallFunc_GetCustomData_ReturnValue_1) == 0x000160, "Member 'MPMainContainerBox_C_GetRandCurrentQuestsData::CallFunc_GetCustomData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetRandCurrentQuestsData, K2Node_DynamicCast_AsQuest_Data_1) == 0x000168, "Member 'MPMainContainerBox_C_GetRandCurrentQuestsData::K2Node_DynamicCast_AsQuest_Data_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetRandCurrentQuestsData, K2Node_DynamicCast_bSuccess_1) == 0x000170, "Member 'MPMainContainerBox_C_GetRandCurrentQuestsData::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.GetReplicatedData (OnlyServer)
// 0x0060 (0x0060 - 0x0000)
struct MPMainContainerBox_C_GetReplicatedData__OnlyServer_ final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_LootChanceModifier                  LootChanceMod;                                     // 0x0008(0x0009)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMpContentRep                          Data;                                              // 0x0018(0x0020)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMpContentRep                          K2Node_MakeStruct_MpContentRep;                    // 0x0040(0x0020)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_GetReplicatedData__OnlyServer_) == 0x000008, "Wrong alignment on MPMainContainerBox_C_GetReplicatedData__OnlyServer_");
static_assert(sizeof(MPMainContainerBox_C_GetReplicatedData__OnlyServer_) == 0x000060, "Wrong size on MPMainContainerBox_C_GetReplicatedData__OnlyServer_");
static_assert(offsetof(MPMainContainerBox_C_GetReplicatedData__OnlyServer_, Player) == 0x000000, "Member 'MPMainContainerBox_C_GetReplicatedData__OnlyServer_::Player' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetReplicatedData__OnlyServer_, LootChanceMod) == 0x000008, "Member 'MPMainContainerBox_C_GetReplicatedData__OnlyServer_::LootChanceMod' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetReplicatedData__OnlyServer_, Data) == 0x000018, "Member 'MPMainContainerBox_C_GetReplicatedData__OnlyServer_::Data' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetReplicatedData__OnlyServer_, CallFunc_HasAuthority_ReturnValue) == 0x000038, "Member 'MPMainContainerBox_C_GetReplicatedData__OnlyServer_::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetReplicatedData__OnlyServer_, K2Node_MakeStruct_MpContentRep) == 0x000040, "Member 'MPMainContainerBox_C_GetReplicatedData__OnlyServer_::K2Node_MakeStruct_MpContentRep' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.getRotation
// 0x0007 (0x0007 - 0x0000)
struct MPMainContainerBox_C_GetRotation final
{
public:
	bool                                          ItemRotated_;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DroppedRotation;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rotated;                                           // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_GetRotation) == 0x000001, "Wrong alignment on MPMainContainerBox_C_GetRotation");
static_assert(sizeof(MPMainContainerBox_C_GetRotation) == 0x000007, "Wrong size on MPMainContainerBox_C_GetRotation");
static_assert(offsetof(MPMainContainerBox_C_GetRotation, ItemRotated_) == 0x000000, "Member 'MPMainContainerBox_C_GetRotation::ItemRotated_' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetRotation, DroppedRotation) == 0x000001, "Member 'MPMainContainerBox_C_GetRotation::DroppedRotation' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetRotation, Rotated) == 0x000002, "Member 'MPMainContainerBox_C_GetRotation::Rotated' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetRotation, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'MPMainContainerBox_C_GetRotation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetRotation, CallFunc_Not_PreBool_ReturnValue_1) == 0x000004, "Member 'MPMainContainerBox_C_GetRotation::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetRotation, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'MPMainContainerBox_C_GetRotation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetRotation, CallFunc_BooleanAND_ReturnValue_1) == 0x000006, "Member 'MPMainContainerBox_C_GetRotation::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.GetSlotDataArrIndexByUID
// 0x0048 (0x0048 - 0x0000)
struct MPMainContainerBox_C_GetSlotDataArrIndexByUID final
{
public:
	int32                                         Uid;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Shop;                                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param_Index;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FServerSlotInfoArray                   CallFunc_Array_Get_Item;                           // 0x0020(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_GetSlotDataArrIndexByUID) == 0x000008, "Wrong alignment on MPMainContainerBox_C_GetSlotDataArrIndexByUID");
static_assert(sizeof(MPMainContainerBox_C_GetSlotDataArrIndexByUID) == 0x000048, "Wrong size on MPMainContainerBox_C_GetSlotDataArrIndexByUID");
static_assert(offsetof(MPMainContainerBox_C_GetSlotDataArrIndexByUID, Uid) == 0x000000, "Member 'MPMainContainerBox_C_GetSlotDataArrIndexByUID::Uid' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetSlotDataArrIndexByUID, Shop) == 0x000004, "Member 'MPMainContainerBox_C_GetSlotDataArrIndexByUID::Shop' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetSlotDataArrIndexByUID, Param_Index) == 0x000008, "Member 'MPMainContainerBox_C_GetSlotDataArrIndexByUID::Param_Index' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetSlotDataArrIndexByUID, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'MPMainContainerBox_C_GetSlotDataArrIndexByUID::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetSlotDataArrIndexByUID, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'MPMainContainerBox_C_GetSlotDataArrIndexByUID::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetSlotDataArrIndexByUID, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'MPMainContainerBox_C_GetSlotDataArrIndexByUID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetSlotDataArrIndexByUID, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'MPMainContainerBox_C_GetSlotDataArrIndexByUID::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetSlotDataArrIndexByUID, CallFunc_Array_Get_Item) == 0x000020, "Member 'MPMainContainerBox_C_GetSlotDataArrIndexByUID::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetSlotDataArrIndexByUID, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'MPMainContainerBox_C_GetSlotDataArrIndexByUID::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetSlotDataArrIndexByUID, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000041, "Member 'MPMainContainerBox_C_GetSlotDataArrIndexByUID::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.GetSlotIndexByRowColumn
// 0x0020 (0x0020 - 0x0000)
struct MPMainContainerBox_C_GetSlotIndexByRowColumn final
{
public:
	int32                                         Column;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Row;                                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumOfColumns;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_GetSlotIndexByRowColumn) == 0x000004, "Wrong alignment on MPMainContainerBox_C_GetSlotIndexByRowColumn");
static_assert(sizeof(MPMainContainerBox_C_GetSlotIndexByRowColumn) == 0x000020, "Wrong size on MPMainContainerBox_C_GetSlotIndexByRowColumn");
static_assert(offsetof(MPMainContainerBox_C_GetSlotIndexByRowColumn, Column) == 0x000000, "Member 'MPMainContainerBox_C_GetSlotIndexByRowColumn::Column' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetSlotIndexByRowColumn, Row) == 0x000004, "Member 'MPMainContainerBox_C_GetSlotIndexByRowColumn::Row' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetSlotIndexByRowColumn, NumOfColumns) == 0x000008, "Member 'MPMainContainerBox_C_GetSlotIndexByRowColumn::NumOfColumns' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetSlotIndexByRowColumn, ReturnValue) == 0x00000C, "Member 'MPMainContainerBox_C_GetSlotIndexByRowColumn::ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetSlotIndexByRowColumn, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'MPMainContainerBox_C_GetSlotIndexByRowColumn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetSlotIndexByRowColumn, CallFunc_Subtract_IntInt_ReturnValue) == 0x000014, "Member 'MPMainContainerBox_C_GetSlotIndexByRowColumn::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetSlotIndexByRowColumn, CallFunc_Multiply_IntInt_ReturnValue) == 0x000018, "Member 'MPMainContainerBox_C_GetSlotIndexByRowColumn::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetSlotIndexByRowColumn, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00001C, "Member 'MPMainContainerBox_C_GetSlotIndexByRowColumn::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.GetUniqueServerID
// 0x0028 (0x0028 - 0x0000)
struct MPMainContainerBox_C_GetUniqueServerID final
{
public:
	int32                                         NewUID;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ATDB_GameMode_C*                        K2Node_DynamicCast_AsTDB_Game_Mode;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SurvGetUID_ID;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_GetUniqueServerID) == 0x000008, "Wrong alignment on MPMainContainerBox_C_GetUniqueServerID");
static_assert(sizeof(MPMainContainerBox_C_GetUniqueServerID) == 0x000028, "Wrong size on MPMainContainerBox_C_GetUniqueServerID");
static_assert(offsetof(MPMainContainerBox_C_GetUniqueServerID, NewUID) == 0x000000, "Member 'MPMainContainerBox_C_GetUniqueServerID::NewUID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetUniqueServerID, CallFunc_GetGameMode_ReturnValue) == 0x000008, "Member 'MPMainContainerBox_C_GetUniqueServerID::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetUniqueServerID, K2Node_DynamicCast_AsTDB_Game_Mode) == 0x000010, "Member 'MPMainContainerBox_C_GetUniqueServerID::K2Node_DynamicCast_AsTDB_Game_Mode' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetUniqueServerID, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'MPMainContainerBox_C_GetUniqueServerID::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetUniqueServerID, CallFunc_SurvGetUID_ID) == 0x00001C, "Member 'MPMainContainerBox_C_GetUniqueServerID::CallFunc_SurvGetUID_ID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetUniqueServerID, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'MPMainContainerBox_C_GetUniqueServerID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.GetVector
// 0x0058 (0x0058 - 0x0000)
struct MPMainContainerBox_C_GetVector final
{
public:
	bool                                          Rotated;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Vector;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              NewVector;                                         // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_GetVector) == 0x000008, "Wrong alignment on MPMainContainerBox_C_GetVector");
static_assert(sizeof(MPMainContainerBox_C_GetVector) == 0x000058, "Wrong size on MPMainContainerBox_C_GetVector");
static_assert(offsetof(MPMainContainerBox_C_GetVector, Rotated) == 0x000000, "Member 'MPMainContainerBox_C_GetVector::Rotated' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetVector, Vector) == 0x000008, "Member 'MPMainContainerBox_C_GetVector::Vector' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetVector, NewVector) == 0x000018, "Member 'MPMainContainerBox_C_GetVector::NewVector' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetVector, CallFunc_BreakVector2D_X) == 0x000028, "Member 'MPMainContainerBox_C_GetVector::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetVector, CallFunc_BreakVector2D_Y) == 0x000030, "Member 'MPMainContainerBox_C_GetVector::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetVector, CallFunc_MakeVector2D_ReturnValue) == 0x000038, "Member 'MPMainContainerBox_C_GetVector::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_GetVector, CallFunc_MakeVector2D_ReturnValue_1) == 0x000048, "Member 'MPMainContainerBox_C_GetVector::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.GI_TileLoaded
// 0x0008 (0x0008 - 0x0000)
struct MPMainContainerBox_C_GI_TileLoaded final
{
public:
	class FName                                   TileName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_GI_TileLoaded) == 0x000004, "Wrong alignment on MPMainContainerBox_C_GI_TileLoaded");
static_assert(sizeof(MPMainContainerBox_C_GI_TileLoaded) == 0x000008, "Wrong size on MPMainContainerBox_C_GI_TileLoaded");
static_assert(offsetof(MPMainContainerBox_C_GI_TileLoaded, TileName) == 0x000000, "Member 'MPMainContainerBox_C_GI_TileLoaded::TileName' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.GI_TileUnloaded
// 0x0008 (0x0008 - 0x0000)
struct MPMainContainerBox_C_GI_TileUnloaded final
{
public:
	class FName                                   TileName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_GI_TileUnloaded) == 0x000004, "Wrong alignment on MPMainContainerBox_C_GI_TileUnloaded");
static_assert(sizeof(MPMainContainerBox_C_GI_TileUnloaded) == 0x000008, "Wrong size on MPMainContainerBox_C_GI_TileUnloaded");
static_assert(offsetof(MPMainContainerBox_C_GI_TileUnloaded, TileName) == 0x000000, "Member 'MPMainContainerBox_C_GI_TileUnloaded::TileName' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.HandleContainersEvents
// 0x0010 (0x0010 - 0x0000)
struct MPMainContainerBox_C_HandleContainersEvents final
{
public:
	class UJSIContainer_C*                        Container;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          SetID_;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_HandleContainersEvents) == 0x000008, "Wrong alignment on MPMainContainerBox_C_HandleContainersEvents");
static_assert(sizeof(MPMainContainerBox_C_HandleContainersEvents) == 0x000010, "Wrong size on MPMainContainerBox_C_HandleContainersEvents");
static_assert(offsetof(MPMainContainerBox_C_HandleContainersEvents, Container) == 0x000000, "Member 'MPMainContainerBox_C_HandleContainersEvents::Container' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_HandleContainersEvents, SetID_) == 0x000008, "Member 'MPMainContainerBox_C_HandleContainersEvents::SetID_' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.HeatUpBonfire
// 0x0008 (0x0008 - 0x0000)
struct MPMainContainerBox_C_HeatUpBonfire final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_HeatUpBonfire) == 0x000008, "Wrong alignment on MPMainContainerBox_C_HeatUpBonfire");
static_assert(sizeof(MPMainContainerBox_C_HeatUpBonfire) == 0x000008, "Wrong size on MPMainContainerBox_C_HeatUpBonfire");
static_assert(offsetof(MPMainContainerBox_C_HeatUpBonfire, Player) == 0x000000, "Member 'MPMainContainerBox_C_HeatUpBonfire::Player' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.InMPCMoveItem
// 0x0578 (0x0578 - 0x0000)
struct MPMainContainerBox_C_InMPCMoveItem final
{
public:
	int32                                         ItemUID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToContainerUID;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToIndex;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rotated_;                                          // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsContainer;                                       // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              SlotDimension;                                     // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewIndex;                                          // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FinalRotation;                                     // 0x0024(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ItemIndex;                                         // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FromCIndex;                                        // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToCIndex;                                          // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  ItemFound;                                         // 0x0038(0x0068)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_DoesItemExist_Exists;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_DoesItemExist_PickupItem;                 // 0x00A8(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_DoesItemExist_ArrayIndex;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotDataArrIndexByUID_Index;           // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow;           // 0x0130(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0358(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0368(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0378(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x03AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x03AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x03AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AF[0x1];                                      // 0x03AF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  K2Node_Select_Default;                             // 0x03B0(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetVector_NewVector;                      // 0x0418(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetHostingSlots_Indexes;                  // 0x0428(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43C[0x4];                                      // 0x043C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetVector_NewVector_1;                    // 0x0440(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BlindAddNewItemToContainer_Added;         // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_451[0x3];                                      // 0x0451(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BlindAddNewItemToContainer_ToSlotIndex;   // 0x0454(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BlindAddNewItemToContainer_UniqueId;      // 0x0458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x045C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0461(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_462[0x6];                                      // 0x0462(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetVector_NewVector_2;                    // 0x0468(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0479(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x047A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x047B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x047C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x047D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47E[0x2];                                      // 0x047E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  K2Node_Select_Default_1;                           // 0x0480(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetVector_NewVector_3;                    // 0x04E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x04F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F9[0x7];                                      // 0x04F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetHostingSlots_Indexes_1;                // 0x0500(0x0010)(ReferenceParm)
	bool                                          K2Node_Select_Default_2;                           // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_511[0x3];                                      // 0x0511(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0514(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_3;                           // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_519[0x3];                                      // 0x0519(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x051C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_521[0x3];                                      // 0x0521(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotDataArrIndexByUID_Index_1;         // 0x0524(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetHostingSlots_Indexes_2;                // 0x0528(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x0538(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_3;                         // 0x053C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FServerSlotInfo                        CallFunc_Array_Get_Item_4;                         // 0x0540(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FServerSlotInfo                        CallFunc_Array_Get_Item_5;                         // 0x054C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FServerSlotInfo                        K2Node_SetFieldsInStruct_StructOut;                // 0x0558(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0564(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0568(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_569[0x3];                                      // 0x0569(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x056C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_InMPCMoveItem) == 0x000008, "Wrong alignment on MPMainContainerBox_C_InMPCMoveItem");
static_assert(sizeof(MPMainContainerBox_C_InMPCMoveItem) == 0x000578, "Wrong size on MPMainContainerBox_C_InMPCMoveItem");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, ItemUID) == 0x000000, "Member 'MPMainContainerBox_C_InMPCMoveItem::ItemUID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, ToContainerUID) == 0x000004, "Member 'MPMainContainerBox_C_InMPCMoveItem::ToContainerUID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, ToIndex) == 0x000008, "Member 'MPMainContainerBox_C_InMPCMoveItem::ToIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, Rotated_) == 0x00000C, "Member 'MPMainContainerBox_C_InMPCMoveItem::Rotated_' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, IsContainer) == 0x00000D, "Member 'MPMainContainerBox_C_InMPCMoveItem::IsContainer' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, SlotDimension) == 0x000010, "Member 'MPMainContainerBox_C_InMPCMoveItem::SlotDimension' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, NewIndex) == 0x000020, "Member 'MPMainContainerBox_C_InMPCMoveItem::NewIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, FinalRotation) == 0x000024, "Member 'MPMainContainerBox_C_InMPCMoveItem::FinalRotation' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, ItemIndex) == 0x000028, "Member 'MPMainContainerBox_C_InMPCMoveItem::ItemIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, FromCIndex) == 0x00002C, "Member 'MPMainContainerBox_C_InMPCMoveItem::FromCIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, ToCIndex) == 0x000030, "Member 'MPMainContainerBox_C_InMPCMoveItem::ToCIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, ItemFound) == 0x000038, "Member 'MPMainContainerBox_C_InMPCMoveItem::ItemFound' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, CallFunc_DoesItemExist_Exists) == 0x0000A0, "Member 'MPMainContainerBox_C_InMPCMoveItem::CallFunc_DoesItemExist_Exists' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, CallFunc_DoesItemExist_PickupItem) == 0x0000A8, "Member 'MPMainContainerBox_C_InMPCMoveItem::CallFunc_DoesItemExist_PickupItem' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, CallFunc_DoesItemExist_ArrayIndex) == 0x000110, "Member 'MPMainContainerBox_C_InMPCMoveItem::CallFunc_DoesItemExist_ArrayIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, Temp_int_Array_Index_Variable) == 0x000114, "Member 'MPMainContainerBox_C_InMPCMoveItem::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, Temp_int_Loop_Counter_Variable) == 0x000118, "Member 'MPMainContainerBox_C_InMPCMoveItem::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, CallFunc_Add_IntInt_ReturnValue) == 0x00011C, "Member 'MPMainContainerBox_C_InMPCMoveItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, Temp_bool_Variable) == 0x000120, "Member 'MPMainContainerBox_C_InMPCMoveItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, CallFunc_GetSlotDataArrIndexByUID_Index) == 0x000124, "Member 'MPMainContainerBox_C_InMPCMoveItem::CallFunc_GetSlotDataArrIndexByUID_Index' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000128, "Member 'MPMainContainerBox_C_InMPCMoveItem::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, CallFunc_GetDataTableRowFromName_OutRow) == 0x000130, "Member 'MPMainContainerBox_C_InMPCMoveItem::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000350, "Member 'MPMainContainerBox_C_InMPCMoveItem::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, CallFunc_Conv_NameToString_ReturnValue) == 0x000358, "Member 'MPMainContainerBox_C_InMPCMoveItem::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, CallFunc_Concat_StrStr_ReturnValue) == 0x000368, "Member 'MPMainContainerBox_C_InMPCMoveItem::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000378, "Member 'MPMainContainerBox_C_InMPCMoveItem::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, Temp_int_Array_Index_Variable_1) == 0x000388, "Member 'MPMainContainerBox_C_InMPCMoveItem::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, Temp_int_Loop_Counter_Variable_1) == 0x00038C, "Member 'MPMainContainerBox_C_InMPCMoveItem::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, CallFunc_Add_IntInt_ReturnValue_1) == 0x000390, "Member 'MPMainContainerBox_C_InMPCMoveItem::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, Temp_int_Array_Index_Variable_2) == 0x000394, "Member 'MPMainContainerBox_C_InMPCMoveItem::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, Temp_int_Loop_Counter_Variable_2) == 0x000398, "Member 'MPMainContainerBox_C_InMPCMoveItem::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, CallFunc_Add_IntInt_ReturnValue_2) == 0x00039C, "Member 'MPMainContainerBox_C_InMPCMoveItem::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, Temp_int_Array_Index_Variable_3) == 0x0003A0, "Member 'MPMainContainerBox_C_InMPCMoveItem::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, Temp_int_Loop_Counter_Variable_3) == 0x0003A4, "Member 'MPMainContainerBox_C_InMPCMoveItem::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, CallFunc_Add_IntInt_ReturnValue_3) == 0x0003A8, "Member 'MPMainContainerBox_C_InMPCMoveItem::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x0003AC, "Member 'MPMainContainerBox_C_InMPCMoveItem::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, CallFunc_BooleanAND_ReturnValue) == 0x0003AD, "Member 'MPMainContainerBox_C_InMPCMoveItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, Temp_bool_Variable_1) == 0x0003AE, "Member 'MPMainContainerBox_C_InMPCMoveItem::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, K2Node_Select_Default) == 0x0003B0, "Member 'MPMainContainerBox_C_InMPCMoveItem::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, CallFunc_GetVector_NewVector) == 0x000418, "Member 'MPMainContainerBox_C_InMPCMoveItem::CallFunc_GetVector_NewVector' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, CallFunc_GetHostingSlots_Indexes) == 0x000428, "Member 'MPMainContainerBox_C_InMPCMoveItem::CallFunc_GetHostingSlots_Indexes' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, CallFunc_Array_Get_Item) == 0x000438, "Member 'MPMainContainerBox_C_InMPCMoveItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, CallFunc_GetVector_NewVector_1) == 0x000440, "Member 'MPMainContainerBox_C_InMPCMoveItem::CallFunc_GetVector_NewVector_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, CallFunc_BlindAddNewItemToContainer_Added) == 0x000450, "Member 'MPMainContainerBox_C_InMPCMoveItem::CallFunc_BlindAddNewItemToContainer_Added' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, CallFunc_BlindAddNewItemToContainer_ToSlotIndex) == 0x000454, "Member 'MPMainContainerBox_C_InMPCMoveItem::CallFunc_BlindAddNewItemToContainer_ToSlotIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, CallFunc_BlindAddNewItemToContainer_UniqueId) == 0x000458, "Member 'MPMainContainerBox_C_InMPCMoveItem::CallFunc_BlindAddNewItemToContainer_UniqueId' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, CallFunc_Array_Length_ReturnValue) == 0x00045C, "Member 'MPMainContainerBox_C_InMPCMoveItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, CallFunc_Less_IntInt_ReturnValue) == 0x000460, "Member 'MPMainContainerBox_C_InMPCMoveItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000461, "Member 'MPMainContainerBox_C_InMPCMoveItem::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, CallFunc_GetVector_NewVector_2) == 0x000468, "Member 'MPMainContainerBox_C_InMPCMoveItem::CallFunc_GetVector_NewVector_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, CallFunc_Not_PreBool_ReturnValue) == 0x000478, "Member 'MPMainContainerBox_C_InMPCMoveItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, Temp_bool_Variable_2) == 0x000479, "Member 'MPMainContainerBox_C_InMPCMoveItem::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, CallFunc_BooleanAND_ReturnValue_1) == 0x00047A, "Member 'MPMainContainerBox_C_InMPCMoveItem::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, CallFunc_BooleanAND_ReturnValue_2) == 0x00047B, "Member 'MPMainContainerBox_C_InMPCMoveItem::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, Temp_bool_Variable_3) == 0x00047C, "Member 'MPMainContainerBox_C_InMPCMoveItem::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, Temp_bool_Variable_4) == 0x00047D, "Member 'MPMainContainerBox_C_InMPCMoveItem::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, K2Node_Select_Default_1) == 0x000480, "Member 'MPMainContainerBox_C_InMPCMoveItem::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, CallFunc_GetVector_NewVector_3) == 0x0004E8, "Member 'MPMainContainerBox_C_InMPCMoveItem::CallFunc_GetVector_NewVector_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, Temp_bool_Variable_5) == 0x0004F8, "Member 'MPMainContainerBox_C_InMPCMoveItem::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, CallFunc_GetHostingSlots_Indexes_1) == 0x000500, "Member 'MPMainContainerBox_C_InMPCMoveItem::CallFunc_GetHostingSlots_Indexes_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, K2Node_Select_Default_2) == 0x000510, "Member 'MPMainContainerBox_C_InMPCMoveItem::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, CallFunc_Array_Get_Item_1) == 0x000514, "Member 'MPMainContainerBox_C_InMPCMoveItem::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, K2Node_Select_Default_3) == 0x000518, "Member 'MPMainContainerBox_C_InMPCMoveItem::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, CallFunc_Array_Length_ReturnValue_1) == 0x00051C, "Member 'MPMainContainerBox_C_InMPCMoveItem::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, CallFunc_Less_IntInt_ReturnValue_1) == 0x000520, "Member 'MPMainContainerBox_C_InMPCMoveItem::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, CallFunc_GetSlotDataArrIndexByUID_Index_1) == 0x000524, "Member 'MPMainContainerBox_C_InMPCMoveItem::CallFunc_GetSlotDataArrIndexByUID_Index_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, CallFunc_GetHostingSlots_Indexes_2) == 0x000528, "Member 'MPMainContainerBox_C_InMPCMoveItem::CallFunc_GetHostingSlots_Indexes_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, CallFunc_Array_Get_Item_2) == 0x000538, "Member 'MPMainContainerBox_C_InMPCMoveItem::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, CallFunc_Array_Get_Item_3) == 0x00053C, "Member 'MPMainContainerBox_C_InMPCMoveItem::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, CallFunc_Array_Get_Item_4) == 0x000540, "Member 'MPMainContainerBox_C_InMPCMoveItem::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, CallFunc_Array_Get_Item_5) == 0x00054C, "Member 'MPMainContainerBox_C_InMPCMoveItem::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, K2Node_SetFieldsInStruct_StructOut) == 0x000558, "Member 'MPMainContainerBox_C_InMPCMoveItem::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, CallFunc_Array_Length_ReturnValue_2) == 0x000564, "Member 'MPMainContainerBox_C_InMPCMoveItem::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, CallFunc_Less_IntInt_ReturnValue_2) == 0x000568, "Member 'MPMainContainerBox_C_InMPCMoveItem::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, CallFunc_Array_Length_ReturnValue_3) == 0x00056C, "Member 'MPMainContainerBox_C_InMPCMoveItem::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InMPCMoveItem, CallFunc_Less_IntInt_ReturnValue_3) == 0x000570, "Member 'MPMainContainerBox_C_InMPCMoveItem::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.Interact
// 0x0001 (0x0001 - 0x0000)
struct MPMainContainerBox_C_Interact final
{
public:
	bool                                          NewParam;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_Interact) == 0x000001, "Wrong alignment on MPMainContainerBox_C_Interact");
static_assert(sizeof(MPMainContainerBox_C_Interact) == 0x000001, "Wrong size on MPMainContainerBox_C_Interact");
static_assert(offsetof(MPMainContainerBox_C_Interact, NewParam) == 0x000000, "Member 'MPMainContainerBox_C_Interact::NewParam' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.InteractController
// 0x0078 (0x0078 - 0x0000)
struct MPMainContainerBox_C_InteractController final
{
public:
	ECollisionChannel                             CollisionChanel;                                   // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionResponse                            CollisonResponse;                                  // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionResponse                            Temp_byte_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionResponse                            Temp_byte_Variable_1;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBoxComponent*>                  CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UBoxComponent*                          CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionResponse                            CallFunc_GetCollisionResponseToChannel_ReturnValue; // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           CallFunc_K2_GetComponentsByClass_ReturnValue_1;    // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ECollisionResponse                            K2Node_Select_Default;                             // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionResponse                            CallFunc_GetCollisionResponseToChannel_ReturnValue_1; // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B[0x1];                                       // 0x006B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_InteractController) == 0x000008, "Wrong alignment on MPMainContainerBox_C_InteractController");
static_assert(sizeof(MPMainContainerBox_C_InteractController) == 0x000078, "Wrong size on MPMainContainerBox_C_InteractController");
static_assert(offsetof(MPMainContainerBox_C_InteractController, CollisionChanel) == 0x000000, "Member 'MPMainContainerBox_C_InteractController::CollisionChanel' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InteractController, CollisonResponse) == 0x000001, "Member 'MPMainContainerBox_C_InteractController::CollisonResponse' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InteractController, Temp_int_Array_Index_Variable) == 0x000004, "Member 'MPMainContainerBox_C_InteractController::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InteractController, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'MPMainContainerBox_C_InteractController::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InteractController, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'MPMainContainerBox_C_InteractController::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InteractController, Temp_int_Array_Index_Variable_1) == 0x000010, "Member 'MPMainContainerBox_C_InteractController::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InteractController, Temp_byte_Variable) == 0x000014, "Member 'MPMainContainerBox_C_InteractController::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InteractController, Temp_byte_Variable_1) == 0x000015, "Member 'MPMainContainerBox_C_InteractController::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InteractController, Temp_bool_Variable) == 0x000016, "Member 'MPMainContainerBox_C_InteractController::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InteractController, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000018, "Member 'MPMainContainerBox_C_InteractController::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InteractController, CallFunc_Array_Get_Item) == 0x000028, "Member 'MPMainContainerBox_C_InteractController::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InteractController, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'MPMainContainerBox_C_InteractController::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InteractController, CallFunc_GetCollisionResponseToChannel_ReturnValue) == 0x000034, "Member 'MPMainContainerBox_C_InteractController::CallFunc_GetCollisionResponseToChannel_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InteractController, Temp_int_Loop_Counter_Variable_1) == 0x000038, "Member 'MPMainContainerBox_C_InteractController::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InteractController, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00003C, "Member 'MPMainContainerBox_C_InteractController::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InteractController, CallFunc_Less_IntInt_ReturnValue) == 0x00003D, "Member 'MPMainContainerBox_C_InteractController::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InteractController, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'MPMainContainerBox_C_InteractController::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InteractController, CallFunc_K2_GetComponentsByClass_ReturnValue_1) == 0x000048, "Member 'MPMainContainerBox_C_InteractController::CallFunc_K2_GetComponentsByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InteractController, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000058, "Member 'MPMainContainerBox_C_InteractController::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InteractController, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'MPMainContainerBox_C_InteractController::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InteractController, K2Node_Select_Default) == 0x000068, "Member 'MPMainContainerBox_C_InteractController::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InteractController, CallFunc_GetCollisionResponseToChannel_ReturnValue_1) == 0x000069, "Member 'MPMainContainerBox_C_InteractController::CallFunc_GetCollisionResponseToChannel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InteractController, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x00006A, "Member 'MPMainContainerBox_C_InteractController::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InteractController, CallFunc_Array_Length_ReturnValue_1) == 0x00006C, "Member 'MPMainContainerBox_C_InteractController::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_InteractController, CallFunc_Less_IntInt_ReturnValue_1) == 0x000070, "Member 'MPMainContainerBox_C_InteractController::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.IsInWater
// 0x0001 (0x0001 - 0x0000)
struct MPMainContainerBox_C_IsInWater final
{
public:
	bool                                          InWater;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_IsInWater) == 0x000001, "Wrong alignment on MPMainContainerBox_C_IsInWater");
static_assert(sizeof(MPMainContainerBox_C_IsInWater) == 0x000001, "Wrong size on MPMainContainerBox_C_IsInWater");
static_assert(offsetof(MPMainContainerBox_C_IsInWater, InWater) == 0x000000, "Member 'MPMainContainerBox_C_IsInWater::InWater' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.IsLocked?
// 0x0001 (0x0001 - 0x0000)
struct MPMainContainerBox_C_IsLocked_ final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_IsLocked_) == 0x000001, "Wrong alignment on MPMainContainerBox_C_IsLocked_");
static_assert(sizeof(MPMainContainerBox_C_IsLocked_) == 0x000001, "Wrong size on MPMainContainerBox_C_IsLocked_");
static_assert(offsetof(MPMainContainerBox_C_IsLocked_, Result) == 0x000000, "Member 'MPMainContainerBox_C_IsLocked_::Result' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.IsLootPoint
// 0x0030 (0x0030 - 0x0000)
struct MPMainContainerBox_C_IsLootPoint final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALootPoint_C*                           Loot;                                              // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ALootPoint_C*                           FunctionLoot;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          FunctionResult;                                    // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELootPointType                                FunctionLootType;                                  // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ALootPoint_C*                           K2Node_DynamicCast_AsLoot_Point;                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_IsLootPoint) == 0x000008, "Wrong alignment on MPMainContainerBox_C_IsLootPoint");
static_assert(sizeof(MPMainContainerBox_C_IsLootPoint) == 0x000030, "Wrong size on MPMainContainerBox_C_IsLootPoint");
static_assert(offsetof(MPMainContainerBox_C_IsLootPoint, Result) == 0x000000, "Member 'MPMainContainerBox_C_IsLootPoint::Result' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_IsLootPoint, Loot) == 0x000008, "Member 'MPMainContainerBox_C_IsLootPoint::Loot' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_IsLootPoint, FunctionLoot) == 0x000010, "Member 'MPMainContainerBox_C_IsLootPoint::FunctionLoot' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_IsLootPoint, FunctionResult) == 0x000018, "Member 'MPMainContainerBox_C_IsLootPoint::FunctionResult' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_IsLootPoint, FunctionLootType) == 0x000019, "Member 'MPMainContainerBox_C_IsLootPoint::FunctionLootType' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_IsLootPoint, K2Node_DynamicCast_AsLoot_Point) == 0x000020, "Member 'MPMainContainerBox_C_IsLootPoint::K2Node_DynamicCast_AsLoot_Point' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_IsLootPoint, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'MPMainContainerBox_C_IsLootPoint::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.IsPlayer
// 0x0001 (0x0001 - 0x0000)
struct MPMainContainerBox_C_IsPlayer final
{
public:
	bool                                          Param_IsPlayer;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_IsPlayer) == 0x000001, "Wrong alignment on MPMainContainerBox_C_IsPlayer");
static_assert(sizeof(MPMainContainerBox_C_IsPlayer) == 0x000001, "Wrong size on MPMainContainerBox_C_IsPlayer");
static_assert(offsetof(MPMainContainerBox_C_IsPlayer, Param_IsPlayer) == 0x000000, "Member 'MPMainContainerBox_C_IsPlayer::Param_IsPlayer' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.MC_AddNewContainer
// 0x00A0 (0x00A0 - 0x0000)
struct MPMainContainerBox_C_MC_AddNewContainer final
{
public:
	int32                                         ToContainerUID;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  PickupItem;                                        // 0x0008(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         ToSlot;                                            // 0x0070(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rotated_;                                          // 0x0074(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FContainerPickupsInfo>          ContainerData;                                     // 0x0078(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<struct FContainerPickupsInfo>          Param_ContainerItems;                              // 0x0088(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          BlockAddContainer;                                 // 0x0098(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_MC_AddNewContainer) == 0x000008, "Wrong alignment on MPMainContainerBox_C_MC_AddNewContainer");
static_assert(sizeof(MPMainContainerBox_C_MC_AddNewContainer) == 0x0000A0, "Wrong size on MPMainContainerBox_C_MC_AddNewContainer");
static_assert(offsetof(MPMainContainerBox_C_MC_AddNewContainer, ToContainerUID) == 0x000000, "Member 'MPMainContainerBox_C_MC_AddNewContainer::ToContainerUID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MC_AddNewContainer, PickupItem) == 0x000008, "Member 'MPMainContainerBox_C_MC_AddNewContainer::PickupItem' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MC_AddNewContainer, ToSlot) == 0x000070, "Member 'MPMainContainerBox_C_MC_AddNewContainer::ToSlot' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MC_AddNewContainer, Rotated_) == 0x000074, "Member 'MPMainContainerBox_C_MC_AddNewContainer::Rotated_' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MC_AddNewContainer, ContainerData) == 0x000078, "Member 'MPMainContainerBox_C_MC_AddNewContainer::ContainerData' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MC_AddNewContainer, Param_ContainerItems) == 0x000088, "Member 'MPMainContainerBox_C_MC_AddNewContainer::Param_ContainerItems' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MC_AddNewContainer, BlockAddContainer) == 0x000098, "Member 'MPMainContainerBox_C_MC_AddNewContainer::BlockAddContainer' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.MC_AddNewItemToContainer
// 0x0078 (0x0078 - 0x0000)
struct MPMainContainerBox_C_MC_AddNewItemToContainer final
{
public:
	int32                                         ToContainerUID;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  PickupItem;                                        // 0x0008(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         ToSlot;                                            // 0x0070(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_MC_AddNewItemToContainer) == 0x000008, "Wrong alignment on MPMainContainerBox_C_MC_AddNewItemToContainer");
static_assert(sizeof(MPMainContainerBox_C_MC_AddNewItemToContainer) == 0x000078, "Wrong size on MPMainContainerBox_C_MC_AddNewItemToContainer");
static_assert(offsetof(MPMainContainerBox_C_MC_AddNewItemToContainer, ToContainerUID) == 0x000000, "Member 'MPMainContainerBox_C_MC_AddNewItemToContainer::ToContainerUID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MC_AddNewItemToContainer, PickupItem) == 0x000008, "Member 'MPMainContainerBox_C_MC_AddNewItemToContainer::PickupItem' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MC_AddNewItemToContainer, ToSlot) == 0x000070, "Member 'MPMainContainerBox_C_MC_AddNewItemToContainer::ToSlot' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.MC_InMPCMoveItem
// 0x0014 (0x0014 - 0x0000)
struct MPMainContainerBox_C_MC_InMPCMoveItem final
{
public:
	int32                                         ItemUID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FromContainerUID;                                  // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToContainerUID;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToIndex;                                           // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rotated_;                                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_MC_InMPCMoveItem) == 0x000004, "Wrong alignment on MPMainContainerBox_C_MC_InMPCMoveItem");
static_assert(sizeof(MPMainContainerBox_C_MC_InMPCMoveItem) == 0x000014, "Wrong size on MPMainContainerBox_C_MC_InMPCMoveItem");
static_assert(offsetof(MPMainContainerBox_C_MC_InMPCMoveItem, ItemUID) == 0x000000, "Member 'MPMainContainerBox_C_MC_InMPCMoveItem::ItemUID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MC_InMPCMoveItem, FromContainerUID) == 0x000004, "Member 'MPMainContainerBox_C_MC_InMPCMoveItem::FromContainerUID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MC_InMPCMoveItem, ToContainerUID) == 0x000008, "Member 'MPMainContainerBox_C_MC_InMPCMoveItem::ToContainerUID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MC_InMPCMoveItem, ToIndex) == 0x00000C, "Member 'MPMainContainerBox_C_MC_InMPCMoveItem::ToIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MC_InMPCMoveItem, Rotated_) == 0x000010, "Member 'MPMainContainerBox_C_MC_InMPCMoveItem::Rotated_' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.MC_MPContainerMoveItem
// 0x0010 (0x0010 - 0x0000)
struct MPMainContainerBox_C_MC_MPContainerMoveItem final
{
public:
	int32                                         ContainerID;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemSlotIndex;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToSlotIndex;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rotated_;                                          // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_MC_MPContainerMoveItem) == 0x000004, "Wrong alignment on MPMainContainerBox_C_MC_MPContainerMoveItem");
static_assert(sizeof(MPMainContainerBox_C_MC_MPContainerMoveItem) == 0x000010, "Wrong size on MPMainContainerBox_C_MC_MPContainerMoveItem");
static_assert(offsetof(MPMainContainerBox_C_MC_MPContainerMoveItem, ContainerID) == 0x000000, "Member 'MPMainContainerBox_C_MC_MPContainerMoveItem::ContainerID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MC_MPContainerMoveItem, ItemSlotIndex) == 0x000004, "Member 'MPMainContainerBox_C_MC_MPContainerMoveItem::ItemSlotIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MC_MPContainerMoveItem, ToSlotIndex) == 0x000008, "Member 'MPMainContainerBox_C_MC_MPContainerMoveItem::ToSlotIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MC_MPContainerMoveItem, Rotated_) == 0x00000C, "Member 'MPMainContainerBox_C_MC_MPContainerMoveItem::Rotated_' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.MC_RemoveItem
// 0x0008 (0x0008 - 0x0000)
struct MPMainContainerBox_C_MC_RemoveItem final
{
public:
	int32                                         ContainerUID;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemUID;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_MC_RemoveItem) == 0x000004, "Wrong alignment on MPMainContainerBox_C_MC_RemoveItem");
static_assert(sizeof(MPMainContainerBox_C_MC_RemoveItem) == 0x000008, "Wrong size on MPMainContainerBox_C_MC_RemoveItem");
static_assert(offsetof(MPMainContainerBox_C_MC_RemoveItem, ContainerUID) == 0x000000, "Member 'MPMainContainerBox_C_MC_RemoveItem::ContainerUID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MC_RemoveItem, ItemUID) == 0x000004, "Member 'MPMainContainerBox_C_MC_RemoveItem::ItemUID' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.MC_UpdateItemCount
// 0x000C (0x000C - 0x0000)
struct MPMainContainerBox_C_MC_UpdateItemCount final
{
public:
	int32                                         ContainerUID;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemUID;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_MC_UpdateItemCount) == 0x000004, "Wrong alignment on MPMainContainerBox_C_MC_UpdateItemCount");
static_assert(sizeof(MPMainContainerBox_C_MC_UpdateItemCount) == 0x00000C, "Wrong size on MPMainContainerBox_C_MC_UpdateItemCount");
static_assert(offsetof(MPMainContainerBox_C_MC_UpdateItemCount, ContainerUID) == 0x000000, "Member 'MPMainContainerBox_C_MC_UpdateItemCount::ContainerUID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MC_UpdateItemCount, ItemUID) == 0x000004, "Member 'MPMainContainerBox_C_MC_UpdateItemCount::ItemUID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MC_UpdateItemCount, Count) == 0x000008, "Member 'MPMainContainerBox_C_MC_UpdateItemCount::Count' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.MovedToChar__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct MPMainContainerBox_C_MovedToChar__DelegateSignature final
{
public:
	class FName                                   NewParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_MovedToChar__DelegateSignature) == 0x000004, "Wrong alignment on MPMainContainerBox_C_MovedToChar__DelegateSignature");
static_assert(sizeof(MPMainContainerBox_C_MovedToChar__DelegateSignature) == 0x000008, "Wrong size on MPMainContainerBox_C_MovedToChar__DelegateSignature");
static_assert(offsetof(MPMainContainerBox_C_MovedToChar__DelegateSignature, NewParam) == 0x000000, "Member 'MPMainContainerBox_C_MovedToChar__DelegateSignature::NewParam' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.MoveItemToSlotInContainer
// 0x0108 (0x0108 - 0x0000)
struct MPMainContainerBox_C_MoveItemToSlotInContainer final
{
public:
	int32                                         NOfColumns;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumOfRows;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToSlotIndex;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemUID;                                           // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ItemVector;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemSlotIndex;                                     // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToContainerUID;                                    // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsContainer;                                       // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rotated_;                                          // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Moved;                                             // 0x002A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ToSlot;                                            // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemId;                                            // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ContainerUID;                                      // 0x0034(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ArrIndex;                                          // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewUID;                                            // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 HostingItems;                                      // 0x0040(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetSlotDataArrIndexByUID_Index;           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default;                             // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetHostingSlots_Indexes;                  // 0x00B0(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_GetHostingSlots_Indexes_1;                // 0x00C0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA[0x2];                                       // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_MoveItemToSlotInContainer) == 0x000008, "Wrong alignment on MPMainContainerBox_C_MoveItemToSlotInContainer");
static_assert(sizeof(MPMainContainerBox_C_MoveItemToSlotInContainer) == 0x000108, "Wrong size on MPMainContainerBox_C_MoveItemToSlotInContainer");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, NOfColumns) == 0x000000, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::NOfColumns' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, NumOfRows) == 0x000004, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::NumOfRows' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, ToSlotIndex) == 0x000008, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::ToSlotIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, ItemUID) == 0x00000C, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::ItemUID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, ItemVector) == 0x000010, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::ItemVector' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, ItemSlotIndex) == 0x000020, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::ItemSlotIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, ToContainerUID) == 0x000024, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::ToContainerUID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, IsContainer) == 0x000028, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::IsContainer' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, Rotated_) == 0x000029, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::Rotated_' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, Moved) == 0x00002A, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::Moved' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, ToSlot) == 0x00002C, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::ToSlot' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, ItemId) == 0x000030, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::ItemId' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, ContainerUID) == 0x000034, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::ContainerUID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, ArrIndex) == 0x000038, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::ArrIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, NewUID) == 0x00003C, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::NewUID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, HostingItems) == 0x000040, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::HostingItems' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, CallFunc_GetSlotDataArrIndexByUID_Index) == 0x000050, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::CallFunc_GetSlotDataArrIndexByUID_Index' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, CallFunc_BreakVector2D_X) == 0x000058, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, CallFunc_BreakVector2D_Y) == 0x000060, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, CallFunc_MakeVector2D_ReturnValue) == 0x000068, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, Temp_int_Loop_Counter_Variable) == 0x000078, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00007C, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, Temp_int_Array_Index_Variable) == 0x000084, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, Temp_int_Array_Index_Variable_1) == 0x000088, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, Temp_int_Loop_Counter_Variable_1) == 0x00008C, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, CallFunc_Add_IntInt_ReturnValue_1) == 0x000090, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, Temp_int_Array_Index_Variable_2) == 0x000094, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, Temp_bool_Variable) == 0x000098, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, K2Node_Select_Default) == 0x0000A0, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, CallFunc_GetHostingSlots_Indexes) == 0x0000B0, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::CallFunc_GetHostingSlots_Indexes' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, CallFunc_GetHostingSlots_Indexes_1) == 0x0000C0, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::CallFunc_GetHostingSlots_Indexes_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, CallFunc_Array_Get_Item) == 0x0000D0, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, CallFunc_Array_Length_ReturnValue) == 0x0000D4, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, Temp_int_Loop_Counter_Variable_2) == 0x0000D8, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, CallFunc_Array_Get_Item_1) == 0x0000DC, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, CallFunc_Less_IntInt_ReturnValue) == 0x0000E0, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000E4, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, CallFunc_Array_Length_ReturnValue_1) == 0x0000E8, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000EC, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, CallFunc_Array_Get_Item_2) == 0x0000F0, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, CallFunc_Array_Length_ReturnValue_2) == 0x0000F4, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, CallFunc_Greater_IntInt_ReturnValue) == 0x0000F8, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000F9, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, CallFunc_Array_Length_ReturnValue_3) == 0x0000FC, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, CallFunc_BooleanOR_ReturnValue) == 0x000100, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MoveItemToSlotInContainer, CallFunc_Less_IntInt_ReturnValue_2) == 0x000101, "Member 'MPMainContainerBox_C_MoveItemToSlotInContainer::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.MPCFindItem
// 0x0190 (0x0190 - 0x0000)
struct MPMainContainerBox_C_MPCFindItem final
{
public:
	int32                                         ContainerUID;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemUID;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsContainer_;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Shop;                                              // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x000A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  ItemInfo;                                          // 0x0010(0x0068)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0078(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ArrIndex;                                          // 0x007C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_Array_Get_Item;                           // 0x00B0(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  CallFunc_Array_Get_Item_1;                         // 0x0118(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_182[0x2];                                      // 0x0182(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x018D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_MPCFindItem) == 0x000008, "Wrong alignment on MPMainContainerBox_C_MPCFindItem");
static_assert(sizeof(MPMainContainerBox_C_MPCFindItem) == 0x000190, "Wrong size on MPMainContainerBox_C_MPCFindItem");
static_assert(offsetof(MPMainContainerBox_C_MPCFindItem, ContainerUID) == 0x000000, "Member 'MPMainContainerBox_C_MPCFindItem::ContainerUID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCFindItem, ItemUID) == 0x000004, "Member 'MPMainContainerBox_C_MPCFindItem::ItemUID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCFindItem, IsContainer_) == 0x000008, "Member 'MPMainContainerBox_C_MPCFindItem::IsContainer_' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCFindItem, Shop) == 0x000009, "Member 'MPMainContainerBox_C_MPCFindItem::Shop' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCFindItem, Found) == 0x00000A, "Member 'MPMainContainerBox_C_MPCFindItem::Found' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCFindItem, ItemInfo) == 0x000010, "Member 'MPMainContainerBox_C_MPCFindItem::ItemInfo' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCFindItem, Param_Index) == 0x000078, "Member 'MPMainContainerBox_C_MPCFindItem::Param_Index' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCFindItem, ArrIndex) == 0x00007C, "Member 'MPMainContainerBox_C_MPCFindItem::ArrIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCFindItem, Temp_int_Loop_Counter_Variable) == 0x000080, "Member 'MPMainContainerBox_C_MPCFindItem::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCFindItem, CallFunc_Add_IntInt_ReturnValue) == 0x000084, "Member 'MPMainContainerBox_C_MPCFindItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCFindItem, Temp_int_Array_Index_Variable) == 0x000088, "Member 'MPMainContainerBox_C_MPCFindItem::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCFindItem, CallFunc_Array_Length_ReturnValue) == 0x00008C, "Member 'MPMainContainerBox_C_MPCFindItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCFindItem, CallFunc_Conv_IntToString_ReturnValue) == 0x000090, "Member 'MPMainContainerBox_C_MPCFindItem::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCFindItem, Temp_int_Array_Index_Variable_1) == 0x0000A0, "Member 'MPMainContainerBox_C_MPCFindItem::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCFindItem, Temp_int_Loop_Counter_Variable_1) == 0x0000A4, "Member 'MPMainContainerBox_C_MPCFindItem::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCFindItem, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A8, "Member 'MPMainContainerBox_C_MPCFindItem::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCFindItem, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'MPMainContainerBox_C_MPCFindItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCFindItem, CallFunc_Array_Get_Item_1) == 0x000118, "Member 'MPMainContainerBox_C_MPCFindItem::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCFindItem, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000180, "Member 'MPMainContainerBox_C_MPCFindItem::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCFindItem, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000181, "Member 'MPMainContainerBox_C_MPCFindItem::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCFindItem, CallFunc_Array_Length_ReturnValue_1) == 0x000184, "Member 'MPMainContainerBox_C_MPCFindItem::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCFindItem, CallFunc_Array_Length_ReturnValue_2) == 0x000188, "Member 'MPMainContainerBox_C_MPCFindItem::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCFindItem, CallFunc_Less_IntInt_ReturnValue) == 0x00018C, "Member 'MPMainContainerBox_C_MPCFindItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCFindItem, CallFunc_Less_IntInt_ReturnValue_1) == 0x00018D, "Member 'MPMainContainerBox_C_MPCFindItem::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.MPContToFull
// 0x0060 (0x0060 - 0x0000)
struct MPMainContainerBox_C_MPContToFull final
{
public:
	struct FMpContentRep                          Content;                                           // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FContainerPickupsInfo>          Containers;                                        // 0x0020(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<struct FContainerPickupsInfo>          Param_ContainerItems;                              // 0x0030(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<struct FContainerPickupsInfo>          L_ContItems;                                       // 0x0040(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<struct FContainerPickupsInfo>          L_Conts;                                           // 0x0050(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
};
static_assert(alignof(MPMainContainerBox_C_MPContToFull) == 0x000008, "Wrong alignment on MPMainContainerBox_C_MPContToFull");
static_assert(sizeof(MPMainContainerBox_C_MPContToFull) == 0x000060, "Wrong size on MPMainContainerBox_C_MPContToFull");
static_assert(offsetof(MPMainContainerBox_C_MPContToFull, Content) == 0x000000, "Member 'MPMainContainerBox_C_MPContToFull::Content' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPContToFull, Containers) == 0x000020, "Member 'MPMainContainerBox_C_MPContToFull::Containers' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPContToFull, Param_ContainerItems) == 0x000030, "Member 'MPMainContainerBox_C_MPContToFull::Param_ContainerItems' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPContToFull, L_ContItems) == 0x000040, "Member 'MPMainContainerBox_C_MPContToFull::L_ContItems' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPContToFull, L_Conts) == 0x000050, "Member 'MPMainContainerBox_C_MPContToFull::L_Conts' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.MPCRemoveItem
// 0x0330 (0x0330 - 0x0000)
struct MPMainContainerBox_C_MPCRemoveItem final
{
public:
	int32                                         Uid;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsContainer_;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Shop;                                              // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Removed;                                           // 0x0006(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MotherID;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentIndex;                                      // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ArrIndex;                                          // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotDataArrIndexByUID_Index;           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  CallFunc_Array_Get_Item;                           // 0x0038(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow;           // 0x00A8(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x02D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x02E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x02F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetVector_NewVector;                      // 0x0300(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetHostingSlots_Indexes;                  // 0x0310(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321[0x3];                                      // 0x0321(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x032C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_MPCRemoveItem) == 0x000008, "Wrong alignment on MPMainContainerBox_C_MPCRemoveItem");
static_assert(sizeof(MPMainContainerBox_C_MPCRemoveItem) == 0x000330, "Wrong size on MPMainContainerBox_C_MPCRemoveItem");
static_assert(offsetof(MPMainContainerBox_C_MPCRemoveItem, Uid) == 0x000000, "Member 'MPMainContainerBox_C_MPCRemoveItem::Uid' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCRemoveItem, IsContainer_) == 0x000004, "Member 'MPMainContainerBox_C_MPCRemoveItem::IsContainer_' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCRemoveItem, Shop) == 0x000005, "Member 'MPMainContainerBox_C_MPCRemoveItem::Shop' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCRemoveItem, Removed) == 0x000006, "Member 'MPMainContainerBox_C_MPCRemoveItem::Removed' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCRemoveItem, MotherID) == 0x000008, "Member 'MPMainContainerBox_C_MPCRemoveItem::MotherID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCRemoveItem, CurrentIndex) == 0x00000C, "Member 'MPMainContainerBox_C_MPCRemoveItem::CurrentIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCRemoveItem, ArrIndex) == 0x000010, "Member 'MPMainContainerBox_C_MPCRemoveItem::ArrIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCRemoveItem, Temp_int_Array_Index_Variable) == 0x000014, "Member 'MPMainContainerBox_C_MPCRemoveItem::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCRemoveItem, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'MPMainContainerBox_C_MPCRemoveItem::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCRemoveItem, Temp_int_Loop_Counter_Variable_1) == 0x00001C, "Member 'MPMainContainerBox_C_MPCRemoveItem::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCRemoveItem, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'MPMainContainerBox_C_MPCRemoveItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCRemoveItem, CallFunc_Add_IntInt_ReturnValue_1) == 0x000024, "Member 'MPMainContainerBox_C_MPCRemoveItem::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCRemoveItem, Temp_int_Array_Index_Variable_1) == 0x000028, "Member 'MPMainContainerBox_C_MPCRemoveItem::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCRemoveItem, CallFunc_GetSlotDataArrIndexByUID_Index) == 0x00002C, "Member 'MPMainContainerBox_C_MPCRemoveItem::CallFunc_GetSlotDataArrIndexByUID_Index' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCRemoveItem, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000030, "Member 'MPMainContainerBox_C_MPCRemoveItem::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCRemoveItem, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'MPMainContainerBox_C_MPCRemoveItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCRemoveItem, CallFunc_Array_Get_Item) == 0x000038, "Member 'MPMainContainerBox_C_MPCRemoveItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCRemoveItem, CallFunc_Less_IntInt_ReturnValue) == 0x0000A0, "Member 'MPMainContainerBox_C_MPCRemoveItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCRemoveItem, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000A8, "Member 'MPMainContainerBox_C_MPCRemoveItem::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCRemoveItem, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0002C8, "Member 'MPMainContainerBox_C_MPCRemoveItem::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCRemoveItem, CallFunc_Conv_NameToString_ReturnValue) == 0x0002D0, "Member 'MPMainContainerBox_C_MPCRemoveItem::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCRemoveItem, CallFunc_Concat_StrStr_ReturnValue) == 0x0002E0, "Member 'MPMainContainerBox_C_MPCRemoveItem::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCRemoveItem, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0002F0, "Member 'MPMainContainerBox_C_MPCRemoveItem::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCRemoveItem, CallFunc_GetVector_NewVector) == 0x000300, "Member 'MPMainContainerBox_C_MPCRemoveItem::CallFunc_GetVector_NewVector' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCRemoveItem, CallFunc_GetHostingSlots_Indexes) == 0x000310, "Member 'MPMainContainerBox_C_MPCRemoveItem::CallFunc_GetHostingSlots_Indexes' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCRemoveItem, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000320, "Member 'MPMainContainerBox_C_MPCRemoveItem::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCRemoveItem, CallFunc_Array_Get_Item_1) == 0x000324, "Member 'MPMainContainerBox_C_MPCRemoveItem::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCRemoveItem, CallFunc_Array_Length_ReturnValue_1) == 0x000328, "Member 'MPMainContainerBox_C_MPCRemoveItem::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCRemoveItem, CallFunc_Less_IntInt_ReturnValue_1) == 0x00032C, "Member 'MPMainContainerBox_C_MPCRemoveItem::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.MPCUpdateItemInfo
// 0x00E8 (0x00E8 - 0x0000)
struct MPMainContainerBox_C_MPCUpdateItemInfo final
{
public:
	struct FContainerPickupsInfo                  Item;                                              // 0x0000(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  CallFunc_Array_Get_Item;                           // 0x0078(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_MPCUpdateItemInfo) == 0x000008, "Wrong alignment on MPMainContainerBox_C_MPCUpdateItemInfo");
static_assert(sizeof(MPMainContainerBox_C_MPCUpdateItemInfo) == 0x0000E8, "Wrong size on MPMainContainerBox_C_MPCUpdateItemInfo");
static_assert(offsetof(MPMainContainerBox_C_MPCUpdateItemInfo, Item) == 0x000000, "Member 'MPMainContainerBox_C_MPCUpdateItemInfo::Item' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCUpdateItemInfo, Temp_int_Array_Index_Variable) == 0x000068, "Member 'MPMainContainerBox_C_MPCUpdateItemInfo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCUpdateItemInfo, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'MPMainContainerBox_C_MPCUpdateItemInfo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCUpdateItemInfo, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'MPMainContainerBox_C_MPCUpdateItemInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCUpdateItemInfo, CallFunc_Array_Length_ReturnValue) == 0x000074, "Member 'MPMainContainerBox_C_MPCUpdateItemInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCUpdateItemInfo, CallFunc_Array_Get_Item) == 0x000078, "Member 'MPMainContainerBox_C_MPCUpdateItemInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCUpdateItemInfo, CallFunc_Less_IntInt_ReturnValue) == 0x0000E0, "Member 'MPMainContainerBox_C_MPCUpdateItemInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_MPCUpdateItemInfo, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000E1, "Member 'MPMainContainerBox_C_MPCUpdateItemInfo::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.OnBeginInteract
// 0x0008 (0x0008 - 0x0000)
struct MPMainContainerBox_C_OnBeginInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_OnBeginInteract) == 0x000008, "Wrong alignment on MPMainContainerBox_C_OnBeginInteract");
static_assert(sizeof(MPMainContainerBox_C_OnBeginInteract) == 0x000008, "Wrong size on MPMainContainerBox_C_OnBeginInteract");
static_assert(offsetof(MPMainContainerBox_C_OnBeginInteract, Player) == 0x000000, "Member 'MPMainContainerBox_C_OnBeginInteract::Player' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.OnContainerAction__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct MPMainContainerBox_C_OnContainerAction__DelegateSignature final
{
public:
	class UJSIContainer_C*                        FromContainer;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        ToContainer;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            DroppedSlotRef;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            SlotReceiverRef;                                   // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         ToSlotIndex;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DroppedRotated_;                                   // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_OnContainerAction__DelegateSignature) == 0x000008, "Wrong alignment on MPMainContainerBox_C_OnContainerAction__DelegateSignature");
static_assert(sizeof(MPMainContainerBox_C_OnContainerAction__DelegateSignature) == 0x000028, "Wrong size on MPMainContainerBox_C_OnContainerAction__DelegateSignature");
static_assert(offsetof(MPMainContainerBox_C_OnContainerAction__DelegateSignature, FromContainer) == 0x000000, "Member 'MPMainContainerBox_C_OnContainerAction__DelegateSignature::FromContainer' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_OnContainerAction__DelegateSignature, ToContainer) == 0x000008, "Member 'MPMainContainerBox_C_OnContainerAction__DelegateSignature::ToContainer' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_OnContainerAction__DelegateSignature, DroppedSlotRef) == 0x000010, "Member 'MPMainContainerBox_C_OnContainerAction__DelegateSignature::DroppedSlotRef' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_OnContainerAction__DelegateSignature, SlotReceiverRef) == 0x000018, "Member 'MPMainContainerBox_C_OnContainerAction__DelegateSignature::SlotReceiverRef' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_OnContainerAction__DelegateSignature, ToSlotIndex) == 0x000020, "Member 'MPMainContainerBox_C_OnContainerAction__DelegateSignature::ToSlotIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_OnContainerAction__DelegateSignature, DroppedRotated_) == 0x000024, "Member 'MPMainContainerBox_C_OnContainerAction__DelegateSignature::DroppedRotated_' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.OnFocused
// 0x0028 (0x0028 - 0x0000)
struct MPMainContainerBox_C_OnFocused final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HighlightActor;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        HighlightActorComponent;                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_InteractType                                InteractType;                                      // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LateTime;                                          // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_OnFocused) == 0x000008, "Wrong alignment on MPMainContainerBox_C_OnFocused");
static_assert(sizeof(MPMainContainerBox_C_OnFocused) == 0x000028, "Wrong size on MPMainContainerBox_C_OnFocused");
static_assert(offsetof(MPMainContainerBox_C_OnFocused, Player) == 0x000000, "Member 'MPMainContainerBox_C_OnFocused::Player' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_OnFocused, HighlightActor) == 0x000008, "Member 'MPMainContainerBox_C_OnFocused::HighlightActor' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_OnFocused, HighlightActorComponent) == 0x000010, "Member 'MPMainContainerBox_C_OnFocused::HighlightActorComponent' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_OnFocused, InteractType) == 0x000018, "Member 'MPMainContainerBox_C_OnFocused::InteractType' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_OnFocused, LateTime) == 0x000020, "Member 'MPMainContainerBox_C_OnFocused::LateTime' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.OnInteract
// 0x0008 (0x0008 - 0x0000)
struct MPMainContainerBox_C_OnInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_OnInteract) == 0x000008, "Wrong alignment on MPMainContainerBox_C_OnInteract");
static_assert(sizeof(MPMainContainerBox_C_OnInteract) == 0x000008, "Wrong size on MPMainContainerBox_C_OnInteract");
static_assert(offsetof(MPMainContainerBox_C_OnInteract, Player) == 0x000000, "Member 'MPMainContainerBox_C_OnInteract::Player' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.OnInteract2
// 0x0008 (0x0008 - 0x0000)
struct MPMainContainerBox_C_OnInteract2 final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_OnInteract2) == 0x000008, "Wrong alignment on MPMainContainerBox_C_OnInteract2");
static_assert(sizeof(MPMainContainerBox_C_OnInteract2) == 0x000008, "Wrong size on MPMainContainerBox_C_OnInteract2");
static_assert(offsetof(MPMainContainerBox_C_OnInteract2, Player) == 0x000000, "Member 'MPMainContainerBox_C_OnInteract2::Player' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.OnInteract3
// 0x0008 (0x0008 - 0x0000)
struct MPMainContainerBox_C_OnInteract3 final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_OnInteract3) == 0x000008, "Wrong alignment on MPMainContainerBox_C_OnInteract3");
static_assert(sizeof(MPMainContainerBox_C_OnInteract3) == 0x000008, "Wrong size on MPMainContainerBox_C_OnInteract3");
static_assert(offsetof(MPMainContainerBox_C_OnInteract3, Player) == 0x000000, "Member 'MPMainContainerBox_C_OnInteract3::Player' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.OnInteractVehicle
// 0x0010 (0x0010 - 0x0000)
struct MPMainContainerBox_C_OnInteractVehicle final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         SitIndex;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipAnimation;                                     // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_OnInteractVehicle) == 0x000008, "Wrong alignment on MPMainContainerBox_C_OnInteractVehicle");
static_assert(sizeof(MPMainContainerBox_C_OnInteractVehicle) == 0x000010, "Wrong size on MPMainContainerBox_C_OnInteractVehicle");
static_assert(offsetof(MPMainContainerBox_C_OnInteractVehicle, Player) == 0x000000, "Member 'MPMainContainerBox_C_OnInteractVehicle::Player' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_OnInteractVehicle, SitIndex) == 0x000008, "Member 'MPMainContainerBox_C_OnInteractVehicle::SitIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_OnInteractVehicle, SkipAnimation) == 0x00000C, "Member 'MPMainContainerBox_C_OnInteractVehicle::SkipAnimation' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.OnLocalInteract
// 0x0008 (0x0008 - 0x0000)
struct MPMainContainerBox_C_OnLocalInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_OnLocalInteract) == 0x000008, "Wrong alignment on MPMainContainerBox_C_OnLocalInteract");
static_assert(sizeof(MPMainContainerBox_C_OnLocalInteract) == 0x000008, "Wrong size on MPMainContainerBox_C_OnLocalInteract");
static_assert(offsetof(MPMainContainerBox_C_OnLocalInteract, Player) == 0x000000, "Member 'MPMainContainerBox_C_OnLocalInteract::Player' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.OnLostFocus
// 0x0008 (0x0008 - 0x0000)
struct MPMainContainerBox_C_OnLostFocus final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_OnLostFocus) == 0x000008, "Wrong alignment on MPMainContainerBox_C_OnLostFocus");
static_assert(sizeof(MPMainContainerBox_C_OnLostFocus) == 0x000008, "Wrong size on MPMainContainerBox_C_OnLostFocus");
static_assert(offsetof(MPMainContainerBox_C_OnLostFocus, Player) == 0x000000, "Member 'MPMainContainerBox_C_OnLostFocus::Player' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.OnSeen
// 0x0008 (0x0008 - 0x0000)
struct MPMainContainerBox_C_OnSeen final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_OnSeen) == 0x000008, "Wrong alignment on MPMainContainerBox_C_OnSeen");
static_assert(sizeof(MPMainContainerBox_C_OnSeen) == 0x000008, "Wrong size on MPMainContainerBox_C_OnSeen");
static_assert(offsetof(MPMainContainerBox_C_OnSeen, Player) == 0x000000, "Member 'MPMainContainerBox_C_OnSeen::Player' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.OnStopInteract
// 0x0008 (0x0008 - 0x0000)
struct MPMainContainerBox_C_OnStopInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_OnStopInteract) == 0x000008, "Wrong alignment on MPMainContainerBox_C_OnStopInteract");
static_assert(sizeof(MPMainContainerBox_C_OnStopInteract) == 0x000008, "Wrong size on MPMainContainerBox_C_OnStopInteract");
static_assert(offsetof(MPMainContainerBox_C_OnStopInteract, Player) == 0x000000, "Member 'MPMainContainerBox_C_OnStopInteract::Player' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.OpenDoorRPC
// 0x0010 (0x0010 - 0x0000)
struct MPMainContainerBox_C_OpenDoorRPC final
{
public:
	class ABP_Door_C*                             Door;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOpen;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_OpenDoorRPC) == 0x000008, "Wrong alignment on MPMainContainerBox_C_OpenDoorRPC");
static_assert(sizeof(MPMainContainerBox_C_OpenDoorRPC) == 0x000010, "Wrong size on MPMainContainerBox_C_OpenDoorRPC");
static_assert(offsetof(MPMainContainerBox_C_OpenDoorRPC, Door) == 0x000000, "Member 'MPMainContainerBox_C_OpenDoorRPC::Door' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_OpenDoorRPC, IsOpen) == 0x000008, "Member 'MPMainContainerBox_C_OpenDoorRPC::IsOpen' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.OpenLootRPC
// 0x0008 (0x0008 - 0x0000)
struct MPMainContainerBox_C_OpenLootRPC final
{
public:
	class ALootPoint_C*                           LootPoint;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_OpenLootRPC) == 0x000008, "Wrong alignment on MPMainContainerBox_C_OpenLootRPC");
static_assert(sizeof(MPMainContainerBox_C_OpenLootRPC) == 0x000008, "Wrong size on MPMainContainerBox_C_OpenLootRPC");
static_assert(offsetof(MPMainContainerBox_C_OpenLootRPC, LootPoint) == 0x000000, "Member 'MPMainContainerBox_C_OpenLootRPC::LootPoint' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.PlayerAddItem
// 0x0230 (0x0230 - 0x0000)
struct MPMainContainerBox_C_PlayerAddItem final
{
public:
	struct FFItemInfo                             ItemInfo;                                          // 0x0000(0x0220)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	class UWBP_AttachmentCell_C*                  ActiveCell;                                        // 0x0220(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Added;                                             // 0x0228(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_PlayerAddItem) == 0x000008, "Wrong alignment on MPMainContainerBox_C_PlayerAddItem");
static_assert(sizeof(MPMainContainerBox_C_PlayerAddItem) == 0x000230, "Wrong size on MPMainContainerBox_C_PlayerAddItem");
static_assert(offsetof(MPMainContainerBox_C_PlayerAddItem, ItemInfo) == 0x000000, "Member 'MPMainContainerBox_C_PlayerAddItem::ItemInfo' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_PlayerAddItem, ActiveCell) == 0x000220, "Member 'MPMainContainerBox_C_PlayerAddItem::ActiveCell' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_PlayerAddItem, Added) == 0x000228, "Member 'MPMainContainerBox_C_PlayerAddItem::Added' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.PlayerCanisterAction
// 0x0010 (0x0010 - 0x0000)
struct MPMainContainerBox_C_PlayerCanisterAction final
{
public:
	bool                                          Attach;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Canister_C*                         Canister;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_PlayerCanisterAction) == 0x000008, "Wrong alignment on MPMainContainerBox_C_PlayerCanisterAction");
static_assert(sizeof(MPMainContainerBox_C_PlayerCanisterAction) == 0x000010, "Wrong size on MPMainContainerBox_C_PlayerCanisterAction");
static_assert(offsetof(MPMainContainerBox_C_PlayerCanisterAction, Attach) == 0x000000, "Member 'MPMainContainerBox_C_PlayerCanisterAction::Attach' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_PlayerCanisterAction, Canister) == 0x000008, "Member 'MPMainContainerBox_C_PlayerCanisterAction::Canister' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.PlayerGetItemCount
// 0x0038 (0x0038 - 0x0000)
struct MPMainContainerBox_C_PlayerGetItemCount final
{
public:
	class UObject*                                Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 ItemName;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GeneralInterface_C> K2Node_DynamicCast_AsBPI_General_Interface;        // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PlayerItemCountByName_Count;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_PlayerGetItemCount) == 0x000008, "Wrong alignment on MPMainContainerBox_C_PlayerGetItemCount");
static_assert(sizeof(MPMainContainerBox_C_PlayerGetItemCount) == 0x000038, "Wrong size on MPMainContainerBox_C_PlayerGetItemCount");
static_assert(offsetof(MPMainContainerBox_C_PlayerGetItemCount, Target) == 0x000000, "Member 'MPMainContainerBox_C_PlayerGetItemCount::Target' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_PlayerGetItemCount, ItemName) == 0x000008, "Member 'MPMainContainerBox_C_PlayerGetItemCount::ItemName' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_PlayerGetItemCount, Count) == 0x000018, "Member 'MPMainContainerBox_C_PlayerGetItemCount::Count' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_PlayerGetItemCount, K2Node_DynamicCast_AsBPI_General_Interface) == 0x000020, "Member 'MPMainContainerBox_C_PlayerGetItemCount::K2Node_DynamicCast_AsBPI_General_Interface' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_PlayerGetItemCount, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'MPMainContainerBox_C_PlayerGetItemCount::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_PlayerGetItemCount, CallFunc_PlayerItemCountByName_Count) == 0x000034, "Member 'MPMainContainerBox_C_PlayerGetItemCount::CallFunc_PlayerItemCountByName_Count' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.PlayerGetMesh
// 0x0008 (0x0008 - 0x0000)
struct MPMainContainerBox_C_PlayerGetMesh final
{
public:
	class USkeletalMeshComponent*                 Mesh;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_PlayerGetMesh) == 0x000008, "Wrong alignment on MPMainContainerBox_C_PlayerGetMesh");
static_assert(sizeof(MPMainContainerBox_C_PlayerGetMesh) == 0x000008, "Wrong size on MPMainContainerBox_C_PlayerGetMesh");
static_assert(offsetof(MPMainContainerBox_C_PlayerGetMesh, Mesh) == 0x000000, "Member 'MPMainContainerBox_C_PlayerGetMesh::Mesh' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.PlayerHasWeapon
// 0x0028 (0x0028 - 0x0000)
struct MPMainContainerBox_C_PlayerHasWeapon final
{
public:
	class UObject*                                Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Value;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Weaponry_C>       K2Node_DynamicCast_AsBPI_Weaponry;                 // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WP_HasWeaponOrBroken_Value;               // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_PlayerHasWeapon) == 0x000008, "Wrong alignment on MPMainContainerBox_C_PlayerHasWeapon");
static_assert(sizeof(MPMainContainerBox_C_PlayerHasWeapon) == 0x000028, "Wrong size on MPMainContainerBox_C_PlayerHasWeapon");
static_assert(offsetof(MPMainContainerBox_C_PlayerHasWeapon, Target) == 0x000000, "Member 'MPMainContainerBox_C_PlayerHasWeapon::Target' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_PlayerHasWeapon, Value) == 0x000008, "Member 'MPMainContainerBox_C_PlayerHasWeapon::Value' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_PlayerHasWeapon, K2Node_DynamicCast_AsBPI_Weaponry) == 0x000010, "Member 'MPMainContainerBox_C_PlayerHasWeapon::K2Node_DynamicCast_AsBPI_Weaponry' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_PlayerHasWeapon, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'MPMainContainerBox_C_PlayerHasWeapon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_PlayerHasWeapon, CallFunc_WP_HasWeaponOrBroken_Value) == 0x000021, "Member 'MPMainContainerBox_C_PlayerHasWeapon::CallFunc_WP_HasWeaponOrBroken_Value' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.PlayerItemCountByName
// 0x0018 (0x0018 - 0x0000)
struct MPMainContainerBox_C_PlayerItemCountByName final
{
public:
	class FString                                 ItemName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_PlayerItemCountByName) == 0x000008, "Wrong alignment on MPMainContainerBox_C_PlayerItemCountByName");
static_assert(sizeof(MPMainContainerBox_C_PlayerItemCountByName) == 0x000018, "Wrong size on MPMainContainerBox_C_PlayerItemCountByName");
static_assert(offsetof(MPMainContainerBox_C_PlayerItemCountByName, ItemName) == 0x000000, "Member 'MPMainContainerBox_C_PlayerItemCountByName::ItemName' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_PlayerItemCountByName, Count) == 0x000010, "Member 'MPMainContainerBox_C_PlayerItemCountByName::Count' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.RemoveContainerCustom
// 0x0008 (0x0008 - 0x0000)
struct MPMainContainerBox_C_RemoveContainerCustom final
{
public:
	int32                                         ItemUID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsContainer_;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_RemoveContainerCustom) == 0x000004, "Wrong alignment on MPMainContainerBox_C_RemoveContainerCustom");
static_assert(sizeof(MPMainContainerBox_C_RemoveContainerCustom) == 0x000008, "Wrong size on MPMainContainerBox_C_RemoveContainerCustom");
static_assert(offsetof(MPMainContainerBox_C_RemoveContainerCustom, ItemUID) == 0x000000, "Member 'MPMainContainerBox_C_RemoveContainerCustom::ItemUID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RemoveContainerCustom, IsContainer_) == 0x000004, "Member 'MPMainContainerBox_C_RemoveContainerCustom::IsContainer_' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.RequestMoveItem
// 0x0688 (0x0688 - 0x0000)
struct MPMainContainerBox_C_RequestMoveItem final
{
public:
	int32                                         ToSlotIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemUID;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToContainerUID;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rotated_;                                          // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsContainer;                                       // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallMCEvent_;                                      // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Shop;                                              // 0x000F(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Moved;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ArrIndex;                                          // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SrvItemIndex;                                      // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              SlotVector;                                        // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemSlotIndex;                                     // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotDataArrIndexByUID_Index;           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  K2Node_Select_Default;                             // 0x0060(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_2;                           // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_Array_Get_Item;                           // 0x00D0(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13D[0x3];                                      // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow;           // 0x0140(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0368(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0378(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0388(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetVector_NewVector;                      // 0x0398(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A9[0x7];                                      // 0x03A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_Array_Get_Item_1;                         // 0x03B0(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x041C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41D[0x3];                                      // 0x041D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0420(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0640(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_641[0x7];                                      // 0x0641(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0648(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0658(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0668(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0678(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MoveItemToSlotInContainer_Moved;          // 0x0679(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_67A[0x2];                                      // 0x067A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MoveItemToSlotInContainer_ToSlot;         // 0x067C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MoveItemToSlotInContainer_ItemID;         // 0x0680(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MoveItemToSlotInContainer_ContainerUID;   // 0x0684(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_RequestMoveItem) == 0x000008, "Wrong alignment on MPMainContainerBox_C_RequestMoveItem");
static_assert(sizeof(MPMainContainerBox_C_RequestMoveItem) == 0x000688, "Wrong size on MPMainContainerBox_C_RequestMoveItem");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, ToSlotIndex) == 0x000000, "Member 'MPMainContainerBox_C_RequestMoveItem::ToSlotIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, ItemUID) == 0x000004, "Member 'MPMainContainerBox_C_RequestMoveItem::ItemUID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, ToContainerUID) == 0x000008, "Member 'MPMainContainerBox_C_RequestMoveItem::ToContainerUID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, Rotated_) == 0x00000C, "Member 'MPMainContainerBox_C_RequestMoveItem::Rotated_' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, IsContainer) == 0x00000D, "Member 'MPMainContainerBox_C_RequestMoveItem::IsContainer' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, CallMCEvent_) == 0x00000E, "Member 'MPMainContainerBox_C_RequestMoveItem::CallMCEvent_' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, Shop) == 0x00000F, "Member 'MPMainContainerBox_C_RequestMoveItem::Shop' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, Moved) == 0x000010, "Member 'MPMainContainerBox_C_RequestMoveItem::Moved' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, ArrIndex) == 0x000014, "Member 'MPMainContainerBox_C_RequestMoveItem::ArrIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, SrvItemIndex) == 0x000018, "Member 'MPMainContainerBox_C_RequestMoveItem::SrvItemIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, SlotVector) == 0x000020, "Member 'MPMainContainerBox_C_RequestMoveItem::SlotVector' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, ItemSlotIndex) == 0x000030, "Member 'MPMainContainerBox_C_RequestMoveItem::ItemSlotIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, Temp_bool_Variable) == 0x000034, "Member 'MPMainContainerBox_C_RequestMoveItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, CallFunc_GetSlotDataArrIndexByUID_Index) == 0x000038, "Member 'MPMainContainerBox_C_RequestMoveItem::CallFunc_GetSlotDataArrIndexByUID_Index' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'MPMainContainerBox_C_RequestMoveItem::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000040, "Member 'MPMainContainerBox_C_RequestMoveItem::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'MPMainContainerBox_C_RequestMoveItem::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, Temp_int_Loop_Counter_Variable_1) == 0x000048, "Member 'MPMainContainerBox_C_RequestMoveItem::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'MPMainContainerBox_C_RequestMoveItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, CallFunc_Add_IntInt_ReturnValue_1) == 0x000050, "Member 'MPMainContainerBox_C_RequestMoveItem::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, Temp_int_Array_Index_Variable_1) == 0x000054, "Member 'MPMainContainerBox_C_RequestMoveItem::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, Temp_bool_Variable_1) == 0x000058, "Member 'MPMainContainerBox_C_RequestMoveItem::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, Temp_bool_Variable_2) == 0x000059, "Member 'MPMainContainerBox_C_RequestMoveItem::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, Temp_bool_Variable_3) == 0x00005A, "Member 'MPMainContainerBox_C_RequestMoveItem::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, Temp_bool_Variable_4) == 0x00005B, "Member 'MPMainContainerBox_C_RequestMoveItem::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, CallFunc_Not_PreBool_ReturnValue) == 0x00005C, "Member 'MPMainContainerBox_C_RequestMoveItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, K2Node_Select_Default) == 0x000060, "Member 'MPMainContainerBox_C_RequestMoveItem::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, CallFunc_BooleanAND_ReturnValue) == 0x0000C8, "Member 'MPMainContainerBox_C_RequestMoveItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, CallFunc_BooleanAND_ReturnValue_1) == 0x0000C9, "Member 'MPMainContainerBox_C_RequestMoveItem::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, K2Node_Select_Default_1) == 0x0000CA, "Member 'MPMainContainerBox_C_RequestMoveItem::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, K2Node_Select_Default_2) == 0x0000CB, "Member 'MPMainContainerBox_C_RequestMoveItem::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, CallFunc_Array_Get_Item) == 0x0000D0, "Member 'MPMainContainerBox_C_RequestMoveItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, CallFunc_Array_Length_ReturnValue) == 0x000138, "Member 'MPMainContainerBox_C_RequestMoveItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, CallFunc_Less_IntInt_ReturnValue) == 0x00013C, "Member 'MPMainContainerBox_C_RequestMoveItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, CallFunc_GetDataTableRowFromName_OutRow) == 0x000140, "Member 'MPMainContainerBox_C_RequestMoveItem::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000360, "Member 'MPMainContainerBox_C_RequestMoveItem::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, CallFunc_Conv_NameToString_ReturnValue) == 0x000368, "Member 'MPMainContainerBox_C_RequestMoveItem::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, CallFunc_Concat_StrStr_ReturnValue) == 0x000378, "Member 'MPMainContainerBox_C_RequestMoveItem::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000388, "Member 'MPMainContainerBox_C_RequestMoveItem::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, CallFunc_GetVector_NewVector) == 0x000398, "Member 'MPMainContainerBox_C_RequestMoveItem::CallFunc_GetVector_NewVector' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0003A8, "Member 'MPMainContainerBox_C_RequestMoveItem::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, CallFunc_Array_Get_Item_1) == 0x0003B0, "Member 'MPMainContainerBox_C_RequestMoveItem::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, CallFunc_Array_Length_ReturnValue_1) == 0x000418, "Member 'MPMainContainerBox_C_RequestMoveItem::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, CallFunc_Less_IntInt_ReturnValue_1) == 0x00041C, "Member 'MPMainContainerBox_C_RequestMoveItem::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000420, "Member 'MPMainContainerBox_C_RequestMoveItem::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000640, "Member 'MPMainContainerBox_C_RequestMoveItem::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000648, "Member 'MPMainContainerBox_C_RequestMoveItem::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000658, "Member 'MPMainContainerBox_C_RequestMoveItem::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000668, "Member 'MPMainContainerBox_C_RequestMoveItem::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000678, "Member 'MPMainContainerBox_C_RequestMoveItem::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, CallFunc_MoveItemToSlotInContainer_Moved) == 0x000679, "Member 'MPMainContainerBox_C_RequestMoveItem::CallFunc_MoveItemToSlotInContainer_Moved' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, CallFunc_MoveItemToSlotInContainer_ToSlot) == 0x00067C, "Member 'MPMainContainerBox_C_RequestMoveItem::CallFunc_MoveItemToSlotInContainer_ToSlot' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, CallFunc_MoveItemToSlotInContainer_ItemID) == 0x000680, "Member 'MPMainContainerBox_C_RequestMoveItem::CallFunc_MoveItemToSlotInContainer_ItemID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_RequestMoveItem, CallFunc_MoveItemToSlotInContainer_ContainerUID) == 0x000684, "Member 'MPMainContainerBox_C_RequestMoveItem::CallFunc_MoveItemToSlotInContainer_ContainerUID' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.Set3DWidgetVisibility
// 0x0001 (0x0001 - 0x0000)
struct MPMainContainerBox_C_Set3DWidgetVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_Set3DWidgetVisibility) == 0x000001, "Wrong alignment on MPMainContainerBox_C_Set3DWidgetVisibility");
static_assert(sizeof(MPMainContainerBox_C_Set3DWidgetVisibility) == 0x000001, "Wrong size on MPMainContainerBox_C_Set3DWidgetVisibility");
static_assert(offsetof(MPMainContainerBox_C_Set3DWidgetVisibility, Visible) == 0x000000, "Member 'MPMainContainerBox_C_Set3DWidgetVisibility::Visible' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.SetContainerPermissions
// 0x0010 (0x0010 - 0x0000)
struct MPMainContainerBox_C_SetContainerPermissions final
{
public:
	class UJSIContainer_C*                        Container;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMPContainerWidget_C*                   CallFunc_GetMainContainer_ContainerWidget;         // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_SetContainerPermissions) == 0x000008, "Wrong alignment on MPMainContainerBox_C_SetContainerPermissions");
static_assert(sizeof(MPMainContainerBox_C_SetContainerPermissions) == 0x000010, "Wrong size on MPMainContainerBox_C_SetContainerPermissions");
static_assert(offsetof(MPMainContainerBox_C_SetContainerPermissions, Container) == 0x000000, "Member 'MPMainContainerBox_C_SetContainerPermissions::Container' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_SetContainerPermissions, CallFunc_GetMainContainer_ContainerWidget) == 0x000008, "Member 'MPMainContainerBox_C_SetContainerPermissions::CallFunc_GetMainContainer_ContainerWidget' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.SetEnableSmoothSync
// 0x0002 (0x0002 - 0x0000)
struct MPMainContainerBox_C_SetEnableSmoothSync final
{
public:
	bool                                          NewEnable;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_SetEnableSmoothSync) == 0x000001, "Wrong alignment on MPMainContainerBox_C_SetEnableSmoothSync");
static_assert(sizeof(MPMainContainerBox_C_SetEnableSmoothSync) == 0x000002, "Wrong size on MPMainContainerBox_C_SetEnableSmoothSync");
static_assert(offsetof(MPMainContainerBox_C_SetEnableSmoothSync, NewEnable) == 0x000000, "Member 'MPMainContainerBox_C_SetEnableSmoothSync::NewEnable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_SetEnableSmoothSync, Success) == 0x000001, "Member 'MPMainContainerBox_C_SetEnableSmoothSync::Success' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.SetFreePickup
// 0x0001 (0x0001 - 0x0000)
struct MPMainContainerBox_C_SetFreePickup final
{
public:
	bool                                          Param_bFreePickup;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_SetFreePickup) == 0x000001, "Wrong alignment on MPMainContainerBox_C_SetFreePickup");
static_assert(sizeof(MPMainContainerBox_C_SetFreePickup) == 0x000001, "Wrong size on MPMainContainerBox_C_SetFreePickup");
static_assert(offsetof(MPMainContainerBox_C_SetFreePickup, Param_bFreePickup) == 0x000000, "Member 'MPMainContainerBox_C_SetFreePickup::Param_bFreePickup' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.SetPlayerCollisionInCar
// 0x0001 (0x0001 - 0x0000)
struct MPMainContainerBox_C_SetPlayerCollisionInCar final
{
public:
	bool                                          NewEnable;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_SetPlayerCollisionInCar) == 0x000001, "Wrong alignment on MPMainContainerBox_C_SetPlayerCollisionInCar");
static_assert(sizeof(MPMainContainerBox_C_SetPlayerCollisionInCar) == 0x000001, "Wrong size on MPMainContainerBox_C_SetPlayerCollisionInCar");
static_assert(offsetof(MPMainContainerBox_C_SetPlayerCollisionInCar, NewEnable) == 0x000000, "Member 'MPMainContainerBox_C_SetPlayerCollisionInCar::NewEnable' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.SetTutorial3DWidgetVisibility
// 0x0001 (0x0001 - 0x0000)
struct MPMainContainerBox_C_SetTutorial3DWidgetVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_SetTutorial3DWidgetVisibility) == 0x000001, "Wrong alignment on MPMainContainerBox_C_SetTutorial3DWidgetVisibility");
static_assert(sizeof(MPMainContainerBox_C_SetTutorial3DWidgetVisibility) == 0x000001, "Wrong size on MPMainContainerBox_C_SetTutorial3DWidgetVisibility");
static_assert(offsetof(MPMainContainerBox_C_SetTutorial3DWidgetVisibility, Visible) == 0x000000, "Member 'MPMainContainerBox_C_SetTutorial3DWidgetVisibility::Visible' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.ShowSimpleUIText
// 0x0010 (0x0010 - 0x0000)
struct MPMainContainerBox_C_ShowSimpleUIText final
{
public:
	class FString                                 String;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_ShowSimpleUIText) == 0x000008, "Wrong alignment on MPMainContainerBox_C_ShowSimpleUIText");
static_assert(sizeof(MPMainContainerBox_C_ShowSimpleUIText) == 0x000010, "Wrong size on MPMainContainerBox_C_ShowSimpleUIText");
static_assert(offsetof(MPMainContainerBox_C_ShowSimpleUIText, String) == 0x000000, "Member 'MPMainContainerBox_C_ShowSimpleUIText::String' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.StopLockpicking(binding)
// 0x0001 (0x0001 - 0x0000)
struct MPMainContainerBox_C_StopLockpicking_binding_ final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_StopLockpicking_binding_) == 0x000001, "Wrong alignment on MPMainContainerBox_C_StopLockpicking_binding_");
static_assert(sizeof(MPMainContainerBox_C_StopLockpicking_binding_) == 0x000001, "Wrong size on MPMainContainerBox_C_StopLockpicking_binding_");
static_assert(offsetof(MPMainContainerBox_C_StopLockpicking_binding_, Success) == 0x000000, "Member 'MPMainContainerBox_C_StopLockpicking_binding_::Success' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.TransferMPCDataToChar
// 0x05C8 (0x05C8 - 0x0000)
struct MPMainContainerBox_C_TransferMPCDataToChar final
{
public:
	struct FContainerPickupsInfo                  ContainerInfo;                                     // 0x0000(0x0068)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         ContainerIndex;                                    // 0x0068(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Shop;                                              // 0x006C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ItemsLeft;                                         // 0x0070(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0074(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FContainerPickupsInfo>          ContainerDataResult;                               // 0x0078(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<struct FContainerPickupsInfo>          ContainerItemsResult;                              // 0x0088(0x0010)(Parm, OutParm, ContainsInstancedReference)
	int32                                         ContainerArrIndex;                                 // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FContainerPickupsInfo>          FinalContainers;                                   // 0x00A0(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<struct FContainerPickupsInfo>          FinalContainerItems;                               // 0x00B0(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<int32>                                 DeleteIndexList;                                   // 0x00C0(0x0010)(Edit, BlueprintVisible)
	int32                                         MotherUID;                                         // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CurrentContainer;                                  // 0x00D8(0x0068)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FContainerPickupsInfo>          TargetContainers;                                  // 0x0140(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<int32>                                 TransferredContainers;                             // 0x0150(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16E[0x2];                                      // 0x016E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17D[0x3];                                      // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotDataArrIndexByUID_Index;           // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow;           // 0x01A8(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C9[0x7];                                      // 0x03C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x03D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetVector_NewVector;                      // 0x03E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x03F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetHostingSlots_Indexes;                  // 0x0400(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0410(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_429[0x3];                                      // 0x0429(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotDataArrIndexByUID_Index_1;         // 0x042C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  CallFunc_Array_Get_Item_1;                         // 0x0430(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x049C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49D[0x3];                                      // 0x049D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A4[0x4];                                      // 0x04A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_Array_Get_Item_2;                         // 0x04A8(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0514(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_519[0x3];                                      // 0x0519(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x051C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_521[0x3];                                      // 0x0521(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0524(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_3;                         // 0x0528(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x052C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_531[0x3];                                      // 0x0531(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_4;                         // 0x0534(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0538(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x053C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53D[0x3];                                      // 0x053D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0540(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_544[0x4];                                      // 0x0544(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_Array_Get_Item_5;                         // 0x0548(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x05B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x05B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B5[0x3];                                      // 0x05B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x05B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x05BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_TransferMPCDataToChar) == 0x000008, "Wrong alignment on MPMainContainerBox_C_TransferMPCDataToChar");
static_assert(sizeof(MPMainContainerBox_C_TransferMPCDataToChar) == 0x0005C8, "Wrong size on MPMainContainerBox_C_TransferMPCDataToChar");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, ContainerInfo) == 0x000000, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::ContainerInfo' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, ContainerIndex) == 0x000068, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::ContainerIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, Shop) == 0x00006C, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::Shop' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, ItemsLeft) == 0x000070, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::ItemsLeft' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, Success) == 0x000074, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::Success' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, ContainerDataResult) == 0x000078, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::ContainerDataResult' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, ContainerItemsResult) == 0x000088, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::ContainerItemsResult' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, ContainerArrIndex) == 0x000098, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::ContainerArrIndex' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, FinalContainers) == 0x0000A0, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::FinalContainers' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, FinalContainerItems) == 0x0000B0, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::FinalContainerItems' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, DeleteIndexList) == 0x0000C0, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::DeleteIndexList' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, MotherUID) == 0x0000D0, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::MotherUID' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, CurrentContainer) == 0x0000D8, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::CurrentContainer' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, TargetContainers) == 0x000140, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::TargetContainers' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, TransferredContainers) == 0x000150, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::TransferredContainers' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, Temp_int_Loop_Counter_Variable) == 0x000160, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, CallFunc_Add_IntInt_ReturnValue) == 0x000164, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, Temp_int_Array_Index_Variable) == 0x000168, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00016C, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, Temp_bool_Has_Been_Initd_Variable) == 0x00016D, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, Temp_int_Loop_Counter_Variable_1) == 0x000170, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, CallFunc_Add_IntInt_ReturnValue_1) == 0x000174, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, Temp_int_Array_Index_Variable_1) == 0x000178, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, Temp_bool_IsClosed_Variable) == 0x00017C, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, Temp_int_Array_Index_Variable_2) == 0x000180, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, Temp_int_Loop_Counter_Variable_2) == 0x000184, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, CallFunc_Add_IntInt_ReturnValue_2) == 0x000188, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, Temp_int_Array_Index_Variable_3) == 0x00018C, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, Temp_int_Loop_Counter_Variable_3) == 0x000190, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, CallFunc_Add_IntInt_ReturnValue_3) == 0x000194, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, Temp_int_Loop_Counter_Variable_4) == 0x000198, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, CallFunc_Add_IntInt_ReturnValue_4) == 0x00019C, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0001A0, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, CallFunc_GetSlotDataArrIndexByUID_Index) == 0x0001A4, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::CallFunc_GetSlotDataArrIndexByUID_Index' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, CallFunc_GetDataTableRowFromName_OutRow) == 0x0001A8, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0003C8, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, CallFunc_Conv_NameToString_ReturnValue) == 0x0003D0, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, CallFunc_GetVector_NewVector) == 0x0003E0, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::CallFunc_GetVector_NewVector' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, CallFunc_Concat_StrStr_ReturnValue) == 0x0003F0, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, CallFunc_GetHostingSlots_Indexes) == 0x000400, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::CallFunc_GetHostingSlots_Indexes' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000410, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, CallFunc_Array_Get_Item) == 0x000420, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, CallFunc_Array_Length_ReturnValue) == 0x000424, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, CallFunc_Less_IntInt_ReturnValue) == 0x000428, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, CallFunc_GetSlotDataArrIndexByUID_Index_1) == 0x00042C, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::CallFunc_GetSlotDataArrIndexByUID_Index_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, CallFunc_Array_Get_Item_1) == 0x000430, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, CallFunc_Array_Length_ReturnValue_1) == 0x000498, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, CallFunc_Less_IntInt_ReturnValue_1) == 0x00049C, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, CallFunc_Array_Add_ReturnValue) == 0x0004A0, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, CallFunc_Array_Get_Item_2) == 0x0004A8, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, CallFunc_Array_Length_ReturnValue_2) == 0x000510, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, CallFunc_Array_Add_ReturnValue_1) == 0x000514, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, CallFunc_Less_IntInt_ReturnValue_2) == 0x000518, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, CallFunc_Array_Add_ReturnValue_2) == 0x00051C, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, CallFunc_Array_Contains_ReturnValue) == 0x000520, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, Temp_int_Array_Index_Variable_4) == 0x000524, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, CallFunc_Array_Get_Item_3) == 0x000528, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, CallFunc_Array_Length_ReturnValue_3) == 0x00052C, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, CallFunc_Less_IntInt_ReturnValue_3) == 0x000530, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, CallFunc_Array_Get_Item_4) == 0x000534, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, CallFunc_Array_Length_ReturnValue_4) == 0x000538, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, CallFunc_Less_IntInt_ReturnValue_4) == 0x00053C, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, CallFunc_Array_Add_ReturnValue_3) == 0x000540, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, CallFunc_Array_Get_Item_5) == 0x000548, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, CallFunc_Array_Length_ReturnValue_5) == 0x0005B0, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, CallFunc_Greater_IntInt_ReturnValue) == 0x0005B4, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, CallFunc_Array_Add_ReturnValue_4) == 0x0005B8, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, CallFunc_Array_Add_ReturnValue_5) == 0x0005BC, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_TransferMPCDataToChar, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0005C0, "Member 'MPMainContainerBox_C_TransferMPCDataToChar::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.UnhandleAllEvents
// 0x0008 (0x0008 - 0x0000)
struct MPMainContainerBox_C_UnhandleAllEvents final
{
public:
	class UJSIContainer_C*                        Container;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_UnhandleAllEvents) == 0x000008, "Wrong alignment on MPMainContainerBox_C_UnhandleAllEvents");
static_assert(sizeof(MPMainContainerBox_C_UnhandleAllEvents) == 0x000008, "Wrong size on MPMainContainerBox_C_UnhandleAllEvents");
static_assert(offsetof(MPMainContainerBox_C_UnhandleAllEvents, Container) == 0x000000, "Member 'MPMainContainerBox_C_UnhandleAllEvents::Container' has a wrong offset!");

// Function MPMainContainerBox.MPMainContainerBox_C.UpdateContainerData (OnlyServer)
// 0x0720 (0x0720 - 0x0000)
struct MPMainContainerBox_C_UpdateContainerData__OnlyServer_ final
{
public:
	TArray<struct FContainerPickupsInfo>          InContainers;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReMinusInit;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FunctionResult;                                    // 0x0012(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FDefaultItemInfo>               NewItems;                                          // 0x0018(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<struct FContainerPickupsInfo>          Items;                                             // 0x0028(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<struct FContainerPickupsInfo>          Containers;                                        // 0x0038(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  CallFunc_Array_Get_Item;                           // 0x0068(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DE[0x2];                                       // 0x00DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_Array_Get_Item_1;                         // 0x00E0(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow;           // 0x0150(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0378(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0398(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC[0x4];                                      // 0x03AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x03B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  CallFunc_Array_Get_Item_2;                         // 0x03C8(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FDefaultItemInfo                       K2Node_MakeStruct_DefaultItemInfo;                 // 0x0430(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0470(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0690(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_691[0x3];                                      // 0x0691(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0694(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0698(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FDefaultItemInfo                       K2Node_MakeStruct_DefaultItemInfo_1;               // 0x06A8(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x06E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x06F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6FC[0x4];                                      // 0x06FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0700(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0710(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue_1;           // 0x0714(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_715[0x3];                                      // 0x0715(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0718(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_) == 0x000008, "Wrong alignment on MPMainContainerBox_C_UpdateContainerData__OnlyServer_");
static_assert(sizeof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_) == 0x000720, "Wrong size on MPMainContainerBox_C_UpdateContainerData__OnlyServer_");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, InContainers) == 0x000000, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::InContainers' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, ReMinusInit) == 0x000010, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::ReMinusInit' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, Result) == 0x000011, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::Result' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, FunctionResult) == 0x000012, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::FunctionResult' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, NewItems) == 0x000018, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::NewItems' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, Items) == 0x000028, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::Items' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, Containers) == 0x000038, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::Containers' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, Temp_int_Loop_Counter_Variable_1) == 0x000050, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, CallFunc_Add_IntInt_ReturnValue_1) == 0x00005C, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, Temp_int_Array_Index_Variable) == 0x000060, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, Temp_int_Array_Index_Variable_1) == 0x000064, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, CallFunc_Array_Get_Item) == 0x000068, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, Temp_int_Loop_Counter_Variable_2) == 0x0000D0, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000D4, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, CallFunc_Array_Length_ReturnValue_1) == 0x0000D8, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000DC, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x0000DD, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, CallFunc_Array_Get_Item_1) == 0x0000E0, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, CallFunc_Array_Length_ReturnValue_2) == 0x000148, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, CallFunc_Less_IntInt_ReturnValue_2) == 0x00014C, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, CallFunc_GetDataTableRowFromName_OutRow) == 0x000150, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000370, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, CallFunc_Conv_NameToString_ReturnValue) == 0x000378, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, CallFunc_BreakVector2D_X) == 0x000388, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, CallFunc_BreakVector2D_Y) == 0x000390, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, CallFunc_Concat_StrStr_ReturnValue) == 0x000398, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, CallFunc_FTrunc_ReturnValue) == 0x0003A8, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0003B0, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, CallFunc_FTrunc_ReturnValue_1) == 0x0003C0, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, Temp_int_Array_Index_Variable_2) == 0x0003C4, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, CallFunc_Array_Get_Item_2) == 0x0003C8, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, K2Node_MakeStruct_DefaultItemInfo) == 0x000430, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::K2Node_MakeStruct_DefaultItemInfo' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000470, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000690, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, CallFunc_Array_Add_ReturnValue) == 0x000694, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000698, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, K2Node_MakeStruct_DefaultItemInfo_1) == 0x0006A8, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::K2Node_MakeStruct_DefaultItemInfo_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0006E8, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, CallFunc_Array_Add_ReturnValue_1) == 0x0006F8, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000700, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, CallFunc_Array_Add_ReturnValue_2) == 0x000710, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, CallFunc_Array_IsNotEmpty_ReturnValue_1) == 0x000714, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::CallFunc_Array_IsNotEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPMainContainerBox_C_UpdateContainerData__OnlyServer_, CallFunc_Array_Add_ReturnValue_3) == 0x000718, "Member 'MPMainContainerBox_C_UpdateContainerData__OnlyServer_::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");

}

