#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ChatEntry

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_classes.hpp"
#include "ChatType_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_ChatEntry.W_ChatEntry_C
// 0x0078 (0x02F8 - 0x0280)
class UW_ChatEntry_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UMultiLineEditableText*                 MultiLineEditable_ChatEntry;                       // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextStatus;                                        // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   Text_Status;                                       // 0x0298(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn)
	class FText                                   Text_ChatEntry;                                    // 0x02B0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn)
	FMulticastInlineDelegateProperty_             OnTextCommitted_ChatEntry_;                        // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	EChatType                                     ChatType;                                          // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_2D9[0x7];                                      // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnChangeChatType;                                  // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         MaxCharacters;                                     // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__W_ChatEntry_MultiLineEditable_ChatEntry_K2Node_ComponentBoundEvent_1_OnMultiLineEditableTextCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void BndEvt__W_ChatEntry_MultiLineEditable_ChatEntry_K2Node_ComponentBoundEvent_3_OnMultiLineEditableTextChangedEvent__DelegateSignature(const class FText& Text);
	void ExecuteUbergraph_W_ChatEntry(int32 EntryPoint);
	void OnChangeChatType__DelegateSignature();
	struct FEventReply OnPreviewKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void OnTextCommitted_ChatEntry___DelegateSignature(const class FText& Text, ETextCommit Commit_method);
	void PreConstruct(bool IsDesignTime);
	void SetChatType();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_ChatEntry_C">();
	}
	static class UW_ChatEntry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_ChatEntry_C>();
	}
};
static_assert(alignof(UW_ChatEntry_C) == 0x000008, "Wrong alignment on UW_ChatEntry_C");
static_assert(sizeof(UW_ChatEntry_C) == 0x0002F8, "Wrong size on UW_ChatEntry_C");
static_assert(offsetof(UW_ChatEntry_C, UberGraphFrame) == 0x000280, "Member 'UW_ChatEntry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_ChatEntry_C, MultiLineEditable_ChatEntry) == 0x000288, "Member 'UW_ChatEntry_C::MultiLineEditable_ChatEntry' has a wrong offset!");
static_assert(offsetof(UW_ChatEntry_C, TextStatus) == 0x000290, "Member 'UW_ChatEntry_C::TextStatus' has a wrong offset!");
static_assert(offsetof(UW_ChatEntry_C, Text_Status) == 0x000298, "Member 'UW_ChatEntry_C::Text_Status' has a wrong offset!");
static_assert(offsetof(UW_ChatEntry_C, Text_ChatEntry) == 0x0002B0, "Member 'UW_ChatEntry_C::Text_ChatEntry' has a wrong offset!");
static_assert(offsetof(UW_ChatEntry_C, OnTextCommitted_ChatEntry_) == 0x0002C8, "Member 'UW_ChatEntry_C::OnTextCommitted_ChatEntry_' has a wrong offset!");
static_assert(offsetof(UW_ChatEntry_C, ChatType) == 0x0002D8, "Member 'UW_ChatEntry_C::ChatType' has a wrong offset!");
static_assert(offsetof(UW_ChatEntry_C, OnChangeChatType) == 0x0002E0, "Member 'UW_ChatEntry_C::OnChangeChatType' has a wrong offset!");
static_assert(offsetof(UW_ChatEntry_C, MaxCharacters) == 0x0002F0, "Member 'UW_ChatEntry_C::MaxCharacters' has a wrong offset!");

}

