#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimBP_DeerM

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "E_DeerState_structs.hpp"
#include "AnimBP_DeerM_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass AnimBP_DeerM.AnimBP_DeerM_C
// 0x1710 (0x1A60 - 0x0350)
class UAnimBP_DeerM_C final : public UAnimInstance
{
public:
	uint8                                         Pad_348[0x8];                                      // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct AnimBP_DeerM::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0358(0x0014)(HasGetValueTypeHash)
	uint8                                         Pad_36C[0x4];                                      // 0x036C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0370(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0378(0x0008)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0380(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x03A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x03D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x03F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0420(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0448(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0470(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0498(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x04C0(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x04E8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x0530(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x0578(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x05C0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x05E0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0628(0x0020)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt_1;                    // 0x0648(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x0690(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x06D8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0720(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0768(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0788(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x07D0(0x0020)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt;                      // 0x07F0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0838(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0880(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x08C8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0910(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0930(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x09A0(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x09C0(0x00C8)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0A88(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_3;                              // 0x0AA8(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x0AF0(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x0B38(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0B80(0x0048)()
	uint8                                         Pad_BC8[0x8];                                      // 0x0BC8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_LookAt                       AnimGraphNode_LookAt_1;                            // 0x0BD0(0x0250)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x0E20(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_4;                        // 0x0E40(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_3;                        // 0x0F68(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x1090(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x11B8(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x12E0(0x0128)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x1408(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x1428(0x0020)()
	uint8                                         Pad_1448[0x8];                                     // 0x1448(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_LookAt                       AnimGraphNode_LookAt;                              // 0x1450(0x0250)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x16A0(0x0020)()
	E_DeerState                                   K2Node_PropertyAccess_8;                           // 0x16C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_DeerState                                   K2Node_PropertyAccess_7;                           // 0x16C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_DeerState                                   K2Node_PropertyAccess_6;                           // 0x16C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_DeerState                                   K2Node_PropertyAccess_5;                           // 0x16C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_DeerState                                   K2Node_PropertyAccess_4;                           // 0x16C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_DeerState                                   K2Node_PropertyAccess_3;                           // 0x16C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_DeerState                                   K2Node_PropertyAccess_2;                           // 0x16C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C7[0x1];                                     // 0x16C7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_PropertyAccess_1;                           // 0x16C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_PropertyAccess;                             // 0x16D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16D4[0x4];                                     // 0x16D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        SurfaceTypeParam;                                  // 0x16D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RandomRestIdle;                                    // 0x16E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RandomEatingIdle;                                  // 0x16E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RandomDeath;                                       // 0x16E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16E9[0x7];                                     // 0x16E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAIMovementComponent_C*                 AIMC;                                              // 0x16F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        VelocityValue;                                     // 0x16F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Interp;                                            // 0x1700(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Lean;                                              // 0x1708(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Target;                                            // 0x1710(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CharacterRotation;                                 // 0x1718(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               CharacterRotationLastFrame;                        // 0x1730(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	double                                        DeerLookingAlpha;                                  // 0x1748(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DeerV2_C*                           DeerV2;                                            // 0x1750(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsFalling;                                        // 0x1758(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1759[0x7];                                     // 0x1759(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CenterBodyTrace;                                   // 0x1760(0x00E8)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             FrontBodyTrace;                                    // 0x1848(0x00E8)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             BackBodyTraceHit;                                  // 0x1930(0x00E8)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CapsuleRadius;                                     // 0x1A18(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CapsuleHalfHeight;                                 // 0x1A1C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RootCorrection;                                    // 0x1A20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BodyAngle;                                         // 0x1A28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowTraces;                                       // 0x1A30(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A31[0x7];                                     // 0x1A31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        BackCenterDelta;                                   // 0x1A38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LookAtLocation;                                    // 0x1A40(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LookAtAlpha;                                       // 0x1A58(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BodyToFloorTickTime;                               // 0x1A5C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void AnimNotify_deer_run();
	void AnimNotify_deer_walk();
	void AnimNotify_EnteredIdle();
	void AnimNotify_EnteringEating();
	void AnimNotify_EnteringResting();
	void BlueprintInitializeAnimation();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	bool CalculateBackBodyTrace(struct FHitResult* OutHit);
	void CalculateBodyToFloor();
	bool CalculateCenterBodyTrace(struct FHitResult* OutHit);
	bool CalculateFrontBodyTrace(struct FHitResult* OutHit);
	void CalculateLeaning(double DeltaTime);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AnimBP_DeerM_AnimGraphNode_LookAt_300612154DB615B1C4413BB56F05FBD7();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AnimBP_DeerM_AnimGraphNode_LookAt_562E2CA640B85298031A5DB19DDBCCE9();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AnimBP_DeerM_AnimGraphNode_ModifyBone_E31CC5FA44BE4AF717302A820D0855E3();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AnimBP_DeerM_AnimGraphNode_TransitionResult_06E58D25418C7E0C029BC798DD4CA000();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AnimBP_DeerM_AnimGraphNode_TransitionResult_27772173443043D8637CCCBE92838DBB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AnimBP_DeerM_AnimGraphNode_TransitionResult_40C2E67E4EF8B5D98E56C88E79988B61();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AnimBP_DeerM_AnimGraphNode_TransitionResult_8912BD004D85E56271E4979292C683B0();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AnimBP_DeerM_AnimGraphNode_TransitionResult_9FD6F1EC44F74430BE0C82B87DE9F2C5();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AnimBP_DeerM_AnimGraphNode_TransitionResult_A292EDEE452DC5A5DB9996BAE94B70C3();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AnimBP_DeerM_AnimGraphNode_TransitionResult_F02B2EE54311C2DC6C454D97C2962E12();
	void ExecuteUbergraph_AnimBP_DeerM(int32 EntryPoint);
	void TimerFuncBodyToFloor();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AnimBP_DeerM_C">();
	}
	static class UAnimBP_DeerM_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimBP_DeerM_C>();
	}
};
static_assert(alignof(UAnimBP_DeerM_C) == 0x000010, "Wrong alignment on UAnimBP_DeerM_C");
static_assert(sizeof(UAnimBP_DeerM_C) == 0x001A60, "Wrong size on UAnimBP_DeerM_C");
static_assert(offsetof(UAnimBP_DeerM_C, UberGraphFrame) == 0x000350, "Member 'UAnimBP_DeerM_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, __AnimBlueprintMutables) == 0x000358, "Member 'UAnimBP_DeerM_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimBlueprintExtension_PropertyAccess) == 0x000370, "Member 'UAnimBP_DeerM_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimBlueprintExtension_Base) == 0x000378, "Member 'UAnimBP_DeerM_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimGraphNode_TransitionResult_8) == 0x000380, "Member 'UAnimBP_DeerM_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimGraphNode_TransitionResult_7) == 0x0003A8, "Member 'UAnimBP_DeerM_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimGraphNode_TransitionResult_6) == 0x0003D0, "Member 'UAnimBP_DeerM_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimGraphNode_TransitionResult_5) == 0x0003F8, "Member 'UAnimBP_DeerM_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimGraphNode_TransitionResult_4) == 0x000420, "Member 'UAnimBP_DeerM_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimGraphNode_TransitionResult_3) == 0x000448, "Member 'UAnimBP_DeerM_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimGraphNode_TransitionResult_2) == 0x000470, "Member 'UAnimBP_DeerM_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimGraphNode_TransitionResult_1) == 0x000498, "Member 'UAnimBP_DeerM_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimGraphNode_TransitionResult) == 0x0004C0, "Member 'UAnimBP_DeerM_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimGraphNode_BlendListByBool) == 0x0004E8, "Member 'UAnimBP_DeerM_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimGraphNode_SequencePlayer_9) == 0x000530, "Member 'UAnimBP_DeerM_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimGraphNode_SequencePlayer_8) == 0x000578, "Member 'UAnimBP_DeerM_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimGraphNode_StateResult_5) == 0x0005C0, "Member 'UAnimBP_DeerM_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimGraphNode_SequencePlayer_7) == 0x0005E0, "Member 'UAnimBP_DeerM_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimGraphNode_StateResult_4) == 0x000628, "Member 'UAnimBP_DeerM_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimGraphNode_BlendListByInt_1) == 0x000648, "Member 'UAnimBP_DeerM_C::AnimGraphNode_BlendListByInt_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimGraphNode_SequencePlayer_6) == 0x000690, "Member 'UAnimBP_DeerM_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimGraphNode_SequencePlayer_5) == 0x0006D8, "Member 'UAnimBP_DeerM_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimGraphNode_SequencePlayer_4) == 0x000720, "Member 'UAnimBP_DeerM_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimGraphNode_StateResult_3) == 0x000768, "Member 'UAnimBP_DeerM_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimGraphNode_SequencePlayer_3) == 0x000788, "Member 'UAnimBP_DeerM_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimGraphNode_StateResult_2) == 0x0007D0, "Member 'UAnimBP_DeerM_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimGraphNode_BlendListByInt) == 0x0007F0, "Member 'UAnimBP_DeerM_C::AnimGraphNode_BlendListByInt' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimGraphNode_SequencePlayer_2) == 0x000838, "Member 'UAnimBP_DeerM_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimGraphNode_SequencePlayer_1) == 0x000880, "Member 'UAnimBP_DeerM_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimGraphNode_SequencePlayer) == 0x0008C8, "Member 'UAnimBP_DeerM_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimGraphNode_StateResult_1) == 0x000910, "Member 'UAnimBP_DeerM_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimGraphNode_BlendSpacePlayer) == 0x000930, "Member 'UAnimBP_DeerM_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimGraphNode_StateResult) == 0x0009A0, "Member 'UAnimBP_DeerM_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimGraphNode_StateMachine) == 0x0009C0, "Member 'UAnimBP_DeerM_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimGraphNode_Root) == 0x000A88, "Member 'UAnimBP_DeerM_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimGraphNode_Slot_3) == 0x000AA8, "Member 'UAnimBP_DeerM_C::AnimGraphNode_Slot_3' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimGraphNode_Slot_2) == 0x000AF0, "Member 'UAnimBP_DeerM_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimGraphNode_Slot_1) == 0x000B38, "Member 'UAnimBP_DeerM_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimGraphNode_Slot) == 0x000B80, "Member 'UAnimBP_DeerM_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimGraphNode_LookAt_1) == 0x000BD0, "Member 'UAnimBP_DeerM_C::AnimGraphNode_LookAt_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x000E20, "Member 'UAnimBP_DeerM_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimGraphNode_ModifyBone_4) == 0x000E40, "Member 'UAnimBP_DeerM_C::AnimGraphNode_ModifyBone_4' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimGraphNode_ModifyBone_3) == 0x000F68, "Member 'UAnimBP_DeerM_C::AnimGraphNode_ModifyBone_3' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimGraphNode_ModifyBone_2) == 0x001090, "Member 'UAnimBP_DeerM_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimGraphNode_ModifyBone_1) == 0x0011B8, "Member 'UAnimBP_DeerM_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimGraphNode_ModifyBone) == 0x0012E0, "Member 'UAnimBP_DeerM_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimGraphNode_LocalToComponentSpace_1) == 0x001408, "Member 'UAnimBP_DeerM_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimGraphNode_ComponentToLocalSpace) == 0x001428, "Member 'UAnimBP_DeerM_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimGraphNode_LookAt) == 0x001450, "Member 'UAnimBP_DeerM_C::AnimGraphNode_LookAt' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AnimGraphNode_LocalToComponentSpace) == 0x0016A0, "Member 'UAnimBP_DeerM_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, K2Node_PropertyAccess_8) == 0x0016C0, "Member 'UAnimBP_DeerM_C::K2Node_PropertyAccess_8' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, K2Node_PropertyAccess_7) == 0x0016C1, "Member 'UAnimBP_DeerM_C::K2Node_PropertyAccess_7' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, K2Node_PropertyAccess_6) == 0x0016C2, "Member 'UAnimBP_DeerM_C::K2Node_PropertyAccess_6' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, K2Node_PropertyAccess_5) == 0x0016C3, "Member 'UAnimBP_DeerM_C::K2Node_PropertyAccess_5' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, K2Node_PropertyAccess_4) == 0x0016C4, "Member 'UAnimBP_DeerM_C::K2Node_PropertyAccess_4' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, K2Node_PropertyAccess_3) == 0x0016C5, "Member 'UAnimBP_DeerM_C::K2Node_PropertyAccess_3' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, K2Node_PropertyAccess_2) == 0x0016C6, "Member 'UAnimBP_DeerM_C::K2Node_PropertyAccess_2' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, K2Node_PropertyAccess_1) == 0x0016C8, "Member 'UAnimBP_DeerM_C::K2Node_PropertyAccess_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, K2Node_PropertyAccess) == 0x0016D0, "Member 'UAnimBP_DeerM_C::K2Node_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, SurfaceTypeParam) == 0x0016D8, "Member 'UAnimBP_DeerM_C::SurfaceTypeParam' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, RandomRestIdle) == 0x0016E0, "Member 'UAnimBP_DeerM_C::RandomRestIdle' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, RandomEatingIdle) == 0x0016E4, "Member 'UAnimBP_DeerM_C::RandomEatingIdle' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, RandomDeath) == 0x0016E8, "Member 'UAnimBP_DeerM_C::RandomDeath' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, AIMC) == 0x0016F0, "Member 'UAnimBP_DeerM_C::AIMC' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, VelocityValue) == 0x0016F8, "Member 'UAnimBP_DeerM_C::VelocityValue' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, Interp) == 0x001700, "Member 'UAnimBP_DeerM_C::Interp' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, Lean) == 0x001708, "Member 'UAnimBP_DeerM_C::Lean' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, Target) == 0x001710, "Member 'UAnimBP_DeerM_C::Target' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, CharacterRotation) == 0x001718, "Member 'UAnimBP_DeerM_C::CharacterRotation' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, CharacterRotationLastFrame) == 0x001730, "Member 'UAnimBP_DeerM_C::CharacterRotationLastFrame' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, DeerLookingAlpha) == 0x001748, "Member 'UAnimBP_DeerM_C::DeerLookingAlpha' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, DeerV2) == 0x001750, "Member 'UAnimBP_DeerM_C::DeerV2' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, bIsFalling) == 0x001758, "Member 'UAnimBP_DeerM_C::bIsFalling' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, CenterBodyTrace) == 0x001760, "Member 'UAnimBP_DeerM_C::CenterBodyTrace' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, FrontBodyTrace) == 0x001848, "Member 'UAnimBP_DeerM_C::FrontBodyTrace' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, BackBodyTraceHit) == 0x001930, "Member 'UAnimBP_DeerM_C::BackBodyTraceHit' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, CapsuleRadius) == 0x001A18, "Member 'UAnimBP_DeerM_C::CapsuleRadius' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, CapsuleHalfHeight) == 0x001A1C, "Member 'UAnimBP_DeerM_C::CapsuleHalfHeight' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, RootCorrection) == 0x001A20, "Member 'UAnimBP_DeerM_C::RootCorrection' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, BodyAngle) == 0x001A28, "Member 'UAnimBP_DeerM_C::BodyAngle' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, bShowTraces) == 0x001A30, "Member 'UAnimBP_DeerM_C::bShowTraces' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, BackCenterDelta) == 0x001A38, "Member 'UAnimBP_DeerM_C::BackCenterDelta' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, LookAtLocation) == 0x001A40, "Member 'UAnimBP_DeerM_C::LookAtLocation' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, LookAtAlpha) == 0x001A58, "Member 'UAnimBP_DeerM_C::LookAtAlpha' has a wrong offset!");
static_assert(offsetof(UAnimBP_DeerM_C, BodyToFloorTickTime) == 0x001A5C, "Member 'UAnimBP_DeerM_C::BodyToFloorTickTime' has a wrong offset!");

}

