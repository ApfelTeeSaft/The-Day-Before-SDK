#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AscentDialogueSystem

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_classes.hpp"
#include "AGSGraphRuntime_classes.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class AscentDialogueSystem.ADSDialogueWidgetInterface
// 0x0000 (0x0028 - 0x0028)
class IADSDialogueWidgetInterface final : public IInterface
{
public:
	void SetupWithDialogue(class UADSDialogue* DialogueToPlay);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ADSDialogueWidgetInterface">();
	}
	static class IADSDialogueWidgetInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IADSDialogueWidgetInterface>();
	}
};
static_assert(alignof(IADSDialogueWidgetInterface) == 0x000008, "Wrong alignment on IADSDialogueWidgetInterface");
static_assert(sizeof(IADSDialogueWidgetInterface) == 0x000028, "Wrong size on IADSDialogueWidgetInterface");

// Class AscentDialogueSystem.ADSDialogue
// 0x00A0 (0x0148 - 0x00A8)
class UADSDialogue final : public UAGSGraph
{
public:
	FMulticastInlineDelegateProperty_             OnDialogueStarted;                                 // 0x00A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnDialogueEnded;                                   // 0x00B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnDialogueNodeActivated;                           // 0x00C8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGameplayTag                           DialogueTag;                                       // 0x00D8(0x0008)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, class UADSDialoguePartecipantComponent*> PartecipantsRef;                                   // 0x00E0(0x0050)(ExportObject, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UADSGraphNode*                          CurrentNode;                                       // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UADSStartDialogueNode*                  CurrentDialogueStart;                              // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_140[0x8];                                      // 0x0140(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UADSDialogueNode* MoveToNextNode();
	class UAGSGraphNode* StartDialogue(class APlayerController* InController, const TArray<class UADSDialoguePartecipantComponent*>& Participants);

	class UADSDialoguePartecipantComponent* FindPartecipant(const struct FGameplayTag& PartecipantTag) const;
	TArray<class UADSDialogueResponseNode*> GetAllButtonAnswersForCurrentNode() const;
	class UADSGraphNode* GetCurrentNode() const;
	struct FGameplayTag GetDialogueTag() const;
	bool HasPartecipant(const struct FGameplayTag& PartecipantTag) const;
	bool IsDialogueStarted() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ADSDialogue">();
	}
	static class UADSDialogue* GetDefaultObj()
	{
		return GetDefaultObjImpl<UADSDialogue>();
	}
};
static_assert(alignof(UADSDialogue) == 0x000008, "Wrong alignment on UADSDialogue");
static_assert(sizeof(UADSDialogue) == 0x000148, "Wrong size on UADSDialogue");
static_assert(offsetof(UADSDialogue, OnDialogueStarted) == 0x0000A8, "Member 'UADSDialogue::OnDialogueStarted' has a wrong offset!");
static_assert(offsetof(UADSDialogue, OnDialogueEnded) == 0x0000B8, "Member 'UADSDialogue::OnDialogueEnded' has a wrong offset!");
static_assert(offsetof(UADSDialogue, OnDialogueNodeActivated) == 0x0000C8, "Member 'UADSDialogue::OnDialogueNodeActivated' has a wrong offset!");
static_assert(offsetof(UADSDialogue, DialogueTag) == 0x0000D8, "Member 'UADSDialogue::DialogueTag' has a wrong offset!");
static_assert(offsetof(UADSDialogue, PartecipantsRef) == 0x0000E0, "Member 'UADSDialogue::PartecipantsRef' has a wrong offset!");
static_assert(offsetof(UADSDialogue, CurrentNode) == 0x000130, "Member 'UADSDialogue::CurrentNode' has a wrong offset!");
static_assert(offsetof(UADSDialogue, CurrentDialogueStart) == 0x000138, "Member 'UADSDialogue::CurrentDialogueStart' has a wrong offset!");

// Class AscentDialogueSystem.ADSGraphEdge
// 0x0010 (0x0050 - 0x0040)
class UADSGraphEdge final : public UAGSGraphEdge
{
public:
	TArray<class UAGSCondition*>                  ActivationConditions;                              // 0x0040(0x0010)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

public:
	bool CanBeActivated(class APlayerController* Controller) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ADSGraphEdge">();
	}
	static class UADSGraphEdge* GetDefaultObj()
	{
		return GetDefaultObjImpl<UADSGraphEdge>();
	}
};
static_assert(alignof(UADSGraphEdge) == 0x000008, "Wrong alignment on UADSGraphEdge");
static_assert(sizeof(UADSGraphEdge) == 0x000050, "Wrong size on UADSGraphEdge");
static_assert(offsetof(UADSGraphEdge, ActivationConditions) == 0x000040, "Member 'UADSGraphEdge::ActivationConditions' has a wrong offset!");

// Class AscentDialogueSystem.ADSGraphNode
// 0x0070 (0x0118 - 0x00A8)
class UADSGraphNode : public UAGSGraphNode
{
public:
	struct FGameplayTag                           PartecipantTag;                                    // 0x00A8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UAGSAction*>                     ActivationActions;                                 // 0x00B0(0x0010)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class USoundCue*                              SoundToPlay;                                       // 0x00C0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                           Animation;                                         // 0x00C8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                   Text;                                              // 0x00D0(0x0018)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class APlayerController*                      Controller;                                        // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_F0[0x18];                                      // 0x00F0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UADSDialoguePartecipantComponent*       Partecipant;                                       // 0x0108(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAudioComponent*                        AudioPlayer;                                       // 0x0110(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	bool CanBeActivated(class APlayerController* InController);

	class UADSDialoguePartecipantComponent* GetDialogueParticipant() const;
	class FText GetDialogueText() const;
	class USoundCue* GetSoundToPlay() const;
	bool IsLocalPlayerPartecipant() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ADSGraphNode">();
	}
	static class UADSGraphNode* GetDefaultObj()
	{
		return GetDefaultObjImpl<UADSGraphNode>();
	}
};
static_assert(alignof(UADSGraphNode) == 0x000008, "Wrong alignment on UADSGraphNode");
static_assert(sizeof(UADSGraphNode) == 0x000118, "Wrong size on UADSGraphNode");
static_assert(offsetof(UADSGraphNode, PartecipantTag) == 0x0000A8, "Member 'UADSGraphNode::PartecipantTag' has a wrong offset!");
static_assert(offsetof(UADSGraphNode, ActivationActions) == 0x0000B0, "Member 'UADSGraphNode::ActivationActions' has a wrong offset!");
static_assert(offsetof(UADSGraphNode, SoundToPlay) == 0x0000C0, "Member 'UADSGraphNode::SoundToPlay' has a wrong offset!");
static_assert(offsetof(UADSGraphNode, Animation) == 0x0000C8, "Member 'UADSGraphNode::Animation' has a wrong offset!");
static_assert(offsetof(UADSGraphNode, Text) == 0x0000D0, "Member 'UADSGraphNode::Text' has a wrong offset!");
static_assert(offsetof(UADSGraphNode, Controller) == 0x0000E8, "Member 'UADSGraphNode::Controller' has a wrong offset!");
static_assert(offsetof(UADSGraphNode, Partecipant) == 0x000108, "Member 'UADSGraphNode::Partecipant' has a wrong offset!");
static_assert(offsetof(UADSGraphNode, AudioPlayer) == 0x000110, "Member 'UADSGraphNode::AudioPlayer' has a wrong offset!");

// Class AscentDialogueSystem.ADSDialogueNode
// 0x0000 (0x0118 - 0x0118)
class UADSDialogueNode : public UADSGraphNode
{
public:
	TArray<class UADSDialogueResponseNode*> GetAllValidAnswers(class APlayerController* InController);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ADSDialogueNode">();
	}
	static class UADSDialogueNode* GetDefaultObj()
	{
		return GetDefaultObjImpl<UADSDialogueNode>();
	}
};
static_assert(alignof(UADSDialogueNode) == 0x000008, "Wrong alignment on UADSDialogueNode");
static_assert(sizeof(UADSDialogueNode) == 0x000118, "Wrong size on UADSDialogueNode");

// Class AscentDialogueSystem.ADSDialoguePartecipantComponent
// 0x0060 (0x0300 - 0x02A0)
class UADSDialoguePartecipantComponent : public USceneComponent
{
public:
	FMulticastInlineDelegateProperty_             OnDialogueStarted;                                 // 0x02A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnDialogueEnded;                                   // 0x02B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class UADSDialogue*>                   Dialogues;                                         // 0x02C0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FName                                   PartecipantName;                                   // 0x02D0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           PartecipantTag;                                    // 0x02D8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                             PartecipantIcon;                                   // 0x02E0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   VoiceSpawningSocketName;                           // 0x02E8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x02F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2F8[0x8];                                      // 0x02F8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ChangeParticipantIcon(class UTexture2D* Icon);
	void ChangeParticipantName(const class FName& NewName);
	class USkeletalMeshComponent* GetOwnerMesh();
	void HandleDialogueEnded();
	void HandleDialogueStarted();
	void OnDialogueEndedEvent();
	void OnDialogueStartedEvent();
	void PlayAnimationOnCharacterOwner(class UAnimMontage* AnimationTag);
	void SetParticipantSkeletalMesh(class USkeletalMeshComponent* Mesh);
	bool TryStartDialogue(const TArray<class UADSDialoguePartecipantComponent*>& Participants, class UADSDialogue* DialogueToStart);
	bool TryStartDialogueFromActors(const TArray<class AActor*>& Participants, class UADSDialogue* DialogueToStart);

	class UADSDialogue* GetDialogue(const struct FGameplayTag& DialogueTag) const;
	class UTexture2D* GetParticipantIcon() const;
	class FName GetParticipantName() const;
	struct FGameplayTag GetParticipantTag() const;
	class FName GetVoiceSpawningSocketName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ADSDialoguePartecipantComponent">();
	}
	static class UADSDialoguePartecipantComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UADSDialoguePartecipantComponent>();
	}
};
static_assert(alignof(UADSDialoguePartecipantComponent) == 0x000010, "Wrong alignment on UADSDialoguePartecipantComponent");
static_assert(sizeof(UADSDialoguePartecipantComponent) == 0x000300, "Wrong size on UADSDialoguePartecipantComponent");
static_assert(offsetof(UADSDialoguePartecipantComponent, OnDialogueStarted) == 0x0002A0, "Member 'UADSDialoguePartecipantComponent::OnDialogueStarted' has a wrong offset!");
static_assert(offsetof(UADSDialoguePartecipantComponent, OnDialogueEnded) == 0x0002B0, "Member 'UADSDialoguePartecipantComponent::OnDialogueEnded' has a wrong offset!");
static_assert(offsetof(UADSDialoguePartecipantComponent, Dialogues) == 0x0002C0, "Member 'UADSDialoguePartecipantComponent::Dialogues' has a wrong offset!");
static_assert(offsetof(UADSDialoguePartecipantComponent, PartecipantName) == 0x0002D0, "Member 'UADSDialoguePartecipantComponent::PartecipantName' has a wrong offset!");
static_assert(offsetof(UADSDialoguePartecipantComponent, PartecipantTag) == 0x0002D8, "Member 'UADSDialoguePartecipantComponent::PartecipantTag' has a wrong offset!");
static_assert(offsetof(UADSDialoguePartecipantComponent, PartecipantIcon) == 0x0002E0, "Member 'UADSDialoguePartecipantComponent::PartecipantIcon' has a wrong offset!");
static_assert(offsetof(UADSDialoguePartecipantComponent, VoiceSpawningSocketName) == 0x0002E8, "Member 'UADSDialoguePartecipantComponent::VoiceSpawningSocketName' has a wrong offset!");
static_assert(offsetof(UADSDialoguePartecipantComponent, SkeletalMesh) == 0x0002F0, "Member 'UADSDialoguePartecipantComponent::SkeletalMesh' has a wrong offset!");

// Class AscentDialogueSystem.ADSDialogueResponseNode
// 0x0008 (0x0120 - 0x0118)
class UADSDialogueResponseNode final : public UADSDialogueNode
{
public:
	bool                                          bAllowedForEveryPlayer;                            // 0x0118(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UADSDialogueNode* ResponseSelected();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ADSDialogueResponseNode">();
	}
	static class UADSDialogueResponseNode* GetDefaultObj()
	{
		return GetDefaultObjImpl<UADSDialogueResponseNode>();
	}
};
static_assert(alignof(UADSDialogueResponseNode) == 0x000008, "Wrong alignment on UADSDialogueResponseNode");
static_assert(sizeof(UADSDialogueResponseNode) == 0x000120, "Wrong size on UADSDialogueResponseNode");
static_assert(offsetof(UADSDialogueResponseNode, bAllowedForEveryPlayer) == 0x000118, "Member 'UADSDialogueResponseNode::bAllowedForEveryPlayer' has a wrong offset!");

// Class AscentDialogueSystem.ADSDialogueSubsystem
// 0x0050 (0x0080 - 0x0030)
class UADSDialogueSubsystem final : public UGameInstanceSubsystem
{
public:
	uint8                                         Pad_30[0x50];                                      // 0x0030(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UADSDialoguePartecipantComponent* FindParticipant(const struct FGameplayTag& Participant) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ADSDialogueSubsystem">();
	}
	static class UADSDialogueSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UADSDialogueSubsystem>();
	}
};
static_assert(alignof(UADSDialogueSubsystem) == 0x000008, "Wrong alignment on UADSDialogueSubsystem");
static_assert(sizeof(UADSDialogueSubsystem) == 0x000080, "Wrong size on UADSDialogueSubsystem");

// Class AscentDialogueSystem.ADSStartDialogueNode
// 0x0020 (0x0138 - 0x0118)
class UADSStartDialogueNode final : public UADSDialogueNode
{
public:
	TArray<class UAGSCondition*>                  ActivationConditions;                              // 0x0118(0x0010)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UAGSAction*>                     DialogueEndedActions;                              // 0x0128(0x0010)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ADSStartDialogueNode">();
	}
	static class UADSStartDialogueNode* GetDefaultObj()
	{
		return GetDefaultObjImpl<UADSStartDialogueNode>();
	}
};
static_assert(alignof(UADSStartDialogueNode) == 0x000008, "Wrong alignment on UADSStartDialogueNode");
static_assert(sizeof(UADSStartDialogueNode) == 0x000138, "Wrong size on UADSStartDialogueNode");
static_assert(offsetof(UADSStartDialogueNode, ActivationConditions) == 0x000118, "Member 'UADSStartDialogueNode::ActivationConditions' has a wrong offset!");
static_assert(offsetof(UADSStartDialogueNode, DialogueEndedActions) == 0x000128, "Member 'UADSStartDialogueNode::DialogueEndedActions' has a wrong offset!");

}

