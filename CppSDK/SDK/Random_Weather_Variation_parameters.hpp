#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Random_Weather_Variation

#include "Basic.hpp"

#include "UDS_WeatherTypes_structs.hpp"
#include "UDS_Season_structs.hpp"


namespace SDK::Params
{

// Function Random_Weather_Variation.Random_Weather_Variation_C.ExecuteUbergraph_Random_Weather_Variation
// 0x0178 (0x0178 - 0x0000)
struct Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AUltra_Dynamic_Weather_C*               CallFunc_GetActorOfClass_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AUltra_Dynamic_Weather_C*               K2Node_CustomEvent_UDW;                            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<EUDS_WeatherTypes, double>               K2Node_CustomEvent_Summer_Probabilities;           // 0x0020(0x0050)()
	TMap<EUDS_WeatherTypes, double>               K2Node_CustomEvent_Autumn_Probabilities;           // 0x0070(0x0050)()
	TMap<EUDS_WeatherTypes, double>               K2Node_CustomEvent_Winter_Probabilities;           // 0x00C0(0x0050)()
	TMap<EUDS_WeatherTypes, double>               K2Node_CustomEvent_Spring_Probabilities;           // 0x0110(0x0050)()
	bool                                          K2Node_CustomEvent_Start_with_Random_Type;         // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation) == 0x000008, "Wrong alignment on Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation");
static_assert(sizeof(Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation) == 0x000178, "Wrong size on Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation");
static_assert(offsetof(Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation, EntryPoint) == 0x000000, "Member 'Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation::EntryPoint' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation, CallFunc_GetActorOfClass_ReturnValue) == 0x000008, "Member 'Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation, CallFunc_IsServer_ReturnValue) == 0x000010, "Member 'Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation, K2Node_CustomEvent_UDW) == 0x000018, "Member 'Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation::K2Node_CustomEvent_UDW' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation, K2Node_CustomEvent_Summer_Probabilities) == 0x000020, "Member 'Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation::K2Node_CustomEvent_Summer_Probabilities' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation, K2Node_CustomEvent_Autumn_Probabilities) == 0x000070, "Member 'Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation::K2Node_CustomEvent_Autumn_Probabilities' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation, K2Node_CustomEvent_Winter_Probabilities) == 0x0000C0, "Member 'Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation::K2Node_CustomEvent_Winter_Probabilities' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation, K2Node_CustomEvent_Spring_Probabilities) == 0x000110, "Member 'Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation::K2Node_CustomEvent_Spring_Probabilities' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation, K2Node_CustomEvent_Start_with_Random_Type) == 0x000160, "Member 'Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation::K2Node_CustomEvent_Start_with_Random_Type' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation, K2Node_Event_DeltaSeconds) == 0x000164, "Member 'Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation, CallFunc_RandomFloatInRange_ReturnValue) == 0x000168, "Member 'Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation, CallFunc_Delay_Duration_ImplicitCast) == 0x000170, "Member 'Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.Increment Random Weather
// 0x00F0 (0x00F0 - 0x0000)
struct Random_Weather_Variation_C_Increment_Random_Weather final
{
public:
	double                                        Eased_Lerp_Alpha;                                  // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Target_Material_Snow;                              // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Target_Material_Wetness;                           // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Target_Wind_Intensity;                             // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Param__Snow;                                       // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Target_Cloud_Coverage;                             // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Target_Weather_Intensity;                          // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Ease_ReturnValue;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EUDS_WeatherTypes>                     K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ConstParm, ReferenceParm)
	double                                        CallFunc_Get_Weather_Preset_Weather_Intensity;     // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Weather_Preset_Cloud_Coverage;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Weather_Preset_Rain___Snow;           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Weather_Preset_Wind_Intensity;        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Weather_Preset_Material_Wetness;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Weather_Preset_Material_Snow;         // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_3;                       // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_4;                       // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_5;                       // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_Increment_Random_Weather) == 0x000008, "Wrong alignment on Random_Weather_Variation_C_Increment_Random_Weather");
static_assert(sizeof(Random_Weather_Variation_C_Increment_Random_Weather) == 0x0000F0, "Wrong size on Random_Weather_Variation_C_Increment_Random_Weather");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, Eased_Lerp_Alpha) == 0x000000, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::Eased_Lerp_Alpha' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, Target_Material_Snow) == 0x000008, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::Target_Material_Snow' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, Target_Material_Wetness) == 0x000010, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::Target_Material_Wetness' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, Target_Wind_Intensity) == 0x000018, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::Target_Wind_Intensity' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, Param__Snow) == 0x000020, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::Param__Snow' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, Target_Cloud_Coverage) == 0x000028, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::Target_Cloud_Coverage' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, Target_Weather_Intensity) == 0x000030, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::Target_Weather_Intensity' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_Ease_ReturnValue) == 0x000038, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000040, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000048, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000050, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000058, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000060, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_Lerp_ReturnValue) == 0x000068, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_FClamp_ReturnValue) == 0x000070, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_Lerp_ReturnValue_1) == 0x000078, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, K2Node_MakeArray_Array) == 0x000080, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_Get_Weather_Preset_Weather_Intensity) == 0x000090, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_Get_Weather_Preset_Weather_Intensity' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_Get_Weather_Preset_Cloud_Coverage) == 0x000098, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_Get_Weather_Preset_Cloud_Coverage' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_Get_Weather_Preset_Rain___Snow) == 0x0000A0, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_Get_Weather_Preset_Rain___Snow' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_Get_Weather_Preset_Wind_Intensity) == 0x0000A8, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_Get_Weather_Preset_Wind_Intensity' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_Get_Weather_Preset_Material_Wetness) == 0x0000B0, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_Get_Weather_Preset_Material_Wetness' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_Get_Weather_Preset_Material_Snow) == 0x0000B8, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_Get_Weather_Preset_Material_Snow' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_Array_Contains_ReturnValue) == 0x0000C0, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_Lerp_ReturnValue_2) == 0x0000C8, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_Lerp_ReturnValue_3) == 0x0000D0, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_SelectFloat_ReturnValue) == 0x0000D8, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_Lerp_ReturnValue_4) == 0x0000E0, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_Lerp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_Lerp_ReturnValue_5) == 0x0000E8, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_Lerp_ReturnValue_5' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.Initialize
// 0x0150 (0x0150 - 0x0000)
struct Random_Weather_Variation_C_Initialize final
{
public:
	class AUltra_Dynamic_Weather_C*               Param_UDW;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<EUDS_WeatherTypes, double>               Summer_Probabilities;                              // 0x0008(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	TMap<EUDS_WeatherTypes, double>               Autumn_Probabilities;                              // 0x0058(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	TMap<EUDS_WeatherTypes, double>               Winter_Probabilities;                              // 0x00A8(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	TMap<EUDS_WeatherTypes, double>               Spring_Probabilities;                              // 0x00F8(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Start_with_Random_Type;                            // 0x0148(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_Initialize) == 0x000008, "Wrong alignment on Random_Weather_Variation_C_Initialize");
static_assert(sizeof(Random_Weather_Variation_C_Initialize) == 0x000150, "Wrong size on Random_Weather_Variation_C_Initialize");
static_assert(offsetof(Random_Weather_Variation_C_Initialize, Param_UDW) == 0x000000, "Member 'Random_Weather_Variation_C_Initialize::Param_UDW' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Initialize, Summer_Probabilities) == 0x000008, "Member 'Random_Weather_Variation_C_Initialize::Summer_Probabilities' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Initialize, Autumn_Probabilities) == 0x000058, "Member 'Random_Weather_Variation_C_Initialize::Autumn_Probabilities' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Initialize, Winter_Probabilities) == 0x0000A8, "Member 'Random_Weather_Variation_C_Initialize::Winter_Probabilities' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Initialize, Spring_Probabilities) == 0x0000F8, "Member 'Random_Weather_Variation_C_Initialize::Spring_Probabilities' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Initialize, Start_with_Random_Type) == 0x000148, "Member 'Random_Weather_Variation_C_Initialize::Start_with_Random_Type' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Random_Weather_Variation_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_ReceiveTick) == 0x000004, "Wrong alignment on Random_Weather_Variation_C_ReceiveTick");
static_assert(sizeof(Random_Weather_Variation_C_ReceiveTick) == 0x000004, "Wrong size on Random_Weather_Variation_C_ReceiveTick");
static_assert(offsetof(Random_Weather_Variation_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Random_Weather_Variation_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.Select New Random Weather Type
// 0x01B0 (0x01B0 - 0x0000)
struct Random_Weather_Variation_C_Select_New_Random_Weather_Type final
{
public:
	bool                                          Filter_Probability_List;                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Threshold;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Random_Float;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Random_Max_Range;                                  // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<EUDS_WeatherTypes, double>               Current_Probabilities;                             // 0x0020(0x0050)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EUDS_WeatherTypes>                     K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EUDS_WeatherTypes, double>               CallFunc_Filter_Probability_Map_Filtered_Probability_Map; // 0x00A0(0x0050)()
	TArray<EUDS_WeatherTypes>                     CallFunc_Map_Keys_Keys;                            // 0x00F0(0x0010)(ReferenceParm)
	TArray<double>                                CallFunc_Map_Values_Values;                        // 0x0100(0x0010)(ReferenceParm)
	EUDS_WeatherTypes                             CallFunc_Array_Get_Item;                           // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Map_Find_Value;                           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12A[0x2];                                      // 0x012A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item_1;                         // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Season                                   Temp_byte_Variable;                                // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x014D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14E[0x2];                                      // 0x014E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EUDS_WeatherTypes, double>               K2Node_Select_Default;                             // 0x0150(0x0050)()
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A5[0x3];                                      // 0x01A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_Select_New_Random_Weather_Type) == 0x000008, "Wrong alignment on Random_Weather_Variation_C_Select_New_Random_Weather_Type");
static_assert(sizeof(Random_Weather_Variation_C_Select_New_Random_Weather_Type) == 0x0001B0, "Wrong size on Random_Weather_Variation_C_Select_New_Random_Weather_Type");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, Filter_Probability_List) == 0x000000, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::Filter_Probability_List' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, Threshold) == 0x000008, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::Threshold' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, Random_Float) == 0x000010, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::Random_Float' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, Random_Max_Range) == 0x000018, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::Random_Max_Range' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, Current_Probabilities) == 0x000020, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::Current_Probabilities' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, Temp_int_Loop_Counter_Variable) == 0x000070, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, Temp_bool_True_if_break_was_hit_Variable) == 0x000078, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, Temp_int_Array_Index_Variable) == 0x00007C, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Not_PreBool_ReturnValue) == 0x000080, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, K2Node_MakeArray_Array) == 0x000088, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Array_Contains_ReturnValue) == 0x000098, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Filter_Probability_Map_Filtered_Probability_Map) == 0x0000A0, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Filter_Probability_Map_Filtered_Probability_Map' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Map_Keys_Keys) == 0x0000F0, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Map_Values_Values) == 0x000100, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Array_Get_Item) == 0x000110, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Array_Length_ReturnValue) == 0x000114, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Map_Find_Value) == 0x000118, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Map_Find_ReturnValue) == 0x000120, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Array_Length_ReturnValue_1) == 0x000124, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Less_IntInt_ReturnValue) == 0x000128, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_BooleanAND_ReturnValue) == 0x000129, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, Temp_int_Array_Index_Variable_1) == 0x00012C, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Array_Get_Item_1) == 0x000130, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_RandomFloatInRange_ReturnValue) == 0x000138, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000140, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, Temp_int_Loop_Counter_Variable_1) == 0x000148, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, Temp_byte_Variable) == 0x00014C, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Less_IntInt_ReturnValue_1) == 0x00014D, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, K2Node_Select_Default) == 0x000150, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001A0, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0001A4, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0001A8, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");

}

