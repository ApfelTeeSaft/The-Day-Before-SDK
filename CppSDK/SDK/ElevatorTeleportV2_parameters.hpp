#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ElevatorTeleportV2

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_InteractType_structs.hpp"
#include "E_ActorType_structs.hpp"
#include "ElevatorTeleportState_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ElevatorTeleportV2.ElevatorTeleportV2_C.BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function ElevatorTeleportV2.ElevatorTeleportV2_C.BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function ElevatorTeleportV2.ElevatorTeleportV2_C.BndEvt__ElevatorTeleport_BoxDoorCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_BoxDoorCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_BoxDoorCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_BoxDoorCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_BoxDoorCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_BoxDoorCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_BoxDoorCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_BoxDoorCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_BoxDoorCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_BoxDoorCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_BoxDoorCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_BoxDoorCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_BoxDoorCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_BoxDoorCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_BoxDoorCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_BoxDoorCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_BoxDoorCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'ElevatorTeleportV2_C_BndEvt__ElevatorTeleport_BoxDoorCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function ElevatorTeleportV2.ElevatorTeleportV2_C.CanRecieveActors
// 0x0002 (0x0002 - 0x0000)
struct ElevatorTeleportV2_C_CanRecieveActors final
{
public:
	bool                                          CanRecieve;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleportV2_C_CanRecieveActors) == 0x000001, "Wrong alignment on ElevatorTeleportV2_C_CanRecieveActors");
static_assert(sizeof(ElevatorTeleportV2_C_CanRecieveActors) == 0x000002, "Wrong size on ElevatorTeleportV2_C_CanRecieveActors");
static_assert(offsetof(ElevatorTeleportV2_C_CanRecieveActors, CanRecieve) == 0x000000, "Member 'ElevatorTeleportV2_C_CanRecieveActors::CanRecieve' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_CanRecieveActors, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'ElevatorTeleportV2_C_CanRecieveActors::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function ElevatorTeleportV2.ElevatorTeleportV2_C.CloseDoorDelayed
// 0x0078 (0x0078 - 0x0000)
struct ElevatorTeleportV2_C_CloseDoorDelayed final
{
public:
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0000(0x0010)(ConstParm, ReferenceParm)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_HasActorsInside_HasActors;                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_BoxOverlapActors_OutActors;               // 0x0060(0x0010)(ReferenceParm)
	bool                                          CallFunc_BoxOverlapActors_ReturnValue;             // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleportV2_C_CloseDoorDelayed) == 0x000008, "Wrong alignment on ElevatorTeleportV2_C_CloseDoorDelayed");
static_assert(sizeof(ElevatorTeleportV2_C_CloseDoorDelayed) == 0x000078, "Wrong size on ElevatorTeleportV2_C_CloseDoorDelayed");
static_assert(offsetof(ElevatorTeleportV2_C_CloseDoorDelayed, Temp_object_Variable) == 0x000000, "Member 'ElevatorTeleportV2_C_CloseDoorDelayed::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_CloseDoorDelayed, CallFunc_K2_SetTimer_ReturnValue) == 0x000010, "Member 'ElevatorTeleportV2_C_CloseDoorDelayed::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_CloseDoorDelayed, K2Node_MakeArray_Array) == 0x000018, "Member 'ElevatorTeleportV2_C_CloseDoorDelayed::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_CloseDoorDelayed, CallFunc_HasActorsInside_HasActors) == 0x000028, "Member 'ElevatorTeleportV2_C_CloseDoorDelayed::CallFunc_HasActorsInside_HasActors' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_CloseDoorDelayed, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000030, "Member 'ElevatorTeleportV2_C_CloseDoorDelayed::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_CloseDoorDelayed, CallFunc_Add_VectorVector_ReturnValue) == 0x000048, "Member 'ElevatorTeleportV2_C_CloseDoorDelayed::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_CloseDoorDelayed, CallFunc_BoxOverlapActors_OutActors) == 0x000060, "Member 'ElevatorTeleportV2_C_CloseDoorDelayed::CallFunc_BoxOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_CloseDoorDelayed, CallFunc_BoxOverlapActors_ReturnValue) == 0x000070, "Member 'ElevatorTeleportV2_C_CloseDoorDelayed::CallFunc_BoxOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_CloseDoorDelayed, CallFunc_Array_IsEmpty_ReturnValue) == 0x000071, "Member 'ElevatorTeleportV2_C_CloseDoorDelayed::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");

// Function ElevatorTeleportV2.ElevatorTeleportV2_C.ExecuteUbergraph_ElevatorTeleportV2
// 0x0738 (0x0738 - 0x0000)
struct ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasActorsInside_HasActors;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_FMODPlayEventAttached_ReturnValue;        // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_FMODPlayEventAttached_ReturnValue_1;      // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_2;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E3[0x5];                                       // 0x00E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODAudioComponent*                    CallFunc_FMODPlayEventAttached_ReturnValue_2;      // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue_1;                  // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue_2;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue_1;     // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODAudioComponent*                    CallFunc_FMODPlayEventAttached_ReturnValue_3;      // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_FMODPlayEventAttached_ReturnValue_4;      // 0x0118(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Visible;                              // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0128(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Visible_1;                            // 0x0212(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_213[0x5];                                      // 0x0213(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player_1;                             // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_2;                             // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_3;                             // 0x0228(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_4;                             // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_5;                             // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SitIndex;                             // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_SkipAnimation;                        // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_245[0x3];                                      // 0x0245(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player_6;                             // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_7;                             // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_8;                             // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0260(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0270(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0280(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0288(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_2;  // 0x0290(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_2;           // 0x0298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_2;            // 0x02A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_2;       // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_1;           // 0x02AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AD[0x3];                                      // 0x02AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_1;          // 0x02B0(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0398(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1[0x7];                                      // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x03A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x03C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTeleportableActor_IsTeleportable;       // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D9[0x7];                                      // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x03E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x03F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FA[0x6];                                      // 0x03FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0400(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0408(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0410(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x041C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41D[0x3];                                      // 0x041D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0420(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0508(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0510(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0518(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0520(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_524[0x4];                                      // 0x0524(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_V2_C*                   K2Node_DynamicCast_AsSurvival_Player_V2;           // 0x0528(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_531[0x7];                                      // 0x0531(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_V2_C*                   K2Node_DynamicCast_AsSurvival_Player_V2_1;         // 0x0538(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTeleportableActor_IsTeleportable_1;     // 0x0541(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_542[0x6];                                      // 0x0542(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ATeleport_C*                            K2Node_Event_Sender;                               // 0x0548(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player;                               // 0x0550(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Actor;                                // 0x0558(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult_1;     // 0x0560(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue_1;        // 0x0648(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_649[0x7];                                      // 0x0649(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0650(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0658(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_659[0x7];                                      // 0x0659(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0660(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x0678(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x0680(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x0688(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0690(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_691[0x7];                                      // 0x0691(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0698(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x06A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x06A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x06B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x06C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x06E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x06F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x0710(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_4;               // 0x0711(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_712[0x6];                                      // 0x0712(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_ProcessOpeningDoorsState_DeltaTime_ImplicitCast; // 0x0718(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ProcessOpenedState_DeltaTime_ImplicitCast; // 0x0720(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ProcessClosingDoorsState_DeltaTime_ImplicitCast; // 0x0728(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ProcessPreparingToTeleportState_DeltaTime_ImplicitCast; // 0x0730(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2) == 0x000008, "Wrong alignment on ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2");
static_assert(sizeof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2) == 0x000738, "Wrong size on ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, EntryPoint) == 0x000000, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::EntryPoint' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_HasActorsInside_HasActors) == 0x000004, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_HasActorsInside_HasActors' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, K2Node_SwitchEnum_CmpSuccess) == 0x000005, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_IsValid_ReturnValue) == 0x000006, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000008, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_IsValid_ReturnValue_1) == 0x000010, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, K2Node_SwitchEnum_CmpSuccess_1) == 0x000011, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_BreakVector_X) == 0x000018, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_BreakVector_Y) == 0x000020, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_BreakVector_Z) == 0x000028, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_IsValid_ReturnValue_2) == 0x000030, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000038, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_MakeVector_ReturnValue) == 0x000040, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000058, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_BreakVector_X_1) == 0x000070, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_BreakVector_Y_1) == 0x000078, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_BreakVector_Z_1) == 0x000080, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_FMODPlayEventAttached_ReturnValue) == 0x000088, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_FMODPlayEventAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_FMODPlayEventAttached_ReturnValue_1) == 0x000090, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_FMODPlayEventAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_IsValid_ReturnValue_3) == 0x000098, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_BreakVector_X_2) == 0x0000A0, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_BreakVector_Y_2) == 0x0000A8, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_BreakVector_Z_2) == 0x0000B0, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_IsPlaying_ReturnValue) == 0x0000C0, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_MakeVector_ReturnValue_1) == 0x0000C8, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_IsValid_ReturnValue_4) == 0x0000E0, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_IsValid_ReturnValue_5) == 0x0000E1, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_IsValid_ReturnValue_6) == 0x0000E2, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_FMODPlayEventAttached_ReturnValue_2) == 0x0000E8, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_FMODPlayEventAttached_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_IsPlaying_ReturnValue_1) == 0x0000F0, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_IsPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, K2Node_Event_DeltaSeconds) == 0x0000F4, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_IsPlaying_ReturnValue_2) == 0x0000F8, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_IsPlaying_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_Conv_InterfaceToObject_ReturnValue_1) == 0x000100, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_Conv_InterfaceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_IsValid_ReturnValue_7) == 0x000108, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_FMODPlayEventAttached_ReturnValue_3) == 0x000110, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_FMODPlayEventAttached_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_FMODPlayEventAttached_ReturnValue_4) == 0x000118, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_FMODPlayEventAttached_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, K2Node_Event_Visible) == 0x000120, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::K2Node_Event_Visible' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000128, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000210, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_IsLocallyControlled_ReturnValue) == 0x000211, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, K2Node_Event_Visible_1) == 0x000212, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::K2Node_Event_Visible_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, K2Node_Event_Player_1) == 0x000218, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::K2Node_Event_Player_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, K2Node_Event_Player_2) == 0x000220, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::K2Node_Event_Player_2' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, K2Node_Event_Player_3) == 0x000228, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::K2Node_Event_Player_3' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, K2Node_Event_Player_4) == 0x000230, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::K2Node_Event_Player_4' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, K2Node_Event_Player_5) == 0x000238, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::K2Node_Event_Player_5' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, K2Node_Event_SitIndex) == 0x000240, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::K2Node_Event_SitIndex' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, K2Node_Event_SkipAnimation) == 0x000244, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::K2Node_Event_SkipAnimation' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, K2Node_Event_Player_6) == 0x000248, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::K2Node_Event_Player_6' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, K2Node_Event_Player_7) == 0x000250, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::K2Node_Event_Player_7' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, K2Node_Event_Player_8) == 0x000258, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::K2Node_Event_Player_8' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, K2Node_CreateDelegate_OutputDelegate) == 0x000260, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, K2Node_CreateDelegate_OutputDelegate_1) == 0x000270, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000280, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000288, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, K2Node_ComponentBoundEvent_OverlappedComponent_2) == 0x000290, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::K2Node_ComponentBoundEvent_OverlappedComponent_2' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, K2Node_ComponentBoundEvent_OtherActor_2) == 0x000298, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::K2Node_ComponentBoundEvent_OtherActor_2' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, K2Node_ComponentBoundEvent_OtherComp_2) == 0x0002A0, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::K2Node_ComponentBoundEvent_OtherComp_2' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, K2Node_ComponentBoundEvent_OtherBodyIndex_2) == 0x0002A8, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::K2Node_ComponentBoundEvent_OtherBodyIndex_2' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, K2Node_ComponentBoundEvent_bFromSweep_1) == 0x0002AC, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::K2Node_ComponentBoundEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, K2Node_ComponentBoundEvent_SweepResult_1) == 0x0002B0, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::K2Node_ComponentBoundEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, K2Node_DynamicCast_AsCharacter) == 0x000398, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, K2Node_DynamicCast_bSuccess) == 0x0003A0, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x0003A8, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0003C0, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_IsTeleportableActor_IsTeleportable) == 0x0003D8, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_IsTeleportableActor_IsTeleportable' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0003E0, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_HasAuthority_ReturnValue) == 0x0003F8, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_HasAuthority_ReturnValue_1) == 0x0003F9, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000400, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000408, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000410, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000418, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, K2Node_ComponentBoundEvent_bFromSweep) == 0x00041C, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, K2Node_ComponentBoundEvent_SweepResult) == 0x000420, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000508, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, K2Node_ComponentBoundEvent_OtherActor) == 0x000510, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, K2Node_ComponentBoundEvent_OtherComp) == 0x000518, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000520, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, K2Node_DynamicCast_AsSurvival_Player_V2) == 0x000528, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::K2Node_DynamicCast_AsSurvival_Player_V2' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, K2Node_DynamicCast_bSuccess_1) == 0x000530, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, K2Node_DynamicCast_AsSurvival_Player_V2_1) == 0x000538, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::K2Node_DynamicCast_AsSurvival_Player_V2_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, K2Node_DynamicCast_bSuccess_2) == 0x000540, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_IsTeleportableActor_IsTeleportable_1) == 0x000541, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_IsTeleportableActor_IsTeleportable_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, K2Node_Event_Sender) == 0x000548, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::K2Node_Event_Sender' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, K2Node_Event_Player) == 0x000550, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::K2Node_Event_Player' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, K2Node_Event_Actor) == 0x000558, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::K2Node_Event_Actor' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_K2_SetActorLocation_SweepHitResult_1) == 0x000560, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_K2_SetActorLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_K2_SetActorLocation_ReturnValue_1) == 0x000648, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_K2_SetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, K2Node_DynamicCast_AsSurvival_Player) == 0x000650, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, K2Node_DynamicCast_bSuccess_3) == 0x000658, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000660, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_BreakVector_X_3) == 0x000678, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_BreakVector_Y_3) == 0x000680, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_BreakVector_Z_3) == 0x000688, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_HasAuthority_ReturnValue_2) == 0x000690, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000698, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x0006A0, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x0006A8, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_MakeVector_ReturnValue_2) == 0x0006B0, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_MakeVector_ReturnValue_3) == 0x0006C8, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0006E0, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_Add_VectorVector_ReturnValue) == 0x0006F8, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_HasAuthority_ReturnValue_3) == 0x000710, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_HasAuthority_ReturnValue_4) == 0x000711, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_HasAuthority_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_ProcessOpeningDoorsState_DeltaTime_ImplicitCast) == 0x000718, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_ProcessOpeningDoorsState_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_ProcessOpenedState_DeltaTime_ImplicitCast) == 0x000720, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_ProcessOpenedState_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_ProcessClosingDoorsState_DeltaTime_ImplicitCast) == 0x000728, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_ProcessClosingDoorsState_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2, CallFunc_ProcessPreparingToTeleportState_DeltaTime_ImplicitCast) == 0x000730, "Member 'ElevatorTeleportV2_C_ExecuteUbergraph_ElevatorTeleportV2::CallFunc_ProcessPreparingToTeleportState_DeltaTime_ImplicitCast' has a wrong offset!");

// Function ElevatorTeleportV2.ElevatorTeleportV2_C.GetActorType
// 0x0001 (0x0001 - 0x0000)
struct ElevatorTeleportV2_C_GetActorType final
{
public:
	E_ActorType                                   ActorType;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleportV2_C_GetActorType) == 0x000001, "Wrong alignment on ElevatorTeleportV2_C_GetActorType");
static_assert(sizeof(ElevatorTeleportV2_C_GetActorType) == 0x000001, "Wrong size on ElevatorTeleportV2_C_GetActorType");
static_assert(offsetof(ElevatorTeleportV2_C_GetActorType, ActorType) == 0x000000, "Member 'ElevatorTeleportV2_C_GetActorType::ActorType' has a wrong offset!");

// Function ElevatorTeleportV2.ElevatorTeleportV2_C.GetDestination
// 0x0030 (0x0030 - 0x0000)
struct ElevatorTeleportV2_C_GetDestination final
{
public:
	struct FVector                                Param_Destination;                                 // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleportV2_C_GetDestination) == 0x000008, "Wrong alignment on ElevatorTeleportV2_C_GetDestination");
static_assert(sizeof(ElevatorTeleportV2_C_GetDestination) == 0x000030, "Wrong size on ElevatorTeleportV2_C_GetDestination");
static_assert(offsetof(ElevatorTeleportV2_C_GetDestination, Param_Destination) == 0x000000, "Member 'ElevatorTeleportV2_C_GetDestination::Param_Destination' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_GetDestination, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'ElevatorTeleportV2_C_GetDestination::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

// Function ElevatorTeleportV2.ElevatorTeleportV2_C.getRotation
// 0x0018 (0x0018 - 0x0000)
struct ElevatorTeleportV2_C_GetRotation final
{
public:
	struct FRotator                               Rotation;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ElevatorTeleportV2_C_GetRotation) == 0x000008, "Wrong alignment on ElevatorTeleportV2_C_GetRotation");
static_assert(sizeof(ElevatorTeleportV2_C_GetRotation) == 0x000018, "Wrong size on ElevatorTeleportV2_C_GetRotation");
static_assert(offsetof(ElevatorTeleportV2_C_GetRotation, Rotation) == 0x000000, "Member 'ElevatorTeleportV2_C_GetRotation::Rotation' has a wrong offset!");

// Function ElevatorTeleportV2.ElevatorTeleportV2_C.HasActorsInside
// 0x0028 (0x0028 - 0x0000)
struct ElevatorTeleportV2_C_HasActorsInside final
{
public:
	bool                                          HasActors;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0008(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleportV2_C_HasActorsInside) == 0x000008, "Wrong alignment on ElevatorTeleportV2_C_HasActorsInside");
static_assert(sizeof(ElevatorTeleportV2_C_HasActorsInside) == 0x000028, "Wrong size on ElevatorTeleportV2_C_HasActorsInside");
static_assert(offsetof(ElevatorTeleportV2_C_HasActorsInside, HasActors) == 0x000000, "Member 'ElevatorTeleportV2_C_HasActorsInside::HasActors' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_HasActorsInside, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000008, "Member 'ElevatorTeleportV2_C_HasActorsInside::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_HasActorsInside, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'ElevatorTeleportV2_C_HasActorsInside::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_HasActorsInside, CallFunc_Array_Length_ReturnValue_1) == 0x00001C, "Member 'ElevatorTeleportV2_C_HasActorsInside::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_HasActorsInside, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'ElevatorTeleportV2_C_HasActorsInside::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_HasActorsInside, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000021, "Member 'ElevatorTeleportV2_C_HasActorsInside::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_HasActorsInside, CallFunc_BooleanOR_ReturnValue) == 0x000022, "Member 'ElevatorTeleportV2_C_HasActorsInside::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function ElevatorTeleportV2.ElevatorTeleportV2_C.IsLocked?
// 0x0001 (0x0001 - 0x0000)
struct ElevatorTeleportV2_C_IsLocked_ final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleportV2_C_IsLocked_) == 0x000001, "Wrong alignment on ElevatorTeleportV2_C_IsLocked_");
static_assert(sizeof(ElevatorTeleportV2_C_IsLocked_) == 0x000001, "Wrong size on ElevatorTeleportV2_C_IsLocked_");
static_assert(offsetof(ElevatorTeleportV2_C_IsLocked_, Result) == 0x000000, "Member 'ElevatorTeleportV2_C_IsLocked_::Result' has a wrong offset!");

// Function ElevatorTeleportV2.ElevatorTeleportV2_C.OnBeginInteract
// 0x0008 (0x0008 - 0x0000)
struct ElevatorTeleportV2_C_OnBeginInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleportV2_C_OnBeginInteract) == 0x000008, "Wrong alignment on ElevatorTeleportV2_C_OnBeginInteract");
static_assert(sizeof(ElevatorTeleportV2_C_OnBeginInteract) == 0x000008, "Wrong size on ElevatorTeleportV2_C_OnBeginInteract");
static_assert(offsetof(ElevatorTeleportV2_C_OnBeginInteract, Player) == 0x000000, "Member 'ElevatorTeleportV2_C_OnBeginInteract::Player' has a wrong offset!");

// Function ElevatorTeleportV2.ElevatorTeleportV2_C.OnFocused
// 0x0068 (0x0068 - 0x0000)
struct ElevatorTeleportV2_C_OnFocused final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HighlightActor;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        HighlightActorComponent;                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_InteractType                                InteractType;                                      // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LateTime;                                          // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_PlayerMain_C*                      CallFunc_GetGUI_GUI;                               // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleportV2_C_OnFocused) == 0x000008, "Wrong alignment on ElevatorTeleportV2_C_OnFocused");
static_assert(sizeof(ElevatorTeleportV2_C_OnFocused) == 0x000068, "Wrong size on ElevatorTeleportV2_C_OnFocused");
static_assert(offsetof(ElevatorTeleportV2_C_OnFocused, Player) == 0x000000, "Member 'ElevatorTeleportV2_C_OnFocused::Player' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_OnFocused, HighlightActor) == 0x000008, "Member 'ElevatorTeleportV2_C_OnFocused::HighlightActor' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_OnFocused, HighlightActorComponent) == 0x000010, "Member 'ElevatorTeleportV2_C_OnFocused::HighlightActorComponent' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_OnFocused, InteractType) == 0x000018, "Member 'ElevatorTeleportV2_C_OnFocused::InteractType' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_OnFocused, LateTime) == 0x000020, "Member 'ElevatorTeleportV2_C_OnFocused::LateTime' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_OnFocused, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000028, "Member 'ElevatorTeleportV2_C_OnFocused::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_OnFocused, CallFunc_Array_Find_ReturnValue) == 0x00002C, "Member 'ElevatorTeleportV2_C_OnFocused::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_OnFocused, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000030, "Member 'ElevatorTeleportV2_C_OnFocused::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_OnFocused, CallFunc_GetPlayerController_ReturnValue) == 0x000038, "Member 'ElevatorTeleportV2_C_OnFocused::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_OnFocused, CallFunc_GetHUD_ReturnValue) == 0x000040, "Member 'ElevatorTeleportV2_C_OnFocused::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_OnFocused, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x000048, "Member 'ElevatorTeleportV2_C_OnFocused::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_OnFocused, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'ElevatorTeleportV2_C_OnFocused::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_OnFocused, CallFunc_GetGUI_GUI) == 0x000060, "Member 'ElevatorTeleportV2_C_OnFocused::CallFunc_GetGUI_GUI' has a wrong offset!");

// Function ElevatorTeleportV2.ElevatorTeleportV2_C.OnInteract
// 0x0008 (0x0008 - 0x0000)
struct ElevatorTeleportV2_C_OnInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleportV2_C_OnInteract) == 0x000008, "Wrong alignment on ElevatorTeleportV2_C_OnInteract");
static_assert(sizeof(ElevatorTeleportV2_C_OnInteract) == 0x000008, "Wrong size on ElevatorTeleportV2_C_OnInteract");
static_assert(offsetof(ElevatorTeleportV2_C_OnInteract, Player) == 0x000000, "Member 'ElevatorTeleportV2_C_OnInteract::Player' has a wrong offset!");

// Function ElevatorTeleportV2.ElevatorTeleportV2_C.OnInteract2
// 0x0008 (0x0008 - 0x0000)
struct ElevatorTeleportV2_C_OnInteract2 final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleportV2_C_OnInteract2) == 0x000008, "Wrong alignment on ElevatorTeleportV2_C_OnInteract2");
static_assert(sizeof(ElevatorTeleportV2_C_OnInteract2) == 0x000008, "Wrong size on ElevatorTeleportV2_C_OnInteract2");
static_assert(offsetof(ElevatorTeleportV2_C_OnInteract2, Player) == 0x000000, "Member 'ElevatorTeleportV2_C_OnInteract2::Player' has a wrong offset!");

// Function ElevatorTeleportV2.ElevatorTeleportV2_C.OnInteract3
// 0x0008 (0x0008 - 0x0000)
struct ElevatorTeleportV2_C_OnInteract3 final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleportV2_C_OnInteract3) == 0x000008, "Wrong alignment on ElevatorTeleportV2_C_OnInteract3");
static_assert(sizeof(ElevatorTeleportV2_C_OnInteract3) == 0x000008, "Wrong size on ElevatorTeleportV2_C_OnInteract3");
static_assert(offsetof(ElevatorTeleportV2_C_OnInteract3, Player) == 0x000000, "Member 'ElevatorTeleportV2_C_OnInteract3::Player' has a wrong offset!");

// Function ElevatorTeleportV2.ElevatorTeleportV2_C.OnInteractVehicle
// 0x0010 (0x0010 - 0x0000)
struct ElevatorTeleportV2_C_OnInteractVehicle final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         SitIndex;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipAnimation;                                     // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleportV2_C_OnInteractVehicle) == 0x000008, "Wrong alignment on ElevatorTeleportV2_C_OnInteractVehicle");
static_assert(sizeof(ElevatorTeleportV2_C_OnInteractVehicle) == 0x000010, "Wrong size on ElevatorTeleportV2_C_OnInteractVehicle");
static_assert(offsetof(ElevatorTeleportV2_C_OnInteractVehicle, Player) == 0x000000, "Member 'ElevatorTeleportV2_C_OnInteractVehicle::Player' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_OnInteractVehicle, SitIndex) == 0x000008, "Member 'ElevatorTeleportV2_C_OnInteractVehicle::SitIndex' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_OnInteractVehicle, SkipAnimation) == 0x00000C, "Member 'ElevatorTeleportV2_C_OnInteractVehicle::SkipAnimation' has a wrong offset!");

// Function ElevatorTeleportV2.ElevatorTeleportV2_C.OnLocalInteract
// 0x0008 (0x0008 - 0x0000)
struct ElevatorTeleportV2_C_OnLocalInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleportV2_C_OnLocalInteract) == 0x000008, "Wrong alignment on ElevatorTeleportV2_C_OnLocalInteract");
static_assert(sizeof(ElevatorTeleportV2_C_OnLocalInteract) == 0x000008, "Wrong size on ElevatorTeleportV2_C_OnLocalInteract");
static_assert(offsetof(ElevatorTeleportV2_C_OnLocalInteract, Player) == 0x000000, "Member 'ElevatorTeleportV2_C_OnLocalInteract::Player' has a wrong offset!");

// Function ElevatorTeleportV2.ElevatorTeleportV2_C.OnLostFocus
// 0x0008 (0x0008 - 0x0000)
struct ElevatorTeleportV2_C_OnLostFocus final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleportV2_C_OnLostFocus) == 0x000008, "Wrong alignment on ElevatorTeleportV2_C_OnLostFocus");
static_assert(sizeof(ElevatorTeleportV2_C_OnLostFocus) == 0x000008, "Wrong size on ElevatorTeleportV2_C_OnLostFocus");
static_assert(offsetof(ElevatorTeleportV2_C_OnLostFocus, Player) == 0x000000, "Member 'ElevatorTeleportV2_C_OnLostFocus::Player' has a wrong offset!");

// Function ElevatorTeleportV2.ElevatorTeleportV2_C.OnSeen
// 0x0008 (0x0008 - 0x0000)
struct ElevatorTeleportV2_C_OnSeen final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleportV2_C_OnSeen) == 0x000008, "Wrong alignment on ElevatorTeleportV2_C_OnSeen");
static_assert(sizeof(ElevatorTeleportV2_C_OnSeen) == 0x000008, "Wrong size on ElevatorTeleportV2_C_OnSeen");
static_assert(offsetof(ElevatorTeleportV2_C_OnSeen, Player) == 0x000000, "Member 'ElevatorTeleportV2_C_OnSeen::Player' has a wrong offset!");

// Function ElevatorTeleportV2.ElevatorTeleportV2_C.OnStopInteract
// 0x0008 (0x0008 - 0x0000)
struct ElevatorTeleportV2_C_OnStopInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleportV2_C_OnStopInteract) == 0x000008, "Wrong alignment on ElevatorTeleportV2_C_OnStopInteract");
static_assert(sizeof(ElevatorTeleportV2_C_OnStopInteract) == 0x000008, "Wrong size on ElevatorTeleportV2_C_OnStopInteract");
static_assert(offsetof(ElevatorTeleportV2_C_OnStopInteract, Player) == 0x000000, "Member 'ElevatorTeleportV2_C_OnStopInteract::Player' has a wrong offset!");

// Function ElevatorTeleportV2.ElevatorTeleportV2_C.OpenDoors
// 0x0001 (0x0001 - 0x0000)
struct ElevatorTeleportV2_C_OpenDoors final
{
public:
	bool                                          Param_WaitUntilActorsLeave;                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleportV2_C_OpenDoors) == 0x000001, "Wrong alignment on ElevatorTeleportV2_C_OpenDoors");
static_assert(sizeof(ElevatorTeleportV2_C_OpenDoors) == 0x000001, "Wrong size on ElevatorTeleportV2_C_OpenDoors");
static_assert(offsetof(ElevatorTeleportV2_C_OpenDoors, Param_WaitUntilActorsLeave) == 0x000000, "Member 'ElevatorTeleportV2_C_OpenDoors::Param_WaitUntilActorsLeave' has a wrong offset!");

// Function ElevatorTeleportV2.ElevatorTeleportV2_C.ProcessClosingDoorsState
// 0x0230 (0x0230 - 0x0000)
struct ElevatorTeleportV2_C_ProcessClosingDoorsState final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0028(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_VLerp_ReturnValue_1;                      // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x0128(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VLerp_Alpha_ImplicitCast;                 // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VLerp_Alpha_ImplicitCast_1;               // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleportV2_C_ProcessClosingDoorsState) == 0x000008, "Wrong alignment on ElevatorTeleportV2_C_ProcessClosingDoorsState");
static_assert(sizeof(ElevatorTeleportV2_C_ProcessClosingDoorsState) == 0x000230, "Wrong size on ElevatorTeleportV2_C_ProcessClosingDoorsState");
static_assert(offsetof(ElevatorTeleportV2_C_ProcessClosingDoorsState, DeltaTime) == 0x000000, "Member 'ElevatorTeleportV2_C_ProcessClosingDoorsState::DeltaTime' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ProcessClosingDoorsState, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000008, "Member 'ElevatorTeleportV2_C_ProcessClosingDoorsState::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ProcessClosingDoorsState, CallFunc_VLerp_ReturnValue) == 0x000010, "Member 'ElevatorTeleportV2_C_ProcessClosingDoorsState::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ProcessClosingDoorsState, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000028, "Member 'ElevatorTeleportV2_C_ProcessClosingDoorsState::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ProcessClosingDoorsState, CallFunc_VLerp_ReturnValue_1) == 0x000110, "Member 'ElevatorTeleportV2_C_ProcessClosingDoorsState::CallFunc_VLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ProcessClosingDoorsState, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x000128, "Member 'ElevatorTeleportV2_C_ProcessClosingDoorsState::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ProcessClosingDoorsState, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000210, "Member 'ElevatorTeleportV2_C_ProcessClosingDoorsState::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ProcessClosingDoorsState, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000218, "Member 'ElevatorTeleportV2_C_ProcessClosingDoorsState::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ProcessClosingDoorsState, CallFunc_FClamp_ReturnValue) == 0x000220, "Member 'ElevatorTeleportV2_C_ProcessClosingDoorsState::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ProcessClosingDoorsState, CallFunc_VLerp_Alpha_ImplicitCast) == 0x000228, "Member 'ElevatorTeleportV2_C_ProcessClosingDoorsState::CallFunc_VLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ProcessClosingDoorsState, CallFunc_VLerp_Alpha_ImplicitCast_1) == 0x00022C, "Member 'ElevatorTeleportV2_C_ProcessClosingDoorsState::CallFunc_VLerp_Alpha_ImplicitCast_1' has a wrong offset!");

// Function ElevatorTeleportV2.ElevatorTeleportV2_C.ProcessOpenedState
// 0x0020 (0x0020 - 0x0000)
struct ElevatorTeleportV2_C_ProcessOpenedState final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasActorsInside_HasActors;                // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleportV2_C_ProcessOpenedState) == 0x000008, "Wrong alignment on ElevatorTeleportV2_C_ProcessOpenedState");
static_assert(sizeof(ElevatorTeleportV2_C_ProcessOpenedState) == 0x000020, "Wrong size on ElevatorTeleportV2_C_ProcessOpenedState");
static_assert(offsetof(ElevatorTeleportV2_C_ProcessOpenedState, DeltaTime) == 0x000000, "Member 'ElevatorTeleportV2_C_ProcessOpenedState::DeltaTime' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ProcessOpenedState, CallFunc_K2_SetTimer_ReturnValue) == 0x000008, "Member 'ElevatorTeleportV2_C_ProcessOpenedState::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ProcessOpenedState, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000010, "Member 'ElevatorTeleportV2_C_ProcessOpenedState::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ProcessOpenedState, CallFunc_Array_IsEmpty_ReturnValue) == 0x000011, "Member 'ElevatorTeleportV2_C_ProcessOpenedState::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ProcessOpenedState, CallFunc_HasActorsInside_HasActors) == 0x000012, "Member 'ElevatorTeleportV2_C_ProcessOpenedState::CallFunc_HasActorsInside_HasActors' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ProcessOpenedState, CallFunc_HasAuthority_ReturnValue) == 0x000013, "Member 'ElevatorTeleportV2_C_ProcessOpenedState::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ProcessOpenedState, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000014, "Member 'ElevatorTeleportV2_C_ProcessOpenedState::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ProcessOpenedState, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000018, "Member 'ElevatorTeleportV2_C_ProcessOpenedState::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function ElevatorTeleportV2.ElevatorTeleportV2_C.ProcessOpeningDoorsState
// 0x0238 (0x0238 - 0x0000)
struct ElevatorTeleportV2_C_ProcessOpeningDoorsState final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0030(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_VLerp_ReturnValue_1;                      // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x0130(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VLerp_Alpha_ImplicitCast;                 // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VLerp_Alpha_ImplicitCast_1;               // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleportV2_C_ProcessOpeningDoorsState) == 0x000008, "Wrong alignment on ElevatorTeleportV2_C_ProcessOpeningDoorsState");
static_assert(sizeof(ElevatorTeleportV2_C_ProcessOpeningDoorsState) == 0x000238, "Wrong size on ElevatorTeleportV2_C_ProcessOpeningDoorsState");
static_assert(offsetof(ElevatorTeleportV2_C_ProcessOpeningDoorsState, DeltaTime) == 0x000000, "Member 'ElevatorTeleportV2_C_ProcessOpeningDoorsState::DeltaTime' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ProcessOpeningDoorsState, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'ElevatorTeleportV2_C_ProcessOpeningDoorsState::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ProcessOpeningDoorsState, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000010, "Member 'ElevatorTeleportV2_C_ProcessOpeningDoorsState::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ProcessOpeningDoorsState, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000011, "Member 'ElevatorTeleportV2_C_ProcessOpeningDoorsState::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ProcessOpeningDoorsState, CallFunc_VLerp_ReturnValue) == 0x000018, "Member 'ElevatorTeleportV2_C_ProcessOpeningDoorsState::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ProcessOpeningDoorsState, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000030, "Member 'ElevatorTeleportV2_C_ProcessOpeningDoorsState::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ProcessOpeningDoorsState, CallFunc_VLerp_ReturnValue_1) == 0x000118, "Member 'ElevatorTeleportV2_C_ProcessOpeningDoorsState::CallFunc_VLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ProcessOpeningDoorsState, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x000130, "Member 'ElevatorTeleportV2_C_ProcessOpeningDoorsState::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ProcessOpeningDoorsState, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000218, "Member 'ElevatorTeleportV2_C_ProcessOpeningDoorsState::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ProcessOpeningDoorsState, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000220, "Member 'ElevatorTeleportV2_C_ProcessOpeningDoorsState::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ProcessOpeningDoorsState, CallFunc_FClamp_ReturnValue) == 0x000228, "Member 'ElevatorTeleportV2_C_ProcessOpeningDoorsState::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ProcessOpeningDoorsState, CallFunc_VLerp_Alpha_ImplicitCast) == 0x000230, "Member 'ElevatorTeleportV2_C_ProcessOpeningDoorsState::CallFunc_VLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ProcessOpeningDoorsState, CallFunc_VLerp_Alpha_ImplicitCast_1) == 0x000234, "Member 'ElevatorTeleportV2_C_ProcessOpeningDoorsState::CallFunc_VLerp_Alpha_ImplicitCast_1' has a wrong offset!");

// Function ElevatorTeleportV2.ElevatorTeleportV2_C.ProcessPreparingToTeleportState
// 0x0028 (0x0028 - 0x0000)
struct ElevatorTeleportV2_C_ProcessPreparingToTeleportState final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleportV2_C_ProcessPreparingToTeleportState) == 0x000008, "Wrong alignment on ElevatorTeleportV2_C_ProcessPreparingToTeleportState");
static_assert(sizeof(ElevatorTeleportV2_C_ProcessPreparingToTeleportState) == 0x000028, "Wrong size on ElevatorTeleportV2_C_ProcessPreparingToTeleportState");
static_assert(offsetof(ElevatorTeleportV2_C_ProcessPreparingToTeleportState, DeltaTime) == 0x000000, "Member 'ElevatorTeleportV2_C_ProcessPreparingToTeleportState::DeltaTime' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ProcessPreparingToTeleportState, CallFunc_HasAuthority_ReturnValue) == 0x000008, "Member 'ElevatorTeleportV2_C_ProcessPreparingToTeleportState::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ProcessPreparingToTeleportState, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000009, "Member 'ElevatorTeleportV2_C_ProcessPreparingToTeleportState::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ProcessPreparingToTeleportState, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'ElevatorTeleportV2_C_ProcessPreparingToTeleportState::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ProcessPreparingToTeleportState, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'ElevatorTeleportV2_C_ProcessPreparingToTeleportState::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ProcessPreparingToTeleportState, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000020, "Member 'ElevatorTeleportV2_C_ProcessPreparingToTeleportState::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function ElevatorTeleportV2.ElevatorTeleportV2_C.ProcessRecievingActorsState
// 0x0018 (0x0018 - 0x0000)
struct ElevatorTeleportV2_C_ProcessRecievingActorsState final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleportV2_C_ProcessRecievingActorsState) == 0x000008, "Wrong alignment on ElevatorTeleportV2_C_ProcessRecievingActorsState");
static_assert(sizeof(ElevatorTeleportV2_C_ProcessRecievingActorsState) == 0x000018, "Wrong size on ElevatorTeleportV2_C_ProcessRecievingActorsState");
static_assert(offsetof(ElevatorTeleportV2_C_ProcessRecievingActorsState, DeltaTime) == 0x000000, "Member 'ElevatorTeleportV2_C_ProcessRecievingActorsState::DeltaTime' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ProcessRecievingActorsState, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000008, "Member 'ElevatorTeleportV2_C_ProcessRecievingActorsState::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_ProcessRecievingActorsState, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'ElevatorTeleportV2_C_ProcessRecievingActorsState::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function ElevatorTeleportV2.ElevatorTeleportV2_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct ElevatorTeleportV2_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleportV2_C_ReceiveTick) == 0x000004, "Wrong alignment on ElevatorTeleportV2_C_ReceiveTick");
static_assert(sizeof(ElevatorTeleportV2_C_ReceiveTick) == 0x000004, "Wrong size on ElevatorTeleportV2_C_ReceiveTick");
static_assert(offsetof(ElevatorTeleportV2_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'ElevatorTeleportV2_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function ElevatorTeleportV2.ElevatorTeleportV2_C.RecieveActors
// 0x0008 (0x0008 - 0x0000)
struct ElevatorTeleportV2_C_RecieveActors final
{
public:
	class ATeleport_C*                            Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleportV2_C_RecieveActors) == 0x000008, "Wrong alignment on ElevatorTeleportV2_C_RecieveActors");
static_assert(sizeof(ElevatorTeleportV2_C_RecieveActors) == 0x000008, "Wrong size on ElevatorTeleportV2_C_RecieveActors");
static_assert(offsetof(ElevatorTeleportV2_C_RecieveActors, Sender) == 0x000000, "Member 'ElevatorTeleportV2_C_RecieveActors::Sender' has a wrong offset!");

// Function ElevatorTeleportV2.ElevatorTeleportV2_C.RecieverCanAcceptActors
// 0x0018 (0x0018 - 0x0000)
struct ElevatorTeleportV2_C_RecieverCanAcceptActors final
{
public:
	bool                                          CanRecieve;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanRecieveActors_CanRecieve;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleportV2_C_RecieverCanAcceptActors) == 0x000008, "Wrong alignment on ElevatorTeleportV2_C_RecieverCanAcceptActors");
static_assert(sizeof(ElevatorTeleportV2_C_RecieverCanAcceptActors) == 0x000018, "Wrong size on ElevatorTeleportV2_C_RecieverCanAcceptActors");
static_assert(offsetof(ElevatorTeleportV2_C_RecieverCanAcceptActors, CanRecieve) == 0x000000, "Member 'ElevatorTeleportV2_C_RecieverCanAcceptActors::CanRecieve' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_RecieverCanAcceptActors, CallFunc_CanRecieveActors_CanRecieve) == 0x000001, "Member 'ElevatorTeleportV2_C_RecieverCanAcceptActors::CallFunc_CanRecieveActors_CanRecieve' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_RecieverCanAcceptActors, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000008, "Member 'ElevatorTeleportV2_C_RecieverCanAcceptActors::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_RecieverCanAcceptActors, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ElevatorTeleportV2_C_RecieverCanAcceptActors::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ElevatorTeleportV2.ElevatorTeleportV2_C.Set3DWidgetVisibility
// 0x0001 (0x0001 - 0x0000)
struct ElevatorTeleportV2_C_Set3DWidgetVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleportV2_C_Set3DWidgetVisibility) == 0x000001, "Wrong alignment on ElevatorTeleportV2_C_Set3DWidgetVisibility");
static_assert(sizeof(ElevatorTeleportV2_C_Set3DWidgetVisibility) == 0x000001, "Wrong size on ElevatorTeleportV2_C_Set3DWidgetVisibility");
static_assert(offsetof(ElevatorTeleportV2_C_Set3DWidgetVisibility, Visible) == 0x000000, "Member 'ElevatorTeleportV2_C_Set3DWidgetVisibility::Visible' has a wrong offset!");

// Function ElevatorTeleportV2.ElevatorTeleportV2_C.SetElevatorBusy
// 0x0018 (0x0018 - 0x0000)
struct ElevatorTeleportV2_C_SetElevatorBusy final
{
public:
	class AActor*                                 InitialActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AElevatorTeleportV2_C*                  K2Node_DynamicCast_AsElevator_Teleport_V2;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleportV2_C_SetElevatorBusy) == 0x000008, "Wrong alignment on ElevatorTeleportV2_C_SetElevatorBusy");
static_assert(sizeof(ElevatorTeleportV2_C_SetElevatorBusy) == 0x000018, "Wrong size on ElevatorTeleportV2_C_SetElevatorBusy");
static_assert(offsetof(ElevatorTeleportV2_C_SetElevatorBusy, InitialActor) == 0x000000, "Member 'ElevatorTeleportV2_C_SetElevatorBusy::InitialActor' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_SetElevatorBusy, K2Node_DynamicCast_AsElevator_Teleport_V2) == 0x000008, "Member 'ElevatorTeleportV2_C_SetElevatorBusy::K2Node_DynamicCast_AsElevator_Teleport_V2' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_SetElevatorBusy, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'ElevatorTeleportV2_C_SetElevatorBusy::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_SetElevatorBusy, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'ElevatorTeleportV2_C_SetElevatorBusy::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_SetElevatorBusy, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000012, "Member 'ElevatorTeleportV2_C_SetElevatorBusy::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function ElevatorTeleportV2.ElevatorTeleportV2_C.SetElevatorDestination
// 0x0050 (0x0050 - 0x0000)
struct ElevatorTeleportV2_C_SetElevatorDestination final
{
public:
	class AActor*                                 ElevatorDestination;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IElevatorTeleportRecieverV2_C> K2Node_DynamicCast_AsElevator_Teleport_Reciever_V2; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetRotation_Rotation;                     // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetDestination_Destination;               // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleportV2_C_SetElevatorDestination) == 0x000008, "Wrong alignment on ElevatorTeleportV2_C_SetElevatorDestination");
static_assert(sizeof(ElevatorTeleportV2_C_SetElevatorDestination) == 0x000050, "Wrong size on ElevatorTeleportV2_C_SetElevatorDestination");
static_assert(offsetof(ElevatorTeleportV2_C_SetElevatorDestination, ElevatorDestination) == 0x000000, "Member 'ElevatorTeleportV2_C_SetElevatorDestination::ElevatorDestination' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_SetElevatorDestination, K2Node_DynamicCast_AsElevator_Teleport_Reciever_V2) == 0x000008, "Member 'ElevatorTeleportV2_C_SetElevatorDestination::K2Node_DynamicCast_AsElevator_Teleport_Reciever_V2' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_SetElevatorDestination, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ElevatorTeleportV2_C_SetElevatorDestination::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_SetElevatorDestination, CallFunc_GetRotation_Rotation) == 0x000020, "Member 'ElevatorTeleportV2_C_SetElevatorDestination::CallFunc_GetRotation_Rotation' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_SetElevatorDestination, CallFunc_GetDestination_Destination) == 0x000038, "Member 'ElevatorTeleportV2_C_SetElevatorDestination::CallFunc_GetDestination_Destination' has a wrong offset!");

// Function ElevatorTeleportV2.ElevatorTeleportV2_C.SetElevatorNotBusy
// 0x0018 (0x0018 - 0x0000)
struct ElevatorTeleportV2_C_SetElevatorNotBusy final
{
public:
	class AActor*                                 InitialActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AElevatorTeleportV2_C*                  K2Node_DynamicCast_AsElevator_Teleport_V2;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleportV2_C_SetElevatorNotBusy) == 0x000008, "Wrong alignment on ElevatorTeleportV2_C_SetElevatorNotBusy");
static_assert(sizeof(ElevatorTeleportV2_C_SetElevatorNotBusy) == 0x000018, "Wrong size on ElevatorTeleportV2_C_SetElevatorNotBusy");
static_assert(offsetof(ElevatorTeleportV2_C_SetElevatorNotBusy, InitialActor) == 0x000000, "Member 'ElevatorTeleportV2_C_SetElevatorNotBusy::InitialActor' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_SetElevatorNotBusy, K2Node_DynamicCast_AsElevator_Teleport_V2) == 0x000008, "Member 'ElevatorTeleportV2_C_SetElevatorNotBusy::K2Node_DynamicCast_AsElevator_Teleport_V2' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_SetElevatorNotBusy, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'ElevatorTeleportV2_C_SetElevatorNotBusy::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_SetElevatorNotBusy, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'ElevatorTeleportV2_C_SetElevatorNotBusy::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_SetElevatorNotBusy, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000012, "Member 'ElevatorTeleportV2_C_SetElevatorNotBusy::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function ElevatorTeleportV2.ElevatorTeleportV2_C.SetState
// 0x0002 (0x0002 - 0x0000)
struct ElevatorTeleportV2_C_SetState final
{
public:
	ElevatorTeleportState                         Param_State;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleportV2_C_SetState) == 0x000001, "Wrong alignment on ElevatorTeleportV2_C_SetState");
static_assert(sizeof(ElevatorTeleportV2_C_SetState) == 0x000002, "Wrong size on ElevatorTeleportV2_C_SetState");
static_assert(offsetof(ElevatorTeleportV2_C_SetState, Param_State) == 0x000000, "Member 'ElevatorTeleportV2_C_SetState::Param_State' has a wrong offset!");
static_assert(offsetof(ElevatorTeleportV2_C_SetState, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'ElevatorTeleportV2_C_SetState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function ElevatorTeleportV2.ElevatorTeleportV2_C.SetTutorial3DWidgetVisibility
// 0x0001 (0x0001 - 0x0000)
struct ElevatorTeleportV2_C_SetTutorial3DWidgetVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleportV2_C_SetTutorial3DWidgetVisibility) == 0x000001, "Wrong alignment on ElevatorTeleportV2_C_SetTutorial3DWidgetVisibility");
static_assert(sizeof(ElevatorTeleportV2_C_SetTutorial3DWidgetVisibility) == 0x000001, "Wrong size on ElevatorTeleportV2_C_SetTutorial3DWidgetVisibility");
static_assert(offsetof(ElevatorTeleportV2_C_SetTutorial3DWidgetVisibility, Visible) == 0x000000, "Member 'ElevatorTeleportV2_C_SetTutorial3DWidgetVisibility::Visible' has a wrong offset!");

// Function ElevatorTeleportV2.ElevatorTeleportV2_C.TeleportActor
// 0x0008 (0x0008 - 0x0000)
struct ElevatorTeleportV2_C_TeleportActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleportV2_C_TeleportActor) == 0x000008, "Wrong alignment on ElevatorTeleportV2_C_TeleportActor");
static_assert(sizeof(ElevatorTeleportV2_C_TeleportActor) == 0x000008, "Wrong size on ElevatorTeleportV2_C_TeleportActor");
static_assert(offsetof(ElevatorTeleportV2_C_TeleportActor, Actor) == 0x000000, "Member 'ElevatorTeleportV2_C_TeleportActor::Actor' has a wrong offset!");

}

