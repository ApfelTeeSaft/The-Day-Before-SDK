#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_QuestComponent

#include "Basic.hpp"

#include "BP_QuestComponent_classes.hpp"
#include "BP_QuestComponent_parameters.hpp"


namespace SDK
{

// Function BP_QuestComponent.BP_QuestComponent_C.ActivateQuest
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   IndexInTable                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_QuestComponent_C::ActivateQuest(int32 IndexInTable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QuestComponent_C", "ActivateQuest");

	Params::BP_QuestComponent_C_ActivateQuest Parms{};

	Parms.IndexInTable = IndexInTable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_QuestComponent.BP_QuestComponent_C.CompleteObjective
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   QuestIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ObjectiveIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Delay                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_QuestComponent_C::CompleteObjective(int32 QuestIndex, int32 ObjectiveIndex, double Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QuestComponent_C", "CompleteObjective");

	Params::BP_QuestComponent_C_CompleteObjective Parms{};

	Parms.QuestIndex = QuestIndex;
	Parms.ObjectiveIndex = ObjectiveIndex;
	Parms.Delay = Delay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_QuestComponent.BP_QuestComponent_C.ConstructLoadedQuests
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<int32, struct FQuestSaveStructure> QuestInfo                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    Constructed                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_QuestComponent_C::ConstructLoadedQuests(const TMap<int32, struct FQuestSaveStructure>& QuestInfo, bool* Constructed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QuestComponent_C", "ConstructLoadedQuests");

	Params::BP_QuestComponent_C_ConstructLoadedQuests Parms{};

	Parms.QuestInfo = std::move(QuestInfo);

	UObject::ProcessEvent(Func, &Parms);

	if (Constructed != nullptr)
		*Constructed = Parms.Constructed;
}


// Function BP_QuestComponent.BP_QuestComponent_C.ConstructRootObjectiveCollection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             ObjectiveName                                          (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    OrderRequired                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             ObjectiveDescription                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// class UBP_ObjCollection_C*              RootObjectiveCollection                                (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_QuestComponent_C::ConstructRootObjectiveCollection(const class FText& ObjectiveName, bool OrderRequired, const class FText& ObjectiveDescription, class UBP_ObjCollection_C** RootObjectiveCollection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QuestComponent_C", "ConstructRootObjectiveCollection");

	Params::BP_QuestComponent_C_ConstructRootObjectiveCollection Parms{};

	Parms.ObjectiveName = std::move(ObjectiveName);
	Parms.OrderRequired = OrderRequired;
	Parms.ObjectiveDescription = std::move(ObjectiveDescription);

	UObject::ProcessEvent(Func, &Parms);

	if (RootObjectiveCollection != nullptr)
		*RootObjectiveCollection = Parms.RootObjectiveCollection;
}


// Function BP_QuestComponent.BP_QuestComponent_C.ExecuteUbergraph_BP_QuestComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_QuestComponent_C::ExecuteUbergraph_BP_QuestComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QuestComponent_C", "ExecuteUbergraph_BP_QuestComponent");

	Params::BP_QuestComponent_C_ExecuteUbergraph_BP_QuestComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_QuestComponent.BP_QuestComponent_C.Get Objective
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   QuestIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ObjectiveIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_Objective_C*                  Output                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_QuestComponent_C::Get_Objective(int32 QuestIndex, int32 ObjectiveIndex, class UBP_Objective_C** Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QuestComponent_C", "Get Objective");

	Params::BP_QuestComponent_C_Get_Objective Parms{};

	Parms.QuestIndex = QuestIndex;
	Parms.ObjectiveIndex = ObjectiveIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = Parms.Output;
}


// Function BP_QuestComponent.BP_QuestComponent_C.GetAllQuests
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class UBP_ObjCollection_C*>      Values                                                 (Parm, OutParm)

void UBP_QuestComponent_C::GetAllQuests(TArray<class UBP_ObjCollection_C*>* Values)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QuestComponent_C", "GetAllQuests");

	Params::BP_QuestComponent_C_GetAllQuests Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Values != nullptr)
		*Values = std::move(Parms.Values);
}


// Function BP_QuestComponent.BP_QuestComponent_C.InitializeQuestWidget
// (BlueprintCallable, BlueprintEvent)

void UBP_QuestComponent_C::InitializeQuestWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QuestComponent_C", "InitializeQuestWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_QuestComponent.BP_QuestComponent_C.IsObjectiveActive
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   QuestIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ObjectiveIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_IsActive                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_Objective_C*                  Objective                                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_QuestComponent_C::IsObjectiveActive(int32 QuestIndex, int32 ObjectiveIndex, bool* Param_IsActive, class UBP_Objective_C** Objective)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QuestComponent_C", "IsObjectiveActive");

	Params::BP_QuestComponent_C_IsObjectiveActive Parms{};

	Parms.QuestIndex = QuestIndex;
	Parms.ObjectiveIndex = ObjectiveIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsActive != nullptr)
		*Param_IsActive = Parms.Param_IsActive;

	if (Objective != nullptr)
		*Objective = Parms.Objective;
}


// Function BP_QuestComponent.BP_QuestComponent_C.IsObjectiveCompleted
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   QuestIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ObjectiveIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsComplete                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_QuestComponent_C::IsObjectiveCompleted(int32 QuestIndex, int32 ObjectiveIndex, bool* IsComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QuestComponent_C", "IsObjectiveCompleted");

	Params::BP_QuestComponent_C_IsObjectiveCompleted Parms{};

	Parms.QuestIndex = QuestIndex;
	Parms.ObjectiveIndex = ObjectiveIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (IsComplete != nullptr)
		*IsComplete = Parms.IsComplete;
}


// Function BP_QuestComponent.BP_QuestComponent_C.IsQuestActive
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   QuestIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_IsActive                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_QuestComponent_C::IsQuestActive(int32 QuestIndex, bool* Param_IsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QuestComponent_C", "IsQuestActive");

	Params::BP_QuestComponent_C_IsQuestActive Parms{};

	Parms.QuestIndex = QuestIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsActive != nullptr)
		*Param_IsActive = Parms.Param_IsActive;
}


// Function BP_QuestComponent.BP_QuestComponent_C.MakeQuestsInfo
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<int32, struct FQuestSaveStructure> QuestsInfo                                             (Parm, OutParm)

void UBP_QuestComponent_C::MakeQuestsInfo(TMap<int32, struct FQuestSaveStructure>* QuestsInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QuestComponent_C", "MakeQuestsInfo");

	Params::BP_QuestComponent_C_MakeQuestsInfo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (QuestsInfo != nullptr)
		*QuestsInfo = std::move(Parms.QuestsInfo);
}


// Function BP_QuestComponent.BP_QuestComponent_C.OnActivated__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_Objective_C*                  RootObjectiveCollection                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_QuestComponent_C::OnActivated__DelegateSignature(class UBP_Objective_C* RootObjectiveCollection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QuestComponent_C", "OnActivated__DelegateSignature");

	Params::BP_QuestComponent_C_OnActivated__DelegateSignature Parms{};

	Parms.RootObjectiveCollection = RootObjectiveCollection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_QuestComponent.BP_QuestComponent_C.PopulateObjectives
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_ObjCollection_C*              RootObjCollection                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<struct FObjective>               Objectives                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_QuestComponent_C::PopulateObjectives(class UBP_ObjCollection_C* RootObjCollection, TArray<struct FObjective>& Objectives)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QuestComponent_C", "PopulateObjectives");

	Params::BP_QuestComponent_C_PopulateObjectives Parms{};

	Parms.RootObjCollection = RootObjCollection;
	Parms.Objectives = std::move(Objectives);

	UObject::ProcessEvent(Func, &Parms);

	Objectives = std::move(Parms.Objectives);
}


// Function BP_QuestComponent.BP_QuestComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_QuestComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QuestComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_QuestComponent.BP_QuestComponent_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_QuestComponent_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QuestComponent_C", "ReceiveEndPlay");

	Params::BP_QuestComponent_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_QuestComponent.BP_QuestComponent_C.TestSave
// (BlueprintCallable, BlueprintEvent)

void UBP_QuestComponent_C::TestSave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QuestComponent_C", "TestSave");

	UObject::ProcessEvent(Func, nullptr);
}

}

