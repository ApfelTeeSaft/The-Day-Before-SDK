#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_RPShopSlot

#include "Basic.hpp"

#include "FItemInfo_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "AttachmentInfo_structs.hpp"
#include "FMODStudio_structs.hpp"


namespace SDK::Params
{

// Function W_RPShopSlot.W_RPShopSlot_C.ExecuteUbergraph_W_RPShopSlot
// 0x0088 (0x0088 - 0x0000)
struct W_RPShopSlot_C_ExecuteUbergraph_W_RPShopSlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue_1;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_2;    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_3;    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default;                             // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RPShopSlot_C_ExecuteUbergraph_W_RPShopSlot) == 0x000008, "Wrong alignment on W_RPShopSlot_C_ExecuteUbergraph_W_RPShopSlot");
static_assert(sizeof(W_RPShopSlot_C_ExecuteUbergraph_W_RPShopSlot) == 0x000088, "Wrong size on W_RPShopSlot_C_ExecuteUbergraph_W_RPShopSlot");
static_assert(offsetof(W_RPShopSlot_C_ExecuteUbergraph_W_RPShopSlot, EntryPoint) == 0x000000, "Member 'W_RPShopSlot_C_ExecuteUbergraph_W_RPShopSlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_ExecuteUbergraph_W_RPShopSlot, Temp_bool_Variable) == 0x000004, "Member 'W_RPShopSlot_C_ExecuteUbergraph_W_RPShopSlot::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_ExecuteUbergraph_W_RPShopSlot, Temp_struct_Variable) == 0x000008, "Member 'W_RPShopSlot_C_ExecuteUbergraph_W_RPShopSlot::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_ExecuteUbergraph_W_RPShopSlot, CallFunc_BreakVector2D_X) == 0x000018, "Member 'W_RPShopSlot_C_ExecuteUbergraph_W_RPShopSlot::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_ExecuteUbergraph_W_RPShopSlot, CallFunc_BreakVector2D_Y) == 0x000020, "Member 'W_RPShopSlot_C_ExecuteUbergraph_W_RPShopSlot::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_ExecuteUbergraph_W_RPShopSlot, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000028, "Member 'W_RPShopSlot_C_ExecuteUbergraph_W_RPShopSlot::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_ExecuteUbergraph_W_RPShopSlot, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x000029, "Member 'W_RPShopSlot_C_ExecuteUbergraph_W_RPShopSlot::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_ExecuteUbergraph_W_RPShopSlot, Temp_struct_Variable_1) == 0x000030, "Member 'W_RPShopSlot_C_ExecuteUbergraph_W_RPShopSlot::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_ExecuteUbergraph_W_RPShopSlot, CallFunc_BooleanAND_ReturnValue) == 0x000040, "Member 'W_RPShopSlot_C_ExecuteUbergraph_W_RPShopSlot::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_ExecuteUbergraph_W_RPShopSlot, CallFunc_PlayEvent2D_ReturnValue) == 0x000048, "Member 'W_RPShopSlot_C_ExecuteUbergraph_W_RPShopSlot::CallFunc_PlayEvent2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_ExecuteUbergraph_W_RPShopSlot, CallFunc_PlayEvent2D_ReturnValue_1) == 0x000050, "Member 'W_RPShopSlot_C_ExecuteUbergraph_W_RPShopSlot::CallFunc_PlayEvent2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_ExecuteUbergraph_W_RPShopSlot, K2Node_Event_IsDesignTime) == 0x000058, "Member 'W_RPShopSlot_C_ExecuteUbergraph_W_RPShopSlot::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_ExecuteUbergraph_W_RPShopSlot, CallFunc_BreakVector2D_X_1) == 0x000060, "Member 'W_RPShopSlot_C_ExecuteUbergraph_W_RPShopSlot::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_ExecuteUbergraph_W_RPShopSlot, CallFunc_BreakVector2D_Y_1) == 0x000068, "Member 'W_RPShopSlot_C_ExecuteUbergraph_W_RPShopSlot::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_ExecuteUbergraph_W_RPShopSlot, CallFunc_EqualEqual_DoubleDouble_ReturnValue_2) == 0x000070, "Member 'W_RPShopSlot_C_ExecuteUbergraph_W_RPShopSlot::CallFunc_EqualEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_ExecuteUbergraph_W_RPShopSlot, CallFunc_EqualEqual_DoubleDouble_ReturnValue_3) == 0x000071, "Member 'W_RPShopSlot_C_ExecuteUbergraph_W_RPShopSlot::CallFunc_EqualEqual_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_ExecuteUbergraph_W_RPShopSlot, CallFunc_BooleanAND_ReturnValue_1) == 0x000072, "Member 'W_RPShopSlot_C_ExecuteUbergraph_W_RPShopSlot::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_ExecuteUbergraph_W_RPShopSlot, CallFunc_BooleanOR_ReturnValue) == 0x000073, "Member 'W_RPShopSlot_C_ExecuteUbergraph_W_RPShopSlot::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_ExecuteUbergraph_W_RPShopSlot, K2Node_Select_Default) == 0x000078, "Member 'W_RPShopSlot_C_ExecuteUbergraph_W_RPShopSlot::K2Node_Select_Default' has a wrong offset!");

// Function W_RPShopSlot.W_RPShopSlot_C.Hovered 
// 0x0010 (0x0010 - 0x0000)
struct W_RPShopSlot_C_Hovered_ final
{
public:
	bool                                          With_Anim;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_Hovered;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RPShopSlot_C_Hovered_) == 0x000008, "Wrong alignment on W_RPShopSlot_C_Hovered_");
static_assert(sizeof(W_RPShopSlot_C_Hovered_) == 0x000010, "Wrong size on W_RPShopSlot_C_Hovered_");
static_assert(offsetof(W_RPShopSlot_C_Hovered_, With_Anim) == 0x000000, "Member 'W_RPShopSlot_C_Hovered_::With_Anim' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Hovered_, Param_Hovered) == 0x000001, "Member 'W_RPShopSlot_C_Hovered_::Param_Hovered' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Hovered_, Temp_bool_Variable) == 0x000002, "Member 'W_RPShopSlot_C_Hovered_::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Hovered_, Temp_byte_Variable) == 0x000003, "Member 'W_RPShopSlot_C_Hovered_::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Hovered_, Temp_byte_Variable_1) == 0x000004, "Member 'W_RPShopSlot_C_Hovered_::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Hovered_, K2Node_Select_Default) == 0x000005, "Member 'W_RPShopSlot_C_Hovered_::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Hovered_, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'W_RPShopSlot_C_Hovered_::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function W_RPShopSlot.W_RPShopSlot_C.Init
// 0x0660 (0x0660 - 0x0000)
struct W_RPShopSlot_C_Init final
{
public:
	double                                        Param_Price;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0038(0x0018)()
	int32                                         CallFunc_GetTotalMoneyCount_ReturnedCount;         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0084(0x0014)()
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_2;                // 0x009C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x00B0(0x0018)()
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_3;                // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x00D8(0x0014)()
	struct FAttachmentInfo                        CallFunc_Array_Get_Item;                           // 0x00EC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow;           // 0x0108(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_329[0x7];                                      // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperSprite*                           K2Node_DynamicCast_AsPaper_Sprite;                 // 0x0330(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_MakeBrushFromSprite_ReturnValue;          // 0x0340(0x00D0)()
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x041C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41D[0x3];                                      // 0x041D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0420(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0640(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_641[0x7];                                      // 0x0641(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0648(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0650(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RPShopSlot_C_Init) == 0x000010, "Wrong alignment on W_RPShopSlot_C_Init");
static_assert(sizeof(W_RPShopSlot_C_Init) == 0x000660, "Wrong size on W_RPShopSlot_C_Init");
static_assert(offsetof(W_RPShopSlot_C_Init, Param_Price) == 0x000000, "Member 'W_RPShopSlot_C_Init::Param_Price' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Init, Temp_int_Array_Index_Variable) == 0x000008, "Member 'W_RPShopSlot_C_Init::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Init, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'W_RPShopSlot_C_Init::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Init, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'W_RPShopSlot_C_Init::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Init, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'W_RPShopSlot_C_Init::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Init, CallFunc_K2_GetPawn_ReturnValue) == 0x000020, "Member 'W_RPShopSlot_C_Init::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Init, K2Node_DynamicCast_AsSurvival_Player) == 0x000028, "Member 'W_RPShopSlot_C_Init::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Init, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'W_RPShopSlot_C_Init::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Init, CallFunc_Conv_IntToText_ReturnValue) == 0x000038, "Member 'W_RPShopSlot_C_Init::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Init, CallFunc_GetTotalMoneyCount_ReturnedCount) == 0x000050, "Member 'W_RPShopSlot_C_Init::CallFunc_GetTotalMoneyCount_ReturnedCount' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Init, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000058, "Member 'W_RPShopSlot_C_Init::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Init, CallFunc_Greater_IntInt_ReturnValue) == 0x000060, "Member 'W_RPShopSlot_C_Init::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Init, CallFunc_SelectColor_ReturnValue) == 0x000064, "Member 'W_RPShopSlot_C_Init::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Init, CallFunc_SelectColor_ReturnValue_1) == 0x000074, "Member 'W_RPShopSlot_C_Init::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Init, K2Node_MakeStruct_SlateColor) == 0x000084, "Member 'W_RPShopSlot_C_Init::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Init, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000098, "Member 'W_RPShopSlot_C_Init::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Init, CallFunc_SelectColor_ReturnValue_2) == 0x00009C, "Member 'W_RPShopSlot_C_Init::CallFunc_SelectColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Init, CallFunc_Round_ReturnValue) == 0x0000AC, "Member 'W_RPShopSlot_C_Init::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Init, CallFunc_Conv_IntToText_ReturnValue_1) == 0x0000B0, "Member 'W_RPShopSlot_C_Init::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Init, CallFunc_SelectColor_ReturnValue_3) == 0x0000C8, "Member 'W_RPShopSlot_C_Init::CallFunc_SelectColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Init, K2Node_MakeStruct_SlateColor_1) == 0x0000D8, "Member 'W_RPShopSlot_C_Init::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Init, CallFunc_Array_Get_Item) == 0x0000EC, "Member 'W_RPShopSlot_C_Init::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Init, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000100, "Member 'W_RPShopSlot_C_Init::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Init, CallFunc_GetDataTableRowFromName_OutRow) == 0x000108, "Member 'W_RPShopSlot_C_Init::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Init, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000328, "Member 'W_RPShopSlot_C_Init::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Init, K2Node_DynamicCast_AsPaper_Sprite) == 0x000330, "Member 'W_RPShopSlot_C_Init::K2Node_DynamicCast_AsPaper_Sprite' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Init, K2Node_DynamicCast_bSuccess_1) == 0x000338, "Member 'W_RPShopSlot_C_Init::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Init, CallFunc_MakeBrushFromSprite_ReturnValue) == 0x000340, "Member 'W_RPShopSlot_C_Init::CallFunc_MakeBrushFromSprite_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Init, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000410, "Member 'W_RPShopSlot_C_Init::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Init, CallFunc_Array_Length_ReturnValue) == 0x000418, "Member 'W_RPShopSlot_C_Init::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Init, CallFunc_Less_IntInt_ReturnValue) == 0x00041C, "Member 'W_RPShopSlot_C_Init::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Init, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000420, "Member 'W_RPShopSlot_C_Init::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Init, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000640, "Member 'W_RPShopSlot_C_Init::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Init, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000648, "Member 'W_RPShopSlot_C_Init::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Init, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000650, "Member 'W_RPShopSlot_C_Init::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function W_RPShopSlot.W_RPShopSlot_C.OnPressed(RPShopSlot)__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_RPShopSlot_C_OnPressed_RPShopSlot___DelegateSignature final
{
public:
	class UW_RPShopSlot_C*                        Ref;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RPShopSlot_C_OnPressed_RPShopSlot___DelegateSignature) == 0x000008, "Wrong alignment on W_RPShopSlot_C_OnPressed_RPShopSlot___DelegateSignature");
static_assert(sizeof(W_RPShopSlot_C_OnPressed_RPShopSlot___DelegateSignature) == 0x000008, "Wrong size on W_RPShopSlot_C_OnPressed_RPShopSlot___DelegateSignature");
static_assert(offsetof(W_RPShopSlot_C_OnPressed_RPShopSlot___DelegateSignature, Ref) == 0x000000, "Member 'W_RPShopSlot_C_OnPressed_RPShopSlot___DelegateSignature::Ref' has a wrong offset!");

// Function W_RPShopSlot.W_RPShopSlot_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_RPShopSlot_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RPShopSlot_C_PreConstruct) == 0x000001, "Wrong alignment on W_RPShopSlot_C_PreConstruct");
static_assert(sizeof(W_RPShopSlot_C_PreConstruct) == 0x000001, "Wrong size on W_RPShopSlot_C_PreConstruct");
static_assert(offsetof(W_RPShopSlot_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_RPShopSlot_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_RPShopSlot.W_RPShopSlot_C.Selected 
// 0x0009 (0x0009 - 0x0000)
struct W_RPShopSlot_C_Selected_ final
{
public:
	bool                                          Param_Selected;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RPShopSlot_C_Selected_) == 0x000001, "Wrong alignment on W_RPShopSlot_C_Selected_");
static_assert(sizeof(W_RPShopSlot_C_Selected_) == 0x000009, "Wrong size on W_RPShopSlot_C_Selected_");
static_assert(offsetof(W_RPShopSlot_C_Selected_, Param_Selected) == 0x000000, "Member 'W_RPShopSlot_C_Selected_::Param_Selected' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Selected_, Temp_bool_Variable) == 0x000001, "Member 'W_RPShopSlot_C_Selected_::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Selected_, Temp_byte_Variable) == 0x000002, "Member 'W_RPShopSlot_C_Selected_::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Selected_, Temp_byte_Variable_1) == 0x000003, "Member 'W_RPShopSlot_C_Selected_::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Selected_, Temp_bool_Variable_1) == 0x000004, "Member 'W_RPShopSlot_C_Selected_::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Selected_, Temp_byte_Variable_2) == 0x000005, "Member 'W_RPShopSlot_C_Selected_::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Selected_, Temp_byte_Variable_3) == 0x000006, "Member 'W_RPShopSlot_C_Selected_::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Selected_, K2Node_Select_Default) == 0x000007, "Member 'W_RPShopSlot_C_Selected_::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_RPShopSlot_C_Selected_, K2Node_Select_Default_1) == 0x000008, "Member 'W_RPShopSlot_C_Selected_::K2Node_Select_Default_1' has a wrong offset!");

// Function W_RPShopSlot.W_RPShopSlot_C.SetPlayerStatus
// 0x0001 (0x0001 - 0x0000)
struct W_RPShopSlot_C_SetPlayerStatus final
{
public:
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RPShopSlot_C_SetPlayerStatus) == 0x000001, "Wrong alignment on W_RPShopSlot_C_SetPlayerStatus");
static_assert(sizeof(W_RPShopSlot_C_SetPlayerStatus) == 0x000001, "Wrong size on W_RPShopSlot_C_SetPlayerStatus");
static_assert(offsetof(W_RPShopSlot_C_SetPlayerStatus, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000000, "Member 'W_RPShopSlot_C_SetPlayerStatus::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

}

