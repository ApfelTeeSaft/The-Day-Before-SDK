#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WeaponPlaceholder

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FMODStudio_structs.hpp"
#include "Survival_classes.hpp"
#include "FItemInfo_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BPS_WeaponData_structs.hpp"
#include "BPE_Weapon_Type_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass WeaponPlaceholder.WeaponPlaceholder_C
// 0x0B10 (0x0DA0 - 0x0290)
class AWeaponPlaceholder_C final : public ATDB_WeaponPlaceHolder
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_WeaponWithOwnFOV_C*                 BP_WeaponWithOwnFOV;                               // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EquipTimeline_RotVector_40E477054169E594AA8F5CBF8B94EB4A; // 0x02A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EquipTimeline_PosVector_40E477054169E594AA8F5CBF8B94EB4A; // 0x02B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            EquipTimeline__Direction_40E477054169E594AA8F5CBF8B94EB4A; // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     EquipTimeline;                                     // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         MB_Equip_strength_D84800614184ECCB658D75A7329B946D; // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            MB_Equip__Direction_D84800614184ECCB658D75A7329B946D; // 0x02E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E5[0x3];                                      // 0x02E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     MB_Equip;                                          // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         MotionBlur_Timeline_strength_E030717B410F67758F53E3A3E1843DCA; // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            MotionBlur_Timeline__Direction_E030717B410F67758F53E3A3E1843DCA; // 0x02F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F5[0x3];                                      // 0x02F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     MotionBlur_Timeline;                               // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RecoilTimeline_RecoilRotVector_A0BD55C04645876433B3148D9569FF2A; // 0x0300(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RecoilTimeline_RecoilPosVector_A0BD55C04645876433B3148D9569FF2A; // 0x0318(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            RecoilTimeline__Direction_A0BD55C04645876433B3148D9569FF2A; // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     RecoilTimeline;                                    // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          Mesh;                                              // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Interp, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Animator;                                          // 0x0348(0x0030)(Edit, BlueprintVisible, Interp, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Main;                                              // 0x0378(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_379[0x7];                                      // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATrailerFunctions_C*                    TrFuncs;                                           // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Aiming;                                            // 0x0388(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	EBPE_Weapon_Type                              WeaponType;                                        // 0x0389(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_38A[0x6];                                      // 0x038A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Weapon_C*                           BP_Weapon;                                         // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        CurrentAmmo;                                       // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	double                                        HaveAmmo;                                          // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	bool                                          CurrentAiming;                                     // 0x03A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A9[0x7];                                      // 0x03A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             FPSOffset;                                         // 0x03B0(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               PreviousRot;                                       // 0x0410(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               DeltaRot;                                          // 0x0428(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                AttOffset;                                         // 0x0440(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Delta_Seconds;                                     // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PosRecoilOffset;                                   // 0x0460(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RotRecoilOffset;                                   // 0x0478(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnAimChanged;                                      // 0x0490(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          MovedToCamera;                                     // 0x04A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A1[0x7];                                      // 0x04A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Interp_Speed;                                      // 0x04A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Shake_Class;                                       // 0x04B0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash)
	struct FBPS_WeaponData                        WeaponData;                                        // 0x04E0(0x04C0)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FVector                                MeshOffset;                                        // 0x09A0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               MeshRotOffset;                                     // 0x09B8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFMODEventInstance                     NewVar_0;                                          // 0x09D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	double                                        LightRadius;                                       // 0x09D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_BaseAttachment_C*>           Attachments;                                       // 0x09E0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	struct FVector                                FireEmitterLocation;                               // 0x09F0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        MuzzleSceneComponent;                              // 0x0A08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Scale;                                             // 0x0A10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      SmokeNiagara;                                      // 0x0A18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnWeaponChanged;                                   // 0x0A20(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class ABP_ScopeBase_C*                        Scope;                                             // 0x0A30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          WeaponLerpFinished;                                // 0x0A38(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A39[0x7];                                      // 0x0A39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                AdditionalWeaponOffset;                            // 0x0A40(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AdditionalPosRecoil;                               // 0x0A58(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             ItemInfo;                                          // 0x0A70(0x0220)(Edit, BlueprintVisible, Net, DisableEditOnInstance, RepNotify, ContainsInstancedReference, HasGetValueTypeHash)
	class UCurveVector*                           FPPLocal_Recoil_Rot;                               // 0x0C90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          RandomRecoilRotX;                                  // 0x0C98(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RandomRecoilRotY;                                  // 0x0C99(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9A[0x6];                                      // 0x0C9A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        WeaponLength;                                      // 0x0CA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_LinearMotionBlurCage_C*             MB_Cage;                                           // 0x0CA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         SupressedEffect_TPS;                               // 0x0CB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         SupressedEffect_FPS;                               // 0x0CB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Cocking;                                           // 0x0CC0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WithScope;                                         // 0x0CC1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RandomRecoilRotZ;                                  // 0x0CC2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC3[0x5];                                      // 0x0CC3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                MainMeshOffset;                                    // 0x0CC8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BaseAttachment_C*                   TacticalGrip;                                      // 0x0CE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Once_;                                             // 0x0CE8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CE9[0x3];                                      // 0x0CE9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   WeaponName;                                        // 0x0CEC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CF4[0x4];                                      // 0x0CF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                EquipPosVector;                                    // 0x0CF8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EquipRotVector;                                    // 0x0D10(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            MagStaticMesh;                                     // 0x0D28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_BaseAttachment_C*                   Handguard;                                         // 0x0D30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          TimelineUpdated_;                                  // 0x0D38(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D39[0x7];                                      // 0x0D39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         TPSMuzzleFlashTemplate;                            // 0x0D40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         FPSMuzzleFlashTemplate;                            // 0x0D48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         TPSSupressedMuzzleFlashTemplate;                   // 0x0D50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         FPSSupressedMuzzleFlashTemplate;                   // 0x0D58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      TPSMuzzleFlash;                                    // 0x0D60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      FPSMuzzleFlash;                                    // 0x0D68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      TPSSupressedMuzzleFlash;                           // 0x0D70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      FPSSupressedMuzzleFlash;                           // 0x0D78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         SmokeNiagaraTemplate;                              // 0x0D80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_BaseAttachment_C*                   Receiver;                                          // 0x0D88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_V2_C*                   As_Survival_Player_V2;                             // 0x0D90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ActivateFireEmitter();
	void ActivateMotionBlur(bool Activate, bool Vertical);
	void AttachmentsInitializeOnEquip();
	void AttachmentsOnAim(bool Aim);
	void DestroyAttachments();
	void DestroyOldMuzzleFlashes();
	void EquipTimeline__FinishedFunc();
	void EquipTimeline__UpdateFunc();
	void ExecuteUbergraph_WeaponPlaceholder(int32 EntryPoint);
	class UNiagaraComponent* GetMuzzleFlash();
	class UNiagaraSystem* GetMuzzleFlashTemplate();
	void HardTurnOff();
	void Initialize();
	void ManualBeginPlay();
	void MB_Equip__FinishedFunc();
	void MB_Equip__UpdateFunc();
	void MotionBlur_Timeline__FinishedFunc();
	void MotionBlur_Timeline__UpdateFunc();
	void OnAim(bool State, bool FPP);
	void OnAimChanged__DelegateSignature(bool Aim, bool FPP);
	void OnLoaded_6369AD904A2364E4CF88AF990635F3E3(class UObject* Loaded);
	void OnLoaded_6369AD904A2364E4CF88AF9946073D38(class UObject* Loaded);
	void OnLoaded_6369AD904A2364E4CF88AF996DA54355(class UObject* Loaded);
	void OnLoaded_6369AD904A2364E4CF88AF99A558EAF0(class UObject* Loaded);
	void OnLoaded_6E9018704F1801A8FF30BEA705CFDDEA(TSubclassOf<class UObject> Loaded);
	void OnRep_ItemInfo();
	void OnRep_WeaponName();
	void OnWeaponChanged__DelegateSignature();
	void PlayCockingRecoil();
	void PlayEquipWeapon();
	void PlayRecoil();
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveTick(float DeltaSeconds);
	void RecoilTimeline__FinishedFunc();
	void RecoilTimeline__UpdateFunc();
	void SetAnimator(TSoftClassPtr<class UClass> NewClass);
	void SetAttachments(bool UpdateAttachmentMultiplier);
	void SetReloading(double Duration);
	void SetShakeClass(TSoftClassPtr<class UClass> Param_Shake_Class);
	void SetWeapon(TSoftObjectPtr<class USkeletalMesh> NewMesh, TSoftClassPtr<class UClass> NewClass);
	void SetWeaponMuzzleFlashes(TSoftObjectPtr<class UNiagaraSystem> Param_TPSMuzzleFlash, TSoftObjectPtr<class UNiagaraSystem> Param_FPSMuzzleFlash, TSoftObjectPtr<class UNiagaraSystem> Param_TPSSupressedMuzzleFlash, TSoftObjectPtr<class UNiagaraSystem> Param_FPSSupressedMuzzleFlash);
	void SetWeaponTypeByName(bool* Finded);
	void ShowWPFakeShadow(bool NewCastHiddenShadow);
	void SpawnMuzzleFlashes();
	void Unhide_Attachments(class ASurvivalPlayer_V2_C* Surv);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WeaponPlaceholder_C">();
	}
	static class AWeaponPlaceholder_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWeaponPlaceholder_C>();
	}
};
static_assert(alignof(AWeaponPlaceholder_C) == 0x000010, "Wrong alignment on AWeaponPlaceholder_C");
static_assert(sizeof(AWeaponPlaceholder_C) == 0x000DA0, "Wrong size on AWeaponPlaceholder_C");
static_assert(offsetof(AWeaponPlaceholder_C, UberGraphFrame) == 0x000290, "Member 'AWeaponPlaceholder_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, BP_WeaponWithOwnFOV) == 0x000298, "Member 'AWeaponPlaceholder_C::BP_WeaponWithOwnFOV' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, EquipTimeline_RotVector_40E477054169E594AA8F5CBF8B94EB4A) == 0x0002A0, "Member 'AWeaponPlaceholder_C::EquipTimeline_RotVector_40E477054169E594AA8F5CBF8B94EB4A' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, EquipTimeline_PosVector_40E477054169E594AA8F5CBF8B94EB4A) == 0x0002B8, "Member 'AWeaponPlaceholder_C::EquipTimeline_PosVector_40E477054169E594AA8F5CBF8B94EB4A' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, EquipTimeline__Direction_40E477054169E594AA8F5CBF8B94EB4A) == 0x0002D0, "Member 'AWeaponPlaceholder_C::EquipTimeline__Direction_40E477054169E594AA8F5CBF8B94EB4A' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, EquipTimeline) == 0x0002D8, "Member 'AWeaponPlaceholder_C::EquipTimeline' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, MB_Equip_strength_D84800614184ECCB658D75A7329B946D) == 0x0002E0, "Member 'AWeaponPlaceholder_C::MB_Equip_strength_D84800614184ECCB658D75A7329B946D' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, MB_Equip__Direction_D84800614184ECCB658D75A7329B946D) == 0x0002E4, "Member 'AWeaponPlaceholder_C::MB_Equip__Direction_D84800614184ECCB658D75A7329B946D' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, MB_Equip) == 0x0002E8, "Member 'AWeaponPlaceholder_C::MB_Equip' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, MotionBlur_Timeline_strength_E030717B410F67758F53E3A3E1843DCA) == 0x0002F0, "Member 'AWeaponPlaceholder_C::MotionBlur_Timeline_strength_E030717B410F67758F53E3A3E1843DCA' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, MotionBlur_Timeline__Direction_E030717B410F67758F53E3A3E1843DCA) == 0x0002F4, "Member 'AWeaponPlaceholder_C::MotionBlur_Timeline__Direction_E030717B410F67758F53E3A3E1843DCA' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, MotionBlur_Timeline) == 0x0002F8, "Member 'AWeaponPlaceholder_C::MotionBlur_Timeline' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, RecoilTimeline_RecoilRotVector_A0BD55C04645876433B3148D9569FF2A) == 0x000300, "Member 'AWeaponPlaceholder_C::RecoilTimeline_RecoilRotVector_A0BD55C04645876433B3148D9569FF2A' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, RecoilTimeline_RecoilPosVector_A0BD55C04645876433B3148D9569FF2A) == 0x000318, "Member 'AWeaponPlaceholder_C::RecoilTimeline_RecoilPosVector_A0BD55C04645876433B3148D9569FF2A' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, RecoilTimeline__Direction_A0BD55C04645876433B3148D9569FF2A) == 0x000330, "Member 'AWeaponPlaceholder_C::RecoilTimeline__Direction_A0BD55C04645876433B3148D9569FF2A' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, RecoilTimeline) == 0x000338, "Member 'AWeaponPlaceholder_C::RecoilTimeline' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, Mesh) == 0x000340, "Member 'AWeaponPlaceholder_C::Mesh' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, Animator) == 0x000348, "Member 'AWeaponPlaceholder_C::Animator' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, Main) == 0x000378, "Member 'AWeaponPlaceholder_C::Main' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, TrFuncs) == 0x000380, "Member 'AWeaponPlaceholder_C::TrFuncs' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, Aiming) == 0x000388, "Member 'AWeaponPlaceholder_C::Aiming' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, WeaponType) == 0x000389, "Member 'AWeaponPlaceholder_C::WeaponType' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, BP_Weapon) == 0x000390, "Member 'AWeaponPlaceholder_C::BP_Weapon' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, CurrentAmmo) == 0x000398, "Member 'AWeaponPlaceholder_C::CurrentAmmo' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, HaveAmmo) == 0x0003A0, "Member 'AWeaponPlaceholder_C::HaveAmmo' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, CurrentAiming) == 0x0003A8, "Member 'AWeaponPlaceholder_C::CurrentAiming' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, FPSOffset) == 0x0003B0, "Member 'AWeaponPlaceholder_C::FPSOffset' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, PreviousRot) == 0x000410, "Member 'AWeaponPlaceholder_C::PreviousRot' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, DeltaRot) == 0x000428, "Member 'AWeaponPlaceholder_C::DeltaRot' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, AttOffset) == 0x000440, "Member 'AWeaponPlaceholder_C::AttOffset' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, Delta_Seconds) == 0x000458, "Member 'AWeaponPlaceholder_C::Delta_Seconds' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, PosRecoilOffset) == 0x000460, "Member 'AWeaponPlaceholder_C::PosRecoilOffset' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, RotRecoilOffset) == 0x000478, "Member 'AWeaponPlaceholder_C::RotRecoilOffset' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, OnAimChanged) == 0x000490, "Member 'AWeaponPlaceholder_C::OnAimChanged' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, MovedToCamera) == 0x0004A0, "Member 'AWeaponPlaceholder_C::MovedToCamera' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, Interp_Speed) == 0x0004A8, "Member 'AWeaponPlaceholder_C::Interp_Speed' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, Shake_Class) == 0x0004B0, "Member 'AWeaponPlaceholder_C::Shake_Class' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, WeaponData) == 0x0004E0, "Member 'AWeaponPlaceholder_C::WeaponData' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, MeshOffset) == 0x0009A0, "Member 'AWeaponPlaceholder_C::MeshOffset' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, MeshRotOffset) == 0x0009B8, "Member 'AWeaponPlaceholder_C::MeshRotOffset' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, NewVar_0) == 0x0009D0, "Member 'AWeaponPlaceholder_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, LightRadius) == 0x0009D8, "Member 'AWeaponPlaceholder_C::LightRadius' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, Attachments) == 0x0009E0, "Member 'AWeaponPlaceholder_C::Attachments' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, FireEmitterLocation) == 0x0009F0, "Member 'AWeaponPlaceholder_C::FireEmitterLocation' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, MuzzleSceneComponent) == 0x000A08, "Member 'AWeaponPlaceholder_C::MuzzleSceneComponent' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, Scale) == 0x000A10, "Member 'AWeaponPlaceholder_C::Scale' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, SmokeNiagara) == 0x000A18, "Member 'AWeaponPlaceholder_C::SmokeNiagara' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, OnWeaponChanged) == 0x000A20, "Member 'AWeaponPlaceholder_C::OnWeaponChanged' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, Scope) == 0x000A30, "Member 'AWeaponPlaceholder_C::Scope' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, WeaponLerpFinished) == 0x000A38, "Member 'AWeaponPlaceholder_C::WeaponLerpFinished' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, AdditionalWeaponOffset) == 0x000A40, "Member 'AWeaponPlaceholder_C::AdditionalWeaponOffset' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, AdditionalPosRecoil) == 0x000A58, "Member 'AWeaponPlaceholder_C::AdditionalPosRecoil' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, ItemInfo) == 0x000A70, "Member 'AWeaponPlaceholder_C::ItemInfo' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, FPPLocal_Recoil_Rot) == 0x000C90, "Member 'AWeaponPlaceholder_C::FPPLocal_Recoil_Rot' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, RandomRecoilRotX) == 0x000C98, "Member 'AWeaponPlaceholder_C::RandomRecoilRotX' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, RandomRecoilRotY) == 0x000C99, "Member 'AWeaponPlaceholder_C::RandomRecoilRotY' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, WeaponLength) == 0x000CA0, "Member 'AWeaponPlaceholder_C::WeaponLength' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, MB_Cage) == 0x000CA8, "Member 'AWeaponPlaceholder_C::MB_Cage' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, SupressedEffect_TPS) == 0x000CB0, "Member 'AWeaponPlaceholder_C::SupressedEffect_TPS' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, SupressedEffect_FPS) == 0x000CB8, "Member 'AWeaponPlaceholder_C::SupressedEffect_FPS' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, Cocking) == 0x000CC0, "Member 'AWeaponPlaceholder_C::Cocking' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, WithScope) == 0x000CC1, "Member 'AWeaponPlaceholder_C::WithScope' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, RandomRecoilRotZ) == 0x000CC2, "Member 'AWeaponPlaceholder_C::RandomRecoilRotZ' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, MainMeshOffset) == 0x000CC8, "Member 'AWeaponPlaceholder_C::MainMeshOffset' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, TacticalGrip) == 0x000CE0, "Member 'AWeaponPlaceholder_C::TacticalGrip' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, Once_) == 0x000CE8, "Member 'AWeaponPlaceholder_C::Once_' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, WeaponName) == 0x000CEC, "Member 'AWeaponPlaceholder_C::WeaponName' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, EquipPosVector) == 0x000CF8, "Member 'AWeaponPlaceholder_C::EquipPosVector' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, EquipRotVector) == 0x000D10, "Member 'AWeaponPlaceholder_C::EquipRotVector' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, MagStaticMesh) == 0x000D28, "Member 'AWeaponPlaceholder_C::MagStaticMesh' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, Handguard) == 0x000D30, "Member 'AWeaponPlaceholder_C::Handguard' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, TimelineUpdated_) == 0x000D38, "Member 'AWeaponPlaceholder_C::TimelineUpdated_' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, TPSMuzzleFlashTemplate) == 0x000D40, "Member 'AWeaponPlaceholder_C::TPSMuzzleFlashTemplate' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, FPSMuzzleFlashTemplate) == 0x000D48, "Member 'AWeaponPlaceholder_C::FPSMuzzleFlashTemplate' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, TPSSupressedMuzzleFlashTemplate) == 0x000D50, "Member 'AWeaponPlaceholder_C::TPSSupressedMuzzleFlashTemplate' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, FPSSupressedMuzzleFlashTemplate) == 0x000D58, "Member 'AWeaponPlaceholder_C::FPSSupressedMuzzleFlashTemplate' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, TPSMuzzleFlash) == 0x000D60, "Member 'AWeaponPlaceholder_C::TPSMuzzleFlash' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, FPSMuzzleFlash) == 0x000D68, "Member 'AWeaponPlaceholder_C::FPSMuzzleFlash' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, TPSSupressedMuzzleFlash) == 0x000D70, "Member 'AWeaponPlaceholder_C::TPSSupressedMuzzleFlash' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, FPSSupressedMuzzleFlash) == 0x000D78, "Member 'AWeaponPlaceholder_C::FPSSupressedMuzzleFlash' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, SmokeNiagaraTemplate) == 0x000D80, "Member 'AWeaponPlaceholder_C::SmokeNiagaraTemplate' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, Receiver) == 0x000D88, "Member 'AWeaponPlaceholder_C::Receiver' has a wrong offset!");
static_assert(offsetof(AWeaponPlaceholder_C, As_Survival_Player_V2) == 0x000D90, "Member 'AWeaponPlaceholder_C::As_Survival_Player_V2' has a wrong offset!");

}

