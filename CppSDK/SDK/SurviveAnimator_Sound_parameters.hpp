#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SurviveAnimator_Sound

#include "Basic.hpp"


namespace SDK::Params
{

// Function SurviveAnimator_Sound.SurviveAnimator_Sound_C.Crouch_Step_Sound
// 0x0001 (0x0001 - 0x0000)
struct SurviveAnimator_Sound_C_Crouch_Step_Sound final
{
public:
	bool                                          Right;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveAnimator_Sound_C_Crouch_Step_Sound) == 0x000001, "Wrong alignment on SurviveAnimator_Sound_C_Crouch_Step_Sound");
static_assert(sizeof(SurviveAnimator_Sound_C_Crouch_Step_Sound) == 0x000001, "Wrong size on SurviveAnimator_Sound_C_Crouch_Step_Sound");
static_assert(offsetof(SurviveAnimator_Sound_C_Crouch_Step_Sound, Right) == 0x000000, "Member 'SurviveAnimator_Sound_C_Crouch_Step_Sound::Right' has a wrong offset!");

// Function SurviveAnimator_Sound.SurviveAnimator_Sound_C.ExecuteUbergraph_SurviveAnimator_Sound
// 0x00F8 (0x00F8 - 0x0000)
struct SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue_1;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue_2;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue_3;          // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_3;               // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue_4;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_1; // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODAudioComponent*                    CallFunc_PlayEventAttached_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_PlayEventAttached_ReturnValue_1;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_PlayEventAttached_ReturnValue_2;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_PlayEventAttached_ReturnValue_3;          // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_PlayEventAttached_ReturnValue_4;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_PlayEventWithOcclusion_FMODAudioComponent; // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_PlayEventWithOcclusion_FMODAudioComponent_1; // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_PlayEventWithOcclusion_FMODAudioComponent_2; // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_PlayEventWithOcclusion_FMODAudioComponent_3; // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_PlayEventWithOcclusion_FMODAudioComponent_4; // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_PlayEventWithOcclusion_FMODAudioComponent_5; // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_PlayEventWithOcclusion_FMODAudioComponent_6; // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_PlayEventWithOcclusion_FMODAudioComponent_7; // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_PlayEventWithOcclusion_FMODAudioComponent_8; // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_PlayEventWithOcclusion_FMODAudioComponent_9; // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_PlayEventWithOcclusion_FMODAudioComponent_10; // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_PlayEventWithOcclusion_FMODAudioComponent_11; // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_PlayEventWithOcclusion_FMODAudioComponent_12; // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_PlayEventWithOcclusion_FMODAudioComponent_13; // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_PlayEventWithOcclusion_FMODAudioComponent_14; // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_PlayEventWithOcclusion_FMODAudioComponent_15; // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_PlayEventWithOcclusion_FMODAudioComponent_16; // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_PlayEventWithOcclusion_FMODAudioComponent_17; // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_3;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayStepForSurface_IsFlatSurface;         // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayStepForSurface_IsFlatSurface_1;       // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayStepForSurface_IsFlatSurface_2;       // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayStepForSurface_IsFlatSurface_3;       // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayStepForSurface_IsFlatSurface_4;       // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayStepForSurface_IsFlatSurface_5;       // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayStepForSurface_IsFlatSurface_6;       // 0x00E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayStepForSurface_IsFlatSurface_7;       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayStepForSurface_IsFlatSurface_8;       // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayStepForSurface_IsFlatSurface_9;       // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_2; // 0x00EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_3; // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_4; // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Right_4;                              // 0x00EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Right_3;                              // 0x00EF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Right_2;                              // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Right_1;                              // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Right;                                // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_4;               // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_4;                     // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound) == 0x000008, "Wrong alignment on SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound");
static_assert(sizeof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound) == 0x0000F8, "Wrong size on SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, EntryPoint) == 0x000000, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::EntryPoint' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, Temp_bool_IsClosed_Variable) == 0x000004, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, Temp_bool_Has_Been_Initd_Variable) == 0x000005, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, Temp_bool_IsClosed_Variable_1) == 0x000006, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, CallFunc_NotEqual_NameName_ReturnValue) == 0x000007, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, Temp_bool_Has_Been_Initd_Variable_1) == 0x000008, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, CallFunc_NotEqual_NameName_ReturnValue_1) == 0x000009, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::CallFunc_NotEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, Temp_bool_IsClosed_Variable_2) == 0x00000A, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x00000B, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, CallFunc_NotEqual_NameName_ReturnValue_2) == 0x00000C, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::CallFunc_NotEqual_NameName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, Temp_bool_Has_Been_Initd_Variable_2) == 0x00000D, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, CallFunc_NotEqual_NameName_ReturnValue_3) == 0x00000E, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::CallFunc_NotEqual_NameName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, Temp_bool_Has_Been_Initd_Variable_3) == 0x00000F, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::Temp_bool_Has_Been_Initd_Variable_3' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, CallFunc_NotEqual_NameName_ReturnValue_4) == 0x000010, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::CallFunc_NotEqual_NameName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, K2Node_Event_DeltaTimeX) == 0x000014, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, CallFunc_GetOwningComponent_ReturnValue) == 0x000018, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_1) == 0x000020, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_1' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, CallFunc_PlayEventAttached_ReturnValue) == 0x000028, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::CallFunc_PlayEventAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, CallFunc_PlayEventAttached_ReturnValue_1) == 0x000030, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::CallFunc_PlayEventAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, CallFunc_PlayEventAttached_ReturnValue_2) == 0x000038, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::CallFunc_PlayEventAttached_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, CallFunc_PlayEventAttached_ReturnValue_3) == 0x000040, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::CallFunc_PlayEventAttached_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, CallFunc_PlayEventAttached_ReturnValue_4) == 0x000048, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::CallFunc_PlayEventAttached_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, CallFunc_PlayEventWithOcclusion_FMODAudioComponent) == 0x000050, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::CallFunc_PlayEventWithOcclusion_FMODAudioComponent' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, CallFunc_PlayEventWithOcclusion_FMODAudioComponent_1) == 0x000058, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::CallFunc_PlayEventWithOcclusion_FMODAudioComponent_1' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, CallFunc_PlayEventWithOcclusion_FMODAudioComponent_2) == 0x000060, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::CallFunc_PlayEventWithOcclusion_FMODAudioComponent_2' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, CallFunc_PlayEventWithOcclusion_FMODAudioComponent_3) == 0x000068, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::CallFunc_PlayEventWithOcclusion_FMODAudioComponent_3' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, CallFunc_PlayEventWithOcclusion_FMODAudioComponent_4) == 0x000070, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::CallFunc_PlayEventWithOcclusion_FMODAudioComponent_4' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, CallFunc_PlayEventWithOcclusion_FMODAudioComponent_5) == 0x000078, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::CallFunc_PlayEventWithOcclusion_FMODAudioComponent_5' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, CallFunc_PlayEventWithOcclusion_FMODAudioComponent_6) == 0x000080, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::CallFunc_PlayEventWithOcclusion_FMODAudioComponent_6' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, CallFunc_PlayEventWithOcclusion_FMODAudioComponent_7) == 0x000088, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::CallFunc_PlayEventWithOcclusion_FMODAudioComponent_7' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, CallFunc_PlayEventWithOcclusion_FMODAudioComponent_8) == 0x000090, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::CallFunc_PlayEventWithOcclusion_FMODAudioComponent_8' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, CallFunc_PlayEventWithOcclusion_FMODAudioComponent_9) == 0x000098, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::CallFunc_PlayEventWithOcclusion_FMODAudioComponent_9' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, CallFunc_PlayEventWithOcclusion_FMODAudioComponent_10) == 0x0000A0, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::CallFunc_PlayEventWithOcclusion_FMODAudioComponent_10' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, CallFunc_PlayEventWithOcclusion_FMODAudioComponent_11) == 0x0000A8, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::CallFunc_PlayEventWithOcclusion_FMODAudioComponent_11' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, CallFunc_PlayEventWithOcclusion_FMODAudioComponent_12) == 0x0000B0, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::CallFunc_PlayEventWithOcclusion_FMODAudioComponent_12' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, CallFunc_PlayEventWithOcclusion_FMODAudioComponent_13) == 0x0000B8, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::CallFunc_PlayEventWithOcclusion_FMODAudioComponent_13' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, CallFunc_PlayEventWithOcclusion_FMODAudioComponent_14) == 0x0000C0, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::CallFunc_PlayEventWithOcclusion_FMODAudioComponent_14' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, CallFunc_PlayEventWithOcclusion_FMODAudioComponent_15) == 0x0000C8, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::CallFunc_PlayEventWithOcclusion_FMODAudioComponent_15' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, CallFunc_PlayEventWithOcclusion_FMODAudioComponent_16) == 0x0000D0, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::CallFunc_PlayEventWithOcclusion_FMODAudioComponent_16' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, CallFunc_PlayEventWithOcclusion_FMODAudioComponent_17) == 0x0000D8, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::CallFunc_PlayEventWithOcclusion_FMODAudioComponent_17' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, Temp_bool_IsClosed_Variable_3) == 0x0000E0, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::Temp_bool_IsClosed_Variable_3' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, CallFunc_PlayStepForSurface_IsFlatSurface) == 0x0000E1, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::CallFunc_PlayStepForSurface_IsFlatSurface' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, CallFunc_PlayStepForSurface_IsFlatSurface_1) == 0x0000E2, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::CallFunc_PlayStepForSurface_IsFlatSurface_1' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, CallFunc_PlayStepForSurface_IsFlatSurface_2) == 0x0000E3, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::CallFunc_PlayStepForSurface_IsFlatSurface_2' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, CallFunc_PlayStepForSurface_IsFlatSurface_3) == 0x0000E4, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::CallFunc_PlayStepForSurface_IsFlatSurface_3' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, CallFunc_PlayStepForSurface_IsFlatSurface_4) == 0x0000E5, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::CallFunc_PlayStepForSurface_IsFlatSurface_4' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, CallFunc_PlayStepForSurface_IsFlatSurface_5) == 0x0000E6, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::CallFunc_PlayStepForSurface_IsFlatSurface_5' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, CallFunc_PlayStepForSurface_IsFlatSurface_6) == 0x0000E7, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::CallFunc_PlayStepForSurface_IsFlatSurface_6' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, CallFunc_PlayStepForSurface_IsFlatSurface_7) == 0x0000E8, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::CallFunc_PlayStepForSurface_IsFlatSurface_7' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, CallFunc_PlayStepForSurface_IsFlatSurface_8) == 0x0000E9, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::CallFunc_PlayStepForSurface_IsFlatSurface_8' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, CallFunc_PlayStepForSurface_IsFlatSurface_9) == 0x0000EA, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::CallFunc_PlayStepForSurface_IsFlatSurface_9' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_2) == 0x0000EB, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_2' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_3) == 0x0000EC, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_3' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_4) == 0x0000ED, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_4' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, K2Node_Event_Right_4) == 0x0000EE, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::K2Node_Event_Right_4' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, K2Node_Event_Right_3) == 0x0000EF, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::K2Node_Event_Right_3' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, K2Node_Event_Right_2) == 0x0000F0, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::K2Node_Event_Right_2' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, K2Node_Event_Right_1) == 0x0000F1, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::K2Node_Event_Right_1' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, K2Node_Event_Right) == 0x0000F2, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::K2Node_Event_Right' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, Temp_bool_Has_Been_Initd_Variable_4) == 0x0000F3, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::Temp_bool_Has_Been_Initd_Variable_4' has a wrong offset!");
static_assert(offsetof(SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound, Temp_bool_IsClosed_Variable_4) == 0x0000F4, "Member 'SurviveAnimator_Sound_C_ExecuteUbergraph_SurviveAnimator_Sound::Temp_bool_IsClosed_Variable_4' has a wrong offset!");

// Function SurviveAnimator_Sound.SurviveAnimator_Sound_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct SurviveAnimator_Sound_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveAnimator_Sound_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on SurviveAnimator_Sound_C_BlueprintUpdateAnimation");
static_assert(sizeof(SurviveAnimator_Sound_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on SurviveAnimator_Sound_C_BlueprintUpdateAnimation");
static_assert(offsetof(SurviveAnimator_Sound_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'SurviveAnimator_Sound_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function SurviveAnimator_Sound.SurviveAnimator_Sound_C.Run_Sound
// 0x0001 (0x0001 - 0x0000)
struct SurviveAnimator_Sound_C_Run_Sound final
{
public:
	bool                                          Right;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveAnimator_Sound_C_Run_Sound) == 0x000001, "Wrong alignment on SurviveAnimator_Sound_C_Run_Sound");
static_assert(sizeof(SurviveAnimator_Sound_C_Run_Sound) == 0x000001, "Wrong size on SurviveAnimator_Sound_C_Run_Sound");
static_assert(offsetof(SurviveAnimator_Sound_C_Run_Sound, Right) == 0x000000, "Member 'SurviveAnimator_Sound_C_Run_Sound::Right' has a wrong offset!");

// Function SurviveAnimator_Sound.SurviveAnimator_Sound_C.Step_Soft_Sound
// 0x0001 (0x0001 - 0x0000)
struct SurviveAnimator_Sound_C_Step_Soft_Sound final
{
public:
	bool                                          Right;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveAnimator_Sound_C_Step_Soft_Sound) == 0x000001, "Wrong alignment on SurviveAnimator_Sound_C_Step_Soft_Sound");
static_assert(sizeof(SurviveAnimator_Sound_C_Step_Soft_Sound) == 0x000001, "Wrong size on SurviveAnimator_Sound_C_Step_Soft_Sound");
static_assert(offsetof(SurviveAnimator_Sound_C_Step_Soft_Sound, Right) == 0x000000, "Member 'SurviveAnimator_Sound_C_Step_Soft_Sound::Right' has a wrong offset!");

// Function SurviveAnimator_Sound.SurviveAnimator_Sound_C.Step_Sound
// 0x0001 (0x0001 - 0x0000)
struct SurviveAnimator_Sound_C_Step_Sound final
{
public:
	bool                                          Right;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveAnimator_Sound_C_Step_Sound) == 0x000001, "Wrong alignment on SurviveAnimator_Sound_C_Step_Sound");
static_assert(sizeof(SurviveAnimator_Sound_C_Step_Sound) == 0x000001, "Wrong size on SurviveAnimator_Sound_C_Step_Sound");
static_assert(offsetof(SurviveAnimator_Sound_C_Step_Sound, Right) == 0x000000, "Member 'SurviveAnimator_Sound_C_Step_Sound::Right' has a wrong offset!");

// Function SurviveAnimator_Sound.SurviveAnimator_Sound_C.Walk_Sound
// 0x0001 (0x0001 - 0x0000)
struct SurviveAnimator_Sound_C_Walk_Sound final
{
public:
	bool                                          Right;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveAnimator_Sound_C_Walk_Sound) == 0x000001, "Wrong alignment on SurviveAnimator_Sound_C_Walk_Sound");
static_assert(sizeof(SurviveAnimator_Sound_C_Walk_Sound) == 0x000001, "Wrong size on SurviveAnimator_Sound_C_Walk_Sound");
static_assert(offsetof(SurviveAnimator_Sound_C_Walk_Sound, Right) == 0x000000, "Member 'SurviveAnimator_Sound_C_Walk_Sound::Right' has a wrong offset!");

}

