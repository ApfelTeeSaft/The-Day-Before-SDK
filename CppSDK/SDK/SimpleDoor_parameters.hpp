#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SimpleDoor

#include "Basic.hpp"

#include "E_ActorType_structs.hpp"
#include "Engine_structs.hpp"
#include "SimpleDoorState_structs.hpp"
#include "E_InteractType_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function SimpleDoor.SimpleDoor_C.Close
// 0x0010 (0x0010 - 0x0000)
struct SimpleDoor_C_Close final
{
public:
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimpleDoor_C_Close) == 0x000008, "Wrong alignment on SimpleDoor_C_Close");
static_assert(sizeof(SimpleDoor_C_Close) == 0x000010, "Wrong size on SimpleDoor_C_Close");
static_assert(offsetof(SimpleDoor_C_Close, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000000, "Member 'SimpleDoor_C_Close::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_Close, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'SimpleDoor_C_Close::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function SimpleDoor.SimpleDoor_C.Disable
// 0x0010 (0x0010 - 0x0000)
struct SimpleDoor_C_Disable final
{
public:
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue;      // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimpleDoor_C_Disable) == 0x000004, "Wrong alignment on SimpleDoor_C_Disable");
static_assert(sizeof(SimpleDoor_C_Disable) == 0x000010, "Wrong size on SimpleDoor_C_Disable");
static_assert(offsetof(SimpleDoor_C_Disable, CallFunc_Conv_ColorToLinearColor_ReturnValue) == 0x000000, "Member 'SimpleDoor_C_Disable::CallFunc_Conv_ColorToLinearColor_ReturnValue' has a wrong offset!");

// Function SimpleDoor.SimpleDoor_C.EnableWithIndicatorTexture
// 0x0010 (0x0010 - 0x0000)
struct SimpleDoor_C_EnableWithIndicatorTexture final
{
public:
	class UTexture*                               IndicatorTexture;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimpleDoor_C_EnableWithIndicatorTexture) == 0x000008, "Wrong alignment on SimpleDoor_C_EnableWithIndicatorTexture");
static_assert(sizeof(SimpleDoor_C_EnableWithIndicatorTexture) == 0x000010, "Wrong size on SimpleDoor_C_EnableWithIndicatorTexture");
static_assert(offsetof(SimpleDoor_C_EnableWithIndicatorTexture, IndicatorTexture) == 0x000000, "Member 'SimpleDoor_C_EnableWithIndicatorTexture::IndicatorTexture' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_EnableWithIndicatorTexture, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000008, "Member 'SimpleDoor_C_EnableWithIndicatorTexture::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_EnableWithIndicatorTexture, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000009, "Member 'SimpleDoor_C_EnableWithIndicatorTexture::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");

// Function SimpleDoor.SimpleDoor_C.ExecuteUbergraph_SimpleDoor
// 0x0278 (0x0278 - 0x0000)
struct SimpleDoor_C_ExecuteUbergraph_SimpleDoor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0040(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_143[0x5];                                      // 0x0143(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Text_1;                         // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player_1;                             // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_Event_Player_2;                             // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GeneralInterface_C> K2Node_DynamicCast_AsBPI_General_Interface;        // 0x0180(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AElectricityGenerator_C*                K2Node_Event_Generator;                            // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_CustomEvent_Player;                         // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IElectricityConsumer_C> CallFunc_AddListener_Listener_CastInput;           // 0x01D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_FMODPlayEventAttached_ReturnValue;        // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Visible;                              // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EA[0x6];                                      // 0x01EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Text;                           // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Visible_1;                            // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x3];                                      // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_PlayEventAttached_ReturnValue;            // 0x0208(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODAudioComponent*                    CallFunc_PlayEventAttached_ReturnValue_1;          // 0x0218(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player;                               // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_3;                             // 0x0228(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_4;                             // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_5;                             // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_6;                             // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_7;                             // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SitIndex;                             // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_SkipAnimation;                        // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_255[0x3];                                      // 0x0255(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player_8;                             // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_9;                             // 0x0260(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VLerp_Alpha_ImplicitCast;                 // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor) == 0x000008, "Wrong alignment on SimpleDoor_C_ExecuteUbergraph_SimpleDoor");
static_assert(sizeof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor) == 0x000278, "Wrong size on SimpleDoor_C_ExecuteUbergraph_SimpleDoor");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, EntryPoint) == 0x000000, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::EntryPoint' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, K2Node_SwitchEnum_CmpSuccess) == 0x000004, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, K2Node_SwitchEnum_CmpSuccess_1) == 0x000005, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000006, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, CallFunc_BreakVector_X) == 0x000008, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, CallFunc_BreakVector_Y) == 0x000010, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, CallFunc_BreakVector_Z) == 0x000018, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, CallFunc_VLerp_ReturnValue) == 0x000020, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000038, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000040, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, CallFunc_MakeVector_ReturnValue) == 0x000128, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x000140, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, CallFunc_HasAuthority_ReturnValue) == 0x000141, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, CallFunc_HasAuthority_ReturnValue_1) == 0x000142, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, K2Node_CustomEvent_Text_1) == 0x000148, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::K2Node_CustomEvent_Text_1' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, CallFunc_GetMaterial_ReturnValue) == 0x000158, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000160, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, K2Node_SwitchEnum_CmpSuccess_2) == 0x000168, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, K2Node_Event_Player_1) == 0x000170, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::K2Node_Event_Player_1' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, K2Node_Event_Player_2) == 0x000178, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::K2Node_Event_Player_2' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, K2Node_DynamicCast_AsBPI_General_Interface) == 0x000180, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::K2Node_DynamicCast_AsBPI_General_Interface' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, K2Node_DynamicCast_bSuccess) == 0x000190, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, K2Node_Event_DeltaSeconds) == 0x000194, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000198, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0001A0, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, CallFunc_FClamp_ReturnValue) == 0x0001A8, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0001B0, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, CallFunc_FClamp_ReturnValue_1) == 0x0001B8, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, K2Node_Event_Generator) == 0x0001C0, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::K2Node_Event_Generator' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, K2Node_CustomEvent_Player) == 0x0001C8, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::K2Node_CustomEvent_Player' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, CallFunc_AddListener_Listener_CastInput) == 0x0001D0, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::CallFunc_AddListener_Listener_CastInput' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, CallFunc_FMODPlayEventAttached_ReturnValue) == 0x0001E0, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::CallFunc_FMODPlayEventAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, CallFunc_HasAuthority_ReturnValue_2) == 0x0001E8, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, K2Node_Event_Visible) == 0x0001E9, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::K2Node_Event_Visible' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, K2Node_CustomEvent_Text) == 0x0001F0, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::K2Node_CustomEvent_Text' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, K2Node_Event_Visible_1) == 0x000200, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::K2Node_Event_Visible_1' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, CallFunc_Array_Add_ReturnValue) == 0x000204, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, CallFunc_PlayEventAttached_ReturnValue) == 0x000208, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::CallFunc_PlayEventAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, CallFunc_HasAuthority_ReturnValue_3) == 0x000210, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, CallFunc_PlayEventAttached_ReturnValue_1) == 0x000218, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::CallFunc_PlayEventAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, K2Node_Event_Player) == 0x000220, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::K2Node_Event_Player' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, K2Node_Event_Player_3) == 0x000228, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::K2Node_Event_Player_3' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, K2Node_Event_Player_4) == 0x000230, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::K2Node_Event_Player_4' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, K2Node_Event_Player_5) == 0x000238, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::K2Node_Event_Player_5' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, K2Node_Event_Player_6) == 0x000240, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::K2Node_Event_Player_6' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, K2Node_Event_Player_7) == 0x000248, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::K2Node_Event_Player_7' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, K2Node_Event_SitIndex) == 0x000250, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::K2Node_Event_SitIndex' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, K2Node_Event_SkipAnimation) == 0x000254, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::K2Node_Event_SkipAnimation' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, K2Node_Event_Player_8) == 0x000258, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::K2Node_Event_Player_8' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, K2Node_Event_Player_9) == 0x000260, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::K2Node_Event_Player_9' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, CallFunc_VLerp_Alpha_ImplicitCast) == 0x000268, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::CallFunc_VLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ExecuteUbergraph_SimpleDoor, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000270, "Member 'SimpleDoor_C_ExecuteUbergraph_SimpleDoor::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function SimpleDoor.SimpleDoor_C.GeneratorEnabledClientSide
// 0x0008 (0x0008 - 0x0000)
struct SimpleDoor_C_GeneratorEnabledClientSide final
{
public:
	class ASurvivalPlayer_C*                      Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimpleDoor_C_GeneratorEnabledClientSide) == 0x000008, "Wrong alignment on SimpleDoor_C_GeneratorEnabledClientSide");
static_assert(sizeof(SimpleDoor_C_GeneratorEnabledClientSide) == 0x000008, "Wrong size on SimpleDoor_C_GeneratorEnabledClientSide");
static_assert(offsetof(SimpleDoor_C_GeneratorEnabledClientSide, Player) == 0x000000, "Member 'SimpleDoor_C_GeneratorEnabledClientSide::Player' has a wrong offset!");

// Function SimpleDoor.SimpleDoor_C.GetActorType
// 0x0001 (0x0001 - 0x0000)
struct SimpleDoor_C_GetActorType final
{
public:
	E_ActorType                                   ActorType;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimpleDoor_C_GetActorType) == 0x000001, "Wrong alignment on SimpleDoor_C_GetActorType");
static_assert(sizeof(SimpleDoor_C_GetActorType) == 0x000001, "Wrong size on SimpleDoor_C_GetActorType");
static_assert(offsetof(SimpleDoor_C_GetActorType, ActorType) == 0x000000, "Member 'SimpleDoor_C_GetActorType::ActorType' has a wrong offset!");

// Function SimpleDoor.SimpleDoor_C.InteractClientSide
// 0x0010 (0x0010 - 0x0000)
struct SimpleDoor_C_InteractClientSide final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(SimpleDoor_C_InteractClientSide) == 0x000008, "Wrong alignment on SimpleDoor_C_InteractClientSide");
static_assert(sizeof(SimpleDoor_C_InteractClientSide) == 0x000010, "Wrong size on SimpleDoor_C_InteractClientSide");
static_assert(offsetof(SimpleDoor_C_InteractClientSide, Text) == 0x000000, "Member 'SimpleDoor_C_InteractClientSide::Text' has a wrong offset!");

// Function SimpleDoor.SimpleDoor_C.InteractClientSideV2
// 0x0010 (0x0010 - 0x0000)
struct SimpleDoor_C_InteractClientSideV2 final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(SimpleDoor_C_InteractClientSideV2) == 0x000008, "Wrong alignment on SimpleDoor_C_InteractClientSideV2");
static_assert(sizeof(SimpleDoor_C_InteractClientSideV2) == 0x000010, "Wrong size on SimpleDoor_C_InteractClientSideV2");
static_assert(offsetof(SimpleDoor_C_InteractClientSideV2, Text) == 0x000000, "Member 'SimpleDoor_C_InteractClientSideV2::Text' has a wrong offset!");

// Function SimpleDoor.SimpleDoor_C.IsLocked?
// 0x0001 (0x0001 - 0x0000)
struct SimpleDoor_C_IsLocked_ final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimpleDoor_C_IsLocked_) == 0x000001, "Wrong alignment on SimpleDoor_C_IsLocked_");
static_assert(sizeof(SimpleDoor_C_IsLocked_) == 0x000001, "Wrong size on SimpleDoor_C_IsLocked_");
static_assert(offsetof(SimpleDoor_C_IsLocked_, Result) == 0x000000, "Member 'SimpleDoor_C_IsLocked_::Result' has a wrong offset!");

// Function SimpleDoor.SimpleDoor_C.OnBeginInteract
// 0x0008 (0x0008 - 0x0000)
struct SimpleDoor_C_OnBeginInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimpleDoor_C_OnBeginInteract) == 0x000008, "Wrong alignment on SimpleDoor_C_OnBeginInteract");
static_assert(sizeof(SimpleDoor_C_OnBeginInteract) == 0x000008, "Wrong size on SimpleDoor_C_OnBeginInteract");
static_assert(offsetof(SimpleDoor_C_OnBeginInteract, Player) == 0x000000, "Member 'SimpleDoor_C_OnBeginInteract::Player' has a wrong offset!");

// Function SimpleDoor.SimpleDoor_C.OnFocused
// 0x0050 (0x0050 - 0x0000)
struct SimpleDoor_C_OnFocused final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HighlightActor;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        HighlightActorComponent;                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_InteractType                                InteractType;                                      // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LateTime;                                          // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_PlayerMain_C*                      CallFunc_GetGUI_GUI;                               // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimpleDoor_C_OnFocused) == 0x000008, "Wrong alignment on SimpleDoor_C_OnFocused");
static_assert(sizeof(SimpleDoor_C_OnFocused) == 0x000050, "Wrong size on SimpleDoor_C_OnFocused");
static_assert(offsetof(SimpleDoor_C_OnFocused, Player) == 0x000000, "Member 'SimpleDoor_C_OnFocused::Player' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_OnFocused, HighlightActor) == 0x000008, "Member 'SimpleDoor_C_OnFocused::HighlightActor' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_OnFocused, HighlightActorComponent) == 0x000010, "Member 'SimpleDoor_C_OnFocused::HighlightActorComponent' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_OnFocused, InteractType) == 0x000018, "Member 'SimpleDoor_C_OnFocused::InteractType' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_OnFocused, LateTime) == 0x000020, "Member 'SimpleDoor_C_OnFocused::LateTime' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_OnFocused, CallFunc_GetPlayerController_ReturnValue) == 0x000028, "Member 'SimpleDoor_C_OnFocused::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_OnFocused, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x000030, "Member 'SimpleDoor_C_OnFocused::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_OnFocused, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'SimpleDoor_C_OnFocused::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_OnFocused, CallFunc_GetGUI_GUI) == 0x000048, "Member 'SimpleDoor_C_OnFocused::CallFunc_GetGUI_GUI' has a wrong offset!");

// Function SimpleDoor.SimpleDoor_C.OnGeneratorEnabled
// 0x0008 (0x0008 - 0x0000)
struct SimpleDoor_C_OnGeneratorEnabled final
{
public:
	class ASurvivalPlayer_C*                      Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimpleDoor_C_OnGeneratorEnabled) == 0x000008, "Wrong alignment on SimpleDoor_C_OnGeneratorEnabled");
static_assert(sizeof(SimpleDoor_C_OnGeneratorEnabled) == 0x000008, "Wrong size on SimpleDoor_C_OnGeneratorEnabled");
static_assert(offsetof(SimpleDoor_C_OnGeneratorEnabled, Player) == 0x000000, "Member 'SimpleDoor_C_OnGeneratorEnabled::Player' has a wrong offset!");

// Function SimpleDoor.SimpleDoor_C.OnInteract
// 0x0008 (0x0008 - 0x0000)
struct SimpleDoor_C_OnInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimpleDoor_C_OnInteract) == 0x000008, "Wrong alignment on SimpleDoor_C_OnInteract");
static_assert(sizeof(SimpleDoor_C_OnInteract) == 0x000008, "Wrong size on SimpleDoor_C_OnInteract");
static_assert(offsetof(SimpleDoor_C_OnInteract, Player) == 0x000000, "Member 'SimpleDoor_C_OnInteract::Player' has a wrong offset!");

// Function SimpleDoor.SimpleDoor_C.OnInteract2
// 0x0008 (0x0008 - 0x0000)
struct SimpleDoor_C_OnInteract2 final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimpleDoor_C_OnInteract2) == 0x000008, "Wrong alignment on SimpleDoor_C_OnInteract2");
static_assert(sizeof(SimpleDoor_C_OnInteract2) == 0x000008, "Wrong size on SimpleDoor_C_OnInteract2");
static_assert(offsetof(SimpleDoor_C_OnInteract2, Player) == 0x000000, "Member 'SimpleDoor_C_OnInteract2::Player' has a wrong offset!");

// Function SimpleDoor.SimpleDoor_C.OnInteract3
// 0x0008 (0x0008 - 0x0000)
struct SimpleDoor_C_OnInteract3 final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimpleDoor_C_OnInteract3) == 0x000008, "Wrong alignment on SimpleDoor_C_OnInteract3");
static_assert(sizeof(SimpleDoor_C_OnInteract3) == 0x000008, "Wrong size on SimpleDoor_C_OnInteract3");
static_assert(offsetof(SimpleDoor_C_OnInteract3, Player) == 0x000000, "Member 'SimpleDoor_C_OnInteract3::Player' has a wrong offset!");

// Function SimpleDoor.SimpleDoor_C.OnInteractVehicle
// 0x0010 (0x0010 - 0x0000)
struct SimpleDoor_C_OnInteractVehicle final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         SitIndex;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipAnimation;                                     // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimpleDoor_C_OnInteractVehicle) == 0x000008, "Wrong alignment on SimpleDoor_C_OnInteractVehicle");
static_assert(sizeof(SimpleDoor_C_OnInteractVehicle) == 0x000010, "Wrong size on SimpleDoor_C_OnInteractVehicle");
static_assert(offsetof(SimpleDoor_C_OnInteractVehicle, Player) == 0x000000, "Member 'SimpleDoor_C_OnInteractVehicle::Player' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_OnInteractVehicle, SitIndex) == 0x000008, "Member 'SimpleDoor_C_OnInteractVehicle::SitIndex' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_OnInteractVehicle, SkipAnimation) == 0x00000C, "Member 'SimpleDoor_C_OnInteractVehicle::SkipAnimation' has a wrong offset!");

// Function SimpleDoor.SimpleDoor_C.OnLocalInteract
// 0x0008 (0x0008 - 0x0000)
struct SimpleDoor_C_OnLocalInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimpleDoor_C_OnLocalInteract) == 0x000008, "Wrong alignment on SimpleDoor_C_OnLocalInteract");
static_assert(sizeof(SimpleDoor_C_OnLocalInteract) == 0x000008, "Wrong size on SimpleDoor_C_OnLocalInteract");
static_assert(offsetof(SimpleDoor_C_OnLocalInteract, Player) == 0x000000, "Member 'SimpleDoor_C_OnLocalInteract::Player' has a wrong offset!");

// Function SimpleDoor.SimpleDoor_C.OnLostFocus
// 0x0008 (0x0008 - 0x0000)
struct SimpleDoor_C_OnLostFocus final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimpleDoor_C_OnLostFocus) == 0x000008, "Wrong alignment on SimpleDoor_C_OnLostFocus");
static_assert(sizeof(SimpleDoor_C_OnLostFocus) == 0x000008, "Wrong size on SimpleDoor_C_OnLostFocus");
static_assert(offsetof(SimpleDoor_C_OnLostFocus, Player) == 0x000000, "Member 'SimpleDoor_C_OnLostFocus::Player' has a wrong offset!");

// Function SimpleDoor.SimpleDoor_C.OnSeen
// 0x0008 (0x0008 - 0x0000)
struct SimpleDoor_C_OnSeen final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimpleDoor_C_OnSeen) == 0x000008, "Wrong alignment on SimpleDoor_C_OnSeen");
static_assert(sizeof(SimpleDoor_C_OnSeen) == 0x000008, "Wrong size on SimpleDoor_C_OnSeen");
static_assert(offsetof(SimpleDoor_C_OnSeen, Player) == 0x000000, "Member 'SimpleDoor_C_OnSeen::Player' has a wrong offset!");

// Function SimpleDoor.SimpleDoor_C.OnStopInteract
// 0x0008 (0x0008 - 0x0000)
struct SimpleDoor_C_OnStopInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimpleDoor_C_OnStopInteract) == 0x000008, "Wrong alignment on SimpleDoor_C_OnStopInteract");
static_assert(sizeof(SimpleDoor_C_OnStopInteract) == 0x000008, "Wrong size on SimpleDoor_C_OnStopInteract");
static_assert(offsetof(SimpleDoor_C_OnStopInteract, Player) == 0x000000, "Member 'SimpleDoor_C_OnStopInteract::Player' has a wrong offset!");

// Function SimpleDoor.SimpleDoor_C.Open
// 0x0040 (0x0040 - 0x0000)
struct SimpleDoor_C_Open final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADoorEventHandlerActor_C*               CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GS_TDB_C>         K2Node_DynamicCast_AsBPI_GS_TDB;                   // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimpleDoor_C_Open) == 0x000008, "Wrong alignment on SimpleDoor_C_Open");
static_assert(sizeof(SimpleDoor_C_Open) == 0x000040, "Wrong size on SimpleDoor_C_Open");
static_assert(offsetof(SimpleDoor_C_Open, Temp_int_Array_Index_Variable) == 0x000000, "Member 'SimpleDoor_C_Open::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_Open, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'SimpleDoor_C_Open::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_Open, CallFunc_Array_Get_Item) == 0x000008, "Member 'SimpleDoor_C_Open::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_Open, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'SimpleDoor_C_Open::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_Open, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'SimpleDoor_C_Open::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_Open, CallFunc_IsValid_ReturnValue) == 0x000015, "Member 'SimpleDoor_C_Open::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_Open, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'SimpleDoor_C_Open::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_Open, CallFunc_GetGameState_ReturnValue) == 0x000020, "Member 'SimpleDoor_C_Open::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_Open, K2Node_DynamicCast_AsBPI_GS_TDB) == 0x000028, "Member 'SimpleDoor_C_Open::K2Node_DynamicCast_AsBPI_GS_TDB' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_Open, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'SimpleDoor_C_Open::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function SimpleDoor.SimpleDoor_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct SimpleDoor_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimpleDoor_C_ReceiveTick) == 0x000004, "Wrong alignment on SimpleDoor_C_ReceiveTick");
static_assert(sizeof(SimpleDoor_C_ReceiveTick) == 0x000004, "Wrong size on SimpleDoor_C_ReceiveTick");
static_assert(offsetof(SimpleDoor_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'SimpleDoor_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function SimpleDoor.SimpleDoor_C.Set3DWidgetVisibility
// 0x0001 (0x0001 - 0x0000)
struct SimpleDoor_C_Set3DWidgetVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimpleDoor_C_Set3DWidgetVisibility) == 0x000001, "Wrong alignment on SimpleDoor_C_Set3DWidgetVisibility");
static_assert(sizeof(SimpleDoor_C_Set3DWidgetVisibility) == 0x000001, "Wrong size on SimpleDoor_C_Set3DWidgetVisibility");
static_assert(offsetof(SimpleDoor_C_Set3DWidgetVisibility, Visible) == 0x000000, "Member 'SimpleDoor_C_Set3DWidgetVisibility::Visible' has a wrong offset!");

// Function SimpleDoor.SimpleDoor_C.SetListener
// 0x0010 (0x0010 - 0x0000)
struct SimpleDoor_C_SetListener final
{
public:
	TScriptInterface<class IDoorListener_C>       Listener;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimpleDoor_C_SetListener) == 0x000008, "Wrong alignment on SimpleDoor_C_SetListener");
static_assert(sizeof(SimpleDoor_C_SetListener) == 0x000010, "Wrong size on SimpleDoor_C_SetListener");
static_assert(offsetof(SimpleDoor_C_SetListener, Listener) == 0x000000, "Member 'SimpleDoor_C_SetListener::Listener' has a wrong offset!");

// Function SimpleDoor.SimpleDoor_C.SetPointLightColor
// 0x0014 (0x0014 - 0x0000)
struct SimpleDoor_C_SetPointLightColor final
{
public:
	struct FColor                                 Color;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue;      // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimpleDoor_C_SetPointLightColor) == 0x000004, "Wrong alignment on SimpleDoor_C_SetPointLightColor");
static_assert(sizeof(SimpleDoor_C_SetPointLightColor) == 0x000014, "Wrong size on SimpleDoor_C_SetPointLightColor");
static_assert(offsetof(SimpleDoor_C_SetPointLightColor, Color) == 0x000000, "Member 'SimpleDoor_C_SetPointLightColor::Color' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_SetPointLightColor, CallFunc_Conv_ColorToLinearColor_ReturnValue) == 0x000004, "Member 'SimpleDoor_C_SetPointLightColor::CallFunc_Conv_ColorToLinearColor_ReturnValue' has a wrong offset!");

// Function SimpleDoor.SimpleDoor_C.SetState
// 0x0001 (0x0001 - 0x0000)
struct SimpleDoor_C_SetState final
{
public:
	ESimpleDoorState                              Param_State;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimpleDoor_C_SetState) == 0x000001, "Wrong alignment on SimpleDoor_C_SetState");
static_assert(sizeof(SimpleDoor_C_SetState) == 0x000001, "Wrong size on SimpleDoor_C_SetState");
static_assert(offsetof(SimpleDoor_C_SetState, Param_State) == 0x000000, "Member 'SimpleDoor_C_SetState::Param_State' has a wrong offset!");

// Function SimpleDoor.SimpleDoor_C.SetTutorial3DWidgetVisibility
// 0x0001 (0x0001 - 0x0000)
struct SimpleDoor_C_SetTutorial3DWidgetVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimpleDoor_C_SetTutorial3DWidgetVisibility) == 0x000001, "Wrong alignment on SimpleDoor_C_SetTutorial3DWidgetVisibility");
static_assert(sizeof(SimpleDoor_C_SetTutorial3DWidgetVisibility) == 0x000001, "Wrong size on SimpleDoor_C_SetTutorial3DWidgetVisibility");
static_assert(offsetof(SimpleDoor_C_SetTutorial3DWidgetVisibility, Visible) == 0x000000, "Member 'SimpleDoor_C_SetTutorial3DWidgetVisibility::Visible' has a wrong offset!");

// Function SimpleDoor.SimpleDoor_C.ShowSimpleText
// 0x0040 (0x0040 - 0x0000)
struct SimpleDoor_C_ShowSimpleText final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_PlayerMain_C*                      CallFunc_GetGUI_GUI;                               // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimpleDoor_C_ShowSimpleText) == 0x000008, "Wrong alignment on SimpleDoor_C_ShowSimpleText");
static_assert(sizeof(SimpleDoor_C_ShowSimpleText) == 0x000040, "Wrong size on SimpleDoor_C_ShowSimpleText");
static_assert(offsetof(SimpleDoor_C_ShowSimpleText, Text) == 0x000000, "Member 'SimpleDoor_C_ShowSimpleText::Text' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ShowSimpleText, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'SimpleDoor_C_ShowSimpleText::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ShowSimpleText, CallFunc_GetHUD_ReturnValue) == 0x000018, "Member 'SimpleDoor_C_ShowSimpleText::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ShowSimpleText, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x000020, "Member 'SimpleDoor_C_ShowSimpleText::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ShowSimpleText, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'SimpleDoor_C_ShowSimpleText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SimpleDoor_C_ShowSimpleText, CallFunc_GetGUI_GUI) == 0x000038, "Member 'SimpleDoor_C_ShowSimpleText::CallFunc_GetGUI_GUI' has a wrong offset!");

// Function SimpleDoor.SimpleDoor_C.SubscribeToGenerator
// 0x0008 (0x0008 - 0x0000)
struct SimpleDoor_C_SubscribeToGenerator final
{
public:
	class AElectricityGenerator_C*                Generator;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimpleDoor_C_SubscribeToGenerator) == 0x000008, "Wrong alignment on SimpleDoor_C_SubscribeToGenerator");
static_assert(sizeof(SimpleDoor_C_SubscribeToGenerator) == 0x000008, "Wrong size on SimpleDoor_C_SubscribeToGenerator");
static_assert(offsetof(SimpleDoor_C_SubscribeToGenerator, Generator) == 0x000000, "Member 'SimpleDoor_C_SubscribeToGenerator::Generator' has a wrong offset!");

}

