#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ShopContainerWidget

#include "Basic.hpp"

#include "ShopContainerWidget_classes.hpp"
#include "ShopContainerWidget_parameters.hpp"


namespace SDK
{

// Function ShopContainerWidget.ShopContainerWidget_C.Add Item Remove Money
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASurvivalPlayer_C*                PlayerReference                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   MoneyCount                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFItemInfo                       ItemInfo                                               (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// bool                                    IsBuyback                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UShopContainerWidget_C::Add_Item_Remove_Money(class ASurvivalPlayer_C* PlayerReference, int32 MoneyCount, const struct FFItemInfo& ItemInfo, bool IsBuyback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "Add Item Remove Money");

	Params::ShopContainerWidget_C_Add_Item_Remove_Money Parms{};

	Parms.PlayerReference = PlayerReference;
	Parms.MoneyCount = MoneyCount;
	Parms.ItemInfo = std::move(ItemInfo);
	Parms.IsBuyback = IsBuyback;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ShopContainerWidget.ShopContainerWidget_C.AliasesCheckingOnBuying
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFItemInfo                       FItemInfo                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
// bool                                    Find_                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UShopContainerWidget_C::AliasesCheckingOnBuying(const struct FFItemInfo& FItemInfo, bool* Find_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "AliasesCheckingOnBuying");

	Params::ShopContainerWidget_C_AliasesCheckingOnBuying Parms{};

	Parms.FItemInfo = std::move(FItemInfo);

	UObject::ProcessEvent(Func, &Parms);

	if (Find_ != nullptr)
		*Find_ = Parms.Find_;
}


// Function ShopContainerWidget.ShopContainerWidget_C.BuybackItem
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFItemInfo                       FItemInfo                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
// int32                                   Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UShopContainerWidget_C::BuybackItem(const struct FFItemInfo& FItemInfo, int32 Count, class UJSI_Slot_C* SlotRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "BuybackItem");

	Params::ShopContainerWidget_C_BuybackItem Parms{};

	Parms.FItemInfo = std::move(FItemInfo);
	Parms.Count = Count;
	Parms.SlotRef = SlotRef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ShopContainerWidget.ShopContainerWidget_C.BuybackOnMouseButtonDown
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FKey                             Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UShopContainerWidget_C::BuybackOnMouseButtonDown(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "BuybackOnMouseButtonDown");

	Params::ShopContainerWidget_C_BuybackOnMouseButtonDown Parms{};

	Parms.Container = Container;
	Parms.SlotRef = SlotRef;
	Parms.Button = std::move(Button);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ShopContainerWidget.ShopContainerWidget_C.BuybackProcess
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_OnAccept                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UShopContainerWidget_C::BuybackProcess(bool Param_OnAccept, int32 Count, class UJSI_Slot_C* SlotRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "BuybackProcess");

	Params::ShopContainerWidget_C_BuybackProcess Parms{};

	Parms.Param_OnAccept = Param_OnAccept;
	Parms.Count = Count;
	Parms.SlotRef = SlotRef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ShopContainerWidget.ShopContainerWidget_C.BuybackProcessByItemRef
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      Item_Ref                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UShopContainerWidget_C::BuybackProcessByItemRef(class UJSI_Slot_C* Item_Ref)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "BuybackProcessByItemRef");

	Params::ShopContainerWidget_C_BuybackProcessByItemRef Parms{};

	Parms.Item_Ref = Item_Ref;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ShopContainerWidget.ShopContainerWidget_C.BuyItem
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFItemInfo                       FItemInfo                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)

void UShopContainerWidget_C::BuyItem(const struct FFItemInfo& FItemInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "BuyItem");

	Params::ShopContainerWidget_C_BuyItem Parms{};

	Parms.FItemInfo = std::move(FItemInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ShopContainerWidget.ShopContainerWidget_C.BuyProcess
// (BlueprintCallable, BlueprintEvent)

void UShopContainerWidget_C::BuyProcess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "BuyProcess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ShopContainerWidget.ShopContainerWidget_C.BuyProcessByItemRef
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      ItemRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UShopContainerWidget_C::BuyProcessByItemRef(class UJSI_Slot_C* ItemRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "BuyProcessByItemRef");

	Params::ShopContainerWidget_C_BuyProcessByItemRef Parms{};

	Parms.ItemRef = ItemRef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ShopContainerWidget.ShopContainerWidget_C.Calculate Result Price
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FFItemInfo                       FItem                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// bool                                    bUseSellPrice                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ResultPrice                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UShopContainerWidget_C::Calculate_Result_Price(const struct FFItemInfo& FItem, bool bUseSellPrice, int32* ResultPrice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "Calculate Result Price");

	Params::ShopContainerWidget_C_Calculate_Result_Price Parms{};

	Parms.FItem = std::move(FItem);
	Parms.bUseSellPrice = bUseSellPrice;

	UObject::ProcessEvent(Func, &Parms);

	if (ResultPrice != nullptr)
		*ResultPrice = Parms.ResultPrice;
}


// Function ShopContainerWidget.ShopContainerWidget_C.ChangeLabelText
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UShopContainerWidget_C::ChangeLabelText(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "ChangeLabelText");

	Params::ShopContainerWidget_C_ChangeLabelText Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ShopContainerWidget.ShopContainerWidget_C.Check Can Buy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FFItemInfo                       FItem                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// bool                                    bUseSellPrice                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UShopContainerWidget_C::Check_Can_Buy(const struct FFItemInfo& FItem, bool bUseSellPrice, int32 Count, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "Check Can Buy");

	Params::ShopContainerWidget_C_Check_Can_Buy Parms{};

	Parms.FItem = std::move(FItem);
	Parms.bUseSellPrice = bUseSellPrice;
	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ShopContainerWidget.ShopContainerWidget_C.Check Free Space to Add Item
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFItemInfo                       FItemInfo                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UShopContainerWidget_C::Check_Free_Space_to_Add_Item(const struct FFItemInfo& FItemInfo, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "Check Free Space to Add Item");

	Params::ShopContainerWidget_C_Check_Free_Space_to_Add_Item Parms{};

	Parms.FItemInfo = std::move(FItemInfo);

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function ShopContainerWidget.ShopContainerWidget_C.CheckRPCount
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFItemInfo                       FItemInfo                                              (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UShopContainerWidget_C::CheckRPCount(const struct FFItemInfo& FItemInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "CheckRPCount");

	Params::ShopContainerWidget_C_CheckRPCount Parms{};

	Parms.FItemInfo = std::move(FItemInfo);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ShopContainerWidget.ShopContainerWidget_C.ClearAliasesArray
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UShopContainerWidget_C::ClearAliasesArray()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "ClearAliasesArray");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ShopContainerWidget.ShopContainerWidget_C.CloseShop__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UShopContainerWidget_C::CloseShop__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "CloseShop__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ShopContainerWidget.ShopContainerWidget_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UShopContainerWidget_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ShopContainerWidget.ShopContainerWidget_C.EventOnDropInfoContainertoContainer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  From                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  To                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      FromSlotRef                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      ToSlotRef                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    ToEmptySlot_                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    MovedAll_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UShopContainerWidget_C::EventOnDropInfoContainertoContainer(class UJSIContainer_C* From, class UJSIContainer_C* To, class UJSI_Slot_C* FromSlotRef, class UJSI_Slot_C* ToSlotRef, bool ToEmptySlot_, bool MovedAll_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "EventOnDropInfoContainertoContainer");

	Params::ShopContainerWidget_C_EventOnDropInfoContainertoContainer Parms{};

	Parms.From = From;
	Parms.To = To;
	Parms.FromSlotRef = FromSlotRef;
	Parms.ToSlotRef = ToSlotRef;
	Parms.ToEmptySlot_ = ToEmptySlot_;
	Parms.MovedAll_ = MovedAll_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ShopContainerWidget.ShopContainerWidget_C.ExecuteUbergraph_ShopContainerWidget
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UShopContainerWidget_C::ExecuteUbergraph_ShopContainerWidget(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "ExecuteUbergraph_ShopContainerWidget");

	Params::ShopContainerWidget_C_ExecuteUbergraph_ShopContainerWidget Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ShopContainerWidget.ShopContainerWidget_C.Get Entries
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class UJSI_Slot_C*>              Param_EntryList                                        (Parm, OutParm, ContainsInstancedReference)

void UShopContainerWidget_C::Get_Entries(TArray<class UJSI_Slot_C*>* Param_EntryList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "Get Entries");

	Params::ShopContainerWidget_C_Get_Entries Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_EntryList != nullptr)
		*Param_EntryList = std::move(Parms.Param_EntryList);
}


// Function ShopContainerWidget.ShopContainerWidget_C.Get Have Items to Repair
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Param_bHaveItemsToRepair                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UShopContainerWidget_C::Get_Have_Items_to_Repair(bool* Param_bHaveItemsToRepair)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "Get Have Items to Repair");

	Params::ShopContainerWidget_C_Get_Have_Items_to_Repair Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_bHaveItemsToRepair != nullptr)
		*Param_bHaveItemsToRepair = Parms.Param_bHaveItemsToRepair;
}


// Function ShopContainerWidget.ShopContainerWidget_C.GetAliases
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           In_Aliases                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Find_                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UShopContainerWidget_C::GetAliases(const class FString& In_Aliases, bool* Find_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "GetAliases");

	Params::ShopContainerWidget_C_GetAliases Parms{};

	Parms.In_Aliases = std::move(In_Aliases);

	UObject::ProcessEvent(Func, &Parms);

	if (Find_ != nullptr)
		*Find_ = Parms.Find_;
}


// Function ShopContainerWidget.ShopContainerWidget_C.GetPageIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_PageIndex                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UShopContainerWidget_C::GetPageIndex(int32* Param_PageIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "GetPageIndex");

	Params::ShopContainerWidget_C_GetPageIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_PageIndex != nullptr)
		*Param_PageIndex = Parms.Param_PageIndex;
}


// Function ShopContainerWidget.ShopContainerWidget_C.GetStatusAliases
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UShopContainerWidget_C::GetStatusAliases()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "GetStatusAliases");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ShopContainerWidget.ShopContainerWidget_C.Hide
// (BlueprintCallable, BlueprintEvent)

void UShopContainerWidget_C::Hide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "Hide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ShopContainerWidget.ShopContainerWidget_C.HideDialogue
// (Public, BlueprintCallable, BlueprintEvent)

void UShopContainerWidget_C::HideDialogue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "HideDialogue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ShopContainerWidget.ShopContainerWidget_C.HideItemInfo
// (Public, BlueprintCallable, BlueprintEvent)

void UShopContainerWidget_C::HideItemInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "HideItemInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ShopContainerWidget.ShopContainerWidget_C.InitAliases
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UShopContainerWidget_C::InitAliases()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "InitAliases");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ShopContainerWidget.ShopContainerWidget_C.InitBuyAssortment
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UShopContainerWidget_C::InitBuyAssortment()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "InitBuyAssortment");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ShopContainerWidget.ShopContainerWidget_C.InitBuybackItems
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UShopContainerWidget_C::InitBuybackItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "InitBuybackItems");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ShopContainerWidget.ShopContainerWidget_C.InitRepair
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UShopContainerWidget_C::InitRepair()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "InitRepair");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ShopContainerWidget.ShopContainerWidget_C.MakePickupItem
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FFItemInfo                       FItemInfo                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
// int32                                   SlotIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FContainerPickupsInfo            ContainerPickupsInfo                                   (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)

void UShopContainerWidget_C::MakePickupItem(const struct FFItemInfo& FItemInfo, int32 SlotIndex, int32 Count, struct FContainerPickupsInfo* ContainerPickupsInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "MakePickupItem");

	Params::ShopContainerWidget_C_MakePickupItem Parms{};

	Parms.FItemInfo = std::move(FItemInfo);
	Parms.SlotIndex = SlotIndex;
	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);

	if (ContainerPickupsInfo != nullptr)
		*ContainerPickupsInfo = std::move(Parms.ContainerPickupsInfo);
}


// Function ShopContainerWidget.ShopContainerWidget_C.On Main Selector Category Changed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UShopContainerWidget_C::On_Main_Selector_Category_Changed(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "On Main Selector Category Changed");

	Params::ShopContainerWidget_C_On_Main_Selector_Category_Changed Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ShopContainerWidget.ShopContainerWidget_C.OnAccept
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      Ref                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   CurrentValue                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UShopContainerWidget_C::OnAccept(class UJSI_Slot_C* Ref, int32 CurrentValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "OnAccept");

	Params::ShopContainerWidget_C_OnAccept Parms{};

	Parms.Ref = Ref;
	Parms.CurrentValue = CurrentValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ShopContainerWidget.ShopContainerWidget_C.OnDecline
// (Public, BlueprintCallable, BlueprintEvent)

void UShopContainerWidget_C::OnDecline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "OnDecline");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ShopContainerWidget.ShopContainerWidget_C.OnDoubleClick
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      Ref                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   CurrentValue                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UShopContainerWidget_C::OnDoubleClick(class UJSI_Slot_C* Ref, int32 CurrentValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "OnDoubleClick");

	Params::ShopContainerWidget_C_OnDoubleClick Parms{};

	Parms.Ref = Ref;
	Parms.CurrentValue = CurrentValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ShopContainerWidget.ShopContainerWidget_C.OnDropInfoContainerToContainer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  From                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  To                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      FromSlotRef                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      ToSlotRef                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    ToEmptySlot_                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    MovedAll_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UShopContainerWidget_C::OnDropInfoContainerToContainer(class UJSIContainer_C* From, class UJSIContainer_C* To, class UJSI_Slot_C* FromSlotRef, class UJSI_Slot_C* ToSlotRef, bool ToEmptySlot_, bool MovedAll_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "OnDropInfoContainerToContainer");

	Params::ShopContainerWidget_C_OnDropInfoContainerToContainer Parms{};

	Parms.From = From;
	Parms.To = To;
	Parms.FromSlotRef = FromSlotRef;
	Parms.ToSlotRef = ToSlotRef;
	Parms.ToEmptySlot_ = ToEmptySlot_;
	Parms.MovedAll_ = MovedAll_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ShopContainerWidget.ShopContainerWidget_C.OnMainSelectorCategoryHoarderChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UShopContainerWidget_C::OnMainSelectorCategoryHoarderChanged(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "OnMainSelectorCategoryHoarderChanged");

	Params::ShopContainerWidget_C_OnMainSelectorCategoryHoarderChanged Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ShopContainerWidget.ShopContainerWidget_C.OnRecalculateRepairAllPrice__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnoughMoney                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UShopContainerWidget_C::OnRecalculateRepairAllPrice__DelegateSignature(bool bEnoughMoney)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "OnRecalculateRepairAllPrice__DelegateSignature");

	Params::ShopContainerWidget_C_OnRecalculateRepairAllPrice__DelegateSignature Parms{};

	Parms.bEnoughMoney = bEnoughMoney;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ShopContainerWidget.ShopContainerWidget_C.OnSelectedAliases
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_Aliases_C*                   Ref                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UShopContainerWidget_C::OnSelectedAliases(class UWBP_Aliases_C* Ref)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "OnSelectedAliases");

	Params::ShopContainerWidget_C_OnSelectedAliases Parms{};

	Parms.Ref = Ref;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ShopContainerWidget.ShopContainerWidget_C.OnSlotDoubleClick
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FKey                             Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UShopContainerWidget_C::OnSlotDoubleClick(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "OnSlotDoubleClick");

	Params::ShopContainerWidget_C_OnSlotDoubleClick Parms{};

	Parms.Container = Container;
	Parms.SlotRef = SlotRef;
	Parms.Button = std::move(Button);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ShopContainerWidget.ShopContainerWidget_C.OnSlotDoubleClicked
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FKey                             Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UShopContainerWidget_C::OnSlotDoubleClicked(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "OnSlotDoubleClicked");

	Params::ShopContainerWidget_C_OnSlotDoubleClicked Parms{};

	Parms.Container = Container;
	Parms.SlotRef = SlotRef;
	Parms.Button = std::move(Button);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ShopContainerWidget.ShopContainerWidget_C.Play ClickNegative 2DEvent
// (Public, BlueprintCallable, BlueprintEvent)

void UShopContainerWidget_C::Play_ClickNegative_2DEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "Play ClickNegative 2DEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ShopContainerWidget.ShopContainerWidget_C.PocketMouseButtonDown
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FKey                             Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UShopContainerWidget_C::PocketMouseButtonDown(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "PocketMouseButtonDown");

	Params::ShopContainerWidget_C_PocketMouseButtonDown Parms{};

	Parms.Container = Container;
	Parms.SlotRef = SlotRef;
	Parms.Button = std::move(Button);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ShopContainerWidget.ShopContainerWidget_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UShopContainerWidget_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "PreConstruct");

	Params::ShopContainerWidget_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ShopContainerWidget.ShopContainerWidget_C.Repair All
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UShopContainerWidget_C::Repair_All()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "Repair All");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ShopContainerWidget.ShopContainerWidget_C.SellItem
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFItemInfo                       FItemInfo                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
// int32                                   Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SlotIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UShopContainerWidget_C::SellItem(const struct FFItemInfo& FItemInfo, int32 Count, int32 SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "SellItem");

	Params::ShopContainerWidget_C_SellItem Parms{};

	Parms.FItemInfo = std::move(FItemInfo);
	Parms.Count = Count;
	Parms.SlotIndex = SlotIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ShopContainerWidget.ShopContainerWidget_C.SellProcess
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      JSISlot                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_OnAccept                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CountForSell                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UShopContainerWidget_C::SellProcess(class UJSI_Slot_C* JSISlot, bool Param_OnAccept, int32 CountForSell)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "SellProcess");

	Params::ShopContainerWidget_C_SellProcess Parms{};

	Parms.JSISlot = JSISlot;
	Parms.Param_OnAccept = Param_OnAccept;
	Parms.CountForSell = CountForSell;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ShopContainerWidget.ShopContainerWidget_C.SellProcessByItemRef
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      Item_Ref                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UShopContainerWidget_C::SellProcessByItemRef(class UJSI_Slot_C* Item_Ref)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "SellProcessByItemRef");

	Params::ShopContainerWidget_C_SellProcessByItemRef Parms{};

	Parms.Item_Ref = Item_Ref;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ShopContainerWidget.ShopContainerWidget_C.SetCountFItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      JSISlot                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFItemInfo                       FItemInfo                                              (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)

void UShopContainerWidget_C::SetCountFItem(class UJSI_Slot_C* JSISlot, int32 Count, struct FFItemInfo* FItemInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "SetCountFItem");

	Params::ShopContainerWidget_C_SetCountFItem Parms{};

	Parms.JSISlot = JSISlot;
	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);

	if (FItemInfo != nullptr)
		*FItemInfo = std::move(Parms.FItemInfo);
}


// Function ShopContainerWidget.ShopContainerWidget_C.SetUpdateRPCount
// (Public, BlueprintCallable, BlueprintEvent)

void UShopContainerWidget_C::SetUpdateRPCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "SetUpdateRPCount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ShopContainerWidget.ShopContainerWidget_C.Show
// (BlueprintCallable, BlueprintEvent)

void UShopContainerWidget_C::Show()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "Show");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ShopContainerWidget.ShopContainerWidget_C.ShowDialogue
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFItemInfo                       FItemInfo                                              (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// class UJSI_Slot_C*                      JSISlot                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    IsSell                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsBuyback                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UShopContainerWidget_C::ShowDialogue(const struct FFItemInfo& FItemInfo, class UJSI_Slot_C* JSISlot, bool IsSell, bool IsBuyback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "ShowDialogue");

	Params::ShopContainerWidget_C_ShowDialogue Parms{};

	Parms.FItemInfo = std::move(FItemInfo);
	Parms.JSISlot = JSISlot;
	Parms.IsSell = IsSell;
	Parms.IsBuyback = IsBuyback;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ShopContainerWidget.ShopContainerWidget_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UShopContainerWidget_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "Tick");

	Params::ShopContainerWidget_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ShopContainerWidget.ShopContainerWidget_C.UpdateInventory
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Toggle_Price_Shop                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UShopContainerWidget_C::UpdateInventory(bool Toggle_Price_Shop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "UpdateInventory");

	Params::ShopContainerWidget_C_UpdateInventory Parms{};

	Parms.Toggle_Price_Shop = Toggle_Price_Shop;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ShopContainerWidget.ShopContainerWidget_C.UpdatePrice
// (Public, BlueprintCallable, BlueprintEvent)

void UShopContainerWidget_C::UpdatePrice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "UpdatePrice");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ShopContainerWidget.ShopContainerWidget_C.!learUsedStatus
// (Public, BlueprintCallable, BlueprintEvent)

void UShopContainerWidget_C::_learUsedStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShopContainerWidget_C", "!learUsedStatus");

	UObject::ProcessEvent(Func, nullptr);
}

}

