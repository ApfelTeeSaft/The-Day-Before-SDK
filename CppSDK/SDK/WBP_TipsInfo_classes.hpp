#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_TipsInfo

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_TipsInfo.WBP_TipsInfo_C
// 0x00B0 (0x0330 - 0x0280)
class UWBP_TipsInfo_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       HideTip_Anim;                                      // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ShowTip_Anim;                                      // 0x0290(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class USizeBox*                               SizeBox;                                           // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_StatusTipsUI_C*                    WBP_TipsUI;                                        // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          Visible;                                           // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           TipTimer;                                          // 0x02B0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FText                                   Tip_Name;                                          // 0x02B8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_             OnHideTip;                                         // 0x02D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FText                                   Workbench;                                         // 0x02E0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Sauna;                                             // 0x02F8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Gym;                                               // 0x0310(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         Duration;                                          // 0x0328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_TipsInfo(int32 EntryPoint);
	void Finished_13BD6F704E2E3ABC3138E0A0B21675A9();
	void Finished_6353C51C444D26F0E16EC3A3C5209E2F();
	void Finished_8D6A99B94EC1AD657D9E34AE5E514C04();
	void Finished_C67C14D341C523E043F95693AC2C0348();
	void HideCurrentTip(bool WithAniim, const class FText& TipName);
	void HideTip(bool WithAnim);
	void HideVisibility();
	void OnHideTip__DelegateSignature();
	void ResetTipTimer(double NewDuration);
	void Set_Text_Actual_Tip(const class FText& InText, bool With_WCoin);
	void TipVisible(const class FText& TipName, const class FText& ActualTip, float Param_Duration, bool IsWarningMessage, bool With_WCoin, bool SimpleColor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_TipsInfo_C">();
	}
	static class UWBP_TipsInfo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_TipsInfo_C>();
	}
};
static_assert(alignof(UWBP_TipsInfo_C) == 0x000008, "Wrong alignment on UWBP_TipsInfo_C");
static_assert(sizeof(UWBP_TipsInfo_C) == 0x000330, "Wrong size on UWBP_TipsInfo_C");
static_assert(offsetof(UWBP_TipsInfo_C, UberGraphFrame) == 0x000280, "Member 'UWBP_TipsInfo_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_TipsInfo_C, HideTip_Anim) == 0x000288, "Member 'UWBP_TipsInfo_C::HideTip_Anim' has a wrong offset!");
static_assert(offsetof(UWBP_TipsInfo_C, ShowTip_Anim) == 0x000290, "Member 'UWBP_TipsInfo_C::ShowTip_Anim' has a wrong offset!");
static_assert(offsetof(UWBP_TipsInfo_C, SizeBox) == 0x000298, "Member 'UWBP_TipsInfo_C::SizeBox' has a wrong offset!");
static_assert(offsetof(UWBP_TipsInfo_C, WBP_TipsUI) == 0x0002A0, "Member 'UWBP_TipsInfo_C::WBP_TipsUI' has a wrong offset!");
static_assert(offsetof(UWBP_TipsInfo_C, Visible) == 0x0002A8, "Member 'UWBP_TipsInfo_C::Visible' has a wrong offset!");
static_assert(offsetof(UWBP_TipsInfo_C, TipTimer) == 0x0002B0, "Member 'UWBP_TipsInfo_C::TipTimer' has a wrong offset!");
static_assert(offsetof(UWBP_TipsInfo_C, Tip_Name) == 0x0002B8, "Member 'UWBP_TipsInfo_C::Tip_Name' has a wrong offset!");
static_assert(offsetof(UWBP_TipsInfo_C, OnHideTip) == 0x0002D0, "Member 'UWBP_TipsInfo_C::OnHideTip' has a wrong offset!");
static_assert(offsetof(UWBP_TipsInfo_C, Workbench) == 0x0002E0, "Member 'UWBP_TipsInfo_C::Workbench' has a wrong offset!");
static_assert(offsetof(UWBP_TipsInfo_C, Sauna) == 0x0002F8, "Member 'UWBP_TipsInfo_C::Sauna' has a wrong offset!");
static_assert(offsetof(UWBP_TipsInfo_C, Gym) == 0x000310, "Member 'UWBP_TipsInfo_C::Gym' has a wrong offset!");
static_assert(offsetof(UWBP_TipsInfo_C, Duration) == 0x000328, "Member 'UWBP_TipsInfo_C::Duration' has a wrong offset!");

}

