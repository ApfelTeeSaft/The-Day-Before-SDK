#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_QuestZone

#include "Basic.hpp"

#include "E_InteractType_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "F_RPZoneInfo_structs.hpp"
#include "E_ActorType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_QuestZone.BP_QuestZone_C
// 0x0040 (0x02D0 - 0x0290)
class ABP_QuestZone_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetComponent*                       Point3D;                                           // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    billboard;                                         // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Collision;                                         // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        InteractPoint;                                     // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FF_RPZoneInfo                          ZoneInfo;                                          // 0x02C0(0x0002)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Activate;                                          // 0x02C2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C3[0x5];                                      // 0x02C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        PointToInteract;                                   // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void Active_3DPoint_Widget(bool Toggle);
	void DestroyInteractable();
	void ExecuteUbergraph_BP_QuestZone(int32 EntryPoint);
	void GetActorType(E_ActorType* ActorType);
	void Is_Active_Zone(class ASurvPC_C* Controller, bool* Active);
	void IsLocked_(bool* Result);
	void OnBeginInteract(class APawn* Player);
	void OnFocused(class APawn* Player, class AActor* HighlightActor, class UActorComponent* HighlightActorComponent, E_InteractType* InteractType, double* LateTime);
	void OnInteract(class APawn* Player);
	void OnInteract2(class APawn* Player);
	void OnInteract3(class APawn* Player);
	void OnInteracted(class APawn* Pawn);
	void OnInteractVehicle(class APawn* Player, int32 SitIndex, bool SkipAnimation);
	void OnLocalInteract(class APawn* Player);
	void OnLostFocus(class APawn* Player);
	void OnSeen(class APawn* Player);
	void OnSquadCheckComplete();
	void OnStopInteract(class APawn* Player);
	void ReceiveBeginPlay();
	void Run_Lockpicking();
	void Set_Activate_Zone(bool Param_Activate);
	void Set3DWidgetVisibility(bool Visible);
	void SetTutorial3DWidgetVisibility(bool Visible);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_QuestZone_C">();
	}
	static class ABP_QuestZone_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_QuestZone_C>();
	}
};
static_assert(alignof(ABP_QuestZone_C) == 0x000008, "Wrong alignment on ABP_QuestZone_C");
static_assert(sizeof(ABP_QuestZone_C) == 0x0002D0, "Wrong size on ABP_QuestZone_C");
static_assert(offsetof(ABP_QuestZone_C, UberGraphFrame) == 0x000290, "Member 'ABP_QuestZone_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_QuestZone_C, Point3D) == 0x000298, "Member 'ABP_QuestZone_C::Point3D' has a wrong offset!");
static_assert(offsetof(ABP_QuestZone_C, billboard) == 0x0002A0, "Member 'ABP_QuestZone_C::billboard' has a wrong offset!");
static_assert(offsetof(ABP_QuestZone_C, Collision) == 0x0002A8, "Member 'ABP_QuestZone_C::Collision' has a wrong offset!");
static_assert(offsetof(ABP_QuestZone_C, StaticMesh) == 0x0002B0, "Member 'ABP_QuestZone_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_QuestZone_C, InteractPoint) == 0x0002B8, "Member 'ABP_QuestZone_C::InteractPoint' has a wrong offset!");
static_assert(offsetof(ABP_QuestZone_C, ZoneInfo) == 0x0002C0, "Member 'ABP_QuestZone_C::ZoneInfo' has a wrong offset!");
static_assert(offsetof(ABP_QuestZone_C, Activate) == 0x0002C2, "Member 'ABP_QuestZone_C::Activate' has a wrong offset!");
static_assert(offsetof(ABP_QuestZone_C, PointToInteract) == 0x0002C8, "Member 'ABP_QuestZone_C::PointToInteract' has a wrong offset!");

}

