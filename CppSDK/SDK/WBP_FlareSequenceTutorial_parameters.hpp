#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_FlareSequenceTutorial

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_FlareSequenceTutorial.WBP_FlareSequenceTutorial_C.ExecuteUbergraph_WBP_FlareSequenceTutorial
// 0x0050 (0x0050 - 0x0000)
struct WBP_FlareSequenceTutorial_C_ExecuteUbergraph_WBP_FlareSequenceTutorial final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_2;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_3;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Show;                           // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationTimeRangeProxyObject_Result; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationTimeRangeProxyObject_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bShow_1;                        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bShow;                          // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default_1;                           // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FlareSequenceTutorial_C_ExecuteUbergraph_WBP_FlareSequenceTutorial) == 0x000008, "Wrong alignment on WBP_FlareSequenceTutorial_C_ExecuteUbergraph_WBP_FlareSequenceTutorial");
static_assert(sizeof(WBP_FlareSequenceTutorial_C_ExecuteUbergraph_WBP_FlareSequenceTutorial) == 0x000050, "Wrong size on WBP_FlareSequenceTutorial_C_ExecuteUbergraph_WBP_FlareSequenceTutorial");
static_assert(offsetof(WBP_FlareSequenceTutorial_C_ExecuteUbergraph_WBP_FlareSequenceTutorial, EntryPoint) == 0x000000, "Member 'WBP_FlareSequenceTutorial_C_ExecuteUbergraph_WBP_FlareSequenceTutorial::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_FlareSequenceTutorial_C_ExecuteUbergraph_WBP_FlareSequenceTutorial, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_FlareSequenceTutorial_C_ExecuteUbergraph_WBP_FlareSequenceTutorial::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_FlareSequenceTutorial_C_ExecuteUbergraph_WBP_FlareSequenceTutorial, Temp_bool_Variable) == 0x000014, "Member 'WBP_FlareSequenceTutorial_C_ExecuteUbergraph_WBP_FlareSequenceTutorial::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_FlareSequenceTutorial_C_ExecuteUbergraph_WBP_FlareSequenceTutorial, Temp_byte_Variable) == 0x000015, "Member 'WBP_FlareSequenceTutorial_C_ExecuteUbergraph_WBP_FlareSequenceTutorial::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_FlareSequenceTutorial_C_ExecuteUbergraph_WBP_FlareSequenceTutorial, Temp_byte_Variable_1) == 0x000016, "Member 'WBP_FlareSequenceTutorial_C_ExecuteUbergraph_WBP_FlareSequenceTutorial::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_FlareSequenceTutorial_C_ExecuteUbergraph_WBP_FlareSequenceTutorial, Temp_bool_Variable_1) == 0x000017, "Member 'WBP_FlareSequenceTutorial_C_ExecuteUbergraph_WBP_FlareSequenceTutorial::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_FlareSequenceTutorial_C_ExecuteUbergraph_WBP_FlareSequenceTutorial, Temp_byte_Variable_2) == 0x000018, "Member 'WBP_FlareSequenceTutorial_C_ExecuteUbergraph_WBP_FlareSequenceTutorial::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_FlareSequenceTutorial_C_ExecuteUbergraph_WBP_FlareSequenceTutorial, Temp_byte_Variable_3) == 0x000019, "Member 'WBP_FlareSequenceTutorial_C_ExecuteUbergraph_WBP_FlareSequenceTutorial::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_FlareSequenceTutorial_C_ExecuteUbergraph_WBP_FlareSequenceTutorial, K2Node_CustomEvent_Show) == 0x00001A, "Member 'WBP_FlareSequenceTutorial_C_ExecuteUbergraph_WBP_FlareSequenceTutorial::K2Node_CustomEvent_Show' has a wrong offset!");
static_assert(offsetof(WBP_FlareSequenceTutorial_C_ExecuteUbergraph_WBP_FlareSequenceTutorial, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00001B, "Member 'WBP_FlareSequenceTutorial_C_ExecuteUbergraph_WBP_FlareSequenceTutorial::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_FlareSequenceTutorial_C_ExecuteUbergraph_WBP_FlareSequenceTutorial, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'WBP_FlareSequenceTutorial_C_ExecuteUbergraph_WBP_FlareSequenceTutorial::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_FlareSequenceTutorial_C_ExecuteUbergraph_WBP_FlareSequenceTutorial, CallFunc_CreatePlayAnimationTimeRangeProxyObject_Result) == 0x000028, "Member 'WBP_FlareSequenceTutorial_C_ExecuteUbergraph_WBP_FlareSequenceTutorial::CallFunc_CreatePlayAnimationTimeRangeProxyObject_Result' has a wrong offset!");
static_assert(offsetof(WBP_FlareSequenceTutorial_C_ExecuteUbergraph_WBP_FlareSequenceTutorial, CallFunc_CreatePlayAnimationTimeRangeProxyObject_ReturnValue) == 0x000030, "Member 'WBP_FlareSequenceTutorial_C_ExecuteUbergraph_WBP_FlareSequenceTutorial::CallFunc_CreatePlayAnimationTimeRangeProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_FlareSequenceTutorial_C_ExecuteUbergraph_WBP_FlareSequenceTutorial, K2Node_CustomEvent_bShow_1) == 0x000038, "Member 'WBP_FlareSequenceTutorial_C_ExecuteUbergraph_WBP_FlareSequenceTutorial::K2Node_CustomEvent_bShow_1' has a wrong offset!");
static_assert(offsetof(WBP_FlareSequenceTutorial_C_ExecuteUbergraph_WBP_FlareSequenceTutorial, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'WBP_FlareSequenceTutorial_C_ExecuteUbergraph_WBP_FlareSequenceTutorial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_FlareSequenceTutorial_C_ExecuteUbergraph_WBP_FlareSequenceTutorial, K2Node_Select_Default) == 0x00003A, "Member 'WBP_FlareSequenceTutorial_C_ExecuteUbergraph_WBP_FlareSequenceTutorial::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_FlareSequenceTutorial_C_ExecuteUbergraph_WBP_FlareSequenceTutorial, K2Node_CustomEvent_bShow) == 0x00003B, "Member 'WBP_FlareSequenceTutorial_C_ExecuteUbergraph_WBP_FlareSequenceTutorial::K2Node_CustomEvent_bShow' has a wrong offset!");
static_assert(offsetof(WBP_FlareSequenceTutorial_C_ExecuteUbergraph_WBP_FlareSequenceTutorial, K2Node_Select_Default_1) == 0x00003C, "Member 'WBP_FlareSequenceTutorial_C_ExecuteUbergraph_WBP_FlareSequenceTutorial::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_FlareSequenceTutorial_C_ExecuteUbergraph_WBP_FlareSequenceTutorial, CallFunc_PlayAnimation_ReturnValue_1) == 0x000040, "Member 'WBP_FlareSequenceTutorial_C_ExecuteUbergraph_WBP_FlareSequenceTutorial::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_FlareSequenceTutorial_C_ExecuteUbergraph_WBP_FlareSequenceTutorial, CallFunc_PlayAnimation_ReturnValue_2) == 0x000048, "Member 'WBP_FlareSequenceTutorial_C_ExecuteUbergraph_WBP_FlareSequenceTutorial::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");

// Function WBP_FlareSequenceTutorial.WBP_FlareSequenceTutorial_C.Show
// 0x0001 (0x0001 - 0x0000)
struct WBP_FlareSequenceTutorial_C_Show final
{
public:
	bool                                          Param_Show;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FlareSequenceTutorial_C_Show) == 0x000001, "Wrong alignment on WBP_FlareSequenceTutorial_C_Show");
static_assert(sizeof(WBP_FlareSequenceTutorial_C_Show) == 0x000001, "Wrong size on WBP_FlareSequenceTutorial_C_Show");
static_assert(offsetof(WBP_FlareSequenceTutorial_C_Show, Param_Show) == 0x000000, "Member 'WBP_FlareSequenceTutorial_C_Show::Param_Show' has a wrong offset!");

// Function WBP_FlareSequenceTutorial.WBP_FlareSequenceTutorial_C.ShowLogo_Fntastic
// 0x0001 (0x0001 - 0x0000)
struct WBP_FlareSequenceTutorial_C_ShowLogo_Fntastic final
{
public:
	bool                                          bShow;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FlareSequenceTutorial_C_ShowLogo_Fntastic) == 0x000001, "Wrong alignment on WBP_FlareSequenceTutorial_C_ShowLogo_Fntastic");
static_assert(sizeof(WBP_FlareSequenceTutorial_C_ShowLogo_Fntastic) == 0x000001, "Wrong size on WBP_FlareSequenceTutorial_C_ShowLogo_Fntastic");
static_assert(offsetof(WBP_FlareSequenceTutorial_C_ShowLogo_Fntastic, bShow) == 0x000000, "Member 'WBP_FlareSequenceTutorial_C_ShowLogo_Fntastic::bShow' has a wrong offset!");

// Function WBP_FlareSequenceTutorial.WBP_FlareSequenceTutorial_C.ShowLogo_MyTona
// 0x0001 (0x0001 - 0x0000)
struct WBP_FlareSequenceTutorial_C_ShowLogo_MyTona final
{
public:
	bool                                          bShow;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FlareSequenceTutorial_C_ShowLogo_MyTona) == 0x000001, "Wrong alignment on WBP_FlareSequenceTutorial_C_ShowLogo_MyTona");
static_assert(sizeof(WBP_FlareSequenceTutorial_C_ShowLogo_MyTona) == 0x000001, "Wrong size on WBP_FlareSequenceTutorial_C_ShowLogo_MyTona");
static_assert(offsetof(WBP_FlareSequenceTutorial_C_ShowLogo_MyTona, bShow) == 0x000000, "Member 'WBP_FlareSequenceTutorial_C_ShowLogo_MyTona::bShow' has a wrong offset!");

}

