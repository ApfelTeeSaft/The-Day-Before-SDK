#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Camp

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_CampingBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Camp.BP_Camp_C
// 0x0040 (0x0368 - 0x0328)
class ABP_Camp_C : public ABP_CampingBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Camp_C;                          // 0x0328(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UChildActorComponent*                   CameraBonfireLook1;                                // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       RemoveCamp;                                        // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   CameraBonfireLook;                                 // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   CameraTentLook;                                    // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Bonfire;                                           // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      CampOwner;                                         // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__RemoveCamp_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BuildingStateUpd();
	void CampingBuildingState();
	void CampingBuilt();
	void CanBeRemoved(bool* Can);
	void ExecuteUbergraph_BP_Camp(int32 EntryPoint);
	void GetChairs(TArray<class ABP_CampChair_C*>* Result);
	void GetChildActorMeshes(class UChildActorComponent* ChildActor, TArray<class UStaticMeshComponent*>* Param_Meshes);
	void GetClosestPoint(class AActor* Player, class AActor** Actor);
	void GetFreeChair(bool* Found, class ABP_CampChair_C** Chair);
	void OnRemoveCamp();
	void ReceiveBeginPlay();
	void RemoveSelf();
	void StoreAllMeshes();
	void TogglePlayerBonfireCamera(class APawn* Player);
	void TogglePlayerCamera(class APawn* Player);
	void TogglePlayerChairCamera(class APawn* Player);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Camp_C">();
	}
	static class ABP_Camp_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Camp_C>();
	}
};
static_assert(alignof(ABP_Camp_C) == 0x000008, "Wrong alignment on ABP_Camp_C");
static_assert(sizeof(ABP_Camp_C) == 0x000368, "Wrong size on ABP_Camp_C");
static_assert(offsetof(ABP_Camp_C, UberGraphFrame_BP_Camp_C) == 0x000328, "Member 'ABP_Camp_C::UberGraphFrame_BP_Camp_C' has a wrong offset!");
static_assert(offsetof(ABP_Camp_C, CameraBonfireLook1) == 0x000330, "Member 'ABP_Camp_C::CameraBonfireLook1' has a wrong offset!");
static_assert(offsetof(ABP_Camp_C, RemoveCamp) == 0x000338, "Member 'ABP_Camp_C::RemoveCamp' has a wrong offset!");
static_assert(offsetof(ABP_Camp_C, CameraBonfireLook) == 0x000340, "Member 'ABP_Camp_C::CameraBonfireLook' has a wrong offset!");
static_assert(offsetof(ABP_Camp_C, CameraTentLook) == 0x000348, "Member 'ABP_Camp_C::CameraTentLook' has a wrong offset!");
static_assert(offsetof(ABP_Camp_C, Bonfire) == 0x000350, "Member 'ABP_Camp_C::Bonfire' has a wrong offset!");
static_assert(offsetof(ABP_Camp_C, Scene) == 0x000358, "Member 'ABP_Camp_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_Camp_C, CampOwner) == 0x000360, "Member 'ABP_Camp_C::CampOwner' has a wrong offset!");

}

