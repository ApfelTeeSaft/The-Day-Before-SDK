#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FirstPersonCameraRoom

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function FirstPersonCameraRoom.FirstPersonCameraRoom_C.ExecuteUbergraph_FirstPersonCameraRoom
// 0x00B0 (0x00B0 - 0x0000)
struct FirstPersonCameraRoom_C_ExecuteUbergraph_FirstPersonCameraRoom final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FirstPersonCameraRoom_C_ExecuteUbergraph_FirstPersonCameraRoom) == 0x000008, "Wrong alignment on FirstPersonCameraRoom_C_ExecuteUbergraph_FirstPersonCameraRoom");
static_assert(sizeof(FirstPersonCameraRoom_C_ExecuteUbergraph_FirstPersonCameraRoom) == 0x0000B0, "Wrong size on FirstPersonCameraRoom_C_ExecuteUbergraph_FirstPersonCameraRoom");
static_assert(offsetof(FirstPersonCameraRoom_C_ExecuteUbergraph_FirstPersonCameraRoom, EntryPoint) == 0x000000, "Member 'FirstPersonCameraRoom_C_ExecuteUbergraph_FirstPersonCameraRoom::EntryPoint' has a wrong offset!");
static_assert(offsetof(FirstPersonCameraRoom_C_ExecuteUbergraph_FirstPersonCameraRoom, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000008, "Member 'FirstPersonCameraRoom_C_ExecuteUbergraph_FirstPersonCameraRoom::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FirstPersonCameraRoom_C_ExecuteUbergraph_FirstPersonCameraRoom, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000020, "Member 'FirstPersonCameraRoom_C_ExecuteUbergraph_FirstPersonCameraRoom::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FirstPersonCameraRoom_C_ExecuteUbergraph_FirstPersonCameraRoom, K2Node_Event_DeltaSeconds) == 0x000024, "Member 'FirstPersonCameraRoom_C_ExecuteUbergraph_FirstPersonCameraRoom::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(FirstPersonCameraRoom_C_ExecuteUbergraph_FirstPersonCameraRoom, CallFunc_GetForwardVector_ReturnValue) == 0x000028, "Member 'FirstPersonCameraRoom_C_ExecuteUbergraph_FirstPersonCameraRoom::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FirstPersonCameraRoom_C_ExecuteUbergraph_FirstPersonCameraRoom, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000040, "Member 'FirstPersonCameraRoom_C_ExecuteUbergraph_FirstPersonCameraRoom::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(FirstPersonCameraRoom_C_ExecuteUbergraph_FirstPersonCameraRoom, CallFunc_GetController_ReturnValue) == 0x000058, "Member 'FirstPersonCameraRoom_C_ExecuteUbergraph_FirstPersonCameraRoom::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(FirstPersonCameraRoom_C_ExecuteUbergraph_FirstPersonCameraRoom, CallFunc_BreakRotator_Roll) == 0x000060, "Member 'FirstPersonCameraRoom_C_ExecuteUbergraph_FirstPersonCameraRoom::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(FirstPersonCameraRoom_C_ExecuteUbergraph_FirstPersonCameraRoom, CallFunc_BreakRotator_Pitch) == 0x000064, "Member 'FirstPersonCameraRoom_C_ExecuteUbergraph_FirstPersonCameraRoom::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(FirstPersonCameraRoom_C_ExecuteUbergraph_FirstPersonCameraRoom, CallFunc_BreakRotator_Yaw) == 0x000068, "Member 'FirstPersonCameraRoom_C_ExecuteUbergraph_FirstPersonCameraRoom::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(FirstPersonCameraRoom_C_ExecuteUbergraph_FirstPersonCameraRoom, CallFunc_GetControlRotation_ReturnValue) == 0x000070, "Member 'FirstPersonCameraRoom_C_ExecuteUbergraph_FirstPersonCameraRoom::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FirstPersonCameraRoom_C_ExecuteUbergraph_FirstPersonCameraRoom, CallFunc_BreakRotator_Roll_1) == 0x000088, "Member 'FirstPersonCameraRoom_C_ExecuteUbergraph_FirstPersonCameraRoom::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(FirstPersonCameraRoom_C_ExecuteUbergraph_FirstPersonCameraRoom, CallFunc_BreakRotator_Pitch_1) == 0x00008C, "Member 'FirstPersonCameraRoom_C_ExecuteUbergraph_FirstPersonCameraRoom::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(FirstPersonCameraRoom_C_ExecuteUbergraph_FirstPersonCameraRoom, CallFunc_BreakRotator_Yaw_1) == 0x000090, "Member 'FirstPersonCameraRoom_C_ExecuteUbergraph_FirstPersonCameraRoom::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(FirstPersonCameraRoom_C_ExecuteUbergraph_FirstPersonCameraRoom, CallFunc_MakeRotator_ReturnValue) == 0x000098, "Member 'FirstPersonCameraRoom_C_ExecuteUbergraph_FirstPersonCameraRoom::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");

// Function FirstPersonCameraRoom.FirstPersonCameraRoom_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct FirstPersonCameraRoom_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FirstPersonCameraRoom_C_ReceiveTick) == 0x000004, "Wrong alignment on FirstPersonCameraRoom_C_ReceiveTick");
static_assert(sizeof(FirstPersonCameraRoom_C_ReceiveTick) == 0x000004, "Wrong size on FirstPersonCameraRoom_C_ReceiveTick");
static_assert(offsetof(FirstPersonCameraRoom_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'FirstPersonCameraRoom_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

