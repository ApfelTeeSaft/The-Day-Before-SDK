#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BanditAnim_BP

#include "Basic.hpp"

#include "BanditAnim_BP_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "BPE_Weapon_Type_structs.hpp"
#include "E_Bandit_MovementMode_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass BanditAnim_BP.BanditAnim_BP_C
// 0x67E0 (0x6B30 - 0x0350)
class UBanditAnim_BP_C final : public UAnimInstance
{
public:
	uint8                                         Pad_348[0x8];                                      // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct BanditAnim_BP::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0358(0x020C)(HasGetValueTypeHash)
	uint8                                         Pad_564[0x4];                                      // 0x0564(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0568(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0570(0x0008)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_11;                    // 0x0578(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_5;                    // 0x05A0(0x0108)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_13;                 // 0x06A8(0x00E0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_5;                              // 0x0788(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_55;                 // 0x07D0(0x0070)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_4;                    // 0x0840(0x0108)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_4;                              // 0x0948(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_12;                 // 0x0990(0x00E0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_54;                 // 0x0A70(0x0070)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_11;                 // 0x0AE0(0x00E0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_53;                 // 0x0BC0(0x0070)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_10;                    // 0x0C30(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_3;                    // 0x0C58(0x0108)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_17;                  // 0x0D60(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_9;                     // 0x0DA8(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_16;                  // 0x0DD0(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_50;                 // 0x0E18(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_49;                 // 0x0E40(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_48;                 // 0x0E68(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_47;                 // 0x0E90(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_46;                 // 0x0EB8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_45;                 // 0x0EE0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_44;                 // 0x0F08(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_46;                   // 0x0F30(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_19;                      // 0x0F78(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_45;                   // 0x0F98(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_18;                      // 0x0FE0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_44;                   // 0x1000(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_17;                      // 0x1048(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_3;                              // 0x1068(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_43;                 // 0x10B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_42;                 // 0x10D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_41;                 // 0x1100(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_40;                 // 0x1128(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_39;                 // 0x1150(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_38;                 // 0x1178(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_37;                 // 0x11A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_36;                 // 0x11C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_35;                 // 0x11F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_34;                 // 0x1218(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_33;                 // 0x1240(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_32;                 // 0x1268(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_31;                 // 0x1290(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_30;                 // 0x12B8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_29;                 // 0x12E0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_28;                 // 0x1308(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_27;                 // 0x1330(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_26;                 // 0x1358(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_25;                 // 0x1380(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_24;                 // 0x13A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_23;                 // 0x13D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_22;                 // 0x13F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_21;                 // 0x1420(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_20;                 // 0x1448(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x1470(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x1498(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x14C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x14E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x1510(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x1538(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x1560(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x1588(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x15B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x15D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x1600(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x1628(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x1650(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x1678(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_43;                   // 0x16A0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_42;                   // 0x16E8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_41;                   // 0x1730(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_40;                   // 0x1778(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_52;                 // 0x17C0(0x0070)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_16;                  // 0x1830(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_16;                      // 0x1878(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_39;                   // 0x1898(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_38;                   // 0x18E0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_37;                   // 0x1928(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_36;                   // 0x1970(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_51;                 // 0x19B8(0x0070)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_15;                  // 0x1A28(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_15;                      // 0x1A70(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_35;                   // 0x1A90(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_34;                   // 0x1AD8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_33;                   // 0x1B20(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_32;                   // 0x1B68(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_31;                   // 0x1BB0(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_14;                  // 0x1BF8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_14;                      // 0x1C40(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_30;                   // 0x1C60(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_29;                   // 0x1CA8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_28;                   // 0x1CF0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_27;                   // 0x1D38(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_26;                   // 0x1D80(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_13;                  // 0x1DC8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_13;                      // 0x1E10(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_25;                   // 0x1E30(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_24;                   // 0x1E78(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_23;                   // 0x1EC0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_22;                   // 0x1F08(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_21;                   // 0x1F50(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_12;                  // 0x1F98(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_12;                      // 0x1FE0(0x0020)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_10;                 // 0x2000(0x00E0)()
	struct FAnimNode_RandomPlayer                 AnimGraphNode_RandomPlayer_4;                      // 0x20E0(0x0078)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_20;                   // 0x2158(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_19;                   // 0x21A0(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_15;                  // 0x21E8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x2230(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x2250(0x0028)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_11;                  // 0x2278(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_14;                  // 0x22C0(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_13;                  // 0x2308(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_12;                  // 0x2350(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_11;                  // 0x2398(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_10;                  // 0x23E0(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_50;                 // 0x2428(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_49;                 // 0x2498(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_48;                 // 0x2508(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_47;                 // 0x2578(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_46;                 // 0x25E8(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_45;                 // 0x2658(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_44;                 // 0x26C8(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_43;                 // 0x2738(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_42;                 // 0x27A8(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_41;                 // 0x2818(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x2888(0x0020)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_9;                   // 0x28A8(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_8;                   // 0x28F0(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_7;                   // 0x2938(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_6;                   // 0x2980(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_40;                 // 0x29C8(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_39;                 // 0x2A38(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_38;                 // 0x2AA8(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_37;                 // 0x2B18(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_36;                 // 0x2B88(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_35;                 // 0x2BF8(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_34;                 // 0x2C68(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_33;                 // 0x2CD8(0x0070)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_10;                  // 0x2D48(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_32;                 // 0x2D90(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_31;                 // 0x2E00(0x0070)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_5;                   // 0x2E70(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x2EB8(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x2ED8(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x2F00(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x2F48(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x2F70(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x2F98(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x2FC0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_18;                   // 0x2FE8(0x0048)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_10;         // 0x3030(0x0118)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_17;                   // 0x3148(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_16;                   // 0x3190(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_9;                   // 0x31D8(0x0048)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_9;          // 0x3220(0x0118)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_8;          // 0x3338(0x0118)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_15;                   // 0x3450(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x3498(0x0048)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_7;          // 0x34E0(0x0118)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x35F8(0x0020)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_6;          // 0x3618(0x0118)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_5;          // 0x3730(0x0118)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_4;          // 0x3848(0x0118)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_3;          // 0x3960(0x0118)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x3A78(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x3AC0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x3B08(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x3B50(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x3B98(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_8;                   // 0x3BE0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x3C28(0x0020)()
	struct FAnimNode_RandomPlayer                 AnimGraphNode_RandomPlayer_3;                      // 0x3C48(0x0078)()
	struct FAnimNode_RandomPlayer                 AnimGraphNode_RandomPlayer_2;                      // 0x3CC0(0x0078)()
	struct FAnimNode_RandomPlayer                 AnimGraphNode_RandomPlayer_1;                      // 0x3D38(0x0078)()
	struct FAnimNode_RandomPlayer                 AnimGraphNode_RandomPlayer;                        // 0x3DB0(0x0078)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_7;                   // 0x3E28(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x3E70(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x3E90(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x3ED8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x3F20(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x3F68(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_6;                   // 0x3FB0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x3FF8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x4040(0x0020)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x4060(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x4080(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x4148(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x4168(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x41B0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x41F8(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_30;                 // 0x4240(0x0070)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_5;                   // 0x42B0(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_29;                 // 0x42F8(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x4368(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_28;                 // 0x4388(0x0070)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_9;                  // 0x43F8(0x00E0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_27;                 // 0x44D8(0x0070)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_8;                  // 0x4548(0x00E0)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_4;                   // 0x4628(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_26;                 // 0x4670(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_25;                 // 0x46E0(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_24;                 // 0x4750(0x0070)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x47C0(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_7;                  // 0x4808(0x00E0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_23;                 // 0x48E8(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_22;                 // 0x4958(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_21;                 // 0x49C8(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_20;                 // 0x4A38(0x0070)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_3;                   // 0x4AA8(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_19;                 // 0x4AF0(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_18;                 // 0x4B60(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_17;                 // 0x4BD0(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_16;                 // 0x4C40(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_15;                 // 0x4CB0(0x0070)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_2;                   // 0x4D20(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_14;                 // 0x4D68(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_13;                 // 0x4DD8(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_12;                 // 0x4E48(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_11;                 // 0x4EB8(0x0070)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_6;                  // 0x4F28(0x00E0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_10;                 // 0x5008(0x0070)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_1;                   // 0x5078(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_9;                  // 0x50C0(0x0070)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_5;                  // 0x5130(0x00E0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_8;                  // 0x5210(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_7;                  // 0x5280(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_6;                  // 0x52F0(0x0070)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_4;                  // 0x5360(0x00E0)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_2;          // 0x5440(0x0118)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_1;          // 0x5558(0x0118)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x5670(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_5;                  // 0x56B8(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_4;                  // 0x5728(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_3;                  // 0x5798(0x0070)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace;            // 0x5808(0x0118)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x5920(0x0070)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_4;                   // 0x5990(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0x59D8(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x5A20(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x5A68(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x5AB0(0x0070)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_3;                  // 0x5B20(0x00E0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x5C00(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x5C70(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x5C90(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x5D58(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x5D78(0x00C8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x5E40(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x5E88(0x0048)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x5ED0(0x0020)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x5EF0(0x00C8)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_2;                  // 0x5FB8(0x00E0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_8;                     // 0x6098(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_7;                     // 0x60C0(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x60E8(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x61F0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x6218(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x6240(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x6268(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x6290(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x6398(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x63C0(0x00E0)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x64A0(0x0020)()
	struct FAnimNode_Fabrik                       AnimGraphNode_Fabrik;                              // 0x64C0(0x01F0)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x66B0(0x0020)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x66D0(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x67D8(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x6800(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x6848(0x00E0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x6928(0x0028)()
	double                                        WalkSpeed;                                         // 0x6950(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RunSpeed;                                          // 0x6958(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInAir_;                                          // 0x6960(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6961[0x7];                                     // 0x6961(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Speed;                                             // 0x6968(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Bandit_MovementMode                         MovementMode;                                      // 0x6970(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_Weapon_Type                              WeaponType;                                        // 0x6971(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6972[0x6];                                     // 0x6972(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainBanditAI_C*                        bandit;                                            // 0x6978(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        MoveDirection;                                     // 0x6980(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentMoveDirection;                              // 0x6988(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           LastTakeDamageMontage;                             // 0x6990(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayingTakeDamageMontage_;                       // 0x6998(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6999[0x7];                                     // 0x6999(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        FeetPos;                                           // 0x69A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Yaw;                                               // 0x69A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Pitch;                                             // 0x69B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AimYawDelta;                                       // 0x69B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MoveStartPosition;                                 // 0x69C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Velocity;                                          // 0x69C8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LastMoveDirection;                                 // 0x69E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               DeltaRot;                                          // 0x69E8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	double                                        PreviousDirection;                                 // 0x6A00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               ControlRotation;                                   // 0x6A08(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               PreviousVelocityRotation;                          // 0x6A20(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	double                                        VelocityDiff;                                      // 0x6A38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WalkingSpeed;                                      // 0x6A40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RunningSpeed;                                      // 0x6A48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AccelerationDiff;                                  // 0x6A50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PreviousSpeed;                                     // 0x6A58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LeanRotation;                                      // 0x6A60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LeanAccel;                                         // 0x6A68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LeanPower;                                         // 0x6A70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              LeanGrounded;                                      // 0x6A78(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               ActorRot;                                          // 0x6A88(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               PreviousActorRot;                                  // 0x6AA0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Dead;                                              // 0x6AB8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6AB9[0x7];                                     // 0x6AB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             LeftHandEffector;                                  // 0x6AC0(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasLeftHandEffector;                               // 0x6B20(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFlatSurface;                                     // 0x6B21(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void AnimNotify_A_to_R();
	void AnimNotify_BlueBerryEating();
	void AnimNotify_C_to_S();
	void AnimNotify_CalculateLastDirection();
	void AnimNotify_ChocolateEat();
	void AnimNotify_ClothesLightMove();
	void AnimNotify_ClothesMovementRun();
	void AnimNotify_crouch_step_sound();
	void AnimNotify_CrouchAim_Entered_();
	void AnimNotify_CrouchAim_Left_();
	void AnimNotify_Drop_Assault_Magazine_Sound();
	void AnimNotify_Drop_Magazin_Pistol();
	void AnimNotify_Eating_CanFood();
	void AnimNotify_eating_mre();
	void AnimNotify_Entered_RunStartB();
	void AnimNotify_Entered_RunStartF();
	void AnimNotify_Entered_RunStopB();
	void AnimNotify_Entered_RunStopF();
	void R();
	void AnimNotify_Entered_SprintStart();
	void AnimNotify_Entered_SprintStop();
	void AnimNotify_Entered_WalkStop();
	void AnimNotify_equip_melee();
	void AnimNotify_Equip_Pistol_Sound();
	void AnimNotify_Equip_Rifle_Sound();
	void AnimNotify_FB_Moving();
	void AnimNotify_Jerked_Pistol();
	void AnimNotify_Jerket_Assault_Sound();
	void AnimNotify_Jump_End_Sound();
	void AnimNotify_Load_Assault_Magazine_Sound();
	void AnimNotify_Load_Magazin_Pistol();
	void AnimNotify_Load_Shotgun_Sound();
	void AnimNotify_M_To_SS();
	void AnimNotify_MovingState_Entered_();
	void AnimNotify_R_to_A();
	void AnimNotify_Return_Equip_Assault();
	void AnimNotify_Run_Sound();
	void AnimNotify_S_to_C();
	void AnimNotify_SodaDrinking();
	void AnimNotify_StandAim_Entered_();
	void AnimNotify_StandAim_Left_();
	void AnimNotify_Step_Soft_Sound();
	void AnimNotify_Step_Sound();
	void AnimNotify_Walk_Sound();
	void BlueprintInitializeAnimation();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void CalculateDirection1(double DeltaX);
	void CalculateGroundedLean();
	void CalculateVariables(double DeltaX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_BlendListByBool_0A486B6A497643A842A7D9ACB5BC5F75();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_BlendListByBool_23AC857249E3C8B85E2AB3B85DC652DA();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_BlendListByBool_3490DCB84F0C23ED3E17A8B8C7F38B3E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_BlendListByBool_35C71C804BB23606BF4A26A6B9DEE187();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_BlendListByBool_3AC67F27430284EEFF97A487914AE84B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_BlendListByBool_3ED88E35422A46F2F3333BA962211E40();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_BlendListByBool_69C978EC47EE20FEAFE4C8980D27E2CA();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_BlendListByBool_735B9E65473526A031145AA8E4FB408A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_BlendListByBool_9BDD1A36466EBD87E781C4989A321A54();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_BlendListByBool_A3127AE646434C015399458E7DD6C3D5();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_BlendListByBool_A68882DE4CEAA1C88C39AFAB19325BF6();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_BlendListByBool_A8EF2F9D4FC1587633BC58B184AA4617();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_BlendListByBool_CC2C22064EDAF9E5F943EB8CC93BB7D9();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_BlendListByBool_CFCDDD234EDAB7B50BD459A73538D054();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_BlendListByBool_DDF0038747725EF4F3149FB428A6A323();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_BlendListByBool_DE49744F431546A435858EA97F937ED9();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_BlendListByBool_FB14BF5048D544C2B1B0E49AD3F31D03();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_BlendSpacePlayer_0B6281D441165730E618AAA76C2A1785();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_BlendSpacePlayer_1A6D61074E26BEF2408BAB8B85AF0F96();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_BlendSpacePlayer_21078F1C41EB45A799F2A3A9B0B19858();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_BlendSpacePlayer_3AC54CAC462A49B1AEC6E5B7C463DAAC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_BlendSpacePlayer_49EA38E8477D12EF404DB5AF5B97EA17();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_BlendSpacePlayer_5921FCD44C9807E88D4EB0BC29587038();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_BlendSpacePlayer_5AAECC71464B5143473FFD90BB8458E3();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_BlendSpacePlayer_636BED3644A76F1A92E06CB68E379ABB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_BlendSpacePlayer_69402F81440598FDABD85A8E110B1C17();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_BlendSpacePlayer_A262FFCE4036F35E55DBE392978EBB71();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_BlendSpacePlayer_A8370FD04501E3E7F99F758641003202();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_BlendSpacePlayer_B282E8014622AA841402D58EF30D3EEE();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_BlendSpacePlayer_BA3FAE7F46BC0983EF0F68AB683C666F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_BlendSpacePlayer_CF11FA6F471057BC52A908A2CABDA1F5();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_BlendSpacePlayer_CF44E89345CB3C551D43C399EAE9B38F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_BlendSpacePlayer_DA06D6A44AF8E72B8D08A0A3F1A86D0A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_BlendSpacePlayer_FA0A14834B22115A2E62EDAAE5EA78ED();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_Fabrik_1B0F27F043E98A28DC0B24A759348826();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_RotationOffsetBlendSpace_2199803B469EA98688BC448D04B87119();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_RotationOffsetBlendSpace_47650BDB45398FAE3F3B8CADB8900DA3();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_RotationOffsetBlendSpace_4F3902254720EB18A9124A857C20D99A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_RotationOffsetBlendSpace_6F007296466F25A1EFD6DAA4862AC5F2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_RotationOffsetBlendSpace_7BCA1E0C465F155F723208AC30C2B52E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_RotationOffsetBlendSpace_80CEC1D64495B1AFBBDB1EB05C2540D8();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_RotationOffsetBlendSpace_895057AB4F324B3D2F4AE3BFFA63BC5B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_RotationOffsetBlendSpace_BD08E1C24DF7E6149512F4AFCF29264A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_RotationOffsetBlendSpace_C931092548D1DF547FDFD1B6A95903AE();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_RotationOffsetBlendSpace_DA4FDEF74596D11A298FB29356926503();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_RotationOffsetBlendSpace_F9F50A0E47940FE9BEDD1FBD18480AC0();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_TransitionResult_05930D60457878550FFF7697D719874A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_TransitionResult_0E9529D149C1DB4D62B4D2995539F709();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_TransitionResult_1676E9DE46C29B2F8CD331A5FBE9FD46();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_TransitionResult_16FC6614403F58BBCC7033B81E0651E5();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_TransitionResult_21B4A2FA4DC0FD1F92820EA6F547133A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_TransitionResult_21BCF4B54B1CDEC9F428A2885D220627();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_TransitionResult_230D067A4FF003AE85426286160BED95();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_TransitionResult_2E3800B444A95F0DE673BD8EAA7AC4F4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_TransitionResult_397032F64C328107A459C986AF006B0B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_TransitionResult_3B9C19574576AEF01365B8BF9169FD64();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_TransitionResult_42CB99F64481AE5E16DA538E47166857();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_TransitionResult_4347BF4441DD7BCB7B139C87E30CAD9C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_TransitionResult_46D813B84A6CDF215FD646B263F5595D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_TransitionResult_5087B8C3494C685AF7C42FA658064033();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_TransitionResult_52C4D7DA49BA466A91CED1A50A127D72();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_TransitionResult_57AF0A7C44CC73AC29221A90EF38197A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_TransitionResult_6D0C002141DC8B0A3E4353BB9EAD2D9A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_TransitionResult_71E0411F4D098CE6DF035AB22F18084F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_TransitionResult_79B8795C40A6189862393891CDE1DCA3();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_TransitionResult_7BBD5D2A41F6309A1B15D18C35E42BF2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_TransitionResult_7DA7BE86453314542AD787BA903AE42A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_TransitionResult_8414E4F54DC54886AF9844B1E301611E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_TransitionResult_8679F4C543E3C316946988B88E05A752();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_TransitionResult_871DBC3142DB0685452F37989FAE1EE9();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_TransitionResult_9308664040FADAC9E8026CB8119D6DFA();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_TransitionResult_98A82FA24CAE79A793F1188340033EA4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_TransitionResult_993970404075A1511B35DF9B7FBD3A9A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_TransitionResult_9CB5F5F7450A45D6BB839FB8124F65B3();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_TransitionResult_9D7CEDFC481CD6F67B972EB2556B0D17();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_TransitionResult_B6A199AD4B59A9D68C83E5B0AECEF8B4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_TransitionResult_B861C85E401F099CC27983B49D431B7D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_TransitionResult_C3DBCE66417F530B14B86CB6D6113CE2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_TransitionResult_C481341C4C79E2DB778F8A8639B8BAF5();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_TransitionResult_CFA447D544D6428DAC079BA5768D7441();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_TransitionResult_D32B3C8C41EBB16DFA8BDE9AED64134A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_TransitionResult_D4B413F14799AA91A6CD68A6D26EC299();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_TransitionResult_E5CDB6F34501C2FED1730CBFFA1E6585();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_TransitionResult_E6FE05824F4F03E62352939B0B38DDE6();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_TransitionResult_EB29ABC649E83E4AF4FDB9A396710157();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_TransitionResult_F07AAF184C7DB48B7281069D4651F060();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BanditAnim_BP_AnimGraphNode_TransitionResult_F2C2776B476F05A6D3999FA228887C95();
	void ExecuteUbergraph_BanditAnim_BP(int32 EntryPoint);
	void IdleTransition(class UAnimMontage* Anim, double PlayRate, double StartMontageAt);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BanditAnim_BP_C">();
	}
	static class UBanditAnim_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBanditAnim_BP_C>();
	}
};
static_assert(alignof(UBanditAnim_BP_C) == 0x000010, "Wrong alignment on UBanditAnim_BP_C");
static_assert(sizeof(UBanditAnim_BP_C) == 0x006B30, "Wrong size on UBanditAnim_BP_C");
static_assert(offsetof(UBanditAnim_BP_C, UberGraphFrame) == 0x000350, "Member 'UBanditAnim_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, __AnimBlueprintMutables) == 0x000358, "Member 'UBanditAnim_BP_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimBlueprintExtension_PropertyAccess) == 0x000568, "Member 'UBanditAnim_BP_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimBlueprintExtension_Base) == 0x000570, "Member 'UBanditAnim_BP_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_UseCachedPose_11) == 0x000578, "Member 'UBanditAnim_BP_C::AnimGraphNode_UseCachedPose_11' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SaveCachedPose_5) == 0x0005A0, "Member 'UBanditAnim_BP_C::AnimGraphNode_SaveCachedPose_5' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_LayeredBoneBlend_13) == 0x0006A8, "Member 'UBanditAnim_BP_C::AnimGraphNode_LayeredBoneBlend_13' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_Slot_5) == 0x000788, "Member 'UBanditAnim_BP_C::AnimGraphNode_Slot_5' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_55) == 0x0007D0, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_55' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SaveCachedPose_4) == 0x000840, "Member 'UBanditAnim_BP_C::AnimGraphNode_SaveCachedPose_4' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_Slot_4) == 0x000948, "Member 'UBanditAnim_BP_C::AnimGraphNode_Slot_4' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_LayeredBoneBlend_12) == 0x000990, "Member 'UBanditAnim_BP_C::AnimGraphNode_LayeredBoneBlend_12' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_54) == 0x000A70, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_54' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_LayeredBoneBlend_11) == 0x000AE0, "Member 'UBanditAnim_BP_C::AnimGraphNode_LayeredBoneBlend_11' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_53) == 0x000BC0, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_53' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_UseCachedPose_10) == 0x000C30, "Member 'UBanditAnim_BP_C::AnimGraphNode_UseCachedPose_10' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SaveCachedPose_3) == 0x000C58, "Member 'UBanditAnim_BP_C::AnimGraphNode_SaveCachedPose_3' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendListByBool_17) == 0x000D60, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendListByBool_17' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_UseCachedPose_9) == 0x000DA8, "Member 'UBanditAnim_BP_C::AnimGraphNode_UseCachedPose_9' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendListByBool_16) == 0x000DD0, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendListByBool_16' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_50) == 0x000E18, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_50' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_49) == 0x000E40, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_49' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_48) == 0x000E68, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_48' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_47) == 0x000E90, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_47' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_46) == 0x000EB8, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_46' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_45) == 0x000EE0, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_45' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_44) == 0x000F08, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_44' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer_46) == 0x000F30, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer_46' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_StateResult_19) == 0x000F78, "Member 'UBanditAnim_BP_C::AnimGraphNode_StateResult_19' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer_45) == 0x000F98, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer_45' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_StateResult_18) == 0x000FE0, "Member 'UBanditAnim_BP_C::AnimGraphNode_StateResult_18' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer_44) == 0x001000, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer_44' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_StateResult_17) == 0x001048, "Member 'UBanditAnim_BP_C::AnimGraphNode_StateResult_17' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_Slot_3) == 0x001068, "Member 'UBanditAnim_BP_C::AnimGraphNode_Slot_3' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_43) == 0x0010B0, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_43' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_42) == 0x0010D8, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_42' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_41) == 0x001100, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_41' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_40) == 0x001128, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_40' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_39) == 0x001150, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_39' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_38) == 0x001178, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_38' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_37) == 0x0011A0, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_37' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_36) == 0x0011C8, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_36' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_35) == 0x0011F0, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_35' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_34) == 0x001218, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_34' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_33) == 0x001240, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_33' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_32) == 0x001268, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_32' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_31) == 0x001290, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_31' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_30) == 0x0012B8, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_30' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_29) == 0x0012E0, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_29' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_28) == 0x001308, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_28' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_27) == 0x001330, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_27' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_26) == 0x001358, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_26' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_25) == 0x001380, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_25' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_24) == 0x0013A8, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_24' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_23) == 0x0013D0, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_23' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_22) == 0x0013F8, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_22' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_21) == 0x001420, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_21' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_20) == 0x001448, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_20' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_19) == 0x001470, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_18) == 0x001498, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_17) == 0x0014C0, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_16) == 0x0014E8, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_15) == 0x001510, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_14) == 0x001538, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_13) == 0x001560, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_12) == 0x001588, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_11) == 0x0015B0, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_10) == 0x0015D8, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_9) == 0x001600, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_8) == 0x001628, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_7) == 0x001650, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_6) == 0x001678, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer_43) == 0x0016A0, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer_43' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer_42) == 0x0016E8, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer_42' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer_41) == 0x001730, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer_41' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer_40) == 0x001778, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer_40' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_52) == 0x0017C0, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_52' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendListByEnum_16) == 0x001830, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendListByEnum_16' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_StateResult_16) == 0x001878, "Member 'UBanditAnim_BP_C::AnimGraphNode_StateResult_16' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer_39) == 0x001898, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer_39' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer_38) == 0x0018E0, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer_38' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer_37) == 0x001928, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer_37' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer_36) == 0x001970, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer_36' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_51) == 0x0019B8, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_51' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendListByEnum_15) == 0x001A28, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendListByEnum_15' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_StateResult_15) == 0x001A70, "Member 'UBanditAnim_BP_C::AnimGraphNode_StateResult_15' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer_35) == 0x001A90, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer_35' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer_34) == 0x001AD8, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer_34' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer_33) == 0x001B20, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer_33' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer_32) == 0x001B68, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer_32' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer_31) == 0x001BB0, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer_31' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendListByEnum_14) == 0x001BF8, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendListByEnum_14' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_StateResult_14) == 0x001C40, "Member 'UBanditAnim_BP_C::AnimGraphNode_StateResult_14' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer_30) == 0x001C60, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer_30' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer_29) == 0x001CA8, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer_29' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer_28) == 0x001CF0, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer_28' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer_27) == 0x001D38, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer_27' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer_26) == 0x001D80, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer_26' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendListByEnum_13) == 0x001DC8, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendListByEnum_13' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_StateResult_13) == 0x001E10, "Member 'UBanditAnim_BP_C::AnimGraphNode_StateResult_13' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer_25) == 0x001E30, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer_25' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer_24) == 0x001E78, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer_24' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer_23) == 0x001EC0, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer_23' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer_22) == 0x001F08, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer_22' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer_21) == 0x001F50, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer_21' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendListByEnum_12) == 0x001F98, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendListByEnum_12' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_StateResult_12) == 0x001FE0, "Member 'UBanditAnim_BP_C::AnimGraphNode_StateResult_12' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_LayeredBoneBlend_10) == 0x002000, "Member 'UBanditAnim_BP_C::AnimGraphNode_LayeredBoneBlend_10' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_RandomPlayer_4) == 0x0020E0, "Member 'UBanditAnim_BP_C::AnimGraphNode_RandomPlayer_4' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer_20) == 0x002158, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer_20' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer_19) == 0x0021A0, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer_19' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendListByBool_15) == 0x0021E8, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendListByBool_15' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_StateResult_11) == 0x002230, "Member 'UBanditAnim_BP_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_5) == 0x002250, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendListByEnum_11) == 0x002278, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendListByEnum_11' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendListByBool_14) == 0x0022C0, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendListByBool_14' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendListByBool_13) == 0x002308, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendListByBool_13' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendListByBool_12) == 0x002350, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendListByBool_12' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendListByBool_11) == 0x002398, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendListByBool_11' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendListByBool_10) == 0x0023E0, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendListByBool_10' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_50) == 0x002428, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_50' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_49) == 0x002498, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_49' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_48) == 0x002508, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_48' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_47) == 0x002578, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_47' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_46) == 0x0025E8, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_46' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_45) == 0x002658, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_45' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_44) == 0x0026C8, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_44' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_43) == 0x002738, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_43' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_42) == 0x0027A8, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_42' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_41) == 0x002818, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_41' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_StateResult_10) == 0x002888, "Member 'UBanditAnim_BP_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendListByBool_9) == 0x0028A8, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendListByBool_9' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendListByBool_8) == 0x0028F0, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendListByBool_8' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendListByBool_7) == 0x002938, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendListByBool_7' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendListByBool_6) == 0x002980, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendListByBool_6' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_40) == 0x0029C8, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_40' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_39) == 0x002A38, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_39' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_38) == 0x002AA8, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_38' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_37) == 0x002B18, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_37' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_36) == 0x002B88, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_36' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_35) == 0x002BF8, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_35' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_34) == 0x002C68, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_34' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_33) == 0x002CD8, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_33' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendListByEnum_10) == 0x002D48, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendListByEnum_10' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_32) == 0x002D90, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_32' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_31) == 0x002E00, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_31' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendListByBool_5) == 0x002E70, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendListByBool_5' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_StateResult_9) == 0x002EB8, "Member 'UBanditAnim_BP_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_4) == 0x002ED8, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_Slot_2) == 0x002F00, "Member 'UBanditAnim_BP_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_3) == 0x002F48, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_2) == 0x002F70, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult_1) == 0x002F98, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_TransitionResult) == 0x002FC0, "Member 'UBanditAnim_BP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer_18) == 0x002FE8, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer_18' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_RotationOffsetBlendSpace_10) == 0x003030, "Member 'UBanditAnim_BP_C::AnimGraphNode_RotationOffsetBlendSpace_10' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer_17) == 0x003148, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer_17' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer_16) == 0x003190, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer_16' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendListByEnum_9) == 0x0031D8, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendListByEnum_9' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_RotationOffsetBlendSpace_9) == 0x003220, "Member 'UBanditAnim_BP_C::AnimGraphNode_RotationOffsetBlendSpace_9' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_RotationOffsetBlendSpace_8) == 0x003338, "Member 'UBanditAnim_BP_C::AnimGraphNode_RotationOffsetBlendSpace_8' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer_15) == 0x003450, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer_15' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer_14) == 0x003498, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_RotationOffsetBlendSpace_7) == 0x0034E0, "Member 'UBanditAnim_BP_C::AnimGraphNode_RotationOffsetBlendSpace_7' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_StateResult_8) == 0x0035F8, "Member 'UBanditAnim_BP_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_RotationOffsetBlendSpace_6) == 0x003618, "Member 'UBanditAnim_BP_C::AnimGraphNode_RotationOffsetBlendSpace_6' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_RotationOffsetBlendSpace_5) == 0x003730, "Member 'UBanditAnim_BP_C::AnimGraphNode_RotationOffsetBlendSpace_5' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_RotationOffsetBlendSpace_4) == 0x003848, "Member 'UBanditAnim_BP_C::AnimGraphNode_RotationOffsetBlendSpace_4' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_RotationOffsetBlendSpace_3) == 0x003960, "Member 'UBanditAnim_BP_C::AnimGraphNode_RotationOffsetBlendSpace_3' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer_13) == 0x003A78, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer_12) == 0x003AC0, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer_11) == 0x003B08, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer_10) == 0x003B50, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer_9) == 0x003B98, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendListByEnum_8) == 0x003BE0, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendListByEnum_8' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_StateResult_7) == 0x003C28, "Member 'UBanditAnim_BP_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_RandomPlayer_3) == 0x003C48, "Member 'UBanditAnim_BP_C::AnimGraphNode_RandomPlayer_3' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_RandomPlayer_2) == 0x003CC0, "Member 'UBanditAnim_BP_C::AnimGraphNode_RandomPlayer_2' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_RandomPlayer_1) == 0x003D38, "Member 'UBanditAnim_BP_C::AnimGraphNode_RandomPlayer_1' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_RandomPlayer) == 0x003DB0, "Member 'UBanditAnim_BP_C::AnimGraphNode_RandomPlayer' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendListByEnum_7) == 0x003E28, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendListByEnum_7' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_StateResult_6) == 0x003E70, "Member 'UBanditAnim_BP_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer_8) == 0x003E90, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer_7) == 0x003ED8, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer_6) == 0x003F20, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer_5) == 0x003F68, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendListByEnum_6) == 0x003FB0, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendListByEnum_6' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer_4) == 0x003FF8, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_StateResult_5) == 0x004040, "Member 'UBanditAnim_BP_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_StateResult_4) == 0x004060, "Member 'UBanditAnim_BP_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_StateMachine_2) == 0x004080, "Member 'UBanditAnim_BP_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_StateResult_3) == 0x004148, "Member 'UBanditAnim_BP_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer_3) == 0x004168, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer_2) == 0x0041B0, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer_1) == 0x0041F8, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_30) == 0x004240, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_30' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendListByEnum_5) == 0x0042B0, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendListByEnum_5' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_29) == 0x0042F8, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_29' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_StateResult_2) == 0x004368, "Member 'UBanditAnim_BP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_28) == 0x004388, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_28' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_LayeredBoneBlend_9) == 0x0043F8, "Member 'UBanditAnim_BP_C::AnimGraphNode_LayeredBoneBlend_9' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_27) == 0x0044D8, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_27' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_LayeredBoneBlend_8) == 0x004548, "Member 'UBanditAnim_BP_C::AnimGraphNode_LayeredBoneBlend_8' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendListByEnum_4) == 0x004628, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendListByEnum_4' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_26) == 0x004670, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_26' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_25) == 0x0046E0, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_25' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_24) == 0x004750, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_24' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SequencePlayer) == 0x0047C0, "Member 'UBanditAnim_BP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_LayeredBoneBlend_7) == 0x004808, "Member 'UBanditAnim_BP_C::AnimGraphNode_LayeredBoneBlend_7' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_23) == 0x0048E8, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_23' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_22) == 0x004958, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_22' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_21) == 0x0049C8, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_21' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_20) == 0x004A38, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_20' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendListByEnum_3) == 0x004AA8, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendListByEnum_3' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_19) == 0x004AF0, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_19' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_18) == 0x004B60, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_18' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_17) == 0x004BD0, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_17' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_16) == 0x004C40, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_16' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_15) == 0x004CB0, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_15' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendListByEnum_2) == 0x004D20, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendListByEnum_2' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_14) == 0x004D68, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_14' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_13) == 0x004DD8, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_13' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_12) == 0x004E48, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_12' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_11) == 0x004EB8, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_11' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_LayeredBoneBlend_6) == 0x004F28, "Member 'UBanditAnim_BP_C::AnimGraphNode_LayeredBoneBlend_6' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_10) == 0x005008, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_10' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendListByEnum_1) == 0x005078, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendListByEnum_1' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_9) == 0x0050C0, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_9' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_LayeredBoneBlend_5) == 0x005130, "Member 'UBanditAnim_BP_C::AnimGraphNode_LayeredBoneBlend_5' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_8) == 0x005210, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_8' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_7) == 0x005280, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_7' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_6) == 0x0052F0, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_6' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_LayeredBoneBlend_4) == 0x005360, "Member 'UBanditAnim_BP_C::AnimGraphNode_LayeredBoneBlend_4' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_RotationOffsetBlendSpace_2) == 0x005440, "Member 'UBanditAnim_BP_C::AnimGraphNode_RotationOffsetBlendSpace_2' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_RotationOffsetBlendSpace_1) == 0x005558, "Member 'UBanditAnim_BP_C::AnimGraphNode_RotationOffsetBlendSpace_1' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendListByEnum) == 0x005670, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_5) == 0x0056B8, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_5' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_4) == 0x005728, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_4' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_3) == 0x005798, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_3' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_RotationOffsetBlendSpace) == 0x005808, "Member 'UBanditAnim_BP_C::AnimGraphNode_RotationOffsetBlendSpace' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_2) == 0x005920, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendListByBool_4) == 0x005990, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendListByBool_4' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendListByBool_3) == 0x0059D8, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendListByBool_3' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendListByBool_2) == 0x005A20, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendListByBool_1) == 0x005A68, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer_1) == 0x005AB0, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_LayeredBoneBlend_3) == 0x005B20, "Member 'UBanditAnim_BP_C::AnimGraphNode_LayeredBoneBlend_3' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendSpacePlayer) == 0x005C00, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_StateResult_1) == 0x005C70, "Member 'UBanditAnim_BP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_StateMachine_1) == 0x005C90, "Member 'UBanditAnim_BP_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_StateResult) == 0x005D58, "Member 'UBanditAnim_BP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_StateMachine) == 0x005D78, "Member 'UBanditAnim_BP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_BlendListByBool) == 0x005E40, "Member 'UBanditAnim_BP_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_Slot_1) == 0x005E88, "Member 'UBanditAnim_BP_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_Root) == 0x005ED0, "Member 'UBanditAnim_BP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_ApplyAdditive) == 0x005EF0, "Member 'UBanditAnim_BP_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_LayeredBoneBlend_2) == 0x005FB8, "Member 'UBanditAnim_BP_C::AnimGraphNode_LayeredBoneBlend_2' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_UseCachedPose_8) == 0x006098, "Member 'UBanditAnim_BP_C::AnimGraphNode_UseCachedPose_8' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_UseCachedPose_7) == 0x0060C0, "Member 'UBanditAnim_BP_C::AnimGraphNode_UseCachedPose_7' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SaveCachedPose_2) == 0x0060E8, "Member 'UBanditAnim_BP_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_UseCachedPose_6) == 0x0061F0, "Member 'UBanditAnim_BP_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_UseCachedPose_5) == 0x006218, "Member 'UBanditAnim_BP_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_UseCachedPose_4) == 0x006240, "Member 'UBanditAnim_BP_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_UseCachedPose_3) == 0x006268, "Member 'UBanditAnim_BP_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SaveCachedPose_1) == 0x006290, "Member 'UBanditAnim_BP_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_UseCachedPose_2) == 0x006398, "Member 'UBanditAnim_BP_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_LayeredBoneBlend_1) == 0x0063C0, "Member 'UBanditAnim_BP_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_LocalToComponentSpace) == 0x0064A0, "Member 'UBanditAnim_BP_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_Fabrik) == 0x0064C0, "Member 'UBanditAnim_BP_C::AnimGraphNode_Fabrik' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_ComponentToLocalSpace) == 0x0066B0, "Member 'UBanditAnim_BP_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_SaveCachedPose) == 0x0066D0, "Member 'UBanditAnim_BP_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_UseCachedPose_1) == 0x0067D8, "Member 'UBanditAnim_BP_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_Slot) == 0x006800, "Member 'UBanditAnim_BP_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_LayeredBoneBlend) == 0x006848, "Member 'UBanditAnim_BP_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AnimGraphNode_UseCachedPose) == 0x006928, "Member 'UBanditAnim_BP_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, WalkSpeed) == 0x006950, "Member 'UBanditAnim_BP_C::WalkSpeed' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, RunSpeed) == 0x006958, "Member 'UBanditAnim_BP_C::RunSpeed' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, IsInAir_) == 0x006960, "Member 'UBanditAnim_BP_C::IsInAir_' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, Speed) == 0x006968, "Member 'UBanditAnim_BP_C::Speed' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, MovementMode) == 0x006970, "Member 'UBanditAnim_BP_C::MovementMode' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, WeaponType) == 0x006971, "Member 'UBanditAnim_BP_C::WeaponType' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, bandit) == 0x006978, "Member 'UBanditAnim_BP_C::bandit' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, MoveDirection) == 0x006980, "Member 'UBanditAnim_BP_C::MoveDirection' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, CurrentMoveDirection) == 0x006988, "Member 'UBanditAnim_BP_C::CurrentMoveDirection' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, LastTakeDamageMontage) == 0x006990, "Member 'UBanditAnim_BP_C::LastTakeDamageMontage' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, IsPlayingTakeDamageMontage_) == 0x006998, "Member 'UBanditAnim_BP_C::IsPlayingTakeDamageMontage_' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, FeetPos) == 0x0069A0, "Member 'UBanditAnim_BP_C::FeetPos' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, Yaw) == 0x0069A8, "Member 'UBanditAnim_BP_C::Yaw' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, Pitch) == 0x0069B0, "Member 'UBanditAnim_BP_C::Pitch' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AimYawDelta) == 0x0069B8, "Member 'UBanditAnim_BP_C::AimYawDelta' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, MoveStartPosition) == 0x0069C0, "Member 'UBanditAnim_BP_C::MoveStartPosition' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, Velocity) == 0x0069C8, "Member 'UBanditAnim_BP_C::Velocity' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, LastMoveDirection) == 0x0069E0, "Member 'UBanditAnim_BP_C::LastMoveDirection' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, DeltaRot) == 0x0069E8, "Member 'UBanditAnim_BP_C::DeltaRot' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, PreviousDirection) == 0x006A00, "Member 'UBanditAnim_BP_C::PreviousDirection' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, ControlRotation) == 0x006A08, "Member 'UBanditAnim_BP_C::ControlRotation' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, PreviousVelocityRotation) == 0x006A20, "Member 'UBanditAnim_BP_C::PreviousVelocityRotation' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, VelocityDiff) == 0x006A38, "Member 'UBanditAnim_BP_C::VelocityDiff' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, WalkingSpeed) == 0x006A40, "Member 'UBanditAnim_BP_C::WalkingSpeed' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, RunningSpeed) == 0x006A48, "Member 'UBanditAnim_BP_C::RunningSpeed' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, AccelerationDiff) == 0x006A50, "Member 'UBanditAnim_BP_C::AccelerationDiff' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, PreviousSpeed) == 0x006A58, "Member 'UBanditAnim_BP_C::PreviousSpeed' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, LeanRotation) == 0x006A60, "Member 'UBanditAnim_BP_C::LeanRotation' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, LeanAccel) == 0x006A68, "Member 'UBanditAnim_BP_C::LeanAccel' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, LeanPower) == 0x006A70, "Member 'UBanditAnim_BP_C::LeanPower' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, LeanGrounded) == 0x006A78, "Member 'UBanditAnim_BP_C::LeanGrounded' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, ActorRot) == 0x006A88, "Member 'UBanditAnim_BP_C::ActorRot' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, PreviousActorRot) == 0x006AA0, "Member 'UBanditAnim_BP_C::PreviousActorRot' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, Dead) == 0x006AB8, "Member 'UBanditAnim_BP_C::Dead' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, LeftHandEffector) == 0x006AC0, "Member 'UBanditAnim_BP_C::LeftHandEffector' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, HasLeftHandEffector) == 0x006B20, "Member 'UBanditAnim_BP_C::HasLeftHandEffector' has a wrong offset!");
static_assert(offsetof(UBanditAnim_BP_C, IsFlatSurface) == 0x006B21, "Member 'UBanditAnim_BP_C::IsFlatSurface' has a wrong offset!");

}

