#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_RepairWeapon

#include "Basic.hpp"

#include "FItemInfo_structs.hpp"
#include "ContainerPickupsInfo_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_RepairWeapon.WBP_RepairWeapon_C.Calculate Repair Weapon
// 0x0020 (0x0020 - 0x0000)
struct WBP_RepairWeapon_C_Calculate_Repair_Weapon final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Calculate_Repair_Weapon_Tier_5_ReturnValue; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Calculate_Repair_Weapon_Tier_4_ReturnValue; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Calculate_Repair_Weapon_Tier_3_ReturnValue; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Calculate_Repair_Weapon_Tier_2_ReturnValue; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Calculate_Repair_Weapon_Tier_1_ReturnValue; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RepairWeapon_C_Calculate_Repair_Weapon) == 0x000004, "Wrong alignment on WBP_RepairWeapon_C_Calculate_Repair_Weapon");
static_assert(sizeof(WBP_RepairWeapon_C_Calculate_Repair_Weapon) == 0x000020, "Wrong size on WBP_RepairWeapon_C_Calculate_Repair_Weapon");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon, ReturnValue) == 0x000000, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon, CallFunc_Calculate_Repair_Weapon_Tier_5_ReturnValue) == 0x000004, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon::CallFunc_Calculate_Repair_Weapon_Tier_5_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon, CallFunc_Calculate_Repair_Weapon_Tier_4_ReturnValue) == 0x000008, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon::CallFunc_Calculate_Repair_Weapon_Tier_4_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon, CallFunc_Calculate_Repair_Weapon_Tier_3_ReturnValue) == 0x00000C, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon::CallFunc_Calculate_Repair_Weapon_Tier_3_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon, CallFunc_Calculate_Repair_Weapon_Tier_2_ReturnValue) == 0x000010, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon::CallFunc_Calculate_Repair_Weapon_Tier_2_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon, CallFunc_Calculate_Repair_Weapon_Tier_1_ReturnValue) == 0x000014, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon::CallFunc_Calculate_Repair_Weapon_Tier_1_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000019, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00001A, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00001B, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x00001C, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");

// Function WBP_RepairWeapon.WBP_RepairWeapon_C.Calculate Repair Weapon Tier 1
// 0x0038 (0x0038 - 0x0000)
struct WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_1 final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_1) == 0x000008, "Wrong alignment on WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_1");
static_assert(sizeof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_1) == 0x000038, "Wrong size on WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_1");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_1, ReturnValue) == 0x000000, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_1::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_1, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_1::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_1, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000010, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_1::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_1, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_1::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_1, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000020, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_1::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_1, CallFunc_Round_ReturnValue) == 0x000028, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_1::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_1, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_1::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_1, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00002D, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_1::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_1, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x00002E, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_1::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_1, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00002F, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_1::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_1, CallFunc_BooleanAND_ReturnValue) == 0x000030, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_1::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_1, CallFunc_Less_IntInt_ReturnValue_1) == 0x000031, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_1::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_1, CallFunc_BooleanAND_ReturnValue_1) == 0x000032, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_1::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function WBP_RepairWeapon.WBP_RepairWeapon_C.Calculate Repair Weapon Tier 2
// 0x0070 (0x0070 - 0x0000)
struct WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_2 final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FCeil_ReturnValue_1;                      // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_2) == 0x000008, "Wrong alignment on WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_2");
static_assert(sizeof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_2) == 0x000070, "Wrong size on WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_2");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_2, ReturnValue) == 0x000000, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_2::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_2, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_2::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_2, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000010, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_2::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_2, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_2::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_2, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000020, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_2::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_2, CallFunc_Round_ReturnValue) == 0x000028, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_2::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_2, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000030, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_2::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_2, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000038, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_2::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_2, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_2::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_2, CallFunc_FCeil_ReturnValue) == 0x000048, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_2::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_2, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_2::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_2, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000058, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_2::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_2, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_2::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_2, CallFunc_FCeil_ReturnValue_1) == 0x000064, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_2::CallFunc_FCeil_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_2, CallFunc_Multiply_IntInt_ReturnValue) == 0x000068, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_2::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_RepairWeapon.WBP_RepairWeapon_C.Calculate Repair Weapon Tier 3
// 0x0068 (0x0068 - 0x0000)
struct WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_3 final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue_1;                      // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_3) == 0x000008, "Wrong alignment on WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_3");
static_assert(sizeof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_3) == 0x000068, "Wrong size on WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_3");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_3, ReturnValue) == 0x000000, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_3::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_3, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_3::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_3, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000010, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_3::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_3, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_3::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_3, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000020, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_3::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_3, CallFunc_Round_ReturnValue) == 0x000028, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_3::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_3, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000030, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_3::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_3, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000038, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_3::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_3, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_3::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_3, CallFunc_FCeil_ReturnValue) == 0x000048, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_3::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_3, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x00004C, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_3::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_3, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_3::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_3, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000058, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_3::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_3, CallFunc_FCeil_ReturnValue_1) == 0x000060, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_3::CallFunc_FCeil_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_3, CallFunc_Multiply_IntInt_ReturnValue) == 0x000064, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_3::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_RepairWeapon.WBP_RepairWeapon_C.Calculate Repair Weapon Tier 4
// 0x0078 (0x0078 - 0x0000)
struct WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_4 final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue_1;                      // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_4) == 0x000008, "Wrong alignment on WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_4");
static_assert(sizeof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_4) == 0x000078, "Wrong size on WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_4");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_4, ReturnValue) == 0x000000, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_4::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_4, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_4::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_4, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000010, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_4::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_4, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_4::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_4, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000020, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_4::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_4, CallFunc_Round_ReturnValue) == 0x000028, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_4::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_4, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000030, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_4::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_4, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000038, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_4::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_4, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_4::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_4, CallFunc_FCeil_ReturnValue) == 0x000048, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_4::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_4, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_4::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_4, CallFunc_Multiply_IntInt_ReturnValue) == 0x000058, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_4::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_4, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000060, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_4::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_4, CallFunc_FCeil_ReturnValue_1) == 0x000068, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_4::CallFunc_FCeil_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_4, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x00006C, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_4::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_4, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x000070, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_4::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");

// Function WBP_RepairWeapon.WBP_RepairWeapon_C.Calculate Repair Weapon Tier 5
// 0x0078 (0x0078 - 0x0000)
struct WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_5 final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue_1;                      // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_5) == 0x000008, "Wrong alignment on WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_5");
static_assert(sizeof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_5) == 0x000078, "Wrong size on WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_5");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_5, ReturnValue) == 0x000000, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_5::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_5, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_5::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_5, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000010, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_5::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_5, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_5::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_5, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000020, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_5::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_5, CallFunc_Round_ReturnValue) == 0x000028, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_5::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_5, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000030, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_5::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_5, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000038, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_5::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_5, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_5::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_5, CallFunc_FCeil_ReturnValue) == 0x000048, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_5::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_5, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_5::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_5, CallFunc_Multiply_IntInt_ReturnValue) == 0x000058, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_5::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_5, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000060, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_5::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_5, CallFunc_FCeil_ReturnValue_1) == 0x000068, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_5::CallFunc_FCeil_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_5, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x00006C, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_5::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_5, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x000070, "Member 'WBP_RepairWeapon_C_Calculate_Repair_Weapon_Tier_5::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");

// Function WBP_RepairWeapon.WBP_RepairWeapon_C.ExecuteUbergraph_WBP_RepairWeapon
// 0x0768 (0x0768 - 0x0000)
struct WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvPC_C*                              K2Node_DynamicCast_AsSurv_PC;                      // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_CounterResource;                // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_UpdateResourceBeforeRepairPlayers_UniqueServerID; // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_UpdateResourceBeforeRepairPlayers_ReturnValue; // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_UpdateResourceBeforeRepairPlayers_StructOut; // 0x0080(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x02A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A6[0x2];                                      // 0x02A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FContainerPickupsInfo>          CallFunc_getItemsInventory_ContainerItems;         // 0x02A8(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<struct FContainerPickupsInfo>          CallFunc_getItemsInventory_ContainersData;         // 0x02B8(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FContainerPickupsInfo                  CallFunc_Array_Get_Item_1;                         // 0x02C8(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FContainerPickupsInfo>          CallFunc_getItemsInventory_ContainerItems_1;       // 0x0330(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<struct FContainerPickupsInfo>          CallFunc_getItemsInventory_ContainersData_1;       // 0x0340(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FContainerPickupsInfo                  K2Node_SetFieldsInStruct_StructOut;                // 0x0350(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  CallFunc_Array_Get_Item_2;                         // 0x03B8(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  K2Node_SetFieldsInStruct_StructOut_1;              // 0x0420(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x048C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x048D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x048E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x048F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0494(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0495(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemBySlotIndex_Found;                 // 0x0496(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_497[0x1];                                      // 0x0497(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetItemBySlotIndex_Item;                  // 0x0498(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x04A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x04A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A3[0x1];                                      // 0x04A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Update_Repair_Data_ReturnValue;           // 0x04A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x04A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_2;       // 0x04B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_3;       // 0x04B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Cant;                           // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x04C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C2[0x6];                                      // 0x04C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x04D8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x04E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x04EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4ED[0x3];                                      // 0x04ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Update_Repair_Data_ReturnValue_1;         // 0x04F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F4[0x4];                                      // 0x04F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             K2Node_CustomEvent_WeaponInfo;                     // 0x04F8(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	TDelegate<void(const struct FFItemInfo& WeaponInfo)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0718(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0728(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0729(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x072A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x072B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool Cant)>                    K2Node_CreateDelegate_OutputDelegate_3;            // 0x072C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_73C[0x4];                                      // 0x073C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0740(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0748(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0749(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x074A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x074B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x074C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x074D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x074E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74F[0x1];                                      // 0x074F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0750(0x0014)()
};
static_assert(alignof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon) == 0x000008, "Wrong alignment on WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon");
static_assert(sizeof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon) == 0x000768, "Wrong size on WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, EntryPoint) == 0x000000, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, Temp_bool_True_if_break_was_hit_Variable) == 0x000014, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, Temp_int_Array_Index_Variable) == 0x000018, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_Not_PreBool_ReturnValue) == 0x00001C, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_PlayAnimationForward_ReturnValue) == 0x000020, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_GetOwningPlayer_ReturnValue) == 0x000030, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, Temp_int_Loop_Counter_Variable_1) == 0x000038, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, K2Node_DynamicCast_AsSurv_PC) == 0x000040, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::K2Node_DynamicCast_AsSurv_PC' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_Add_IntInt_ReturnValue_1) == 0x00004C, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, Temp_int_Loop_Counter_Variable_2) == 0x000050, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_Add_IntInt_ReturnValue_2) == 0x000054, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000058, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000059, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x00005A, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_BooleanAND_ReturnValue) == 0x00005B, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_BooleanAND_ReturnValue_1) == 0x00005C, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, K2Node_CustomEvent_CounterResource) == 0x000060, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::K2Node_CustomEvent_CounterResource' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, Temp_int_Array_Index_Variable_1) == 0x000064, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_Array_Get_Item) == 0x00006C, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_UpdateResourceBeforeRepairPlayers_UniqueServerID) == 0x000078, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_UpdateResourceBeforeRepairPlayers_UniqueServerID' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_UpdateResourceBeforeRepairPlayers_ReturnValue) == 0x00007C, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_UpdateResourceBeforeRepairPlayers_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_UpdateResourceBeforeRepairPlayers_StructOut) == 0x000080, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_UpdateResourceBeforeRepairPlayers_StructOut' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, Temp_int_Array_Index_Variable_2) == 0x0002A0, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, Temp_bool_True_if_break_was_hit_Variable_1) == 0x0002A4, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_Not_PreBool_ReturnValue_1) == 0x0002A5, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_getItemsInventory_ContainerItems) == 0x0002A8, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_getItemsInventory_ContainerItems' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_getItemsInventory_ContainersData) == 0x0002B8, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_getItemsInventory_ContainersData' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_Array_Get_Item_1) == 0x0002C8, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_getItemsInventory_ContainerItems_1) == 0x000330, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_getItemsInventory_ContainerItems_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_getItemsInventory_ContainersData_1) == 0x000340, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_getItemsInventory_ContainersData_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, K2Node_SetFieldsInStruct_StructOut) == 0x000350, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_Array_Get_Item_2) == 0x0003B8, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, K2Node_SetFieldsInStruct_StructOut_1) == 0x000420, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::K2Node_SetFieldsInStruct_StructOut_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_Array_Length_ReturnValue_1) == 0x000488, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00048C, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_Less_IntInt_ReturnValue_1) == 0x00048D, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_BooleanAND_ReturnValue_2) == 0x00048E, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00048F, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_Array_Length_ReturnValue_2) == 0x000490, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_Less_IntInt_ReturnValue_2) == 0x000494, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_BooleanAND_ReturnValue_3) == 0x000495, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_GetItemBySlotIndex_Found) == 0x000496, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_GetItemBySlotIndex_Found' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_GetItemBySlotIndex_Item) == 0x000498, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_GetItemBySlotIndex_Item' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x0004A0, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x0004A1, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x0004A2, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_Update_Repair_Data_ReturnValue) == 0x0004A4, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_Update_Repair_Data_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x0004A8, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_PlayAnimationForward_ReturnValue_2) == 0x0004B0, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_PlayAnimationForward_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_PlayAnimationForward_ReturnValue_3) == 0x0004B8, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_PlayAnimationForward_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, K2Node_CustomEvent_Cant) == 0x0004C0, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::K2Node_CustomEvent_Cant' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0004C1, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0004C8, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0004D0, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, K2Node_CreateDelegate_OutputDelegate_1) == 0x0004D8, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_FCeil_ReturnValue) == 0x0004E8, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x0004EC, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_Update_Repair_Data_ReturnValue_1) == 0x0004F0, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_Update_Repair_Data_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, K2Node_CustomEvent_WeaponInfo) == 0x0004F8, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::K2Node_CustomEvent_WeaponInfo' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, K2Node_CreateDelegate_OutputDelegate_2) == 0x000718, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000728, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_Not_PreBool_ReturnValue_2) == 0x000729, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_IsAnimationPlaying_ReturnValue) == 0x00072A, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_BooleanAND_ReturnValue_4) == 0x00072B, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, K2Node_CreateDelegate_OutputDelegate_3) == 0x00072C, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000740, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_IsValid_ReturnValue) == 0x000748, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_IsValid_ReturnValue_1) == 0x000749, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_IsValid_ReturnValue_2) == 0x00074A, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_Not_PreBool_ReturnValue_3) == 0x00074B, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_Not_PreBool_ReturnValue_4) == 0x00074C, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_IsValid_ReturnValue_3) == 0x00074D, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, CallFunc_Not_PreBool_ReturnValue_5) == 0x00074E, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon, K2Node_MakeStruct_SlateColor) == 0x000750, "Member 'WBP_RepairWeapon_C_ExecuteUbergraph_WBP_RepairWeapon::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function WBP_RepairWeapon.WBP_RepairWeapon_C.InitInfo
// 0x0220 (0x0220 - 0x0000)
struct WBP_RepairWeapon_C_InitInfo final
{
public:
	struct FFItemInfo                             WeaponInfo;                                        // 0x0000(0x0220)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RepairWeapon_C_InitInfo) == 0x000008, "Wrong alignment on WBP_RepairWeapon_C_InitInfo");
static_assert(sizeof(WBP_RepairWeapon_C_InitInfo) == 0x000220, "Wrong size on WBP_RepairWeapon_C_InitInfo");
static_assert(offsetof(WBP_RepairWeapon_C_InitInfo, WeaponInfo) == 0x000000, "Member 'WBP_RepairWeapon_C_InitInfo::WeaponInfo' has a wrong offset!");

// Function WBP_RepairWeapon.WBP_RepairWeapon_C.RemoveLocalResourcePlayer
// 0x000C (0x000C - 0x0000)
struct WBP_RepairWeapon_C_RemoveLocalResourcePlayer final
{
public:
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RepairWeapon_C_RemoveLocalResourcePlayer) == 0x000004, "Wrong alignment on WBP_RepairWeapon_C_RemoveLocalResourcePlayer");
static_assert(sizeof(WBP_RepairWeapon_C_RemoveLocalResourcePlayer) == 0x00000C, "Wrong size on WBP_RepairWeapon_C_RemoveLocalResourcePlayer");
static_assert(offsetof(WBP_RepairWeapon_C_RemoveLocalResourcePlayer, CallFunc_Subtract_IntInt_ReturnValue) == 0x000000, "Member 'WBP_RepairWeapon_C_RemoveLocalResourcePlayer::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_RemoveLocalResourcePlayer, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000004, "Member 'WBP_RepairWeapon_C_RemoveLocalResourcePlayer::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_RemoveLocalResourcePlayer, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000008, "Member 'WBP_RepairWeapon_C_RemoveLocalResourcePlayer::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");

// Function WBP_RepairWeapon.WBP_RepairWeapon_C.RemoveResource
// 0x06B0 (0x06B0 - 0x0000)
struct WBP_RepairWeapon_C_RemoveResource final
{
public:
	struct FFItemInfo                             Item;                                              // 0x0000(0x0220)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         ItemUID1;                                          // 0x0220(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RowName;                                           // 0x0224(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x022C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      CachedPlayer;                                      // 0x0230(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         ItemUID;                                           // 0x0238(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Chemical;                                          // 0x023C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Rag;                                               // 0x0240(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Metal;                                             // 0x0244(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CurrentItem;                                       // 0x0248(0x0220)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_469[0x7];                                      // 0x0469(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow;           // 0x0470(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0690(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_691[0x7];                                      // 0x0691(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GeneralInterface_C> CallFunc_PlayerAddItem_self_CastInput;             // 0x0698(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayerAddItem_Added;                      // 0x06A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveInventoryItemByUID_ItemRemoved;     // 0x06A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x06AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RepairWeapon_C_RemoveResource) == 0x000008, "Wrong alignment on WBP_RepairWeapon_C_RemoveResource");
static_assert(sizeof(WBP_RepairWeapon_C_RemoveResource) == 0x0006B0, "Wrong size on WBP_RepairWeapon_C_RemoveResource");
static_assert(offsetof(WBP_RepairWeapon_C_RemoveResource, Item) == 0x000000, "Member 'WBP_RepairWeapon_C_RemoveResource::Item' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_RemoveResource, ItemUID1) == 0x000220, "Member 'WBP_RepairWeapon_C_RemoveResource::ItemUID1' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_RemoveResource, RowName) == 0x000224, "Member 'WBP_RepairWeapon_C_RemoveResource::RowName' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_RemoveResource, Count) == 0x00022C, "Member 'WBP_RepairWeapon_C_RemoveResource::Count' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_RemoveResource, CachedPlayer) == 0x000230, "Member 'WBP_RepairWeapon_C_RemoveResource::CachedPlayer' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_RemoveResource, ItemUID) == 0x000238, "Member 'WBP_RepairWeapon_C_RemoveResource::ItemUID' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_RemoveResource, Chemical) == 0x00023C, "Member 'WBP_RepairWeapon_C_RemoveResource::Chemical' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_RemoveResource, Rag) == 0x000240, "Member 'WBP_RepairWeapon_C_RemoveResource::Rag' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_RemoveResource, Metal) == 0x000244, "Member 'WBP_RepairWeapon_C_RemoveResource::Metal' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_RemoveResource, CurrentItem) == 0x000248, "Member 'WBP_RepairWeapon_C_RemoveResource::CurrentItem' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_RemoveResource, CallFunc_Greater_IntInt_ReturnValue) == 0x000468, "Member 'WBP_RepairWeapon_C_RemoveResource::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_RemoveResource, CallFunc_GetDataTableRowFromName_OutRow) == 0x000470, "Member 'WBP_RepairWeapon_C_RemoveResource::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_RemoveResource, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000690, "Member 'WBP_RepairWeapon_C_RemoveResource::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_RemoveResource, CallFunc_PlayerAddItem_self_CastInput) == 0x000698, "Member 'WBP_RepairWeapon_C_RemoveResource::CallFunc_PlayerAddItem_self_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_RemoveResource, CallFunc_PlayerAddItem_Added) == 0x0006A8, "Member 'WBP_RepairWeapon_C_RemoveResource::CallFunc_PlayerAddItem_Added' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_RemoveResource, CallFunc_RemoveInventoryItemByUID_ItemRemoved) == 0x0006A9, "Member 'WBP_RepairWeapon_C_RemoveResource::CallFunc_RemoveInventoryItemByUID_ItemRemoved' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_RemoveResource, CallFunc_BooleanAND_ReturnValue) == 0x0006AA, "Member 'WBP_RepairWeapon_C_RemoveResource::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_RepairWeapon.WBP_RepairWeapon_C.RemoveResourceCountZero
// 0x0018 (0x0018 - 0x0000)
struct WBP_RepairWeapon_C_RemoveResourceCountZero final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveInventoryItemByUID_ItemRemoved;     // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RepairWeapon_C_RemoveResourceCountZero) == 0x000004, "Wrong alignment on WBP_RepairWeapon_C_RemoveResourceCountZero");
static_assert(sizeof(WBP_RepairWeapon_C_RemoveResourceCountZero) == 0x000018, "Wrong size on WBP_RepairWeapon_C_RemoveResourceCountZero");
static_assert(offsetof(WBP_RepairWeapon_C_RemoveResourceCountZero, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_RepairWeapon_C_RemoveResourceCountZero::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_RemoveResourceCountZero, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_RepairWeapon_C_RemoveResourceCountZero::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_RemoveResourceCountZero, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_RepairWeapon_C_RemoveResourceCountZero::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_RemoveResourceCountZero, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'WBP_RepairWeapon_C_RemoveResourceCountZero::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_RemoveResourceCountZero, CallFunc_Array_Get_Item) == 0x000010, "Member 'WBP_RepairWeapon_C_RemoveResourceCountZero::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_RemoveResourceCountZero, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'WBP_RepairWeapon_C_RemoveResourceCountZero::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_RemoveResourceCountZero, CallFunc_RemoveInventoryItemByUID_ItemRemoved) == 0x000015, "Member 'WBP_RepairWeapon_C_RemoveResourceCountZero::CallFunc_RemoveInventoryItemByUID_ItemRemoved' has a wrong offset!");

// Function WBP_RepairWeapon.WBP_RepairWeapon_C.RepairPressed
// 0x0001 (0x0001 - 0x0000)
struct WBP_RepairWeapon_C_RepairPressed final
{
public:
	bool                                          Cant;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RepairWeapon_C_RepairPressed) == 0x000001, "Wrong alignment on WBP_RepairWeapon_C_RepairPressed");
static_assert(sizeof(WBP_RepairWeapon_C_RepairPressed) == 0x000001, "Wrong size on WBP_RepairWeapon_C_RepairPressed");
static_assert(offsetof(WBP_RepairWeapon_C_RepairPressed, Cant) == 0x000000, "Member 'WBP_RepairWeapon_C_RepairPressed::Cant' has a wrong offset!");

// Function WBP_RepairWeapon.WBP_RepairWeapon_C.Update Repair Data
// 0x0008 (0x0008 - 0x0000)
struct WBP_RepairWeapon_C_Update_Repair_Data final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Calculate_Repair_Weapon_ReturnValue;      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RepairWeapon_C_Update_Repair_Data) == 0x000004, "Wrong alignment on WBP_RepairWeapon_C_Update_Repair_Data");
static_assert(sizeof(WBP_RepairWeapon_C_Update_Repair_Data) == 0x000008, "Wrong size on WBP_RepairWeapon_C_Update_Repair_Data");
static_assert(offsetof(WBP_RepairWeapon_C_Update_Repair_Data, ReturnValue) == 0x000000, "Member 'WBP_RepairWeapon_C_Update_Repair_Data::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_Update_Repair_Data, CallFunc_Calculate_Repair_Weapon_ReturnValue) == 0x000004, "Member 'WBP_RepairWeapon_C_Update_Repair_Data::CallFunc_Calculate_Repair_Weapon_ReturnValue' has a wrong offset!");

// Function WBP_RepairWeapon.WBP_RepairWeapon_C.UpdateCounterPlayers
// 0x00C8 (0x00C8 - 0x0000)
struct WBP_RepairWeapon_C_UpdateCounterPlayers final
{
public:
	class FString                                 Resource;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_2;        // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F[0x1];                                       // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FContainerPickupsInfo>          CallFunc_getItemsInventory_ContainerItems;         // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<struct FContainerPickupsInfo>          CallFunc_getItemsInventory_ContainersData;         // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FContainerPickupsInfo                  CallFunc_Array_Get_Item;                           // 0x0050(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_3;        // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RepairWeapon_C_UpdateCounterPlayers) == 0x000008, "Wrong alignment on WBP_RepairWeapon_C_UpdateCounterPlayers");
static_assert(sizeof(WBP_RepairWeapon_C_UpdateCounterPlayers) == 0x0000C8, "Wrong size on WBP_RepairWeapon_C_UpdateCounterPlayers");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateCounterPlayers, Resource) == 0x000000, "Member 'WBP_RepairWeapon_C_UpdateCounterPlayers::Resource' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateCounterPlayers, CallFunc_Conv_StringToName_ReturnValue) == 0x000010, "Member 'WBP_RepairWeapon_C_UpdateCounterPlayers::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateCounterPlayers, Temp_int_Array_Index_Variable) == 0x000018, "Member 'WBP_RepairWeapon_C_UpdateCounterPlayers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateCounterPlayers, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00001C, "Member 'WBP_RepairWeapon_C_UpdateCounterPlayers::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateCounterPlayers, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x00001D, "Member 'WBP_RepairWeapon_C_UpdateCounterPlayers::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateCounterPlayers, CallFunc_EqualEqual_NameName_ReturnValue_2) == 0x00001E, "Member 'WBP_RepairWeapon_C_UpdateCounterPlayers::CallFunc_EqualEqual_NameName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateCounterPlayers, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'WBP_RepairWeapon_C_UpdateCounterPlayers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateCounterPlayers, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'WBP_RepairWeapon_C_UpdateCounterPlayers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateCounterPlayers, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000028, "Member 'WBP_RepairWeapon_C_UpdateCounterPlayers::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateCounterPlayers, CallFunc_getItemsInventory_ContainerItems) == 0x000030, "Member 'WBP_RepairWeapon_C_UpdateCounterPlayers::CallFunc_getItemsInventory_ContainerItems' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateCounterPlayers, CallFunc_getItemsInventory_ContainersData) == 0x000040, "Member 'WBP_RepairWeapon_C_UpdateCounterPlayers::CallFunc_getItemsInventory_ContainersData' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateCounterPlayers, CallFunc_Array_Get_Item) == 0x000050, "Member 'WBP_RepairWeapon_C_UpdateCounterPlayers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateCounterPlayers, CallFunc_Array_Length_ReturnValue) == 0x0000B8, "Member 'WBP_RepairWeapon_C_UpdateCounterPlayers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateCounterPlayers, CallFunc_Less_IntInt_ReturnValue) == 0x0000BC, "Member 'WBP_RepairWeapon_C_UpdateCounterPlayers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateCounterPlayers, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000C0, "Member 'WBP_RepairWeapon_C_UpdateCounterPlayers::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateCounterPlayers, CallFunc_EqualEqual_NameName_ReturnValue_3) == 0x0000C4, "Member 'WBP_RepairWeapon_C_UpdateCounterPlayers::CallFunc_EqualEqual_NameName_ReturnValue_3' has a wrong offset!");

// Function WBP_RepairWeapon.WBP_RepairWeapon_C.UpdateInfo
// 0x0220 (0x0220 - 0x0000)
struct WBP_RepairWeapon_C_UpdateInfo final
{
public:
	struct FFItemInfo                             WeaponInfo;                                        // 0x0000(0x0220)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RepairWeapon_C_UpdateInfo) == 0x000008, "Wrong alignment on WBP_RepairWeapon_C_UpdateInfo");
static_assert(sizeof(WBP_RepairWeapon_C_UpdateInfo) == 0x000220, "Wrong size on WBP_RepairWeapon_C_UpdateInfo");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateInfo, WeaponInfo) == 0x000000, "Member 'WBP_RepairWeapon_C_UpdateInfo::WeaponInfo' has a wrong offset!");

// Function WBP_RepairWeapon.WBP_RepairWeapon_C.UpdateResource
// 0x0004 (0x0004 - 0x0000)
struct WBP_RepairWeapon_C_UpdateResource final
{
public:
	int32                                         CounterResource;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RepairWeapon_C_UpdateResource) == 0x000004, "Wrong alignment on WBP_RepairWeapon_C_UpdateResource");
static_assert(sizeof(WBP_RepairWeapon_C_UpdateResource) == 0x000004, "Wrong size on WBP_RepairWeapon_C_UpdateResource");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateResource, CounterResource) == 0x000000, "Member 'WBP_RepairWeapon_C_UpdateResource::CounterResource' has a wrong offset!");

// Function WBP_RepairWeapon.WBP_RepairWeapon_C.UpdateResourceBeforeRepairPlayers
// 0x05A0 (0x05A0 - 0x0000)
struct WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers final
{
public:
	int32                                         CounterResource;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   NameResource;                                      // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         UniqueServerID;                                    // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             StructOut;                                         // 0x0018(0x0220)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         WhileInteger;                                      // 0x0238(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalCount;                                        // 0x023C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumSlotReosurce;                                   // 0x0240(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CounterLocalResoource;                             // 0x0244(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24D[0x3];                                      // 0x024D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_255[0x3];                                      // 0x0255(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FContainerPickupsInfo>          CallFunc_getItemsInventory_ContainerItems;         // 0x0258(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<struct FContainerPickupsInfo>          CallFunc_getItemsInventory_ContainersData;         // 0x0268(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_Array_Get_Item;                           // 0x0280(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x02EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2ED[0x3];                                      // 0x02ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FE[0x2];                                      // 0x02FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  K2Node_SetFieldsInStruct_StructOut;                // 0x0310(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_379[0x7];                                      // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo; // 0x0380(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers) == 0x000008, "Wrong alignment on WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers");
static_assert(sizeof(WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers) == 0x0005A0, "Wrong size on WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers, CounterResource) == 0x000000, "Member 'WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers::CounterResource' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers, NameResource) == 0x000004, "Member 'WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers::NameResource' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers, UniqueServerID) == 0x00000C, "Member 'WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers::UniqueServerID' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers, ReturnValue) == 0x000010, "Member 'WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers, StructOut) == 0x000018, "Member 'WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers::StructOut' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers, WhileInteger) == 0x000238, "Member 'WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers::WhileInteger' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers, LocalCount) == 0x00023C, "Member 'WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers::LocalCount' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers, NumSlotReosurce) == 0x000240, "Member 'WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers::NumSlotReosurce' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers, CounterLocalResoource) == 0x000244, "Member 'WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers::CounterLocalResoource' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers, Temp_int_Array_Index_Variable) == 0x000248, "Member 'WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers, Temp_bool_True_if_break_was_hit_Variable) == 0x00024C, "Member 'WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers, Temp_int_Variable) == 0x000250, "Member 'WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers, CallFunc_Not_PreBool_ReturnValue) == 0x000254, "Member 'WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers, CallFunc_getItemsInventory_ContainerItems) == 0x000258, "Member 'WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers::CallFunc_getItemsInventory_ContainerItems' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers, CallFunc_getItemsInventory_ContainersData) == 0x000268, "Member 'WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers::CallFunc_getItemsInventory_ContainersData' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers, CallFunc_Greater_IntInt_ReturnValue) == 0x000278, "Member 'WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers, CallFunc_Array_Get_Item) == 0x000280, "Member 'WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers, CallFunc_Array_Length_ReturnValue) == 0x0002E8, "Member 'WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0002EC, "Member 'WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers, CallFunc_Array_AddUnique_ReturnValue) == 0x0002F0, "Member 'WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers, Temp_int_Loop_Counter_Variable) == 0x0002F4, "Member 'WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers, CallFunc_Subtract_IntInt_ReturnValue) == 0x0002F8, "Member 'WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers, CallFunc_Less_IntInt_ReturnValue) == 0x0002FC, "Member 'WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers, CallFunc_BooleanAND_ReturnValue) == 0x0002FD, "Member 'WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers, CallFunc_Add_IntInt_ReturnValue) == 0x000300, "Member 'WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000304, "Member 'WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers, CallFunc_Add_IntInt_ReturnValue_1) == 0x000308, "Member 'WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x00030C, "Member 'WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers, K2Node_SetFieldsInStruct_StructOut) == 0x000310, "Member 'WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000378, "Member 'WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers, CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo) == 0x000380, "Member 'WBP_RepairWeapon_C_UpdateResourceBeforeRepairPlayers::CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo' has a wrong offset!");

}

