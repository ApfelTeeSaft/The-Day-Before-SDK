#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ElectricityGenerator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ElectricityGenerator.ElectricityGenerator_C
// 0x00D8 (0x0368 - 0x0290)
class AElectricityGenerator_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Cube;                                              // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          HasPower;                                          // 0x02A8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TScriptInterface<class IElectricityConsumer_C>> Listeners;                                         // 0x02B0(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	bool                                          IsEnabled;                                         // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGeneratorToggler_C*                    GeneratorToggler;                                  // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         RectLights;                                        // 0x02D0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class AActor*>                         PointLights;                                       // 0x02E0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	int32                                         BlockersCount;                                     // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BlockersDestroyed;                                 // 0x02F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AInactiveDoor_C*>                InactiveDoors;                                     // 0x02F8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class ASimpleDoor_C*>                  Doors2;                                            // 0x0308(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class AElectricityBlocker_C*>          BunkerBlockers;                                    // 0x0318(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class ADoubleDoor_C*                          LastDoor;                                          // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class ABunkerAreaV2_C*                        BunkerAreaV2;                                      // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<class AVoiceMessageSpeaker_C*>         VoiceSpeakers;                                     // 0x0338(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class AVoiceMessagePCInteract_C*              VoiceMessagePC;                                    // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          HasTrigger;                                        // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Trigger;                                           // 0x0358(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)

public:
	void AddBlocker(class AElectricityBlocker_C* Blocker);
	void AddListener(TScriptInterface<class IElectricityConsumer_C> Listener);
	void CollectAllInactiveDoors();
	void ExecuteUbergraph_ElectricityGenerator(int32 EntryPoint);
	void OnBreakBlocker(class AElectricityBlocker_C* Blocker);
	void OnToggle(class APawn* Player, bool IsToggled);
	void OnToggleClientSide();
	void PreparePCDoors();
	void ReceiveBeginPlay();
	void SendElectricityToConsumers();
	void SubscribeToAllBlockers();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ElectricityGenerator_C">();
	}
	static class AElectricityGenerator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AElectricityGenerator_C>();
	}
};
static_assert(alignof(AElectricityGenerator_C) == 0x000008, "Wrong alignment on AElectricityGenerator_C");
static_assert(sizeof(AElectricityGenerator_C) == 0x000368, "Wrong size on AElectricityGenerator_C");
static_assert(offsetof(AElectricityGenerator_C, UberGraphFrame) == 0x000290, "Member 'AElectricityGenerator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AElectricityGenerator_C, Cube) == 0x000298, "Member 'AElectricityGenerator_C::Cube' has a wrong offset!");
static_assert(offsetof(AElectricityGenerator_C, DefaultSceneRoot) == 0x0002A0, "Member 'AElectricityGenerator_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AElectricityGenerator_C, HasPower) == 0x0002A8, "Member 'AElectricityGenerator_C::HasPower' has a wrong offset!");
static_assert(offsetof(AElectricityGenerator_C, Listeners) == 0x0002B0, "Member 'AElectricityGenerator_C::Listeners' has a wrong offset!");
static_assert(offsetof(AElectricityGenerator_C, IsEnabled) == 0x0002C0, "Member 'AElectricityGenerator_C::IsEnabled' has a wrong offset!");
static_assert(offsetof(AElectricityGenerator_C, GeneratorToggler) == 0x0002C8, "Member 'AElectricityGenerator_C::GeneratorToggler' has a wrong offset!");
static_assert(offsetof(AElectricityGenerator_C, RectLights) == 0x0002D0, "Member 'AElectricityGenerator_C::RectLights' has a wrong offset!");
static_assert(offsetof(AElectricityGenerator_C, PointLights) == 0x0002E0, "Member 'AElectricityGenerator_C::PointLights' has a wrong offset!");
static_assert(offsetof(AElectricityGenerator_C, BlockersCount) == 0x0002F0, "Member 'AElectricityGenerator_C::BlockersCount' has a wrong offset!");
static_assert(offsetof(AElectricityGenerator_C, BlockersDestroyed) == 0x0002F4, "Member 'AElectricityGenerator_C::BlockersDestroyed' has a wrong offset!");
static_assert(offsetof(AElectricityGenerator_C, InactiveDoors) == 0x0002F8, "Member 'AElectricityGenerator_C::InactiveDoors' has a wrong offset!");
static_assert(offsetof(AElectricityGenerator_C, Doors2) == 0x000308, "Member 'AElectricityGenerator_C::Doors2' has a wrong offset!");
static_assert(offsetof(AElectricityGenerator_C, BunkerBlockers) == 0x000318, "Member 'AElectricityGenerator_C::BunkerBlockers' has a wrong offset!");
static_assert(offsetof(AElectricityGenerator_C, LastDoor) == 0x000328, "Member 'AElectricityGenerator_C::LastDoor' has a wrong offset!");
static_assert(offsetof(AElectricityGenerator_C, BunkerAreaV2) == 0x000330, "Member 'AElectricityGenerator_C::BunkerAreaV2' has a wrong offset!");
static_assert(offsetof(AElectricityGenerator_C, VoiceSpeakers) == 0x000338, "Member 'AElectricityGenerator_C::VoiceSpeakers' has a wrong offset!");
static_assert(offsetof(AElectricityGenerator_C, VoiceMessagePC) == 0x000348, "Member 'AElectricityGenerator_C::VoiceMessagePC' has a wrong offset!");
static_assert(offsetof(AElectricityGenerator_C, HasTrigger) == 0x000350, "Member 'AElectricityGenerator_C::HasTrigger' has a wrong offset!");
static_assert(offsetof(AElectricityGenerator_C, Trigger) == 0x000358, "Member 'AElectricityGenerator_C::Trigger' has a wrong offset!");

}

