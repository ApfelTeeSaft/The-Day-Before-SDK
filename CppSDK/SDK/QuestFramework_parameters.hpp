#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuestFramework

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "QuestFramework_structs.hpp"
#include "UMG_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function QuestFramework.Quest.FindStageNodeByName
// 0x0010 (0x0010 - 0x0000)
struct Quest_FindStageNodeByName final
{
public:
	class FName                                   Param_Name;                                        // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UQuestNode_Stage*                       ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Quest_FindStageNodeByName) == 0x000008, "Wrong alignment on Quest_FindStageNodeByName");
static_assert(sizeof(Quest_FindStageNodeByName) == 0x000010, "Wrong size on Quest_FindStageNodeByName");
static_assert(offsetof(Quest_FindStageNodeByName, Param_Name) == 0x000000, "Member 'Quest_FindStageNodeByName::Param_Name' has a wrong offset!");
static_assert(offsetof(Quest_FindStageNodeByName, ReturnValue) == 0x000008, "Member 'Quest_FindStageNodeByName::ReturnValue' has a wrong offset!");

// Function QuestFramework.Quest.GetAllStageNodesNames
// 0x0010 (0x0010 - 0x0000)
struct Quest_GetAllStageNodesNames final
{
public:
	TArray<class FName>                           OutNames;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(Quest_GetAllStageNodesNames) == 0x000008, "Wrong alignment on Quest_GetAllStageNodesNames");
static_assert(sizeof(Quest_GetAllStageNodesNames) == 0x000010, "Wrong size on Quest_GetAllStageNodesNames");
static_assert(offsetof(Quest_GetAllStageNodesNames, OutNames) == 0x000000, "Member 'Quest_GetAllStageNodesNames::OutNames' has a wrong offset!");

// Function QuestFramework.Quest.GetCustomData
// 0x0008 (0x0008 - 0x0000)
struct Quest_GetCustomData final
{
public:
	const class UQuestCustomData*                 ReturnValue;                                       // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Quest_GetCustomData) == 0x000008, "Wrong alignment on Quest_GetCustomData");
static_assert(sizeof(Quest_GetCustomData) == 0x000008, "Wrong size on Quest_GetCustomData");
static_assert(offsetof(Quest_GetCustomData, ReturnValue) == 0x000000, "Member 'Quest_GetCustomData::ReturnValue' has a wrong offset!");

// Function QuestFramework.Quest.GetDisplayName
// 0x0018 (0x0018 - 0x0000)
struct Quest_GetDisplayName final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(Quest_GetDisplayName) == 0x000008, "Wrong alignment on Quest_GetDisplayName");
static_assert(sizeof(Quest_GetDisplayName) == 0x000018, "Wrong size on Quest_GetDisplayName");
static_assert(offsetof(Quest_GetDisplayName, ReturnValue) == 0x000000, "Member 'Quest_GetDisplayName::ReturnValue' has a wrong offset!");

// Function QuestFramework.Quest.GetGuid
// 0x0010 (0x0010 - 0x0000)
struct Quest_GetGuid final
{
public:
	struct FGuid                                  ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Quest_GetGuid) == 0x000004, "Wrong alignment on Quest_GetGuid");
static_assert(sizeof(Quest_GetGuid) == 0x000010, "Wrong size on Quest_GetGuid");
static_assert(offsetof(Quest_GetGuid, ReturnValue) == 0x000000, "Member 'Quest_GetGuid::ReturnValue' has a wrong offset!");

// Function QuestFramework.Quest.GetRootNode
// 0x0008 (0x0008 - 0x0000)
struct Quest_GetRootNode final
{
public:
	class UQuestNode_Root*                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Quest_GetRootNode) == 0x000008, "Wrong alignment on Quest_GetRootNode");
static_assert(sizeof(Quest_GetRootNode) == 0x000008, "Wrong size on Quest_GetRootNode");
static_assert(offsetof(Quest_GetRootNode, ReturnValue) == 0x000000, "Member 'Quest_GetRootNode::ReturnValue' has a wrong offset!");

// Function QuestFramework.Quest.HasValidGuid
// 0x0001 (0x0001 - 0x0000)
struct Quest_HasValidGuid final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Quest_HasValidGuid) == 0x000001, "Wrong alignment on Quest_HasValidGuid");
static_assert(sizeof(Quest_HasValidGuid) == 0x000001, "Wrong size on Quest_HasValidGuid");
static_assert(offsetof(Quest_HasValidGuid, ReturnValue) == 0x000000, "Member 'Quest_HasValidGuid::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestContextViewModel.TrackQuest
// 0x0001 (0x0001 - 0x0000)
struct QuestContextViewModel_TrackQuest final
{
public:
	bool                                          bTrack;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestContextViewModel_TrackQuest) == 0x000001, "Wrong alignment on QuestContextViewModel_TrackQuest");
static_assert(sizeof(QuestContextViewModel_TrackQuest) == 0x000001, "Wrong size on QuestContextViewModel_TrackQuest");
static_assert(offsetof(QuestContextViewModel_TrackQuest, bTrack) == 0x000000, "Member 'QuestContextViewModel_TrackQuest::bTrack' has a wrong offset!");

// Function QuestFramework.QuestContextViewModel.GetActiveObjectives
// 0x0010 (0x0010 - 0x0000)
struct QuestContextViewModel_GetActiveObjectives final
{
public:
	TArray<class UQuestObjectiveViewModel*>       ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestContextViewModel_GetActiveObjectives) == 0x000008, "Wrong alignment on QuestContextViewModel_GetActiveObjectives");
static_assert(sizeof(QuestContextViewModel_GetActiveObjectives) == 0x000010, "Wrong size on QuestContextViewModel_GetActiveObjectives");
static_assert(offsetof(QuestContextViewModel_GetActiveObjectives, ReturnValue) == 0x000000, "Member 'QuestContextViewModel_GetActiveObjectives::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestContextViewModel.GetTrackedVisibility
// 0x0001 (0x0001 - 0x0000)
struct QuestContextViewModel_GetTrackedVisibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestContextViewModel_GetTrackedVisibility) == 0x000001, "Wrong alignment on QuestContextViewModel_GetTrackedVisibility");
static_assert(sizeof(QuestContextViewModel_GetTrackedVisibility) == 0x000001, "Wrong size on QuestContextViewModel_GetTrackedVisibility");
static_assert(offsetof(QuestContextViewModel_GetTrackedVisibility, ReturnValue) == 0x000000, "Member 'QuestContextViewModel_GetTrackedVisibility::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestComponent.CreateQuestContext
// 0x0018 (0x0018 - 0x0000)
struct QuestComponent_CreateQuestContext final
{
public:
	class UQuest*                                 Quest;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStart;                                            // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuestContext*                          ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestComponent_CreateQuestContext) == 0x000008, "Wrong alignment on QuestComponent_CreateQuestContext");
static_assert(sizeof(QuestComponent_CreateQuestContext) == 0x000018, "Wrong size on QuestComponent_CreateQuestContext");
static_assert(offsetof(QuestComponent_CreateQuestContext, Quest) == 0x000000, "Member 'QuestComponent_CreateQuestContext::Quest' has a wrong offset!");
static_assert(offsetof(QuestComponent_CreateQuestContext, bStart) == 0x000008, "Member 'QuestComponent_CreateQuestContext::bStart' has a wrong offset!");
static_assert(offsetof(QuestComponent_CreateQuestContext, ReturnValue) == 0x000010, "Member 'QuestComponent_CreateQuestContext::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestComponent.LoadQuestStates
// 0x0020 (0x0020 - 0x0000)
struct QuestComponent_LoadQuestStates final
{
public:
	struct FQuestSaveStateData                    SaveData;                                          // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bForceRestore;                                     // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0019(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(QuestComponent_LoadQuestStates) == 0x000008, "Wrong alignment on QuestComponent_LoadQuestStates");
static_assert(sizeof(QuestComponent_LoadQuestStates) == 0x000020, "Wrong size on QuestComponent_LoadQuestStates");
static_assert(offsetof(QuestComponent_LoadQuestStates, SaveData) == 0x000000, "Member 'QuestComponent_LoadQuestStates::SaveData' has a wrong offset!");
static_assert(offsetof(QuestComponent_LoadQuestStates, bForceRestore) == 0x000018, "Member 'QuestComponent_LoadQuestStates::bForceRestore' has a wrong offset!");
static_assert(offsetof(QuestComponent_LoadQuestStates, ReturnValue) == 0x000019, "Member 'QuestComponent_LoadQuestStates::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestComponent.OnRep_ActiveQuestContexts
// 0x0010 (0x0010 - 0x0000)
struct QuestComponent_OnRep_ActiveQuestContexts final
{
public:
	TArray<class UQuestContext*>                  OldActiveContexts;                                 // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestComponent_OnRep_ActiveQuestContexts) == 0x000008, "Wrong alignment on QuestComponent_OnRep_ActiveQuestContexts");
static_assert(sizeof(QuestComponent_OnRep_ActiveQuestContexts) == 0x000010, "Wrong size on QuestComponent_OnRep_ActiveQuestContexts");
static_assert(offsetof(QuestComponent_OnRep_ActiveQuestContexts, OldActiveContexts) == 0x000000, "Member 'QuestComponent_OnRep_ActiveQuestContexts::OldActiveContexts' has a wrong offset!");

// Function QuestFramework.QuestComponent.SaveQuestStates
// 0x0020 (0x0020 - 0x0000)
struct QuestComponent_SaveQuestStates final
{
public:
	struct FQuestSaveStateData                    SaveData;                                          // 0x0000(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(QuestComponent_SaveQuestStates) == 0x000008, "Wrong alignment on QuestComponent_SaveQuestStates");
static_assert(sizeof(QuestComponent_SaveQuestStates) == 0x000020, "Wrong size on QuestComponent_SaveQuestStates");
static_assert(offsetof(QuestComponent_SaveQuestStates, SaveData) == 0x000000, "Member 'QuestComponent_SaveQuestStates::SaveData' has a wrong offset!");
static_assert(offsetof(QuestComponent_SaveQuestStates, ReturnValue) == 0x000018, "Member 'QuestComponent_SaveQuestStates::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestComponent.SuspendQuest
// 0x0008 (0x0008 - 0x0000)
struct QuestComponent_SuspendQuest final
{
public:
	class UQuestContext*                          QuestContext;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestComponent_SuspendQuest) == 0x000008, "Wrong alignment on QuestComponent_SuspendQuest");
static_assert(sizeof(QuestComponent_SuspendQuest) == 0x000008, "Wrong size on QuestComponent_SuspendQuest");
static_assert(offsetof(QuestComponent_SuspendQuest, QuestContext) == 0x000000, "Member 'QuestComponent_SuspendQuest::QuestContext' has a wrong offset!");

// Function QuestFramework.QuestComponent.FindAllActiveQuestContexts
// 0x0018 (0x0018 - 0x0000)
struct QuestComponent_FindAllActiveQuestContexts final
{
public:
	class UQuest*                                 Quest;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UQuestContext*>                  OutContexts;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestComponent_FindAllActiveQuestContexts) == 0x000008, "Wrong alignment on QuestComponent_FindAllActiveQuestContexts");
static_assert(sizeof(QuestComponent_FindAllActiveQuestContexts) == 0x000018, "Wrong size on QuestComponent_FindAllActiveQuestContexts");
static_assert(offsetof(QuestComponent_FindAllActiveQuestContexts, Quest) == 0x000000, "Member 'QuestComponent_FindAllActiveQuestContexts::Quest' has a wrong offset!");
static_assert(offsetof(QuestComponent_FindAllActiveQuestContexts, OutContexts) == 0x000008, "Member 'QuestComponent_FindAllActiveQuestContexts::OutContexts' has a wrong offset!");

// Function QuestFramework.QuestComponent.FindFirstActiveQuestContext
// 0x0010 (0x0010 - 0x0000)
struct QuestComponent_FindFirstActiveQuestContext final
{
public:
	class UQuest*                                 Quest;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UQuestContext*                          ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestComponent_FindFirstActiveQuestContext) == 0x000008, "Wrong alignment on QuestComponent_FindFirstActiveQuestContext");
static_assert(sizeof(QuestComponent_FindFirstActiveQuestContext) == 0x000010, "Wrong size on QuestComponent_FindFirstActiveQuestContext");
static_assert(offsetof(QuestComponent_FindFirstActiveQuestContext, Quest) == 0x000000, "Member 'QuestComponent_FindFirstActiveQuestContext::Quest' has a wrong offset!");
static_assert(offsetof(QuestComponent_FindFirstActiveQuestContext, ReturnValue) == 0x000008, "Member 'QuestComponent_FindFirstActiveQuestContext::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestComponent.GetAllActiveQuestContexts
// 0x0010 (0x0010 - 0x0000)
struct QuestComponent_GetAllActiveQuestContexts final
{
public:
	TArray<class UQuestContext*>                  OutContexts;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestComponent_GetAllActiveQuestContexts) == 0x000008, "Wrong alignment on QuestComponent_GetAllActiveQuestContexts");
static_assert(sizeof(QuestComponent_GetAllActiveQuestContexts) == 0x000010, "Wrong size on QuestComponent_GetAllActiveQuestContexts");
static_assert(offsetof(QuestComponent_GetAllActiveQuestContexts, OutContexts) == 0x000000, "Member 'QuestComponent_GetAllActiveQuestContexts::OutContexts' has a wrong offset!");

// Function QuestFramework.QuestComponent.HasActiveQuestContext
// 0x0010 (0x0010 - 0x0000)
struct QuestComponent_HasActiveQuestContext final
{
public:
	class UQuest*                                 Quest;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(QuestComponent_HasActiveQuestContext) == 0x000008, "Wrong alignment on QuestComponent_HasActiveQuestContext");
static_assert(sizeof(QuestComponent_HasActiveQuestContext) == 0x000010, "Wrong size on QuestComponent_HasActiveQuestContext");
static_assert(offsetof(QuestComponent_HasActiveQuestContext, Quest) == 0x000000, "Member 'QuestComponent_HasActiveQuestContext::Quest' has a wrong offset!");
static_assert(offsetof(QuestComponent_HasActiveQuestContext, ReturnValue) == 0x000008, "Member 'QuestComponent_HasActiveQuestContext::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestCondition.CheckCondition
// 0x0010 (0x0010 - 0x0000)
struct QuestCondition_CheckCondition final
{
public:
	class UQuestContext*                          Context;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(QuestCondition_CheckCondition) == 0x000008, "Wrong alignment on QuestCondition_CheckCondition");
static_assert(sizeof(QuestCondition_CheckCondition) == 0x000010, "Wrong size on QuestCondition_CheckCondition");
static_assert(offsetof(QuestCondition_CheckCondition, Context) == 0x000000, "Member 'QuestCondition_CheckCondition::Context' has a wrong offset!");
static_assert(offsetof(QuestCondition_CheckCondition, ReturnValue) == 0x000008, "Member 'QuestCondition_CheckCondition::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestContext.DeactivateObjective
// 0x0008 (0x0008 - 0x0000)
struct QuestContext_DeactivateObjective final
{
public:
	class UQuestObjective*                        Objective;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestContext_DeactivateObjective) == 0x000008, "Wrong alignment on QuestContext_DeactivateObjective");
static_assert(sizeof(QuestContext_DeactivateObjective) == 0x000008, "Wrong size on QuestContext_DeactivateObjective");
static_assert(offsetof(QuestContext_DeactivateObjective, Objective) == 0x000000, "Member 'QuestContext_DeactivateObjective::Objective' has a wrong offset!");

// Function QuestFramework.QuestContext.JumpToStageByName
// 0x000C (0x000C - 0x0000)
struct QuestContext_JumpToStageByName final
{
public:
	class FName                                   StageName;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(QuestContext_JumpToStageByName) == 0x000004, "Wrong alignment on QuestContext_JumpToStageByName");
static_assert(sizeof(QuestContext_JumpToStageByName) == 0x00000C, "Wrong size on QuestContext_JumpToStageByName");
static_assert(offsetof(QuestContext_JumpToStageByName, StageName) == 0x000000, "Member 'QuestContext_JumpToStageByName::StageName' has a wrong offset!");
static_assert(offsetof(QuestContext_JumpToStageByName, ReturnValue) == 0x000008, "Member 'QuestContext_JumpToStageByName::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestContext.JumpToStageNode
// 0x0010 (0x0010 - 0x0000)
struct QuestContext_JumpToStageNode final
{
public:
	const class UQuestNode_Stage*                 StageNode;                                         // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(QuestContext_JumpToStageNode) == 0x000008, "Wrong alignment on QuestContext_JumpToStageNode");
static_assert(sizeof(QuestContext_JumpToStageNode) == 0x000010, "Wrong size on QuestContext_JumpToStageNode");
static_assert(offsetof(QuestContext_JumpToStageNode, StageNode) == 0x000000, "Member 'QuestContext_JumpToStageNode::StageNode' has a wrong offset!");
static_assert(offsetof(QuestContext_JumpToStageNode, ReturnValue) == 0x000008, "Member 'QuestContext_JumpToStageNode::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestContext.OnRep_ActiveObjectives
// 0x0010 (0x0010 - 0x0000)
struct QuestContext_OnRep_ActiveObjectives final
{
public:
	TArray<class UQuestObjective*>                OldObjectives;                                     // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestContext_OnRep_ActiveObjectives) == 0x000008, "Wrong alignment on QuestContext_OnRep_ActiveObjectives");
static_assert(sizeof(QuestContext_OnRep_ActiveObjectives) == 0x000010, "Wrong size on QuestContext_OnRep_ActiveObjectives");
static_assert(offsetof(QuestContext_OnRep_ActiveObjectives, OldObjectives) == 0x000000, "Member 'QuestContext_OnRep_ActiveObjectives::OldObjectives' has a wrong offset!");

// Function QuestFramework.QuestContext.RefreshObjectiveViewModel
// 0x0008 (0x0008 - 0x0000)
struct QuestContext_RefreshObjectiveViewModel final
{
public:
	class UQuestObjective*                        Objective;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestContext_RefreshObjectiveViewModel) == 0x000008, "Wrong alignment on QuestContext_RefreshObjectiveViewModel");
static_assert(sizeof(QuestContext_RefreshObjectiveViewModel) == 0x000008, "Wrong size on QuestContext_RefreshObjectiveViewModel");
static_assert(offsetof(QuestContext_RefreshObjectiveViewModel, Objective) == 0x000000, "Member 'QuestContext_RefreshObjectiveViewModel::Objective' has a wrong offset!");

// Function QuestFramework.QuestContext.RefreshViewModel
// 0x0003 (0x0003 - 0x0000)
struct QuestContext_RefreshViewModel final
{
public:
	bool                                          bUpdateQuestData;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUpdateObjectiveList;                              // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRefreshObjectiveViewModels;                       // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestContext_RefreshViewModel) == 0x000001, "Wrong alignment on QuestContext_RefreshViewModel");
static_assert(sizeof(QuestContext_RefreshViewModel) == 0x000003, "Wrong size on QuestContext_RefreshViewModel");
static_assert(offsetof(QuestContext_RefreshViewModel, bUpdateQuestData) == 0x000000, "Member 'QuestContext_RefreshViewModel::bUpdateQuestData' has a wrong offset!");
static_assert(offsetof(QuestContext_RefreshViewModel, bUpdateObjectiveList) == 0x000001, "Member 'QuestContext_RefreshViewModel::bUpdateObjectiveList' has a wrong offset!");
static_assert(offsetof(QuestContext_RefreshViewModel, bRefreshObjectiveViewModels) == 0x000002, "Member 'QuestContext_RefreshViewModel::bRefreshObjectiveViewModels' has a wrong offset!");

// Function QuestFramework.QuestContext.TryActivateObjective
// 0x0010 (0x0010 - 0x0000)
struct QuestContext_TryActivateObjective final
{
public:
	class UQuestObjective*                        Objective;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(QuestContext_TryActivateObjective) == 0x000008, "Wrong alignment on QuestContext_TryActivateObjective");
static_assert(sizeof(QuestContext_TryActivateObjective) == 0x000010, "Wrong size on QuestContext_TryActivateObjective");
static_assert(offsetof(QuestContext_TryActivateObjective, Objective) == 0x000000, "Member 'QuestContext_TryActivateObjective::Objective' has a wrong offset!");
static_assert(offsetof(QuestContext_TryActivateObjective, ReturnValue) == 0x000008, "Member 'QuestContext_TryActivateObjective::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestContext.GetActiveNode
// 0x0008 (0x0008 - 0x0000)
struct QuestContext_GetActiveNode final
{
public:
	class UQuestNode*                             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestContext_GetActiveNode) == 0x000008, "Wrong alignment on QuestContext_GetActiveNode");
static_assert(sizeof(QuestContext_GetActiveNode) == 0x000008, "Wrong size on QuestContext_GetActiveNode");
static_assert(offsetof(QuestContext_GetActiveNode, ReturnValue) == 0x000000, "Member 'QuestContext_GetActiveNode::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestContext.GetActiveNodeIndex
// 0x0004 (0x0004 - 0x0000)
struct QuestContext_GetActiveNodeIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestContext_GetActiveNodeIndex) == 0x000004, "Wrong alignment on QuestContext_GetActiveNodeIndex");
static_assert(sizeof(QuestContext_GetActiveNodeIndex) == 0x000004, "Wrong size on QuestContext_GetActiveNodeIndex");
static_assert(offsetof(QuestContext_GetActiveNodeIndex, ReturnValue) == 0x000000, "Member 'QuestContext_GetActiveNodeIndex::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestContext.GetActiveObjectives
// 0x0010 (0x0010 - 0x0000)
struct QuestContext_GetActiveObjectives final
{
public:
	TArray<class UQuestObjective*>                Objectives;                                        // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestContext_GetActiveObjectives) == 0x000008, "Wrong alignment on QuestContext_GetActiveObjectives");
static_assert(sizeof(QuestContext_GetActiveObjectives) == 0x000010, "Wrong size on QuestContext_GetActiveObjectives");
static_assert(offsetof(QuestContext_GetActiveObjectives, Objectives) == 0x000000, "Member 'QuestContext_GetActiveObjectives::Objectives' has a wrong offset!");

// Function QuestFramework.QuestContext.GetAuthority
// 0x0001 (0x0001 - 0x0000)
struct QuestContext_GetAuthority final
{
public:
	EQuestNetworkAuthority                        ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestContext_GetAuthority) == 0x000001, "Wrong alignment on QuestContext_GetAuthority");
static_assert(sizeof(QuestContext_GetAuthority) == 0x000001, "Wrong size on QuestContext_GetAuthority");
static_assert(offsetof(QuestContext_GetAuthority, ReturnValue) == 0x000000, "Member 'QuestContext_GetAuthority::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestContext.GetCurrentObjectives
// 0x0010 (0x0010 - 0x0000)
struct QuestContext_GetCurrentObjectives final
{
public:
	TArray<class UQuestObjective*>                Objectives;                                        // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestContext_GetCurrentObjectives) == 0x000008, "Wrong alignment on QuestContext_GetCurrentObjectives");
static_assert(sizeof(QuestContext_GetCurrentObjectives) == 0x000010, "Wrong size on QuestContext_GetCurrentObjectives");
static_assert(offsetof(QuestContext_GetCurrentObjectives, Objectives) == 0x000000, "Member 'QuestContext_GetCurrentObjectives::Objectives' has a wrong offset!");

// Function QuestFramework.QuestContext.GetGuid
// 0x0010 (0x0010 - 0x0000)
struct QuestContext_GetGuid final
{
public:
	struct FGuid                                  ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestContext_GetGuid) == 0x000004, "Wrong alignment on QuestContext_GetGuid");
static_assert(sizeof(QuestContext_GetGuid) == 0x000010, "Wrong size on QuestContext_GetGuid");
static_assert(offsetof(QuestContext_GetGuid, ReturnValue) == 0x000000, "Member 'QuestContext_GetGuid::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestContext.GetObjectiveResult
// 0x0010 (0x0010 - 0x0000)
struct QuestContext_GetObjectiveResult final
{
public:
	class UQuestObjective*                        Objective;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReEvaluate;                                       // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EQuestResult                                  ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(QuestContext_GetObjectiveResult) == 0x000008, "Wrong alignment on QuestContext_GetObjectiveResult");
static_assert(sizeof(QuestContext_GetObjectiveResult) == 0x000010, "Wrong size on QuestContext_GetObjectiveResult");
static_assert(offsetof(QuestContext_GetObjectiveResult, Objective) == 0x000000, "Member 'QuestContext_GetObjectiveResult::Objective' has a wrong offset!");
static_assert(offsetof(QuestContext_GetObjectiveResult, bReEvaluate) == 0x000008, "Member 'QuestContext_GetObjectiveResult::bReEvaluate' has a wrong offset!");
static_assert(offsetof(QuestContext_GetObjectiveResult, ReturnValue) == 0x000009, "Member 'QuestContext_GetObjectiveResult::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestContext.GetObjectiveViewModel
// 0x0010 (0x0010 - 0x0000)
struct QuestContext_GetObjectiveViewModel final
{
public:
	class UQuestObjective*                        Objective;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UQuestObjectiveViewModel*               ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestContext_GetObjectiveViewModel) == 0x000008, "Wrong alignment on QuestContext_GetObjectiveViewModel");
static_assert(sizeof(QuestContext_GetObjectiveViewModel) == 0x000010, "Wrong size on QuestContext_GetObjectiveViewModel");
static_assert(offsetof(QuestContext_GetObjectiveViewModel, Objective) == 0x000000, "Member 'QuestContext_GetObjectiveViewModel::Objective' has a wrong offset!");
static_assert(offsetof(QuestContext_GetObjectiveViewModel, ReturnValue) == 0x000008, "Member 'QuestContext_GetObjectiveViewModel::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestContext.GetOwnerActor
// 0x0008 (0x0008 - 0x0000)
struct QuestContext_GetOwnerActor final
{
public:
	class AActor*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestContext_GetOwnerActor) == 0x000008, "Wrong alignment on QuestContext_GetOwnerActor");
static_assert(sizeof(QuestContext_GetOwnerActor) == 0x000008, "Wrong size on QuestContext_GetOwnerActor");
static_assert(offsetof(QuestContext_GetOwnerActor, ReturnValue) == 0x000000, "Member 'QuestContext_GetOwnerActor::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestContext.GetOwnerController
// 0x0008 (0x0008 - 0x0000)
struct QuestContext_GetOwnerController final
{
public:
	class AController*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestContext_GetOwnerController) == 0x000008, "Wrong alignment on QuestContext_GetOwnerController");
static_assert(sizeof(QuestContext_GetOwnerController) == 0x000008, "Wrong size on QuestContext_GetOwnerController");
static_assert(offsetof(QuestContext_GetOwnerController, ReturnValue) == 0x000000, "Member 'QuestContext_GetOwnerController::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestContext.GetOwnerQuestComponent
// 0x0008 (0x0008 - 0x0000)
struct QuestContext_GetOwnerQuestComponent final
{
public:
	class UQuestComponent*                        ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestContext_GetOwnerQuestComponent) == 0x000008, "Wrong alignment on QuestContext_GetOwnerQuestComponent");
static_assert(sizeof(QuestContext_GetOwnerQuestComponent) == 0x000008, "Wrong size on QuestContext_GetOwnerQuestComponent");
static_assert(offsetof(QuestContext_GetOwnerQuestComponent, ReturnValue) == 0x000000, "Member 'QuestContext_GetOwnerQuestComponent::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestContext.GetQuestAsset
// 0x0008 (0x0008 - 0x0000)
struct QuestContext_GetQuestAsset final
{
public:
	class UQuest*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestContext_GetQuestAsset) == 0x000008, "Wrong alignment on QuestContext_GetQuestAsset");
static_assert(sizeof(QuestContext_GetQuestAsset) == 0x000008, "Wrong size on QuestContext_GetQuestAsset");
static_assert(offsetof(QuestContext_GetQuestAsset, ReturnValue) == 0x000000, "Member 'QuestContext_GetQuestAsset::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestContext.GetQuestMemory
// 0x0008 (0x0008 - 0x0000)
struct QuestContext_GetQuestMemory final
{
public:
	class UQuestMemory*                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestContext_GetQuestMemory) == 0x000008, "Wrong alignment on QuestContext_GetQuestMemory");
static_assert(sizeof(QuestContext_GetQuestMemory) == 0x000008, "Wrong size on QuestContext_GetQuestMemory");
static_assert(offsetof(QuestContext_GetQuestMemory, ReturnValue) == 0x000000, "Member 'QuestContext_GetQuestMemory::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestContext.GetQuestState
// 0x0001 (0x0001 - 0x0000)
struct QuestContext_GetQuestState final
{
public:
	EQuestResult                                  ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestContext_GetQuestState) == 0x000001, "Wrong alignment on QuestContext_GetQuestState");
static_assert(sizeof(QuestContext_GetQuestState) == 0x000001, "Wrong size on QuestContext_GetQuestState");
static_assert(offsetof(QuestContext_GetQuestState, ReturnValue) == 0x000000, "Member 'QuestContext_GetQuestState::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestContext.GetViewModel
// 0x0008 (0x0008 - 0x0000)
struct QuestContext_GetViewModel final
{
public:
	class UQuestContextViewModel*                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestContext_GetViewModel) == 0x000008, "Wrong alignment on QuestContext_GetViewModel");
static_assert(sizeof(QuestContext_GetViewModel) == 0x000008, "Wrong size on QuestContext_GetViewModel");
static_assert(offsetof(QuestContext_GetViewModel, ReturnValue) == 0x000000, "Member 'QuestContext_GetViewModel::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestContext.HasAuthority
// 0x0001 (0x0001 - 0x0000)
struct QuestContext_HasAuthority final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestContext_HasAuthority) == 0x000001, "Wrong alignment on QuestContext_HasAuthority");
static_assert(sizeof(QuestContext_HasAuthority) == 0x000001, "Wrong size on QuestContext_HasAuthority");
static_assert(offsetof(QuestContext_HasAuthority, ReturnValue) == 0x000000, "Member 'QuestContext_HasAuthority::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestContext.HasEnded
// 0x0001 (0x0001 - 0x0000)
struct QuestContext_HasEnded final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestContext_HasEnded) == 0x000001, "Wrong alignment on QuestContext_HasEnded");
static_assert(sizeof(QuestContext_HasEnded) == 0x000001, "Wrong size on QuestContext_HasEnded");
static_assert(offsetof(QuestContext_HasEnded, ReturnValue) == 0x000000, "Member 'QuestContext_HasEnded::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestContext.IsInitialized
// 0x0001 (0x0001 - 0x0000)
struct QuestContext_IsInitialized final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestContext_IsInitialized) == 0x000001, "Wrong alignment on QuestContext_IsInitialized");
static_assert(sizeof(QuestContext_IsInitialized) == 0x000001, "Wrong size on QuestContext_IsInitialized");
static_assert(offsetof(QuestContext_IsInitialized, ReturnValue) == 0x000000, "Member 'QuestContext_IsInitialized::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestContext.IsObjectiveActive
// 0x0010 (0x0010 - 0x0000)
struct QuestContext_IsObjectiveActive final
{
public:
	class UQuestObjective*                        Objective;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(QuestContext_IsObjectiveActive) == 0x000008, "Wrong alignment on QuestContext_IsObjectiveActive");
static_assert(sizeof(QuestContext_IsObjectiveActive) == 0x000010, "Wrong size on QuestContext_IsObjectiveActive");
static_assert(offsetof(QuestContext_IsObjectiveActive, Objective) == 0x000000, "Member 'QuestContext_IsObjectiveActive::Objective' has a wrong offset!");
static_assert(offsetof(QuestContext_IsObjectiveActive, ReturnValue) == 0x000008, "Member 'QuestContext_IsObjectiveActive::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestCustomData.GetQuestAsset
// 0x0008 (0x0008 - 0x0000)
struct QuestCustomData_GetQuestAsset final
{
public:
	class UQuest*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestCustomData_GetQuestAsset) == 0x000008, "Wrong alignment on QuestCustomData_GetQuestAsset");
static_assert(sizeof(QuestCustomData_GetQuestAsset) == 0x000008, "Wrong size on QuestCustomData_GetQuestAsset");
static_assert(offsetof(QuestCustomData_GetQuestAsset, ReturnValue) == 0x000000, "Member 'QuestCustomData_GetQuestAsset::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestEvent.ExecuteEvent
// 0x0028 (0x0028 - 0x0000)
struct QuestEvent_ExecuteEvent final
{
public:
	class UQuestContext*                          Context;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FQuestEventPayload                     Payload;                                           // 0x0008(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestEvent_ExecuteEvent) == 0x000008, "Wrong alignment on QuestEvent_ExecuteEvent");
static_assert(sizeof(QuestEvent_ExecuteEvent) == 0x000028, "Wrong size on QuestEvent_ExecuteEvent");
static_assert(offsetof(QuestEvent_ExecuteEvent, Context) == 0x000000, "Member 'QuestEvent_ExecuteEvent::Context' has a wrong offset!");
static_assert(offsetof(QuestEvent_ExecuteEvent, Payload) == 0x000008, "Member 'QuestEvent_ExecuteEvent::Payload' has a wrong offset!");

// Function QuestFramework.QuestListViewModel.SetDetailQuestContextViewModel
// 0x0008 (0x0008 - 0x0000)
struct QuestListViewModel_SetDetailQuestContextViewModel final
{
public:
	class UQuestContextViewModel*                 ViewModel;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestListViewModel_SetDetailQuestContextViewModel) == 0x000008, "Wrong alignment on QuestListViewModel_SetDetailQuestContextViewModel");
static_assert(sizeof(QuestListViewModel_SetDetailQuestContextViewModel) == 0x000008, "Wrong size on QuestListViewModel_SetDetailQuestContextViewModel");
static_assert(offsetof(QuestListViewModel_SetDetailQuestContextViewModel, ViewModel) == 0x000000, "Member 'QuestListViewModel_SetDetailQuestContextViewModel::ViewModel' has a wrong offset!");

// Function QuestFramework.QuestListViewModel.GetCompletedQuestContexts
// 0x0010 (0x0010 - 0x0000)
struct QuestListViewModel_GetCompletedQuestContexts final
{
public:
	TArray<class UQuestContextViewModel*>         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestListViewModel_GetCompletedQuestContexts) == 0x000008, "Wrong alignment on QuestListViewModel_GetCompletedQuestContexts");
static_assert(sizeof(QuestListViewModel_GetCompletedQuestContexts) == 0x000010, "Wrong size on QuestListViewModel_GetCompletedQuestContexts");
static_assert(offsetof(QuestListViewModel_GetCompletedQuestContexts, ReturnValue) == 0x000000, "Member 'QuestListViewModel_GetCompletedQuestContexts::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestListViewModel.GetDetailQuestContextViewModel
// 0x0008 (0x0008 - 0x0000)
struct QuestListViewModel_GetDetailQuestContextViewModel final
{
public:
	class UQuestContextViewModel*                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestListViewModel_GetDetailQuestContextViewModel) == 0x000008, "Wrong alignment on QuestListViewModel_GetDetailQuestContextViewModel");
static_assert(sizeof(QuestListViewModel_GetDetailQuestContextViewModel) == 0x000008, "Wrong size on QuestListViewModel_GetDetailQuestContextViewModel");
static_assert(offsetof(QuestListViewModel_GetDetailQuestContextViewModel, ReturnValue) == 0x000000, "Member 'QuestListViewModel_GetDetailQuestContextViewModel::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestListViewModel.GetFailedQuestContexts
// 0x0010 (0x0010 - 0x0000)
struct QuestListViewModel_GetFailedQuestContexts final
{
public:
	TArray<class UQuestContextViewModel*>         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestListViewModel_GetFailedQuestContexts) == 0x000008, "Wrong alignment on QuestListViewModel_GetFailedQuestContexts");
static_assert(sizeof(QuestListViewModel_GetFailedQuestContexts) == 0x000010, "Wrong size on QuestListViewModel_GetFailedQuestContexts");
static_assert(offsetof(QuestListViewModel_GetFailedQuestContexts, ReturnValue) == 0x000000, "Member 'QuestListViewModel_GetFailedQuestContexts::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestListViewModel.GetInProgressQuestContexts
// 0x0010 (0x0010 - 0x0000)
struct QuestListViewModel_GetInProgressQuestContexts final
{
public:
	TArray<class UQuestContextViewModel*>         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestListViewModel_GetInProgressQuestContexts) == 0x000008, "Wrong alignment on QuestListViewModel_GetInProgressQuestContexts");
static_assert(sizeof(QuestListViewModel_GetInProgressQuestContexts) == 0x000010, "Wrong size on QuestListViewModel_GetInProgressQuestContexts");
static_assert(offsetof(QuestListViewModel_GetInProgressQuestContexts, ReturnValue) == 0x000000, "Member 'QuestListViewModel_GetInProgressQuestContexts::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestListViewModel.GetQuestContexts
// 0x0010 (0x0010 - 0x0000)
struct QuestListViewModel_GetQuestContexts final
{
public:
	TArray<class UQuestContextViewModel*>         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestListViewModel_GetQuestContexts) == 0x000008, "Wrong alignment on QuestListViewModel_GetQuestContexts");
static_assert(sizeof(QuestListViewModel_GetQuestContexts) == 0x000010, "Wrong size on QuestListViewModel_GetQuestContexts");
static_assert(offsetof(QuestListViewModel_GetQuestContexts, ReturnValue) == 0x000000, "Member 'QuestListViewModel_GetQuestContexts::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestManager.GetQuestManager
// 0x0010 (0x0010 - 0x0000)
struct QuestManager_GetQuestManager final
{
public:
	const class UObject*                          WorldContext;                                      // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UQuestManager*                          ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestManager_GetQuestManager) == 0x000008, "Wrong alignment on QuestManager_GetQuestManager");
static_assert(sizeof(QuestManager_GetQuestManager) == 0x000010, "Wrong size on QuestManager_GetQuestManager");
static_assert(offsetof(QuestManager_GetQuestManager, WorldContext) == 0x000000, "Member 'QuestManager_GetQuestManager::WorldContext' has a wrong offset!");
static_assert(offsetof(QuestManager_GetQuestManager, ReturnValue) == 0x000008, "Member 'QuestManager_GetQuestManager::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestManagerAccess.RetainQuestManager
// 0x0008 (0x0008 - 0x0000)
struct QuestManagerAccess_RetainQuestManager final
{
public:
	class UQuestManager*                          Manager;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestManagerAccess_RetainQuestManager) == 0x000008, "Wrong alignment on QuestManagerAccess_RetainQuestManager");
static_assert(sizeof(QuestManagerAccess_RetainQuestManager) == 0x000008, "Wrong size on QuestManagerAccess_RetainQuestManager");
static_assert(offsetof(QuestManagerAccess_RetainQuestManager, Manager) == 0x000000, "Member 'QuestManagerAccess_RetainQuestManager::Manager' has a wrong offset!");

// Function QuestFramework.QuestManagerAccess.GetQuestManagerInstance
// 0x0008 (0x0008 - 0x0000)
struct QuestManagerAccess_GetQuestManagerInstance final
{
public:
	class UQuestManager*                          ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestManagerAccess_GetQuestManagerInstance) == 0x000008, "Wrong alignment on QuestManagerAccess_GetQuestManagerInstance");
static_assert(sizeof(QuestManagerAccess_GetQuestManagerInstance) == 0x000008, "Wrong size on QuestManagerAccess_GetQuestManagerInstance");
static_assert(offsetof(QuestManagerAccess_GetQuestManagerInstance, ReturnValue) == 0x000000, "Member 'QuestManagerAccess_GetQuestManagerInstance::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestMemory.SetBool
// 0x000C (0x000C - 0x0000)
struct QuestMemory_SetBool final
{
public:
	class FName                                   Variable;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Value;                                             // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(QuestMemory_SetBool) == 0x000004, "Wrong alignment on QuestMemory_SetBool");
static_assert(sizeof(QuestMemory_SetBool) == 0x00000C, "Wrong size on QuestMemory_SetBool");
static_assert(offsetof(QuestMemory_SetBool, Variable) == 0x000000, "Member 'QuestMemory_SetBool::Variable' has a wrong offset!");
static_assert(offsetof(QuestMemory_SetBool, Value) == 0x000008, "Member 'QuestMemory_SetBool::Value' has a wrong offset!");

// Function QuestFramework.QuestMemory.SetFloat
// 0x000C (0x000C - 0x0000)
struct QuestMemory_SetFloat final
{
public:
	class FName                                   Variable;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestMemory_SetFloat) == 0x000004, "Wrong alignment on QuestMemory_SetFloat");
static_assert(sizeof(QuestMemory_SetFloat) == 0x00000C, "Wrong size on QuestMemory_SetFloat");
static_assert(offsetof(QuestMemory_SetFloat, Variable) == 0x000000, "Member 'QuestMemory_SetFloat::Variable' has a wrong offset!");
static_assert(offsetof(QuestMemory_SetFloat, Value) == 0x000008, "Member 'QuestMemory_SetFloat::Value' has a wrong offset!");

// Function QuestFramework.QuestMemory.SetInteger
// 0x000C (0x000C - 0x0000)
struct QuestMemory_SetInteger final
{
public:
	class FName                                   Variable;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Value;                                             // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestMemory_SetInteger) == 0x000004, "Wrong alignment on QuestMemory_SetInteger");
static_assert(sizeof(QuestMemory_SetInteger) == 0x00000C, "Wrong size on QuestMemory_SetInteger");
static_assert(offsetof(QuestMemory_SetInteger, Variable) == 0x000000, "Member 'QuestMemory_SetInteger::Variable' has a wrong offset!");
static_assert(offsetof(QuestMemory_SetInteger, Value) == 0x000008, "Member 'QuestMemory_SetInteger::Value' has a wrong offset!");

// Function QuestFramework.QuestMemory.GetBool
// 0x000C (0x000C - 0x0000)
struct QuestMemory_GetBool final
{
public:
	class FName                                   Variable;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(QuestMemory_GetBool) == 0x000004, "Wrong alignment on QuestMemory_GetBool");
static_assert(sizeof(QuestMemory_GetBool) == 0x00000C, "Wrong size on QuestMemory_GetBool");
static_assert(offsetof(QuestMemory_GetBool, Variable) == 0x000000, "Member 'QuestMemory_GetBool::Variable' has a wrong offset!");
static_assert(offsetof(QuestMemory_GetBool, ReturnValue) == 0x000008, "Member 'QuestMemory_GetBool::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestMemory.GetFloat
// 0x000C (0x000C - 0x0000)
struct QuestMemory_GetFloat final
{
public:
	class FName                                   Variable;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestMemory_GetFloat) == 0x000004, "Wrong alignment on QuestMemory_GetFloat");
static_assert(sizeof(QuestMemory_GetFloat) == 0x00000C, "Wrong size on QuestMemory_GetFloat");
static_assert(offsetof(QuestMemory_GetFloat, Variable) == 0x000000, "Member 'QuestMemory_GetFloat::Variable' has a wrong offset!");
static_assert(offsetof(QuestMemory_GetFloat, ReturnValue) == 0x000008, "Member 'QuestMemory_GetFloat::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestMemory.GetInteger
// 0x000C (0x000C - 0x0000)
struct QuestMemory_GetInteger final
{
public:
	class FName                                   Variable;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestMemory_GetInteger) == 0x000004, "Wrong alignment on QuestMemory_GetInteger");
static_assert(sizeof(QuestMemory_GetInteger) == 0x00000C, "Wrong size on QuestMemory_GetInteger");
static_assert(offsetof(QuestMemory_GetInteger, Variable) == 0x000000, "Member 'QuestMemory_GetInteger::Variable' has a wrong offset!");
static_assert(offsetof(QuestMemory_GetInteger, ReturnValue) == 0x000008, "Member 'QuestMemory_GetInteger::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestMemory.RunQuery
// 0x0020 (0x0020 - 0x0000)
struct QuestMemory_RunQuery final
{
public:
	struct FQuestMemoryQuery                      Query;                                             // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(QuestMemory_RunQuery) == 0x000008, "Wrong alignment on QuestMemory_RunQuery");
static_assert(sizeof(QuestMemory_RunQuery) == 0x000020, "Wrong size on QuestMemory_RunQuery");
static_assert(offsetof(QuestMemory_RunQuery, Query) == 0x000000, "Member 'QuestMemory_RunQuery::Query' has a wrong offset!");
static_assert(offsetof(QuestMemory_RunQuery, ReturnValue) == 0x000018, "Member 'QuestMemory_RunQuery::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestMessageComponent.BroadcastQuestMessage
// 0x0028 (0x0028 - 0x0000)
struct QuestMessageComponent_BroadcastQuestMessage final
{
public:
	struct FGameplayTag                           MessageTag;                                        // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FQuestEventPayload                     Payload;                                           // 0x0008(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestMessageComponent_BroadcastQuestMessage) == 0x000008, "Wrong alignment on QuestMessageComponent_BroadcastQuestMessage");
static_assert(sizeof(QuestMessageComponent_BroadcastQuestMessage) == 0x000028, "Wrong size on QuestMessageComponent_BroadcastQuestMessage");
static_assert(offsetof(QuestMessageComponent_BroadcastQuestMessage, MessageTag) == 0x000000, "Member 'QuestMessageComponent_BroadcastQuestMessage::MessageTag' has a wrong offset!");
static_assert(offsetof(QuestMessageComponent_BroadcastQuestMessage, Payload) == 0x000008, "Member 'QuestMessageComponent_BroadcastQuestMessage::Payload' has a wrong offset!");

// Function QuestFramework.QuestMessageComponent.SendQuestMessage
// 0x0030 (0x0030 - 0x0000)
struct QuestMessageComponent_SendQuestMessage final
{
public:
	struct FGameplayTag                           MessageTag;                                        // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FQuestEventPayload                     Payload;                                           // 0x0008(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class AActor*                                 Recipient;                                         // 0x0028(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestMessageComponent_SendQuestMessage) == 0x000008, "Wrong alignment on QuestMessageComponent_SendQuestMessage");
static_assert(sizeof(QuestMessageComponent_SendQuestMessage) == 0x000030, "Wrong size on QuestMessageComponent_SendQuestMessage");
static_assert(offsetof(QuestMessageComponent_SendQuestMessage, MessageTag) == 0x000000, "Member 'QuestMessageComponent_SendQuestMessage::MessageTag' has a wrong offset!");
static_assert(offsetof(QuestMessageComponent_SendQuestMessage, Payload) == 0x000008, "Member 'QuestMessageComponent_SendQuestMessage::Payload' has a wrong offset!");
static_assert(offsetof(QuestMessageComponent_SendQuestMessage, Recipient) == 0x000028, "Member 'QuestMessageComponent_SendQuestMessage::Recipient' has a wrong offset!");

// Function QuestFramework.QuestNode.GetCustomData
// 0x0008 (0x0008 - 0x0000)
struct QuestNode_GetCustomData final
{
public:
	const class UQuestCustomData*                 ReturnValue;                                       // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestNode_GetCustomData) == 0x000008, "Wrong alignment on QuestNode_GetCustomData");
static_assert(sizeof(QuestNode_GetCustomData) == 0x000008, "Wrong size on QuestNode_GetCustomData");
static_assert(offsetof(QuestNode_GetCustomData, ReturnValue) == 0x000000, "Member 'QuestNode_GetCustomData::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestNode.GetNodeGuid
// 0x0010 (0x0010 - 0x0000)
struct QuestNode_GetNodeGuid final
{
public:
	struct FGuid                                  ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestNode_GetNodeGuid) == 0x000004, "Wrong alignment on QuestNode_GetNodeGuid");
static_assert(sizeof(QuestNode_GetNodeGuid) == 0x000010, "Wrong size on QuestNode_GetNodeGuid");
static_assert(offsetof(QuestNode_GetNodeGuid, ReturnValue) == 0x000000, "Member 'QuestNode_GetNodeGuid::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestNode.GetNodeIndex
// 0x0004 (0x0004 - 0x0000)
struct QuestNode_GetNodeIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestNode_GetNodeIndex) == 0x000004, "Wrong alignment on QuestNode_GetNodeIndex");
static_assert(sizeof(QuestNode_GetNodeIndex) == 0x000004, "Wrong size on QuestNode_GetNodeIndex");
static_assert(offsetof(QuestNode_GetNodeIndex, ReturnValue) == 0x000000, "Member 'QuestNode_GetNodeIndex::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestNode.GetNodeText
// 0x0020 (0x0020 - 0x0000)
struct QuestNode_GetNodeText final
{
public:
	class UQuestContext*                          Context;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestNode_GetNodeText) == 0x000008, "Wrong alignment on QuestNode_GetNodeText");
static_assert(sizeof(QuestNode_GetNodeText) == 0x000020, "Wrong size on QuestNode_GetNodeText");
static_assert(offsetof(QuestNode_GetNodeText, Context) == 0x000000, "Member 'QuestNode_GetNodeText::Context' has a wrong offset!");
static_assert(offsetof(QuestNode_GetNodeText, ReturnValue) == 0x000008, "Member 'QuestNode_GetNodeText::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestNode_End.GetEndResultType
// 0x0001 (0x0001 - 0x0000)
struct QuestNode_End_GetEndResultType final
{
public:
	EQuestResult                                  ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestNode_End_GetEndResultType) == 0x000001, "Wrong alignment on QuestNode_End_GetEndResultType");
static_assert(sizeof(QuestNode_End_GetEndResultType) == 0x000001, "Wrong size on QuestNode_End_GetEndResultType");
static_assert(offsetof(QuestNode_End_GetEndResultType, ReturnValue) == 0x000000, "Member 'QuestNode_End_GetEndResultType::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestNode_Stage.FindObjectiveByName
// 0x0010 (0x0010 - 0x0000)
struct QuestNode_Stage_FindObjectiveByName final
{
public:
	class FName                                   Param_Name;                                        // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UQuestObjective*                        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestNode_Stage_FindObjectiveByName) == 0x000008, "Wrong alignment on QuestNode_Stage_FindObjectiveByName");
static_assert(sizeof(QuestNode_Stage_FindObjectiveByName) == 0x000010, "Wrong size on QuestNode_Stage_FindObjectiveByName");
static_assert(offsetof(QuestNode_Stage_FindObjectiveByName, Param_Name) == 0x000000, "Member 'QuestNode_Stage_FindObjectiveByName::Param_Name' has a wrong offset!");
static_assert(offsetof(QuestNode_Stage_FindObjectiveByName, ReturnValue) == 0x000008, "Member 'QuestNode_Stage_FindObjectiveByName::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestNode_Stage.GetAllObjectiveNames
// 0x0010 (0x0010 - 0x0000)
struct QuestNode_Stage_GetAllObjectiveNames final
{
public:
	TArray<class FName>                           OutNames;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestNode_Stage_GetAllObjectiveNames) == 0x000008, "Wrong alignment on QuestNode_Stage_GetAllObjectiveNames");
static_assert(sizeof(QuestNode_Stage_GetAllObjectiveNames) == 0x000010, "Wrong size on QuestNode_Stage_GetAllObjectiveNames");
static_assert(offsetof(QuestNode_Stage_GetAllObjectiveNames, OutNames) == 0x000000, "Member 'QuestNode_Stage_GetAllObjectiveNames::OutNames' has a wrong offset!");

// Function QuestFramework.QuestObjective.HasTextArguments
// 0x0001 (0x0001 - 0x0000)
struct QuestObjective_HasTextArguments final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestObjective_HasTextArguments) == 0x000001, "Wrong alignment on QuestObjective_HasTextArguments");
static_assert(sizeof(QuestObjective_HasTextArguments) == 0x000001, "Wrong size on QuestObjective_HasTextArguments");
static_assert(offsetof(QuestObjective_HasTextArguments, ReturnValue) == 0x000000, "Member 'QuestObjective_HasTextArguments::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestObjective.IsActive
// 0x0010 (0x0010 - 0x0000)
struct QuestObjective_IsActive final
{
public:
	const class UQuestContext*                    Context;                                           // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(QuestObjective_IsActive) == 0x000008, "Wrong alignment on QuestObjective_IsActive");
static_assert(sizeof(QuestObjective_IsActive) == 0x000010, "Wrong size on QuestObjective_IsActive");
static_assert(offsetof(QuestObjective_IsActive, Context) == 0x000000, "Member 'QuestObjective_IsActive::Context' has a wrong offset!");
static_assert(offsetof(QuestObjective_IsActive, ReturnValue) == 0x000008, "Member 'QuestObjective_IsActive::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestObjectiveObserver.Evaluate
// 0x0010 (0x0010 - 0x0000)
struct QuestObjectiveObserver_Evaluate final
{
public:
	class UQuestContext*                          Context;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EQuestResult                                  ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(QuestObjectiveObserver_Evaluate) == 0x000008, "Wrong alignment on QuestObjectiveObserver_Evaluate");
static_assert(sizeof(QuestObjectiveObserver_Evaluate) == 0x000010, "Wrong size on QuestObjectiveObserver_Evaluate");
static_assert(offsetof(QuestObjectiveObserver_Evaluate, Context) == 0x000000, "Member 'QuestObjectiveObserver_Evaluate::Context' has a wrong offset!");
static_assert(offsetof(QuestObjectiveObserver_Evaluate, ReturnValue) == 0x000008, "Member 'QuestObjectiveObserver_Evaluate::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestService_BlueprintBase.OnServiceActivatedBP
// 0x0008 (0x0008 - 0x0000)
struct QuestService_BlueprintBase_OnServiceActivatedBP final
{
public:
	class UQuestContext*                          Context;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestService_BlueprintBase_OnServiceActivatedBP) == 0x000008, "Wrong alignment on QuestService_BlueprintBase_OnServiceActivatedBP");
static_assert(sizeof(QuestService_BlueprintBase_OnServiceActivatedBP) == 0x000008, "Wrong size on QuestService_BlueprintBase_OnServiceActivatedBP");
static_assert(offsetof(QuestService_BlueprintBase_OnServiceActivatedBP, Context) == 0x000000, "Member 'QuestService_BlueprintBase_OnServiceActivatedBP::Context' has a wrong offset!");

// Function QuestFramework.QuestService_BlueprintBase.OnServiceDeactivatedBP
// 0x0008 (0x0008 - 0x0000)
struct QuestService_BlueprintBase_OnServiceDeactivatedBP final
{
public:
	class UQuestContext*                          Context;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestService_BlueprintBase_OnServiceDeactivatedBP) == 0x000008, "Wrong alignment on QuestService_BlueprintBase_OnServiceDeactivatedBP");
static_assert(sizeof(QuestService_BlueprintBase_OnServiceDeactivatedBP) == 0x000008, "Wrong size on QuestService_BlueprintBase_OnServiceDeactivatedBP");
static_assert(offsetof(QuestService_BlueprintBase_OnServiceDeactivatedBP, Context) == 0x000000, "Member 'QuestService_BlueprintBase_OnServiceDeactivatedBP::Context' has a wrong offset!");

// Function QuestFramework.QuestService_BlueprintBase.TickServiceBP
// 0x0010 (0x0010 - 0x0000)
struct QuestService_BlueprintBase_TickServiceBP final
{
public:
	class UQuestContext*                          Context;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DeltaTime;                                         // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(QuestService_BlueprintBase_TickServiceBP) == 0x000008, "Wrong alignment on QuestService_BlueprintBase_TickServiceBP");
static_assert(sizeof(QuestService_BlueprintBase_TickServiceBP) == 0x000010, "Wrong size on QuestService_BlueprintBase_TickServiceBP");
static_assert(offsetof(QuestService_BlueprintBase_TickServiceBP, Context) == 0x000000, "Member 'QuestService_BlueprintBase_TickServiceBP::Context' has a wrong offset!");
static_assert(offsetof(QuestService_BlueprintBase_TickServiceBP, DeltaTime) == 0x000008, "Member 'QuestService_BlueprintBase_TickServiceBP::DeltaTime' has a wrong offset!");

// Function QuestFramework.QuestService_ListenMessage.OnMessageReceived
// 0x0038 (0x0038 - 0x0000)
struct QuestService_ListenMessage_OnMessageReceived final
{
public:
	class UQuestContext*                          Context;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           MessageTag;                                        // 0x0008(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FQuestEventPayload                     Payload;                                           // 0x0010(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	class AActor*                                 Sender;                                            // 0x0030(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestService_ListenMessage_OnMessageReceived) == 0x000008, "Wrong alignment on QuestService_ListenMessage_OnMessageReceived");
static_assert(sizeof(QuestService_ListenMessage_OnMessageReceived) == 0x000038, "Wrong size on QuestService_ListenMessage_OnMessageReceived");
static_assert(offsetof(QuestService_ListenMessage_OnMessageReceived, Context) == 0x000000, "Member 'QuestService_ListenMessage_OnMessageReceived::Context' has a wrong offset!");
static_assert(offsetof(QuestService_ListenMessage_OnMessageReceived, MessageTag) == 0x000008, "Member 'QuestService_ListenMessage_OnMessageReceived::MessageTag' has a wrong offset!");
static_assert(offsetof(QuestService_ListenMessage_OnMessageReceived, Payload) == 0x000010, "Member 'QuestService_ListenMessage_OnMessageReceived::Payload' has a wrong offset!");
static_assert(offsetof(QuestService_ListenMessage_OnMessageReceived, Sender) == 0x000030, "Member 'QuestService_ListenMessage_OnMessageReceived::Sender' has a wrong offset!");

// Function QuestFramework.QuestService_SyncVariable.GetBoolSyncValue
// 0x0010 (0x0010 - 0x0000)
struct QuestService_SyncVariable_GetBoolSyncValue final
{
public:
	class UQuestContext*                          Context;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(QuestService_SyncVariable_GetBoolSyncValue) == 0x000008, "Wrong alignment on QuestService_SyncVariable_GetBoolSyncValue");
static_assert(sizeof(QuestService_SyncVariable_GetBoolSyncValue) == 0x000010, "Wrong size on QuestService_SyncVariable_GetBoolSyncValue");
static_assert(offsetof(QuestService_SyncVariable_GetBoolSyncValue, Context) == 0x000000, "Member 'QuestService_SyncVariable_GetBoolSyncValue::Context' has a wrong offset!");
static_assert(offsetof(QuestService_SyncVariable_GetBoolSyncValue, ReturnValue) == 0x000008, "Member 'QuestService_SyncVariable_GetBoolSyncValue::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestService_SyncVariable.GetFloatSyncValue
// 0x0010 (0x0010 - 0x0000)
struct QuestService_SyncVariable_GetFloatSyncValue final
{
public:
	class UQuestContext*                          Context;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(QuestService_SyncVariable_GetFloatSyncValue) == 0x000008, "Wrong alignment on QuestService_SyncVariable_GetFloatSyncValue");
static_assert(sizeof(QuestService_SyncVariable_GetFloatSyncValue) == 0x000010, "Wrong size on QuestService_SyncVariable_GetFloatSyncValue");
static_assert(offsetof(QuestService_SyncVariable_GetFloatSyncValue, Context) == 0x000000, "Member 'QuestService_SyncVariable_GetFloatSyncValue::Context' has a wrong offset!");
static_assert(offsetof(QuestService_SyncVariable_GetFloatSyncValue, ReturnValue) == 0x000008, "Member 'QuestService_SyncVariable_GetFloatSyncValue::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestService_SyncVariable.GetIntegerSyncValue
// 0x0010 (0x0010 - 0x0000)
struct QuestService_SyncVariable_GetIntegerSyncValue final
{
public:
	class UQuestContext*                          Context;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(QuestService_SyncVariable_GetIntegerSyncValue) == 0x000008, "Wrong alignment on QuestService_SyncVariable_GetIntegerSyncValue");
static_assert(sizeof(QuestService_SyncVariable_GetIntegerSyncValue) == 0x000010, "Wrong size on QuestService_SyncVariable_GetIntegerSyncValue");
static_assert(offsetof(QuestService_SyncVariable_GetIntegerSyncValue, Context) == 0x000000, "Member 'QuestService_SyncVariable_GetIntegerSyncValue::Context' has a wrong offset!");
static_assert(offsetof(QuestService_SyncVariable_GetIntegerSyncValue, ReturnValue) == 0x000008, "Member 'QuestService_SyncVariable_GetIntegerSyncValue::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestTextArgument.GetText
// 0x0020 (0x0020 - 0x0000)
struct QuestTextArgument_GetText final
{
public:
	class UQuestContext*                          Context;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestTextArgument_GetText) == 0x000008, "Wrong alignment on QuestTextArgument_GetText");
static_assert(sizeof(QuestTextArgument_GetText) == 0x000020, "Wrong size on QuestTextArgument_GetText");
static_assert(offsetof(QuestTextArgument_GetText, Context) == 0x000000, "Member 'QuestTextArgument_GetText::Context' has a wrong offset!");
static_assert(offsetof(QuestTextArgument_GetText, ReturnValue) == 0x000008, "Member 'QuestTextArgument_GetText::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestTrackerComponent.AddSourceQuestComponent
// 0x0008 (0x0008 - 0x0000)
struct QuestTrackerComponent_AddSourceQuestComponent final
{
public:
	class UQuestComponent*                        QuestComponent;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestTrackerComponent_AddSourceQuestComponent) == 0x000008, "Wrong alignment on QuestTrackerComponent_AddSourceQuestComponent");
static_assert(sizeof(QuestTrackerComponent_AddSourceQuestComponent) == 0x000008, "Wrong size on QuestTrackerComponent_AddSourceQuestComponent");
static_assert(offsetof(QuestTrackerComponent_AddSourceQuestComponent, QuestComponent) == 0x000000, "Member 'QuestTrackerComponent_AddSourceQuestComponent::QuestComponent' has a wrong offset!");

// Function QuestFramework.QuestTrackerComponent.HandleOnQuestContextCreated
// 0x0010 (0x0010 - 0x0000)
struct QuestTrackerComponent_HandleOnQuestContextCreated final
{
public:
	class UQuestComponent*                        QuestComponent;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UQuestContext*                          Context;                                           // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestTrackerComponent_HandleOnQuestContextCreated) == 0x000008, "Wrong alignment on QuestTrackerComponent_HandleOnQuestContextCreated");
static_assert(sizeof(QuestTrackerComponent_HandleOnQuestContextCreated) == 0x000010, "Wrong size on QuestTrackerComponent_HandleOnQuestContextCreated");
static_assert(offsetof(QuestTrackerComponent_HandleOnQuestContextCreated, QuestComponent) == 0x000000, "Member 'QuestTrackerComponent_HandleOnQuestContextCreated::QuestComponent' has a wrong offset!");
static_assert(offsetof(QuestTrackerComponent_HandleOnQuestContextCreated, Context) == 0x000008, "Member 'QuestTrackerComponent_HandleOnQuestContextCreated::Context' has a wrong offset!");

// Function QuestFramework.QuestTrackerComponent.HandleOnQuestContextSuspended
// 0x0010 (0x0010 - 0x0000)
struct QuestTrackerComponent_HandleOnQuestContextSuspended final
{
public:
	class UQuestComponent*                        QuestComponent;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UQuestContext*                          Context;                                           // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestTrackerComponent_HandleOnQuestContextSuspended) == 0x000008, "Wrong alignment on QuestTrackerComponent_HandleOnQuestContextSuspended");
static_assert(sizeof(QuestTrackerComponent_HandleOnQuestContextSuspended) == 0x000010, "Wrong size on QuestTrackerComponent_HandleOnQuestContextSuspended");
static_assert(offsetof(QuestTrackerComponent_HandleOnQuestContextSuspended, QuestComponent) == 0x000000, "Member 'QuestTrackerComponent_HandleOnQuestContextSuspended::QuestComponent' has a wrong offset!");
static_assert(offsetof(QuestTrackerComponent_HandleOnQuestContextSuspended, Context) == 0x000008, "Member 'QuestTrackerComponent_HandleOnQuestContextSuspended::Context' has a wrong offset!");

// Function QuestFramework.QuestTrackerComponent.HandleOnQuestEnded
// 0x0008 (0x0008 - 0x0000)
struct QuestTrackerComponent_HandleOnQuestEnded final
{
public:
	class UQuestContext*                          Context;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestTrackerComponent_HandleOnQuestEnded) == 0x000008, "Wrong alignment on QuestTrackerComponent_HandleOnQuestEnded");
static_assert(sizeof(QuestTrackerComponent_HandleOnQuestEnded) == 0x000008, "Wrong size on QuestTrackerComponent_HandleOnQuestEnded");
static_assert(offsetof(QuestTrackerComponent_HandleOnQuestEnded, Context) == 0x000000, "Member 'QuestTrackerComponent_HandleOnQuestEnded::Context' has a wrong offset!");

// Function QuestFramework.QuestTrackerComponent.HandleOnQuestStarted
// 0x0008 (0x0008 - 0x0000)
struct QuestTrackerComponent_HandleOnQuestStarted final
{
public:
	class UQuestContext*                          Context;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestTrackerComponent_HandleOnQuestStarted) == 0x000008, "Wrong alignment on QuestTrackerComponent_HandleOnQuestStarted");
static_assert(sizeof(QuestTrackerComponent_HandleOnQuestStarted) == 0x000008, "Wrong size on QuestTrackerComponent_HandleOnQuestStarted");
static_assert(offsetof(QuestTrackerComponent_HandleOnQuestStarted, Context) == 0x000000, "Member 'QuestTrackerComponent_HandleOnQuestStarted::Context' has a wrong offset!");

// Function QuestFramework.QuestTrackerComponent.RefreshViewModel
// 0x0002 (0x0002 - 0x0000)
struct QuestTrackerComponent_RefreshViewModel final
{
public:
	bool                                          bTrackerViewModel;                                 // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bQuestListViewModel;                               // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestTrackerComponent_RefreshViewModel) == 0x000001, "Wrong alignment on QuestTrackerComponent_RefreshViewModel");
static_assert(sizeof(QuestTrackerComponent_RefreshViewModel) == 0x000002, "Wrong size on QuestTrackerComponent_RefreshViewModel");
static_assert(offsetof(QuestTrackerComponent_RefreshViewModel, bTrackerViewModel) == 0x000000, "Member 'QuestTrackerComponent_RefreshViewModel::bTrackerViewModel' has a wrong offset!");
static_assert(offsetof(QuestTrackerComponent_RefreshViewModel, bQuestListViewModel) == 0x000001, "Member 'QuestTrackerComponent_RefreshViewModel::bQuestListViewModel' has a wrong offset!");

// Function QuestFramework.QuestTrackerComponent.RemoveSourceQuestComponent
// 0x0008 (0x0008 - 0x0000)
struct QuestTrackerComponent_RemoveSourceQuestComponent final
{
public:
	class UQuestComponent*                        QuestComponent;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestTrackerComponent_RemoveSourceQuestComponent) == 0x000008, "Wrong alignment on QuestTrackerComponent_RemoveSourceQuestComponent");
static_assert(sizeof(QuestTrackerComponent_RemoveSourceQuestComponent) == 0x000008, "Wrong size on QuestTrackerComponent_RemoveSourceQuestComponent");
static_assert(offsetof(QuestTrackerComponent_RemoveSourceQuestComponent, QuestComponent) == 0x000000, "Member 'QuestTrackerComponent_RemoveSourceQuestComponent::QuestComponent' has a wrong offset!");

// Function QuestFramework.QuestTrackerComponent.StopTrackQuest
// 0x0008 (0x0008 - 0x0000)
struct QuestTrackerComponent_StopTrackQuest final
{
public:
	class UQuestContext*                          QuestContext;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestTrackerComponent_StopTrackQuest) == 0x000008, "Wrong alignment on QuestTrackerComponent_StopTrackQuest");
static_assert(sizeof(QuestTrackerComponent_StopTrackQuest) == 0x000008, "Wrong size on QuestTrackerComponent_StopTrackQuest");
static_assert(offsetof(QuestTrackerComponent_StopTrackQuest, QuestContext) == 0x000000, "Member 'QuestTrackerComponent_StopTrackQuest::QuestContext' has a wrong offset!");

// Function QuestFramework.QuestTrackerComponent.TrackQuest
// 0x0008 (0x0008 - 0x0000)
struct QuestTrackerComponent_TrackQuest final
{
public:
	class UQuestContext*                          QuestContext;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestTrackerComponent_TrackQuest) == 0x000008, "Wrong alignment on QuestTrackerComponent_TrackQuest");
static_assert(sizeof(QuestTrackerComponent_TrackQuest) == 0x000008, "Wrong size on QuestTrackerComponent_TrackQuest");
static_assert(offsetof(QuestTrackerComponent_TrackQuest, QuestContext) == 0x000000, "Member 'QuestTrackerComponent_TrackQuest::QuestContext' has a wrong offset!");

// Function QuestFramework.QuestTrackerComponent.GetAllQuestContexts
// 0x0010 (0x0010 - 0x0000)
struct QuestTrackerComponent_GetAllQuestContexts final
{
public:
	TArray<class UQuestContext*>                  OutContexts;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestTrackerComponent_GetAllQuestContexts) == 0x000008, "Wrong alignment on QuestTrackerComponent_GetAllQuestContexts");
static_assert(sizeof(QuestTrackerComponent_GetAllQuestContexts) == 0x000010, "Wrong size on QuestTrackerComponent_GetAllQuestContexts");
static_assert(offsetof(QuestTrackerComponent_GetAllQuestContexts, OutContexts) == 0x000000, "Member 'QuestTrackerComponent_GetAllQuestContexts::OutContexts' has a wrong offset!");

// Function QuestFramework.QuestTrackerComponent.GetListViewModel
// 0x0008 (0x0008 - 0x0000)
struct QuestTrackerComponent_GetListViewModel final
{
public:
	class UQuestListViewModel*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestTrackerComponent_GetListViewModel) == 0x000008, "Wrong alignment on QuestTrackerComponent_GetListViewModel");
static_assert(sizeof(QuestTrackerComponent_GetListViewModel) == 0x000008, "Wrong size on QuestTrackerComponent_GetListViewModel");
static_assert(offsetof(QuestTrackerComponent_GetListViewModel, ReturnValue) == 0x000000, "Member 'QuestTrackerComponent_GetListViewModel::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestTrackerComponent.GetTrackedQuestContexts
// 0x0010 (0x0010 - 0x0000)
struct QuestTrackerComponent_GetTrackedQuestContexts final
{
public:
	TArray<class UQuestContext*>                  OutContexts;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestTrackerComponent_GetTrackedQuestContexts) == 0x000008, "Wrong alignment on QuestTrackerComponent_GetTrackedQuestContexts");
static_assert(sizeof(QuestTrackerComponent_GetTrackedQuestContexts) == 0x000010, "Wrong size on QuestTrackerComponent_GetTrackedQuestContexts");
static_assert(offsetof(QuestTrackerComponent_GetTrackedQuestContexts, OutContexts) == 0x000000, "Member 'QuestTrackerComponent_GetTrackedQuestContexts::OutContexts' has a wrong offset!");

// Function QuestFramework.QuestTrackerComponent.GetViewModel
// 0x0008 (0x0008 - 0x0000)
struct QuestTrackerComponent_GetViewModel final
{
public:
	class UQuestTrackerViewModel*                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestTrackerComponent_GetViewModel) == 0x000008, "Wrong alignment on QuestTrackerComponent_GetViewModel");
static_assert(sizeof(QuestTrackerComponent_GetViewModel) == 0x000008, "Wrong size on QuestTrackerComponent_GetViewModel");
static_assert(offsetof(QuestTrackerComponent_GetViewModel, ReturnValue) == 0x000000, "Member 'QuestTrackerComponent_GetViewModel::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestTrackerViewModel.GetTrackedQuestContexts
// 0x0010 (0x0010 - 0x0000)
struct QuestTrackerViewModel_GetTrackedQuestContexts final
{
public:
	TArray<class UQuestContextViewModel*>         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestTrackerViewModel_GetTrackedQuestContexts) == 0x000008, "Wrong alignment on QuestTrackerViewModel_GetTrackedQuestContexts");
static_assert(sizeof(QuestTrackerViewModel_GetTrackedQuestContexts) == 0x000010, "Wrong size on QuestTrackerViewModel_GetTrackedQuestContexts");
static_assert(offsetof(QuestTrackerViewModel_GetTrackedQuestContexts, ReturnValue) == 0x000000, "Member 'QuestTrackerViewModel_GetTrackedQuestContexts::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestUtilityLibrary.BroadcastQuestMessage
// 0x0038 (0x0038 - 0x0000)
struct QuestUtilityLibrary_BroadcastQuestMessage final
{
public:
	const class UObject*                          WorldContext;                                      // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           MessageTag;                                        // 0x0008(0x0008)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FQuestEventPayload                     Payload;                                           // 0x0010(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class AActor*                                 Sender;                                            // 0x0030(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestUtilityLibrary_BroadcastQuestMessage) == 0x000008, "Wrong alignment on QuestUtilityLibrary_BroadcastQuestMessage");
static_assert(sizeof(QuestUtilityLibrary_BroadcastQuestMessage) == 0x000038, "Wrong size on QuestUtilityLibrary_BroadcastQuestMessage");
static_assert(offsetof(QuestUtilityLibrary_BroadcastQuestMessage, WorldContext) == 0x000000, "Member 'QuestUtilityLibrary_BroadcastQuestMessage::WorldContext' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_BroadcastQuestMessage, MessageTag) == 0x000008, "Member 'QuestUtilityLibrary_BroadcastQuestMessage::MessageTag' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_BroadcastQuestMessage, Payload) == 0x000010, "Member 'QuestUtilityLibrary_BroadcastQuestMessage::Payload' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_BroadcastQuestMessage, Sender) == 0x000030, "Member 'QuestUtilityLibrary_BroadcastQuestMessage::Sender' has a wrong offset!");

// Function QuestFramework.QuestUtilityLibrary.ConvertQuestResultToBool
// 0x0006 (0x0006 - 0x0000)
struct QuestUtilityLibrary_ConvertQuestResultToBool final
{
public:
	EQuestResult                                  InResult;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          NotStarted;                                        // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          InProgress;                                        // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Completed;                                         // 0x0003(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Failed;                                            // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestUtilityLibrary_ConvertQuestResultToBool) == 0x000001, "Wrong alignment on QuestUtilityLibrary_ConvertQuestResultToBool");
static_assert(sizeof(QuestUtilityLibrary_ConvertQuestResultToBool) == 0x000006, "Wrong size on QuestUtilityLibrary_ConvertQuestResultToBool");
static_assert(offsetof(QuestUtilityLibrary_ConvertQuestResultToBool, InResult) == 0x000000, "Member 'QuestUtilityLibrary_ConvertQuestResultToBool::InResult' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_ConvertQuestResultToBool, NotStarted) == 0x000001, "Member 'QuestUtilityLibrary_ConvertQuestResultToBool::NotStarted' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_ConvertQuestResultToBool, InProgress) == 0x000002, "Member 'QuestUtilityLibrary_ConvertQuestResultToBool::InProgress' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_ConvertQuestResultToBool, Completed) == 0x000003, "Member 'QuestUtilityLibrary_ConvertQuestResultToBool::Completed' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_ConvertQuestResultToBool, Failed) == 0x000004, "Member 'QuestUtilityLibrary_ConvertQuestResultToBool::Failed' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_ConvertQuestResultToBool, ReturnValue) == 0x000005, "Member 'QuestUtilityLibrary_ConvertQuestResultToBool::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestUtilityLibrary.ConvertQuestResultToColor
// 0x0054 (0x0054 - 0x0000)
struct QuestUtilityLibrary_ConvertQuestResultToColor final
{
public:
	EQuestResult                                  InResult;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           NotStarted;                                        // 0x0004(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           InProgress;                                        // 0x0014(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Completed;                                         // 0x0024(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Failed;                                            // 0x0034(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           ReturnValue;                                       // 0x0044(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestUtilityLibrary_ConvertQuestResultToColor) == 0x000004, "Wrong alignment on QuestUtilityLibrary_ConvertQuestResultToColor");
static_assert(sizeof(QuestUtilityLibrary_ConvertQuestResultToColor) == 0x000054, "Wrong size on QuestUtilityLibrary_ConvertQuestResultToColor");
static_assert(offsetof(QuestUtilityLibrary_ConvertQuestResultToColor, InResult) == 0x000000, "Member 'QuestUtilityLibrary_ConvertQuestResultToColor::InResult' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_ConvertQuestResultToColor, NotStarted) == 0x000004, "Member 'QuestUtilityLibrary_ConvertQuestResultToColor::NotStarted' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_ConvertQuestResultToColor, InProgress) == 0x000014, "Member 'QuestUtilityLibrary_ConvertQuestResultToColor::InProgress' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_ConvertQuestResultToColor, Completed) == 0x000024, "Member 'QuestUtilityLibrary_ConvertQuestResultToColor::Completed' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_ConvertQuestResultToColor, Failed) == 0x000034, "Member 'QuestUtilityLibrary_ConvertQuestResultToColor::Failed' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_ConvertQuestResultToColor, ReturnValue) == 0x000044, "Member 'QuestUtilityLibrary_ConvertQuestResultToColor::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestUtilityLibrary.ConvertQuestResultToText
// 0x0080 (0x0080 - 0x0000)
struct QuestUtilityLibrary_ConvertQuestResultToText final
{
public:
	EQuestResult                                  InResult;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   NotStarted;                                        // 0x0008(0x0018)(Parm, NativeAccessSpecifierPublic)
	class FText                                   InProgress;                                        // 0x0020(0x0018)(Parm, NativeAccessSpecifierPublic)
	class FText                                   Completed;                                         // 0x0038(0x0018)(Parm, NativeAccessSpecifierPublic)
	class FText                                   Failed;                                            // 0x0050(0x0018)(Parm, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0068(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestUtilityLibrary_ConvertQuestResultToText) == 0x000008, "Wrong alignment on QuestUtilityLibrary_ConvertQuestResultToText");
static_assert(sizeof(QuestUtilityLibrary_ConvertQuestResultToText) == 0x000080, "Wrong size on QuestUtilityLibrary_ConvertQuestResultToText");
static_assert(offsetof(QuestUtilityLibrary_ConvertQuestResultToText, InResult) == 0x000000, "Member 'QuestUtilityLibrary_ConvertQuestResultToText::InResult' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_ConvertQuestResultToText, NotStarted) == 0x000008, "Member 'QuestUtilityLibrary_ConvertQuestResultToText::NotStarted' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_ConvertQuestResultToText, InProgress) == 0x000020, "Member 'QuestUtilityLibrary_ConvertQuestResultToText::InProgress' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_ConvertQuestResultToText, Completed) == 0x000038, "Member 'QuestUtilityLibrary_ConvertQuestResultToText::Completed' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_ConvertQuestResultToText, Failed) == 0x000050, "Member 'QuestUtilityLibrary_ConvertQuestResultToText::Failed' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_ConvertQuestResultToText, ReturnValue) == 0x000068, "Member 'QuestUtilityLibrary_ConvertQuestResultToText::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestUtilityLibrary.FilterChangedObjectiveViewModels
// 0x0040 (0x0040 - 0x0000)
struct QuestUtilityLibrary_FilterChangedObjectiveViewModels final
{
public:
	TArray<class UQuestObjectiveViewModel*>       OldList;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class UQuestObjectiveViewModel*>       NewList;                                           // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class UQuestObjectiveViewModel*>       OutAdded;                                          // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UQuestObjectiveViewModel*>       OutRemoved;                                        // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestUtilityLibrary_FilterChangedObjectiveViewModels) == 0x000008, "Wrong alignment on QuestUtilityLibrary_FilterChangedObjectiveViewModels");
static_assert(sizeof(QuestUtilityLibrary_FilterChangedObjectiveViewModels) == 0x000040, "Wrong size on QuestUtilityLibrary_FilterChangedObjectiveViewModels");
static_assert(offsetof(QuestUtilityLibrary_FilterChangedObjectiveViewModels, OldList) == 0x000000, "Member 'QuestUtilityLibrary_FilterChangedObjectiveViewModels::OldList' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_FilterChangedObjectiveViewModels, NewList) == 0x000010, "Member 'QuestUtilityLibrary_FilterChangedObjectiveViewModels::NewList' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_FilterChangedObjectiveViewModels, OutAdded) == 0x000020, "Member 'QuestUtilityLibrary_FilterChangedObjectiveViewModels::OutAdded' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_FilterChangedObjectiveViewModels, OutRemoved) == 0x000030, "Member 'QuestUtilityLibrary_FilterChangedObjectiveViewModels::OutRemoved' has a wrong offset!");

// Function QuestFramework.QuestUtilityLibrary.FilterChangedQuestContextViewModels
// 0x0040 (0x0040 - 0x0000)
struct QuestUtilityLibrary_FilterChangedQuestContextViewModels final
{
public:
	TArray<class UQuestContextViewModel*>         OldList;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class UQuestContextViewModel*>         NewList;                                           // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class UQuestContextViewModel*>         OutAdded;                                          // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UQuestContextViewModel*>         OutRemoved;                                        // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestUtilityLibrary_FilterChangedQuestContextViewModels) == 0x000008, "Wrong alignment on QuestUtilityLibrary_FilterChangedQuestContextViewModels");
static_assert(sizeof(QuestUtilityLibrary_FilterChangedQuestContextViewModels) == 0x000040, "Wrong size on QuestUtilityLibrary_FilterChangedQuestContextViewModels");
static_assert(offsetof(QuestUtilityLibrary_FilterChangedQuestContextViewModels, OldList) == 0x000000, "Member 'QuestUtilityLibrary_FilterChangedQuestContextViewModels::OldList' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_FilterChangedQuestContextViewModels, NewList) == 0x000010, "Member 'QuestUtilityLibrary_FilterChangedQuestContextViewModels::NewList' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_FilterChangedQuestContextViewModels, OutAdded) == 0x000020, "Member 'QuestUtilityLibrary_FilterChangedQuestContextViewModels::OutAdded' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_FilterChangedQuestContextViewModels, OutRemoved) == 0x000030, "Member 'QuestUtilityLibrary_FilterChangedQuestContextViewModels::OutRemoved' has a wrong offset!");

// Function QuestFramework.QuestUtilityLibrary.FindRelevantQuestComponentFromActor
// 0x0010 (0x0010 - 0x0000)
struct QuestUtilityLibrary_FindRelevantQuestComponentFromActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UQuestComponent*                        ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestUtilityLibrary_FindRelevantQuestComponentFromActor) == 0x000008, "Wrong alignment on QuestUtilityLibrary_FindRelevantQuestComponentFromActor");
static_assert(sizeof(QuestUtilityLibrary_FindRelevantQuestComponentFromActor) == 0x000010, "Wrong size on QuestUtilityLibrary_FindRelevantQuestComponentFromActor");
static_assert(offsetof(QuestUtilityLibrary_FindRelevantQuestComponentFromActor, Actor) == 0x000000, "Member 'QuestUtilityLibrary_FindRelevantQuestComponentFromActor::Actor' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_FindRelevantQuestComponentFromActor, ReturnValue) == 0x000008, "Member 'QuestUtilityLibrary_FindRelevantQuestComponentFromActor::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestUtilityLibrary.FormatQuestText
// 0x0048 (0x0048 - 0x0000)
struct QuestUtilityLibrary_FormatQuestText final
{
public:
	struct FQuestText                             Text;                                              // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UQuestContext*                          Context;                                           // 0x0028(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0030(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestUtilityLibrary_FormatQuestText) == 0x000008, "Wrong alignment on QuestUtilityLibrary_FormatQuestText");
static_assert(sizeof(QuestUtilityLibrary_FormatQuestText) == 0x000048, "Wrong size on QuestUtilityLibrary_FormatQuestText");
static_assert(offsetof(QuestUtilityLibrary_FormatQuestText, Text) == 0x000000, "Member 'QuestUtilityLibrary_FormatQuestText::Text' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_FormatQuestText, Context) == 0x000028, "Member 'QuestUtilityLibrary_FormatQuestText::Context' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_FormatQuestText, ReturnValue) == 0x000030, "Member 'QuestUtilityLibrary_FormatQuestText::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestUtilityLibrary.GetGameModeQuestComponent
// 0x0010 (0x0010 - 0x0000)
struct QuestUtilityLibrary_GetGameModeQuestComponent final
{
public:
	const class UObject*                          WorldContext;                                      // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UQuestComponent*                        ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestUtilityLibrary_GetGameModeQuestComponent) == 0x000008, "Wrong alignment on QuestUtilityLibrary_GetGameModeQuestComponent");
static_assert(sizeof(QuestUtilityLibrary_GetGameModeQuestComponent) == 0x000010, "Wrong size on QuestUtilityLibrary_GetGameModeQuestComponent");
static_assert(offsetof(QuestUtilityLibrary_GetGameModeQuestComponent, WorldContext) == 0x000000, "Member 'QuestUtilityLibrary_GetGameModeQuestComponent::WorldContext' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_GetGameModeQuestComponent, ReturnValue) == 0x000008, "Member 'QuestUtilityLibrary_GetGameModeQuestComponent::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestUtilityLibrary.GetGameStateQuestComponent
// 0x0010 (0x0010 - 0x0000)
struct QuestUtilityLibrary_GetGameStateQuestComponent final
{
public:
	const class UObject*                          WorldContext;                                      // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UQuestComponent*                        ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestUtilityLibrary_GetGameStateQuestComponent) == 0x000008, "Wrong alignment on QuestUtilityLibrary_GetGameStateQuestComponent");
static_assert(sizeof(QuestUtilityLibrary_GetGameStateQuestComponent) == 0x000010, "Wrong size on QuestUtilityLibrary_GetGameStateQuestComponent");
static_assert(offsetof(QuestUtilityLibrary_GetGameStateQuestComponent, WorldContext) == 0x000000, "Member 'QuestUtilityLibrary_GetGameStateQuestComponent::WorldContext' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_GetGameStateQuestComponent, ReturnValue) == 0x000008, "Member 'QuestUtilityLibrary_GetGameStateQuestComponent::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestUtilityLibrary.GetPlayerQuestComponent
// 0x0010 (0x0010 - 0x0000)
struct QuestUtilityLibrary_GetPlayerQuestComponent final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UQuestComponent*                        ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestUtilityLibrary_GetPlayerQuestComponent) == 0x000008, "Wrong alignment on QuestUtilityLibrary_GetPlayerQuestComponent");
static_assert(sizeof(QuestUtilityLibrary_GetPlayerQuestComponent) == 0x000010, "Wrong size on QuestUtilityLibrary_GetPlayerQuestComponent");
static_assert(offsetof(QuestUtilityLibrary_GetPlayerQuestComponent, PlayerController) == 0x000000, "Member 'QuestUtilityLibrary_GetPlayerQuestComponent::PlayerController' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_GetPlayerQuestComponent, ReturnValue) == 0x000008, "Member 'QuestUtilityLibrary_GetPlayerQuestComponent::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestUtilityLibrary.GetPlayerQuestListViewModel
// 0x0010 (0x0010 - 0x0000)
struct QuestUtilityLibrary_GetPlayerQuestListViewModel final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UQuestListViewModel*                    ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestUtilityLibrary_GetPlayerQuestListViewModel) == 0x000008, "Wrong alignment on QuestUtilityLibrary_GetPlayerQuestListViewModel");
static_assert(sizeof(QuestUtilityLibrary_GetPlayerQuestListViewModel) == 0x000010, "Wrong size on QuestUtilityLibrary_GetPlayerQuestListViewModel");
static_assert(offsetof(QuestUtilityLibrary_GetPlayerQuestListViewModel, PlayerController) == 0x000000, "Member 'QuestUtilityLibrary_GetPlayerQuestListViewModel::PlayerController' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_GetPlayerQuestListViewModel, ReturnValue) == 0x000008, "Member 'QuestUtilityLibrary_GetPlayerQuestListViewModel::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestUtilityLibrary.GetPlayerQuestTrackerComponent
// 0x0010 (0x0010 - 0x0000)
struct QuestUtilityLibrary_GetPlayerQuestTrackerComponent final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UQuestTrackerComponent*                 ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestUtilityLibrary_GetPlayerQuestTrackerComponent) == 0x000008, "Wrong alignment on QuestUtilityLibrary_GetPlayerQuestTrackerComponent");
static_assert(sizeof(QuestUtilityLibrary_GetPlayerQuestTrackerComponent) == 0x000010, "Wrong size on QuestUtilityLibrary_GetPlayerQuestTrackerComponent");
static_assert(offsetof(QuestUtilityLibrary_GetPlayerQuestTrackerComponent, PlayerController) == 0x000000, "Member 'QuestUtilityLibrary_GetPlayerQuestTrackerComponent::PlayerController' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_GetPlayerQuestTrackerComponent, ReturnValue) == 0x000008, "Member 'QuestUtilityLibrary_GetPlayerQuestTrackerComponent::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestUtilityLibrary.GetPlayerQuestTrackerViewModel
// 0x0010 (0x0010 - 0x0000)
struct QuestUtilityLibrary_GetPlayerQuestTrackerViewModel final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UQuestTrackerViewModel*                 ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestUtilityLibrary_GetPlayerQuestTrackerViewModel) == 0x000008, "Wrong alignment on QuestUtilityLibrary_GetPlayerQuestTrackerViewModel");
static_assert(sizeof(QuestUtilityLibrary_GetPlayerQuestTrackerViewModel) == 0x000010, "Wrong size on QuestUtilityLibrary_GetPlayerQuestTrackerViewModel");
static_assert(offsetof(QuestUtilityLibrary_GetPlayerQuestTrackerViewModel, PlayerController) == 0x000000, "Member 'QuestUtilityLibrary_GetPlayerQuestTrackerViewModel::PlayerController' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_GetPlayerQuestTrackerViewModel, ReturnValue) == 0x000008, "Member 'QuestUtilityLibrary_GetPlayerQuestTrackerViewModel::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestUtilityLibrary.GetQuestComponentFromActor
// 0x0018 (0x0018 - 0x0000)
struct QuestUtilityLibrary_GetQuestComponentFromActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLookForComponent;                                 // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuestComponent*                        ReturnValue;                                       // 0x0010(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestUtilityLibrary_GetQuestComponentFromActor) == 0x000008, "Wrong alignment on QuestUtilityLibrary_GetQuestComponentFromActor");
static_assert(sizeof(QuestUtilityLibrary_GetQuestComponentFromActor) == 0x000018, "Wrong size on QuestUtilityLibrary_GetQuestComponentFromActor");
static_assert(offsetof(QuestUtilityLibrary_GetQuestComponentFromActor, Actor) == 0x000000, "Member 'QuestUtilityLibrary_GetQuestComponentFromActor::Actor' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_GetQuestComponentFromActor, bLookForComponent) == 0x000008, "Member 'QuestUtilityLibrary_GetQuestComponentFromActor::bLookForComponent' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_GetQuestComponentFromActor, ReturnValue) == 0x000010, "Member 'QuestUtilityLibrary_GetQuestComponentFromActor::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestUtilityLibrary.GetQuestTrackerComponentFromActor
// 0x0018 (0x0018 - 0x0000)
struct QuestUtilityLibrary_GetQuestTrackerComponentFromActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLookForComponent;                                 // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuestTrackerComponent*                 ReturnValue;                                       // 0x0010(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestUtilityLibrary_GetQuestTrackerComponentFromActor) == 0x000008, "Wrong alignment on QuestUtilityLibrary_GetQuestTrackerComponentFromActor");
static_assert(sizeof(QuestUtilityLibrary_GetQuestTrackerComponentFromActor) == 0x000018, "Wrong size on QuestUtilityLibrary_GetQuestTrackerComponentFromActor");
static_assert(offsetof(QuestUtilityLibrary_GetQuestTrackerComponentFromActor, Actor) == 0x000000, "Member 'QuestUtilityLibrary_GetQuestTrackerComponentFromActor::Actor' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_GetQuestTrackerComponentFromActor, bLookForComponent) == 0x000008, "Member 'QuestUtilityLibrary_GetQuestTrackerComponentFromActor::bLookForComponent' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_GetQuestTrackerComponentFromActor, ReturnValue) == 0x000010, "Member 'QuestUtilityLibrary_GetQuestTrackerComponentFromActor::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestUtilityLibrary.GetQuestVariableValueAsBool
// 0x0018 (0x0018 - 0x0000)
struct QuestUtilityLibrary_GetQuestVariableValueAsBool final
{
public:
	class UQuestContext*                          Context;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FQuestVariable                         Variable;                                          // 0x0008(0x000C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(QuestUtilityLibrary_GetQuestVariableValueAsBool) == 0x000008, "Wrong alignment on QuestUtilityLibrary_GetQuestVariableValueAsBool");
static_assert(sizeof(QuestUtilityLibrary_GetQuestVariableValueAsBool) == 0x000018, "Wrong size on QuestUtilityLibrary_GetQuestVariableValueAsBool");
static_assert(offsetof(QuestUtilityLibrary_GetQuestVariableValueAsBool, Context) == 0x000000, "Member 'QuestUtilityLibrary_GetQuestVariableValueAsBool::Context' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_GetQuestVariableValueAsBool, Variable) == 0x000008, "Member 'QuestUtilityLibrary_GetQuestVariableValueAsBool::Variable' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_GetQuestVariableValueAsBool, ReturnValue) == 0x000014, "Member 'QuestUtilityLibrary_GetQuestVariableValueAsBool::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestUtilityLibrary.GetQuestVariableValueAsFloat
// 0x0018 (0x0018 - 0x0000)
struct QuestUtilityLibrary_GetQuestVariableValueAsFloat final
{
public:
	class UQuestContext*                          Context;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FQuestVariable                         Variable;                                          // 0x0008(0x000C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestUtilityLibrary_GetQuestVariableValueAsFloat) == 0x000008, "Wrong alignment on QuestUtilityLibrary_GetQuestVariableValueAsFloat");
static_assert(sizeof(QuestUtilityLibrary_GetQuestVariableValueAsFloat) == 0x000018, "Wrong size on QuestUtilityLibrary_GetQuestVariableValueAsFloat");
static_assert(offsetof(QuestUtilityLibrary_GetQuestVariableValueAsFloat, Context) == 0x000000, "Member 'QuestUtilityLibrary_GetQuestVariableValueAsFloat::Context' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_GetQuestVariableValueAsFloat, Variable) == 0x000008, "Member 'QuestUtilityLibrary_GetQuestVariableValueAsFloat::Variable' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_GetQuestVariableValueAsFloat, ReturnValue) == 0x000014, "Member 'QuestUtilityLibrary_GetQuestVariableValueAsFloat::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestUtilityLibrary.GetQuestVariableValueAsInteger
// 0x0018 (0x0018 - 0x0000)
struct QuestUtilityLibrary_GetQuestVariableValueAsInteger final
{
public:
	class UQuestContext*                          Context;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FQuestVariable                         Variable;                                          // 0x0008(0x000C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestUtilityLibrary_GetQuestVariableValueAsInteger) == 0x000008, "Wrong alignment on QuestUtilityLibrary_GetQuestVariableValueAsInteger");
static_assert(sizeof(QuestUtilityLibrary_GetQuestVariableValueAsInteger) == 0x000018, "Wrong size on QuestUtilityLibrary_GetQuestVariableValueAsInteger");
static_assert(offsetof(QuestUtilityLibrary_GetQuestVariableValueAsInteger, Context) == 0x000000, "Member 'QuestUtilityLibrary_GetQuestVariableValueAsInteger::Context' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_GetQuestVariableValueAsInteger, Variable) == 0x000008, "Member 'QuestUtilityLibrary_GetQuestVariableValueAsInteger::Variable' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_GetQuestVariableValueAsInteger, ReturnValue) == 0x000014, "Member 'QuestUtilityLibrary_GetQuestVariableValueAsInteger::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestUtilityLibrary.GetSharedQuestComponent
// 0x0010 (0x0010 - 0x0000)
struct QuestUtilityLibrary_GetSharedQuestComponent final
{
public:
	const class UObject*                          WorldContext;                                      // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UQuestComponent*                        ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestUtilityLibrary_GetSharedQuestComponent) == 0x000008, "Wrong alignment on QuestUtilityLibrary_GetSharedQuestComponent");
static_assert(sizeof(QuestUtilityLibrary_GetSharedQuestComponent) == 0x000010, "Wrong size on QuestUtilityLibrary_GetSharedQuestComponent");
static_assert(offsetof(QuestUtilityLibrary_GetSharedQuestComponent, WorldContext) == 0x000000, "Member 'QuestUtilityLibrary_GetSharedQuestComponent::WorldContext' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_GetSharedQuestComponent, ReturnValue) == 0x000008, "Member 'QuestUtilityLibrary_GetSharedQuestComponent::ReturnValue' has a wrong offset!");

// Function QuestFramework.QuestUtilityLibrary.SendQuestMessage
// 0x0040 (0x0040 - 0x0000)
struct QuestUtilityLibrary_SendQuestMessage final
{
public:
	const class UObject*                          WorldContext;                                      // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           MessageTag;                                        // 0x0008(0x0008)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FQuestEventPayload                     Payload;                                           // 0x0010(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class AActor*                                 Recipient;                                         // 0x0030(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 Sender;                                            // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestUtilityLibrary_SendQuestMessage) == 0x000008, "Wrong alignment on QuestUtilityLibrary_SendQuestMessage");
static_assert(sizeof(QuestUtilityLibrary_SendQuestMessage) == 0x000040, "Wrong size on QuestUtilityLibrary_SendQuestMessage");
static_assert(offsetof(QuestUtilityLibrary_SendQuestMessage, WorldContext) == 0x000000, "Member 'QuestUtilityLibrary_SendQuestMessage::WorldContext' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_SendQuestMessage, MessageTag) == 0x000008, "Member 'QuestUtilityLibrary_SendQuestMessage::MessageTag' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_SendQuestMessage, Payload) == 0x000010, "Member 'QuestUtilityLibrary_SendQuestMessage::Payload' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_SendQuestMessage, Recipient) == 0x000030, "Member 'QuestUtilityLibrary_SendQuestMessage::Recipient' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_SendQuestMessage, Sender) == 0x000038, "Member 'QuestUtilityLibrary_SendQuestMessage::Sender' has a wrong offset!");

// Function QuestFramework.QuestUtilityLibrary.SetQuestVariableAsBool
// 0x0018 (0x0018 - 0x0000)
struct QuestUtilityLibrary_SetQuestVariableAsBool final
{
public:
	class UQuestContext*                          Context;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FQuestVariable                         Variable;                                          // 0x0008(0x000C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          NewValue;                                          // 0x0014(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(QuestUtilityLibrary_SetQuestVariableAsBool) == 0x000008, "Wrong alignment on QuestUtilityLibrary_SetQuestVariableAsBool");
static_assert(sizeof(QuestUtilityLibrary_SetQuestVariableAsBool) == 0x000018, "Wrong size on QuestUtilityLibrary_SetQuestVariableAsBool");
static_assert(offsetof(QuestUtilityLibrary_SetQuestVariableAsBool, Context) == 0x000000, "Member 'QuestUtilityLibrary_SetQuestVariableAsBool::Context' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_SetQuestVariableAsBool, Variable) == 0x000008, "Member 'QuestUtilityLibrary_SetQuestVariableAsBool::Variable' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_SetQuestVariableAsBool, NewValue) == 0x000014, "Member 'QuestUtilityLibrary_SetQuestVariableAsBool::NewValue' has a wrong offset!");

// Function QuestFramework.QuestUtilityLibrary.SetQuestVariableAsFloat
// 0x0018 (0x0018 - 0x0000)
struct QuestUtilityLibrary_SetQuestVariableAsFloat final
{
public:
	class UQuestContext*                          Context;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FQuestVariable                         Variable;                                          // 0x0008(0x000C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	float                                         NewValue;                                          // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestUtilityLibrary_SetQuestVariableAsFloat) == 0x000008, "Wrong alignment on QuestUtilityLibrary_SetQuestVariableAsFloat");
static_assert(sizeof(QuestUtilityLibrary_SetQuestVariableAsFloat) == 0x000018, "Wrong size on QuestUtilityLibrary_SetQuestVariableAsFloat");
static_assert(offsetof(QuestUtilityLibrary_SetQuestVariableAsFloat, Context) == 0x000000, "Member 'QuestUtilityLibrary_SetQuestVariableAsFloat::Context' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_SetQuestVariableAsFloat, Variable) == 0x000008, "Member 'QuestUtilityLibrary_SetQuestVariableAsFloat::Variable' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_SetQuestVariableAsFloat, NewValue) == 0x000014, "Member 'QuestUtilityLibrary_SetQuestVariableAsFloat::NewValue' has a wrong offset!");

// Function QuestFramework.QuestUtilityLibrary.SetQuestVariableAsInteger
// 0x0018 (0x0018 - 0x0000)
struct QuestUtilityLibrary_SetQuestVariableAsInteger final
{
public:
	class UQuestContext*                          Context;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FQuestVariable                         Variable;                                          // 0x0008(0x000C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         NewValue;                                          // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuestUtilityLibrary_SetQuestVariableAsInteger) == 0x000008, "Wrong alignment on QuestUtilityLibrary_SetQuestVariableAsInteger");
static_assert(sizeof(QuestUtilityLibrary_SetQuestVariableAsInteger) == 0x000018, "Wrong size on QuestUtilityLibrary_SetQuestVariableAsInteger");
static_assert(offsetof(QuestUtilityLibrary_SetQuestVariableAsInteger, Context) == 0x000000, "Member 'QuestUtilityLibrary_SetQuestVariableAsInteger::Context' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_SetQuestVariableAsInteger, Variable) == 0x000008, "Member 'QuestUtilityLibrary_SetQuestVariableAsInteger::Variable' has a wrong offset!");
static_assert(offsetof(QuestUtilityLibrary_SetQuestVariableAsInteger, NewValue) == 0x000014, "Member 'QuestUtilityLibrary_SetQuestVariableAsInteger::NewValue' has a wrong offset!");

}

