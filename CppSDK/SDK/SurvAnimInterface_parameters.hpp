#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SurvAnimInterface

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "S_WeaponGripType_structs.hpp"
#include "S_EatConfiguration_structs.hpp"
#include "S_PlayerWeaponAnim_structs.hpp"
#include "CarTipe_structs.hpp"


namespace SDK::Params
{

// Function SurvAnimInterface.SurvAnimInterface_C.GetDriving
// 0x0001 (0x0001 - 0x0000)
struct SurvAnimInterface_C_GetDriving final
{
public:
	bool                                          IsDriving;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurvAnimInterface_C_GetDriving) == 0x000001, "Wrong alignment on SurvAnimInterface_C_GetDriving");
static_assert(sizeof(SurvAnimInterface_C_GetDriving) == 0x000001, "Wrong size on SurvAnimInterface_C_GetDriving");
static_assert(offsetof(SurvAnimInterface_C_GetDriving, IsDriving) == 0x000000, "Member 'SurvAnimInterface_C_GetDriving::IsDriving' has a wrong offset!");

// Function SurvAnimInterface.SurvAnimInterface_C.GetFireSprayOffset
// 0x0008 (0x0008 - 0x0000)
struct SurvAnimInterface_C_GetFireSprayOffset final
{
public:
	double                                        SprayOffset;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurvAnimInterface_C_GetFireSprayOffset) == 0x000008, "Wrong alignment on SurvAnimInterface_C_GetFireSprayOffset");
static_assert(sizeof(SurvAnimInterface_C_GetFireSprayOffset) == 0x000008, "Wrong size on SurvAnimInterface_C_GetFireSprayOffset");
static_assert(offsetof(SurvAnimInterface_C_GetFireSprayOffset, SprayOffset) == 0x000000, "Member 'SurvAnimInterface_C_GetFireSprayOffset::SprayOffset' has a wrong offset!");

// Function SurvAnimInterface.SurvAnimInterface_C.GetFPPTacticalGripOffset
// 0x0060 (0x0060 - 0x0000)
struct SurvAnimInterface_C_GetFPPTacticalGripOffset final
{
public:
	struct FTransform                             GripOffset;                                        // 0x0000(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurvAnimInterface_C_GetFPPTacticalGripOffset) == 0x000010, "Wrong alignment on SurvAnimInterface_C_GetFPPTacticalGripOffset");
static_assert(sizeof(SurvAnimInterface_C_GetFPPTacticalGripOffset) == 0x000060, "Wrong size on SurvAnimInterface_C_GetFPPTacticalGripOffset");
static_assert(offsetof(SurvAnimInterface_C_GetFPPTacticalGripOffset, GripOffset) == 0x000000, "Member 'SurvAnimInterface_C_GetFPPTacticalGripOffset::GripOffset' has a wrong offset!");

// Function SurvAnimInterface.SurvAnimInterface_C.GetInteractAnim
// 0x0008 (0x0008 - 0x0000)
struct SurvAnimInterface_C_GetInteractAnim final
{
public:
	class UAnimSequence*                          Sequence;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurvAnimInterface_C_GetInteractAnim) == 0x000008, "Wrong alignment on SurvAnimInterface_C_GetInteractAnim");
static_assert(sizeof(SurvAnimInterface_C_GetInteractAnim) == 0x000008, "Wrong size on SurvAnimInterface_C_GetInteractAnim");
static_assert(offsetof(SurvAnimInterface_C_GetInteractAnim, Sequence) == 0x000000, "Member 'SurvAnimInterface_C_GetInteractAnim::Sequence' has a wrong offset!");

// Function SurvAnimInterface.SurvAnimInterface_C.GetInventoryLayerState
// 0x0001 (0x0001 - 0x0000)
struct SurvAnimInterface_C_GetInventoryLayerState final
{
public:
	bool                                          Active_;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurvAnimInterface_C_GetInventoryLayerState) == 0x000001, "Wrong alignment on SurvAnimInterface_C_GetInventoryLayerState");
static_assert(sizeof(SurvAnimInterface_C_GetInventoryLayerState) == 0x000001, "Wrong size on SurvAnimInterface_C_GetInventoryLayerState");
static_assert(offsetof(SurvAnimInterface_C_GetInventoryLayerState, Active_) == 0x000000, "Member 'SurvAnimInterface_C_GetInventoryLayerState::Active_' has a wrong offset!");

// Function SurvAnimInterface.SurvAnimInterface_C.GetKneltTime
// 0x0008 (0x0008 - 0x0000)
struct SurvAnimInterface_C_GetKneltTime final
{
public:
	double                                        Time;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurvAnimInterface_C_GetKneltTime) == 0x000008, "Wrong alignment on SurvAnimInterface_C_GetKneltTime");
static_assert(sizeof(SurvAnimInterface_C_GetKneltTime) == 0x000008, "Wrong size on SurvAnimInterface_C_GetKneltTime");
static_assert(offsetof(SurvAnimInterface_C_GetKneltTime, Time) == 0x000000, "Member 'SurvAnimInterface_C_GetKneltTime::Time' has a wrong offset!");

// Function SurvAnimInterface.SurvAnimInterface_C.GetTacticalGripOffset
// 0x0060 (0x0060 - 0x0000)
struct SurvAnimInterface_C_GetTacticalGripOffset final
{
public:
	struct FTransform                             GripOffset;                                        // 0x0000(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurvAnimInterface_C_GetTacticalGripOffset) == 0x000010, "Wrong alignment on SurvAnimInterface_C_GetTacticalGripOffset");
static_assert(sizeof(SurvAnimInterface_C_GetTacticalGripOffset) == 0x000060, "Wrong size on SurvAnimInterface_C_GetTacticalGripOffset");
static_assert(offsetof(SurvAnimInterface_C_GetTacticalGripOffset, GripOffset) == 0x000000, "Member 'SurvAnimInterface_C_GetTacticalGripOffset::GripOffset' has a wrong offset!");

// Function SurvAnimInterface.SurvAnimInterface_C.GetTacticalGripPoses
// 0x0190 (0x0190 - 0x0000)
struct SurvAnimInterface_C_GetTacticalGripPoses final
{
public:
	struct FS_WeaponGripType                      GripPoses;                                         // 0x0000(0x0190)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(SurvAnimInterface_C_GetTacticalGripPoses) == 0x000008, "Wrong alignment on SurvAnimInterface_C_GetTacticalGripPoses");
static_assert(sizeof(SurvAnimInterface_C_GetTacticalGripPoses) == 0x000190, "Wrong size on SurvAnimInterface_C_GetTacticalGripPoses");
static_assert(offsetof(SurvAnimInterface_C_GetTacticalGripPoses, GripPoses) == 0x000000, "Member 'SurvAnimInterface_C_GetTacticalGripPoses::GripPoses' has a wrong offset!");

// Function SurvAnimInterface.SurvAnimInterface_C.InFlatSurface
// 0x0001 (0x0001 - 0x0000)
struct SurvAnimInterface_C_InFlatSurface final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurvAnimInterface_C_InFlatSurface) == 0x000001, "Wrong alignment on SurvAnimInterface_C_InFlatSurface");
static_assert(sizeof(SurvAnimInterface_C_InFlatSurface) == 0x000001, "Wrong size on SurvAnimInterface_C_InFlatSurface");
static_assert(offsetof(SurvAnimInterface_C_InFlatSurface, Return) == 0x000000, "Member 'SurvAnimInterface_C_InFlatSurface::Return' has a wrong offset!");

// Function SurvAnimInterface.SurvAnimInterface_C.IsInTurn
// 0x0001 (0x0001 - 0x0000)
struct SurvAnimInterface_C_IsInTurn final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurvAnimInterface_C_IsInTurn) == 0x000001, "Wrong alignment on SurvAnimInterface_C_IsInTurn");
static_assert(sizeof(SurvAnimInterface_C_IsInTurn) == 0x000001, "Wrong size on SurvAnimInterface_C_IsInTurn");
static_assert(offsetof(SurvAnimInterface_C_IsInTurn, Return) == 0x000000, "Member 'SurvAnimInterface_C_IsInTurn::Return' has a wrong offset!");

// Function SurvAnimInterface.SurvAnimInterface_C.IsJumpPrepare
// 0x0001 (0x0001 - 0x0000)
struct SurvAnimInterface_C_IsJumpPrepare final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurvAnimInterface_C_IsJumpPrepare) == 0x000001, "Wrong alignment on SurvAnimInterface_C_IsJumpPrepare");
static_assert(sizeof(SurvAnimInterface_C_IsJumpPrepare) == 0x000001, "Wrong size on SurvAnimInterface_C_IsJumpPrepare");
static_assert(offsetof(SurvAnimInterface_C_IsJumpPrepare, Return) == 0x000000, "Member 'SurvAnimInterface_C_IsJumpPrepare::Return' has a wrong offset!");

// Function SurvAnimInterface.SurvAnimInterface_C.IsReloading
// 0x0001 (0x0001 - 0x0000)
struct SurvAnimInterface_C_IsReloading final
{
public:
	bool                                          Param_IsReloading;                                 // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurvAnimInterface_C_IsReloading) == 0x000001, "Wrong alignment on SurvAnimInterface_C_IsReloading");
static_assert(sizeof(SurvAnimInterface_C_IsReloading) == 0x000001, "Wrong size on SurvAnimInterface_C_IsReloading");
static_assert(offsetof(SurvAnimInterface_C_IsReloading, Param_IsReloading) == 0x000000, "Member 'SurvAnimInterface_C_IsReloading::Param_IsReloading' has a wrong offset!");

// Function SurvAnimInterface.SurvAnimInterface_C.IsRootRotation
// 0x0001 (0x0001 - 0x0000)
struct SurvAnimInterface_C_IsRootRotation final
{
public:
	bool                                          RM;                                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurvAnimInterface_C_IsRootRotation) == 0x000001, "Wrong alignment on SurvAnimInterface_C_IsRootRotation");
static_assert(sizeof(SurvAnimInterface_C_IsRootRotation) == 0x000001, "Wrong size on SurvAnimInterface_C_IsRootRotation");
static_assert(offsetof(SurvAnimInterface_C_IsRootRotation, RM) == 0x000000, "Member 'SurvAnimInterface_C_IsRootRotation::RM' has a wrong offset!");

// Function SurvAnimInterface.SurvAnimInterface_C.IsSpineMontage
// 0x0001 (0x0001 - 0x0000)
struct SurvAnimInterface_C_IsSpineMontage final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurvAnimInterface_C_IsSpineMontage) == 0x000001, "Wrong alignment on SurvAnimInterface_C_IsSpineMontage");
static_assert(sizeof(SurvAnimInterface_C_IsSpineMontage) == 0x000001, "Wrong size on SurvAnimInterface_C_IsSpineMontage");
static_assert(offsetof(SurvAnimInterface_C_IsSpineMontage, Return) == 0x000000, "Member 'SurvAnimInterface_C_IsSpineMontage::Return' has a wrong offset!");

// Function SurvAnimInterface.SurvAnimInterface_C.SetDriving
// 0x000C (0x000C - 0x0000)
struct SurvAnimInterface_C_SetDriving final
{
public:
	bool                                          InCar;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Driver;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarTipe                                      CarTipe;                                           // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SitIndex;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Nothing;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurvAnimInterface_C_SetDriving) == 0x000004, "Wrong alignment on SurvAnimInterface_C_SetDriving");
static_assert(sizeof(SurvAnimInterface_C_SetDriving) == 0x00000C, "Wrong size on SurvAnimInterface_C_SetDriving");
static_assert(offsetof(SurvAnimInterface_C_SetDriving, InCar) == 0x000000, "Member 'SurvAnimInterface_C_SetDriving::InCar' has a wrong offset!");
static_assert(offsetof(SurvAnimInterface_C_SetDriving, Driver) == 0x000001, "Member 'SurvAnimInterface_C_SetDriving::Driver' has a wrong offset!");
static_assert(offsetof(SurvAnimInterface_C_SetDriving, CarTipe) == 0x000002, "Member 'SurvAnimInterface_C_SetDriving::CarTipe' has a wrong offset!");
static_assert(offsetof(SurvAnimInterface_C_SetDriving, SitIndex) == 0x000004, "Member 'SurvAnimInterface_C_SetDriving::SitIndex' has a wrong offset!");
static_assert(offsetof(SurvAnimInterface_C_SetDriving, Nothing) == 0x000008, "Member 'SurvAnimInterface_C_SetDriving::Nothing' has a wrong offset!");

// Function SurvAnimInterface.SurvAnimInterface_C.SetFireSprayOffset
// 0x0008 (0x0008 - 0x0000)
struct SurvAnimInterface_C_SetFireSprayOffset final
{
public:
	double                                        SprayOffset;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurvAnimInterface_C_SetFireSprayOffset) == 0x000008, "Wrong alignment on SurvAnimInterface_C_SetFireSprayOffset");
static_assert(sizeof(SurvAnimInterface_C_SetFireSprayOffset) == 0x000008, "Wrong size on SurvAnimInterface_C_SetFireSprayOffset");
static_assert(offsetof(SurvAnimInterface_C_SetFireSprayOffset, SprayOffset) == 0x000000, "Member 'SurvAnimInterface_C_SetFireSprayOffset::SprayOffset' has a wrong offset!");

// Function SurvAnimInterface.SurvAnimInterface_C.SetJumpPrepare
// 0x0002 (0x0002 - 0x0000)
struct SurvAnimInterface_C_SetJumpPrepare final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Nothing;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurvAnimInterface_C_SetJumpPrepare) == 0x000001, "Wrong alignment on SurvAnimInterface_C_SetJumpPrepare");
static_assert(sizeof(SurvAnimInterface_C_SetJumpPrepare) == 0x000002, "Wrong size on SurvAnimInterface_C_SetJumpPrepare");
static_assert(offsetof(SurvAnimInterface_C_SetJumpPrepare, Value) == 0x000000, "Member 'SurvAnimInterface_C_SetJumpPrepare::Value' has a wrong offset!");
static_assert(offsetof(SurvAnimInterface_C_SetJumpPrepare, Nothing) == 0x000001, "Member 'SurvAnimInterface_C_SetJumpPrepare::Nothing' has a wrong offset!");

// Function SurvAnimInterface.SurvAnimInterface_C.SetLeftHandVariant
// 0x0010 (0x0010 - 0x0000)
struct SurvAnimInterface_C_SetLeftHandVariant final
{
public:
	double                                        Variant;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurvAnimInterface_C_SetLeftHandVariant) == 0x000008, "Wrong alignment on SurvAnimInterface_C_SetLeftHandVariant");
static_assert(sizeof(SurvAnimInterface_C_SetLeftHandVariant) == 0x000010, "Wrong size on SurvAnimInterface_C_SetLeftHandVariant");
static_assert(offsetof(SurvAnimInterface_C_SetLeftHandVariant, Variant) == 0x000000, "Member 'SurvAnimInterface_C_SetLeftHandVariant::Variant' has a wrong offset!");
static_assert(offsetof(SurvAnimInterface_C_SetLeftHandVariant, Success) == 0x000008, "Member 'SurvAnimInterface_C_SetLeftHandVariant::Success' has a wrong offset!");

// Function SurvAnimInterface.SurvAnimInterface_C.SetLootTarget
// 0x0070 (0x0070 - 0x0000)
struct SurvAnimInterface_C_SetLootTarget final
{
public:
	struct FTransform                             TargetTransform;                                   // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurvAnimInterface_C_SetLootTarget) == 0x000010, "Wrong alignment on SurvAnimInterface_C_SetLootTarget");
static_assert(sizeof(SurvAnimInterface_C_SetLootTarget) == 0x000070, "Wrong size on SurvAnimInterface_C_SetLootTarget");
static_assert(offsetof(SurvAnimInterface_C_SetLootTarget, TargetTransform) == 0x000000, "Member 'SurvAnimInterface_C_SetLootTarget::TargetTransform' has a wrong offset!");
static_assert(offsetof(SurvAnimInterface_C_SetLootTarget, Return) == 0x000060, "Member 'SurvAnimInterface_C_SetLootTarget::Return' has a wrong offset!");

// Function SurvAnimInterface.SurvAnimInterface_C.SetReloadingState
// 0x0001 (0x0001 - 0x0000)
struct SurvAnimInterface_C_SetReloadingState final
{
public:
	bool                                          IsReloading;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurvAnimInterface_C_SetReloadingState) == 0x000001, "Wrong alignment on SurvAnimInterface_C_SetReloadingState");
static_assert(sizeof(SurvAnimInterface_C_SetReloadingState) == 0x000001, "Wrong size on SurvAnimInterface_C_SetReloadingState");
static_assert(offsetof(SurvAnimInterface_C_SetReloadingState, IsReloading) == 0x000000, "Member 'SurvAnimInterface_C_SetReloadingState::IsReloading' has a wrong offset!");

// Function SurvAnimInterface.SurvAnimInterface_C.SetRubberDirection
// 0x0010 (0x0010 - 0x0000)
struct SurvAnimInterface_C_SetRubberDirection final
{
public:
	double                                        Direction;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Nothing;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurvAnimInterface_C_SetRubberDirection) == 0x000008, "Wrong alignment on SurvAnimInterface_C_SetRubberDirection");
static_assert(sizeof(SurvAnimInterface_C_SetRubberDirection) == 0x000010, "Wrong size on SurvAnimInterface_C_SetRubberDirection");
static_assert(offsetof(SurvAnimInterface_C_SetRubberDirection, Direction) == 0x000000, "Member 'SurvAnimInterface_C_SetRubberDirection::Direction' has a wrong offset!");
static_assert(offsetof(SurvAnimInterface_C_SetRubberDirection, Nothing) == 0x000008, "Member 'SurvAnimInterface_C_SetRubberDirection::Nothing' has a wrong offset!");

// Function SurvAnimInterface.SurvAnimInterface_C.SetSpineMotageBool
// 0x0002 (0x0002 - 0x0000)
struct SurvAnimInterface_C_SetSpineMotageBool final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Nothing;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurvAnimInterface_C_SetSpineMotageBool) == 0x000001, "Wrong alignment on SurvAnimInterface_C_SetSpineMotageBool");
static_assert(sizeof(SurvAnimInterface_C_SetSpineMotageBool) == 0x000002, "Wrong size on SurvAnimInterface_C_SetSpineMotageBool");
static_assert(offsetof(SurvAnimInterface_C_SetSpineMotageBool, Value) == 0x000000, "Member 'SurvAnimInterface_C_SetSpineMotageBool::Value' has a wrong offset!");
static_assert(offsetof(SurvAnimInterface_C_SetSpineMotageBool, Nothing) == 0x000001, "Member 'SurvAnimInterface_C_SetSpineMotageBool::Nothing' has a wrong offset!");

// Function SurvAnimInterface.SurvAnimInterface_C.SetThrowableHandPose
// 0x0008 (0x0008 - 0x0000)
struct SurvAnimInterface_C_SetThrowableHandPose final
{
public:
	class UAnimSequence*                          HandPose;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurvAnimInterface_C_SetThrowableHandPose) == 0x000008, "Wrong alignment on SurvAnimInterface_C_SetThrowableHandPose");
static_assert(sizeof(SurvAnimInterface_C_SetThrowableHandPose) == 0x000008, "Wrong size on SurvAnimInterface_C_SetThrowableHandPose");
static_assert(offsetof(SurvAnimInterface_C_SetThrowableHandPose, HandPose) == 0x000000, "Member 'SurvAnimInterface_C_SetThrowableHandPose::HandPose' has a wrong offset!");

// Function SurvAnimInterface.SurvAnimInterface_C.SetUsableItemSettings
// 0x0400 (0x0400 - 0x0000)
struct SurvAnimInterface_C_SetUsableItemSettings final
{
public:
	struct FS_EatConfiguration                    ItemSettings;                                      // 0x0000(0x0400)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(SurvAnimInterface_C_SetUsableItemSettings) == 0x000010, "Wrong alignment on SurvAnimInterface_C_SetUsableItemSettings");
static_assert(sizeof(SurvAnimInterface_C_SetUsableItemSettings) == 0x000400, "Wrong size on SurvAnimInterface_C_SetUsableItemSettings");
static_assert(offsetof(SurvAnimInterface_C_SetUsableItemSettings, ItemSettings) == 0x000000, "Member 'SurvAnimInterface_C_SetUsableItemSettings::ItemSettings' has a wrong offset!");

// Function SurvAnimInterface.SurvAnimInterface_C.SetWeaponAnims
// 0x0098 (0x0098 - 0x0000)
struct SurvAnimInterface_C_SetWeaponAnims final
{
public:
	struct FS_PlayerWeaponAnim                    WeaponAnims;                                       // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           HipFirePoseStand;                                  // 0x0088(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           HipFirePoseCrouch;                                 // 0x0090(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurvAnimInterface_C_SetWeaponAnims) == 0x000008, "Wrong alignment on SurvAnimInterface_C_SetWeaponAnims");
static_assert(sizeof(SurvAnimInterface_C_SetWeaponAnims) == 0x000098, "Wrong size on SurvAnimInterface_C_SetWeaponAnims");
static_assert(offsetof(SurvAnimInterface_C_SetWeaponAnims, WeaponAnims) == 0x000000, "Member 'SurvAnimInterface_C_SetWeaponAnims::WeaponAnims' has a wrong offset!");
static_assert(offsetof(SurvAnimInterface_C_SetWeaponAnims, HipFirePoseStand) == 0x000088, "Member 'SurvAnimInterface_C_SetWeaponAnims::HipFirePoseStand' has a wrong offset!");
static_assert(offsetof(SurvAnimInterface_C_SetWeaponAnims, HipFirePoseCrouch) == 0x000090, "Member 'SurvAnimInterface_C_SetWeaponAnims::HipFirePoseCrouch' has a wrong offset!");

// Function SurvAnimInterface.SurvAnimInterface_C.SetWeaponGripType
// 0x0010 (0x0010 - 0x0000)
struct SurvAnimInterface_C_SetWeaponGripType final
{
public:
	class FString                                 TacticalGripName;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(SurvAnimInterface_C_SetWeaponGripType) == 0x000008, "Wrong alignment on SurvAnimInterface_C_SetWeaponGripType");
static_assert(sizeof(SurvAnimInterface_C_SetWeaponGripType) == 0x000010, "Wrong size on SurvAnimInterface_C_SetWeaponGripType");
static_assert(offsetof(SurvAnimInterface_C_SetWeaponGripType, TacticalGripName) == 0x000000, "Member 'SurvAnimInterface_C_SetWeaponGripType::TacticalGripName' has a wrong offset!");

}

