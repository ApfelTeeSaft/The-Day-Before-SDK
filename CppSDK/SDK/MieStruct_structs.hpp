#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MieStruct

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// UserDefinedStruct MieStruct.MieStruct
// 0x0040 (0x0040 - 0x0000)
struct FMieStruct final
{
public:
	double                                        ScatteringScale_3_888F75E2421DC30BF96B778767CBA674; // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Scattering_6_688D3A024F21FAFB08459794F6EE48B2;     // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AbsoptionScale_11_79BEBBFD41936A179AE1ED9025287CBC; // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Absoption_10_601904CA45E9583816EAC0BD8971AD0B;     // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Anisotropy_13_F89E68234C5A48A23972B1A7DA89F87C;    // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ExponentialDistribuition_15_6117C993420AC9032F8D228366E30493; // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FMieStruct) == 0x000008, "Wrong alignment on FMieStruct");
static_assert(sizeof(FMieStruct) == 0x000040, "Wrong size on FMieStruct");
static_assert(offsetof(FMieStruct, ScatteringScale_3_888F75E2421DC30BF96B778767CBA674) == 0x000000, "Member 'FMieStruct::ScatteringScale_3_888F75E2421DC30BF96B778767CBA674' has a wrong offset!");
static_assert(offsetof(FMieStruct, Scattering_6_688D3A024F21FAFB08459794F6EE48B2) == 0x000008, "Member 'FMieStruct::Scattering_6_688D3A024F21FAFB08459794F6EE48B2' has a wrong offset!");
static_assert(offsetof(FMieStruct, AbsoptionScale_11_79BEBBFD41936A179AE1ED9025287CBC) == 0x000018, "Member 'FMieStruct::AbsoptionScale_11_79BEBBFD41936A179AE1ED9025287CBC' has a wrong offset!");
static_assert(offsetof(FMieStruct, Absoption_10_601904CA45E9583816EAC0BD8971AD0B) == 0x000020, "Member 'FMieStruct::Absoption_10_601904CA45E9583816EAC0BD8971AD0B' has a wrong offset!");
static_assert(offsetof(FMieStruct, Anisotropy_13_F89E68234C5A48A23972B1A7DA89F87C) == 0x000030, "Member 'FMieStruct::Anisotropy_13_F89E68234C5A48A23972B1A7DA89F87C' has a wrong offset!");
static_assert(offsetof(FMieStruct, ExponentialDistribuition_15_6117C993420AC9032F8D228366E30493) == 0x000038, "Member 'FMieStruct::ExponentialDistribuition_15_6117C993420AC9032F8D228366E30493' has a wrong offset!");

}

