#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InventoryWorker

#include "Basic.hpp"

#include "FItemInfo_structs.hpp"
#include "ContainerPickupsInfo_structs.hpp"


namespace SDK::Params
{

// Function InventoryWorker.InventoryWorker_C.AddGuideItems
// 0x0001 (0x0001 - 0x0000)
struct InventoryWorker_C_AddGuideItems final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InventoryWorker_C_AddGuideItems) == 0x000001, "Wrong alignment on InventoryWorker_C_AddGuideItems");
static_assert(sizeof(InventoryWorker_C_AddGuideItems) == 0x000001, "Wrong size on InventoryWorker_C_AddGuideItems");
static_assert(offsetof(InventoryWorker_C_AddGuideItems, Result) == 0x000000, "Member 'InventoryWorker_C_AddGuideItems::Result' has a wrong offset!");

// Function InventoryWorker.InventoryWorker_C.AddMoney
// 0x0470 (0x0470 - 0x0000)
struct InventoryWorker_C_AddMoney final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow;           // 0x0010(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             K2Node_SetFieldsInStruct_StructOut;                // 0x0238(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0458(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0460(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JSAddItem_Ad;                             // 0x0469(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InventoryWorker_C_AddMoney) == 0x000008, "Wrong alignment on InventoryWorker_C_AddMoney");
static_assert(sizeof(InventoryWorker_C_AddMoney) == 0x000470, "Wrong size on InventoryWorker_C_AddMoney");
static_assert(offsetof(InventoryWorker_C_AddMoney, Count) == 0x000000, "Member 'InventoryWorker_C_AddMoney::Count' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_AddMoney, CallFunc_MakeLiteralName_ReturnValue) == 0x000004, "Member 'InventoryWorker_C_AddMoney::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_AddMoney, CallFunc_GetDataTableRowFromName_OutRow) == 0x000010, "Member 'InventoryWorker_C_AddMoney::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_AddMoney, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000230, "Member 'InventoryWorker_C_AddMoney::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_AddMoney, K2Node_SetFieldsInStruct_StructOut) == 0x000238, "Member 'InventoryWorker_C_AddMoney::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_AddMoney, CallFunc_GetOwner_ReturnValue) == 0x000458, "Member 'InventoryWorker_C_AddMoney::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_AddMoney, K2Node_DynamicCast_AsSurvival_Player) == 0x000460, "Member 'InventoryWorker_C_AddMoney::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_AddMoney, K2Node_DynamicCast_bSuccess) == 0x000468, "Member 'InventoryWorker_C_AddMoney::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_AddMoney, CallFunc_JSAddItem_Ad) == 0x000469, "Member 'InventoryWorker_C_AddMoney::CallFunc_JSAddItem_Ad' has a wrong offset!");

// Function InventoryWorker.InventoryWorker_C.ApplyDefaultInventory
// 0x0010 (0x0010 - 0x0000)
struct InventoryWorker_C_ApplyDefaultInventory final
{
public:
	TArray<class FString>                         CustomList;                                        // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(InventoryWorker_C_ApplyDefaultInventory) == 0x000008, "Wrong alignment on InventoryWorker_C_ApplyDefaultInventory");
static_assert(sizeof(InventoryWorker_C_ApplyDefaultInventory) == 0x000010, "Wrong size on InventoryWorker_C_ApplyDefaultInventory");
static_assert(offsetof(InventoryWorker_C_ApplyDefaultInventory, CustomList) == 0x000000, "Member 'InventoryWorker_C_ApplyDefaultInventory::CustomList' has a wrong offset!");

// Function InventoryWorker.InventoryWorker_C.ApplyInventory
// 0x0010 (0x0010 - 0x0000)
struct InventoryWorker_C_ApplyInventory final
{
public:
	TArray<class FString>                         Data;                                              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(InventoryWorker_C_ApplyInventory) == 0x000008, "Wrong alignment on InventoryWorker_C_ApplyInventory");
static_assert(sizeof(InventoryWorker_C_ApplyInventory) == 0x000010, "Wrong size on InventoryWorker_C_ApplyInventory");
static_assert(offsetof(InventoryWorker_C_ApplyInventory, Data) == 0x000000, "Member 'InventoryWorker_C_ApplyInventory::Data' has a wrong offset!");

// Function InventoryWorker.InventoryWorker_C.Collect
// 0x0010 (0x0010 - 0x0000)
struct InventoryWorker_C_Collect final
{
public:
	class FString                                 Type;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(InventoryWorker_C_Collect) == 0x000008, "Wrong alignment on InventoryWorker_C_Collect");
static_assert(sizeof(InventoryWorker_C_Collect) == 0x000010, "Wrong size on InventoryWorker_C_Collect");
static_assert(offsetof(InventoryWorker_C_Collect, Type) == 0x000000, "Member 'InventoryWorker_C_Collect::Type' has a wrong offset!");

// Function InventoryWorker.InventoryWorker_C.Convert To Json Object
// 0x00D0 (0x00D0 - 0x0000)
struct InventoryWorker_C_Convert_To_Json_Object final
{
public:
	TArray<class FString>                         Data;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UTDBJsonObject*                         Json;                                              // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         CurrentStringArray;                                // 0x0018(0x0010)(Edit, BlueprintVisible)
	class UTDBJsonObject*                         JsonObject;                                        // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTDBJsonObject*                         CallFunc_ConstructJsonObject_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_LeftS;                              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS;                             // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue;                        // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_GetStringArrayField_ReturnValue;          // 0x0088(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(InventoryWorker_C_Convert_To_Json_Object) == 0x000008, "Wrong alignment on InventoryWorker_C_Convert_To_Json_Object");
static_assert(sizeof(InventoryWorker_C_Convert_To_Json_Object) == 0x0000D0, "Wrong size on InventoryWorker_C_Convert_To_Json_Object");
static_assert(offsetof(InventoryWorker_C_Convert_To_Json_Object, Data) == 0x000000, "Member 'InventoryWorker_C_Convert_To_Json_Object::Data' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_Convert_To_Json_Object, Json) == 0x000010, "Member 'InventoryWorker_C_Convert_To_Json_Object::Json' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_Convert_To_Json_Object, CurrentStringArray) == 0x000018, "Member 'InventoryWorker_C_Convert_To_Json_Object::CurrentStringArray' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_Convert_To_Json_Object, JsonObject) == 0x000028, "Member 'InventoryWorker_C_Convert_To_Json_Object::JsonObject' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_Convert_To_Json_Object, CallFunc_ConstructJsonObject_ReturnValue) == 0x000030, "Member 'InventoryWorker_C_Convert_To_Json_Object::CallFunc_ConstructJsonObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_Convert_To_Json_Object, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'InventoryWorker_C_Convert_To_Json_Object::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_Convert_To_Json_Object, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'InventoryWorker_C_Convert_To_Json_Object::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_Convert_To_Json_Object, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'InventoryWorker_C_Convert_To_Json_Object::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_Convert_To_Json_Object, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'InventoryWorker_C_Convert_To_Json_Object::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_Convert_To_Json_Object, Temp_int_Array_Index_Variable) == 0x000048, "Member 'InventoryWorker_C_Convert_To_Json_Object::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_Convert_To_Json_Object, CallFunc_Array_Get_Item) == 0x000050, "Member 'InventoryWorker_C_Convert_To_Json_Object::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_Convert_To_Json_Object, CallFunc_Split_LeftS) == 0x000060, "Member 'InventoryWorker_C_Convert_To_Json_Object::CallFunc_Split_LeftS' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_Convert_To_Json_Object, CallFunc_Split_RightS) == 0x000070, "Member 'InventoryWorker_C_Convert_To_Json_Object::CallFunc_Split_RightS' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_Convert_To_Json_Object, CallFunc_Split_ReturnValue) == 0x000080, "Member 'InventoryWorker_C_Convert_To_Json_Object::CallFunc_Split_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_Convert_To_Json_Object, CallFunc_GetStringArrayField_ReturnValue) == 0x000088, "Member 'InventoryWorker_C_Convert_To_Json_Object::CallFunc_GetStringArrayField_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_Convert_To_Json_Object, CallFunc_Array_Add_ReturnValue) == 0x000098, "Member 'InventoryWorker_C_Convert_To_Json_Object::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_Convert_To_Json_Object, CallFunc_Concat_StrStr_ReturnValue) == 0x0000A0, "Member 'InventoryWorker_C_Convert_To_Json_Object::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_Convert_To_Json_Object, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000B0, "Member 'InventoryWorker_C_Convert_To_Json_Object::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_Convert_To_Json_Object, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000C0, "Member 'InventoryWorker_C_Convert_To_Json_Object::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function InventoryWorker.InventoryWorker_C.ConvertFromJsonToList
// 0x00D0 (0x00D0 - 0x0000)
struct InventoryWorker_C_ConvertFromJsonToList final
{
public:
	class UTDBJsonObject*                         Json;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Result;                                            // 0x0008(0x0010)(Parm, OutParm)
	TArray<class FString>                         TempArr;                                           // 0x0018(0x0010)(Edit, BlueprintVisible)
	class UTDBJsonObject*                         TempJsonObject;                                    // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_GetFieldNames_ReturnValue;                // 0x0030(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_GetStringArrayField_ReturnValue;          // 0x0088(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InventoryWorker_C_ConvertFromJsonToList) == 0x000008, "Wrong alignment on InventoryWorker_C_ConvertFromJsonToList");
static_assert(sizeof(InventoryWorker_C_ConvertFromJsonToList) == 0x0000D0, "Wrong size on InventoryWorker_C_ConvertFromJsonToList");
static_assert(offsetof(InventoryWorker_C_ConvertFromJsonToList, Json) == 0x000000, "Member 'InventoryWorker_C_ConvertFromJsonToList::Json' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ConvertFromJsonToList, Result) == 0x000008, "Member 'InventoryWorker_C_ConvertFromJsonToList::Result' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ConvertFromJsonToList, TempArr) == 0x000018, "Member 'InventoryWorker_C_ConvertFromJsonToList::TempArr' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ConvertFromJsonToList, TempJsonObject) == 0x000028, "Member 'InventoryWorker_C_ConvertFromJsonToList::TempJsonObject' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ConvertFromJsonToList, CallFunc_GetFieldNames_ReturnValue) == 0x000030, "Member 'InventoryWorker_C_ConvertFromJsonToList::CallFunc_GetFieldNames_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ConvertFromJsonToList, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'InventoryWorker_C_ConvertFromJsonToList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ConvertFromJsonToList, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'InventoryWorker_C_ConvertFromJsonToList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ConvertFromJsonToList, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'InventoryWorker_C_ConvertFromJsonToList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ConvertFromJsonToList, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'InventoryWorker_C_ConvertFromJsonToList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ConvertFromJsonToList, Temp_int_Array_Index_Variable) == 0x000050, "Member 'InventoryWorker_C_ConvertFromJsonToList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ConvertFromJsonToList, Temp_int_Loop_Counter_Variable_1) == 0x000054, "Member 'InventoryWorker_C_ConvertFromJsonToList::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ConvertFromJsonToList, CallFunc_Array_Get_Item) == 0x000058, "Member 'InventoryWorker_C_ConvertFromJsonToList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ConvertFromJsonToList, CallFunc_Add_IntInt_ReturnValue_1) == 0x000068, "Member 'InventoryWorker_C_ConvertFromJsonToList::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ConvertFromJsonToList, CallFunc_Concat_StrStr_ReturnValue) == 0x000070, "Member 'InventoryWorker_C_ConvertFromJsonToList::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ConvertFromJsonToList, Temp_int_Array_Index_Variable_1) == 0x000080, "Member 'InventoryWorker_C_ConvertFromJsonToList::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ConvertFromJsonToList, CallFunc_GetStringArrayField_ReturnValue) == 0x000088, "Member 'InventoryWorker_C_ConvertFromJsonToList::CallFunc_GetStringArrayField_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ConvertFromJsonToList, CallFunc_Array_Length_ReturnValue_1) == 0x000098, "Member 'InventoryWorker_C_ConvertFromJsonToList::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ConvertFromJsonToList, CallFunc_Array_Get_Item_1) == 0x0000A0, "Member 'InventoryWorker_C_ConvertFromJsonToList::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ConvertFromJsonToList, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000B0, "Member 'InventoryWorker_C_ConvertFromJsonToList::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ConvertFromJsonToList, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000B8, "Member 'InventoryWorker_C_ConvertFromJsonToList::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ConvertFromJsonToList, CallFunc_Array_Add_ReturnValue) == 0x0000C8, "Member 'InventoryWorker_C_ConvertFromJsonToList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function InventoryWorker.InventoryWorker_C.ExecuteUbergraph_InventoryWorker
// 0x04C0 (0x04C0 - 0x0000)
struct InventoryWorker_C_ExecuteUbergraph_InventoryWorker final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTDBJsonObject*                         K2Node_CustomEvent_Json;                           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         K2Node_CustomEvent_StrAr;                          // 0x0010(0x0010)(ConstParm, ReferenceParm)
	TArray<class FString>                         K2Node_CustomEvent_Data_1;                         // 0x0020(0x0010)(ConstParm, ReferenceParm)
	TArray<class FString>                         CallFunc_ItemsSort_array;                          // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTDBJsonObject*                         K2Node_CustomEvent_Data;                           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UInventoryCollector_C*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_ConvertFromJsonToList_Result;             // 0x0060(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_MakeSingleJSONString_Result;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeSingleJSONString_Result_1;            // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         K2Node_CustomEvent_CustomList;                     // 0x0098(0x0010)(ConstParm, ReferenceParm)
	class FString                                 K2Node_CustomEvent_Type;                           // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UInventoryCollector_C*                  CallFunc_GetComponentByClass_ReturnValue_1;        // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_CollectInventory_Data;                    // 0x00C8(0x0010)(ReferenceParm)
	TArray<struct FFItemInfo>                     CallFunc_CollectInventory_ContainersData;          // 0x00D8(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<struct FFItemInfo>                     CallFunc_CollectInventory_ContainerItems;          // 0x00E8(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_CollectInventory_Succes_;                 // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0108(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_LeftS;                              // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS;                             // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue;                        // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Abs_Int_ReturnValue;                      // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow;           // 0x0178(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399[0x7];                                      // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x03A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x03C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Stash_C*                            K2Node_DynamicCast_AsBP_Stash;                     // 0x03D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D9[0x7];                                      // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x03E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E9[0x3];                                      // 0x03E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x03F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_401[0x7];                                      // 0x0401(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0408(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0418(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42C[0x4];                                      // 0x042C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_3;                   // 0x0430(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UInventoryCollector_C*                  CallFunc_GetComponentByClass_ReturnValue_2;        // 0x0438(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_441[0x7];                                      // 0x0441(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_CollectInventory_Data_1;                  // 0x0448(0x0010)(ReferenceParm)
	TArray<struct FFItemInfo>                     CallFunc_CollectInventory_ContainersData_1;        // 0x0458(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<struct FFItemInfo>                     CallFunc_CollectInventory_ContainerItems_1;        // 0x0468(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_CollectInventory_Succes__1;               // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_479[0x7];                                      // 0x0479(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_2;                         // 0x0480(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_494[0x4];                                      // 0x0494(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0498(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x04A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4AA[0x2];                                      // 0x04AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x04AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B1[0x3];                                      // 0x04B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x04B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker) == 0x000008, "Wrong alignment on InventoryWorker_C_ExecuteUbergraph_InventoryWorker");
static_assert(sizeof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker) == 0x0004C0, "Wrong size on InventoryWorker_C_ExecuteUbergraph_InventoryWorker");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, EntryPoint) == 0x000000, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::EntryPoint' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, K2Node_CustomEvent_Json) == 0x000008, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::K2Node_CustomEvent_Json' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, K2Node_CustomEvent_StrAr) == 0x000010, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::K2Node_CustomEvent_StrAr' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, K2Node_CustomEvent_Data_1) == 0x000020, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::K2Node_CustomEvent_Data_1' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_ItemsSort_array) == 0x000030, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_ItemsSort_array' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_GetOwner_ReturnValue) == 0x000048, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, K2Node_CustomEvent_Data) == 0x000050, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::K2Node_CustomEvent_Data' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_GetComponentByClass_ReturnValue) == 0x000058, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_ConvertFromJsonToList_Result) == 0x000060, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_ConvertFromJsonToList_Result' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_MakeSingleJSONString_Result) == 0x000078, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_MakeSingleJSONString_Result' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_MakeSingleJSONString_Result_1) == 0x000088, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_MakeSingleJSONString_Result_1' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, K2Node_CustomEvent_CustomList) == 0x000098, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::K2Node_CustomEvent_CustomList' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, K2Node_CustomEvent_Type) == 0x0000A8, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::K2Node_CustomEvent_Type' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_GetOwner_ReturnValue_1) == 0x0000B8, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_GetComponentByClass_ReturnValue_1) == 0x0000C0, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_CollectInventory_Data) == 0x0000C8, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_CollectInventory_Data' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_CollectInventory_ContainersData) == 0x0000D8, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_CollectInventory_ContainersData' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_CollectInventory_ContainerItems) == 0x0000E8, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_CollectInventory_ContainerItems' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_CollectInventory_Succes_) == 0x0000F8, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_CollectInventory_Succes_' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, Temp_int_Loop_Counter_Variable) == 0x0000FC, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_Add_IntInt_ReturnValue) == 0x000100, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000108, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_Array_Length_ReturnValue_1) == 0x000118, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, Temp_int_Array_Index_Variable) == 0x00011C, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, Temp_int_Array_Index_Variable_1) == 0x000120, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_Array_Get_Item) == 0x000128, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_Split_LeftS) == 0x000138, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_Split_LeftS' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_Split_RightS) == 0x000148, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_Split_RightS' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_Split_ReturnValue) == 0x000158, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_Split_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_Conv_StringToInt_ReturnValue) == 0x00015C, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_Abs_Int_ReturnValue) == 0x000160, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_Abs_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, Temp_int_Array_Index_Variable_2) == 0x000164, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000168, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_Array_Get_Item_1) == 0x000170, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_GetDataTableRowFromName_OutRow) == 0x000178, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000398, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_Conv_NameToString_ReturnValue) == 0x0003A0, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_Contains_ReturnValue) == 0x0003B0, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0003B8, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_GetOwner_ReturnValue_2) == 0x0003C0, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0003C8, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, K2Node_DynamicCast_AsBP_Stash) == 0x0003D0, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::K2Node_DynamicCast_AsBP_Stash' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, K2Node_DynamicCast_bSuccess) == 0x0003D8, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, K2Node_DynamicCast_AsSurvival_Player) == 0x0003E0, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, K2Node_DynamicCast_bSuccess_1) == 0x0003E8, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, Temp_int_Loop_Counter_Variable_1) == 0x0003EC, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_SelectString_ReturnValue) == 0x0003F0, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_Less_IntInt_ReturnValue) == 0x000400, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_Concat_StrStr_ReturnValue) == 0x000408, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000418, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_Add_IntInt_ReturnValue_1) == 0x000428, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_GetOwner_ReturnValue_3) == 0x000430, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_GetOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_GetComponentByClass_ReturnValue_2) == 0x000438, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_GetComponentByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, Temp_bool_True_if_break_was_hit_Variable) == 0x000440, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_CollectInventory_Data_1) == 0x000448, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_CollectInventory_Data_1' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_CollectInventory_ContainersData_1) == 0x000458, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_CollectInventory_ContainersData_1' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_CollectInventory_ContainerItems_1) == 0x000468, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_CollectInventory_ContainerItems_1' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_CollectInventory_Succes__1) == 0x000478, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_CollectInventory_Succes__1' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_Array_Get_Item_2) == 0x000480, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_Array_Length_ReturnValue_2) == 0x000490, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000498, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_Less_IntInt_ReturnValue_1) == 0x0004A8, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_Not_PreBool_ReturnValue) == 0x0004A9, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, Temp_int_Loop_Counter_Variable_2) == 0x0004AC, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_Less_IntInt_ReturnValue_2) == 0x0004B0, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_Add_IntInt_ReturnValue_2) == 0x0004B4, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ExecuteUbergraph_InventoryWorker, CallFunc_BooleanAND_ReturnValue) == 0x0004B8, "Member 'InventoryWorker_C_ExecuteUbergraph_InventoryWorker::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function InventoryWorker.InventoryWorker_C.GetDefaultItems
// 0x0040 (0x0040 - 0x0000)
struct InventoryWorker_C_GetDefaultItems final
{
public:
	class FString                                 Param_Outer;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Param_Pants;                                       // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         Data;                                              // 0x0020(0x0010)(Parm, OutParm)
	TArray<class FString>                         K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ReferenceParm)
};
static_assert(alignof(InventoryWorker_C_GetDefaultItems) == 0x000008, "Wrong alignment on InventoryWorker_C_GetDefaultItems");
static_assert(sizeof(InventoryWorker_C_GetDefaultItems) == 0x000040, "Wrong size on InventoryWorker_C_GetDefaultItems");
static_assert(offsetof(InventoryWorker_C_GetDefaultItems, Param_Outer) == 0x000000, "Member 'InventoryWorker_C_GetDefaultItems::Param_Outer' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_GetDefaultItems, Param_Pants) == 0x000010, "Member 'InventoryWorker_C_GetDefaultItems::Param_Pants' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_GetDefaultItems, Data) == 0x000020, "Member 'InventoryWorker_C_GetDefaultItems::Data' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_GetDefaultItems, K2Node_MakeArray_Array) == 0x000030, "Member 'InventoryWorker_C_GetDefaultItems::K2Node_MakeArray_Array' has a wrong offset!");

// Function InventoryWorker.InventoryWorker_C.ItemsSort
// 0x0108 (0x0108 - 0x0000)
struct InventoryWorker_C_ItemsSort final
{
public:
	TArray<class FString>                         StringArray;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class FString>                         Array;                                             // 0x0010(0x0010)(Parm, OutParm)
	int32                                         TempIndexint;                                      // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 NewLocalVar;                                       // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 TempString;                                        // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<int32>                                 Tempindexs;                                        // 0x0048(0x0010)(Edit, BlueprintVisible)
	int32                                         TempInt;                                           // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A3[0x1];                                       // 0x00A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item_2;                         // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_3;                         // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item_4;                         // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_GetCharacterArrayFromString_ReturnValue;  // 0x00D0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_5;                         // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InventoryWorker_C_ItemsSort) == 0x000008, "Wrong alignment on InventoryWorker_C_ItemsSort");
static_assert(sizeof(InventoryWorker_C_ItemsSort) == 0x000108, "Wrong size on InventoryWorker_C_ItemsSort");
static_assert(offsetof(InventoryWorker_C_ItemsSort, StringArray) == 0x000000, "Member 'InventoryWorker_C_ItemsSort::StringArray' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ItemsSort, Array) == 0x000010, "Member 'InventoryWorker_C_ItemsSort::Array' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ItemsSort, TempIndexint) == 0x000020, "Member 'InventoryWorker_C_ItemsSort::TempIndexint' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ItemsSort, NewLocalVar) == 0x000028, "Member 'InventoryWorker_C_ItemsSort::NewLocalVar' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ItemsSort, TempString) == 0x000038, "Member 'InventoryWorker_C_ItemsSort::TempString' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ItemsSort, Tempindexs) == 0x000048, "Member 'InventoryWorker_C_ItemsSort::Tempindexs' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ItemsSort, TempInt) == 0x000058, "Member 'InventoryWorker_C_ItemsSort::TempInt' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ItemsSort, CallFunc_Array_Get_Item) == 0x000060, "Member 'InventoryWorker_C_ItemsSort::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ItemsSort, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'InventoryWorker_C_ItemsSort::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ItemsSort, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'InventoryWorker_C_ItemsSort::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ItemsSort, Temp_int_Loop_Counter_Variable_1) == 0x000078, "Member 'InventoryWorker_C_ItemsSort::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ItemsSort, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'InventoryWorker_C_ItemsSort::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ItemsSort, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'InventoryWorker_C_ItemsSort::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ItemsSort, CallFunc_Add_IntInt_ReturnValue_1) == 0x000084, "Member 'InventoryWorker_C_ItemsSort::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ItemsSort, Temp_int_Array_Index_Variable) == 0x000088, "Member 'InventoryWorker_C_ItemsSort::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ItemsSort, Temp_bool_True_if_break_was_hit_Variable) == 0x00008C, "Member 'InventoryWorker_C_ItemsSort::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ItemsSort, CallFunc_Array_Get_Item_1) == 0x000090, "Member 'InventoryWorker_C_ItemsSort::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ItemsSort, CallFunc_Contains_ReturnValue) == 0x0000A0, "Member 'InventoryWorker_C_ItemsSort::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ItemsSort, CallFunc_Not_PreBool_ReturnValue) == 0x0000A1, "Member 'InventoryWorker_C_ItemsSort::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ItemsSort, CallFunc_BooleanAND_ReturnValue) == 0x0000A2, "Member 'InventoryWorker_C_ItemsSort::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ItemsSort, Temp_int_Array_Index_Variable_1) == 0x0000A4, "Member 'InventoryWorker_C_ItemsSort::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ItemsSort, CallFunc_Array_Get_Item_2) == 0x0000A8, "Member 'InventoryWorker_C_ItemsSort::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ItemsSort, CallFunc_Array_Get_Item_3) == 0x0000B8, "Member 'InventoryWorker_C_ItemsSort::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ItemsSort, CallFunc_Array_Add_ReturnValue) == 0x0000BC, "Member 'InventoryWorker_C_ItemsSort::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ItemsSort, CallFunc_Array_Get_Item_4) == 0x0000C0, "Member 'InventoryWorker_C_ItemsSort::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ItemsSort, CallFunc_GetCharacterArrayFromString_ReturnValue) == 0x0000D0, "Member 'InventoryWorker_C_ItemsSort::CallFunc_GetCharacterArrayFromString_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ItemsSort, CallFunc_Array_Length_ReturnValue_1) == 0x0000E0, "Member 'InventoryWorker_C_ItemsSort::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ItemsSort, CallFunc_Array_Get_Item_5) == 0x0000E8, "Member 'InventoryWorker_C_ItemsSort::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ItemsSort, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000F8, "Member 'InventoryWorker_C_ItemsSort::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ItemsSort, CallFunc_Conv_StringToInt_ReturnValue) == 0x0000FC, "Member 'InventoryWorker_C_ItemsSort::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_ItemsSort, CallFunc_Greater_IntInt_ReturnValue) == 0x000100, "Member 'InventoryWorker_C_ItemsSort::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function InventoryWorker.InventoryWorker_C.JSONToList
// 0x00C8 (0x00C8 - 0x0000)
struct InventoryWorker_C_JSONToList final
{
public:
	class FString                                 Json;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         Result;                                            // 0x0010(0x0010)(Parm, OutParm)
	TArray<class FString>                         Buffer;                                            // 0x0020(0x0010)(Edit, BlueprintVisible)
	TArray<class FString>                         List;                                              // 0x0030(0x0010)(Edit, BlueprintVisible)
	class FString                                 CallFunc_RightChop_ReturnValue;                    // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_LeftChop_ReturnValue;                     // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_ParseIntoArray_ReturnValue;               // 0x0068(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_LeftChop_ReturnValue_1;                   // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_RightChop_ReturnValue_1;                  // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InventoryWorker_C_JSONToList) == 0x000008, "Wrong alignment on InventoryWorker_C_JSONToList");
static_assert(sizeof(InventoryWorker_C_JSONToList) == 0x0000C8, "Wrong size on InventoryWorker_C_JSONToList");
static_assert(offsetof(InventoryWorker_C_JSONToList, Json) == 0x000000, "Member 'InventoryWorker_C_JSONToList::Json' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_JSONToList, Result) == 0x000010, "Member 'InventoryWorker_C_JSONToList::Result' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_JSONToList, Buffer) == 0x000020, "Member 'InventoryWorker_C_JSONToList::Buffer' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_JSONToList, List) == 0x000030, "Member 'InventoryWorker_C_JSONToList::List' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_JSONToList, CallFunc_RightChop_ReturnValue) == 0x000040, "Member 'InventoryWorker_C_JSONToList::CallFunc_RightChop_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_JSONToList, Temp_int_Array_Index_Variable) == 0x000050, "Member 'InventoryWorker_C_JSONToList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_JSONToList, CallFunc_LeftChop_ReturnValue) == 0x000058, "Member 'InventoryWorker_C_JSONToList::CallFunc_LeftChop_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_JSONToList, CallFunc_ParseIntoArray_ReturnValue) == 0x000068, "Member 'InventoryWorker_C_JSONToList::CallFunc_ParseIntoArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_JSONToList, Temp_int_Loop_Counter_Variable) == 0x000078, "Member 'InventoryWorker_C_JSONToList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_JSONToList, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'InventoryWorker_C_JSONToList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_JSONToList, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'InventoryWorker_C_JSONToList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_JSONToList, CallFunc_Array_Get_Item) == 0x000088, "Member 'InventoryWorker_C_JSONToList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_JSONToList, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'InventoryWorker_C_JSONToList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_JSONToList, CallFunc_LeftChop_ReturnValue_1) == 0x0000A0, "Member 'InventoryWorker_C_JSONToList::CallFunc_LeftChop_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_JSONToList, CallFunc_RightChop_ReturnValue_1) == 0x0000B0, "Member 'InventoryWorker_C_JSONToList::CallFunc_RightChop_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_JSONToList, CallFunc_Array_Add_ReturnValue) == 0x0000C0, "Member 'InventoryWorker_C_JSONToList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function InventoryWorker.InventoryWorker_C.MakeSingleJSONString
// 0x00E0 (0x00E0 - 0x0000)
struct InventoryWorker_C_MakeSingleJSONString final
{
public:
	TArray<class FString>                         Data;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 Result;                                            // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 ResultJSON;                                        // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         ValidArr;                                          // 0x0030(0x0010)(Edit, BlueprintVisible)
	class FString                                 Buffer;                                            // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_JoinStringArray_ReturnValue;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InventoryWorker_C_MakeSingleJSONString) == 0x000008, "Wrong alignment on InventoryWorker_C_MakeSingleJSONString");
static_assert(sizeof(InventoryWorker_C_MakeSingleJSONString) == 0x0000E0, "Wrong size on InventoryWorker_C_MakeSingleJSONString");
static_assert(offsetof(InventoryWorker_C_MakeSingleJSONString, Data) == 0x000000, "Member 'InventoryWorker_C_MakeSingleJSONString::Data' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_MakeSingleJSONString, Result) == 0x000010, "Member 'InventoryWorker_C_MakeSingleJSONString::Result' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_MakeSingleJSONString, ResultJSON) == 0x000020, "Member 'InventoryWorker_C_MakeSingleJSONString::ResultJSON' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_MakeSingleJSONString, ValidArr) == 0x000030, "Member 'InventoryWorker_C_MakeSingleJSONString::ValidArr' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_MakeSingleJSONString, Buffer) == 0x000040, "Member 'InventoryWorker_C_MakeSingleJSONString::Buffer' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_MakeSingleJSONString, Temp_int_Array_Index_Variable) == 0x000050, "Member 'InventoryWorker_C_MakeSingleJSONString::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_MakeSingleJSONString, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'InventoryWorker_C_MakeSingleJSONString::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_MakeSingleJSONString, CallFunc_Array_Get_Item) == 0x000058, "Member 'InventoryWorker_C_MakeSingleJSONString::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_MakeSingleJSONString, Temp_int_Loop_Counter_Variable) == 0x000068, "Member 'InventoryWorker_C_MakeSingleJSONString::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_MakeSingleJSONString, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'InventoryWorker_C_MakeSingleJSONString::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_MakeSingleJSONString, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'InventoryWorker_C_MakeSingleJSONString::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_MakeSingleJSONString, CallFunc_JoinStringArray_ReturnValue) == 0x000078, "Member 'InventoryWorker_C_MakeSingleJSONString::CallFunc_JoinStringArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_MakeSingleJSONString, CallFunc_Concat_StrStr_ReturnValue) == 0x000088, "Member 'InventoryWorker_C_MakeSingleJSONString::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_MakeSingleJSONString, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000098, "Member 'InventoryWorker_C_MakeSingleJSONString::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_MakeSingleJSONString, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000A8, "Member 'InventoryWorker_C_MakeSingleJSONString::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_MakeSingleJSONString, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000B8, "Member 'InventoryWorker_C_MakeSingleJSONString::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_MakeSingleJSONString, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000C8, "Member 'InventoryWorker_C_MakeSingleJSONString::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_MakeSingleJSONString, CallFunc_Array_Add_ReturnValue) == 0x0000D8, "Member 'InventoryWorker_C_MakeSingleJSONString::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function InventoryWorker.InventoryWorker_C.ParseResponse
// 0x0008 (0x0008 - 0x0000)
struct InventoryWorker_C_ParseResponse final
{
public:
	class UTDBJsonObject*                         Data;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InventoryWorker_C_ParseResponse) == 0x000008, "Wrong alignment on InventoryWorker_C_ParseResponse");
static_assert(sizeof(InventoryWorker_C_ParseResponse) == 0x000008, "Wrong size on InventoryWorker_C_ParseResponse");
static_assert(offsetof(InventoryWorker_C_ParseResponse, Data) == 0x000000, "Member 'InventoryWorker_C_ParseResponse::Data' has a wrong offset!");

// Function InventoryWorker.InventoryWorker_C.PlaceInventoryIntoList
// 0x01F8 (0x01F8 - 0x0000)
struct InventoryWorker_C_PlaceInventoryIntoList final
{
public:
	class ASurvivalPlayer_C*                      Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         List;                                              // 0x0008(0x0010)(Parm, OutParm)
	TArray<class FString>                         Items;                                             // 0x0018(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FContainerPickupsInfo>          CallFunc_getItemsInventory_ContainerItems;         // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<struct FContainerPickupsInfo>          CallFunc_getItemsInventory_ContainersData;         // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FContainerPickupsInfo>          CallFunc_getItemsInventory_ContainerItems_1;       // 0x0058(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<struct FContainerPickupsInfo>          CallFunc_getItemsInventory_ContainersData_1;       // 0x0068(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_Array_Get_Item;                           // 0x0088(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_Array_Get_Item_1;                         // 0x0148(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x01E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InventoryWorker_C_PlaceInventoryIntoList) == 0x000008, "Wrong alignment on InventoryWorker_C_PlaceInventoryIntoList");
static_assert(sizeof(InventoryWorker_C_PlaceInventoryIntoList) == 0x0001F8, "Wrong size on InventoryWorker_C_PlaceInventoryIntoList");
static_assert(offsetof(InventoryWorker_C_PlaceInventoryIntoList, Player) == 0x000000, "Member 'InventoryWorker_C_PlaceInventoryIntoList::Player' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_PlaceInventoryIntoList, List) == 0x000008, "Member 'InventoryWorker_C_PlaceInventoryIntoList::List' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_PlaceInventoryIntoList, Items) == 0x000018, "Member 'InventoryWorker_C_PlaceInventoryIntoList::Items' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_PlaceInventoryIntoList, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'InventoryWorker_C_PlaceInventoryIntoList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_PlaceInventoryIntoList, CallFunc_getItemsInventory_ContainerItems) == 0x000030, "Member 'InventoryWorker_C_PlaceInventoryIntoList::CallFunc_getItemsInventory_ContainerItems' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_PlaceInventoryIntoList, CallFunc_getItemsInventory_ContainersData) == 0x000040, "Member 'InventoryWorker_C_PlaceInventoryIntoList::CallFunc_getItemsInventory_ContainersData' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_PlaceInventoryIntoList, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'InventoryWorker_C_PlaceInventoryIntoList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_PlaceInventoryIntoList, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'InventoryWorker_C_PlaceInventoryIntoList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_PlaceInventoryIntoList, CallFunc_getItemsInventory_ContainerItems_1) == 0x000058, "Member 'InventoryWorker_C_PlaceInventoryIntoList::CallFunc_getItemsInventory_ContainerItems_1' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_PlaceInventoryIntoList, CallFunc_getItemsInventory_ContainersData_1) == 0x000068, "Member 'InventoryWorker_C_PlaceInventoryIntoList::CallFunc_getItemsInventory_ContainersData_1' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_PlaceInventoryIntoList, CallFunc_Array_Length_ReturnValue_1) == 0x000078, "Member 'InventoryWorker_C_PlaceInventoryIntoList::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_PlaceInventoryIntoList, Temp_int_Array_Index_Variable) == 0x00007C, "Member 'InventoryWorker_C_PlaceInventoryIntoList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_PlaceInventoryIntoList, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'InventoryWorker_C_PlaceInventoryIntoList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_PlaceInventoryIntoList, CallFunc_Array_Get_Item) == 0x000088, "Member 'InventoryWorker_C_PlaceInventoryIntoList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_PlaceInventoryIntoList, CallFunc_Conv_IntToString_ReturnValue) == 0x0000F0, "Member 'InventoryWorker_C_PlaceInventoryIntoList::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_PlaceInventoryIntoList, CallFunc_Conv_NameToString_ReturnValue) == 0x000100, "Member 'InventoryWorker_C_PlaceInventoryIntoList::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_PlaceInventoryIntoList, CallFunc_Concat_StrStr_ReturnValue) == 0x000110, "Member 'InventoryWorker_C_PlaceInventoryIntoList::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_PlaceInventoryIntoList, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000120, "Member 'InventoryWorker_C_PlaceInventoryIntoList::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_PlaceInventoryIntoList, Temp_int_Loop_Counter_Variable_1) == 0x000130, "Member 'InventoryWorker_C_PlaceInventoryIntoList::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_PlaceInventoryIntoList, CallFunc_Less_IntInt_ReturnValue_1) == 0x000134, "Member 'InventoryWorker_C_PlaceInventoryIntoList::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_PlaceInventoryIntoList, CallFunc_Array_Add_ReturnValue) == 0x000138, "Member 'InventoryWorker_C_PlaceInventoryIntoList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_PlaceInventoryIntoList, CallFunc_Add_IntInt_ReturnValue_1) == 0x00013C, "Member 'InventoryWorker_C_PlaceInventoryIntoList::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_PlaceInventoryIntoList, Temp_int_Array_Index_Variable_1) == 0x000140, "Member 'InventoryWorker_C_PlaceInventoryIntoList::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_PlaceInventoryIntoList, CallFunc_Array_Get_Item_1) == 0x000148, "Member 'InventoryWorker_C_PlaceInventoryIntoList::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_PlaceInventoryIntoList, CallFunc_Conv_NameToString_ReturnValue_1) == 0x0001B0, "Member 'InventoryWorker_C_PlaceInventoryIntoList::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_PlaceInventoryIntoList, CallFunc_Conv_IntToString_ReturnValue_1) == 0x0001C0, "Member 'InventoryWorker_C_PlaceInventoryIntoList::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_PlaceInventoryIntoList, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0001D0, "Member 'InventoryWorker_C_PlaceInventoryIntoList::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_PlaceInventoryIntoList, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0001E0, "Member 'InventoryWorker_C_PlaceInventoryIntoList::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_PlaceInventoryIntoList, CallFunc_Array_Add_ReturnValue_1) == 0x0001F0, "Member 'InventoryWorker_C_PlaceInventoryIntoList::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function InventoryWorker.InventoryWorker_C.PushInventory
// 0x0018 (0x0018 - 0x0000)
struct InventoryWorker_C_PushInventory final
{
public:
	class UTDBJsonObject*                         Json;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         StrAr;                                             // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(InventoryWorker_C_PushInventory) == 0x000008, "Wrong alignment on InventoryWorker_C_PushInventory");
static_assert(sizeof(InventoryWorker_C_PushInventory) == 0x000018, "Wrong size on InventoryWorker_C_PushInventory");
static_assert(offsetof(InventoryWorker_C_PushInventory, Json) == 0x000000, "Member 'InventoryWorker_C_PushInventory::Json' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_PushInventory, StrAr) == 0x000008, "Member 'InventoryWorker_C_PushInventory::StrAr' has a wrong offset!");

// Function InventoryWorker.InventoryWorker_C.StartGuideItems
// 0x0028 (0x0028 - 0x0000)
struct InventoryWorker_C_StartGuideItems final
{
public:
	class FString                                 Out;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Pan;                                               // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InventoryWorker_C_StartGuideItems) == 0x000008, "Wrong alignment on InventoryWorker_C_StartGuideItems");
static_assert(sizeof(InventoryWorker_C_StartGuideItems) == 0x000028, "Wrong size on InventoryWorker_C_StartGuideItems");
static_assert(offsetof(InventoryWorker_C_StartGuideItems, Out) == 0x000000, "Member 'InventoryWorker_C_StartGuideItems::Out' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_StartGuideItems, Pan) == 0x000010, "Member 'InventoryWorker_C_StartGuideItems::Pan' has a wrong offset!");
static_assert(offsetof(InventoryWorker_C_StartGuideItems, Result) == 0x000020, "Member 'InventoryWorker_C_StartGuideItems::Result' has a wrong offset!");

}

