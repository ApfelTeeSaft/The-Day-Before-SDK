#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ElevatorTeleport

#include "Basic.hpp"

#include "ElevatorTeleportState_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_ActorType_structs.hpp"
#include "Engine_structs.hpp"
#include "E_InteractType_structs.hpp"


namespace SDK::Params
{

// Function ElevatorTeleport.ElevatorTeleport_C.BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct ElevatorTeleport_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(ElevatorTeleport_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on ElevatorTeleport_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(ElevatorTeleport_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on ElevatorTeleport_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(ElevatorTeleport_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'ElevatorTeleport_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'ElevatorTeleport_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'ElevatorTeleport_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'ElevatorTeleport_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'ElevatorTeleport_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'ElevatorTeleport_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function ElevatorTeleport.ElevatorTeleport_C.BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ElevatorTeleport_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleport_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on ElevatorTeleport_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(ElevatorTeleport_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on ElevatorTeleport_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(ElevatorTeleport_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'ElevatorTeleport_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'ElevatorTeleport_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'ElevatorTeleport_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'ElevatorTeleport_C_BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function ElevatorTeleport.ElevatorTeleport_C.BndEvt__ElevatorTeleport_BoxDoorCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct ElevatorTeleport_C_BndEvt__ElevatorTeleport_BoxDoorCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(ElevatorTeleport_C_BndEvt__ElevatorTeleport_BoxDoorCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on ElevatorTeleport_C_BndEvt__ElevatorTeleport_BoxDoorCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(ElevatorTeleport_C_BndEvt__ElevatorTeleport_BoxDoorCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on ElevatorTeleport_C_BndEvt__ElevatorTeleport_BoxDoorCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(ElevatorTeleport_C_BndEvt__ElevatorTeleport_BoxDoorCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'ElevatorTeleport_C_BndEvt__ElevatorTeleport_BoxDoorCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_BndEvt__ElevatorTeleport_BoxDoorCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'ElevatorTeleport_C_BndEvt__ElevatorTeleport_BoxDoorCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_BndEvt__ElevatorTeleport_BoxDoorCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'ElevatorTeleport_C_BndEvt__ElevatorTeleport_BoxDoorCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_BndEvt__ElevatorTeleport_BoxDoorCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'ElevatorTeleport_C_BndEvt__ElevatorTeleport_BoxDoorCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_BndEvt__ElevatorTeleport_BoxDoorCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'ElevatorTeleport_C_BndEvt__ElevatorTeleport_BoxDoorCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_BndEvt__ElevatorTeleport_BoxDoorCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'ElevatorTeleport_C_BndEvt__ElevatorTeleport_BoxDoorCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function ElevatorTeleport.ElevatorTeleport_C.CanRecieveActors
// 0x0002 (0x0002 - 0x0000)
struct ElevatorTeleport_C_CanRecieveActors final
{
public:
	bool                                          CanRecieve;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleport_C_CanRecieveActors) == 0x000001, "Wrong alignment on ElevatorTeleport_C_CanRecieveActors");
static_assert(sizeof(ElevatorTeleport_C_CanRecieveActors) == 0x000002, "Wrong size on ElevatorTeleport_C_CanRecieveActors");
static_assert(offsetof(ElevatorTeleport_C_CanRecieveActors, CanRecieve) == 0x000000, "Member 'ElevatorTeleport_C_CanRecieveActors::CanRecieve' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_CanRecieveActors, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'ElevatorTeleport_C_CanRecieveActors::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function ElevatorTeleport.ElevatorTeleport_C.ExecuteUbergraph_ElevatorTeleport
// 0x0718 (0x0718 - 0x0000)
struct ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player;                               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasActorsInside_HasActors;                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_1;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ATeleport_C*                            K2Node_Event_Sender;                               // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Actor;                                // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_FMODPlayEventAttached_ReturnValue;        // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_FMODPlayEventAttached_ReturnValue_1;      // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Visible;                              // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Visible_1;                            // 0x0193(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_196[0x2];                                      // 0x0196(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODAudioComponent*                    CallFunc_FMODPlayEventAttached_ReturnValue_2;      // 0x0198(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue_1;                  // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player_1;                             // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_2;                             // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_3;                             // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue_2;                  // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player_4;                             // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_5;                             // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SitIndex;                             // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_SkipAnimation;                        // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DD[0x3];                                      // 0x01DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue_1;     // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_6;                             // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODAudioComponent*                    CallFunc_FMODPlayEventAttached_ReturnValue_3;      // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_FMODPlayEventAttached_ReturnValue_4;      // 0x0200(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_7;                             // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_8;                             // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0218(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult_1;     // 0x0308(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue_1;        // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x03F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x03F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x03F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x03F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F5[0x3];                                      // 0x03F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x03F8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0408(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0418(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0420(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_2;  // 0x0428(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_2;           // 0x0430(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_2;            // 0x0438(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_2;       // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_1;           // 0x0444(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_445[0x3];                                      // 0x0445(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_1;          // 0x0448(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0530(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_539[0x7];                                      // 0x0539(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0540(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0558(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTeleportableActor_IsTeleportable;       // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_571[0x7];                                      // 0x0571(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0578(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0590(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_4;               // 0x05A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A9[0x7];                                      // 0x05A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x05B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x05C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x05D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x05D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x05E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x05E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E5[0x3];                                      // 0x05E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x05E8(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsTeleportableActor_IsTeleportable_1;     // 0x06D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D1[0x7];                                      // 0x06D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x06D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x06E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x06E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x06F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F4[0x4];                                      // 0x06F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_ProcessOpeningDoorsState_DeltaTime_ImplicitCast; // 0x06F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ProcessOpenedState_DeltaTime_ImplicitCast; // 0x0700(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ProcessClosingDoorsState_DeltaTime_ImplicitCast; // 0x0708(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ProcessPreparingToTeleportState_DeltaTime_ImplicitCast; // 0x0710(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport) == 0x000008, "Wrong alignment on ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport");
static_assert(sizeof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport) == 0x000718, "Wrong size on ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, EntryPoint) == 0x000000, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::EntryPoint' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, K2Node_Event_Player) == 0x000008, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::K2Node_Event_Player' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_BreakVector_X) == 0x000018, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_BreakVector_Y) == 0x000020, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_BreakVector_Z) == 0x000028, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000030, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_MakeVector_ReturnValue) == 0x000038, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_HasActorsInside_HasActors) == 0x000050, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_HasActorsInside_HasActors' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_BreakVector_X_1) == 0x000058, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_BreakVector_Y_1) == 0x000060, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_BreakVector_Z_1) == 0x000068, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000070, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_MakeVector_ReturnValue_1) == 0x000078, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000098, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, K2Node_Event_Sender) == 0x0000A0, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::K2Node_Event_Sender' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_IsValid_ReturnValue_1) == 0x0000A8, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000A9, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, K2Node_Event_Actor) == 0x0000B0, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::K2Node_Event_Actor' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, K2Node_DynamicCast_AsSurvival_Player) == 0x0000B8, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000C8, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_BreakVector_X_2) == 0x0000E0, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_BreakVector_Y_2) == 0x0000E8, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_BreakVector_Z_2) == 0x0000F0, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_IsValid_ReturnValue_2) == 0x0000F8, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000100, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_BreakVector_X_3) == 0x000118, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_BreakVector_Y_3) == 0x000120, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_BreakVector_Z_3) == 0x000128, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000130, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000138, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x000140, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_MakeVector_ReturnValue_2) == 0x000148, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_Add_VectorVector_ReturnValue) == 0x000160, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_FMODPlayEventAttached_ReturnValue) == 0x000178, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_FMODPlayEventAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_FMODPlayEventAttached_ReturnValue_1) == 0x000180, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_FMODPlayEventAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_IsValid_ReturnValue_3) == 0x000188, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, K2Node_Event_DeltaSeconds) == 0x00018C, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_IsPlaying_ReturnValue) == 0x000190, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_IsValid_ReturnValue_4) == 0x000191, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, K2Node_Event_Visible) == 0x000192, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::K2Node_Event_Visible' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, K2Node_Event_Visible_1) == 0x000193, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::K2Node_Event_Visible_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_IsValid_ReturnValue_5) == 0x000194, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_IsValid_ReturnValue_6) == 0x000195, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_FMODPlayEventAttached_ReturnValue_2) == 0x000198, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_FMODPlayEventAttached_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_IsPlaying_ReturnValue_1) == 0x0001A0, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_IsPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, K2Node_Event_Player_1) == 0x0001A8, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::K2Node_Event_Player_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, K2Node_Event_Player_2) == 0x0001B0, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::K2Node_Event_Player_2' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, K2Node_Event_Player_3) == 0x0001B8, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::K2Node_Event_Player_3' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_IsPlaying_ReturnValue_2) == 0x0001C0, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_IsPlaying_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, K2Node_Event_Player_4) == 0x0001C8, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::K2Node_Event_Player_4' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, K2Node_Event_Player_5) == 0x0001D0, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::K2Node_Event_Player_5' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, K2Node_Event_SitIndex) == 0x0001D8, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::K2Node_Event_SitIndex' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, K2Node_Event_SkipAnimation) == 0x0001DC, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::K2Node_Event_SkipAnimation' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_Conv_InterfaceToObject_ReturnValue_1) == 0x0001E0, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_Conv_InterfaceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, K2Node_Event_Player_6) == 0x0001E8, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::K2Node_Event_Player_6' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_IsValid_ReturnValue_7) == 0x0001F0, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_FMODPlayEventAttached_ReturnValue_3) == 0x0001F8, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_FMODPlayEventAttached_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_FMODPlayEventAttached_ReturnValue_4) == 0x000200, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_FMODPlayEventAttached_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, K2Node_Event_Player_7) == 0x000208, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::K2Node_Event_Player_7' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, K2Node_Event_Player_8) == 0x000210, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::K2Node_Event_Player_8' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000218, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000300, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_K2_SetActorLocation_SweepHitResult_1) == 0x000308, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_K2_SetActorLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_K2_SetActorLocation_ReturnValue_1) == 0x0003F0, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_K2_SetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_IsLocallyControlled_ReturnValue) == 0x0003F1, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_HasAuthority_ReturnValue_1) == 0x0003F2, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_HasAuthority_ReturnValue_2) == 0x0003F3, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_HasAuthority_ReturnValue_3) == 0x0003F4, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, K2Node_CreateDelegate_OutputDelegate) == 0x0003F8, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, K2Node_CreateDelegate_OutputDelegate_1) == 0x000408, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000418, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000420, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, K2Node_ComponentBoundEvent_OverlappedComponent_2) == 0x000428, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::K2Node_ComponentBoundEvent_OverlappedComponent_2' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, K2Node_ComponentBoundEvent_OtherActor_2) == 0x000430, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::K2Node_ComponentBoundEvent_OtherActor_2' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, K2Node_ComponentBoundEvent_OtherComp_2) == 0x000438, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::K2Node_ComponentBoundEvent_OtherComp_2' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, K2Node_ComponentBoundEvent_OtherBodyIndex_2) == 0x000440, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::K2Node_ComponentBoundEvent_OtherBodyIndex_2' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, K2Node_ComponentBoundEvent_bFromSweep_1) == 0x000444, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::K2Node_ComponentBoundEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, K2Node_ComponentBoundEvent_SweepResult_1) == 0x000448, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::K2Node_ComponentBoundEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, K2Node_DynamicCast_AsCharacter) == 0x000530, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, K2Node_DynamicCast_bSuccess_1) == 0x000538, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000540, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000558, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_IsTeleportableActor_IsTeleportable) == 0x000570, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_IsTeleportableActor_IsTeleportable' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000578, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_MakeVector_ReturnValue_3) == 0x000590, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_HasAuthority_ReturnValue_4) == 0x0005A8, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_HasAuthority_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0005B0, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x0005C8, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, K2Node_ComponentBoundEvent_OtherActor_1) == 0x0005D0, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, K2Node_ComponentBoundEvent_OtherComp_1) == 0x0005D8, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x0005E0, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, K2Node_ComponentBoundEvent_bFromSweep) == 0x0005E4, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, K2Node_ComponentBoundEvent_SweepResult) == 0x0005E8, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_IsTeleportableActor_IsTeleportable_1) == 0x0006D0, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_IsTeleportableActor_IsTeleportable_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0006D8, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, K2Node_ComponentBoundEvent_OtherActor) == 0x0006E0, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, K2Node_ComponentBoundEvent_OtherComp) == 0x0006E8, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0006F0, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_ProcessOpeningDoorsState_DeltaTime_ImplicitCast) == 0x0006F8, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_ProcessOpeningDoorsState_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_ProcessOpenedState_DeltaTime_ImplicitCast) == 0x000700, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_ProcessOpenedState_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_ProcessClosingDoorsState_DeltaTime_ImplicitCast) == 0x000708, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_ProcessClosingDoorsState_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport, CallFunc_ProcessPreparingToTeleportState_DeltaTime_ImplicitCast) == 0x000710, "Member 'ElevatorTeleport_C_ExecuteUbergraph_ElevatorTeleport::CallFunc_ProcessPreparingToTeleportState_DeltaTime_ImplicitCast' has a wrong offset!");

// Function ElevatorTeleport.ElevatorTeleport_C.GetActorType
// 0x0001 (0x0001 - 0x0000)
struct ElevatorTeleport_C_GetActorType final
{
public:
	E_ActorType                                   ActorType;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleport_C_GetActorType) == 0x000001, "Wrong alignment on ElevatorTeleport_C_GetActorType");
static_assert(sizeof(ElevatorTeleport_C_GetActorType) == 0x000001, "Wrong size on ElevatorTeleport_C_GetActorType");
static_assert(offsetof(ElevatorTeleport_C_GetActorType, ActorType) == 0x000000, "Member 'ElevatorTeleport_C_GetActorType::ActorType' has a wrong offset!");

// Function ElevatorTeleport.ElevatorTeleport_C.GetDestination
// 0x0030 (0x0030 - 0x0000)
struct ElevatorTeleport_C_GetDestination final
{
public:
	struct FVector                                Param_Destination;                                 // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleport_C_GetDestination) == 0x000008, "Wrong alignment on ElevatorTeleport_C_GetDestination");
static_assert(sizeof(ElevatorTeleport_C_GetDestination) == 0x000030, "Wrong size on ElevatorTeleport_C_GetDestination");
static_assert(offsetof(ElevatorTeleport_C_GetDestination, Param_Destination) == 0x000000, "Member 'ElevatorTeleport_C_GetDestination::Param_Destination' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_GetDestination, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'ElevatorTeleport_C_GetDestination::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

// Function ElevatorTeleport.ElevatorTeleport_C.getRotation
// 0x0018 (0x0018 - 0x0000)
struct ElevatorTeleport_C_GetRotation final
{
public:
	struct FRotator                               Rotation;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ElevatorTeleport_C_GetRotation) == 0x000008, "Wrong alignment on ElevatorTeleport_C_GetRotation");
static_assert(sizeof(ElevatorTeleport_C_GetRotation) == 0x000018, "Wrong size on ElevatorTeleport_C_GetRotation");
static_assert(offsetof(ElevatorTeleport_C_GetRotation, Rotation) == 0x000000, "Member 'ElevatorTeleport_C_GetRotation::Rotation' has a wrong offset!");

// Function ElevatorTeleport.ElevatorTeleport_C.HasActorsInside
// 0x000C (0x000C - 0x0000)
struct ElevatorTeleport_C_HasActorsInside final
{
public:
	bool                                          HasActors;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleport_C_HasActorsInside) == 0x000004, "Wrong alignment on ElevatorTeleport_C_HasActorsInside");
static_assert(sizeof(ElevatorTeleport_C_HasActorsInside) == 0x00000C, "Wrong size on ElevatorTeleport_C_HasActorsInside");
static_assert(offsetof(ElevatorTeleport_C_HasActorsInside, HasActors) == 0x000000, "Member 'ElevatorTeleport_C_HasActorsInside::HasActors' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_HasActorsInside, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'ElevatorTeleport_C_HasActorsInside::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_HasActorsInside, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'ElevatorTeleport_C_HasActorsInside::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function ElevatorTeleport.ElevatorTeleport_C.IsLocked?
// 0x0001 (0x0001 - 0x0000)
struct ElevatorTeleport_C_IsLocked_ final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleport_C_IsLocked_) == 0x000001, "Wrong alignment on ElevatorTeleport_C_IsLocked_");
static_assert(sizeof(ElevatorTeleport_C_IsLocked_) == 0x000001, "Wrong size on ElevatorTeleport_C_IsLocked_");
static_assert(offsetof(ElevatorTeleport_C_IsLocked_, Result) == 0x000000, "Member 'ElevatorTeleport_C_IsLocked_::Result' has a wrong offset!");

// Function ElevatorTeleport.ElevatorTeleport_C.OnBeginInteract
// 0x0008 (0x0008 - 0x0000)
struct ElevatorTeleport_C_OnBeginInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleport_C_OnBeginInteract) == 0x000008, "Wrong alignment on ElevatorTeleport_C_OnBeginInteract");
static_assert(sizeof(ElevatorTeleport_C_OnBeginInteract) == 0x000008, "Wrong size on ElevatorTeleport_C_OnBeginInteract");
static_assert(offsetof(ElevatorTeleport_C_OnBeginInteract, Player) == 0x000000, "Member 'ElevatorTeleport_C_OnBeginInteract::Player' has a wrong offset!");

// Function ElevatorTeleport.ElevatorTeleport_C.OnFocused
// 0x0028 (0x0028 - 0x0000)
struct ElevatorTeleport_C_OnFocused final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HighlightActor;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        HighlightActorComponent;                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_InteractType                                InteractType;                                      // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LateTime;                                          // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleport_C_OnFocused) == 0x000008, "Wrong alignment on ElevatorTeleport_C_OnFocused");
static_assert(sizeof(ElevatorTeleport_C_OnFocused) == 0x000028, "Wrong size on ElevatorTeleport_C_OnFocused");
static_assert(offsetof(ElevatorTeleport_C_OnFocused, Player) == 0x000000, "Member 'ElevatorTeleport_C_OnFocused::Player' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_OnFocused, HighlightActor) == 0x000008, "Member 'ElevatorTeleport_C_OnFocused::HighlightActor' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_OnFocused, HighlightActorComponent) == 0x000010, "Member 'ElevatorTeleport_C_OnFocused::HighlightActorComponent' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_OnFocused, InteractType) == 0x000018, "Member 'ElevatorTeleport_C_OnFocused::InteractType' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_OnFocused, LateTime) == 0x000020, "Member 'ElevatorTeleport_C_OnFocused::LateTime' has a wrong offset!");

// Function ElevatorTeleport.ElevatorTeleport_C.OnInteract
// 0x0008 (0x0008 - 0x0000)
struct ElevatorTeleport_C_OnInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleport_C_OnInteract) == 0x000008, "Wrong alignment on ElevatorTeleport_C_OnInteract");
static_assert(sizeof(ElevatorTeleport_C_OnInteract) == 0x000008, "Wrong size on ElevatorTeleport_C_OnInteract");
static_assert(offsetof(ElevatorTeleport_C_OnInteract, Player) == 0x000000, "Member 'ElevatorTeleport_C_OnInteract::Player' has a wrong offset!");

// Function ElevatorTeleport.ElevatorTeleport_C.OnInteract2
// 0x0008 (0x0008 - 0x0000)
struct ElevatorTeleport_C_OnInteract2 final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleport_C_OnInteract2) == 0x000008, "Wrong alignment on ElevatorTeleport_C_OnInteract2");
static_assert(sizeof(ElevatorTeleport_C_OnInteract2) == 0x000008, "Wrong size on ElevatorTeleport_C_OnInteract2");
static_assert(offsetof(ElevatorTeleport_C_OnInteract2, Player) == 0x000000, "Member 'ElevatorTeleport_C_OnInteract2::Player' has a wrong offset!");

// Function ElevatorTeleport.ElevatorTeleport_C.OnInteract3
// 0x0008 (0x0008 - 0x0000)
struct ElevatorTeleport_C_OnInteract3 final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleport_C_OnInteract3) == 0x000008, "Wrong alignment on ElevatorTeleport_C_OnInteract3");
static_assert(sizeof(ElevatorTeleport_C_OnInteract3) == 0x000008, "Wrong size on ElevatorTeleport_C_OnInteract3");
static_assert(offsetof(ElevatorTeleport_C_OnInteract3, Player) == 0x000000, "Member 'ElevatorTeleport_C_OnInteract3::Player' has a wrong offset!");

// Function ElevatorTeleport.ElevatorTeleport_C.OnInteractVehicle
// 0x0010 (0x0010 - 0x0000)
struct ElevatorTeleport_C_OnInteractVehicle final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         SitIndex;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipAnimation;                                     // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleport_C_OnInteractVehicle) == 0x000008, "Wrong alignment on ElevatorTeleport_C_OnInteractVehicle");
static_assert(sizeof(ElevatorTeleport_C_OnInteractVehicle) == 0x000010, "Wrong size on ElevatorTeleport_C_OnInteractVehicle");
static_assert(offsetof(ElevatorTeleport_C_OnInteractVehicle, Player) == 0x000000, "Member 'ElevatorTeleport_C_OnInteractVehicle::Player' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_OnInteractVehicle, SitIndex) == 0x000008, "Member 'ElevatorTeleport_C_OnInteractVehicle::SitIndex' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_OnInteractVehicle, SkipAnimation) == 0x00000C, "Member 'ElevatorTeleport_C_OnInteractVehicle::SkipAnimation' has a wrong offset!");

// Function ElevatorTeleport.ElevatorTeleport_C.OnLocalInteract
// 0x0008 (0x0008 - 0x0000)
struct ElevatorTeleport_C_OnLocalInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleport_C_OnLocalInteract) == 0x000008, "Wrong alignment on ElevatorTeleport_C_OnLocalInteract");
static_assert(sizeof(ElevatorTeleport_C_OnLocalInteract) == 0x000008, "Wrong size on ElevatorTeleport_C_OnLocalInteract");
static_assert(offsetof(ElevatorTeleport_C_OnLocalInteract, Player) == 0x000000, "Member 'ElevatorTeleport_C_OnLocalInteract::Player' has a wrong offset!");

// Function ElevatorTeleport.ElevatorTeleport_C.OnLostFocus
// 0x0008 (0x0008 - 0x0000)
struct ElevatorTeleport_C_OnLostFocus final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleport_C_OnLostFocus) == 0x000008, "Wrong alignment on ElevatorTeleport_C_OnLostFocus");
static_assert(sizeof(ElevatorTeleport_C_OnLostFocus) == 0x000008, "Wrong size on ElevatorTeleport_C_OnLostFocus");
static_assert(offsetof(ElevatorTeleport_C_OnLostFocus, Player) == 0x000000, "Member 'ElevatorTeleport_C_OnLostFocus::Player' has a wrong offset!");

// Function ElevatorTeleport.ElevatorTeleport_C.OnSeen
// 0x0008 (0x0008 - 0x0000)
struct ElevatorTeleport_C_OnSeen final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleport_C_OnSeen) == 0x000008, "Wrong alignment on ElevatorTeleport_C_OnSeen");
static_assert(sizeof(ElevatorTeleport_C_OnSeen) == 0x000008, "Wrong size on ElevatorTeleport_C_OnSeen");
static_assert(offsetof(ElevatorTeleport_C_OnSeen, Player) == 0x000000, "Member 'ElevatorTeleport_C_OnSeen::Player' has a wrong offset!");

// Function ElevatorTeleport.ElevatorTeleport_C.OnStopInteract
// 0x0008 (0x0008 - 0x0000)
struct ElevatorTeleport_C_OnStopInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleport_C_OnStopInteract) == 0x000008, "Wrong alignment on ElevatorTeleport_C_OnStopInteract");
static_assert(sizeof(ElevatorTeleport_C_OnStopInteract) == 0x000008, "Wrong size on ElevatorTeleport_C_OnStopInteract");
static_assert(offsetof(ElevatorTeleport_C_OnStopInteract, Player) == 0x000000, "Member 'ElevatorTeleport_C_OnStopInteract::Player' has a wrong offset!");

// Function ElevatorTeleport.ElevatorTeleport_C.OpenDoors
// 0x0001 (0x0001 - 0x0000)
struct ElevatorTeleport_C_OpenDoors final
{
public:
	bool                                          Param_WaitUntilActorsLeave;                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleport_C_OpenDoors) == 0x000001, "Wrong alignment on ElevatorTeleport_C_OpenDoors");
static_assert(sizeof(ElevatorTeleport_C_OpenDoors) == 0x000001, "Wrong size on ElevatorTeleport_C_OpenDoors");
static_assert(offsetof(ElevatorTeleport_C_OpenDoors, Param_WaitUntilActorsLeave) == 0x000000, "Member 'ElevatorTeleport_C_OpenDoors::Param_WaitUntilActorsLeave' has a wrong offset!");

// Function ElevatorTeleport.ElevatorTeleport_C.ProcessClosingDoorsState
// 0x0230 (0x0230 - 0x0000)
struct ElevatorTeleport_C_ProcessClosingDoorsState final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0028(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_VLerp_ReturnValue_1;                      // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x0128(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VLerp_Alpha_ImplicitCast;                 // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VLerp_Alpha_ImplicitCast_1;               // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleport_C_ProcessClosingDoorsState) == 0x000008, "Wrong alignment on ElevatorTeleport_C_ProcessClosingDoorsState");
static_assert(sizeof(ElevatorTeleport_C_ProcessClosingDoorsState) == 0x000230, "Wrong size on ElevatorTeleport_C_ProcessClosingDoorsState");
static_assert(offsetof(ElevatorTeleport_C_ProcessClosingDoorsState, DeltaTime) == 0x000000, "Member 'ElevatorTeleport_C_ProcessClosingDoorsState::DeltaTime' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ProcessClosingDoorsState, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000008, "Member 'ElevatorTeleport_C_ProcessClosingDoorsState::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ProcessClosingDoorsState, CallFunc_VLerp_ReturnValue) == 0x000010, "Member 'ElevatorTeleport_C_ProcessClosingDoorsState::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ProcessClosingDoorsState, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000028, "Member 'ElevatorTeleport_C_ProcessClosingDoorsState::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ProcessClosingDoorsState, CallFunc_VLerp_ReturnValue_1) == 0x000110, "Member 'ElevatorTeleport_C_ProcessClosingDoorsState::CallFunc_VLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ProcessClosingDoorsState, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x000128, "Member 'ElevatorTeleport_C_ProcessClosingDoorsState::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ProcessClosingDoorsState, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000210, "Member 'ElevatorTeleport_C_ProcessClosingDoorsState::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ProcessClosingDoorsState, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000218, "Member 'ElevatorTeleport_C_ProcessClosingDoorsState::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ProcessClosingDoorsState, CallFunc_FClamp_ReturnValue) == 0x000220, "Member 'ElevatorTeleport_C_ProcessClosingDoorsState::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ProcessClosingDoorsState, CallFunc_VLerp_Alpha_ImplicitCast) == 0x000228, "Member 'ElevatorTeleport_C_ProcessClosingDoorsState::CallFunc_VLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ProcessClosingDoorsState, CallFunc_VLerp_Alpha_ImplicitCast_1) == 0x00022C, "Member 'ElevatorTeleport_C_ProcessClosingDoorsState::CallFunc_VLerp_Alpha_ImplicitCast_1' has a wrong offset!");

// Function ElevatorTeleport.ElevatorTeleport_C.ProcessOpenedState
// 0x0018 (0x0018 - 0x0000)
struct ElevatorTeleport_C_ProcessOpenedState final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasActorsInside_HasActors;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleport_C_ProcessOpenedState) == 0x000008, "Wrong alignment on ElevatorTeleport_C_ProcessOpenedState");
static_assert(sizeof(ElevatorTeleport_C_ProcessOpenedState) == 0x000018, "Wrong size on ElevatorTeleport_C_ProcessOpenedState");
static_assert(offsetof(ElevatorTeleport_C_ProcessOpenedState, DeltaTime) == 0x000000, "Member 'ElevatorTeleport_C_ProcessOpenedState::DeltaTime' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ProcessOpenedState, CallFunc_HasActorsInside_HasActors) == 0x000008, "Member 'ElevatorTeleport_C_ProcessOpenedState::CallFunc_HasActorsInside_HasActors' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ProcessOpenedState, CallFunc_HasAuthority_ReturnValue) == 0x000009, "Member 'ElevatorTeleport_C_ProcessOpenedState::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ProcessOpenedState, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x00000A, "Member 'ElevatorTeleport_C_ProcessOpenedState::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ProcessOpenedState, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'ElevatorTeleport_C_ProcessOpenedState::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function ElevatorTeleport.ElevatorTeleport_C.ProcessOpeningDoorsState
// 0x0238 (0x0238 - 0x0000)
struct ElevatorTeleport_C_ProcessOpeningDoorsState final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0030(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_VLerp_ReturnValue_1;                      // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x0130(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VLerp_Alpha_ImplicitCast;                 // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VLerp_Alpha_ImplicitCast_1;               // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleport_C_ProcessOpeningDoorsState) == 0x000008, "Wrong alignment on ElevatorTeleport_C_ProcessOpeningDoorsState");
static_assert(sizeof(ElevatorTeleport_C_ProcessOpeningDoorsState) == 0x000238, "Wrong size on ElevatorTeleport_C_ProcessOpeningDoorsState");
static_assert(offsetof(ElevatorTeleport_C_ProcessOpeningDoorsState, DeltaTime) == 0x000000, "Member 'ElevatorTeleport_C_ProcessOpeningDoorsState::DeltaTime' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ProcessOpeningDoorsState, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'ElevatorTeleport_C_ProcessOpeningDoorsState::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ProcessOpeningDoorsState, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000010, "Member 'ElevatorTeleport_C_ProcessOpeningDoorsState::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ProcessOpeningDoorsState, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000011, "Member 'ElevatorTeleport_C_ProcessOpeningDoorsState::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ProcessOpeningDoorsState, CallFunc_VLerp_ReturnValue) == 0x000018, "Member 'ElevatorTeleport_C_ProcessOpeningDoorsState::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ProcessOpeningDoorsState, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000030, "Member 'ElevatorTeleport_C_ProcessOpeningDoorsState::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ProcessOpeningDoorsState, CallFunc_VLerp_ReturnValue_1) == 0x000118, "Member 'ElevatorTeleport_C_ProcessOpeningDoorsState::CallFunc_VLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ProcessOpeningDoorsState, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x000130, "Member 'ElevatorTeleport_C_ProcessOpeningDoorsState::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ProcessOpeningDoorsState, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000218, "Member 'ElevatorTeleport_C_ProcessOpeningDoorsState::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ProcessOpeningDoorsState, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000220, "Member 'ElevatorTeleport_C_ProcessOpeningDoorsState::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ProcessOpeningDoorsState, CallFunc_FClamp_ReturnValue) == 0x000228, "Member 'ElevatorTeleport_C_ProcessOpeningDoorsState::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ProcessOpeningDoorsState, CallFunc_VLerp_Alpha_ImplicitCast) == 0x000230, "Member 'ElevatorTeleport_C_ProcessOpeningDoorsState::CallFunc_VLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ProcessOpeningDoorsState, CallFunc_VLerp_Alpha_ImplicitCast_1) == 0x000234, "Member 'ElevatorTeleport_C_ProcessOpeningDoorsState::CallFunc_VLerp_Alpha_ImplicitCast_1' has a wrong offset!");

// Function ElevatorTeleport.ElevatorTeleport_C.ProcessPreparingToTeleportState
// 0x0018 (0x0018 - 0x0000)
struct ElevatorTeleport_C_ProcessPreparingToTeleportState final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleport_C_ProcessPreparingToTeleportState) == 0x000008, "Wrong alignment on ElevatorTeleport_C_ProcessPreparingToTeleportState");
static_assert(sizeof(ElevatorTeleport_C_ProcessPreparingToTeleportState) == 0x000018, "Wrong size on ElevatorTeleport_C_ProcessPreparingToTeleportState");
static_assert(offsetof(ElevatorTeleport_C_ProcessPreparingToTeleportState, DeltaTime) == 0x000000, "Member 'ElevatorTeleport_C_ProcessPreparingToTeleportState::DeltaTime' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ProcessPreparingToTeleportState, CallFunc_HasAuthority_ReturnValue) == 0x000008, "Member 'ElevatorTeleport_C_ProcessPreparingToTeleportState::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ProcessPreparingToTeleportState, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000009, "Member 'ElevatorTeleport_C_ProcessPreparingToTeleportState::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ProcessPreparingToTeleportState, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'ElevatorTeleport_C_ProcessPreparingToTeleportState::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function ElevatorTeleport.ElevatorTeleport_C.ProcessRecievingActorsState
// 0x0018 (0x0018 - 0x0000)
struct ElevatorTeleport_C_ProcessRecievingActorsState final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleport_C_ProcessRecievingActorsState) == 0x000008, "Wrong alignment on ElevatorTeleport_C_ProcessRecievingActorsState");
static_assert(sizeof(ElevatorTeleport_C_ProcessRecievingActorsState) == 0x000018, "Wrong size on ElevatorTeleport_C_ProcessRecievingActorsState");
static_assert(offsetof(ElevatorTeleport_C_ProcessRecievingActorsState, DeltaTime) == 0x000000, "Member 'ElevatorTeleport_C_ProcessRecievingActorsState::DeltaTime' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ProcessRecievingActorsState, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000008, "Member 'ElevatorTeleport_C_ProcessRecievingActorsState::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_ProcessRecievingActorsState, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'ElevatorTeleport_C_ProcessRecievingActorsState::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function ElevatorTeleport.ElevatorTeleport_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct ElevatorTeleport_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleport_C_ReceiveTick) == 0x000004, "Wrong alignment on ElevatorTeleport_C_ReceiveTick");
static_assert(sizeof(ElevatorTeleport_C_ReceiveTick) == 0x000004, "Wrong size on ElevatorTeleport_C_ReceiveTick");
static_assert(offsetof(ElevatorTeleport_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'ElevatorTeleport_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function ElevatorTeleport.ElevatorTeleport_C.RecieveActors
// 0x0008 (0x0008 - 0x0000)
struct ElevatorTeleport_C_RecieveActors final
{
public:
	class ATeleport_C*                            Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleport_C_RecieveActors) == 0x000008, "Wrong alignment on ElevatorTeleport_C_RecieveActors");
static_assert(sizeof(ElevatorTeleport_C_RecieveActors) == 0x000008, "Wrong size on ElevatorTeleport_C_RecieveActors");
static_assert(offsetof(ElevatorTeleport_C_RecieveActors, Sender) == 0x000000, "Member 'ElevatorTeleport_C_RecieveActors::Sender' has a wrong offset!");

// Function ElevatorTeleport.ElevatorTeleport_C.RecieverCanAcceptActors
// 0x0018 (0x0018 - 0x0000)
struct ElevatorTeleport_C_RecieverCanAcceptActors final
{
public:
	bool                                          CanRecieve;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanRecieveActors_CanRecieve;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleport_C_RecieverCanAcceptActors) == 0x000008, "Wrong alignment on ElevatorTeleport_C_RecieverCanAcceptActors");
static_assert(sizeof(ElevatorTeleport_C_RecieverCanAcceptActors) == 0x000018, "Wrong size on ElevatorTeleport_C_RecieverCanAcceptActors");
static_assert(offsetof(ElevatorTeleport_C_RecieverCanAcceptActors, CanRecieve) == 0x000000, "Member 'ElevatorTeleport_C_RecieverCanAcceptActors::CanRecieve' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_RecieverCanAcceptActors, CallFunc_CanRecieveActors_CanRecieve) == 0x000001, "Member 'ElevatorTeleport_C_RecieverCanAcceptActors::CallFunc_CanRecieveActors_CanRecieve' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_RecieverCanAcceptActors, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000008, "Member 'ElevatorTeleport_C_RecieverCanAcceptActors::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_RecieverCanAcceptActors, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ElevatorTeleport_C_RecieverCanAcceptActors::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ElevatorTeleport.ElevatorTeleport_C.Set3DWidgetVisibility
// 0x0001 (0x0001 - 0x0000)
struct ElevatorTeleport_C_Set3DWidgetVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleport_C_Set3DWidgetVisibility) == 0x000001, "Wrong alignment on ElevatorTeleport_C_Set3DWidgetVisibility");
static_assert(sizeof(ElevatorTeleport_C_Set3DWidgetVisibility) == 0x000001, "Wrong size on ElevatorTeleport_C_Set3DWidgetVisibility");
static_assert(offsetof(ElevatorTeleport_C_Set3DWidgetVisibility, Visible) == 0x000000, "Member 'ElevatorTeleport_C_Set3DWidgetVisibility::Visible' has a wrong offset!");

// Function ElevatorTeleport.ElevatorTeleport_C.SetElevatorBusy
// 0x0010 (0x0010 - 0x0000)
struct ElevatorTeleport_C_SetElevatorBusy final
{
public:
	class AElevatorTeleport_C*                    K2Node_DynamicCast_AsElevator_Teleport;            // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleport_C_SetElevatorBusy) == 0x000008, "Wrong alignment on ElevatorTeleport_C_SetElevatorBusy");
static_assert(sizeof(ElevatorTeleport_C_SetElevatorBusy) == 0x000010, "Wrong size on ElevatorTeleport_C_SetElevatorBusy");
static_assert(offsetof(ElevatorTeleport_C_SetElevatorBusy, K2Node_DynamicCast_AsElevator_Teleport) == 0x000000, "Member 'ElevatorTeleport_C_SetElevatorBusy::K2Node_DynamicCast_AsElevator_Teleport' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_SetElevatorBusy, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'ElevatorTeleport_C_SetElevatorBusy::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_SetElevatorBusy, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'ElevatorTeleport_C_SetElevatorBusy::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ElevatorTeleport.ElevatorTeleport_C.SetElevatorDestination
// 0x0050 (0x0050 - 0x0000)
struct ElevatorTeleport_C_SetElevatorDestination final
{
public:
	class AActor*                                 ElevatorDestination;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IElevatorTeleportRecieverV2_C> K2Node_DynamicCast_AsElevator_Teleport_Reciever_V2; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetRotation_Rotation;                     // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetDestination_Destination;               // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleport_C_SetElevatorDestination) == 0x000008, "Wrong alignment on ElevatorTeleport_C_SetElevatorDestination");
static_assert(sizeof(ElevatorTeleport_C_SetElevatorDestination) == 0x000050, "Wrong size on ElevatorTeleport_C_SetElevatorDestination");
static_assert(offsetof(ElevatorTeleport_C_SetElevatorDestination, ElevatorDestination) == 0x000000, "Member 'ElevatorTeleport_C_SetElevatorDestination::ElevatorDestination' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_SetElevatorDestination, K2Node_DynamicCast_AsElevator_Teleport_Reciever_V2) == 0x000008, "Member 'ElevatorTeleport_C_SetElevatorDestination::K2Node_DynamicCast_AsElevator_Teleport_Reciever_V2' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_SetElevatorDestination, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ElevatorTeleport_C_SetElevatorDestination::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_SetElevatorDestination, CallFunc_GetRotation_Rotation) == 0x000020, "Member 'ElevatorTeleport_C_SetElevatorDestination::CallFunc_GetRotation_Rotation' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_SetElevatorDestination, CallFunc_GetDestination_Destination) == 0x000038, "Member 'ElevatorTeleport_C_SetElevatorDestination::CallFunc_GetDestination_Destination' has a wrong offset!");

// Function ElevatorTeleport.ElevatorTeleport_C.SetElevatorNotBusy
// 0x0010 (0x0010 - 0x0000)
struct ElevatorTeleport_C_SetElevatorNotBusy final
{
public:
	class AElevatorTeleport_C*                    K2Node_DynamicCast_AsElevator_Teleport;            // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleport_C_SetElevatorNotBusy) == 0x000008, "Wrong alignment on ElevatorTeleport_C_SetElevatorNotBusy");
static_assert(sizeof(ElevatorTeleport_C_SetElevatorNotBusy) == 0x000010, "Wrong size on ElevatorTeleport_C_SetElevatorNotBusy");
static_assert(offsetof(ElevatorTeleport_C_SetElevatorNotBusy, K2Node_DynamicCast_AsElevator_Teleport) == 0x000000, "Member 'ElevatorTeleport_C_SetElevatorNotBusy::K2Node_DynamicCast_AsElevator_Teleport' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_SetElevatorNotBusy, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'ElevatorTeleport_C_SetElevatorNotBusy::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_SetElevatorNotBusy, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'ElevatorTeleport_C_SetElevatorNotBusy::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ElevatorTeleport.ElevatorTeleport_C.SetState
// 0x0002 (0x0002 - 0x0000)
struct ElevatorTeleport_C_SetState final
{
public:
	ElevatorTeleportState                         Param_State;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleport_C_SetState) == 0x000001, "Wrong alignment on ElevatorTeleport_C_SetState");
static_assert(sizeof(ElevatorTeleport_C_SetState) == 0x000002, "Wrong size on ElevatorTeleport_C_SetState");
static_assert(offsetof(ElevatorTeleport_C_SetState, Param_State) == 0x000000, "Member 'ElevatorTeleport_C_SetState::Param_State' has a wrong offset!");
static_assert(offsetof(ElevatorTeleport_C_SetState, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'ElevatorTeleport_C_SetState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function ElevatorTeleport.ElevatorTeleport_C.SetTutorial3DWidgetVisibility
// 0x0001 (0x0001 - 0x0000)
struct ElevatorTeleport_C_SetTutorial3DWidgetVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleport_C_SetTutorial3DWidgetVisibility) == 0x000001, "Wrong alignment on ElevatorTeleport_C_SetTutorial3DWidgetVisibility");
static_assert(sizeof(ElevatorTeleport_C_SetTutorial3DWidgetVisibility) == 0x000001, "Wrong size on ElevatorTeleport_C_SetTutorial3DWidgetVisibility");
static_assert(offsetof(ElevatorTeleport_C_SetTutorial3DWidgetVisibility, Visible) == 0x000000, "Member 'ElevatorTeleport_C_SetTutorial3DWidgetVisibility::Visible' has a wrong offset!");

// Function ElevatorTeleport.ElevatorTeleport_C.TeleportActor
// 0x0008 (0x0008 - 0x0000)
struct ElevatorTeleport_C_TeleportActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTeleport_C_TeleportActor) == 0x000008, "Wrong alignment on ElevatorTeleport_C_TeleportActor");
static_assert(sizeof(ElevatorTeleport_C_TeleportActor) == 0x000008, "Wrong size on ElevatorTeleport_C_TeleportActor");
static_assert(offsetof(ElevatorTeleport_C_TeleportActor, Actor) == 0x000000, "Member 'ElevatorTeleport_C_TeleportActor::Actor' has a wrong offset!");

}

