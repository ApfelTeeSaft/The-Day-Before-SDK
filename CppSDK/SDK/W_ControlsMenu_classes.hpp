#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ControlsMenu

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Slate_structs.hpp"
#include "Survival_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_ControlsMenu.W_ControlsMenu_C
// 0x0268 (0x04F0 - 0x0288)
class UW_ControlsMenu_C final : public UControlsSettingsWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0288(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UW_ControlMapping_C*                    Aim;                                               // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ControlMapping_C*                    BackThrottle;                                      // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ControlMapping_C*                    BroadcastToRadio;                                  // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ControlMapping_C*                    BuildFurniture;                                    // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ControlMapping_C*                    ChangeSitToDriver;                                 // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ControlMapping_C*                    ChangeSitToPassengerLB;                            // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ControlMapping_C*                    ChangeSitToPassengerRB;                            // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ControlMapping_C*                    ChangeSitToPassengerRF;                            // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ControlMapping_C*                    Crouch;                                            // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ControlMapping_C*                    Fire;                                              // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ControlMapping_C*                    ForwardThrottle;                                   // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ControlMapping_C*                    HandbrakeAxis;                                     // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ControlMapping_C*                    Jump;                                              // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ControlMapping_C*                    LeaningLeft;                                       // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ControlMapping_C*                    LeaningRight;                                      // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ControlMapping_C*                    MoveBackward;                                      // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ControlMapping_C*                    MoveForward;                                       // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ControlMapping_C*                    MoveLeft;                                          // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ControlMapping_C*                    MoveRight;                                         // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ControlMapping_C*                    OpenBaseBuildingMenu;                              // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ControlMapping_C*                    OpenCarUpgradeMenu;                                // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ControlMapping_C*                    OpenCraftWindow;                                   // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ControlMapping_C*                    OpenInventory;                                     // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ControlMapping_C*                    OpenPartyWidget;                                   // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ControlMapping_C*                    Reload;                                            // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ScrollBox_Bindings;                                // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Bindings;                                  // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ControlMapping_C*                    Sprint;                                            // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ControlMapping_C*                    SteeringWheelsLeft;                                // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ControlMapping_C*                    SteeringWheelsRight;                               // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ControlMapping_C*                    TurnEngine;                                        // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ControlMapping_C*                    TurnLights;                                        // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_LabelText_C*                       UMG_LabelText;                                     // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_LabelText_C*                       UMG_LabelText_KeyBindings;                         // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_LabelText_C*                       UMG_LabelText_Settings;                            // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ControlMapping_C*                    Unarm;                                             // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ControlMapping_C*                    Use;                                               // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ControlMapping_C*                    UseChat;                                           // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ControlMapping_C*                    VehicleHorn;                                       // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_Bindings;                              // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ControlMapping_C*                    VoiceChat;                                         // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ControlMapping_C*                    VoiceLines;                                        // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SettengRow_Button_C*                 W_SettengRow_Button_Combat;                        // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SettengRow_Button_C*                 W_SettengRow_Button_Communication;                 // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SettengRow_Button_C*                 W_SettengRow_Button_MouseGamepad;                  // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SettengRow_Button_C*                 W_SettengRow_Button_Movement;                      // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SettengRow_Button_C*                 W_SettengRow_Button_Transport;                     // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SettingRow_Slider_C*                 W_SettingRow_GamepadXAxis;                         // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SettingRow_Slider_C*                 W_SettingRow_GamepadYAxis;                         // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SettingRow_Text_C*                   W_SettingRow_MouseInvertY;                         // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SettingRow_Slider_C*                 W_SettingRow_MouseSensitivity;                     // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ControlMapping_C*                    Walk;                                              // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Scroller_C*                        WBP_Scroller;                                      // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ControlMapping_C*                    WeaponSlot1;                                       // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ControlMapping_C*                    WeaponSlot2;                                       // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ControlMapping_C*                    WeaponSlot3;                                       // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_Header;                             // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_Settings;                           // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ControlMapping_C*                    ZoomIn;                                            // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ControlMapping_C*                    ZoomOut;                                           // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UW_ControlMapping_C*>            SettingRows;                                       // 0x0470(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UUserWidget*                            CurrentSettingRow;                                 // 0x0480(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             ValueChanged;                                      // 0x0488(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FText                                   NewVar;                                            // 0x0498(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FInputChord                            LastKey_0;                                         // 0x04B0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnKeyValueChanging;                                // 0x04D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UW_SettengRow_Button_C*                 SelectedCategory;                                  // 0x04E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGI_Survival_C*                         As_GI_Survival;                                    // 0x04E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__W_ControlsMenu_W_SettengRow_Button_Combat_K2Node_ComponentBoundEvent_2_OnButtonPressed__DelegateSignature(class UW_SettengRow_Button_C* RowButton);
	void BndEvt__W_ControlsMenu_W_SettengRow_Button_Communication_K2Node_ComponentBoundEvent_4_OnButtonPressed__DelegateSignature(class UW_SettengRow_Button_C* RowButton);
	void BndEvt__W_ControlsMenu_W_SettengRow_Button_MouseGamepad_K2Node_ComponentBoundEvent_0_OnButtonPressed__DelegateSignature(class UW_SettengRow_Button_C* RowButton);
	void BndEvt__W_ControlsMenu_W_SettengRow_Button_Movement_K2Node_ComponentBoundEvent_1_OnButtonPressed__DelegateSignature(class UW_SettengRow_Button_C* RowButton);
	void BndEvt__W_ControlsMenu_W_SettengRow_Button_Transport_K2Node_ComponentBoundEvent_3_OnButtonPressed__DelegateSignature(class UW_SettengRow_Button_C* RowButton);
	void BndEvt__W_ControlsMenu_W_SettingRow_MouseInvertY_K2Node_ComponentBoundEvent_6_IndexHasBeenChanged__DelegateSignature(int32 NewIndex);
	void BndEvt__W_ControlsMenu_W_SettingRow_MouseSensitivity_K2Node_ComponentBoundEvent_5_ValueHasBeenChanged__DelegateSignature(double NewValue);
	void ChangeCategory(int32 HeaderIndex, int32 CategoryIndex, bool bUpdateScreoller, class UW_SettengRow_Button_C* Target);
	void CheckingForValuesChanges(bool* Changed);
	void Construct();
	void ExecuteUbergraph_W_ControlsMenu(int32 EntryPoint);
	void Init();
	void InitScroller();
	void KeyValueChanging(bool Changing);
	void MappingValuerChanged(const struct FInputChord& Input);
	void OnClose();
	void OnInitialized();
	struct FEventReply OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void OnKeyValueChanging__DelegateSignature(bool Param_KeyValueChanging);
	void OnRowDeselected(class UUserWidget* RowWidgetRef);
	void OnRowHovered(class UUserWidget* RowWidgetRef);
	void OnRowSelected(class UUserWidget* RowWidgetRef);
	void OnRowUnhovered(class UUserWidget* RowWidgetRef);
	void SetDefaultMouseSettings();
	void ValueChanged__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_ControlsMenu_C">();
	}
	static class UW_ControlsMenu_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_ControlsMenu_C>();
	}
};
static_assert(alignof(UW_ControlsMenu_C) == 0x000008, "Wrong alignment on UW_ControlsMenu_C");
static_assert(sizeof(UW_ControlsMenu_C) == 0x0004F0, "Wrong size on UW_ControlsMenu_C");
static_assert(offsetof(UW_ControlsMenu_C, UberGraphFrame) == 0x000288, "Member 'UW_ControlsMenu_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, Aim) == 0x000290, "Member 'UW_ControlsMenu_C::Aim' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, BackThrottle) == 0x000298, "Member 'UW_ControlsMenu_C::BackThrottle' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, BroadcastToRadio) == 0x0002A0, "Member 'UW_ControlsMenu_C::BroadcastToRadio' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, BuildFurniture) == 0x0002A8, "Member 'UW_ControlsMenu_C::BuildFurniture' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, ChangeSitToDriver) == 0x0002B0, "Member 'UW_ControlsMenu_C::ChangeSitToDriver' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, ChangeSitToPassengerLB) == 0x0002B8, "Member 'UW_ControlsMenu_C::ChangeSitToPassengerLB' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, ChangeSitToPassengerRB) == 0x0002C0, "Member 'UW_ControlsMenu_C::ChangeSitToPassengerRB' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, ChangeSitToPassengerRF) == 0x0002C8, "Member 'UW_ControlsMenu_C::ChangeSitToPassengerRF' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, Crouch) == 0x0002D0, "Member 'UW_ControlsMenu_C::Crouch' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, Fire) == 0x0002D8, "Member 'UW_ControlsMenu_C::Fire' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, ForwardThrottle) == 0x0002E0, "Member 'UW_ControlsMenu_C::ForwardThrottle' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, HandbrakeAxis) == 0x0002E8, "Member 'UW_ControlsMenu_C::HandbrakeAxis' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, Jump) == 0x0002F0, "Member 'UW_ControlsMenu_C::Jump' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, LeaningLeft) == 0x0002F8, "Member 'UW_ControlsMenu_C::LeaningLeft' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, LeaningRight) == 0x000300, "Member 'UW_ControlsMenu_C::LeaningRight' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, MoveBackward) == 0x000308, "Member 'UW_ControlsMenu_C::MoveBackward' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, MoveForward) == 0x000310, "Member 'UW_ControlsMenu_C::MoveForward' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, MoveLeft) == 0x000318, "Member 'UW_ControlsMenu_C::MoveLeft' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, MoveRight) == 0x000320, "Member 'UW_ControlsMenu_C::MoveRight' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, OpenBaseBuildingMenu) == 0x000328, "Member 'UW_ControlsMenu_C::OpenBaseBuildingMenu' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, OpenCarUpgradeMenu) == 0x000330, "Member 'UW_ControlsMenu_C::OpenCarUpgradeMenu' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, OpenCraftWindow) == 0x000338, "Member 'UW_ControlsMenu_C::OpenCraftWindow' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, OpenInventory) == 0x000340, "Member 'UW_ControlsMenu_C::OpenInventory' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, OpenPartyWidget) == 0x000348, "Member 'UW_ControlsMenu_C::OpenPartyWidget' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, Reload) == 0x000350, "Member 'UW_ControlsMenu_C::Reload' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, ScrollBox_Bindings) == 0x000358, "Member 'UW_ControlsMenu_C::ScrollBox_Bindings' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, SizeBox_Bindings) == 0x000360, "Member 'UW_ControlsMenu_C::SizeBox_Bindings' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, Sprint) == 0x000368, "Member 'UW_ControlsMenu_C::Sprint' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, SteeringWheelsLeft) == 0x000370, "Member 'UW_ControlsMenu_C::SteeringWheelsLeft' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, SteeringWheelsRight) == 0x000378, "Member 'UW_ControlsMenu_C::SteeringWheelsRight' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, TurnEngine) == 0x000380, "Member 'UW_ControlsMenu_C::TurnEngine' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, TurnLights) == 0x000388, "Member 'UW_ControlsMenu_C::TurnLights' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, UMG_LabelText) == 0x000390, "Member 'UW_ControlsMenu_C::UMG_LabelText' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, UMG_LabelText_KeyBindings) == 0x000398, "Member 'UW_ControlsMenu_C::UMG_LabelText_KeyBindings' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, UMG_LabelText_Settings) == 0x0003A0, "Member 'UW_ControlsMenu_C::UMG_LabelText_Settings' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, Unarm) == 0x0003A8, "Member 'UW_ControlsMenu_C::Unarm' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, Use) == 0x0003B0, "Member 'UW_ControlsMenu_C::Use' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, UseChat) == 0x0003B8, "Member 'UW_ControlsMenu_C::UseChat' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, VehicleHorn) == 0x0003C0, "Member 'UW_ControlsMenu_C::VehicleHorn' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, VerticalBox_Bindings) == 0x0003C8, "Member 'UW_ControlsMenu_C::VerticalBox_Bindings' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, VoiceChat) == 0x0003D0, "Member 'UW_ControlsMenu_C::VoiceChat' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, VoiceLines) == 0x0003D8, "Member 'UW_ControlsMenu_C::VoiceLines' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, W_SettengRow_Button_Combat) == 0x0003E0, "Member 'UW_ControlsMenu_C::W_SettengRow_Button_Combat' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, W_SettengRow_Button_Communication) == 0x0003E8, "Member 'UW_ControlsMenu_C::W_SettengRow_Button_Communication' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, W_SettengRow_Button_MouseGamepad) == 0x0003F0, "Member 'UW_ControlsMenu_C::W_SettengRow_Button_MouseGamepad' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, W_SettengRow_Button_Movement) == 0x0003F8, "Member 'UW_ControlsMenu_C::W_SettengRow_Button_Movement' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, W_SettengRow_Button_Transport) == 0x000400, "Member 'UW_ControlsMenu_C::W_SettengRow_Button_Transport' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, W_SettingRow_GamepadXAxis) == 0x000408, "Member 'UW_ControlsMenu_C::W_SettingRow_GamepadXAxis' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, W_SettingRow_GamepadYAxis) == 0x000410, "Member 'UW_ControlsMenu_C::W_SettingRow_GamepadYAxis' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, W_SettingRow_MouseInvertY) == 0x000418, "Member 'UW_ControlsMenu_C::W_SettingRow_MouseInvertY' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, W_SettingRow_MouseSensitivity) == 0x000420, "Member 'UW_ControlsMenu_C::W_SettingRow_MouseSensitivity' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, Walk) == 0x000428, "Member 'UW_ControlsMenu_C::Walk' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, WBP_Scroller) == 0x000430, "Member 'UW_ControlsMenu_C::WBP_Scroller' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, WeaponSlot1) == 0x000438, "Member 'UW_ControlsMenu_C::WeaponSlot1' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, WeaponSlot2) == 0x000440, "Member 'UW_ControlsMenu_C::WeaponSlot2' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, WeaponSlot3) == 0x000448, "Member 'UW_ControlsMenu_C::WeaponSlot3' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, WidgetSwitcher_Header) == 0x000450, "Member 'UW_ControlsMenu_C::WidgetSwitcher_Header' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, WidgetSwitcher_Settings) == 0x000458, "Member 'UW_ControlsMenu_C::WidgetSwitcher_Settings' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, ZoomIn) == 0x000460, "Member 'UW_ControlsMenu_C::ZoomIn' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, ZoomOut) == 0x000468, "Member 'UW_ControlsMenu_C::ZoomOut' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, SettingRows) == 0x000470, "Member 'UW_ControlsMenu_C::SettingRows' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, CurrentSettingRow) == 0x000480, "Member 'UW_ControlsMenu_C::CurrentSettingRow' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, ValueChanged) == 0x000488, "Member 'UW_ControlsMenu_C::ValueChanged' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, NewVar) == 0x000498, "Member 'UW_ControlsMenu_C::NewVar' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, LastKey_0) == 0x0004B0, "Member 'UW_ControlsMenu_C::LastKey_0' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, OnKeyValueChanging) == 0x0004D0, "Member 'UW_ControlsMenu_C::OnKeyValueChanging' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, SelectedCategory) == 0x0004E0, "Member 'UW_ControlsMenu_C::SelectedCategory' has a wrong offset!");
static_assert(offsetof(UW_ControlsMenu_C, As_GI_Survival) == 0x0004E8, "Member 'UW_ControlsMenu_C::As_GI_Survival' has a wrong offset!");

}

