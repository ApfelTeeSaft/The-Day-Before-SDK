#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BFL_Utilities

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BFL_Utilities.BFL_Utilities_C
// 0x0000 (0x0028 - 0x0028)
class UBFL_Utilities_C final : public UBlueprintFunctionLibrary
{
public:
	static void GetAngleBetweenTwoVectors(const struct FVector& Vector1, const struct FVector& Vector2, class UObject* __WorldContext, double* Angle);
	static void GetAngleToActor(class AActor* StartActor, class AActor* TargetActor, class UObject* __WorldContext, double* Angle);
	static void GetAngleToController(class AActor* StartActor, class AController* TargetController, class UObject* __WorldContext, double* Angle);
	static void GetAngleToVector(class AActor* StartActor, const struct FVector& TargetVector, class UObject* __WorldContext, double* Angle);
	static void Play_Sound_with_Check(class UFMODEvent*& EventToPlay, class USceneComponent*& ComponentToAttach, double CheckDistance, class UObject* __WorldContext);
	static void PlaySofSoundwithCheck(TSoftObjectPtr<class UFMODEvent> EventToPlay, class USceneComponent* ComponentToAttach, double CheckDistance, class UObject* __WorldContext);

	bool GetChanceIsLowerThan(int32 LowerValue, class UObject* __WorldContext);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BFL_Utilities_C">();
	}
	static class UBFL_Utilities_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBFL_Utilities_C>();
	}
};
static_assert(alignof(UBFL_Utilities_C) == 0x000008, "Wrong alignment on UBFL_Utilities_C");
static_assert(sizeof(UBFL_Utilities_C) == 0x000028, "Wrong size on UBFL_Utilities_C");

}

