#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: I_Vehicle

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass I_Vehicle.I_Vehicle_C
// 0x0000 (0x0028 - 0x0028)
class II_Vehicle_C final : public IInterface
{
public:
	void ExitVehicle(class AActor* Player, bool SkipAnimation, bool SkipExitOnLocation, bool IgnoreSpeedLimits, bool* Success);
	void FillGas();
	void GetBoostInfo(double* BoostTime, double* BoostCooldownTime);
	void GetCarStatsComponent(class UBPC_CarStatsComponent_C** CarStats);
	void GetDriver(class APawn** Driver, class ASurvivalPlayer_V2_C** NewParam);
	void GetEngineStarted(bool* Started);
	void GetIsAccelerating(bool* IsAccelerating);
	void GetPassengers(class APawn** PassengerFL, class APawn** PassengerBL, class APawn** PassengerBR);
	void GetSteering(double* Angle);
	void GetVehicleBody(class USkeletalMeshComponent** Body);
	void GetWheelPitches(TArray<double>* Pitches);
	void GetWheels(bool* IsValid, class USphereComponent** LF, class USphereComponent** RF, class USphereComponent** LB, class USphereComponent** RB);
	bool HasDriver();
	void IsVehicle(bool* Param_IsVehicle);
	void OnLevelLoaded(class FName Level, class AActor* Player);
	void OnLevelUnloaded(class FName Level, class AActor* Player);
	void Repair();
	void SetBoost(bool NewBoost, bool* Success);
	void SwitchSits(int32 DesireSitIndex, class AActor* Player);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"I_Vehicle_C">();
	}
	static class II_Vehicle_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<II_Vehicle_C>();
	}
};
static_assert(alignof(II_Vehicle_C) == 0x000008, "Wrong alignment on II_Vehicle_C");
static_assert(sizeof(II_Vehicle_C) == 0x000028, "Wrong size on II_Vehicle_C");

}

