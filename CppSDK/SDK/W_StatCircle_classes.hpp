#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_StatCircle

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_StatCircle.W_StatCircle_C
// 0x0050 (0x02D0 - 0x0280)
class UW_StatCircle_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       CriticalAnim;                                      // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Icon_Shadow_Stat;                                  // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_Stat;                                         // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Ring_Value;                                        // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPaperSprite*                           IconSprite;                                        // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Material;                                          // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentFillValue;                                  // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCriticalState;                                   // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperSprite*                           IconShadow;                                        // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_W_StatCircle(int32 EntryPoint);
	void OnInitialized();
	void PreConstruct(bool IsDesignTime);
	void SetFillValue(double Param_CurrentFillValue, bool IsCritical);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_StatCircle_C">();
	}
	static class UW_StatCircle_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_StatCircle_C>();
	}
};
static_assert(alignof(UW_StatCircle_C) == 0x000008, "Wrong alignment on UW_StatCircle_C");
static_assert(sizeof(UW_StatCircle_C) == 0x0002D0, "Wrong size on UW_StatCircle_C");
static_assert(offsetof(UW_StatCircle_C, UberGraphFrame) == 0x000280, "Member 'UW_StatCircle_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_StatCircle_C, CriticalAnim) == 0x000288, "Member 'UW_StatCircle_C::CriticalAnim' has a wrong offset!");
static_assert(offsetof(UW_StatCircle_C, Icon_Shadow_Stat) == 0x000290, "Member 'UW_StatCircle_C::Icon_Shadow_Stat' has a wrong offset!");
static_assert(offsetof(UW_StatCircle_C, Icon_Stat) == 0x000298, "Member 'UW_StatCircle_C::Icon_Stat' has a wrong offset!");
static_assert(offsetof(UW_StatCircle_C, Ring_Value) == 0x0002A0, "Member 'UW_StatCircle_C::Ring_Value' has a wrong offset!");
static_assert(offsetof(UW_StatCircle_C, IconSprite) == 0x0002A8, "Member 'UW_StatCircle_C::IconSprite' has a wrong offset!");
static_assert(offsetof(UW_StatCircle_C, Material) == 0x0002B0, "Member 'UW_StatCircle_C::Material' has a wrong offset!");
static_assert(offsetof(UW_StatCircle_C, CurrentFillValue) == 0x0002B8, "Member 'UW_StatCircle_C::CurrentFillValue' has a wrong offset!");
static_assert(offsetof(UW_StatCircle_C, IsCriticalState) == 0x0002C0, "Member 'UW_StatCircle_C::IsCriticalState' has a wrong offset!");
static_assert(offsetof(UW_StatCircle_C, IconShadow) == 0x0002C8, "Member 'UW_StatCircle_C::IconShadow' has a wrong offset!");

}

