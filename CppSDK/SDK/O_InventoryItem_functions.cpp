#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: O_InventoryItem

#include "Basic.hpp"

#include "O_InventoryItem_classes.hpp"
#include "O_InventoryItem_parameters.hpp"


namespace SDK
{

// Function O_InventoryItem.O_InventoryItem_C.GetCount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Count                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UO_InventoryItem_C::GetCount(int32* Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("O_InventoryItem_C", "GetCount");

	Params::O_InventoryItem_C_GetCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Count != nullptr)
		*Count = Parms.Count;
}


// Function O_InventoryItem.O_InventoryItem_C.GetDurability
// (Public, BlueprintCallable, BlueprintEvent)

void UO_InventoryItem_C::GetDurability()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("O_InventoryItem_C", "GetDurability");

	UObject::ProcessEvent(Func, nullptr);
}


// Function O_InventoryItem.O_InventoryItem_C.GetSize
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   X                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Y                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UO_InventoryItem_C::GetSize(int32* X, int32* Y)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("O_InventoryItem_C", "GetSize");

	Params::O_InventoryItem_C_GetSize Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (X != nullptr)
		*X = Parms.X;

	if (Y != nullptr)
		*Y = Parms.Y;
}


// Function O_InventoryItem.O_InventoryItem_C.IsInSlot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   X                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Y                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InSlot                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UO_InventoryItem_C::IsInSlot(int32 X, int32 Y, bool* InSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("O_InventoryItem_C", "IsInSlot");

	Params::O_InventoryItem_C_IsInSlot Parms{};

	Parms.X = X;
	Parms.Y = Y;

	UObject::ProcessEvent(Func, &Parms);

	if (InSlot != nullptr)
		*InSlot = Parms.InSlot;
}


// Function O_InventoryItem.O_InventoryItem_C.ItemAddedToInventory
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UInventoryComponent_C*            Inventory                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   X                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Y                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UO_InventoryItem_C::ItemAddedToInventory(class UInventoryComponent_C* Inventory, int32 X, int32 Y)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("O_InventoryItem_C", "ItemAddedToInventory");

	Params::O_InventoryItem_C_ItemAddedToInventory Parms{};

	Parms.Inventory = Inventory;
	Parms.X = X;
	Parms.Y = Y;

	UObject::ProcessEvent(Func, &Parms);
}


// Function O_InventoryItem.O_InventoryItem_C.SetCount
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UO_InventoryItem_C::SetCount(int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("O_InventoryItem_C", "SetCount");

	Params::O_InventoryItem_C_SetCount Parms{};

	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);
}

}

