#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SurvPC

#include "Basic.hpp"

#include "SurvPC_classes.hpp"
#include "SurvPC_parameters.hpp"


namespace SDK
{

// Function SurvPC.SurvPC_C.ActivateTowersIconsGPS
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IconHiden                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::ActivateTowersIconsGPS(bool IconHiden)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ActivateTowersIconsGPS");

	Params::SurvPC_C_ActivateTowersIconsGPS Parms{};

	Parms.IconHiden = IconHiden;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.ActivateZombiesAI
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::ActivateZombiesAI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ActivateZombiesAI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.Add Bullet Decal
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UDecalComponent*                  NewItem                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::Add_Bullet_Decal(const class UDecalComponent*& NewItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "Add Bullet Decal");

	Params::SurvPC_C_Add_Bullet_Decal Parms{};

	Parms.NewItem = NewItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.AddNew2DSound
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFMODEventInstance               NewItem                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)

void ASurvPC_C::AddNew2DSound(const struct FFMODEventInstance& NewItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "AddNew2DSound");

	Params::SurvPC_C_AddNew2DSound Parms{};

	Parms.NewItem = std::move(NewItem);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.AddSkillPoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::AddSkillPoint(int32 Value, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "AddSkillPoint");

	Params::SurvPC_C_AddSkillPoint Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function SurvPC.SurvPC_C.AddXP
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  XP                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Sender                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void ASurvPC_C::AddXP(double XP, const class FText& Sender)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "AddXP");

	Params::SurvPC_C_AddXP Parms{};

	Parms.XP = XP;
	Parms.Sender = std::move(Sender);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.AllowCanControlWorldOrigin
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::AllowCanControlWorldOrigin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "AllowCanControlWorldOrigin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.BeginQuestTrack
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UQuestContext*                    Context                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::BeginQuestTrack(class UQuestContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "BeginQuestTrack");

	Params::SurvPC_C_BeginQuestTrack Parms{};

	Parms.Context = Context;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.BindReadyToLoad__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::BindReadyToLoad__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "BindReadyToLoad__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.BindShowTutorialQuestReward
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             QuestName                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             QuestText                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// TMap<class FString, int32>              Param_Reward_Items                                     (BlueprintVisible, BlueprintReadOnly, Parm)
// int32                                   Param_Reward_Rp                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::BindShowTutorialQuestReward(const class FText& QuestName, const class FText& QuestText, const TMap<class FString, int32>& Param_Reward_Items, int32 Param_Reward_Rp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "BindShowTutorialQuestReward");

	Params::SurvPC_C_BindShowTutorialQuestReward Parms{};

	Parms.QuestName = std::move(QuestName);
	Parms.QuestText = std::move(QuestText);
	Parms.Param_Reward_Items = std::move(Param_Reward_Items);
	Parms.Param_Reward_Rp = Param_Reward_Rp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.BlockControlRotation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    SetBlock                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::BlockControlRotation(bool SetBlock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "BlockControlRotation");

	Params::SurvPC_C_BlockControlRotation Parms{};

	Parms.SetBlock = SetBlock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.CallFireModeChanged
// (BlueprintCallable, BlueprintEvent)

void ASurvPC_C::CallFireModeChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "CallFireModeChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.ChangeQuestHint
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Hint                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ASurvPC_C::ChangeQuestHint(const class FString& Hint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ChangeQuestHint");

	Params::SurvPC_C_ChangeQuestHint Parms{};

	Parms.Hint = std::move(Hint);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.ChangeWorldOrigin
// (BlueprintCallable, BlueprintEvent)

void ASurvPC_C::ChangeWorldOrigin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ChangeWorldOrigin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.CheckRenderedPawn_MULTI
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Param_Pawn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::CheckRenderedPawn_MULTI(class AActor* Param_Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "CheckRenderedPawn_MULTI");

	Params::SurvPC_C_CheckRenderedPawn_MULTI Parms{};

	Parms.Param_Pawn = Param_Pawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.CheckRenderedPawn_SERV
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsRendered                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::CheckRenderedPawn_SERV(bool IsRendered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "CheckRenderedPawn_SERV");

	Params::SurvPC_C_CheckRenderedPawn_SERV Parms{};

	Parms.IsRendered = IsRendered;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.CheckTutorialNeedReset
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::CheckTutorialNeedReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "CheckTutorialNeedReset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.ClearMarkers
// (BlueprintCallable, BlueprintEvent)

void ASurvPC_C::ClearMarkers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ClearMarkers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.ClearQuestSaves
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::ClearQuestSaves()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ClearQuestSaves");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.ClearRest
// (BlueprintCallable, BlueprintEvent)

void ASurvPC_C::ClearRest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ClearRest");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.ClearRPQInfo
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::ClearRPQInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ClearRPQInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.ClearTowersIndexes
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::ClearTowersIndexes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ClearTowersIndexes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.ClientShowAllDeers
// (Net, NetReliable, HasOutParams, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABP_DeerV2_C*>             Deers                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ASurvPC_C::ClientShowAllDeers(const TArray<class ABP_DeerV2_C*>& Deers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ClientShowAllDeers");

	Params::SurvPC_C_ClientShowAllDeers Parms{};

	Parms.Deers = std::move(Deers);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.CloseTabsWindow
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::CloseTabsWindow(bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "CloseTabsWindow");

	Params::SurvPC_C_CloseTabsWindow Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function SurvPC.SurvPC_C.CompleteQuest_Owning
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     MessageTag                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UQuest*                           Quest                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::CompleteQuest_Owning(const struct FGameplayTag& MessageTag, class UQuest* Quest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "CompleteQuest_Owning");

	Params::SurvPC_C_CompleteQuest_Owning Parms{};

	Parms.MessageTag = std::move(MessageTag);
	Parms.Quest = Quest;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.CompleteQuest_Serv
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     MessageTag                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UQuest*                           Quest                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::CompleteQuest_Serv(const struct FGameplayTag& MessageTag, class UQuest* Quest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "CompleteQuest_Serv");

	Params::SurvPC_C_CompleteQuest_Serv Parms{};

	Parms.MessageTag = std::move(MessageTag);
	Parms.Quest = Quest;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.ConfirmJoin
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           PlayFabID                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ASurvPC_C::ConfirmJoin(const class FString& PlayFabID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ConfirmJoin");

	Params::SurvPC_C_ConfirmJoin Parms{};

	Parms.PlayFabID = std::move(PlayFabID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.ControlOriginByDistance
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::ControlOriginByDistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ControlOriginByDistance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.CostilBlackScreen
// (BlueprintCallable, BlueprintEvent)

void ASurvPC_C::CostilBlackScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "CostilBlackScreen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.CreateAccount
// (BlueprintCallable, BlueprintEvent)

void ASurvPC_C::CreateAccount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "CreateAccount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.CreateContainerAtLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ELootGeneratorType                      GenericLootType                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UDataTable*                       CustomAsset                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText                             ContainerName                                          (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FVector                          CustomOffset                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UStaticMesh*                      CustomMesh                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  AttachTo                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class FName                             SocketName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::CreateContainerAtLocation(const struct FVector& Location, ELootGeneratorType GenericLootType, class UDataTable* CustomAsset, const class FText& ContainerName, const struct FVector& CustomOffset, class UStaticMesh* CustomMesh, class USceneComponent* AttachTo, class FName SocketName, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "CreateContainerAtLocation");

	Params::SurvPC_C_CreateContainerAtLocation Parms{};

	Parms.Location = std::move(Location);
	Parms.GenericLootType = GenericLootType;
	Parms.CustomAsset = CustomAsset;
	Parms.ContainerName = std::move(ContainerName);
	Parms.CustomOffset = std::move(CustomOffset);
	Parms.CustomMesh = CustomMesh;
	Parms.AttachTo = AttachTo;
	Parms.SocketName = SocketName;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function SurvPC.SurvPC_C.CreateContainerWithDrop
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           ContainerName                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FVector                          ContainerOffset                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FDropItemEntry>           DropItems                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::CreateContainerWithDrop(const struct FVector& Location, const class FString& ContainerName, const struct FVector& ContainerOffset, TArray<struct FDropItemEntry>& DropItems, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "CreateContainerWithDrop");

	Params::SurvPC_C_CreateContainerWithDrop Parms{};

	Parms.Location = std::move(Location);
	Parms.ContainerName = std::move(ContainerName);
	Parms.ContainerOffset = std::move(ContainerOffset);
	Parms.DropItems = std::move(DropItems);

	UObject::ProcessEvent(Func, &Parms);

	DropItems = std::move(Parms.DropItems);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function SurvPC.SurvPC_C.CreatePlayFabID
// (BlueprintCallable, BlueprintEvent)

void ASurvPC_C::CreatePlayFabID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "CreatePlayFabID");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.DeactivateZombiesAI
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::DeactivateZombiesAI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "DeactivateZombiesAI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.DisplayLocation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewTime                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::DisplayLocation(float NewTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "DisplayLocation");

	Params::SurvPC_C_DisplayLocation Parms{};

	Parms.NewTime = NewTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.DisplayLocationTimeline__FinishedFunc
// (BlueprintEvent)

void ASurvPC_C::DisplayLocationTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "DisplayLocationTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.DisplayLocationTimeline__UpdateFunc
// (BlueprintEvent)

void ASurvPC_C::DisplayLocationTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "DisplayLocationTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.DLSSStatW
// (BlueprintCallable, BlueprintEvent)

void ASurvPC_C::DLSSStatW()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "DLSSStatW");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.DontHighlightActors
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::DontHighlightActors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "DontHighlightActors");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.EasyQuestsCompleted
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Completed                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::EasyQuestsCompleted(bool* Completed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "EasyQuestsCompleted");

	Params::SurvPC_C_EasyQuestsCompleted Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Completed != nullptr)
		*Completed = Parms.Completed;
}


// Function SurvPC.SurvPC_C.EndLoadingScreen
// (BlueprintCallable, BlueprintEvent)

void ASurvPC_C::EndLoadingScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "EndLoadingScreen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.EndTutorialOwning
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::EndTutorialOwning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "EndTutorialOwning");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.EventEndTutorial
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::EventEndTutorial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "EventEndTutorial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.ExecuteConsoleCommands
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::ExecuteConsoleCommands()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ExecuteConsoleCommands");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.ExecuteUbergraph_SurvPC
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::ExecuteUbergraph_SurvPC(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ExecuteUbergraph_SurvPC");

	Params::SurvPC_C_ExecuteUbergraph_SurvPC Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.FindPlayerStartForRegion
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Region                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerStart*                     Start                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::FindPlayerStartForRegion(class FName Region, class APlayerStart** Start)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "FindPlayerStartForRegion");

	Params::SurvPC_C_FindPlayerStartForRegion Parms{};

	Parms.Region = Region;

	UObject::ProcessEvent(Func, &Parms);

	if (Start != nullptr)
		*Start = Parms.Start;
}


// Function SurvPC.SurvPC_C.FindPlayerStartLocationForRegion
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Region                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::FindPlayerStartLocationForRegion(const class FString& Region, struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "FindPlayerStartLocationForRegion");

	Params::SurvPC_C_FindPlayerStartLocationForRegion Parms{};

	Parms.Region = std::move(Region);

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function SurvPC.SurvPC_C.FinishHoldInteract
// (BlueprintCallable, BlueprintEvent)

void ASurvPC_C::FinishHoldInteract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "FinishHoldInteract");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.FinishQuestRemotely
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::FinishQuestRemotely(int32 NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "FinishQuestRemotely");

	Params::SurvPC_C_FinishQuestRemotely Parms{};

	Parms.NewParam = NewParam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.FirebaseArrayToStringArray
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FFirestoreFieldValue>     Value                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class FString>                   Result                                                 (Parm, OutParm)

void ASurvPC_C::FirebaseArrayToStringArray(const TArray<struct FFirestoreFieldValue>& Value, TArray<class FString>* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "FirebaseArrayToStringArray");

	Params::SurvPC_C_FirebaseArrayToStringArray Parms{};

	Parms.Value = std::move(Value);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function SurvPC.SurvPC_C.FireModeChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBPE_FireMode                           FireMode                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::FireModeChanged__DelegateSignature(EBPE_FireMode FireMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "FireModeChanged__DelegateSignature");

	Params::SurvPC_C_FireModeChanged__DelegateSignature Parms{};

	Parms.FireMode = FireMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.FireSoundOffServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::FireSoundOffServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "FireSoundOffServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.FireSoundServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class UFMODEvent>        FireSoundEvent                                         (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// float                                   IndoorShot                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::FireSoundServer(TSoftObjectPtr<class UFMODEvent> FireSoundEvent, float IndoorShot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "FireSoundServer");

	Params::SurvPC_C_FireSoundServer Parms{};

	Parms.FireSoundEvent = FireSoundEvent;
	Parms.IndoorShot = IndoorShot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.FocusChatTextEntry
// (BlueprintCallable, BlueprintEvent)

void ASurvPC_C::FocusChatTextEntry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "FocusChatTextEntry");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.GetAllActiveZombies
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::GetAllActiveZombies()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "GetAllActiveZombies");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.GetBeginner
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsBeginner                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::GetBeginner(bool* bIsBeginner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "GetBeginner");

	Params::SurvPC_C_GetBeginner Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bIsBeginner != nullptr)
		*bIsBeginner = Parms.bIsBeginner;
}


// Function SurvPC.SurvPC_C.GetBlackScreenWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_BlackScreen_C*                 Widget                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::GetBlackScreenWidget(class UW_BlackScreen_C** Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "GetBlackScreenWidget");

	Params::SurvPC_C_GetBlackScreenWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Widget != nullptr)
		*Widget = Parms.Widget;
}


// Function SurvPC.SurvPC_C.GetCarGameWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_CarGame_C*                   CarGameWidget                                          (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::GetCarGameWidget(class UWBP_CarGame_C** CarGameWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "GetCarGameWidget");

	Params::SurvPC_C_GetCarGameWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CarGameWidget != nullptr)
		*CarGameWidget = Parms.CarGameWidget;
}


// Function SurvPC.SurvPC_C.GetCarUpgradeWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_CarUpgradeMenu_C*              Widget                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::GetCarUpgradeWidget(class UW_CarUpgradeMenu_C** Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "GetCarUpgradeWidget");

	Params::SurvPC_C_GetCarUpgradeWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Widget != nullptr)
		*Widget = Parms.Widget;
}


// Function SurvPC.SurvPC_C.GetChatMessage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             TextToSend                                             (BlueprintVisible, BlueprintReadOnly, Parm)

void ASurvPC_C::GetChatMessage(const class FText& TextToSend)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "GetChatMessage");

	Params::SurvPC_C_GetChatMessage Parms{};

	Parms.TextToSend = std::move(TextToSend);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.GetCraftWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUI_CraftWindow_C*                NewCraftWidget                                         (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::GetCraftWidget(class UUI_CraftWindow_C** NewCraftWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "GetCraftWidget");

	Params::SurvPC_C_GetCraftWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewCraftWidget != nullptr)
		*NewCraftWidget = Parms.NewCraftWidget;
}


// Function SurvPC.SurvPC_C.GetCraftWindowOpened
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Opened                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::GetCraftWindowOpened(bool* Opened)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "GetCraftWindowOpened");

	Params::SurvPC_C_GetCraftWindowOpened Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Opened != nullptr)
		*Opened = Parms.Opened;
}


// Function SurvPC.SurvPC_C.GetCurrentXP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::GetCurrentXP(double* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "GetCurrentXP");

	Params::SurvPC_C_GetCurrentXP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function SurvPC.SurvPC_C.GetId
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param_ID                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void ASurvPC_C::GetId(class FString* Param_ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "GetId");

	Params::SurvPC_C_GetId Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_ID != nullptr)
		*Param_ID = std::move(Parms.Param_ID);
}


// Function SurvPC.SurvPC_C.GetInventoryMessageWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_CapacityMessage_C*             Widget                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::GetInventoryMessageWidget(class UW_CapacityMessage_C** Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "GetInventoryMessageWidget");

	Params::SurvPC_C_GetInventoryMessageWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Widget != nullptr)
		*Widget = Parms.Widget;
}


// Function SurvPC.SurvPC_C.GetInventoryWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMPInGameInventory_C*             Widget                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::GetInventoryWidget(class UMPInGameInventory_C** Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "GetInventoryWidget");

	Params::SurvPC_C_GetInventoryWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Widget != nullptr)
		*Widget = Parms.Widget;
}


// Function SurvPC.SurvPC_C.GetIsBeginner
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsBeginner                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::GetIsBeginner(bool* IsBeginner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "GetIsBeginner");

	Params::SurvPC_C_GetIsBeginner Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsBeginner != nullptr)
		*IsBeginner = Parms.IsBeginner;
}


// Function SurvPC.SurvPC_C.GetLoginData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    HasData                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USG_LoginData_C*                  Data                                                   (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::GetLoginData(bool* HasData, class USG_LoginData_C** Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "GetLoginData");

	Params::SurvPC_C_GetLoginData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HasData != nullptr)
		*HasData = Parms.HasData;

	if (Data != nullptr)
		*Data = Parms.Data;
}


// Function SurvPC.SurvPC_C.GetLootZoneType
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ELG2_LootRareType                       Type                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::GetLootZoneType(const struct FVector& Location, ELG2_LootRareType* Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "GetLootZoneType");

	Params::SurvPC_C_GetLootZoneType Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);

	if (Type != nullptr)
		*Type = Parms.Type;
}


// Function SurvPC.SurvPC_C.GetMaxXP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::GetMaxXP(double* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "GetMaxXP");

	Params::SurvPC_C_GetMaxXP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function SurvPC.SurvPC_C.GetNextQuests
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    EbbyQuestsIgnore                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UQuest*>                   Quests                                                 (Parm, OutParm)

void ASurvPC_C::GetNextQuests(bool EbbyQuestsIgnore, TArray<class UQuest*>* Quests)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "GetNextQuests");

	Params::SurvPC_C_GetNextQuests Parms{};

	Parms.EbbyQuestsIgnore = EbbyQuestsIgnore;

	UObject::ProcessEvent(Func, &Parms);

	if (Quests != nullptr)
		*Quests = std::move(Parms.Quests);
}


// Function SurvPC.SurvPC_C.GetPlayerGUI
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUIW_PlayerMain_C*                GUI                                                    (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::GetPlayerGUI(class UUIW_PlayerMain_C** GUI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "GetPlayerGUI");

	Params::SurvPC_C_GetPlayerGUI Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (GUI != nullptr)
		*GUI = Parms.GUI;
}


// Function SurvPC.SurvPC_C.GetPlayerRef
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASurvivalPlayer_C*                SurvivalPlayer                                         (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::GetPlayerRef(class ASurvivalPlayer_C** SurvivalPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "GetPlayerRef");

	Params::SurvPC_C_GetPlayerRef Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SurvivalPlayer != nullptr)
		*SurvivalPlayer = Parms.SurvivalPlayer;
}


// Function SurvPC.SurvPC_C.GetQuestComponents
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UQuestComponent*                  Quest                                                  (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UQuestTrackerComponent*           Param_QuestTracker                                     (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::GetQuestComponents(class UQuestComponent** Quest, class UQuestTrackerComponent** Param_QuestTracker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "GetQuestComponents");

	Params::SurvPC_C_GetQuestComponents Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Quest != nullptr)
		*Quest = Parms.Quest;

	if (Param_QuestTracker != nullptr)
		*Param_QuestTracker = Parms.Param_QuestTracker;
}


// Function SurvPC.SurvPC_C.GetResurrectLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::GetResurrectLocation(struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "GetResurrectLocation");

	Params::SurvPC_C_GetResurrectLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function SurvPC.SurvPC_C.GetSkillPoints
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::GetSkillPoints(int32* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "GetSkillPoints");

	Params::SurvPC_C_GetSkillPoints Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function SurvPC.SurvPC_C.GetSpawnZoneType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EAISpawnZoneType                        Type                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::GetSpawnZoneType(const struct FVector& Location, EAISpawnZoneType* Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "GetSpawnZoneType");

	Params::SurvPC_C_GetSpawnZoneType Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);

	if (Type != nullptr)
		*Type = Parms.Type;
}


// Function SurvPC.SurvPC_C.getSteamID
// (BlueprintCallable, BlueprintEvent)

void ASurvPC_C::GetSteamID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "getSteamID");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.GetTabsWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_TabsWindow_C*                  Widget                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::GetTabsWidget(class UW_TabsWindow_C** Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "GetTabsWidget");

	Params::SurvPC_C_GetTabsWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Widget != nullptr)
		*Widget = Parms.Widget;
}


// Function SurvPC.SurvPC_C.GetTeleportingToStash
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    From_Raid                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::GetTeleportingToStash(bool* From_Raid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "GetTeleportingToStash");

	Params::SurvPC_C_GetTeleportingToStash Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (From_Raid != nullptr)
		*From_Raid = Parms.From_Raid;
}


// Function SurvPC.SurvPC_C.GetTutorialDrinkWaterStage_ItemName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             Param_Name                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::GetTutorialDrinkWaterStage_ItemName(class FName* Param_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "GetTutorialDrinkWaterStage_ItemName");

	Params::SurvPC_C_GetTutorialDrinkWaterStage_ItemName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Name != nullptr)
		*Param_Name = Parms.Param_Name;
}


// Function SurvPC.SurvPC_C.GetTutorialQuestRef
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UQuestContext*                    TutorialQuest                                          (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::GetTutorialQuestRef(class UQuestContext** TutorialQuest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "GetTutorialQuestRef");

	Params::SurvPC_C_GetTutorialQuestRef Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TutorialQuest != nullptr)
		*TutorialQuest = Parms.TutorialQuest;
}


// Function SurvPC.SurvPC_C.GetTutorStage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           StageName                                              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void ASurvPC_C::GetTutorStage(class FString* StageName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "GetTutorStage");

	Params::SurvPC_C_GetTutorStage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (StageName != nullptr)
		*StageName = std::move(Parms.StageName);
}


// Function SurvPC.SurvPC_C.GetWidgetIsOpened
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    WidgetIsOpened                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::GetWidgetIsOpened(bool* WidgetIsOpened)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "GetWidgetIsOpened");

	Params::SurvPC_C_GetWidgetIsOpened Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (WidgetIsOpened != nullptr)
		*WidgetIsOpened = Parms.WidgetIsOpened;
}


// Function SurvPC.SurvPC_C.HandleChatMessage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Sender                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// EChatType                               Param_ChatType                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SquadId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          SenderLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APS_TDB_C*                        SenderPS                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::HandleChatMessage(const class FText& Sender, const class FText& Text, EChatType Param_ChatType, int32 SquadId, const struct FVector& SenderLocation, class APS_TDB_C* SenderPS)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "HandleChatMessage");

	Params::SurvPC_C_HandleChatMessage Parms{};

	Parms.Sender = std::move(Sender);
	Parms.Text = std::move(Text);
	Parms.Param_ChatType = Param_ChatType;
	Parms.SquadId = SquadId;
	Parms.SenderLocation = std::move(SenderLocation);
	Parms.SenderPS = SenderPS;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.HandleClientWasKicked
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             KickReason                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ASurvPC_C::HandleClientWasKicked(const class FText& KickReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "HandleClientWasKicked");

	Params::SurvPC_C_HandleClientWasKicked Parms{};

	Parms.KickReason = std::move(KickReason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.HideAllQuestMarks
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::HideAllQuestMarks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "HideAllQuestMarks");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.HidePlayers
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Hide                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    HideAll                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::HidePlayers(bool Hide, bool HideAll)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "HidePlayers");

	Params::SurvPC_C_HidePlayers Parms{};

	Parms.Hide = Hide;
	Parms.HideAll = HideAll;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.HideQuestUI
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Hide                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::HideQuestUI(bool Hide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "HideQuestUI");

	Params::SurvPC_C_HideQuestUI Parms{};

	Parms.Hide = Hide;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.Highlight ActorsToggle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Highlight                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::Highlight_ActorsToggle(bool Highlight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "Highlight ActorsToggle");

	Params::SurvPC_C_Highlight_ActorsToggle Parms{};

	Parms.Highlight = Highlight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.HouseAlarmSoundClient
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::HouseAlarmSoundClient(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "HouseAlarmSoundClient");

	Params::SurvPC_C_HouseAlarmSoundClient Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.HouseAlarmSoundOffClient
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::HouseAlarmSoundOffClient(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "HouseAlarmSoundOffClient");

	Params::SurvPC_C_HouseAlarmSoundOffClient Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.Init
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.Init Next Quest
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::Init_Next_Quest(bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "Init Next Quest");

	Params::SurvPC_C_Init_Next_Quest Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function SurvPC.SurvPC_C.InitAllFirstsNPCQuests
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    TutorEvent_                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::InitAllFirstsNPCQuests(bool TutorEvent_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "InitAllFirstsNPCQuests");

	Params::SurvPC_C_InitAllFirstsNPCQuests Parms{};

	Parms.TutorEvent_ = TutorEvent_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.InitCompletedQuests
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::InitCompletedQuests()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "InitCompletedQuests");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.InitFirstsQuests
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    EbbyQuestsIgnore                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Delay                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::InitFirstsQuests(bool EbbyQuestsIgnore, double Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "InitFirstsQuests");

	Params::SurvPC_C_InitFirstsQuests Parms{};

	Parms.EbbyQuestsIgnore = EbbyQuestsIgnore;
	Parms.Delay = Delay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.InitQuestDescription
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UQuestContext*                    Context                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::InitQuestDescription(class UQuestContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "InitQuestDescription");

	Params::SurvPC_C_InitQuestDescription Parms{};

	Parms.Context = Context;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.InitQuests
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InitSaveQuests                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::InitQuests(bool InitSaveQuests)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "InitQuests");

	Params::SurvPC_C_InitQuests Parms{};

	Parms.InitSaveQuests = InitSaveQuests;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.InitRPZone_Owning
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_QuestZone_C*                  Param_CurrentActiveZone                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::InitRPZone_Owning(class ABP_QuestZone_C* Param_CurrentActiveZone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "InitRPZone_Owning");

	Params::SurvPC_C_InitRPZone_Owning Parms{};

	Parms.Param_CurrentActiveZone = Param_CurrentActiveZone;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.InitRPZone_Serv
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Progress                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Random                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::InitRPZone_Serv(bool Progress, bool Random)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "InitRPZone_Serv");

	Params::SurvPC_C_InitRPZone_Serv Parms{};

	Parms.Progress = Progress;
	Parms.Random = Random;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.InpActEvt_Accept_K2Node_InputActionEvent_7
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvPC_C::InpActEvt_Accept_K2Node_InputActionEvent_7(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "InpActEvt_Accept_K2Node_InputActionEvent_7");

	Params::SurvPC_C_InpActEvt_Accept_K2Node_InputActionEvent_7 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.InpActEvt_Accept_K2Node_InputActionEvent_8
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvPC_C::InpActEvt_Accept_K2Node_InputActionEvent_8(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "InpActEvt_Accept_K2Node_InputActionEvent_8");

	Params::SurvPC_C_InpActEvt_Accept_K2Node_InputActionEvent_8 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.InpActEvt_BaseBuilding_Exit_K2Node_InputActionEvent_2
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvPC_C::InpActEvt_BaseBuilding_Exit_K2Node_InputActionEvent_2(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "InpActEvt_BaseBuilding_Exit_K2Node_InputActionEvent_2");

	Params::SurvPC_C_InpActEvt_BaseBuilding_Exit_K2Node_InputActionEvent_2 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.InpActEvt_ChangeFireMode_K2Node_InputActionEvent_6
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvPC_C::InpActEvt_ChangeFireMode_K2Node_InputActionEvent_6(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "InpActEvt_ChangeFireMode_K2Node_InputActionEvent_6");

	Params::SurvPC_C_InpActEvt_ChangeFireMode_K2Node_InputActionEvent_6 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.InpActEvt_Decline_K2Node_InputActionEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvPC_C::InpActEvt_Decline_K2Node_InputActionEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "InpActEvt_Decline_K2Node_InputActionEvent_0");

	Params::SurvPC_C_InpActEvt_Decline_K2Node_InputActionEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.InpActEvt_Decline_K2Node_InputActionEvent_1
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvPC_C::InpActEvt_Decline_K2Node_InputActionEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "InpActEvt_Decline_K2Node_InputActionEvent_1");

	Params::SurvPC_C_InpActEvt_Decline_K2Node_InputActionEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.InpActEvt_Jump_K2Node_InputActionEvent_3
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvPC_C::InpActEvt_Jump_K2Node_InputActionEvent_3(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "InpActEvt_Jump_K2Node_InputActionEvent_3");

	Params::SurvPC_C_InpActEvt_Jump_K2Node_InputActionEvent_3 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.InpActEvt_OpenPauseMenu_K2Node_InputActionEvent_9
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvPC_C::InpActEvt_OpenPauseMenu_K2Node_InputActionEvent_9(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "InpActEvt_OpenPauseMenu_K2Node_InputActionEvent_9");

	Params::SurvPC_C_InpActEvt_OpenPauseMenu_K2Node_InputActionEvent_9 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.InpActEvt_RightControl_K2Node_InputKeyEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvPC_C::InpActEvt_RightControl_K2Node_InputKeyEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "InpActEvt_RightControl_K2Node_InputKeyEvent_0");

	Params::SurvPC_C_InpActEvt_RightControl_K2Node_InputKeyEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.InpActEvt_TextChat_K2Node_InputActionEvent_4
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvPC_C::InpActEvt_TextChat_K2Node_InputActionEvent_4(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "InpActEvt_TextChat_K2Node_InputActionEvent_4");

	Params::SurvPC_C_InpActEvt_TextChat_K2Node_InputActionEvent_4 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.InpActEvt_WeaponSlot6_K2Node_InputActionEvent_5
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvPC_C::InpActEvt_WeaponSlot6_K2Node_InputActionEvent_5(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "InpActEvt_WeaponSlot6_K2Node_InputActionEvent_5");

	Params::SurvPC_C_InpActEvt_WeaponSlot6_K2Node_InputActionEvent_5 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.InvisibleZombieStat
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::InvisibleZombieStat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "InvisibleZombieStat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.IsDialogOpen
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsOpen                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::IsDialogOpen(bool* IsOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "IsDialogOpen");

	Params::SurvPC_C_IsDialogOpen Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsOpen != nullptr)
		*IsOpen = Parms.IsOpen;
}


// Function SurvPC.SurvPC_C.IsRendered?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Param_Pawn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    IsRendered                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::IsRendered_(class AActor* Param_Pawn, bool* IsRendered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "IsRendered?");

	Params::SurvPC_C_IsRendered_ Parms{};

	Parms.Param_Pawn = Param_Pawn;

	UObject::ProcessEvent(Func, &Parms);

	if (IsRendered != nullptr)
		*IsRendered = Parms.IsRendered;
}


// Function SurvPC.SurvPC_C.IsSpecQuest
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TSet<class UQuest*>                     CurrentContextQuests                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ASurvPC_C::IsSpecQuest(const TSet<class UQuest*>& CurrentContextQuests)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "IsSpecQuest");

	Params::SurvPC_C_IsSpecQuest Parms{};

	Parms.CurrentContextQuests = std::move(CurrentContextQuests);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SurvPC.SurvPC_C.LoadCompleted
// (BlueprintCallable, BlueprintEvent)

void ASurvPC_C::LoadCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "LoadCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.LoadingScreen
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ASurvPC_C::LoadingScreen(const struct FVector& Location, const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "LoadingScreen");

	Params::SurvPC_C_LoadingScreen Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.LoadingSeqStoped
// (BlueprintCallable, BlueprintEvent)

void ASurvPC_C::LoadingSeqStoped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "LoadingSeqStoped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.LoadPlayerPos
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Exist                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          PlayerPos                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::LoadPlayerPos(bool* Exist, struct FVector* PlayerPos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "LoadPlayerPos");

	Params::SurvPC_C_LoadPlayerPos Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Exist != nullptr)
		*Exist = Parms.Exist;

	if (PlayerPos != nullptr)
		*PlayerPos = std::move(Parms.PlayerPos);
}


// Function SurvPC.SurvPC_C.LoadTutorialstatus
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::LoadTutorialstatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "LoadTutorialstatus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.LoadUserInfo
// (BlueprintCallable, BlueprintEvent)

void ASurvPC_C::LoadUserInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "LoadUserInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.Login
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CreateAccount                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           PlatformUserId                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ASurvPC_C::Login(bool CreateAccount, const class FString& PlatformUserId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "Login");

	Params::SurvPC_C_Login Parms{};

	Parms.CreateAccount = CreateAccount;
	Parms.PlatformUserId = std::move(PlatformUserId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.NewDayEvent
// (BlueprintCallable, BlueprintEvent)

void ASurvPC_C::NewDayEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "NewDayEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.NotifyPlayerJoined
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::NotifyPlayerJoined()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "NotifyPlayerJoined");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.OnAddXP__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Sender                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void ASurvPC_C::OnAddXP__DelegateSignature(double Value, const class FText& Sender)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "OnAddXP__DelegateSignature");

	Params::SurvPC_C_OnAddXP__DelegateSignature Parms{};

	Parms.Value = Value;
	Parms.Sender = std::move(Sender);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.OnBackendInfoLoad__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::OnBackendInfoLoad__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "OnBackendInfoLoad__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.OnChangedPlayerRef__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::OnChangedPlayerRef__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "OnChangedPlayerRef__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.OnChangeQuestHintMulticast
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Hint                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ASurvPC_C::OnChangeQuestHintMulticast(const class FString& Hint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "OnChangeQuestHintMulticast");

	Params::SurvPC_C_OnChangeQuestHintMulticast Parms{};

	Parms.Hint = std::move(Hint);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.OnChatUpdate __DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Param_Chat_text                                        (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             Sender                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void ASurvPC_C::OnChatUpdate___DelegateSignature(const class FText& Param_Chat_text, const class FText& Sender)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "OnChatUpdate __DelegateSignature");

	Params::SurvPC_C_OnChatUpdate___DelegateSignature Parms{};

	Parms.Param_Chat_text = std::move(Param_Chat_text);
	Parms.Sender = std::move(Sender);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.OnEndSequence
// (BlueprintCallable, BlueprintEvent)

void ASurvPC_C::OnEndSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "OnEndSequence");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.OnError_D1E9AB7543CE6654C0C1AE9B6EBBD919
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFirestoreError                         Error                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFirestoreDocumentSnapshot       DocumentSnapshot                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ASurvPC_C::OnError_D1E9AB7543CE6654C0C1AE9B6EBBD919(const EFirestoreError Error, const struct FFirestoreDocumentSnapshot& DocumentSnapshot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "OnError_D1E9AB7543CE6654C0C1AE9B6EBBD919");

	Params::SurvPC_C_OnError_D1E9AB7543CE6654C0C1AE9B6EBBD919 Parms{};

	Parms.Error = Error;
	Parms.DocumentSnapshot = std::move(DocumentSnapshot);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.OnError_F36A4BC64657E2B0074D619D06EC5286
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFirestoreError                         Error                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFirestoreDocumentSnapshot       DocumentSnapshot                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ASurvPC_C::OnError_F36A4BC64657E2B0074D619D06EC5286(const EFirestoreError Error, const struct FFirestoreDocumentSnapshot& DocumentSnapshot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "OnError_F36A4BC64657E2B0074D619D06EC5286");

	Params::SurvPC_C_OnError_F36A4BC64657E2B0074D619D06EC5286 Parms{};

	Parms.Error = Error;
	Parms.DocumentSnapshot = std::move(DocumentSnapshot);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.OnGot_D1E9AB7543CE6654C0C1AE9B6EBBD919
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFirestoreError                         Error                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFirestoreDocumentSnapshot       DocumentSnapshot                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ASurvPC_C::OnGot_D1E9AB7543CE6654C0C1AE9B6EBBD919(const EFirestoreError Error, const struct FFirestoreDocumentSnapshot& DocumentSnapshot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "OnGot_D1E9AB7543CE6654C0C1AE9B6EBBD919");

	Params::SurvPC_C_OnGot_D1E9AB7543CE6654C0C1AE9B6EBBD919 Parms{};

	Parms.Error = Error;
	Parms.DocumentSnapshot = std::move(DocumentSnapshot);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.OnGot_F36A4BC64657E2B0074D619D06EC5286
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFirestoreError                         Error                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFirestoreDocumentSnapshot       DocumentSnapshot                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ASurvPC_C::OnGot_F36A4BC64657E2B0074D619D06EC5286(const EFirestoreError Error, const struct FFirestoreDocumentSnapshot& DocumentSnapshot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "OnGot_F36A4BC64657E2B0074D619D06EC5286");

	Params::SurvPC_C_OnGot_F36A4BC64657E2B0074D619D06EC5286 Parms{};

	Parms.Error = Error;
	Parms.DocumentSnapshot = std::move(DocumentSnapshot);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.OnHintDismiss__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::OnHintDismiss__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "OnHintDismiss__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.OnHoldInteractFinish__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::OnHoldInteractFinish__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "OnHoldInteractFinish__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.OnHoldInteractStart__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvPC_C::OnHoldInteractStart__DelegateSignature(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "OnHoldInteractStart__DelegateSignature");

	Params::SurvPC_C_OnHoldInteractStart__DelegateSignature Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.OnHoldInteractStop__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvPC_C::OnHoldInteractStop__DelegateSignature(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "OnHoldInteractStop__DelegateSignature");

	Params::SurvPC_C_OnHoldInteractStop__DelegateSignature Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.OnInited__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::OnInited__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "OnInited__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.OnNetworkError
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::OnNetworkError()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "OnNetworkError");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.OnPlayFabLoggedIn__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::OnPlayFabLoggedIn__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "OnPlayFabLoggedIn__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.OnPossessPlayer
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::OnPossessPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "OnPossessPlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.OnQuestCompleted__DelegateSignature
// (Public, Delegate, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   QuestSaveData                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ASurvPC_C::OnQuestCompleted__DelegateSignature(TArray<class FString>& QuestSaveData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "OnQuestCompleted__DelegateSignature");

	Params::SurvPC_C_OnQuestCompleted__DelegateSignature Parms{};

	Parms.QuestSaveData = std::move(QuestSaveData);

	UObject::ProcessEvent(Func, &Parms);

	QuestSaveData = std::move(Parms.QuestSaveData);
}


// Function SurvPC.SurvPC_C.OnQuestFinished__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UQuest*                           Quest                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::OnQuestFinished__DelegateSignature(class UQuest* Quest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "OnQuestFinished__DelegateSignature");

	Params::SurvPC_C_OnQuestFinished__DelegateSignature Parms{};

	Parms.Quest = Quest;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.OnQuestStrted__DelegateSignature
// (Public, Delegate, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   Quests                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ASurvPC_C::OnQuestStrted__DelegateSignature(TArray<class FString>& Quests)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "OnQuestStrted__DelegateSignature");

	Params::SurvPC_C_OnQuestStrted__DelegateSignature Parms{};

	Parms.Quests = std::move(Quests);

	UObject::ProcessEvent(Func, &Parms);

	Quests = std::move(Parms.Quests);
}


// Function SurvPC.SurvPC_C.OnQuestTrigger
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Trigger                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ASurvPC_C::OnQuestTrigger(const class FString& Trigger)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "OnQuestTrigger");

	Params::SurvPC_C_OnQuestTrigger Parms{};

	Parms.Trigger = std::move(Trigger);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.OnQuestUpdated__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::OnQuestUpdated__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "OnQuestUpdated__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.OnRep_VehicleRef
// (BlueprintCallable, BlueprintEvent)

void ASurvPC_C::OnRep_VehicleRef()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "OnRep_VehicleRef");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.OnRespawnPlayerClient
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::OnRespawnPlayerClient()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "OnRespawnPlayerClient");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.OnRPZoneInteracted_Server
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FF_RPZoneInfo                    RPZoneStruct                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::OnRPZoneInteracted_Server(const struct FF_RPZoneInfo& RPZoneStruct)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "OnRPZoneInteracted_Server");

	Params::SurvPC_C_OnRPZoneInteracted_Server Parms{};

	Parms.RPZoneStruct = std::move(RPZoneStruct);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.OnSendSteamSessionTicket
// (Event, Protected, BlueprintEvent)

void ASurvPC_C::OnSendSteamSessionTicket()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "OnSendSteamSessionTicket");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.OnServerLogin__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASurvPC_C*                        SurvPC                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::OnServerLogin__DelegateSignature(class ASurvPC_C* SurvPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "OnServerLogin__DelegateSignature");

	Params::SurvPC_C_OnServerLogin__DelegateSignature Parms{};

	Parms.SurvPC = SurvPC;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.OnserverLogined
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASurvPC_C*                        SurvPC                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::OnserverLogined(class ASurvPC_C* SurvPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "OnserverLogined");

	Params::SurvPC_C_OnserverLogined Parms{};

	Parms.SurvPC = SurvPC;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.OnStartEndLoadingScreen__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::OnStartEndLoadingScreen__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "OnStartEndLoadingScreen__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.OnSuccessfulExit__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ExitsCount                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::OnSuccessfulExit__DelegateSignature(int32 ExitsCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "OnSuccessfulExit__DelegateSignature");

	Params::SurvPC_C_OnSuccessfulExit__DelegateSignature Parms{};

	Parms.ExitsCount = ExitsCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.OnTowersIndexesChanges__DelegateSignature
// (Public, Delegate, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>                           TowersIndexes                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ASurvPC_C::OnTowersIndexesChanges__DelegateSignature(TArray<int32>& TowersIndexes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "OnTowersIndexesChanges__DelegateSignature");

	Params::SurvPC_C_OnTowersIndexesChanges__DelegateSignature Parms{};

	Parms.TowersIndexes = std::move(TowersIndexes);

	UObject::ProcessEvent(Func, &Parms);

	TowersIndexes = std::move(Parms.TowersIndexes);
}


// Function SurvPC.SurvPC_C.OnTravelError
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::OnTravelError()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "OnTravelError");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.OnTutorialIndexAdded__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TIndex                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::OnTutorialIndexAdded__DelegateSignature(int32 TIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "OnTutorialIndexAdded__DelegateSignature");

	Params::SurvPC_C_OnTutorialIndexAdded__DelegateSignature Parms{};

	Parms.TIndex = TIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.OnTutorial!ompleted__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Beginner                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::OnTutorial_ompleted__DelegateSignature(bool Beginner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "OnTutorial!ompleted__DelegateSignature");

	Params::SurvPC_C_OnTutorial_ompleted__DelegateSignature Parms{};

	Parms.Beginner = Beginner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.OnTutorStageUpdated__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           TutorialStage                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ASurvPC_C::OnTutorStageUpdated__DelegateSignature(const class FString& TutorialStage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "OnTutorStageUpdated__DelegateSignature");

	Params::SurvPC_C_OnTutorStageUpdated__DelegateSignature Parms{};

	Parms.TutorialStage = std::move(TutorialStage);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.OnUpdateDay__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SetDay                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::OnUpdateDay__DelegateSignature(int32 SetDay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "OnUpdateDay__DelegateSignature");

	Params::SurvPC_C_OnUpdateDay__DelegateSignature Parms{};

	Parms.SetDay = SetDay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.OpenTabsWindow
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_TabType                               Focus                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    WithVehicle                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Succes                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::OpenTabsWindow(E_TabType Focus, bool WithVehicle, bool* Succes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "OpenTabsWindow");

	Params::SurvPC_C_OpenTabsWindow Parms{};

	Parms.Focus = Focus;
	Parms.WithVehicle = WithVehicle;

	UObject::ProcessEvent(Func, &Parms);

	if (Succes != nullptr)
		*Succes = Parms.Succes;
}


// Function SurvPC.SurvPC_C.PauseQuestTimer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UQuest*                           Quest                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Unpause                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::PauseQuestTimer(class UQuest* Quest, bool Unpause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "PauseQuestTimer");

	Params::SurvPC_C_PauseQuestTimer Parms{};

	Parms.Quest = Quest;
	Parms.Unpause = Unpause;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.PerformRPQAction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_Works                                 WorkType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ProgressZone                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::PerformRPQAction(E_Works WorkType, bool ProgressZone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "PerformRPQAction");

	Params::SurvPC_C_PerformRPQAction Parms{};

	Parms.WorkType = WorkType;
	Parms.ProgressZone = ProgressZone;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.PlayerPawnIsPossessed__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASurvivalPlayer_C*                PlayerPawn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::PlayerPawnIsPossessed__DelegateSignature(class ASurvivalPlayer_C* PlayerPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "PlayerPawnIsPossessed__DelegateSignature");

	Params::SurvPC_C_PlayerPawnIsPossessed__DelegateSignature Parms{};

	Parms.PlayerPawn = PlayerPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.PlayerSpawnedClientSide
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::PlayerSpawnedClientSide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "PlayerSpawnedClientSide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.PlayRPQAnims
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::PlayRPQAnims()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "PlayRPQAnims");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.PostMsg
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Sender                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// EChatType                               Param_ChatType                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SquadId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          SenderLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APS_TDB_C*                        SenderPS                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::PostMsg(const class FText& Sender, const class FText& Text, EChatType Param_ChatType, int32 SquadId, const struct FVector& SenderLocation, class APS_TDB_C* SenderPS)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "PostMsg");

	Params::SurvPC_C_PostMsg Parms{};

	Parms.Sender = std::move(Sender);
	Parms.Text = std::move(Text);
	Parms.Param_ChatType = Param_ChatType;
	Parms.SquadId = SquadId;
	Parms.SenderLocation = std::move(SenderLocation);
	Parms.SenderPS = SenderPS;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.PrintAmountOfActiveZombies
// (Net, NetReliable, HasOutParams, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FVector>                  ZombieLocations                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   SleepingZombies                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DeadZombies                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<bool>                            ReplicatingMovementArr                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<bool>                            DeadArr                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   CityZombies                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::PrintAmountOfActiveZombies(const TArray<struct FVector>& ZombieLocations, int32 SleepingZombies, int32 DeadZombies, TArray<bool>& ReplicatingMovementArr, TArray<bool>& DeadArr, int32 CityZombies)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "PrintAmountOfActiveZombies");

	Params::SurvPC_C_PrintAmountOfActiveZombies Parms{};

	Parms.ZombieLocations = std::move(ZombieLocations);
	Parms.SleepingZombies = SleepingZombies;
	Parms.DeadZombies = DeadZombies;
	Parms.ReplicatingMovementArr = std::move(ReplicatingMovementArr);
	Parms.DeadArr = std::move(DeadArr);
	Parms.CityZombies = CityZombies;

	UObject::ProcessEvent(Func, &Parms);

	ReplicatingMovementArr = std::move(Parms.ReplicatingMovementArr);
	DeadArr = std::move(Parms.DeadArr);
}


// Function SurvPC.SurvPC_C.PrintClientZombies
// (BlueprintCallable, BlueprintEvent)

void ASurvPC_C::PrintClientZombies()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "PrintClientZombies");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.PrintPossessPlaceholder
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::PrintPossessPlaceholder()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "PrintPossessPlaceholder");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.PrintString_Owning
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           InString                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ASurvPC_C::PrintString_Owning(const class FString& InString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "PrintString_Owning");

	Params::SurvPC_C_PrintString_Owning Parms{};

	Parms.InString = std::move(InString);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.ProjectileOptimization
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASurvivalPlayer_V2_C*             Param_Player                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::ProjectileOptimization(class ASurvivalPlayer_V2_C* Param_Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ProjectileOptimization");

	Params::SurvPC_C_ProjectileOptimization Parms{};

	Parms.Param_Player = Param_Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.QuestCheat
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::QuestCheat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "QuestCheat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.RadioTowerFixed
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TowerIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::RadioTowerFixed(int32 TowerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "RadioTowerFixed");

	Params::SurvPC_C_RadioTowerFixed Parms{};

	Parms.TowerIndex = TowerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.ReadyToLoad
// (BlueprintCallable, BlueprintEvent)

void ASurvPC_C::ReadyToLoad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ReadyToLoad");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ASurvPC_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ReceiveEndPlay");

	Params::SurvPC_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.ReceivePossess
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APawn*                            PossessedPawn                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::ReceivePossess(class APawn* PossessedPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ReceivePossess");

	Params::SurvPC_C_ReceivePossess Parms{};

	Parms.PossessedPawn = PossessedPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ReceiveTick");

	Params::SurvPC_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.RefreshQuest
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UQuest*                           Quest                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::RefreshQuest(class UQuest* Quest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "RefreshQuest");

	Params::SurvPC_C_RefreshQuest Parms{};

	Parms.Quest = Quest;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.RemoveDialogueWidget
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::RemoveDialogueWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "RemoveDialogueWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.RemoveTagSurv_Owning
// (Net, NetReliable, HasOutParams, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Item                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::RemoveTagSurv_Owning(const class FName& Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "RemoveTagSurv_Owning");

	Params::SurvPC_C_RemoveTagSurv_Owning Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.RequireTeleportToRegion
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Region                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::RequireTeleportToRegion(class FName Region)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "RequireTeleportToRegion");

	Params::SurvPC_C_RequireTeleportToRegion Parms{};

	Parms.Region = Region;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.ResetDefaultConsoleValues
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::ResetDefaultConsoleValues()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ResetDefaultConsoleValues");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.ResetShowFirstRaidTutorial
// (BlueprintCallable, BlueprintEvent)

void ASurvPC_C::ResetShowFirstRaidTutorial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ResetShowFirstRaidTutorial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.ResetXP
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::ResetXP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ResetXP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.RespawnPlayerAtLocation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::RespawnPlayerAtLocation(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "RespawnPlayerAtLocation");

	Params::SurvPC_C_RespawnPlayerAtLocation Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.RPAddProgress_UI
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Current                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UQuest*                           Quest                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::RPAddProgress_UI(int32 Current, class UQuest* Quest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "RPAddProgress_UI");

	Params::SurvPC_C_RPAddProgress_UI Parms{};

	Parms.Current = Current;
	Parms.Quest = Quest;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.SaveLoginData
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::SaveLoginData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "SaveLoginData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.SavePlayerPos
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::SavePlayerPos()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "SavePlayerPos");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.SendQuestMessage_Server
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     MessageTag                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::SendQuestMessage_Server(const struct FGameplayTag& MessageTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "SendQuestMessage_Server");

	Params::SurvPC_C_SendQuestMessage_Server Parms{};

	Parms.MessageTag = std::move(MessageTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.SendSteamSessionTicket
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           SteamSessionTicket                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ASurvPC_C::SendSteamSessionTicket(const class FString& SteamSessionTicket)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "SendSteamSessionTicket");

	Params::SurvPC_C_SendSteamSessionTicket Parms{};

	Parms.SteamSessionTicket = std::move(SteamSessionTicket);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.ServChatProc
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Sender                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// EChatType                               Param_ChatType                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SquadId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          SenderLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APS_TDB_C*                        SenderPS                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::ServChatProc(const class FText& Sender, const class FText& Text, EChatType Param_ChatType, int32 SquadId, const struct FVector& SenderLocation, class APS_TDB_C* SenderPS)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ServChatProc");

	Params::SurvPC_C_ServChatProc Parms{};

	Parms.Sender = std::move(Sender);
	Parms.Text = std::move(Text);
	Parms.Param_ChatType = Param_ChatType;
	Parms.SquadId = SquadId;
	Parms.SenderLocation = std::move(SenderLocation);
	Parms.SenderPS = SenderPS;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.ServerCallToggleNetProfile
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::ServerCallToggleNetProfile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ServerCallToggleNetProfile");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.ServerCallToggleStatProfile
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::ServerCallToggleStatProfile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ServerCallToggleStatProfile");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.ServerFindAllDeers
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::ServerFindAllDeers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ServerFindAllDeers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.ServerKillAllActiveDeers
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::ServerKillAllActiveDeers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ServerKillAllActiveDeers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.ServerKillAllActiveZombies
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::ServerKillAllActiveZombies()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ServerKillAllActiveZombies");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.ServerKillNearestZombie
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::ServerKillNearestZombie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ServerKillNearestZombie");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.ServerLocationLoaded__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASurvPC_C*                        SurvPC                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::ServerLocationLoaded__DelegateSignature(class ASurvPC_C* SurvPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ServerLocationLoaded__DelegateSignature");

	Params::SurvPC_C_ServerLocationLoaded__DelegateSignature Parms{};

	Parms.SurvPC = SurvPC;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.ServerPushZombie
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::ServerPushZombie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ServerPushZombie");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.ServerToggleZombieAI
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::ServerToggleZombieAI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ServerToggleZombieAI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.ServerToggleZombieSpawn
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::ServerToggleZombieSpawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ServerToggleZombieSpawn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.SetCharacterCreated
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewCharCreated                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::SetCharacterCreated(bool NewCharCreated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "SetCharacterCreated");

	Params::SurvPC_C_SetCharacterCreated Parms{};

	Parms.NewCharCreated = NewCharCreated;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.SetCraftWindowOpened
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewOpened                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::SetCraftWindowOpened(bool NewOpened, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "SetCraftWindowOpened");

	Params::SurvPC_C_SetCraftWindowOpened Parms{};

	Parms.NewOpened = NewOpened;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function SurvPC.SurvPC_C.SetCurrentQuest_Local
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UQuest*                           AddQuest                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UQuest*                           RemoveQuest                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UQuest*                           Param_SelectedQuest_Local                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::SetCurrentQuest_Local(const class UQuest* AddQuest, const class UQuest* RemoveQuest, class UQuest* Param_SelectedQuest_Local)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "SetCurrentQuest_Local");

	Params::SurvPC_C_SetCurrentQuest_Local Parms{};

	Parms.AddQuest = AddQuest;
	Parms.RemoveQuest = RemoveQuest;
	Parms.Param_SelectedQuest_Local = Param_SelectedQuest_Local;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.SetDialogueWidget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UADSDialogue*                     Dialogue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FName                             NPC_Name                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::SetDialogueWidget(class UADSDialogue* Dialogue, class FName NPC_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "SetDialogueWidget");

	Params::SurvPC_C_SetDialogueWidget Parms{};

	Parms.Dialogue = Dialogue;
	Parms.NPC_Name = NPC_Name;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.SetLoginServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           SteamID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ASurvPC_C::SetLoginServer(const class FString& SteamID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "SetLoginServer");

	Params::SurvPC_C_SetLoginServer Parms{};

	Parms.SteamID = std::move(SteamID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.SetLowSettings
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::SetLowSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "SetLowSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.SetMarkers
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FVector>                  Markers                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ASurvPC_C::SetMarkers(const TArray<struct FVector>& Markers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "SetMarkers");

	Params::SurvPC_C_SetMarkers Parms{};

	Parms.Markers = std::move(Markers);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.SetNewCharCreated_GI
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_NewCharacterCreated                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::SetNewCharCreated_GI(bool Param_NewCharacterCreated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "SetNewCharCreated_GI");

	Params::SurvPC_C_SetNewCharCreated_GI Parms{};

	Parms.Param_NewCharacterCreated = Param_NewCharacterCreated;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.SetPlayerRef
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASurvivalPlayer_C*                Param_Player                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::SetPlayerRef(class ASurvivalPlayer_C* Param_Player, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "SetPlayerRef");

	Params::SurvPC_C_SetPlayerRef Parms{};

	Parms.Param_Player = Param_Player;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function SurvPC.SurvPC_C.SetPlayFabID
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           PlayFabID                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ASurvPC_C::SetPlayFabID(const class FString& PlayFabID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "SetPlayFabID");

	Params::SurvPC_C_SetPlayFabID Parms{};

	Parms.PlayFabID = std::move(PlayFabID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.SetQuestHint
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Hint                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Title                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ASurvPC_C::SetQuestHint(const class FString& Hint, const class FString& Title)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "SetQuestHint");

	Params::SurvPC_C_SetQuestHint Parms{};

	Parms.Hint = std::move(Hint);
	Parms.Title = std::move(Title);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.SetResurrectLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::SetResurrectLocation(const struct FVector& Location, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "SetResurrectLocation");

	Params::SurvPC_C_SetResurrectLocation Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function SurvPC.SurvPC_C.SetTeleportingToStash
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    From_Raid                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::SetTeleportingToStash(bool From_Raid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "SetTeleportingToStash");

	Params::SurvPC_C_SetTeleportingToStash Parms{};

	Parms.From_Raid = From_Raid;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.SetTutorialStage
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           StageName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ASurvPC_C::SetTutorialStage(const class FString& StageName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "SetTutorialStage");

	Params::SurvPC_C_SetTutorialStage Parms{};

	Parms.StageName = std::move(StageName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.SetTutorName_Owning
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           StageName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ASurvPC_C::SetTutorName_Owning(const class FString& StageName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "SetTutorName_Owning");

	Params::SurvPC_C_SetTutorName_Owning Parms{};

	Parms.StageName = std::move(StageName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.SetTutorStage__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           StageName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ASurvPC_C::SetTutorStage__DelegateSignature(const class FString& StageName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "SetTutorStage__DelegateSignature");

	Params::SurvPC_C_SetTutorStage__DelegateSignature Parms{};

	Parms.StageName = std::move(StageName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.SetUpgradeScreen
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewEnabled                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_RB_Vehicle_C*                 Vehicle                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::SetUpgradeScreen(bool NewEnabled, class ABP_RB_Vehicle_C* Vehicle, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "SetUpgradeScreen");

	Params::SurvPC_C_SetUpgradeScreen Parms{};

	Parms.NewEnabled = NewEnabled;
	Parms.Vehicle = Vehicle;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function SurvPC.SurvPC_C.SetUserSettings
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::SetUserSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "SetUserSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.SetYouDiedScreen
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewEnabled                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_DayCount                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ResurrectionTimer                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::SetYouDiedScreen(bool NewEnabled, int32 Param_DayCount, double ResurrectionTimer, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "SetYouDiedScreen");

	Params::SurvPC_C_SetYouDiedScreen Parms{};

	Parms.NewEnabled = NewEnabled;
	Parms.Param_DayCount = Param_DayCount;
	Parms.ResurrectionTimer = ResurrectionTimer;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function SurvPC.SurvPC_C.SetZombieSleepEnabled
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Enabled                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::SetZombieSleepEnabled(int32 Enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "SetZombieSleepEnabled");

	Params::SurvPC_C_SetZombieSleepEnabled Parms{};

	Parms.Enabled = Enabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.SetZombiesMaxAmount
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewMaxZombiesAmount                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::SetZombiesMaxAmount(int32 NewMaxZombiesAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "SetZombiesMaxAmount");

	Params::SurvPC_C_SetZombiesMaxAmount Parms{};

	Parms.NewMaxZombiesAmount = NewMaxZombiesAmount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.ShowAccordingToChatType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param_Player                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// EChatType                               Param_ChatType                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          SourceLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Squad                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::ShowAccordingToChatType(const class FString& Param_Player, const class FString& Text, EChatType Param_ChatType, const struct FVector& SourceLocation, int32 Squad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ShowAccordingToChatType");

	Params::SurvPC_C_ShowAccordingToChatType Parms{};

	Parms.Param_Player = std::move(Param_Player);
	Parms.Text = std::move(Text);
	Parms.Param_ChatType = Param_ChatType;
	Parms.SourceLocation = std::move(SourceLocation);
	Parms.Squad = Squad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.ShowCityLabel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             CityName                                               (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::ShowCityLabel(const class FText& CityName, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ShowCityLabel");

	Params::SurvPC_C_ShowCityLabel Parms{};

	Parms.CityName = std::move(CityName);

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function SurvPC.SurvPC_C.ShowCurrentTutorialState_Client
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Param_NodeText                                         (BlueprintVisible, BlueprintReadOnly, Parm)

void ASurvPC_C::ShowCurrentTutorialState_Client(const class FText& Param_NodeText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ShowCurrentTutorialState_Client");

	Params::SurvPC_C_ShowCurrentTutorialState_Client Parms{};

	Parms.Param_NodeText = std::move(Param_NodeText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.ShowInvisibleZombieStat
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   KillsAmount                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   UniqueBlueprints                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::ShowInvisibleZombieStat(int32 KillsAmount, int32 UniqueBlueprints)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ShowInvisibleZombieStat");

	Params::SurvPC_C_ShowInvisibleZombieStat Parms{};

	Parms.KillsAmount = KillsAmount;
	Parms.UniqueBlueprints = UniqueBlueprints;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.ShowNetProfileUI
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewShow                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::ShowNetProfileUI(bool NewShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ShowNetProfileUI");

	Params::SurvPC_C_ShowNetProfileUI Parms{};

	Parms.NewShow = NewShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.ShowNPCQuestMessage
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NPC                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UQuest*                           Quest                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::ShowNPCQuestMessage(class FName NPC, class UQuest* Quest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ShowNPCQuestMessage");

	Params::SurvPC_C_ShowNPCQuestMessage Parms{};

	Parms.NPC = NPC;
	Parms.Quest = Quest;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.ShowPofileStatusUI
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Condition                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::ShowPofileStatusUI(bool Condition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ShowPofileStatusUI");

	Params::SurvPC_C_ShowPofileStatusUI Parms{};

	Parms.Condition = Condition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.ShowQuestAfterCityLoad
// (BlueprintCallable, BlueprintEvent)

void ASurvPC_C::ShowQuestAfterCityLoad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ShowQuestAfterCityLoad");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.ShowQuestMarks
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::ShowQuestMarks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ShowQuestMarks");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.ShowText
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           PlayerName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   NumberOfLines                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EChatType                               Param_ChatType                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          SourceLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Squad                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::ShowText(const class FString& PlayerName, const class FString& Text, int32 NumberOfLines, EChatType Param_ChatType, const struct FVector& SourceLocation, int32 Squad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ShowText");

	Params::SurvPC_C_ShowText Parms{};

	Parms.PlayerName = std::move(PlayerName);
	Parms.Text = std::move(Text);
	Parms.NumberOfLines = NumberOfLines;
	Parms.Param_ChatType = Param_ChatType;
	Parms.SourceLocation = std::move(SourceLocation);
	Parms.Squad = Squad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.ShowTutorialQuestMessageCompleted
// (BlueprintCallable, BlueprintEvent)

void ASurvPC_C::ShowTutorialQuestMessageCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ShowTutorialQuestMessageCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.SkyScene
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    TurnOff_                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::SkyScene(bool TurnOff_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "SkyScene");

	Params::SurvPC_C_SkyScene Parms{};

	Parms.TurnOff_ = TurnOff_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.Spawn Workbench Func
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::Spawn_Workbench_Func()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "Spawn Workbench Func");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.SpawnAllZombies
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::SpawnAllZombies()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "SpawnAllZombies");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.SpawnTutorialBag
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_TutorialBagSpawner_C*         Spawner                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::SpawnTutorialBag(class ABP_TutorialBagSpawner_C* Spawner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "SpawnTutorialBag");

	Params::SurvPC_C_SpawnTutorialBag Parms{};

	Parms.Spawner = Spawner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.SpectatorSwitch
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Spectate_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       SpectatorPosition                                      (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            Param_Player                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::SpectatorSwitch(bool Spectate_, const struct FTransform& SpectatorPosition, class APawn* Param_Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "SpectatorSwitch");

	Params::SurvPC_C_SpectatorSwitch Parms{};

	Parms.Spectate_ = Spectate_;
	Parms.SpectatorPosition = std::move(SpectatorPosition);
	Parms.Param_Player = Param_Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.SpectatorTeleport
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       NewPosition                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::SpectatorTeleport(const struct FTransform& NewPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "SpectatorTeleport");

	Params::SurvPC_C_SpectatorTeleport Parms{};

	Parms.NewPosition = std::move(NewPosition);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.StartHoldInteract
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvPC_C::StartHoldInteract(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "StartHoldInteract");

	Params::SurvPC_C_StartHoldInteract Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.StartQuest_Server
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UQuest*                           Quest                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::StartQuest_Server(class UQuest* Quest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "StartQuest_Server");

	Params::SurvPC_C_StartQuest_Server Parms{};

	Parms.Quest = Quest;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.StartRPQuest
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UQuest*                           Quest                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::StartRPQuest(class UQuest* Quest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "StartRPQuest");

	Params::SurvPC_C_StartRPQuest Parms{};

	Parms.Quest = Quest;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.StartTutorial
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::StartTutorial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "StartTutorial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.Stop All House Alarm Sound
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::Stop_All_House_Alarm_Sound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "Stop All House Alarm Sound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.Stop2DSounds
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::Stop2DSounds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "Stop2DSounds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.StopHoldInteract
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvPC_C::StopHoldInteract(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "StopHoldInteract");

	Params::SurvPC_C_StopHoldInteract Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.StopHouseAlarmSound
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::StopHouseAlarmSound(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "StopHouseAlarmSound");

	Params::SurvPC_C_StopHouseAlarmSound Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.StopHouseAlarmSoundID
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AlarmID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::StopHouseAlarmSoundID(int32 AlarmID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "StopHouseAlarmSoundID");

	Params::SurvPC_C_StopHouseAlarmSoundID Parms{};

	Parms.AlarmID = AlarmID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.StopTrackQuest
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UQuestContext*                    Context                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::StopTrackQuest(class UQuestContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "StopTrackQuest");

	Params::SurvPC_C_StopTrackQuest Parms{};

	Parms.Context = Context;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.SwitchQuest
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UQuestV2_C*                       Quest                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::SwitchQuest(class UQuestV2_C* Quest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "SwitchQuest");

	Params::SurvPC_C_SwitchQuest Parms{};

	Parms.Quest = Quest;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.TeleportPawn
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::TeleportPawn(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "TeleportPawn");

	Params::SurvPC_C_TeleportPawn Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.TeleportTo
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Location_X                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Location_Y                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Location_Z                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::TeleportTo(double Location_X, double Location_Y, double Location_Z)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "TeleportTo");

	Params::SurvPC_C_TeleportTo Parms{};

	Parms.Location_X = Location_X;
	Parms.Location_Y = Location_Y;
	Parms.Location_Z = Location_Z;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.TeleportToRegion
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Region                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ASurvPC_C::TeleportToRegion(const class FString& Region)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "TeleportToRegion");

	Params::SurvPC_C_TeleportToRegion Parms{};

	Parms.Region = std::move(Region);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.TeleportToSpawnPoint
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerSpawnPoint_C*           SpawnPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// E_HouseType                             Where_                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SquadMember                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SquadLenght                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    OnCar                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::TeleportToSpawnPoint(class ABP_PlayerSpawnPoint_C* SpawnPoint, E_HouseType Where_, int32 SquadMember, int32 SquadLenght, bool OnCar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "TeleportToSpawnPoint");

	Params::SurvPC_C_TeleportToSpawnPoint Parms{};

	Parms.SpawnPoint = SpawnPoint;
	Parms.Where_ = Where_;
	Parms.SquadMember = SquadMember;
	Parms.SquadLenght = SquadLenght;
	Parms.OnCar = OnCar;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.ThrowQuestTrigger
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Trigger                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ASurvPC_C::ThrowQuestTrigger(const class FString& Trigger)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ThrowQuestTrigger");

	Params::SurvPC_C_ThrowQuestTrigger Parms{};

	Parms.Trigger = std::move(Trigger);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.ToggleChat
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EChatType                               Param_ChatType                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::ToggleChat(EChatType Param_ChatType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "ToggleChat");

	Params::SurvPC_C_ToggleChat Parms{};

	Parms.Param_ChatType = Param_ChatType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.TogglePartyWidget
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ESlateVisibility                        InVisibility                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::TogglePartyWidget(ESlateVisibility InVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "TogglePartyWidget");

	Params::SurvPC_C_TogglePartyWidget Parms{};

	Parms.InVisibility = InVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.TrackQuest_Owning
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UQuest*                           QuestAsset                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Untrack                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::TrackQuest_Owning(class UQuest* QuestAsset, bool Untrack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "TrackQuest_Owning");

	Params::SurvPC_C_TrackQuest_Owning Parms{};

	Parms.QuestAsset = QuestAsset;
	Parms.Untrack = Untrack;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.TutorialBegin
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Level                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::TutorialBegin(class AActor* Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "TutorialBegin");

	Params::SurvPC_C_TutorialBegin Parms{};

	Parms.Level = Level;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.TutorialStart
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NeedReset                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::TutorialStart(bool NeedReset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "TutorialStart");

	Params::SurvPC_C_TutorialStart Parms{};

	Parms.NeedReset = NeedReset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.UnbindEventsOnTutorialFinished
// (BlueprintCallable, BlueprintEvent)

void ASurvPC_C::UnbindEventsOnTutorialFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "UnbindEventsOnTutorialFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.Update Quest
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::Update_Quest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "Update Quest");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.UpdateDay
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SetDay                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::UpdateDay(int32 SetDay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "UpdateDay");

	Params::SurvPC_C_UpdateDay Parms{};

	Parms.SetDay = SetDay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.UpdateQuest1
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::UpdateQuest1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "UpdateQuest1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.UpdateQuest2
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ASurvPC_C::UpdateQuest2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "UpdateQuest2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvPC.SurvPC_C.UseChat
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           PlayerName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   NumberOfLines                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EChatType                               Param_ChatType                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Squad                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::UseChat(const class FString& PlayerName, const class FString& Text, int32 NumberOfLines, EChatType Param_ChatType, int32 Squad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "UseChat");

	Params::SurvPC_C_UseChat Parms{};

	Parms.PlayerName = std::move(PlayerName);
	Parms.Text = std::move(Text);
	Parms.NumberOfLines = NumberOfLines;
	Parms.Param_ChatType = Param_ChatType;
	Parms.Squad = Squad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvPC.SurvPC_C.UseSkillPoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NumPoints                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::UseSkillPoint(int32 NumPoints, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "UseSkillPoint");

	Params::SurvPC_C_UseSkillPoint Parms{};

	Parms.NumPoints = NumPoints;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function SurvPC.SurvPC_C.Way Out Tutor Completed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Completed                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvPC_C::Way_Out_Tutor_Completed(bool* Completed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvPC_C", "Way Out Tutor Completed");

	Params::SurvPC_C_Way_Out_Tutor_Completed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Completed != nullptr)
		*Completed = Parms.Completed;
}

}

