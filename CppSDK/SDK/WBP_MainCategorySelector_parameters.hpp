#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MainCategorySelector

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "DayCycleState_structs.hpp"
#include "StatType_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FMODStudio_structs.hpp"
#include "E_TrainStatType_structs.hpp"


namespace SDK::Params
{

// Function WBP_MainCategorySelector.WBP_MainCategorySelector_C.ChangeEntriesList
// 0x0010 (0x0010 - 0x0000)
struct WBP_MainCategorySelector_C_ChangeEntriesList final
{
public:
	TArray<class FText>                           Param_EntriesList;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_MainCategorySelector_C_ChangeEntriesList) == 0x000008, "Wrong alignment on WBP_MainCategorySelector_C_ChangeEntriesList");
static_assert(sizeof(WBP_MainCategorySelector_C_ChangeEntriesList) == 0x000010, "Wrong size on WBP_MainCategorySelector_C_ChangeEntriesList");
static_assert(offsetof(WBP_MainCategorySelector_C_ChangeEntriesList, Param_EntriesList) == 0x000000, "Member 'WBP_MainCategorySelector_C_ChangeEntriesList::Param_EntriesList' has a wrong offset!");

// Function WBP_MainCategorySelector.WBP_MainCategorySelector_C.CheckWeightStatUpdate
// 0x0004 (0x0004 - 0x0000)
struct WBP_MainCategorySelector_C_CheckWeightStatUpdate final
{
public:
	EStatType                                     StatKey;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainCategorySelector_C_CheckWeightStatUpdate) == 0x000001, "Wrong alignment on WBP_MainCategorySelector_C_CheckWeightStatUpdate");
static_assert(sizeof(WBP_MainCategorySelector_C_CheckWeightStatUpdate) == 0x000004, "Wrong size on WBP_MainCategorySelector_C_CheckWeightStatUpdate");
static_assert(offsetof(WBP_MainCategorySelector_C_CheckWeightStatUpdate, StatKey) == 0x000000, "Member 'WBP_MainCategorySelector_C_CheckWeightStatUpdate::StatKey' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_CheckWeightStatUpdate, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'WBP_MainCategorySelector_C_CheckWeightStatUpdate::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_CheckWeightStatUpdate, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000002, "Member 'WBP_MainCategorySelector_C_CheckWeightStatUpdate::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_CheckWeightStatUpdate, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'WBP_MainCategorySelector_C_CheckWeightStatUpdate::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WBP_MainCategorySelector.WBP_MainCategorySelector_C.ClearEntries
// 0x0038 (0x0038 - 0x0000)
struct WBP_MainCategorySelector_C_ClearEntries final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_MainCategorySelectorEntryV2_C*> CallFunc_Map_Values_Values;                        // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MainCategorySelectorEntryV2_C*     CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainCategorySelector_C_ClearEntries) == 0x000008, "Wrong alignment on WBP_MainCategorySelector_C_ClearEntries");
static_assert(sizeof(WBP_MainCategorySelector_C_ClearEntries) == 0x000038, "Wrong size on WBP_MainCategorySelector_C_ClearEntries");
static_assert(offsetof(WBP_MainCategorySelector_C_ClearEntries, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_MainCategorySelector_C_ClearEntries::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ClearEntries, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_MainCategorySelector_C_ClearEntries::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ClearEntries, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_MainCategorySelector_C_ClearEntries::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ClearEntries, CallFunc_Map_Values_Values) == 0x000010, "Member 'WBP_MainCategorySelector_C_ClearEntries::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ClearEntries, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WBP_MainCategorySelector_C_ClearEntries::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ClearEntries, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_MainCategorySelector_C_ClearEntries::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ClearEntries, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'WBP_MainCategorySelector_C_ClearEntries::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_MainCategorySelector.WBP_MainCategorySelector_C.ExecuteUbergraph_WBP_MainCategorySelector
// 0x01F8 (0x01F8 - 0x0000)
struct WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC;                  // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_TabsWindow_C*                        CallFunc_GetTabsWidget_Widget;                     // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC_1;                // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      CallFunc_GetPlayerRef_SurvivalPlayer;              // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x006C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 RPoints)>                K2Node_CreateDelegate_OutputDelegate_1;            // 0x007C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNextAvailableEntry_Index;              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class APawn* OldPawn, class APawn* NewPawn)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0090(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPrevAvailableEntry_Index;              // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue;                  // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue_1;                // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue_2;                // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue_3;                // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CB[0x1];                                       // 0x00CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EStatType StatKey)>            K2Node_CreateDelegate_OutputDelegate_3;            // 0x00CC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(E_TrainStatType Stat)>         K2Node_CreateDelegate_OutputDelegate_4;            // 0x00DC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_3;              // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_122[0x6];                                      // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_CustomEvent_OldPawn;                        // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_CustomEvent_NewPawn;                        // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        K2Node_CustomEvent_Pocket;                         // 0x0148(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        K2Node_CustomEvent_Backpack;                       // 0x0158(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0160(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UJSIContainer_C* Backpack)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x0170(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x0188(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGS_TDB_C*                              K2Node_DynamicCast_AsGS_TDB;                       // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UJSIContainer_C* Pocket)> K2Node_CreateDelegate_OutputDelegate_8;            // 0x01A4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EDayCycleState NewDayState)>   K2Node_CreateDelegate_OutputDelegate_9;            // 0x01B4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_3;        // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC_2;                // 0x01D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_TabsWindow_C*                        CallFunc_GetTabsWidget_Widget_1;                   // 0x01E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector) == 0x000008, "Wrong alignment on WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector");
static_assert(sizeof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector) == 0x0001F8, "Wrong size on WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, EntryPoint) == 0x000000, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, K2Node_DynamicCast_AsBPI_Surv_PC) == 0x000010, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::K2Node_DynamicCast_AsBPI_Surv_PC' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, CallFunc_GetTabsWidget_Widget) == 0x000028, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::CallFunc_GetTabsWidget_Widget' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, Temp_bool_Has_Been_Initd_Variable) == 0x000030, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, Temp_bool_IsClosed_Variable) == 0x000032, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, K2Node_Event_IsDesignTime) == 0x000033, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, CallFunc_GetPlayerController_ReturnValue_1) == 0x000038, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, Temp_bool_IsClosed_Variable_1) == 0x000040, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, K2Node_DynamicCast_AsBPI_Surv_PC_1) == 0x000048, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::K2Node_DynamicCast_AsBPI_Surv_PC_1' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, CallFunc_GetPlayerRef_SurvivalPlayer) == 0x000060, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::CallFunc_GetPlayerRef_SurvivalPlayer' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, K2Node_CreateDelegate_OutputDelegate) == 0x00006C, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, K2Node_CreateDelegate_OutputDelegate_1) == 0x00007C, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, CallFunc_GetNextAvailableEntry_Index) == 0x00008C, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::CallFunc_GetNextAvailableEntry_Index' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, K2Node_CreateDelegate_OutputDelegate_2) == 0x000090, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, CallFunc_GetPrevAvailableEntry_Index) == 0x0000A0, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::CallFunc_GetPrevAvailableEntry_Index' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, CallFunc_PlayEvent2D_ReturnValue) == 0x0000A8, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::CallFunc_PlayEvent2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, CallFunc_PlayEvent2D_ReturnValue_1) == 0x0000B0, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::CallFunc_PlayEvent2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, CallFunc_PlayEvent2D_ReturnValue_2) == 0x0000B8, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::CallFunc_PlayEvent2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, CallFunc_PlayEvent2D_ReturnValue_3) == 0x0000C0, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::CallFunc_PlayEvent2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000C8, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000C9, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, CallFunc_BooleanAND_ReturnValue) == 0x0000CA, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000CC, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000DC, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, CallFunc_PlayAnimation_ReturnValue) == 0x0000F0, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, CallFunc_PlayAnimation_ReturnValue_1) == 0x0000F8, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, Temp_bool_Has_Been_Initd_Variable_1) == 0x000100, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, CallFunc_PlayAnimation_ReturnValue_2) == 0x000108, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, CallFunc_PlayAnimation_ReturnValue_3) == 0x000110, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::CallFunc_PlayAnimation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, CallFunc_GetPlayerController_ReturnValue_2) == 0x000118, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, CallFunc_IsValid_ReturnValue_1) == 0x000120, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, CallFunc_IsValid_ReturnValue_2) == 0x000121, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, K2Node_CustomEvent_OldPawn) == 0x000128, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::K2Node_CustomEvent_OldPawn' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, K2Node_CustomEvent_NewPawn) == 0x000130, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::K2Node_CustomEvent_NewPawn' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, K2Node_DynamicCast_AsSurvival_Player) == 0x000138, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, K2Node_DynamicCast_bSuccess_2) == 0x000140, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, K2Node_CustomEvent_Pocket) == 0x000148, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::K2Node_CustomEvent_Pocket' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, CallFunc_IsValid_ReturnValue_3) == 0x000150, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, K2Node_CustomEvent_Backpack) == 0x000158, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::K2Node_CustomEvent_Backpack' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, K2Node_CreateDelegate_OutputDelegate_5) == 0x000160, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, K2Node_CreateDelegate_OutputDelegate_6) == 0x000170, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, CallFunc_GetGameState_ReturnValue) == 0x000180, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, K2Node_CreateDelegate_OutputDelegate_7) == 0x000188, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, K2Node_DynamicCast_AsGS_TDB) == 0x000198, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::K2Node_DynamicCast_AsGS_TDB' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, K2Node_DynamicCast_bSuccess_3) == 0x0001A0, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, K2Node_CreateDelegate_OutputDelegate_8) == 0x0001A4, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, K2Node_CreateDelegate_OutputDelegate_9) == 0x0001B4, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, CallFunc_GetPlayerController_ReturnValue_3) == 0x0001C8, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::CallFunc_GetPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, K2Node_DynamicCast_AsBPI_Surv_PC_2) == 0x0001D0, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::K2Node_DynamicCast_AsBPI_Surv_PC_2' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, K2Node_DynamicCast_bSuccess_4) == 0x0001E0, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, CallFunc_GetTabsWidget_Widget_1) == 0x0001E8, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::CallFunc_GetTabsWidget_Widget_1' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, CallFunc_Not_PreBool_ReturnValue_3) == 0x0001F0, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector, CallFunc_BooleanAND_ReturnValue_1) == 0x0001F1, "Member 'WBP_MainCategorySelector_C_ExecuteUbergraph_WBP_MainCategorySelector::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function WBP_MainCategorySelector.WBP_MainCategorySelector_C.GetActiveCategoryIndex
// 0x0004 (0x0004 - 0x0000)
struct WBP_MainCategorySelector_C_GetActiveCategoryIndex final
{
public:
	int32                                         Param_ActiveEntryIndex;                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainCategorySelector_C_GetActiveCategoryIndex) == 0x000004, "Wrong alignment on WBP_MainCategorySelector_C_GetActiveCategoryIndex");
static_assert(sizeof(WBP_MainCategorySelector_C_GetActiveCategoryIndex) == 0x000004, "Wrong size on WBP_MainCategorySelector_C_GetActiveCategoryIndex");
static_assert(offsetof(WBP_MainCategorySelector_C_GetActiveCategoryIndex, Param_ActiveEntryIndex) == 0x000000, "Member 'WBP_MainCategorySelector_C_GetActiveCategoryIndex::Param_ActiveEntryIndex' has a wrong offset!");

// Function WBP_MainCategorySelector.WBP_MainCategorySelector_C.GetNextAvailableEntry
// 0x0040 (0x0040 - 0x0000)
struct WBP_MainCategorySelector_C_GetNextAvailableEntry final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_Set_ToArray_Result;                       // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainCategorySelector_C_GetNextAvailableEntry) == 0x000008, "Wrong alignment on WBP_MainCategorySelector_C_GetNextAvailableEntry");
static_assert(sizeof(WBP_MainCategorySelector_C_GetNextAvailableEntry) == 0x000040, "Wrong size on WBP_MainCategorySelector_C_GetNextAvailableEntry");
static_assert(offsetof(WBP_MainCategorySelector_C_GetNextAvailableEntry, Param_Index) == 0x000000, "Member 'WBP_MainCategorySelector_C_GetNextAvailableEntry::Param_Index' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_GetNextAvailableEntry, Temp_int_Variable) == 0x000004, "Member 'WBP_MainCategorySelector_C_GetNextAvailableEntry::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_GetNextAvailableEntry, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_MainCategorySelector_C_GetNextAvailableEntry::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_GetNextAvailableEntry, CallFunc_Set_ToArray_Result) == 0x000010, "Member 'WBP_MainCategorySelector_C_GetNextAvailableEntry::CallFunc_Set_ToArray_Result' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_GetNextAvailableEntry, CallFunc_Array_Get_Item) == 0x000020, "Member 'WBP_MainCategorySelector_C_GetNextAvailableEntry::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_GetNextAvailableEntry, CallFunc_Array_Get_Item_1) == 0x000024, "Member 'WBP_MainCategorySelector_C_GetNextAvailableEntry::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_GetNextAvailableEntry, CallFunc_Greater_IntInt_ReturnValue) == 0x000028, "Member 'WBP_MainCategorySelector_C_GetNextAvailableEntry::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_GetNextAvailableEntry, CallFunc_Array_LastIndex_ReturnValue) == 0x00002C, "Member 'WBP_MainCategorySelector_C_GetNextAvailableEntry::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_GetNextAvailableEntry, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000030, "Member 'WBP_MainCategorySelector_C_GetNextAvailableEntry::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_GetNextAvailableEntry, CallFunc_Array_Find_ReturnValue) == 0x000034, "Member 'WBP_MainCategorySelector_C_GetNextAvailableEntry::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_GetNextAvailableEntry, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000038, "Member 'WBP_MainCategorySelector_C_GetNextAvailableEntry::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_MainCategorySelector.WBP_MainCategorySelector_C.GetPrevAvailableEntry
// 0x0048 (0x0048 - 0x0000)
struct WBP_MainCategorySelector_C_GetPrevAvailableEntry final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 ReversedValidIndexes;                              // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_Set_ToArray_Result;                       // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainCategorySelector_C_GetPrevAvailableEntry) == 0x000008, "Wrong alignment on WBP_MainCategorySelector_C_GetPrevAvailableEntry");
static_assert(sizeof(WBP_MainCategorySelector_C_GetPrevAvailableEntry) == 0x000048, "Wrong size on WBP_MainCategorySelector_C_GetPrevAvailableEntry");
static_assert(offsetof(WBP_MainCategorySelector_C_GetPrevAvailableEntry, Param_Index) == 0x000000, "Member 'WBP_MainCategorySelector_C_GetPrevAvailableEntry::Param_Index' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_GetPrevAvailableEntry, ReversedValidIndexes) == 0x000008, "Member 'WBP_MainCategorySelector_C_GetPrevAvailableEntry::ReversedValidIndexes' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_GetPrevAvailableEntry, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_MainCategorySelector_C_GetPrevAvailableEntry::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_GetPrevAvailableEntry, CallFunc_Array_LastIndex_ReturnValue) == 0x00001C, "Member 'WBP_MainCategorySelector_C_GetPrevAvailableEntry::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_GetPrevAvailableEntry, Temp_int_Variable) == 0x000020, "Member 'WBP_MainCategorySelector_C_GetPrevAvailableEntry::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_GetPrevAvailableEntry, CallFunc_Array_Get_Item_1) == 0x000024, "Member 'WBP_MainCategorySelector_C_GetPrevAvailableEntry::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_GetPrevAvailableEntry, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'WBP_MainCategorySelector_C_GetPrevAvailableEntry::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_GetPrevAvailableEntry, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000029, "Member 'WBP_MainCategorySelector_C_GetPrevAvailableEntry::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_GetPrevAvailableEntry, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'WBP_MainCategorySelector_C_GetPrevAvailableEntry::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_GetPrevAvailableEntry, CallFunc_Set_ToArray_Result) == 0x000030, "Member 'WBP_MainCategorySelector_C_GetPrevAvailableEntry::CallFunc_Set_ToArray_Result' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_GetPrevAvailableEntry, CallFunc_Array_Find_ReturnValue) == 0x000040, "Member 'WBP_MainCategorySelector_C_GetPrevAvailableEntry::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_GetPrevAvailableEntry, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000044, "Member 'WBP_MainCategorySelector_C_GetPrevAvailableEntry::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_MainCategorySelector.WBP_MainCategorySelector_C.Init
// 0x0090 (0x0090 - 0x0000)
struct WBP_MainCategorySelector_C_Init final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Array_Get_Item;                           // 0x0018(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 Index)>                  K2Node_CreateDelegate_OutputDelegate;              // 0x004C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F[0x1];                                       // 0x005F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MainCategorySelectorEntryV2_C*     CallFunc_Create_ReturnValue;                       // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FSlateChildSize                        K2Node_MakeStruct_SlateChildSize;                  // 0x0080(0x0008)(NoDestructor)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainCategorySelector_C_Init) == 0x000008, "Wrong alignment on WBP_MainCategorySelector_C_Init");
static_assert(sizeof(WBP_MainCategorySelector_C_Init) == 0x000090, "Wrong size on WBP_MainCategorySelector_C_Init");
static_assert(offsetof(WBP_MainCategorySelector_C_Init, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'WBP_MainCategorySelector_C_Init::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_Init, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_MainCategorySelector_C_Init::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_Init, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_MainCategorySelector_C_Init::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_Init, CallFunc_Set_Contains_ReturnValue) == 0x00000C, "Member 'WBP_MainCategorySelector_C_Init::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_Init, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'WBP_MainCategorySelector_C_Init::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_Init, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_MainCategorySelector_C_Init::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_Init, CallFunc_Greater_IntInt_ReturnValue) == 0x000030, "Member 'WBP_MainCategorySelector_C_Init::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_Init, CallFunc_Array_Length_ReturnValue_1) == 0x000034, "Member 'WBP_MainCategorySelector_C_Init::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_Init, CallFunc_SelectFloat_ReturnValue) == 0x000038, "Member 'WBP_MainCategorySelector_C_Init::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_Init, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'WBP_MainCategorySelector_C_Init::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_Init, CallFunc_Array_LastIndex_ReturnValue) == 0x000044, "Member 'WBP_MainCategorySelector_C_Init::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_Init, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000048, "Member 'WBP_MainCategorySelector_C_Init::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_Init, K2Node_CreateDelegate_OutputDelegate) == 0x00004C, "Member 'WBP_MainCategorySelector_C_Init::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_Init, Temp_byte_Variable) == 0x00005C, "Member 'WBP_MainCategorySelector_C_Init::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_Init, Temp_byte_Variable_1) == 0x00005D, "Member 'WBP_MainCategorySelector_C_Init::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_Init, Temp_bool_Variable) == 0x00005E, "Member 'WBP_MainCategorySelector_C_Init::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_Init, CallFunc_GetPlayerController_ReturnValue) == 0x000060, "Member 'WBP_MainCategorySelector_C_Init::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_Init, K2Node_Select_Default) == 0x000068, "Member 'WBP_MainCategorySelector_C_Init::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_Init, CallFunc_Create_ReturnValue) == 0x000070, "Member 'WBP_MainCategorySelector_C_Init::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_Init, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x000078, "Member 'WBP_MainCategorySelector_C_Init::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_Init, K2Node_MakeStruct_SlateChildSize) == 0x000080, "Member 'WBP_MainCategorySelector_C_Init::K2Node_MakeStruct_SlateChildSize' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_Init, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x000088, "Member 'WBP_MainCategorySelector_C_Init::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");

// Function WBP_MainCategorySelector.WBP_MainCategorySelector_C.LockPageSwap
// 0x0001 (0x0001 - 0x0000)
struct WBP_MainCategorySelector_C_LockPageSwap final
{
public:
	bool                                          Lock;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainCategorySelector_C_LockPageSwap) == 0x000001, "Wrong alignment on WBP_MainCategorySelector_C_LockPageSwap");
static_assert(sizeof(WBP_MainCategorySelector_C_LockPageSwap) == 0x000001, "Wrong size on WBP_MainCategorySelector_C_LockPageSwap");
static_assert(offsetof(WBP_MainCategorySelector_C_LockPageSwap, Lock) == 0x000000, "Member 'WBP_MainCategorySelector_C_LockPageSwap::Lock' has a wrong offset!");

// Function WBP_MainCategorySelector.WBP_MainCategorySelector_C.NumbersPercentDiffer
// 0x0030 (0x0030 - 0x0000)
struct WBP_MainCategorySelector_C_NumbersPercentDiffer final
{
public:
	double                                        GreaterNumber;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LesserNumber;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Percent;                                           // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainCategorySelector_C_NumbersPercentDiffer) == 0x000008, "Wrong alignment on WBP_MainCategorySelector_C_NumbersPercentDiffer");
static_assert(sizeof(WBP_MainCategorySelector_C_NumbersPercentDiffer) == 0x000030, "Wrong size on WBP_MainCategorySelector_C_NumbersPercentDiffer");
static_assert(offsetof(WBP_MainCategorySelector_C_NumbersPercentDiffer, GreaterNumber) == 0x000000, "Member 'WBP_MainCategorySelector_C_NumbersPercentDiffer::GreaterNumber' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_NumbersPercentDiffer, LesserNumber) == 0x000008, "Member 'WBP_MainCategorySelector_C_NumbersPercentDiffer::LesserNumber' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_NumbersPercentDiffer, Percent) == 0x000010, "Member 'WBP_MainCategorySelector_C_NumbersPercentDiffer::Percent' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_NumbersPercentDiffer, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'WBP_MainCategorySelector_C_NumbersPercentDiffer::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_NumbersPercentDiffer, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'WBP_MainCategorySelector_C_NumbersPercentDiffer::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_NumbersPercentDiffer, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000028, "Member 'WBP_MainCategorySelector_C_NumbersPercentDiffer::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");

// Function WBP_MainCategorySelector.WBP_MainCategorySelector_C.OnBackpackChanged_Event
// 0x0008 (0x0008 - 0x0000)
struct WBP_MainCategorySelector_C_OnBackpackChanged_Event final
{
public:
	class UJSIContainer_C*                        Backpack;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainCategorySelector_C_OnBackpackChanged_Event) == 0x000008, "Wrong alignment on WBP_MainCategorySelector_C_OnBackpackChanged_Event");
static_assert(sizeof(WBP_MainCategorySelector_C_OnBackpackChanged_Event) == 0x000008, "Wrong size on WBP_MainCategorySelector_C_OnBackpackChanged_Event");
static_assert(offsetof(WBP_MainCategorySelector_C_OnBackpackChanged_Event, Backpack) == 0x000000, "Member 'WBP_MainCategorySelector_C_OnBackpackChanged_Event::Backpack' has a wrong offset!");

// Function WBP_MainCategorySelector.WBP_MainCategorySelector_C.OnCategoryChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_MainCategorySelector_C_OnCategoryChanged__DelegateSignature final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainCategorySelector_C_OnCategoryChanged__DelegateSignature) == 0x000004, "Wrong alignment on WBP_MainCategorySelector_C_OnCategoryChanged__DelegateSignature");
static_assert(sizeof(WBP_MainCategorySelector_C_OnCategoryChanged__DelegateSignature) == 0x000004, "Wrong size on WBP_MainCategorySelector_C_OnCategoryChanged__DelegateSignature");
static_assert(offsetof(WBP_MainCategorySelector_C_OnCategoryChanged__DelegateSignature, Param_Index) == 0x000000, "Member 'WBP_MainCategorySelector_C_OnCategoryChanged__DelegateSignature::Param_Index' has a wrong offset!");

// Function WBP_MainCategorySelector.WBP_MainCategorySelector_C.OnDayStateChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_MainCategorySelector_C_OnDayStateChanged final
{
public:
	EDayCycleState                                NewDayState;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainCategorySelector_C_OnDayStateChanged) == 0x000001, "Wrong alignment on WBP_MainCategorySelector_C_OnDayStateChanged");
static_assert(sizeof(WBP_MainCategorySelector_C_OnDayStateChanged) == 0x000001, "Wrong size on WBP_MainCategorySelector_C_OnDayStateChanged");
static_assert(offsetof(WBP_MainCategorySelector_C_OnDayStateChanged, NewDayState) == 0x000000, "Member 'WBP_MainCategorySelector_C_OnDayStateChanged::NewDayState' has a wrong offset!");

// Function WBP_MainCategorySelector.WBP_MainCategorySelector_C.OnPocketChanged_Event
// 0x0008 (0x0008 - 0x0000)
struct WBP_MainCategorySelector_C_OnPocketChanged_Event final
{
public:
	class UJSIContainer_C*                        Pocket;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainCategorySelector_C_OnPocketChanged_Event) == 0x000008, "Wrong alignment on WBP_MainCategorySelector_C_OnPocketChanged_Event");
static_assert(sizeof(WBP_MainCategorySelector_C_OnPocketChanged_Event) == 0x000008, "Wrong size on WBP_MainCategorySelector_C_OnPocketChanged_Event");
static_assert(offsetof(WBP_MainCategorySelector_C_OnPocketChanged_Event, Pocket) == 0x000000, "Member 'WBP_MainCategorySelector_C_OnPocketChanged_Event::Pocket' has a wrong offset!");

// Function WBP_MainCategorySelector.WBP_MainCategorySelector_C.OnPossessedPawnChanged_Event
// 0x0010 (0x0010 - 0x0000)
struct WBP_MainCategorySelector_C_OnPossessedPawnChanged_Event final
{
public:
	class APawn*                                  OldPawn;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  NewPawn;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainCategorySelector_C_OnPossessedPawnChanged_Event) == 0x000008, "Wrong alignment on WBP_MainCategorySelector_C_OnPossessedPawnChanged_Event");
static_assert(sizeof(WBP_MainCategorySelector_C_OnPossessedPawnChanged_Event) == 0x000010, "Wrong size on WBP_MainCategorySelector_C_OnPossessedPawnChanged_Event");
static_assert(offsetof(WBP_MainCategorySelector_C_OnPossessedPawnChanged_Event, OldPawn) == 0x000000, "Member 'WBP_MainCategorySelector_C_OnPossessedPawnChanged_Event::OldPawn' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_OnPossessedPawnChanged_Event, NewPawn) == 0x000008, "Member 'WBP_MainCategorySelector_C_OnPossessedPawnChanged_Event::NewPawn' has a wrong offset!");

// Function WBP_MainCategorySelector.WBP_MainCategorySelector_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_MainCategorySelector_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainCategorySelector_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_MainCategorySelector_C_PreConstruct");
static_assert(sizeof(WBP_MainCategorySelector_C_PreConstruct) == 0x000001, "Wrong size on WBP_MainCategorySelector_C_PreConstruct");
static_assert(offsetof(WBP_MainCategorySelector_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_MainCategorySelector_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_MainCategorySelector.WBP_MainCategorySelector_C.SetActiveCategory
// 0x0050 (0x0050 - 0x0000)
struct WBP_MainCategorySelector_C_SetActiveCategory final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Set_Length_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_MainCategorySelectorEntryV2_C*> CallFunc_Map_Values_Values;                        // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWBP_MainCategorySelectorEntryV2_C*     CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_MainCategorySelectorEntryV2_C*     CallFunc_Map_Find_Value;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainCategorySelector_C_SetActiveCategory) == 0x000008, "Wrong alignment on WBP_MainCategorySelector_C_SetActiveCategory");
static_assert(sizeof(WBP_MainCategorySelector_C_SetActiveCategory) == 0x000050, "Wrong size on WBP_MainCategorySelector_C_SetActiveCategory");
static_assert(offsetof(WBP_MainCategorySelector_C_SetActiveCategory, Param_Index) == 0x000000, "Member 'WBP_MainCategorySelector_C_SetActiveCategory::Param_Index' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_SetActiveCategory, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_MainCategorySelector_C_SetActiveCategory::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_SetActiveCategory, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WBP_MainCategorySelector_C_SetActiveCategory::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_SetActiveCategory, CallFunc_Set_Length_ReturnValue) == 0x00000C, "Member 'WBP_MainCategorySelector_C_SetActiveCategory::CallFunc_Set_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_SetActiveCategory, CallFunc_Greater_IntInt_ReturnValue) == 0x000010, "Member 'WBP_MainCategorySelector_C_SetActiveCategory::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_SetActiveCategory, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'WBP_MainCategorySelector_C_SetActiveCategory::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_SetActiveCategory, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000018, "Member 'WBP_MainCategorySelector_C_SetActiveCategory::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_SetActiveCategory, CallFunc_BooleanAND_ReturnValue) == 0x000019, "Member 'WBP_MainCategorySelector_C_SetActiveCategory::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_SetActiveCategory, CallFunc_Map_Values_Values) == 0x000020, "Member 'WBP_MainCategorySelector_C_SetActiveCategory::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_SetActiveCategory, CallFunc_Array_Get_Item) == 0x000030, "Member 'WBP_MainCategorySelector_C_SetActiveCategory::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_SetActiveCategory, CallFunc_Map_Find_Value) == 0x000038, "Member 'WBP_MainCategorySelector_C_SetActiveCategory::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_SetActiveCategory, CallFunc_Map_Find_ReturnValue) == 0x000040, "Member 'WBP_MainCategorySelector_C_SetActiveCategory::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_SetActiveCategory, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'WBP_MainCategorySelector_C_SetActiveCategory::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_SetActiveCategory, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000048, "Member 'WBP_MainCategorySelector_C_SetActiveCategory::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_SetActiveCategory, CallFunc_Less_IntInt_ReturnValue) == 0x000049, "Member 'WBP_MainCategorySelector_C_SetActiveCategory::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_SetActiveCategory, CallFunc_IsValid_ReturnValue) == 0x00004A, "Member 'WBP_MainCategorySelector_C_SetActiveCategory::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_MainCategorySelector.WBP_MainCategorySelector_C.SetArrowButtonsVisibility
// 0x0048 (0x0048 - 0x0000)
struct WBP_MainCategorySelector_C_SetArrowButtonsVisibility final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue;      // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_Select_Default;                             // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainCategorySelector_C_SetArrowButtonsVisibility) == 0x000008, "Wrong alignment on WBP_MainCategorySelector_C_SetArrowButtonsVisibility");
static_assert(sizeof(WBP_MainCategorySelector_C_SetArrowButtonsVisibility) == 0x000048, "Wrong size on WBP_MainCategorySelector_C_SetArrowButtonsVisibility");
static_assert(offsetof(WBP_MainCategorySelector_C_SetArrowButtonsVisibility, Temp_bool_Variable) == 0x000000, "Member 'WBP_MainCategorySelector_C_SetArrowButtonsVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_SetArrowButtonsVisibility, Temp_bool_Variable_1) == 0x000001, "Member 'WBP_MainCategorySelector_C_SetArrowButtonsVisibility::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_SetArrowButtonsVisibility, Temp_byte_Variable) == 0x000002, "Member 'WBP_MainCategorySelector_C_SetArrowButtonsVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_SetArrowButtonsVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_MainCategorySelector_C_SetArrowButtonsVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_SetArrowButtonsVisibility, K2Node_MakeStruct_Margin) == 0x000004, "Member 'WBP_MainCategorySelector_C_SetArrowButtonsVisibility::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_SetArrowButtonsVisibility, K2Node_MakeStruct_Margin_1) == 0x000014, "Member 'WBP_MainCategorySelector_C_SetArrowButtonsVisibility::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_SetArrowButtonsVisibility, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue) == 0x000028, "Member 'WBP_MainCategorySelector_C_SetArrowButtonsVisibility::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_SetArrowButtonsVisibility, K2Node_Select_Default) == 0x000030, "Member 'WBP_MainCategorySelector_C_SetArrowButtonsVisibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_SetArrowButtonsVisibility, K2Node_Select_Default_1) == 0x000040, "Member 'WBP_MainCategorySelector_C_SetArrowButtonsVisibility::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_MainCategorySelector.WBP_MainCategorySelector_C.SetDisabledEntries
// 0x0060 (0x0060 - 0x0000)
struct WBP_MainCategorySelector_C_SetDisabledEntries final
{
public:
	TSet<int32>                                   Entries;                                           // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	TArray<int32>                                 CallFunc_Set_ToArray_Result;                       // 0x0050(0x0010)(ReferenceParm)
};
static_assert(alignof(WBP_MainCategorySelector_C_SetDisabledEntries) == 0x000008, "Wrong alignment on WBP_MainCategorySelector_C_SetDisabledEntries");
static_assert(sizeof(WBP_MainCategorySelector_C_SetDisabledEntries) == 0x000060, "Wrong size on WBP_MainCategorySelector_C_SetDisabledEntries");
static_assert(offsetof(WBP_MainCategorySelector_C_SetDisabledEntries, Entries) == 0x000000, "Member 'WBP_MainCategorySelector_C_SetDisabledEntries::Entries' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_SetDisabledEntries, CallFunc_Set_ToArray_Result) == 0x000050, "Member 'WBP_MainCategorySelector_C_SetDisabledEntries::CallFunc_Set_ToArray_Result' has a wrong offset!");

// Function WBP_MainCategorySelector.WBP_MainCategorySelector_C.Unbind
// 0x0050 (0x0050 - 0x0000)
struct WBP_MainCategorySelector_C_Unbind final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 RPoints)>                K2Node_CreateDelegate_OutputDelegate_1;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGS_TDB_C*                              K2Node_DynamicCast_AsGS_TDB;                       // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainCategorySelector_C_Unbind) == 0x000008, "Wrong alignment on WBP_MainCategorySelector_C_Unbind");
static_assert(sizeof(WBP_MainCategorySelector_C_Unbind) == 0x000050, "Wrong size on WBP_MainCategorySelector_C_Unbind");
static_assert(offsetof(WBP_MainCategorySelector_C_Unbind, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WBP_MainCategorySelector_C_Unbind::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_Unbind, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_MainCategorySelector_C_Unbind::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_Unbind, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'WBP_MainCategorySelector_C_Unbind::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_Unbind, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'WBP_MainCategorySelector_C_Unbind::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_Unbind, K2Node_CreateDelegate_OutputDelegate_1) == 0x000020, "Member 'WBP_MainCategorySelector_C_Unbind::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_Unbind, K2Node_DynamicCast_AsGS_TDB) == 0x000030, "Member 'WBP_MainCategorySelector_C_Unbind::K2Node_DynamicCast_AsGS_TDB' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_Unbind, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WBP_MainCategorySelector_C_Unbind::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_Unbind, K2Node_CreateDelegate_OutputDelegate_2) == 0x00003C, "Member 'WBP_MainCategorySelector_C_Unbind::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");

// Function WBP_MainCategorySelector.WBP_MainCategorySelector_C.UpdateMoney
// 0x0030 (0x0030 - 0x0000)
struct WBP_MainCategorySelector_C_UpdateMoney final
{
public:
	int32                                         AmountOfMoney;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalAmountOfMoney;                                // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainCategorySelector_C_UpdateMoney) == 0x000008, "Wrong alignment on WBP_MainCategorySelector_C_UpdateMoney");
static_assert(sizeof(WBP_MainCategorySelector_C_UpdateMoney) == 0x000030, "Wrong size on WBP_MainCategorySelector_C_UpdateMoney");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateMoney, AmountOfMoney) == 0x000000, "Member 'WBP_MainCategorySelector_C_UpdateMoney::AmountOfMoney' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateMoney, LocalAmountOfMoney) == 0x000004, "Member 'WBP_MainCategorySelector_C_UpdateMoney::LocalAmountOfMoney' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateMoney, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WBP_MainCategorySelector_C_UpdateMoney::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateMoney, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'WBP_MainCategorySelector_C_UpdateMoney::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateMoney, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WBP_MainCategorySelector_C_UpdateMoney::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateMoney, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'WBP_MainCategorySelector_C_UpdateMoney::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateMoney, CallFunc_IsValid_ReturnValue_1) == 0x000015, "Member 'WBP_MainCategorySelector_C_UpdateMoney::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateMoney, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'WBP_MainCategorySelector_C_UpdateMoney::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateMoney, CallFunc_Array_Get_Item) == 0x000020, "Member 'WBP_MainCategorySelector_C_UpdateMoney::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateMoney, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'WBP_MainCategorySelector_C_UpdateMoney::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateMoney, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000029, "Member 'WBP_MainCategorySelector_C_UpdateMoney::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateMoney, CallFunc_Add_IntInt_ReturnValue_1) == 0x00002C, "Member 'WBP_MainCategorySelector_C_UpdateMoney::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function WBP_MainCategorySelector.WBP_MainCategorySelector_C.UpdateRP
// 0x0020 (0x0020 - 0x0000)
struct WBP_MainCategorySelector_C_UpdateRP final
{
public:
	int32                                         RPPoints;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
};
static_assert(alignof(WBP_MainCategorySelector_C_UpdateRP) == 0x000008, "Wrong alignment on WBP_MainCategorySelector_C_UpdateRP");
static_assert(sizeof(WBP_MainCategorySelector_C_UpdateRP) == 0x000020, "Wrong size on WBP_MainCategorySelector_C_UpdateRP");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateRP, RPPoints) == 0x000000, "Member 'WBP_MainCategorySelector_C_UpdateRP::RPPoints' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateRP, CallFunc_Max_ReturnValue) == 0x000004, "Member 'WBP_MainCategorySelector_C_UpdateRP::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateRP, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'WBP_MainCategorySelector_C_UpdateRP::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WBP_MainCategorySelector.WBP_MainCategorySelector_C.UpdateTime
// 0x0120 (0x0120 - 0x0000)
struct WBP_MainCategorySelector_C_UpdateTime final
{
public:
	int32                                         Hour;                                              // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Minute;                                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Day_Local_;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDayCycleState                                Temp_byte_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0028(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0040(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0058(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0070(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0088(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x00A0(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x00B8(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x00D0(0x0018)()
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGS_TDB_C*                              K2Node_DynamicCast_AsGS_TDB;                       // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x0108(0x0018)()
};
static_assert(alignof(WBP_MainCategorySelector_C_UpdateTime) == 0x000008, "Wrong alignment on WBP_MainCategorySelector_C_UpdateTime");
static_assert(sizeof(WBP_MainCategorySelector_C_UpdateTime) == 0x000120, "Wrong size on WBP_MainCategorySelector_C_UpdateTime");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateTime, Hour) == 0x000000, "Member 'WBP_MainCategorySelector_C_UpdateTime::Hour' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateTime, Minute) == 0x000004, "Member 'WBP_MainCategorySelector_C_UpdateTime::Minute' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateTime, Day_Local_) == 0x000008, "Member 'WBP_MainCategorySelector_C_UpdateTime::Day_Local_' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateTime, Temp_byte_Variable) == 0x00000C, "Member 'WBP_MainCategorySelector_C_UpdateTime::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateTime, Temp_int_Variable) == 0x000010, "Member 'WBP_MainCategorySelector_C_UpdateTime::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateTime, Temp_int_Variable_1) == 0x000014, "Member 'WBP_MainCategorySelector_C_UpdateTime::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateTime, Temp_int_Variable_2) == 0x000018, "Member 'WBP_MainCategorySelector_C_UpdateTime::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateTime, Temp_int_Variable_3) == 0x00001C, "Member 'WBP_MainCategorySelector_C_UpdateTime::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateTime, Temp_int_Variable_4) == 0x000020, "Member 'WBP_MainCategorySelector_C_UpdateTime::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateTime, Temp_text_Variable) == 0x000028, "Member 'WBP_MainCategorySelector_C_UpdateTime::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateTime, Temp_text_Variable_1) == 0x000040, "Member 'WBP_MainCategorySelector_C_UpdateTime::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateTime, Temp_text_Variable_2) == 0x000058, "Member 'WBP_MainCategorySelector_C_UpdateTime::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateTime, Temp_text_Variable_3) == 0x000070, "Member 'WBP_MainCategorySelector_C_UpdateTime::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateTime, Temp_text_Variable_4) == 0x000088, "Member 'WBP_MainCategorySelector_C_UpdateTime::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateTime, Temp_text_Variable_5) == 0x0000A0, "Member 'WBP_MainCategorySelector_C_UpdateTime::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateTime, Temp_text_Variable_6) == 0x0000B8, "Member 'WBP_MainCategorySelector_C_UpdateTime::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateTime, Temp_text_Variable_7) == 0x0000D0, "Member 'WBP_MainCategorySelector_C_UpdateTime::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateTime, CallFunc_GetGameState_ReturnValue) == 0x0000E8, "Member 'WBP_MainCategorySelector_C_UpdateTime::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateTime, K2Node_Select_Default) == 0x0000F0, "Member 'WBP_MainCategorySelector_C_UpdateTime::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateTime, K2Node_DynamicCast_AsGS_TDB) == 0x0000F8, "Member 'WBP_MainCategorySelector_C_UpdateTime::K2Node_DynamicCast_AsGS_TDB' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateTime, K2Node_DynamicCast_bSuccess) == 0x000100, "Member 'WBP_MainCategorySelector_C_UpdateTime::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateTime, K2Node_Select_Default_1) == 0x000108, "Member 'WBP_MainCategorySelector_C_UpdateTime::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_MainCategorySelector.WBP_MainCategorySelector_C.UpdateWeight
// 0x0110 (0x0110 - 0x0000)
struct WBP_MainCategorySelector_C_UpdateWeight final
{
public:
	struct FLinearColor                           Color_Overweight_total;                            // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color_NormalWeight_total;                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color_Overweight_Icon;                             // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color_NormalWeight_Icon;                           // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color_Overweight;                                  // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color_NormalWeight;                                // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Weight_Count;                                      // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetStat_Value;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0078(0x0018)()
	double                                        CallFunc_GetStat_Value_1;                          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_1;          // 0x00A0(0x0018)()
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00C8(0x0014)()
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x00DC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x00EC(0x0014)()
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_2;                // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainCategorySelector_C_UpdateWeight) == 0x000008, "Wrong alignment on WBP_MainCategorySelector_C_UpdateWeight");
static_assert(sizeof(WBP_MainCategorySelector_C_UpdateWeight) == 0x000110, "Wrong size on WBP_MainCategorySelector_C_UpdateWeight");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateWeight, Color_Overweight_total) == 0x000000, "Member 'WBP_MainCategorySelector_C_UpdateWeight::Color_Overweight_total' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateWeight, Color_NormalWeight_total) == 0x000010, "Member 'WBP_MainCategorySelector_C_UpdateWeight::Color_NormalWeight_total' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateWeight, Color_Overweight_Icon) == 0x000020, "Member 'WBP_MainCategorySelector_C_UpdateWeight::Color_Overweight_Icon' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateWeight, Color_NormalWeight_Icon) == 0x000030, "Member 'WBP_MainCategorySelector_C_UpdateWeight::Color_NormalWeight_Icon' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateWeight, Color_Overweight) == 0x000040, "Member 'WBP_MainCategorySelector_C_UpdateWeight::Color_Overweight' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateWeight, Color_NormalWeight) == 0x000050, "Member 'WBP_MainCategorySelector_C_UpdateWeight::Color_NormalWeight' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateWeight, Weight_Count) == 0x000060, "Member 'WBP_MainCategorySelector_C_UpdateWeight::Weight_Count' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateWeight, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'WBP_MainCategorySelector_C_UpdateWeight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateWeight, CallFunc_IsValid_ReturnValue_1) == 0x000069, "Member 'WBP_MainCategorySelector_C_UpdateWeight::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateWeight, CallFunc_GetStat_Value) == 0x000070, "Member 'WBP_MainCategorySelector_C_UpdateWeight::CallFunc_GetStat_Value' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateWeight, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000078, "Member 'WBP_MainCategorySelector_C_UpdateWeight::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateWeight, CallFunc_GetStat_Value_1) == 0x000090, "Member 'WBP_MainCategorySelector_C_UpdateWeight::CallFunc_GetStat_Value_1' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateWeight, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000098, "Member 'WBP_MainCategorySelector_C_UpdateWeight::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateWeight, CallFunc_Conv_DoubleToText_ReturnValue_1) == 0x0000A0, "Member 'WBP_MainCategorySelector_C_UpdateWeight::CallFunc_Conv_DoubleToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateWeight, CallFunc_SelectColor_ReturnValue) == 0x0000B8, "Member 'WBP_MainCategorySelector_C_UpdateWeight::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateWeight, K2Node_MakeStruct_SlateColor) == 0x0000C8, "Member 'WBP_MainCategorySelector_C_UpdateWeight::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateWeight, CallFunc_SelectColor_ReturnValue_1) == 0x0000DC, "Member 'WBP_MainCategorySelector_C_UpdateWeight::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateWeight, K2Node_MakeStruct_SlateColor_1) == 0x0000EC, "Member 'WBP_MainCategorySelector_C_UpdateWeight::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_UpdateWeight, CallFunc_SelectColor_ReturnValue_2) == 0x000100, "Member 'WBP_MainCategorySelector_C_UpdateWeight::CallFunc_SelectColor_ReturnValue_2' has a wrong offset!");

// Function WBP_MainCategorySelector.WBP_MainCategorySelector_C.WCoinTrading
// 0x0128 (0x0128 - 0x0000)
struct WBP_MainCategorySelector_C_WCoinTrading final
{
public:
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGS_TDB_C*                              K2Node_DynamicCast_AsGS_TDB;                       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetExchangeRate_TodayExchangeRate;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetExchangeRate_PrevExchangeRate;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetExchangeRate_TodayExchangeRate_1;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetExchangeRate_PrevExchangeRate_1;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0060(0x0018)()
	double                                        CallFunc_NumbersPercentDiffer_Percent;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_1;          // 0x0080(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0098(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00B0(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0100(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0110(0x0018)()
};
static_assert(alignof(WBP_MainCategorySelector_C_WCoinTrading) == 0x000008, "Wrong alignment on WBP_MainCategorySelector_C_WCoinTrading");
static_assert(sizeof(WBP_MainCategorySelector_C_WCoinTrading) == 0x000128, "Wrong size on WBP_MainCategorySelector_C_WCoinTrading");
static_assert(offsetof(WBP_MainCategorySelector_C_WCoinTrading, K2Node_MakeArray_Array) == 0x000000, "Member 'WBP_MainCategorySelector_C_WCoinTrading::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_WCoinTrading, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'WBP_MainCategorySelector_C_WCoinTrading::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_WCoinTrading, K2Node_DynamicCast_AsGS_TDB) == 0x000018, "Member 'WBP_MainCategorySelector_C_WCoinTrading::K2Node_DynamicCast_AsGS_TDB' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_WCoinTrading, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_MainCategorySelector_C_WCoinTrading::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_WCoinTrading, CallFunc_GetExchangeRate_TodayExchangeRate) == 0x000028, "Member 'WBP_MainCategorySelector_C_WCoinTrading::CallFunc_GetExchangeRate_TodayExchangeRate' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_WCoinTrading, CallFunc_GetExchangeRate_PrevExchangeRate) == 0x000030, "Member 'WBP_MainCategorySelector_C_WCoinTrading::CallFunc_GetExchangeRate_PrevExchangeRate' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_WCoinTrading, CallFunc_GetExchangeRate_TodayExchangeRate_1) == 0x000038, "Member 'WBP_MainCategorySelector_C_WCoinTrading::CallFunc_GetExchangeRate_TodayExchangeRate_1' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_WCoinTrading, CallFunc_GetExchangeRate_PrevExchangeRate_1) == 0x000040, "Member 'WBP_MainCategorySelector_C_WCoinTrading::CallFunc_GetExchangeRate_PrevExchangeRate_1' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_WCoinTrading, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000048, "Member 'WBP_MainCategorySelector_C_WCoinTrading::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_WCoinTrading, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x000049, "Member 'WBP_MainCategorySelector_C_WCoinTrading::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_WCoinTrading, CallFunc_SelectInt_ReturnValue) == 0x00004C, "Member 'WBP_MainCategorySelector_C_WCoinTrading::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_WCoinTrading, CallFunc_SelectFloat_ReturnValue) == 0x000050, "Member 'WBP_MainCategorySelector_C_WCoinTrading::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_WCoinTrading, CallFunc_SelectFloat_ReturnValue_1) == 0x000058, "Member 'WBP_MainCategorySelector_C_WCoinTrading::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_WCoinTrading, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000060, "Member 'WBP_MainCategorySelector_C_WCoinTrading::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_WCoinTrading, CallFunc_NumbersPercentDiffer_Percent) == 0x000078, "Member 'WBP_MainCategorySelector_C_WCoinTrading::CallFunc_NumbersPercentDiffer_Percent' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_WCoinTrading, CallFunc_Conv_DoubleToText_ReturnValue_1) == 0x000080, "Member 'WBP_MainCategorySelector_C_WCoinTrading::CallFunc_Conv_DoubleToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_WCoinTrading, CallFunc_Format_ReturnValue) == 0x000098, "Member 'WBP_MainCategorySelector_C_WCoinTrading::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_WCoinTrading, K2Node_MakeStruct_FormatArgumentData) == 0x0000B0, "Member 'WBP_MainCategorySelector_C_WCoinTrading::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_WCoinTrading, K2Node_MakeArray_Array_1) == 0x000100, "Member 'WBP_MainCategorySelector_C_WCoinTrading::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_MainCategorySelector_C_WCoinTrading, CallFunc_Format_ReturnValue_1) == 0x000110, "Member 'WBP_MainCategorySelector_C_WCoinTrading::CallFunc_Format_ReturnValue_1' has a wrong offset!");

}

