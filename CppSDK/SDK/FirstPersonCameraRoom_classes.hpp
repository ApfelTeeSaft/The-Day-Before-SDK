#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FirstPersonCameraRoom

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass FirstPersonCameraRoom.FirstPersonCameraRoom_C
// 0x0038 (0x02C8 - 0x0290)
class AFirstPersonCameraRoom_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCameraComponent*                       Camera;                                            // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ASurvPC_C*                              CachedController;                                  // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      CachedInteractingPawn;                             // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FRotator                               WorldRotation;                                     // 0x02B0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_FirstPersonCameraRoom(int32 EntryPoint);
	void MoveInCamera();
	void MoveOutCamera();
	void ReceiveTick(float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"FirstPersonCameraRoom_C">();
	}
	static class AFirstPersonCameraRoom_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFirstPersonCameraRoom_C>();
	}
};
static_assert(alignof(AFirstPersonCameraRoom_C) == 0x000008, "Wrong alignment on AFirstPersonCameraRoom_C");
static_assert(sizeof(AFirstPersonCameraRoom_C) == 0x0002C8, "Wrong size on AFirstPersonCameraRoom_C");
static_assert(offsetof(AFirstPersonCameraRoom_C, UberGraphFrame) == 0x000290, "Member 'AFirstPersonCameraRoom_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AFirstPersonCameraRoom_C, Camera) == 0x000298, "Member 'AFirstPersonCameraRoom_C::Camera' has a wrong offset!");
static_assert(offsetof(AFirstPersonCameraRoom_C, CachedController) == 0x0002A0, "Member 'AFirstPersonCameraRoom_C::CachedController' has a wrong offset!");
static_assert(offsetof(AFirstPersonCameraRoom_C, CachedInteractingPawn) == 0x0002A8, "Member 'AFirstPersonCameraRoom_C::CachedInteractingPawn' has a wrong offset!");
static_assert(offsetof(AFirstPersonCameraRoom_C, WorldRotation) == 0x0002B0, "Member 'AFirstPersonCameraRoom_C::WorldRotation' has a wrong offset!");

}

