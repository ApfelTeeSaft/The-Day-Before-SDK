#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ultra_Dynamic_Weather

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UDS_WeatherVariables_structs.hpp"
#include "UDS_WeatherTypes_structs.hpp"
#include "Engine_structs.hpp"
#include "UDS_ControlPointMode_structs.hpp"
#include "UDS_DLWE_Mode_structs.hpp"
#include "UDS_TemperatureType_structs.hpp"
#include "UDS_Season_structs.hpp"


namespace SDK::Params
{

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Apply Weather Override Volumes
// 0x0250 (0x0250 - 0x0000)
struct Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes final
{
public:
	class AWeather_Override_Volume_C*             Current_Volume;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	double                                        Current_Volume_Alpha;                              // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Inserted;                                          // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Priorities;                                        // 0x0018(0x0010)(Edit, BlueprintVisible)
	TArray<class AWeather_Override_Volume_C*>     Filtered_List_of_Volumes;                          // 0x0028(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_3;                       // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_4;                       // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_5;                       // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_1;                          // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_FindRightVectorClosestToWorldLocation_ReturnValue; // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FindLocationClosestToWorldLocation_ReturnValue; // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeather_Override_Volume_C*             CallFunc_Array_Get_Item;                           // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1ED[0x3];                                      // 0x01ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Ease_ReturnValue;                         // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0225(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0226(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_227[0x1];                                      // 0x0227(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x022D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22E[0x2];                                      // 0x022E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_2;          // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x023A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23B[0x1];                                      // 0x023B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeather_Override_Volume_C*             CallFunc_Array_Get_Item_2;                         // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes) == 0x000250, "Wrong size on Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, Current_Volume) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::Current_Volume' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, Current_Volume_Alpha) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::Current_Volume_Alpha' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, Inserted) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::Inserted' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, Priorities) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::Priorities' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, Filtered_List_of_Volumes) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::Filtered_List_of_Volumes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, Temp_int_Array_Index_Variable) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, Temp_int_Array_Index_Variable_1) == 0x00003C, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, Temp_int_Array_Index_Variable_2) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, Temp_int_Loop_Counter_Variable_1) == 0x00004C, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Subtract_IntInt_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_BreakVector_X) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_BreakVector_Y) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_BreakVector_Z) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, Temp_bool_True_if_break_was_hit_Variable) == 0x000089, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Not_PreBool_ReturnValue) == 0x00008A, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x00008B, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00008C, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Lerp_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Lerp_ReturnValue_1) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x0000A1, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_BooleanAND_ReturnValue) == 0x0000A2, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_BooleanOR_ReturnValue) == 0x0000A3, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Lerp_ReturnValue_2) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Lerp_ReturnValue_3) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_SelectFloat_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Lerp_ReturnValue_4) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Lerp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Lerp_ReturnValue_5) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Lerp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, Temp_int_Loop_Counter_Variable_2) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_BreakVector_X_1) == 0x0000F0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_BreakVector_Y_1) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_BreakVector_Z_1) == 0x000100, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_MakeVector_ReturnValue) == 0x000108, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Array_Length_ReturnValue) == 0x000120, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_FindRightVectorClosestToWorldLocation_ReturnValue) == 0x000128, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_FindRightVectorClosestToWorldLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Greater_IntInt_ReturnValue) == 0x000140, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000148, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_FindLocationClosestToWorldLocation_ReturnValue) == 0x000160, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_FindLocationClosestToWorldLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000178, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Array_Get_Item) == 0x000190, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_VSize_ReturnValue) == 0x000198, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x0001A0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Array_Length_ReturnValue_1) == 0x0001B8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Normal_ReturnValue) == 0x0001C0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0001D8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Dot_VectorVector_ReturnValue) == 0x0001E0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Max_ReturnValue) == 0x0001E8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x0001EC, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_SelectFloat_ReturnValue_1) == 0x0001F0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0001F8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_MapRangeClamped_ReturnValue) == 0x000200, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Not_PreBool_ReturnValue_1) == 0x000208, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Ease_ReturnValue) == 0x000210, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Array_Add_ReturnValue) == 0x000218, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Array_Get_Item_1) == 0x00021C, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Array_Length_ReturnValue_2) == 0x000220, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000224, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Less_IntInt_ReturnValue) == 0x000225, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_BooleanAND_ReturnValue_1) == 0x000226, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Array_Add_ReturnValue_1) == 0x000228, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_IsDedicatedServer_ReturnValue) == 0x00022C, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Not_PreBool_ReturnValue_2) == 0x00022D, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Vector_Distance_ReturnValue) == 0x000230, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_BooleanAND_ReturnValue_2) == 0x000238, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Less_DoubleDouble_ReturnValue_2) == 0x000239, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Less_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_BooleanAND_ReturnValue_3) == 0x00023A, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Array_Length_ReturnValue_3) == 0x00023C, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Array_Get_Item_2) == 0x000240, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Less_IntInt_ReturnValue_1) == 0x000248, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Apply Weather Preset
// 0x1020 (0x1020 - 0x0000)
struct Ultra_Dynamic_Weather_C_Apply_Weather_Preset final
{
public:
	double                                        Temp_real_Variable;                                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_2;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_4;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_5;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_6;                              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_7;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_8;                              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_9;                              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_10;                             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_11;                             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_12;                             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_13;                             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_1;                              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_14;                             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_15;                             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_16;                             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_17;                             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_18;                             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_19;                             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_20;                             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_21;                             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_22;                             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_23;                             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_24;                             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_25;                             // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_2;                              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_26;                             // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_27;                             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_28;                             // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_29;                             // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_30;                             // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_31;                             // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_32;                             // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_33;                             // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_34;                             // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_35;                             // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_36;                             // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_37;                             // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_3;                              // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_38;                             // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_39;                             // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_40;                             // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_41;                             // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_42;                             // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_43;                             // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_44;                             // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_45;                             // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_46;                             // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_47;                             // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_48;                             // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_49;                             // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_4;                              // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_50;                             // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_51;                             // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_52;                             // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_53;                             // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_54;                             // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_55;                             // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_56;                             // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_57;                             // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_58;                             // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_59;                             // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_60;                             // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_61;                             // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_5;                              // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21A[0x6];                                      // 0x021A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_62;                             // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_63;                             // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_64;                             // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_65;                             // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_66;                             // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_67;                             // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_68;                             // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_69;                             // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_70;                             // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_71;                             // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_72;                             // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_73;                             // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherVariables                         Temp_byte_Variable_6;                              // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_7;                              // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_282[0x6];                                      // 0x0282(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_74;                             // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_75;                             // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_76;                             // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_77;                             // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_78;                             // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_79;                             // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_80;                             // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_81;                             // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_82;                             // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_83;                             // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_84;                             // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_85;                             // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_8;                              // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_86;                             // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_87;                             // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_88;                             // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_89;                             // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_90;                             // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_91;                             // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_92;                             // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_93;                             // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_94;                             // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_95;                             // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_96;                             // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_97;                             // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_9;                              // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_98;                             // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_99;                             // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_100;                            // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_101;                            // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_102;                            // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_103;                            // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_104;                            // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_105;                            // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_106;                            // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_107;                            // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_108;                            // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_109;                            // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_10;                             // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B9[0x7];                                      // 0x03B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_110;                            // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_111;                            // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_112;                            // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_113;                            // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_114;                            // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_115;                            // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_116;                            // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_117;                            // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_118;                            // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_119;                            // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_120;                            // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_121;                            // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_11;                             // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_421[0x7];                                      // 0x0421(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_122;                            // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_123;                            // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_124;                            // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_125;                            // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_126;                            // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_127;                            // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_128;                            // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_129;                            // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_130;                            // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_131;                            // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_132;                            // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_133;                            // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_12;                             // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_489[0x7];                                      // 0x0489(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_134;                            // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_135;                            // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_136;                            // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_137;                            // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_138;                            // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_139;                            // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_140;                            // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_141;                            // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_142;                            // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_143;                            // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_144;                            // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_145;                            // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_13;                             // 0x04F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F2[0x6];                                      // 0x04F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_146;                            // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_147;                            // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_148;                            // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_149;                            // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_150;                            // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_151;                            // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_152;                            // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_153;                            // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_154;                            // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_155;                            // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_156;                            // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_157;                            // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherVariables                         Temp_byte_Variable_14;                             // 0x0558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_15;                             // 0x0559(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55A[0x6];                                      // 0x055A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_158;                            // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_159;                            // 0x0568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_160;                            // 0x0570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_161;                            // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_162;                            // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_163;                            // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_164;                            // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_165;                            // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_166;                            // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_167;                            // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_168;                            // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_169;                            // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_16;                             // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C1[0x7];                                      // 0x05C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_170;                            // 0x05C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_171;                            // 0x05D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_172;                            // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_173;                            // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_174;                            // 0x05E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_175;                            // 0x05F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_176;                            // 0x05F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_177;                            // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_178;                            // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_179;                            // 0x0610(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_180;                            // 0x0618(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_181;                            // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_17;                             // 0x0628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_629[0x7];                                      // 0x0629(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_182;                            // 0x0630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_183;                            // 0x0638(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_184;                            // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_185;                            // 0x0648(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_186;                            // 0x0650(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_187;                            // 0x0658(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_188;                            // 0x0660(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_189;                            // 0x0668(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_190;                            // 0x0670(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_191;                            // 0x0678(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_192;                            // 0x0680(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_193;                            // 0x0688(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_18;                             // 0x0690(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_691[0x7];                                      // 0x0691(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_194;                            // 0x0698(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_195;                            // 0x06A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_196;                            // 0x06A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_197;                            // 0x06B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_198;                            // 0x06B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_199;                            // 0x06C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_200;                            // 0x06C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_201;                            // 0x06D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_202;                            // 0x06D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_203;                            // 0x06E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_204;                            // 0x06E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_205;                            // 0x06F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_19;                             // 0x06F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F9[0x7];                                      // 0x06F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_206;                            // 0x0700(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_207;                            // 0x0708(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_208;                            // 0x0710(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_209;                            // 0x0718(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_210;                            // 0x0720(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_211;                            // 0x0728(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_212;                            // 0x0730(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_213;                            // 0x0738(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_214;                            // 0x0740(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_215;                            // 0x0748(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_216;                            // 0x0750(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_217;                            // 0x0758(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_20;                             // 0x0760(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_761[0x7];                                      // 0x0761(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_218;                            // 0x0768(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_219;                            // 0x0770(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_220;                            // 0x0778(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_221;                            // 0x0780(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_222;                            // 0x0788(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_223;                            // 0x0790(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_224;                            // 0x0798(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_225;                            // 0x07A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_226;                            // 0x07A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_227;                            // 0x07B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_228;                            // 0x07B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_229;                            // 0x07C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x07C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_21;                             // 0x07C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7CA[0x6];                                      // 0x07CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_230;                            // 0x07D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_231;                            // 0x07D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_232;                            // 0x07E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_233;                            // 0x07E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_234;                            // 0x07F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_235;                            // 0x07F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_236;                            // 0x0800(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_237;                            // 0x0808(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_238;                            // 0x0810(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_239;                            // 0x0818(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_240;                            // 0x0820(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_241;                            // 0x0828(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherVariables                         Temp_byte_Variable_22;                             // 0x0830(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_23;                             // 0x0831(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_832[0x6];                                      // 0x0832(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_242;                            // 0x0838(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_243;                            // 0x0840(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_244;                            // 0x0848(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_245;                            // 0x0850(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_246;                            // 0x0858(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_247;                            // 0x0860(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_248;                            // 0x0868(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_249;                            // 0x0870(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_250;                            // 0x0878(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_251;                            // 0x0880(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_252;                            // 0x0888(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_253;                            // 0x0890(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_24;                             // 0x0898(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_899[0x7];                                      // 0x0899(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_254;                            // 0x08A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_255;                            // 0x08A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_256;                            // 0x08B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_257;                            // 0x08B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_258;                            // 0x08C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_259;                            // 0x08C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_260;                            // 0x08D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_261;                            // 0x08D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_262;                            // 0x08E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_263;                            // 0x08E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_264;                            // 0x08F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_265;                            // 0x08F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_25;                             // 0x0900(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_901[0x7];                                      // 0x0901(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_266;                            // 0x0908(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_267;                            // 0x0910(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_268;                            // 0x0918(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_269;                            // 0x0920(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_270;                            // 0x0928(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_271;                            // 0x0930(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_272;                            // 0x0938(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_273;                            // 0x0940(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_274;                            // 0x0948(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_275;                            // 0x0950(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_276;                            // 0x0958(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_277;                            // 0x0960(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_26;                             // 0x0968(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_969[0x7];                                      // 0x0969(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_278;                            // 0x0970(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_279;                            // 0x0978(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_280;                            // 0x0980(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_281;                            // 0x0988(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_282;                            // 0x0990(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_283;                            // 0x0998(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_284;                            // 0x09A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_285;                            // 0x09A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_286;                            // 0x09B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_287;                            // 0x09B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_288;                            // 0x09C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_289;                            // 0x09C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_27;                             // 0x09D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D1[0x7];                                      // 0x09D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_290;                            // 0x09D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_291;                            // 0x09E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_292;                            // 0x09E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_293;                            // 0x09F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_294;                            // 0x09F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_295;                            // 0x0A00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_296;                            // 0x0A08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_297;                            // 0x0A10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_298;                            // 0x0A18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_299;                            // 0x0A20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_300;                            // 0x0A28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_301;                            // 0x0A30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_28;                             // 0x0A38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A39[0x7];                                      // 0x0A39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_302;                            // 0x0A40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_303;                            // 0x0A48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_304;                            // 0x0A50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_305;                            // 0x0A58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_306;                            // 0x0A60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_307;                            // 0x0A68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_308;                            // 0x0A70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_309;                            // 0x0A78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_310;                            // 0x0A80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_311;                            // 0x0A88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_312;                            // 0x0A90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_313;                            // 0x0A98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_3;            // 0x0AA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_29;                             // 0x0AA1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA2[0x6];                                      // 0x0AA2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_314;                            // 0x0AA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_315;                            // 0x0AB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_316;                            // 0x0AB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_317;                            // 0x0AC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_318;                            // 0x0AC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_319;                            // 0x0AD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_320;                            // 0x0AD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_321;                            // 0x0AE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_322;                            // 0x0AE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_323;                            // 0x0AF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_324;                            // 0x0AF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_325;                            // 0x0B00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherVariables                         Temp_byte_Variable_30;                             // 0x0B08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_31;                             // 0x0B09(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B0A[0x6];                                      // 0x0B0A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_326;                            // 0x0B10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_327;                            // 0x0B18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_328;                            // 0x0B20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_329;                            // 0x0B28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_330;                            // 0x0B30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_331;                            // 0x0B38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_332;                            // 0x0B40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_333;                            // 0x0B48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_334;                            // 0x0B50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_335;                            // 0x0B58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_336;                            // 0x0B60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_337;                            // 0x0B68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_32;                             // 0x0B70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B71[0x7];                                      // 0x0B71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_338;                            // 0x0B78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_339;                            // 0x0B80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_340;                            // 0x0B88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_341;                            // 0x0B90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_342;                            // 0x0B98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_343;                            // 0x0BA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_344;                            // 0x0BA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_345;                            // 0x0BB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_346;                            // 0x0BB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_347;                            // 0x0BC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_348;                            // 0x0BC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_349;                            // 0x0BD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_33;                             // 0x0BD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD9[0x7];                                      // 0x0BD9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_350;                            // 0x0BE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_351;                            // 0x0BE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_352;                            // 0x0BF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_353;                            // 0x0BF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_354;                            // 0x0C00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_355;                            // 0x0C08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_356;                            // 0x0C10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_357;                            // 0x0C18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_358;                            // 0x0C20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_359;                            // 0x0C28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_360;                            // 0x0C30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_361;                            // 0x0C38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_34;                             // 0x0C40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C41[0x7];                                      // 0x0C41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_362;                            // 0x0C48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_363;                            // 0x0C50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_364;                            // 0x0C58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_365;                            // 0x0C60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_366;                            // 0x0C68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_367;                            // 0x0C70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_368;                            // 0x0C78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_369;                            // 0x0C80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_370;                            // 0x0C88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_371;                            // 0x0C90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_372;                            // 0x0C98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_373;                            // 0x0CA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_35;                             // 0x0CA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA9[0x7];                                      // 0x0CA9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_374;                            // 0x0CB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_375;                            // 0x0CB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_376;                            // 0x0CC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_377;                            // 0x0CC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_378;                            // 0x0CD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_379;                            // 0x0CD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_380;                            // 0x0CE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_381;                            // 0x0CE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_382;                            // 0x0CF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_383;                            // 0x0CF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_384;                            // 0x0D00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_385;                            // 0x0D08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_36;                             // 0x0D10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D11[0x7];                                      // 0x0D11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_386;                            // 0x0D18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_387;                            // 0x0D20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_388;                            // 0x0D28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_389;                            // 0x0D30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_390;                            // 0x0D38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_391;                            // 0x0D40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_392;                            // 0x0D48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_393;                            // 0x0D50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_394;                            // 0x0D58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_395;                            // 0x0D60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_396;                            // 0x0D68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_397;                            // 0x0D70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_4;            // 0x0D78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_37;                             // 0x0D79(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D7A[0x6];                                      // 0x0D7A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_398;                            // 0x0D80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_399;                            // 0x0D88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_400;                            // 0x0D90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_401;                            // 0x0D98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_402;                            // 0x0DA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_403;                            // 0x0DA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_404;                            // 0x0DB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_405;                            // 0x0DB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_406;                            // 0x0DC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_407;                            // 0x0DC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_408;                            // 0x0DD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_409;                            // 0x0DD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_38;                             // 0x0DE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DE1[0x7];                                      // 0x0DE1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_410;                            // 0x0DE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_411;                            // 0x0DF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_412;                            // 0x0DF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_413;                            // 0x0E00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_414;                            // 0x0E08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_415;                            // 0x0E10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_416;                            // 0x0E18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_417;                            // 0x0E20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_418;                            // 0x0E28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_419;                            // 0x0E30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_420;                            // 0x0E38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_421;                            // 0x0E40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherVariables                         Temp_byte_Variable_39;                             // 0x0E48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_40;                             // 0x0E49(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4A[0x6];                                      // 0x0E4A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_422;                            // 0x0E50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_423;                            // 0x0E58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_424;                            // 0x0E60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherVariables                         Temp_byte_Variable_41;                             // 0x0E68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E69[0x7];                                      // 0x0E69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_425;                            // 0x0E70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_426;                            // 0x0E78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_427;                            // 0x0E80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_5;            // 0x0E88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E89[0x7];                                      // 0x0E89(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_428;                            // 0x0E90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_429;                            // 0x0E98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0EA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x0EA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_2;                           // 0x0EB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_3;                           // 0x0EB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_4;                           // 0x0EC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_5;                           // 0x0EC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_6;                           // 0x0ED0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_7;                           // 0x0ED8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_8;                           // 0x0EE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_9;                           // 0x0EE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_10;                          // 0x0EF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_11;                          // 0x0EF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0F00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F01[0x7];                                      // 0x0F01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_430;                            // 0x0F08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_12;                          // 0x0F10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_13;                          // 0x0F18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_14;                          // 0x0F20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_15;                          // 0x0F28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_16;                          // 0x0F30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_17;                          // 0x0F38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_18;                          // 0x0F40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_19;                          // 0x0F48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_20;                          // 0x0F50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_21;                          // 0x0F58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_22;                          // 0x0F60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_23;                          // 0x0F68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_24;                          // 0x0F70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_25;                          // 0x0F78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_26;                          // 0x0F80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_27;                          // 0x0F88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_28;                          // 0x0F90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_29;                          // 0x0F98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_30;                          // 0x0FA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_431;                            // 0x0FA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_31;                          // 0x0FB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_32;                          // 0x0FB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_33;                          // 0x0FC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_34;                          // 0x0FC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EUDS_WeatherTypes>                     K2Node_MakeArray_Array;                            // 0x0FD0(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0FE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0FE1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FE2[0x6];                                      // 0x0FE2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_35;                          // 0x0FE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_36;                          // 0x0FF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_37;                          // 0x0FF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_38;                          // 0x1000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_39;                          // 0x1008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_40;                          // 0x1010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_41;                          // 0x1018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Apply_Weather_Preset");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset) == 0x001020, "Wrong size on Ultra_Dynamic_Weather_C_Apply_Weather_Preset");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_1) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_byte_Variable) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_2) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_3) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_4) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_5) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_6) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_7) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_8) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_9) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_10) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_11) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_12) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_13) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_byte_Variable_1) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_14) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_15) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_16) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_17) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_18) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_19) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_20) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_21) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_22) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_22' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_23) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_23' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_24) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_24' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_25) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_25' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_byte_Variable_2) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_26) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_26' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_27) == 0x0000F0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_27' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_28) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_28' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_29) == 0x000100, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_29' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_30) == 0x000108, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_30' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_31) == 0x000110, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_31' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_32) == 0x000118, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_32' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_33) == 0x000120, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_33' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_34) == 0x000128, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_34' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_35) == 0x000130, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_35' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_36) == 0x000138, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_36' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_37) == 0x000140, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_37' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_byte_Variable_3) == 0x000148, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_38) == 0x000150, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_38' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_39) == 0x000158, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_39' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_40) == 0x000160, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_40' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_41) == 0x000168, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_41' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_42) == 0x000170, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_42' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_43) == 0x000178, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_43' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_44) == 0x000180, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_44' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_45) == 0x000188, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_45' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_46) == 0x000190, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_46' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_47) == 0x000198, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_47' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_48) == 0x0001A0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_48' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_49) == 0x0001A8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_49' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_byte_Variable_4) == 0x0001B0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_50) == 0x0001B8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_50' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_51) == 0x0001C0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_51' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_52) == 0x0001C8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_52' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_53) == 0x0001D0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_53' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_54) == 0x0001D8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_54' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_55) == 0x0001E0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_55' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_56) == 0x0001E8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_56' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_57) == 0x0001F0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_57' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_58) == 0x0001F8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_58' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_59) == 0x000200, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_59' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_60) == 0x000208, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_60' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_61) == 0x000210, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_61' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, CallFunc_MakeLiteralByte_ReturnValue) == 0x000218, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_byte_Variable_5) == 0x000219, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_62) == 0x000220, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_62' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_63) == 0x000228, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_63' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_64) == 0x000230, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_64' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_65) == 0x000238, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_65' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_66) == 0x000240, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_66' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_67) == 0x000248, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_67' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_68) == 0x000250, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_68' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_69) == 0x000258, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_69' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_70) == 0x000260, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_70' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_71) == 0x000268, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_71' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_72) == 0x000270, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_72' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_73) == 0x000278, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_73' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_byte_Variable_6) == 0x000280, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_byte_Variable_7) == 0x000281, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_74) == 0x000288, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_74' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_75) == 0x000290, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_75' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_76) == 0x000298, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_76' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_77) == 0x0002A0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_77' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_78) == 0x0002A8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_78' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_79) == 0x0002B0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_79' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_80) == 0x0002B8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_80' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_81) == 0x0002C0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_81' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_82) == 0x0002C8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_82' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_83) == 0x0002D0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_83' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_84) == 0x0002D8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_84' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_85) == 0x0002E0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_85' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_byte_Variable_8) == 0x0002E8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_86) == 0x0002F0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_86' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_87) == 0x0002F8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_87' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_88) == 0x000300, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_88' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_89) == 0x000308, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_89' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_90) == 0x000310, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_90' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_91) == 0x000318, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_91' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_92) == 0x000320, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_92' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_93) == 0x000328, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_93' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_94) == 0x000330, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_94' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_95) == 0x000338, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_95' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_96) == 0x000340, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_96' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_97) == 0x000348, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_97' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_byte_Variable_9) == 0x000350, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_98) == 0x000358, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_98' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_99) == 0x000360, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_99' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_100) == 0x000368, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_100' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_101) == 0x000370, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_101' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_102) == 0x000378, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_102' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_103) == 0x000380, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_103' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_104) == 0x000388, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_104' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_105) == 0x000390, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_105' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_106) == 0x000398, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_106' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_107) == 0x0003A0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_107' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_108) == 0x0003A8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_108' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_109) == 0x0003B0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_109' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_byte_Variable_10) == 0x0003B8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_110) == 0x0003C0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_110' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_111) == 0x0003C8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_111' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_112) == 0x0003D0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_112' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_113) == 0x0003D8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_113' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_114) == 0x0003E0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_114' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_115) == 0x0003E8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_115' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_116) == 0x0003F0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_116' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_117) == 0x0003F8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_117' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_118) == 0x000400, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_118' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_119) == 0x000408, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_119' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_120) == 0x000410, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_120' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_121) == 0x000418, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_121' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_byte_Variable_11) == 0x000420, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_122) == 0x000428, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_122' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_123) == 0x000430, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_123' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_124) == 0x000438, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_124' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_125) == 0x000440, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_125' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_126) == 0x000448, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_126' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_127) == 0x000450, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_127' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_128) == 0x000458, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_128' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_129) == 0x000460, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_129' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_130) == 0x000468, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_130' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_131) == 0x000470, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_131' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_132) == 0x000478, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_132' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_133) == 0x000480, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_133' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_byte_Variable_12) == 0x000488, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_134) == 0x000490, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_134' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_135) == 0x000498, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_135' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_136) == 0x0004A0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_136' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_137) == 0x0004A8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_137' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_138) == 0x0004B0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_138' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_139) == 0x0004B8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_139' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_140) == 0x0004C0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_140' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_141) == 0x0004C8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_141' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_142) == 0x0004D0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_142' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_143) == 0x0004D8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_143' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_144) == 0x0004E0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_144' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_145) == 0x0004E8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_145' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x0004F0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_byte_Variable_13) == 0x0004F1, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_146) == 0x0004F8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_146' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_147) == 0x000500, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_147' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_148) == 0x000508, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_148' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_149) == 0x000510, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_149' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_150) == 0x000518, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_150' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_151) == 0x000520, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_151' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_152) == 0x000528, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_152' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_153) == 0x000530, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_153' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_154) == 0x000538, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_154' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_155) == 0x000540, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_155' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_156) == 0x000548, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_156' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_157) == 0x000550, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_157' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_byte_Variable_14) == 0x000558, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_byte_Variable_15) == 0x000559, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_158) == 0x000560, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_158' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_159) == 0x000568, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_159' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_160) == 0x000570, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_160' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_161) == 0x000578, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_161' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_162) == 0x000580, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_162' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_163) == 0x000588, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_163' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_164) == 0x000590, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_164' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_165) == 0x000598, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_165' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_166) == 0x0005A0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_166' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_167) == 0x0005A8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_167' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_168) == 0x0005B0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_168' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_169) == 0x0005B8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_169' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_byte_Variable_16) == 0x0005C0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_170) == 0x0005C8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_170' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_171) == 0x0005D0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_171' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_172) == 0x0005D8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_172' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_173) == 0x0005E0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_173' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_174) == 0x0005E8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_174' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_175) == 0x0005F0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_175' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_176) == 0x0005F8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_176' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_177) == 0x000600, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_177' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_178) == 0x000608, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_178' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_179) == 0x000610, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_179' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_180) == 0x000618, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_180' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_181) == 0x000620, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_181' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_byte_Variable_17) == 0x000628, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_182) == 0x000630, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_182' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_183) == 0x000638, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_183' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_184) == 0x000640, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_184' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_185) == 0x000648, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_185' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_186) == 0x000650, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_186' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_187) == 0x000658, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_187' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_188) == 0x000660, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_188' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_189) == 0x000668, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_189' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_190) == 0x000670, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_190' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_191) == 0x000678, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_191' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_192) == 0x000680, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_192' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_193) == 0x000688, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_193' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_byte_Variable_18) == 0x000690, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_194) == 0x000698, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_194' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_195) == 0x0006A0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_195' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_196) == 0x0006A8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_196' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_197) == 0x0006B0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_197' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_198) == 0x0006B8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_198' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_199) == 0x0006C0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_199' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_200) == 0x0006C8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_200' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_201) == 0x0006D0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_201' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_202) == 0x0006D8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_202' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_203) == 0x0006E0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_203' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_204) == 0x0006E8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_204' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_205) == 0x0006F0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_205' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_byte_Variable_19) == 0x0006F8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_byte_Variable_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_206) == 0x000700, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_206' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_207) == 0x000708, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_207' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_208) == 0x000710, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_208' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_209) == 0x000718, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_209' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_210) == 0x000720, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_210' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_211) == 0x000728, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_211' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_212) == 0x000730, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_212' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_213) == 0x000738, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_213' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_214) == 0x000740, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_214' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_215) == 0x000748, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_215' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_216) == 0x000750, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_216' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_217) == 0x000758, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_217' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_byte_Variable_20) == 0x000760, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_byte_Variable_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_218) == 0x000768, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_218' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_219) == 0x000770, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_219' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_220) == 0x000778, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_220' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_221) == 0x000780, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_221' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_222) == 0x000788, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_222' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_223) == 0x000790, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_223' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_224) == 0x000798, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_224' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_225) == 0x0007A0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_225' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_226) == 0x0007A8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_226' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_227) == 0x0007B0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_227' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_228) == 0x0007B8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_228' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_229) == 0x0007C0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_229' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x0007C8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_byte_Variable_21) == 0x0007C9, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_byte_Variable_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_230) == 0x0007D0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_230' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_231) == 0x0007D8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_231' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_232) == 0x0007E0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_232' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_233) == 0x0007E8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_233' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_234) == 0x0007F0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_234' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_235) == 0x0007F8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_235' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_236) == 0x000800, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_236' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_237) == 0x000808, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_237' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_238) == 0x000810, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_238' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_239) == 0x000818, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_239' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_240) == 0x000820, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_240' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_241) == 0x000828, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_241' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_byte_Variable_22) == 0x000830, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_byte_Variable_22' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_byte_Variable_23) == 0x000831, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_byte_Variable_23' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_242) == 0x000838, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_242' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_243) == 0x000840, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_243' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_244) == 0x000848, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_244' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_245) == 0x000850, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_245' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_246) == 0x000858, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_246' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_247) == 0x000860, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_247' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_248) == 0x000868, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_248' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_249) == 0x000870, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_249' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_250) == 0x000878, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_250' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_251) == 0x000880, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_251' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_252) == 0x000888, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_252' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_253) == 0x000890, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_253' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_byte_Variable_24) == 0x000898, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_byte_Variable_24' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_254) == 0x0008A0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_254' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_255) == 0x0008A8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_255' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_256) == 0x0008B0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_256' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_257) == 0x0008B8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_257' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_258) == 0x0008C0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_258' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_259) == 0x0008C8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_259' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_260) == 0x0008D0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_260' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_261) == 0x0008D8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_261' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_262) == 0x0008E0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_262' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_263) == 0x0008E8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_263' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_264) == 0x0008F0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_264' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_265) == 0x0008F8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_265' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_byte_Variable_25) == 0x000900, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_byte_Variable_25' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_266) == 0x000908, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_266' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_267) == 0x000910, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_267' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_268) == 0x000918, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_268' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_269) == 0x000920, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_269' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_270) == 0x000928, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_270' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_271) == 0x000930, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_271' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_272) == 0x000938, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_272' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_273) == 0x000940, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_273' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_274) == 0x000948, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_274' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_275) == 0x000950, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_275' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_276) == 0x000958, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_276' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_277) == 0x000960, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_277' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_byte_Variable_26) == 0x000968, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_byte_Variable_26' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_278) == 0x000970, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_278' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_279) == 0x000978, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_279' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_280) == 0x000980, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_280' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_281) == 0x000988, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_281' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_282) == 0x000990, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_282' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_283) == 0x000998, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_283' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_284) == 0x0009A0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_284' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_285) == 0x0009A8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_285' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_286) == 0x0009B0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_286' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_287) == 0x0009B8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_287' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_288) == 0x0009C0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_288' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_289) == 0x0009C8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_289' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_byte_Variable_27) == 0x0009D0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_byte_Variable_27' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_290) == 0x0009D8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_290' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_291) == 0x0009E0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_291' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_292) == 0x0009E8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_292' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_293) == 0x0009F0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_293' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_294) == 0x0009F8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_294' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_295) == 0x000A00, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_295' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_296) == 0x000A08, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_296' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_297) == 0x000A10, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_297' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_298) == 0x000A18, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_298' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_299) == 0x000A20, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_299' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_300) == 0x000A28, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_300' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_301) == 0x000A30, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_301' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_byte_Variable_28) == 0x000A38, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_byte_Variable_28' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_302) == 0x000A40, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_302' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_303) == 0x000A48, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_303' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_304) == 0x000A50, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_304' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_305) == 0x000A58, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_305' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_306) == 0x000A60, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_306' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_307) == 0x000A68, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_307' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_308) == 0x000A70, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_308' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_309) == 0x000A78, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_309' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_310) == 0x000A80, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_310' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_311) == 0x000A88, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_311' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_312) == 0x000A90, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_312' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_313) == 0x000A98, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_313' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, CallFunc_MakeLiteralByte_ReturnValue_3) == 0x000AA0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::CallFunc_MakeLiteralByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_byte_Variable_29) == 0x000AA1, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_byte_Variable_29' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_314) == 0x000AA8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_314' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_315) == 0x000AB0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_315' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_316) == 0x000AB8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_316' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_317) == 0x000AC0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_317' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_318) == 0x000AC8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_318' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_319) == 0x000AD0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_319' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_320) == 0x000AD8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_320' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_321) == 0x000AE0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_321' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_322) == 0x000AE8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_322' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_323) == 0x000AF0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_323' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_324) == 0x000AF8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_324' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_325) == 0x000B00, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_325' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_byte_Variable_30) == 0x000B08, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_byte_Variable_30' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_byte_Variable_31) == 0x000B09, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_byte_Variable_31' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_326) == 0x000B10, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_326' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_327) == 0x000B18, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_327' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_328) == 0x000B20, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_328' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_329) == 0x000B28, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_329' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_330) == 0x000B30, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_330' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_331) == 0x000B38, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_331' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_332) == 0x000B40, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_332' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_333) == 0x000B48, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_333' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_334) == 0x000B50, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_334' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_335) == 0x000B58, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_335' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_336) == 0x000B60, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_336' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_337) == 0x000B68, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_337' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_byte_Variable_32) == 0x000B70, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_byte_Variable_32' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_338) == 0x000B78, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_338' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_339) == 0x000B80, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_339' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_340) == 0x000B88, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_340' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_341) == 0x000B90, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_341' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_342) == 0x000B98, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_342' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_343) == 0x000BA0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_343' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_344) == 0x000BA8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_344' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_345) == 0x000BB0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_345' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_346) == 0x000BB8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_346' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_347) == 0x000BC0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_347' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_348) == 0x000BC8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_348' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_349) == 0x000BD0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_349' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_byte_Variable_33) == 0x000BD8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_byte_Variable_33' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_350) == 0x000BE0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_350' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_351) == 0x000BE8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_351' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_352) == 0x000BF0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_352' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_353) == 0x000BF8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_353' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_354) == 0x000C00, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_354' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_355) == 0x000C08, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_355' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_356) == 0x000C10, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_356' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_357) == 0x000C18, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_357' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_358) == 0x000C20, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_358' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_359) == 0x000C28, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_359' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_360) == 0x000C30, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_360' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_361) == 0x000C38, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_361' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_byte_Variable_34) == 0x000C40, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_byte_Variable_34' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_362) == 0x000C48, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_362' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_363) == 0x000C50, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_363' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_364) == 0x000C58, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_364' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_365) == 0x000C60, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_365' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_366) == 0x000C68, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_366' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_367) == 0x000C70, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_367' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_368) == 0x000C78, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_368' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_369) == 0x000C80, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_369' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_370) == 0x000C88, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_370' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_371) == 0x000C90, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_371' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_372) == 0x000C98, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_372' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_373) == 0x000CA0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_373' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_byte_Variable_35) == 0x000CA8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_byte_Variable_35' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_374) == 0x000CB0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_374' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_375) == 0x000CB8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_375' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_376) == 0x000CC0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_376' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_377) == 0x000CC8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_377' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_378) == 0x000CD0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_378' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_379) == 0x000CD8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_379' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_380) == 0x000CE0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_380' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_381) == 0x000CE8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_381' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_382) == 0x000CF0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_382' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_383) == 0x000CF8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_383' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_384) == 0x000D00, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_384' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_385) == 0x000D08, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_385' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_byte_Variable_36) == 0x000D10, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_byte_Variable_36' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_386) == 0x000D18, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_386' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_387) == 0x000D20, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_387' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_388) == 0x000D28, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_388' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_389) == 0x000D30, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_389' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_390) == 0x000D38, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_390' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_391) == 0x000D40, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_391' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_392) == 0x000D48, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_392' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_393) == 0x000D50, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_393' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_394) == 0x000D58, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_394' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_395) == 0x000D60, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_395' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_396) == 0x000D68, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_396' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_397) == 0x000D70, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_397' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, CallFunc_MakeLiteralByte_ReturnValue_4) == 0x000D78, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::CallFunc_MakeLiteralByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_byte_Variable_37) == 0x000D79, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_byte_Variable_37' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_398) == 0x000D80, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_398' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_399) == 0x000D88, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_399' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_400) == 0x000D90, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_400' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_401) == 0x000D98, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_401' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_402) == 0x000DA0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_402' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_403) == 0x000DA8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_403' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_404) == 0x000DB0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_404' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_405) == 0x000DB8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_405' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_406) == 0x000DC0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_406' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_407) == 0x000DC8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_407' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_408) == 0x000DD0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_408' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_409) == 0x000DD8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_409' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_byte_Variable_38) == 0x000DE0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_byte_Variable_38' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_410) == 0x000DE8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_410' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_411) == 0x000DF0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_411' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_412) == 0x000DF8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_412' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_413) == 0x000E00, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_413' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_414) == 0x000E08, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_414' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_415) == 0x000E10, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_415' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_416) == 0x000E18, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_416' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_417) == 0x000E20, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_417' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_418) == 0x000E28, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_418' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_419) == 0x000E30, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_419' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_420) == 0x000E38, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_420' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_421) == 0x000E40, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_421' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_byte_Variable_39) == 0x000E48, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_byte_Variable_39' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_byte_Variable_40) == 0x000E49, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_byte_Variable_40' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_422) == 0x000E50, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_422' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_423) == 0x000E58, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_423' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_424) == 0x000E60, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_424' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_byte_Variable_41) == 0x000E68, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_byte_Variable_41' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_425) == 0x000E70, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_425' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_426) == 0x000E78, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_426' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_427) == 0x000E80, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_427' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, CallFunc_MakeLiteralByte_ReturnValue_5) == 0x000E88, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::CallFunc_MakeLiteralByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_428) == 0x000E90, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_428' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_429) == 0x000E98, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_429' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, K2Node_Select_Default) == 0x000EA0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, K2Node_Select_Default_1) == 0x000EA8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, K2Node_Select_Default_2) == 0x000EB0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, K2Node_Select_Default_3) == 0x000EB8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, K2Node_Select_Default_4) == 0x000EC0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, K2Node_Select_Default_5) == 0x000EC8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, K2Node_Select_Default_6) == 0x000ED0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, K2Node_Select_Default_7) == 0x000ED8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, K2Node_Select_Default_8) == 0x000EE0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, K2Node_Select_Default_9) == 0x000EE8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, K2Node_Select_Default_10) == 0x000EF0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, K2Node_Select_Default_11) == 0x000EF8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, CallFunc_Not_PreBool_ReturnValue) == 0x000F00, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_430) == 0x000F08, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_430' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, K2Node_Select_Default_12) == 0x000F10, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::K2Node_Select_Default_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, K2Node_Select_Default_13) == 0x000F18, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::K2Node_Select_Default_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, K2Node_Select_Default_14) == 0x000F20, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::K2Node_Select_Default_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, K2Node_Select_Default_15) == 0x000F28, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::K2Node_Select_Default_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, K2Node_Select_Default_16) == 0x000F30, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::K2Node_Select_Default_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, K2Node_Select_Default_17) == 0x000F38, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::K2Node_Select_Default_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, K2Node_Select_Default_18) == 0x000F40, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::K2Node_Select_Default_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, K2Node_Select_Default_19) == 0x000F48, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::K2Node_Select_Default_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, K2Node_Select_Default_20) == 0x000F50, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::K2Node_Select_Default_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, K2Node_Select_Default_21) == 0x000F58, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::K2Node_Select_Default_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, K2Node_Select_Default_22) == 0x000F60, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::K2Node_Select_Default_22' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, K2Node_Select_Default_23) == 0x000F68, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::K2Node_Select_Default_23' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, K2Node_Select_Default_24) == 0x000F70, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::K2Node_Select_Default_24' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, K2Node_Select_Default_25) == 0x000F78, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::K2Node_Select_Default_25' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, K2Node_Select_Default_26) == 0x000F80, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::K2Node_Select_Default_26' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, K2Node_Select_Default_27) == 0x000F88, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::K2Node_Select_Default_27' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, K2Node_Select_Default_28) == 0x000F90, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::K2Node_Select_Default_28' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, K2Node_Select_Default_29) == 0x000F98, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::K2Node_Select_Default_29' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, K2Node_Select_Default_30) == 0x000FA0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::K2Node_Select_Default_30' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, Temp_real_Variable_431) == 0x000FA8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::Temp_real_Variable_431' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, K2Node_Select_Default_31) == 0x000FB0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::K2Node_Select_Default_31' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, K2Node_Select_Default_32) == 0x000FB8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::K2Node_Select_Default_32' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, K2Node_Select_Default_33) == 0x000FC0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::K2Node_Select_Default_33' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, K2Node_Select_Default_34) == 0x000FC8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::K2Node_Select_Default_34' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, K2Node_MakeArray_Array) == 0x000FD0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, CallFunc_Array_Contains_ReturnValue) == 0x000FE0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, CallFunc_Not_PreBool_ReturnValue_1) == 0x000FE1, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, K2Node_Select_Default_35) == 0x000FE8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::K2Node_Select_Default_35' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, K2Node_Select_Default_36) == 0x000FF0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::K2Node_Select_Default_36' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, K2Node_Select_Default_37) == 0x000FF8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::K2Node_Select_Default_37' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, K2Node_Select_Default_38) == 0x001000, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::K2Node_Select_Default_38' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, K2Node_Select_Default_39) == 0x001008, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::K2Node_Select_Default_39' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, K2Node_Select_Default_40) == 0x001010, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::K2Node_Select_Default_40' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Preset, K2Node_Select_Default_41) == 0x001018, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Preset::K2Node_Select_Default_41' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Audio Update
// 0x04B8 (0x04B8 - 0x0000)
struct Ultra_Dynamic_Weather_C_Audio_Update final
{
public:
	TArray<double>                                Sound_Occlusion;                                   // 0x0000(0x0010)(Edit, BlueprintVisible)
	double                                        Current_Wind_Global_LPF;                           // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Unoccluded_Rain_Volume;                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_2; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_4;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_5;        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_3; // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_6;        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_7;        // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_4; // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_8;        // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_9;        // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_5; // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_6; // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_10;       // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_3;            // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_4;            // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_5;            // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E5[0x3];                                      // 0x01E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_Array_Get_Item;                           // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_205[0x3];                                      // 0x0205(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item_1;                         // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item_2;                         // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item_3;                         // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                K2Node_MakeArray_Array;                            // 0x0220(0x0010)(ReferenceParm)
	double                                        CallFunc_Array_Get_Item_4;                         // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue_6;            // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                K2Node_Select_Default;                             // 0x0248(0x0010)(ReferenceParm)
	double                                        CallFunc_MapRangeClamped_ReturnValue_7;            // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_8;            // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_9;            // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_10;           // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_11;       // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue_11;           // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_Array_Get_Item_5;                         // 0x02B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMin_ReturnValue_1;                       // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_Array_Get_Item_6;                         // 0x02D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DD[0x3];                                      // 0x02DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue_12;           // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue_13;           // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_Array_Get_Item_7;                         // 0x0300(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue_14;           // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_9;      // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_10;     // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_11;     // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_Array_Get_Item_8;                         // 0x0330(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_15;           // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0344(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_345[0x3];                                      // 0x0345(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_12;     // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PerlinNoise1D_ReturnValue;                // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C[0x4];                                      // 0x035C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue_1;       // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_16;           // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_13;     // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PerlinNoise1D_ReturnValue_1;              // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_384[0x4];                                      // 0x0384(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue_17;           // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_14;     // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_15;     // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC[0x4];                                      // 0x03AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_16;     // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_17;     // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_18;     // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_19;     // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_20;     // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_12;       // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_7; // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        K2Node_MakeArray_Array_1;                          // 0x03E8(0x0010)(ReferenceParm)
	double                                        CallFunc_MapRangeClamped_ReturnValue_18;           // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item_9;                         // 0x0400(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0418(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_19;           // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_21;     // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_22;     // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast;   // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast_1; // 0x0454(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast_2; // 0x0458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast_3; // 0x045C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0464(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLowPassFilterFrequency_InLowPassFilterFrequency_ImplicitCast; // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast_4; // 0x046C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLowPassFilterFrequency_InLowPassFilterFrequency_ImplicitCast_1; // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_LowPassFilterFrequency_ImplicitCast; // 0x0474(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLowPassFilterFrequency_InLowPassFilterFrequency_ImplicitCast_2; // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast; // 0x047C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PerlinNoise1D_Value_ImplicitCast;         // 0x0480(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_484[0x4];                                      // 0x0484(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast;       // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PerlinNoise1D_Value_ImplicitCast_1;       // 0x0490(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_494[0x4];                                      // 0x0494(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast_1;     // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast_1; // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A4[0x4];                                      // 0x04A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast_2; // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast_3; // 0x04B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Audio_Update) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Audio_Update");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Audio_Update) == 0x0004B8, "Wrong size on Ultra_Dynamic_Weather_C_Audio_Update");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, Sound_Occlusion) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::Sound_Occlusion' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, Current_Wind_Global_LPF) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::Current_Wind_Global_LPF' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, Unoccluded_Rain_Volume) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::Unoccluded_Rain_Volume' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Lerp_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Lerp_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_MapRangeClamped_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_2) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, Temp_int_Variable) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Divide_DoubleDouble_ReturnValue_4) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Divide_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_MapRangeClamped_ReturnValue_1) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Divide_DoubleDouble_ReturnValue_5) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Divide_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_3) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Divide_DoubleDouble_ReturnValue_6) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Divide_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Divide_DoubleDouble_ReturnValue_7) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Divide_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0000F0, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_4) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000100, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Divide_DoubleDouble_ReturnValue_8) == 0x000108, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Divide_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Divide_DoubleDouble_ReturnValue_9) == 0x000110, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Divide_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000118, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_5) == 0x000120, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000128, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_6) == 0x000130, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Divide_DoubleDouble_ReturnValue_10) == 0x000138, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Divide_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_MapRangeClamped_ReturnValue_3) == 0x000140, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000148, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x000150, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_MapRangeClamped_ReturnValue_4) == 0x000158, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_MapRangeClamped_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_MapRangeClamped_ReturnValue_5) == 0x000160, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_MapRangeClamped_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, Temp_int_Loop_Counter_Variable) == 0x000168, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000170, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Add_IntInt_ReturnValue_1) == 0x000178, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, Temp_int_Array_Index_Variable) == 0x00017C, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Add_IntInt_ReturnValue_2) == 0x000180, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000188, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_SelectFloat_ReturnValue) == 0x000190, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000198, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_MakeRotator_ReturnValue) == 0x0001A0, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_FClamp_ReturnValue) == 0x0001B8, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_GetForwardVector_ReturnValue) == 0x0001C0, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, Temp_int_Loop_Counter_Variable_1) == 0x0001D8, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Add_IntInt_ReturnValue_3) == 0x0001DC, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, Temp_int_Array_Index_Variable_1) == 0x0001E0, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, Temp_bool_Variable) == 0x0001E4, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Add_IntInt_ReturnValue_4) == 0x0001E8, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Array_Length_ReturnValue) == 0x0001EC, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Array_Length_ReturnValue_1) == 0x0001F0, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Array_Get_Item) == 0x0001F8, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Array_Length_ReturnValue_2) == 0x000200, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Less_IntInt_ReturnValue) == 0x000204, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Array_Get_Item_1) == 0x000208, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Array_Get_Item_2) == 0x000210, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Array_Get_Item_3) == 0x000218, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, K2Node_MakeArray_Array) == 0x000220, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Array_Get_Item_4) == 0x000230, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_BooleanAND_ReturnValue) == 0x000238, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_MapRangeClamped_ReturnValue_6) == 0x000240, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_MapRangeClamped_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, K2Node_Select_Default) == 0x000248, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_MapRangeClamped_ReturnValue_7) == 0x000258, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_MapRangeClamped_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000260, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_MapRangeClamped_ReturnValue_8) == 0x000268, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_MapRangeClamped_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_MapRangeClamped_ReturnValue_9) == 0x000270, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_MapRangeClamped_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x000278, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_FClamp_ReturnValue_1) == 0x000280, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_MapRangeClamped_ReturnValue_10) == 0x000288, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_MapRangeClamped_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Divide_DoubleDouble_ReturnValue_11) == 0x000290, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Divide_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_FMin_ReturnValue) == 0x000298, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, Temp_int_Variable_1) == 0x0002A0, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_MapRangeClamped_ReturnValue_11) == 0x0002A8, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_MapRangeClamped_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Add_IntInt_ReturnValue_5) == 0x0002B0, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Array_Get_Item_5) == 0x0002B8, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002C0, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_FMin_ReturnValue_1) == 0x0002C8, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_FMin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Array_Get_Item_6) == 0x0002D0, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Array_Length_ReturnValue_3) == 0x0002D8, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Less_IntInt_ReturnValue_2) == 0x0002DC, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_MapRangeClamped_ReturnValue_12) == 0x0002E0, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_MapRangeClamped_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, Temp_int_Variable_2) == 0x0002E8, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_MapRangeClamped_ReturnValue_13) == 0x0002F0, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_MapRangeClamped_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Add_IntInt_ReturnValue_6) == 0x0002F8, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Array_Get_Item_7) == 0x000300, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Less_IntInt_ReturnValue_3) == 0x000308, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_MapRangeClamped_ReturnValue_14) == 0x000310, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_MapRangeClamped_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Multiply_DoubleDouble_ReturnValue_9) == 0x000318, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Multiply_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Multiply_DoubleDouble_ReturnValue_10) == 0x000320, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Multiply_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Multiply_DoubleDouble_ReturnValue_11) == 0x000328, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Multiply_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Array_Get_Item_8) == 0x000330, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_MapRangeClamped_ReturnValue_15) == 0x000338, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_MapRangeClamped_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Array_Length_ReturnValue_4) == 0x000340, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Less_IntInt_ReturnValue_4) == 0x000344, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000348, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Multiply_DoubleDouble_ReturnValue_12) == 0x000350, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Multiply_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_PerlinNoise1D_ReturnValue) == 0x000358, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_PerlinNoise1D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_GetGameTimeInSeconds_ReturnValue_1) == 0x000360, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_GetGameTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_MapRangeClamped_ReturnValue_16) == 0x000368, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_MapRangeClamped_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Multiply_DoubleDouble_ReturnValue_13) == 0x000370, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Multiply_DoubleDouble_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_SelectFloat_ReturnValue_1) == 0x000378, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_PerlinNoise1D_ReturnValue_1) == 0x000380, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_PerlinNoise1D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_MapRangeClamped_ReturnValue_17) == 0x000388, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_MapRangeClamped_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Multiply_DoubleDouble_ReturnValue_14) == 0x000390, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Multiply_DoubleDouble_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_SelectFloat_ReturnValue_2) == 0x000398, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Multiply_DoubleDouble_ReturnValue_15) == 0x0003A0, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Multiply_DoubleDouble_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_GetFloatValue_ReturnValue) == 0x0003A8, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Multiply_DoubleDouble_ReturnValue_16) == 0x0003B0, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Multiply_DoubleDouble_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Multiply_DoubleDouble_ReturnValue_17) == 0x0003B8, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Multiply_DoubleDouble_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Multiply_DoubleDouble_ReturnValue_18) == 0x0003C0, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Multiply_DoubleDouble_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Multiply_DoubleDouble_ReturnValue_19) == 0x0003C8, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Multiply_DoubleDouble_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Multiply_DoubleDouble_ReturnValue_20) == 0x0003D0, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Multiply_DoubleDouble_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Divide_DoubleDouble_ReturnValue_12) == 0x0003D8, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Divide_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_7) == 0x0003E0, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, K2Node_MakeArray_Array_1) == 0x0003E8, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_MapRangeClamped_ReturnValue_18) == 0x0003F8, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_MapRangeClamped_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Array_Get_Item_9) == 0x000400, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000418, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_VSize_ReturnValue) == 0x000430, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_MapRangeClamped_ReturnValue_19) == 0x000438, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_MapRangeClamped_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Multiply_DoubleDouble_ReturnValue_21) == 0x000440, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Multiply_DoubleDouble_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Multiply_DoubleDouble_ReturnValue_22) == 0x000448, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Multiply_DoubleDouble_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_SetFloatParameter_InFloat_ImplicitCast) == 0x000450, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_SetFloatParameter_InFloat_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_SetFloatParameter_InFloat_ImplicitCast_1) == 0x000454, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_SetFloatParameter_InFloat_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_SetFloatParameter_InFloat_ImplicitCast_2) == 0x000458, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_SetFloatParameter_InFloat_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_SetFloatParameter_InFloat_ImplicitCast_3) == 0x00045C, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_SetFloatParameter_InFloat_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000460, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000464, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_SetLowPassFilterFrequency_InLowPassFilterFrequency_ImplicitCast) == 0x000468, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_SetLowPassFilterFrequency_InLowPassFilterFrequency_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_SetFloatParameter_InFloat_ImplicitCast_4) == 0x00046C, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_SetFloatParameter_InFloat_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_SetLowPassFilterFrequency_InLowPassFilterFrequency_ImplicitCast_1) == 0x000470, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_SetLowPassFilterFrequency_InLowPassFilterFrequency_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, K2Node_VariableSet_LowPassFilterFrequency_ImplicitCast) == 0x000474, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::K2Node_VariableSet_LowPassFilterFrequency_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_SetLowPassFilterFrequency_InLowPassFilterFrequency_ImplicitCast_2) == 0x000478, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_SetLowPassFilterFrequency_InLowPassFilterFrequency_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast) == 0x00047C, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_PerlinNoise1D_Value_ImplicitCast) == 0x000480, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_PerlinNoise1D_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_MapRangeClamped_Value_ImplicitCast) == 0x000488, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_MapRangeClamped_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_PerlinNoise1D_Value_ImplicitCast_1) == 0x000490, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_PerlinNoise1D_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_MapRangeClamped_Value_ImplicitCast_1) == 0x000498, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_MapRangeClamped_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast_1) == 0x0004A0, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0004A8, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast_2) == 0x0004B0, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast_3) == 0x0004B4, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast_3' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Change Weather Using Settings
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Weather_C_Change_Weather_Using_Settings final
{
public:
	double                                        Param_Weather_Intensity;                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Cloudiness;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Param_Wind_Intensity;                              // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Param__Snow;                                       // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Time_To_Transition_To_New_Settings;                // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Time_to_Hold_New_Settings;                         // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Time_to_Transition_Back_to_Random_Variation;       // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Reset_Particle_Emitters;                           // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Change_Weather_Using_Settings) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Change_Weather_Using_Settings");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Change_Weather_Using_Settings) == 0x000040, "Wrong size on Ultra_Dynamic_Weather_C_Change_Weather_Using_Settings");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Change_Weather_Using_Settings, Param_Weather_Intensity) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Change_Weather_Using_Settings::Param_Weather_Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Change_Weather_Using_Settings, Cloudiness) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Change_Weather_Using_Settings::Cloudiness' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Change_Weather_Using_Settings, Param_Wind_Intensity) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Change_Weather_Using_Settings::Param_Wind_Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Change_Weather_Using_Settings, Param__Snow) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Change_Weather_Using_Settings::Param__Snow' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Change_Weather_Using_Settings, Time_To_Transition_To_New_Settings) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Change_Weather_Using_Settings::Time_To_Transition_To_New_Settings' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Change_Weather_Using_Settings, Time_to_Hold_New_Settings) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Change_Weather_Using_Settings::Time_to_Hold_New_Settings' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Change_Weather_Using_Settings, Time_to_Transition_Back_to_Random_Variation) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Change_Weather_Using_Settings::Time_to_Transition_Back_to_Random_Variation' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Change_Weather_Using_Settings, Reset_Particle_Emitters) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Change_Weather_Using_Settings::Reset_Particle_Emitters' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Change Weather Using Type
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Weather_C_Change_Weather_Using_Type final
{
public:
	EUDS_WeatherTypes                             New_Weather_Type;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Time_To_Transition_To_New_Settings;                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Time_to_Hold_New_Settings;                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Time_to_Transition_Back_to_Random_Variation;       // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Reset_Particle_Emitters;                           // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Change_Weather_Using_Type) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Change_Weather_Using_Type");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Change_Weather_Using_Type) == 0x000028, "Wrong size on Ultra_Dynamic_Weather_C_Change_Weather_Using_Type");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Change_Weather_Using_Type, New_Weather_Type) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Change_Weather_Using_Type::New_Weather_Type' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Change_Weather_Using_Type, Time_To_Transition_To_New_Settings) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Change_Weather_Using_Type::Time_To_Transition_To_New_Settings' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Change_Weather_Using_Type, Time_to_Hold_New_Settings) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Change_Weather_Using_Type::Time_to_Hold_New_Settings' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Change_Weather_Using_Type, Time_to_Transition_Back_to_Random_Variation) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Change_Weather_Using_Type::Time_to_Transition_Back_to_Random_Variation' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Change_Weather_Using_Type, Reset_Particle_Emitters) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Change_Weather_Using_Type::Reset_Particle_Emitters' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Check for DLWE Recenter
// 0x0228 (0x0228 - 0x0000)
struct Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter final
{
public:
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_DLWE_Mode                                Temp_byte_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_DLWE_Mode                                Temp_byte_Variable_1;                              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_DLWE_Mode                                Temp_byte_Variable_2;                              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue_2;                        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_DLWE_Mode                                Temp_byte_Variable_3;                              // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_1;                           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_3;      // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_2;                           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_3;                        // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2;  // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_132[0x6];                                      // 0x0132(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_3;                           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_3;  // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14A[0x6];                                      // 0x014A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_4;                          // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_4;                          // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_4;                          // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_5;                          // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_5;                          // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_5;                          // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_6;                          // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_6;                          // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_6;                          // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_7;                          // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_7;                          // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_7;                          // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_4;      // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_5;      // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter) == 0x000228, "Wrong size on Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_BreakVector_X) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_BreakVector_Y) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_BreakVector_Z) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_Abs_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, Temp_byte_Variable) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, Temp_byte_Variable_1) == 0x000039, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, K2Node_Select_Default) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_BreakVector_X_1) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_BreakVector_Y_1) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_BreakVector_Z_1) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_Abs_ReturnValue_1) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_BreakVector_X_2) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_BreakVector_Y_2) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_BreakVector_Z_2) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, Temp_byte_Variable_2) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_Abs_ReturnValue_2) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, Temp_byte_Variable_3) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_Not_PreBool_ReturnValue) == 0x0000C9, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, K2Node_Select_Default_1) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_Subtract_VectorVector_ReturnValue_3) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_Subtract_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_BreakVector_X_3) == 0x000100, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_BreakVector_Y_3) == 0x000108, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_BreakVector_Z_3) == 0x000110, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, K2Node_Select_Default_2) == 0x000118, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_Abs_ReturnValue_3) == 0x000120, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_Abs_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000128, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x000130, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2) == 0x000131, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, K2Node_Select_Default_3) == 0x000138, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000140, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_3) == 0x000148, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_BooleanOR_ReturnValue) == 0x000149, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_BreakVector_X_4) == 0x000150, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_BreakVector_Y_4) == 0x000158, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_BreakVector_Z_4) == 0x000160, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_BreakVector_X_5) == 0x000168, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_BreakVector_Y_5) == 0x000170, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_BreakVector_Z_5) == 0x000178, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_BreakVector_X_6) == 0x000180, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_BreakVector_X_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_BreakVector_Y_6) == 0x000188, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_BreakVector_Y_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_BreakVector_Z_6) == 0x000190, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_BreakVector_Z_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_MakeVector_ReturnValue) == 0x000198, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_BreakVector_X_7) == 0x0001B0, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_BreakVector_X_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_BreakVector_Y_7) == 0x0001B8, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_BreakVector_Y_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_BreakVector_Z_7) == 0x0001C0, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_BreakVector_Z_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_Subtract_VectorVector_ReturnValue_4) == 0x0001C8, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_Subtract_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_MakeVector_ReturnValue_1) == 0x0001E0, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_Add_VectorVector_ReturnValue) == 0x0001F8, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_Subtract_VectorVector_ReturnValue_5) == 0x000210, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_Subtract_VectorVector_ReturnValue_5' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Check Point for Puddles or Snow
// 0x0348 (0x0348 - 0x0000)
struct Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Ground_Normal;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      Physical_Material;                                 // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Puddle_Depth;                                      // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Param_Snow_Depth;                                  // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Puddle_Mask;                                       // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Snow_Mask;                                         // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Small_Cloud_Sample;                                // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Large_Cloud_Sample;                                // 0x0068(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue_1;      // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Ease_ReturnValue;                         // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_4;      // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_5;      // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_3;                       // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_6;      // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_2;                     // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_7;      // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_3;                     // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_8;      // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1; // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0210(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0228(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_4;                     // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue_1;       // 0x0240(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0258(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_4;                        // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_4;                        // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue_1;       // 0x0278(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FWrap_ReturnValue;                        // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_5;                        // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_5;                        // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FWrap_ReturnValue_1;                      // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_9;      // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FWrap_ReturnValue_2;                      // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_10;     // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FWrap_ReturnValue_3;                      // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_2;                     // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E4[0x4];                                      // 0x02E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_11;     // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_3;                     // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_304[0x4];                                      // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Array_Get_Item;                           // 0x0308(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Array_Get_Item_1;                         // 0x0318(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_6;                        // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_6;                        // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0338(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow) == 0x000348, "Wrong size on Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, Location) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, Ground_Normal) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::Ground_Normal' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, Physical_Material) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::Physical_Material' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, Puddle_Depth) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::Puddle_Depth' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, Param_Snow_Depth) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::Param_Snow_Depth' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, Puddle_Mask) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::Puddle_Mask' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, Snow_Mask) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::Snow_Mask' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, Small_Cloud_Sample) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::Small_Cloud_Sample' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, Large_Cloud_Sample) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::Large_Cloud_Sample' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_Conv_VectorToVector2D_ReturnValue_1) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_Conv_VectorToVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_Array_Contains_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_Array_Contains_ReturnValue_1) == 0x000099, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_BreakVector_X) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_BreakVector_Y) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_BreakVector_Z) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_FClamp_ReturnValue) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_Ease_ReturnValue) == 0x0000F0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000100, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000108, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000110, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000118, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_BreakVector_X_1) == 0x000120, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_BreakVector_Y_1) == 0x000128, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_BreakVector_Z_1) == 0x000130, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_Lerp_ReturnValue) == 0x000138, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x000140, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_Subtract_DoubleDouble_ReturnValue_4) == 0x000148, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_Subtract_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000150, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_FClamp_ReturnValue_1) == 0x000158, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_BreakVector2D_X) == 0x000160, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_BreakVector2D_Y) == 0x000168, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_Subtract_DoubleDouble_ReturnValue_5) == 0x000170, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_Subtract_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_BreakVector2D_X_1) == 0x000178, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_BreakVector2D_Y_1) == 0x000180, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_BreakVector2D_X_2) == 0x000188, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_BreakVector2D_Y_2) == 0x000190, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_Lerp_ReturnValue_1) == 0x000198, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_Lerp_ReturnValue_2) == 0x0001A0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_BreakVector2D_X_3) == 0x0001A8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_BreakVector2D_Y_3) == 0x0001B0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_MapRangeClamped_ReturnValue) == 0x0001B8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_Lerp_ReturnValue_3) == 0x0001C0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_Subtract_DoubleDouble_ReturnValue_6) == 0x0001C8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_Subtract_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0001D0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_FClamp_ReturnValue_2) == 0x0001D8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x0001E0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_SelectFloat_ReturnValue) == 0x0001E8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_Subtract_DoubleDouble_ReturnValue_7) == 0x0001F0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_Subtract_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_FClamp_ReturnValue_3) == 0x0001F8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_FClamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_Subtract_DoubleDouble_ReturnValue_8) == 0x000200, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_Subtract_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1) == 0x000208, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000210, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000220, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000228, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_FClamp_ReturnValue_4) == 0x000238, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_FClamp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_Add_Vector2DVector2D_ReturnValue_1) == 0x000240, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_Add_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_SelectFloat_ReturnValue_1) == 0x000250, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000258, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_BreakVector2D_X_4) == 0x000268, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_BreakVector2D_Y_4) == 0x000270, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_Divide_Vector2DFloat_ReturnValue_1) == 0x000278, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_Divide_Vector2DFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_FWrap_ReturnValue) == 0x000288, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_FWrap_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_BreakVector2D_X_5) == 0x000290, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_BreakVector2D_X_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_BreakVector2D_Y_5) == 0x000298, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_BreakVector2D_Y_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x0002A0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_FWrap_ReturnValue_1) == 0x0002A8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_FWrap_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_FFloor_ReturnValue) == 0x0002B0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_Multiply_DoubleDouble_ReturnValue_9) == 0x0002B8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_Multiply_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_FWrap_ReturnValue_2) == 0x0002C0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_FWrap_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_FFloor_ReturnValue_1) == 0x0002C8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_Multiply_DoubleDouble_ReturnValue_10) == 0x0002D0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_Multiply_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_FWrap_ReturnValue_3) == 0x0002D8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_FWrap_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_FFloor_ReturnValue_2) == 0x0002E0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_FFloor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_Multiply_DoubleDouble_ReturnValue_11) == 0x0002E8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_Multiply_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_Multiply_IntInt_ReturnValue) == 0x0002F0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_FFloor_ReturnValue_3) == 0x0002F4, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_FFloor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_Add_IntInt_ReturnValue) == 0x0002F8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x0002FC, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_Add_IntInt_ReturnValue_1) == 0x000300, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_Array_Get_Item) == 0x000308, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_Array_Get_Item_1) == 0x000318, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_BreakVector2D_X_6) == 0x000328, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_BreakVector2D_X_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_BreakVector2D_Y_6) == 0x000330, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_BreakVector2D_Y_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow, CallFunc_MakeVector2D_ReturnValue) == 0x000338, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_or_Snow::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Check to change DLWE Mode
// 0x00B8 (0x00B8 - 0x0000)
struct Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode final
{
public:
	EUDS_DLWE_Mode                                Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_DLWE_Mode                                Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_DLWE_Mode                                Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_DLWE_Mode                                Temp_byte_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_DLWE_Mode                                Temp_byte_Variable_4;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_DLWE_Mode                                Temp_byte_Variable_5;                              // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_2;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x009F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_DLWE_Mode                                K2Node_Select_Default_3;                           // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_DLWE_Mode                                K2Node_Select_Default_4;                           // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_R_ImplicitCast;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_G_ImplicitCast;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_B_ImplicitCast;                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_A_ImplicitCast;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode) == 0x0000B8, "Wrong size on Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, Temp_byte_Variable) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, Temp_byte_Variable_1) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, Temp_bool_Variable) == 0x000002, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, Temp_byte_Variable_2) == 0x000003, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, Temp_byte_Variable_3) == 0x000005, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, Temp_byte_Variable_4) == 0x000006, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, K2Node_Select_Default) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, CallFunc_MakeVector_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, K2Node_Select_Default_1) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, CallFunc_BreakVector_X) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, CallFunc_BreakVector_Y) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, CallFunc_BreakVector_Z) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, CallFunc_Not_PreBool_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, Temp_byte_Variable_5) == 0x000071, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, K2Node_Select_Default_2) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, CallFunc_MakeColor_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, Temp_bool_Variable_1) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000099, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00009A, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, CallFunc_BooleanAND_ReturnValue) == 0x00009B, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x00009C, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x00009D, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, CallFunc_BooleanOR_ReturnValue) == 0x00009E, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, CallFunc_BooleanAND_ReturnValue_1) == 0x00009F, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, CallFunc_BooleanAND_ReturnValue_2) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, K2Node_Select_Default_3) == 0x0000A1, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, K2Node_Select_Default_4) == 0x0000A2, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000A3, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, CallFunc_MakeColor_R_ImplicitCast) == 0x0000A4, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::CallFunc_MakeColor_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, CallFunc_MakeColor_G_ImplicitCast) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::CallFunc_MakeColor_G_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, CallFunc_MakeColor_B_ImplicitCast) == 0x0000AC, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::CallFunc_MakeColor_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, CallFunc_MakeColor_A_ImplicitCast) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::CallFunc_MakeColor_A_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Compress DLWE Snow
// 0x0130 (0x0130 - 0x0000)
struct Ultra_Dynamic_Weather_C_Compress_DLWE_Snow final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Size;                                              // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_DLWE_Mode                                Temp_byte_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue_1;      // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloat_ReturnValue;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA[0x6];                                       // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Compress_DLWE_Snow");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow) == 0x000130, "Wrong size on Ultra_Dynamic_Weather_C_Compress_DLWE_Snow");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow, Location) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Compress_DLWE_Snow::Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow, Size) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Compress_DLWE_Snow::Size' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Compress_DLWE_Snow::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow, Temp_byte_Variable) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Compress_DLWE_Snow::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow, CallFunc_Conv_VectorToVector2D_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Compress_DLWE_Snow::CallFunc_Conv_VectorToVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Compress_DLWE_Snow::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow, CallFunc_RandomFloat_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Compress_DLWE_Snow::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow, CallFunc_BreakVector2D_X) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Compress_DLWE_Snow::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow, CallFunc_BreakVector2D_Y) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Compress_DLWE_Snow::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow, CallFunc_Lerp_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Compress_DLWE_Snow::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow, CallFunc_Abs_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Compress_DLWE_Snow::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow, CallFunc_Abs_ReturnValue_1) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Compress_DLWE_Snow::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Compress_DLWE_Snow::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow, K2Node_Select_Default) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Compress_DLWE_Snow::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Compress_DLWE_Snow::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow, CallFunc_RandomFloatInRange_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Compress_DLWE_Snow::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Compress_DLWE_Snow::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Compress_DLWE_Snow::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Compress_DLWE_Snow::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow, CallFunc_MakeVector_ReturnValue) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Compress_DLWE_Snow::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Compress_DLWE_Snow::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Compress_DLWE_Snow::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow, CallFunc_BooleanAND_ReturnValue) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Compress_DLWE_Snow::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow, CallFunc_BooleanAND_ReturnValue_1) == 0x0000F9, "Member 'Ultra_Dynamic_Weather_C_Compress_DLWE_Snow::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000100, "Member 'Ultra_Dynamic_Weather_C_Compress_DLWE_Snow::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow, CallFunc_Array_Add_ReturnValue) == 0x000108, "Member 'Ultra_Dynamic_Weather_C_Compress_DLWE_Snow::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow, CallFunc_Add_VectorVector_ReturnValue) == 0x000110, "Member 'Ultra_Dynamic_Weather_C_Compress_DLWE_Snow::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow, CallFunc_Array_Add_ReturnValue_1) == 0x000128, "Member 'Ultra_Dynamic_Weather_C_Compress_DLWE_Snow::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.ConstructionScript_Function
// 0x0058 (0x0058 - 0x0000)
struct Ultra_Dynamic_Weather_C_ConstructionScript_Function final
{
public:
	bool                                          Param_Run_By_Counterpart;                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewLocalVar_0;                                     // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AUltra_Dynamic_Sky_C*                   CallFunc_GetActorOfClass_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors;      // 0x0020(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IWeather_Effects_Interface_C> K2Node_DynamicCast_AsWeather_Effects_Interface;    // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_ConstructionScript_Function) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_ConstructionScript_Function");
static_assert(sizeof(Ultra_Dynamic_Weather_C_ConstructionScript_Function) == 0x000058, "Wrong size on Ultra_Dynamic_Weather_C_ConstructionScript_Function");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ConstructionScript_Function, Param_Run_By_Counterpart) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_ConstructionScript_Function::Param_Run_By_Counterpart' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ConstructionScript_Function, NewLocalVar_0) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_ConstructionScript_Function::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ConstructionScript_Function, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'Ultra_Dynamic_Weather_C_ConstructionScript_Function::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ConstructionScript_Function, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'Ultra_Dynamic_Weather_C_ConstructionScript_Function::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ConstructionScript_Function, CallFunc_Not_PreBool_ReturnValue_1) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_ConstructionScript_Function::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ConstructionScript_Function, CallFunc_Not_PreBool_ReturnValue_2) == 0x000005, "Member 'Ultra_Dynamic_Weather_C_ConstructionScript_Function::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ConstructionScript_Function, CallFunc_GetActorOfClass_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_ConstructionScript_Function::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ConstructionScript_Function, Temp_int_Variable) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_ConstructionScript_Function::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ConstructionScript_Function, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Weather_C_ConstructionScript_Function::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ConstructionScript_Function, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_ConstructionScript_Function::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ConstructionScript_Function, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'Ultra_Dynamic_Weather_C_ConstructionScript_Function::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ConstructionScript_Function, CallFunc_Not_PreBool_ReturnValue_3) == 0x00001A, "Member 'Ultra_Dynamic_Weather_C_ConstructionScript_Function::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ConstructionScript_Function, CallFunc_GetAllActorsWithInterface_OutActors) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_ConstructionScript_Function::CallFunc_GetAllActorsWithInterface_OutActors' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ConstructionScript_Function, CallFunc_Array_Get_Item) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_ConstructionScript_Function::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ConstructionScript_Function, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_ConstructionScript_Function::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ConstructionScript_Function, K2Node_DynamicCast_AsWeather_Effects_Interface) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_ConstructionScript_Function::K2Node_DynamicCast_AsWeather_Effects_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ConstructionScript_Function, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_ConstructionScript_Function::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ConstructionScript_Function, CallFunc_Less_IntInt_ReturnValue) == 0x000051, "Member 'Ultra_Dynamic_Weather_C_ConstructionScript_Function::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ConstructionScript_Function, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000052, "Member 'Ultra_Dynamic_Weather_C_ConstructionScript_Function::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Create Cloud Reference Array
// 0x0098 (0x0098 - 0x0000)
struct Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array final
{
public:
	int32                                         Pixel_Y;                                           // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Pixel_X;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 Source_Render_Target;                              // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_ReadRenderTargetRawPixel_ReturnValue;     // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas;     // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size;       // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context;    // 0x0078(0x0008)(NoDestructor)
	class UTextureRenderTarget2D*                 CallFunc_CreateRenderTarget2D_ReturnValue;         // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_X_ImplicitCast;              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_Y_ImplicitCast;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array) == 0x000098, "Wrong size on Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, Pixel_Y) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::Pixel_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, Pixel_X) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::Pixel_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, Source_Render_Target) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::Source_Render_Target' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, Temp_int_Variable) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_Not_PreBool_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, Temp_int_Variable_1) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_ReadRenderTargetRawPixel_ReturnValue) == 0x000024, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_ReadRenderTargetRawPixel_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_BreakColor_R) == 0x000034, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_BreakColor_G) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_BreakColor_B) == 0x00003C, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_BreakColor_A) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000044, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_MakeVector2D_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_Array_Add_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_Add_IntInt_ReturnValue_1) == 0x00005C, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_BeginDrawCanvasToRenderTarget_Canvas) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_BeginDrawCanvasToRenderTarget_Canvas' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_BeginDrawCanvasToRenderTarget_Size) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_BeginDrawCanvasToRenderTarget_Size' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_BeginDrawCanvasToRenderTarget_Context) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_BeginDrawCanvasToRenderTarget_Context' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_CreateRenderTarget2D_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_CreateRenderTarget2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_MakeVector2D_X_ImplicitCast) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_MakeVector2D_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_MakeVector2D_Y_ImplicitCast) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_MakeVector2D_Y_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Current Lightning Period and Status
// 0x0088 (0x0088 - 0x0000)
struct Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status final
{
public:
	double                                        Param_Weather_Intensity;                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Param_Cloud_Coverage;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Snow_Percentage;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Period;                                            // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enabled;                                           // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status) == 0x000088, "Wrong size on Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status, Param_Weather_Intensity) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status::Param_Weather_Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status, Param_Cloud_Coverage) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status::Param_Cloud_Coverage' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status, Snow_Percentage) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status::Snow_Percentage' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status, Period) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status::Period' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status, Enabled) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status::Enabled' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000021, "Member 'Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status, CallFunc_MapRangeClamped_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status, CallFunc_BooleanOR_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status, CallFunc_BooleanAND_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status, CallFunc_BooleanAND_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status, CallFunc_RandomFloatInRange_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.ExecuteUbergraph_Ultra_Dynamic_Weather
// 0x0760 (0x0760 - 0x0000)
struct Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Season                                   K2Node_Event_Season;                               // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Cloud_Coverage;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Angle_1;                        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Use_Custom_Lightning_Location;  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Custom_Lightning_Location;      // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0068(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0150(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue; // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PerlinNoise1D_ReturnValue;                // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x01F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0220(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0230(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_Conv_LinearColorToColor_ReturnValue;      // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeather_Override_Volume_C*             K2Node_CustomEvent_Volume;                         // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Angle;                          // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0262(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0263(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Current_Lightning_Period_and_Status_Period; // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Current_Lightning_Period_and_Status_Enabled; // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item;                           // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_4;               // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_1;     // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x02A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_MapRangeClamped_ReturnValue_3;            // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x02F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0308(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0320(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0338(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0358(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_374[0x4];                                      // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_384[0x4];                                      // 0x0384(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0391(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_392[0x2];                                      // 0x0392(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0394(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4[0x4];                                      // 0x03A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x03A8(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B9[0x3];                                      // 0x03B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x03BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C4[0x4];                                      // 0x03C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_4;            // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Ease_ReturnValue;                         // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x03EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x03ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EE[0x2];                                      // 0x03EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x03F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_411[0x7];                                      // 0x0411(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue_3;         // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Lightning_Period_and_Status_Period_1; // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Current_Lightning_Period_and_Status_Enabled_1; // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_429[0x7];                                      // 0x0429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Weather_Intensity;              // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Cloudiness;                     // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Wind_Intensity;                 // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Rain___Snow;                    // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Time_To_Transition_To_New_Settings_1; // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Time_to_Hold_New_Settings_1;    // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Time_to_Transition_Back_to_Random_Variation_1; // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Reset_Particle_Emitters_1;      // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             K2Node_CustomEvent_New_Weather_Type;               // 0x0469(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46A[0x6];                                      // 0x046A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Time_To_Transition_To_New_Settings; // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Time_to_Hold_New_Settings;      // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Time_to_Transition_Back_to_Random_Variation; // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Reset_Particle_Emitters;        // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0489(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48A[0x2];                                      // 0x048A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x048C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors;      // 0x0490(0x0010)(ReferenceParm)
	int32                                         Temp_int_Variable_4;                               // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A4[0x4];                                      // 0x04A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x04A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IWeather_Effects_Interface_C> K2Node_DynamicCast_AsWeather_Effects_Interface;    // 0x04B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C1[0x7];                                      // 0x04C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_1;                           // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DC[0x4];                                      // 0x04DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Ease_ReturnValue_1;                       // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E9[0x7];                                      // 0x04E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors_1;    // 0x04F0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0500(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_504[0x4];                                      // 0x0504(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_2;     // 0x0508(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_511[0x7];                                      // 0x0511(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_2;                           // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0529(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52A[0x2];                                      // 0x052A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_5;                               // 0x052C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0531(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_532[0x6];                                      // 0x0532(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ALandscape*                             CallFunc_Array_Get_Item_2;                         // 0x0538(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Temp_struct_Variable;                              // 0x0540(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x05A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A2[0x6];                                      // 0x05A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_AddComponent_ReturnValue;                 // 0x05A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B1[0xF];                                      // 0x05B1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable_1;                            // 0x05C0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_AddComponent_ReturnValue_1;               // 0x0620(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0628(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue_1;                      // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_5;            // 0x0648(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_6;            // 0x0650(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0658(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x0660(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_7;            // 0x0668(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x0670(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Transition_State;               // 0x0678(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x067C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_3;                           // 0x0680(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x0688(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x068C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68D[0x3];                                      // 0x068D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0690(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_694[0x4];                                      // 0x0694(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_3;                         // 0x0698(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x06A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A1[0x7];                                      // 0x06A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IWeather_Effects_Interface_C> K2Node_DynamicCast_AsWeather_Effects_Interface_1;  // 0x06A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x06B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x06B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x06BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x06BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BC[0x4];                                      // 0x06BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x06C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_4;         // 0x06C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_8;            // 0x06D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x06D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x06E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E4[0x4];                                      // 0x06E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast;       // 0x06E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x06F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F4[0x4];                                      // 0x06F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x06F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0700(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PerlinNoise1D_Value_ImplicitCast;         // 0x0708(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_70C[0x4];                                      // 0x070C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x0710(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast;   // 0x0718(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_ImplicitCast;                  // 0x071C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast;                  // 0x0720(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_ImplicitCast;                  // 0x0724(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast;                  // 0x0728(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x072C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLowPassFilterFrequency_InLowPassFilterFrequency_ImplicitCast; // 0x0730(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_734[0x4];                                      // 0x0734(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_1;        // 0x0738(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0740(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x0744(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SpawnSoundAtLocation_VolumeMultiplier_ImplicitCast; // 0x0748(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast_1;            // 0x074C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast;            // 0x0750(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather) == 0x000010, "Wrong alignment on Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather");
static_assert(sizeof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather) == 0x000760, "Wrong size on Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, EntryPoint) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, Temp_int_Variable) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_HasAuthority_ReturnValue_1) == 0x00000C, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_HasAuthority_ReturnValue_2) == 0x00000D, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_Event_Season) == 0x00000E, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_Event_Season' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_Event_Cloud_Coverage) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_Event_Cloud_Coverage' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_MapRangeClamped_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_CustomEvent_Angle_1) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_CustomEvent_Angle_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_CustomEvent_Use_Custom_Lightning_Location) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_CustomEvent_Use_Custom_Lightning_Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_CustomEvent_Custom_Lightning_Location) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_CustomEvent_Custom_Lightning_Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_FindLookAtRotation_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000150, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000158, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_IsValid_ReturnValue) == 0x000160, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_GetCameraLocation_ReturnValue) == 0x000168, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000180, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue) == 0x000198, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_MapRangeClamped_ReturnValue_1) == 0x0001A0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_GetFloatValue_ReturnValue) == 0x0001A8, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x0001B0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001B8, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0001C0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_PerlinNoise1D_ReturnValue) == 0x0001C8, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_PerlinNoise1D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0001D0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0001D8, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0001E0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0001E8, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x0001F0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_LinearColorLerp_ReturnValue) == 0x0001F8, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000208, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000210, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000218, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_MakeStruct_LinearColor) == 0x000220, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000230, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000240, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Conv_LinearColorToColor_ReturnValue) == 0x000248, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Conv_LinearColorToColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_CustomEvent_Volume) == 0x000250, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_CustomEvent_Volume' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_CustomEvent_Angle) == 0x000258, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_CustomEvent_Angle' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_HasAuthority_ReturnValue_3) == 0x000260, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000261, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_BooleanAND_ReturnValue) == 0x000262, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Not_PreBool_ReturnValue) == 0x000263, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Current_Lightning_Period_and_Status_Period) == 0x000268, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Current_Lightning_Period_and_Status_Period' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Current_Lightning_Period_and_Status_Enabled) == 0x000270, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Current_Lightning_Period_and_Status_Enabled' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Array_Get_Item) == 0x000278, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_HasAuthority_ReturnValue_4) == 0x000280, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_HasAuthority_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_SelectFloat_ReturnValue) == 0x000288, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_GetPlayerCameraManager_ReturnValue_1) == 0x000290, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_GetPlayerCameraManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000298, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_GetCameraRotation_ReturnValue) == 0x0002A0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_MapRangeClamped_ReturnValue_3) == 0x0002B8, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_BreakRotator_Roll) == 0x0002C0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_BreakRotator_Pitch) == 0x0002C4, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_BreakRotator_Yaw) == 0x0002C8, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_RandomFloatInRange_ReturnValue) == 0x0002D0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0002D8, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_SelectFloat_ReturnValue_1) == 0x0002E0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x0002E8, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_MakeRotator_ReturnValue) == 0x0002F0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_MakeVector_ReturnValue) == 0x000308, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000320, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Add_VectorVector_ReturnValue) == 0x000338, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000350, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_SelectVector_ReturnValue) == 0x000358, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_Event_DeltaSeconds) == 0x000370, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000378, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, Temp_int_Variable_1) == 0x000380, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000388, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000390, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_SwitchInteger_CmpSuccess) == 0x000391, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_CreateDelegate_OutputDelegate) == 0x000394, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0003A8, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Add_IntInt_ReturnValue) == 0x0003B0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, Temp_int_Variable_2) == 0x0003B4, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0003B8, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, Temp_int_Variable_3) == 0x0003BC, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Add_IntInt_ReturnValue_1) == 0x0003C0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_Select_Default) == 0x0003C8, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0003D0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_MapRangeClamped_ReturnValue_4) == 0x0003D8, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_MapRangeClamped_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Ease_ReturnValue) == 0x0003E0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Add_IntInt_ReturnValue_2) == 0x0003E8, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x0003EC, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_SwitchEnum_CmpSuccess) == 0x0003ED, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0003F0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_VSize_ReturnValue) == 0x000408, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Not_PreBool_ReturnValue_1) == 0x000410, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_RandomFloatInRange_ReturnValue_3) == 0x000418, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_RandomFloatInRange_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Current_Lightning_Period_and_Status_Period_1) == 0x000420, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Current_Lightning_Period_and_Status_Period_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Current_Lightning_Period_and_Status_Enabled_1) == 0x000428, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Current_Lightning_Period_and_Status_Enabled_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_CustomEvent_Weather_Intensity) == 0x000430, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_CustomEvent_Weather_Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_CustomEvent_Cloudiness) == 0x000438, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_CustomEvent_Cloudiness' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_CustomEvent_Wind_Intensity) == 0x000440, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_CustomEvent_Wind_Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_CustomEvent_Rain___Snow) == 0x000448, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_CustomEvent_Rain___Snow' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_CustomEvent_Time_To_Transition_To_New_Settings_1) == 0x000450, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_CustomEvent_Time_To_Transition_To_New_Settings_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_CustomEvent_Time_to_Hold_New_Settings_1) == 0x000458, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_CustomEvent_Time_to_Hold_New_Settings_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_CustomEvent_Time_to_Transition_Back_to_Random_Variation_1) == 0x000460, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_CustomEvent_Time_to_Transition_Back_to_Random_Variation_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_CustomEvent_Reset_Particle_Emitters_1) == 0x000468, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_CustomEvent_Reset_Particle_Emitters_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_CustomEvent_New_Weather_Type) == 0x000469, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_CustomEvent_New_Weather_Type' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_CustomEvent_Time_To_Transition_To_New_Settings) == 0x000470, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_CustomEvent_Time_To_Transition_To_New_Settings' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_CustomEvent_Time_to_Hold_New_Settings) == 0x000478, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_CustomEvent_Time_to_Hold_New_Settings' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_CustomEvent_Time_to_Transition_Back_to_Random_Variation) == 0x000480, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_CustomEvent_Time_to_Transition_Back_to_Random_Variation' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_CustomEvent_Reset_Particle_Emitters) == 0x000488, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_CustomEvent_Reset_Particle_Emitters' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000489, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_SelectInt_ReturnValue) == 0x00048C, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_GetAllActorsWithInterface_OutActors) == 0x000490, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_GetAllActorsWithInterface_OutActors' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, Temp_int_Variable_4) == 0x0004A0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Array_Get_Item_1) == 0x0004A8, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_DynamicCast_AsWeather_Effects_Interface) == 0x0004B0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_DynamicCast_AsWeather_Effects_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_DynamicCast_bSuccess) == 0x0004C0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_Select_Default_1) == 0x0004C8, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x0004D0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Array_Length_ReturnValue) == 0x0004D8, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Ease_ReturnValue_1) == 0x0004E0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Ease_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Less_IntInt_ReturnValue) == 0x0004E8, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_GetAllActorsWithInterface_OutActors_1) == 0x0004F0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_GetAllActorsWithInterface_OutActors_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Array_Length_ReturnValue_1) == 0x000500, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_GetPlayerCameraManager_ReturnValue_2) == 0x000508, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_GetPlayerCameraManager_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_IsValid_ReturnValue_1) == 0x000510, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_Select_Default_2) == 0x000518, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_FClamp_ReturnValue) == 0x000520, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_IsValid_ReturnValue_2) == 0x000528, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_IsValid_ReturnValue_3) == 0x000529, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, Temp_int_Variable_5) == 0x00052C, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_IsDedicatedServer_ReturnValue) == 0x000530, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Not_PreBool_ReturnValue_2) == 0x000531, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Array_Get_Item_2) == 0x000538, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, Temp_struct_Variable) == 0x000540, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_IsValid_ReturnValue_4) == 0x0005A0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_BooleanAND_ReturnValue_1) == 0x0005A1, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_AddComponent_ReturnValue) == 0x0005A8, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_BooleanAND_ReturnValue_2) == 0x0005B0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, Temp_struct_Variable_1) == 0x0005C0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_AddComponent_ReturnValue_1) == 0x000620, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_AddComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000628, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_VSize_ReturnValue_1) == 0x000640, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_MapRangeClamped_ReturnValue_5) == 0x000648, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_MapRangeClamped_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_MapRangeClamped_ReturnValue_6) == 0x000650, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_MapRangeClamped_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000658, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x000660, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_MapRangeClamped_ReturnValue_7) == 0x000668, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_MapRangeClamped_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x000670, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_CustomEvent_Transition_State) == 0x000678, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_CustomEvent_Transition_State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, Temp_int_Variable_6) == 0x00067C, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_Select_Default_3) == 0x000680, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, Temp_int_Variable_7) == 0x000688, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x00068C, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Add_IntInt_ReturnValue_3) == 0x000690, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Array_Get_Item_3) == 0x000698, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Less_IntInt_ReturnValue_1) == 0x0006A0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_DynamicCast_AsWeather_Effects_Interface_1) == 0x0006A8, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_DynamicCast_AsWeather_Effects_Interface_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_DynamicCast_bSuccess_1) == 0x0006B8, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_IsServer_ReturnValue) == 0x0006B9, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Not_PreBool_ReturnValue_3) == 0x0006BA, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_BooleanAND_ReturnValue_3) == 0x0006BB, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_K2_SetTimer_ReturnValue) == 0x0006C0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_RandomFloatInRange_ReturnValue_4) == 0x0006C8, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_RandomFloatInRange_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_MapRangeClamped_ReturnValue_8) == 0x0006D0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_MapRangeClamped_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_FClamp_ReturnValue_1) == 0x0006D8, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x0006E0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_MapRangeClamped_Value_ImplicitCast) == 0x0006E8, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_MapRangeClamped_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x0006F0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0006F8, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000700, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_PerlinNoise1D_Value_ImplicitCast) == 0x000708, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_PerlinNoise1D_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x000710, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_SetIntensity_NewIntensity_ImplicitCast) == 0x000718, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_SetIntensity_NewIntensity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_MakeStruct_R_ImplicitCast) == 0x00071C, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_MakeStruct_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_MakeStruct_G_ImplicitCast) == 0x000720, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_MakeStruct_G_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_MakeStruct_B_ImplicitCast) == 0x000724, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_MakeStruct_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_MakeStruct_A_ImplicitCast) == 0x000728, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_MakeStruct_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x00072C, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_SetLowPassFilterFrequency_InLowPassFilterFrequency_ImplicitCast) == 0x000730, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_SetLowPassFilterFrequency_InLowPassFilterFrequency_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Add_DoubleDouble_A_ImplicitCast_1) == 0x000738, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Add_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000740, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Delay_Duration_ImplicitCast) == 0x000744, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_SpawnSoundAtLocation_VolumeMultiplier_ImplicitCast) == 0x000748, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_SpawnSoundAtLocation_VolumeMultiplier_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Delay_Duration_ImplicitCast_1) == 0x00074C, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Delay_Duration_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_K2_SetTimer_Time_ImplicitCast) == 0x000750, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_K2_SetTimer_Time_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Fade DLWE Target Over Time
// 0x00F0 (0x00F0 - 0x0000)
struct Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time final
{
public:
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas;     // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size;       // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context;    // 0x0078(0x0008)(NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_1;     // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas_1;   // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size_1;     // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context_1;  // 0x00C8(0x0008)(NoDestructor)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_1;                // 0x00D8(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_G_ImplicitCast;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_R_ImplicitCast;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast;            // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time) == 0x0000F0, "Wrong size on Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_BooleanAND_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000029, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_SelectFloat_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_K2_SetTimer_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_MakeColor_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_BeginDrawCanvasToRenderTarget_Canvas) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_BeginDrawCanvasToRenderTarget_Canvas' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_BeginDrawCanvasToRenderTarget_Size) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_BeginDrawCanvasToRenderTarget_Size' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_BeginDrawCanvasToRenderTarget_Context) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_BeginDrawCanvasToRenderTarget_Context' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, K2Node_SwitchEnum_CmpSuccess) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_Multiply_Vector2DFloat_ReturnValue_1) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_Multiply_Vector2DFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_MapRangeClamped_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_BeginDrawCanvasToRenderTarget_Canvas_1) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_BeginDrawCanvasToRenderTarget_Canvas_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_BeginDrawCanvasToRenderTarget_Size_1) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_BeginDrawCanvasToRenderTarget_Size_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_BeginDrawCanvasToRenderTarget_Context_1) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_BeginDrawCanvasToRenderTarget_Context_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_K2_SetTimer_ReturnValue_1) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_K2_SetTimer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_MakeColor_G_ImplicitCast) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_MakeColor_G_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_MakeColor_R_ImplicitCast) == 0x0000E4, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_MakeColor_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_K2_SetTimer_Time_ImplicitCast) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_K2_SetTimer_Time_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Filter Probability Map
// 0x02A8 (0x02A8 - 0x0000)
struct Ultra_Dynamic_Weather_C_Filter_Probability_Map final
{
public:
	TMap<EUDS_WeatherTypes, double>               Probability_Map;                                   // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	EUDS_WeatherTypes                             Current_Random_Type;                               // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EUDS_WeatherTypes, double>               Filtered_Probability_Map;                          // 0x0058(0x0050)(Parm, OutParm)
	TMap<EUDS_WeatherTypes, double>               Map;                                               // 0x00A8(0x0050)(Edit, BlueprintVisible)
	TArray<EUDS_WeatherTypes>                     Weather_Types_to_Filter;                           // 0x00F8(0x0010)(Edit, BlueprintVisible)
	EUDS_WeatherTypes                             Temp_byte_Variable;                                // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EUDS_WeatherTypes>                     Temp_byte_Variable_1;                              // 0x0110(0x0010)(ReferenceParm)
	TArray<EUDS_WeatherTypes>                     Temp_byte_Variable_2;                              // 0x0120(0x0010)(ReferenceParm)
	TArray<EUDS_WeatherTypes>                     Temp_byte_Variable_3;                              // 0x0130(0x0010)(ReferenceParm)
	TArray<EUDS_WeatherTypes>                     Temp_byte_Variable_4;                              // 0x0140(0x0010)(ReferenceParm)
	TMap<EUDS_WeatherTypes, double>               K2Node_MakeVariable_MakeVariableOutput;            // 0x0150(0x0050)()
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EUDS_WeatherTypes>                     Temp_byte_Variable_5;                              // 0x01B0(0x0010)(ReferenceParm)
	TArray<EUDS_WeatherTypes>                     K2Node_MakeArray_Array;                            // 0x01C0(0x0010)(ReferenceParm)
	EUDS_WeatherTypes                             CallFunc_Array_Get_Item;                           // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x3];                                      // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DA[0x6];                                      // 0x01DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EUDS_WeatherTypes>                     K2Node_MakeArray_Array_1;                          // 0x01E0(0x0010)(ReferenceParm)
	TArray<EUDS_WeatherTypes>                     Temp_byte_Variable_6;                              // 0x01F0(0x0010)(ReferenceParm)
	TArray<EUDS_WeatherTypes>                     Temp_byte_Variable_7;                              // 0x0200(0x0010)(ReferenceParm)
	TArray<EUDS_WeatherTypes>                     Temp_byte_Variable_8;                              // 0x0210(0x0010)(ReferenceParm)
	TArray<EUDS_WeatherTypes>                     Temp_byte_Variable_9;                              // 0x0220(0x0010)(ReferenceParm)
	TArray<EUDS_WeatherTypes>                     Temp_byte_Variable_10;                             // 0x0230(0x0010)(ReferenceParm)
	EUDS_WeatherTypes                             Temp_byte_Variable_11;                             // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x3];                                      // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EUDS_WeatherTypes>                     K2Node_Select_Default;                             // 0x0248(0x0010)(ReferenceParm)
	TArray<EUDS_WeatherTypes>                     K2Node_MakeArray_Array_2;                          // 0x0258(0x0010)(ReferenceParm)
	TArray<EUDS_WeatherTypes>                     K2Node_MakeArray_Array_3;                          // 0x0268(0x0010)(ReferenceParm)
	TArray<EUDS_WeatherTypes>                     K2Node_MakeArray_Array_4;                          // 0x0278(0x0010)(ReferenceParm)
	TArray<EUDS_WeatherTypes>                     K2Node_MakeArray_Array_5;                          // 0x0288(0x0010)(ReferenceParm)
	TArray<EUDS_WeatherTypes>                     K2Node_Select_Default_1;                           // 0x0298(0x0010)(ReferenceParm)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Filter_Probability_Map) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Filter_Probability_Map");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Filter_Probability_Map) == 0x0002A8, "Wrong size on Ultra_Dynamic_Weather_C_Filter_Probability_Map");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, Probability_Map) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::Probability_Map' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, Current_Random_Type) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::Current_Random_Type' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, Filtered_Probability_Map) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::Filtered_Probability_Map' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, Map) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::Map' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, Weather_Types_to_Filter) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::Weather_Types_to_Filter' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, Temp_byte_Variable) == 0x000108, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, Temp_byte_Variable_1) == 0x000110, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, Temp_byte_Variable_2) == 0x000120, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, Temp_byte_Variable_3) == 0x000130, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, Temp_byte_Variable_4) == 0x000140, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, K2Node_MakeVariable_MakeVariableOutput) == 0x000150, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, Temp_int_Array_Index_Variable) == 0x0001A0, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, Temp_int_Loop_Counter_Variable) == 0x0001A4, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Add_IntInt_ReturnValue) == 0x0001A8, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, Temp_byte_Variable_5) == 0x0001B0, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, K2Node_MakeArray_Array) == 0x0001C0, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Array_Get_Item) == 0x0001D0, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Array_Length_ReturnValue) == 0x0001D4, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Map_Remove_ReturnValue) == 0x0001D8, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Less_IntInt_ReturnValue) == 0x0001D9, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, K2Node_MakeArray_Array_1) == 0x0001E0, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, Temp_byte_Variable_6) == 0x0001F0, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, Temp_byte_Variable_7) == 0x000200, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, Temp_byte_Variable_8) == 0x000210, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, Temp_byte_Variable_9) == 0x000220, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, Temp_byte_Variable_10) == 0x000230, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, Temp_byte_Variable_11) == 0x000240, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Array_AddUnique_ReturnValue) == 0x000244, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, K2Node_Select_Default) == 0x000248, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, K2Node_MakeArray_Array_2) == 0x000258, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, K2Node_MakeArray_Array_3) == 0x000268, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, K2Node_MakeArray_Array_4) == 0x000278, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, K2Node_MakeArray_Array_5) == 0x000288, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, K2Node_Select_Default_1) == 0x000298, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::K2Node_Select_Default_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Flash Lightning
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Weather_C_Flash_Lightning final
{
public:
	double                                        Angle;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_Use_Custom_Lightning_Location;               // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Param_Custom_Lightning_Location;                   // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Flash_Lightning) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Flash_Lightning");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Flash_Lightning) == 0x000028, "Wrong size on Ultra_Dynamic_Weather_C_Flash_Lightning");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Flash_Lightning, Angle) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Flash_Lightning::Angle' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Flash_Lightning, Param_Use_Custom_Lightning_Location) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Flash_Lightning::Param_Use_Custom_Lightning_Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Flash_Lightning, Param_Custom_Lightning_Location) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Flash_Lightning::Param_Custom_Lightning_Location' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Flash Lightning Local
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Weather_C_Flash_Lightning_Local final
{
public:
	class AWeather_Override_Volume_C*             Volume;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Angle;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Flash_Lightning_Local) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Flash_Lightning_Local");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Flash_Lightning_Local) == 0x000010, "Wrong size on Ultra_Dynamic_Weather_C_Flash_Lightning_Local");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Flash_Lightning_Local, Volume) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Flash_Lightning_Local::Volume' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Flash_Lightning_Local, Angle) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Flash_Lightning_Local::Angle' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Get Current Temperature
// 0x0168 (0x0168 - 0x0000)
struct Ultra_Dynamic_Weather_C_Get_Current_Temperature final
{
public:
	double                                        Celsius;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Fahrenheit;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_TemperatureType                          Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Season                                   Temp_byte_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_TemperatureType                          Temp_byte_Variable_2;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_3;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PerlinNoise1D_ReturnValue;                // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_4;            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_5;            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_6;            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_5;           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_6;           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_7;           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_2;                           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PerlinNoise1D_Value_ImplicitCast;         // 0x0158(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Get_Current_Temperature) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Get_Current_Temperature");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Get_Current_Temperature) == 0x000168, "Wrong size on Ultra_Dynamic_Weather_C_Get_Current_Temperature");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, Celsius) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::Celsius' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, Fahrenheit) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::Fahrenheit' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, Temp_byte_Variable) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, Temp_byte_Variable_1) == 0x000011, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, Temp_byte_Variable_2) == 0x000012, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_MapRangeClamped_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_MapRangeClamped_ReturnValue_3) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_PerlinNoise1D_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_PerlinNoise1D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_MapRangeClamped_ReturnValue_4) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_MapRangeClamped_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Lerp_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_MapRangeClamped_ReturnValue_5) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_MapRangeClamped_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, K2Node_Select_Default) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_GetForwardVector_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_BreakVector_X) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_BreakVector_Y) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_BreakVector_Z) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_MapRangeClamped_ReturnValue_6) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_MapRangeClamped_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x0000F0, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000100, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x000108, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Add_DoubleDouble_ReturnValue_5) == 0x000110, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Add_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Add_DoubleDouble_ReturnValue_6) == 0x000118, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Add_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_FClamp_ReturnValue) == 0x000120, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x000128, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000130, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Add_DoubleDouble_ReturnValue_7) == 0x000138, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Add_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000140, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, K2Node_Select_Default_1) == 0x000148, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, K2Node_Select_Default_2) == 0x000150, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_PerlinNoise1D_Value_ImplicitCast) == 0x000158, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_PerlinNoise1D_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000160, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Get Current Weather Type
// 0x002C (0x002C - 0x0000)
struct Ultra_Dynamic_Weather_C_Get_Current_Weather_Type final
{
public:
	EUDS_WeatherTypes                             Current_Weather_Type;                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_3;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_4;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_5;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_6;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_7;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_8;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_9;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_10;                             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             K2Node_Select_Default;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             K2Node_Select_Default_1;                           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_2;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             K2Node_Select_Default_2;                           // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_3;          // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             K2Node_Select_Default_3;                           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             K2Node_Select_Default_4;                           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_4;          // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_5;          // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             K2Node_Select_Default_5;                           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             K2Node_Select_Default_6;                           // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_6;          // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             K2Node_Select_Default_7;                           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             K2Node_Select_Default_8;                           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_7;          // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             K2Node_Select_Default_9;                           // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Get_Current_Weather_Type) == 0x000001, "Wrong alignment on Ultra_Dynamic_Weather_C_Get_Current_Weather_Type");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Get_Current_Weather_Type) == 0x00002C, "Wrong size on Ultra_Dynamic_Weather_C_Get_Current_Weather_Type");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Weather_Type, Current_Weather_Type) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Weather_Type::Current_Weather_Type' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Weather_Type, Temp_bool_Variable) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Weather_Type::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Weather_Type, Temp_byte_Variable) == 0x000002, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Weather_Type::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Weather_Type, Temp_byte_Variable_1) == 0x000003, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Weather_Type::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Weather_Type, Temp_bool_Variable_1) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Weather_Type::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Weather_Type, Temp_byte_Variable_2) == 0x000005, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Weather_Type::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Weather_Type, Temp_byte_Variable_3) == 0x000006, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Weather_Type::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Weather_Type, Temp_bool_Variable_2) == 0x000007, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Weather_Type::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Weather_Type, Temp_byte_Variable_4) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Weather_Type::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Weather_Type, Temp_bool_Variable_3) == 0x000009, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Weather_Type::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Weather_Type, Temp_byte_Variable_5) == 0x00000A, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Weather_Type::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Weather_Type, Temp_byte_Variable_6) == 0x00000B, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Weather_Type::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Weather_Type, Temp_bool_Variable_4) == 0x00000C, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Weather_Type::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Weather_Type, Temp_byte_Variable_7) == 0x00000D, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Weather_Type::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Weather_Type, Temp_bool_Variable_5) == 0x00000E, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Weather_Type::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Weather_Type, Temp_bool_Variable_6) == 0x00000F, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Weather_Type::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Weather_Type, Temp_byte_Variable_8) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Weather_Type::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Weather_Type, Temp_bool_Variable_7) == 0x000011, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Weather_Type::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Weather_Type, Temp_byte_Variable_9) == 0x000012, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Weather_Type::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Weather_Type, Temp_bool_Variable_8) == 0x000013, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Weather_Type::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Weather_Type, Temp_byte_Variable_10) == 0x000014, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Weather_Type::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Weather_Type, Temp_bool_Variable_9) == 0x000015, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Weather_Type::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Weather_Type, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000016, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Weather_Type::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Weather_Type, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000017, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Weather_Type::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Weather_Type, K2Node_Select_Default) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Weather_Type::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Weather_Type, K2Node_Select_Default_1) == 0x000019, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Weather_Type::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Weather_Type, CallFunc_Less_DoubleDouble_ReturnValue_2) == 0x00001A, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Weather_Type::CallFunc_Less_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Weather_Type, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00001B, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Weather_Type::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Weather_Type, K2Node_Select_Default_2) == 0x00001C, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Weather_Type::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Weather_Type, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x00001D, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Weather_Type::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Weather_Type, CallFunc_BooleanAND_ReturnValue) == 0x00001E, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Weather_Type::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Weather_Type, CallFunc_Less_DoubleDouble_ReturnValue_3) == 0x00001F, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Weather_Type::CallFunc_Less_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Weather_Type, K2Node_Select_Default_3) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Weather_Type::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Weather_Type, K2Node_Select_Default_4) == 0x000021, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Weather_Type::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Weather_Type, CallFunc_Less_DoubleDouble_ReturnValue_4) == 0x000022, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Weather_Type::CallFunc_Less_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Weather_Type, CallFunc_Less_DoubleDouble_ReturnValue_5) == 0x000023, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Weather_Type::CallFunc_Less_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Weather_Type, K2Node_Select_Default_5) == 0x000024, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Weather_Type::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Weather_Type, K2Node_Select_Default_6) == 0x000025, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Weather_Type::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Weather_Type, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000026, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Weather_Type::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Weather_Type, CallFunc_Less_DoubleDouble_ReturnValue_6) == 0x000027, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Weather_Type::CallFunc_Less_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Weather_Type, K2Node_Select_Default_7) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Weather_Type::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Weather_Type, K2Node_Select_Default_8) == 0x000029, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Weather_Type::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Weather_Type, CallFunc_Less_DoubleDouble_ReturnValue_7) == 0x00002A, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Weather_Type::CallFunc_Less_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Weather_Type, K2Node_Select_Default_9) == 0x00002B, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Weather_Type::K2Node_Select_Default_9' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Get Intended Cloud Direction
// 0x0008 (0x0008 - 0x0000)
struct Ultra_Dynamic_Weather_C_Get_Intended_Cloud_Direction final
{
public:
	double                                        Param_Intended_Cloud_Direction;                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Get_Intended_Cloud_Direction) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Get_Intended_Cloud_Direction");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Get_Intended_Cloud_Direction) == 0x000008, "Wrong size on Ultra_Dynamic_Weather_C_Get_Intended_Cloud_Direction");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Intended_Cloud_Direction, Param_Intended_Cloud_Direction) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Get_Intended_Cloud_Direction::Param_Intended_Cloud_Direction' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Get Intended Cloud Speed
// 0x0008 (0x0008 - 0x0000)
struct Ultra_Dynamic_Weather_C_Get_Intended_Cloud_Speed final
{
public:
	double                                        Param_Intended_Cloud_Speed;                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Get_Intended_Cloud_Speed) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Get_Intended_Cloud_Speed");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Get_Intended_Cloud_Speed) == 0x000008, "Wrong size on Ultra_Dynamic_Weather_C_Get_Intended_Cloud_Speed");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Intended_Cloud_Speed, Param_Intended_Cloud_Speed) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Get_Intended_Cloud_Speed::Param_Intended_Cloud_Speed' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Get Updated Control Point Location
// 0x0098 (0x0098 - 0x0000)
struct Ultra_Dynamic_Weather_C_Get_Updated_Control_Point_Location final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_ControlPointMode                         Temp_byte_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_1;     // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63[0x5];                                       // 0x0063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default;                             // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Get_Updated_Control_Point_Location) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Get_Updated_Control_Point_Location");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Get_Updated_Control_Point_Location) == 0x000098, "Wrong size on Ultra_Dynamic_Weather_C_Get_Updated_Control_Point_Location");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Updated_Control_Point_Location, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Get_Updated_Control_Point_Location::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Updated_Control_Point_Location, CallFunc_K2_GetPawn_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Get_Updated_Control_Point_Location::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Updated_Control_Point_Location, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Get_Updated_Control_Point_Location::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Updated_Control_Point_Location, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Get_Updated_Control_Point_Location::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Updated_Control_Point_Location, Temp_byte_Variable) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Get_Updated_Control_Point_Location::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Updated_Control_Point_Location, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Get_Updated_Control_Point_Location::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Updated_Control_Point_Location, CallFunc_GetCameraLocation_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Get_Updated_Control_Point_Location::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Updated_Control_Point_Location, CallFunc_GetPlayerCameraManager_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Get_Updated_Control_Point_Location::CallFunc_GetPlayerCameraManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Updated_Control_Point_Location, CallFunc_IsValid_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Get_Updated_Control_Point_Location::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Updated_Control_Point_Location, CallFunc_IsDedicatedServer_ReturnValue) == 0x000061, "Member 'Ultra_Dynamic_Weather_C_Get_Updated_Control_Point_Location::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Updated_Control_Point_Location, CallFunc_Not_PreBool_ReturnValue) == 0x000062, "Member 'Ultra_Dynamic_Weather_C_Get_Updated_Control_Point_Location::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Updated_Control_Point_Location, K2Node_Select_Default) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Get_Updated_Control_Point_Location::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Updated_Control_Point_Location, CallFunc_SelectVector_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Get_Updated_Control_Point_Location::CallFunc_SelectVector_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Get Weather Preset
// 0x1080 (0x1080 - 0x0000)
struct Ultra_Dynamic_Weather_C_Get_Weather_Preset final
{
public:
	EUDS_WeatherTypes                             Preset;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Param_Weather_Intensity;                           // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Param_Cloud_Coverage;                              // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Param__Snow;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Param_Wind_Intensity;                              // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Param_Material_Wetness;                            // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Material_Snow;                                     // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_3;                              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_4;                              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_5;                              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_6;                              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_7;                              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_8;                              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_9;                              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_10;                             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_11;                             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_12;                             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_13;                             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_14;                             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_1;                              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_15;                             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_16;                             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_17;                             // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_18;                             // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_19;                             // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_20;                             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_21;                             // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_22;                             // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_23;                             // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_24;                             // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_25;                             // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_26;                             // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_2;                              // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_1;                           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_27;                             // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_28;                             // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_29;                             // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_30;                             // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_31;                             // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_32;                             // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_33;                             // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_34;                             // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_35;                             // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_36;                             // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_37;                             // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_38;                             // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_3;                              // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_2;                           // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_39;                             // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_40;                             // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_41;                             // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_42;                             // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_43;                             // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_44;                             // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_45;                             // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_46;                             // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_47;                             // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_48;                             // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_49;                             // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_50;                             // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_4;                              // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_3;                           // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_51;                             // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_52;                             // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_53;                             // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_54;                             // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_55;                             // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_56;                             // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_57;                             // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_58;                             // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_59;                             // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_60;                             // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_61;                             // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_62;                             // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_4;                           // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_5;                              // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_63;                             // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_64;                             // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_65;                             // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_66;                             // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_67;                             // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_68;                             // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_69;                             // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_70;                             // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_71;                             // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_72;                             // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_73;                             // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_74;                             // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherVariables                         Temp_byte_Variable_6;                              // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_7;                              // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F2[0x6];                                      // 0x02F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_5;                           // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_75;                             // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_76;                             // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_77;                             // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_78;                             // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_79;                             // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_80;                             // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_81;                             // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_82;                             // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_83;                             // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_84;                             // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_85;                             // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_86;                             // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_8;                              // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_6;                           // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_87;                             // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_88;                             // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_89;                             // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_90;                             // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_91;                             // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_92;                             // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_93;                             // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_94;                             // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_95;                             // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_96;                             // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_97;                             // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_98;                             // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_9;                              // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D1[0x7];                                      // 0x03D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_7;                           // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_99;                             // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_100;                            // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_101;                            // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_102;                            // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_103;                            // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_104;                            // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_105;                            // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_106;                            // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_107;                            // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_108;                            // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_109;                            // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_110;                            // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_10;                             // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_441[0x7];                                      // 0x0441(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_8;                           // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_111;                            // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_112;                            // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_113;                            // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_114;                            // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_115;                            // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_116;                            // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_117;                            // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_118;                            // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_119;                            // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_120;                            // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_121;                            // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_122;                            // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_11;                             // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B1[0x7];                                      // 0x04B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_9;                           // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_123;                            // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_124;                            // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_125;                            // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_126;                            // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_127;                            // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_128;                            // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_129;                            // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_130;                            // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_131;                            // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_132;                            // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_133;                            // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_134;                            // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_12;                             // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_521[0x7];                                      // 0x0521(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_10;                          // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_135;                            // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_136;                            // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_137;                            // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_138;                            // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_139;                            // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_140;                            // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_141;                            // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_142;                            // 0x0568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_143;                            // 0x0570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_144;                            // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_145;                            // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_146;                            // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_591[0x7];                                      // 0x0591(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_11;                          // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_13;                             // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A1[0x7];                                      // 0x05A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_12;                          // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_147;                            // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_148;                            // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_149;                            // 0x05C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_150;                            // 0x05C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_151;                            // 0x05D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_152;                            // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_153;                            // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_154;                            // 0x05E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_155;                            // 0x05F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_156;                            // 0x05F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_157;                            // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_158;                            // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherVariables                         Temp_byte_Variable_14;                             // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_611[0x7];                                      // 0x0611(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_13;                          // 0x0618(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_15;                             // 0x0620(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_621[0x7];                                      // 0x0621(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_159;                            // 0x0628(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_160;                            // 0x0630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_161;                            // 0x0638(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_162;                            // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_163;                            // 0x0648(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_164;                            // 0x0650(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_165;                            // 0x0658(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_166;                            // 0x0660(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_167;                            // 0x0668(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_168;                            // 0x0670(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_169;                            // 0x0678(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_170;                            // 0x0680(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_16;                             // 0x0688(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_689[0x7];                                      // 0x0689(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_14;                          // 0x0690(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_171;                            // 0x0698(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_172;                            // 0x06A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_173;                            // 0x06A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_174;                            // 0x06B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_175;                            // 0x06B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_176;                            // 0x06C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_177;                            // 0x06C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_178;                            // 0x06D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_179;                            // 0x06D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_180;                            // 0x06E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_181;                            // 0x06E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_182;                            // 0x06F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_17;                             // 0x06F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F9[0x7];                                      // 0x06F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_15;                          // 0x0700(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_183;                            // 0x0708(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_184;                            // 0x0710(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_185;                            // 0x0718(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_186;                            // 0x0720(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_187;                            // 0x0728(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_188;                            // 0x0730(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_189;                            // 0x0738(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_190;                            // 0x0740(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_191;                            // 0x0748(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_192;                            // 0x0750(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_193;                            // 0x0758(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_194;                            // 0x0760(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_18;                             // 0x0768(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_769[0x7];                                      // 0x0769(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_16;                          // 0x0770(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_195;                            // 0x0778(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_196;                            // 0x0780(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_197;                            // 0x0788(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_198;                            // 0x0790(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_199;                            // 0x0798(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_200;                            // 0x07A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_201;                            // 0x07A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_202;                            // 0x07B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_203;                            // 0x07B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_204;                            // 0x07C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_205;                            // 0x07C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_206;                            // 0x07D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_19;                             // 0x07D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D9[0x7];                                      // 0x07D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_17;                          // 0x07E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_207;                            // 0x07E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_208;                            // 0x07F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_209;                            // 0x07F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_210;                            // 0x0800(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_211;                            // 0x0808(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_212;                            // 0x0810(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_213;                            // 0x0818(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_214;                            // 0x0820(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_215;                            // 0x0828(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_216;                            // 0x0830(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_217;                            // 0x0838(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_218;                            // 0x0840(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_20;                             // 0x0848(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_849[0x7];                                      // 0x0849(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_18;                          // 0x0850(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_219;                            // 0x0858(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_220;                            // 0x0860(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_221;                            // 0x0868(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_222;                            // 0x0870(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_223;                            // 0x0878(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_224;                            // 0x0880(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_225;                            // 0x0888(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_226;                            // 0x0890(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_227;                            // 0x0898(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_228;                            // 0x08A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_229;                            // 0x08A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_230;                            // 0x08B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x08B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B9[0x7];                                      // 0x08B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_19;                          // 0x08C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_21;                             // 0x08C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C9[0x7];                                      // 0x08C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_20;                          // 0x08D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_231;                            // 0x08D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_232;                            // 0x08E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_233;                            // 0x08E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_234;                            // 0x08F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_235;                            // 0x08F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_236;                            // 0x0900(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_237;                            // 0x0908(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_238;                            // 0x0910(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_239;                            // 0x0918(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_240;                            // 0x0920(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_241;                            // 0x0928(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_242;                            // 0x0930(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherVariables                         Temp_byte_Variable_22;                             // 0x0938(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_939[0x7];                                      // 0x0939(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_21;                          // 0x0940(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_23;                             // 0x0948(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_949[0x7];                                      // 0x0949(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_243;                            // 0x0950(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_244;                            // 0x0958(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_245;                            // 0x0960(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_246;                            // 0x0968(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_247;                            // 0x0970(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_248;                            // 0x0978(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_249;                            // 0x0980(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_250;                            // 0x0988(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_251;                            // 0x0990(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_252;                            // 0x0998(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_253;                            // 0x09A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_254;                            // 0x09A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_24;                             // 0x09B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B1[0x7];                                      // 0x09B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_22;                          // 0x09B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_255;                            // 0x09C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_256;                            // 0x09C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_257;                            // 0x09D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_258;                            // 0x09D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_259;                            // 0x09E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_260;                            // 0x09E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_261;                            // 0x09F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_262;                            // 0x09F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_263;                            // 0x0A00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_264;                            // 0x0A08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_265;                            // 0x0A10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_266;                            // 0x0A18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_25;                             // 0x0A20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A21[0x7];                                      // 0x0A21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_23;                          // 0x0A28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_267;                            // 0x0A30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_268;                            // 0x0A38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_269;                            // 0x0A40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_270;                            // 0x0A48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_271;                            // 0x0A50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_272;                            // 0x0A58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_273;                            // 0x0A60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_274;                            // 0x0A68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_275;                            // 0x0A70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_276;                            // 0x0A78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_277;                            // 0x0A80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_278;                            // 0x0A88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_26;                             // 0x0A90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A91[0x7];                                      // 0x0A91(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_24;                          // 0x0A98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_279;                            // 0x0AA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_280;                            // 0x0AA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_281;                            // 0x0AB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_282;                            // 0x0AB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_283;                            // 0x0AC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_284;                            // 0x0AC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_285;                            // 0x0AD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_286;                            // 0x0AD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_287;                            // 0x0AE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_288;                            // 0x0AE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_289;                            // 0x0AF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_290;                            // 0x0AF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_27;                             // 0x0B00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B01[0x7];                                      // 0x0B01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_25;                          // 0x0B08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_291;                            // 0x0B10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_292;                            // 0x0B18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_293;                            // 0x0B20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_294;                            // 0x0B28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_295;                            // 0x0B30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_296;                            // 0x0B38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_297;                            // 0x0B40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_298;                            // 0x0B48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_299;                            // 0x0B50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_300;                            // 0x0B58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_301;                            // 0x0B60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_302;                            // 0x0B68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_28;                             // 0x0B70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B71[0x7];                                      // 0x0B71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_26;                          // 0x0B78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_303;                            // 0x0B80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_304;                            // 0x0B88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_305;                            // 0x0B90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_306;                            // 0x0B98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_307;                            // 0x0BA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_308;                            // 0x0BA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_309;                            // 0x0BB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_310;                            // 0x0BB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_311;                            // 0x0BC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_312;                            // 0x0BC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_313;                            // 0x0BD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_314;                            // 0x0BD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_3;            // 0x0BE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BE1[0x7];                                      // 0x0BE1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_27;                          // 0x0BE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_29;                             // 0x0BF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BF1[0x7];                                      // 0x0BF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_28;                          // 0x0BF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_315;                            // 0x0C00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_316;                            // 0x0C08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_317;                            // 0x0C10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_318;                            // 0x0C18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_319;                            // 0x0C20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_320;                            // 0x0C28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_321;                            // 0x0C30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_322;                            // 0x0C38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_323;                            // 0x0C40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_324;                            // 0x0C48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_325;                            // 0x0C50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_326;                            // 0x0C58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherVariables                         Temp_byte_Variable_30;                             // 0x0C60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C61[0x7];                                      // 0x0C61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_29;                          // 0x0C68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_31;                             // 0x0C70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C71[0x7];                                      // 0x0C71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_327;                            // 0x0C78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_328;                            // 0x0C80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_329;                            // 0x0C88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_330;                            // 0x0C90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_331;                            // 0x0C98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_332;                            // 0x0CA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_333;                            // 0x0CA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_334;                            // 0x0CB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_335;                            // 0x0CB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_336;                            // 0x0CC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_337;                            // 0x0CC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_338;                            // 0x0CD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_32;                             // 0x0CD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CD9[0x7];                                      // 0x0CD9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_30;                          // 0x0CE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_339;                            // 0x0CE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_340;                            // 0x0CF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_341;                            // 0x0CF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_342;                            // 0x0D00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_343;                            // 0x0D08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_344;                            // 0x0D10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_345;                            // 0x0D18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_346;                            // 0x0D20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_347;                            // 0x0D28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_348;                            // 0x0D30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_349;                            // 0x0D38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_350;                            // 0x0D40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_33;                             // 0x0D48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D49[0x7];                                      // 0x0D49(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_31;                          // 0x0D50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_351;                            // 0x0D58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_352;                            // 0x0D60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_353;                            // 0x0D68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_354;                            // 0x0D70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_355;                            // 0x0D78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_356;                            // 0x0D80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_357;                            // 0x0D88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_358;                            // 0x0D90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_359;                            // 0x0D98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_360;                            // 0x0DA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_361;                            // 0x0DA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_362;                            // 0x0DB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_34;                             // 0x0DB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DB9[0x7];                                      // 0x0DB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_32;                          // 0x0DC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_363;                            // 0x0DC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_364;                            // 0x0DD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_365;                            // 0x0DD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_366;                            // 0x0DE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_367;                            // 0x0DE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_368;                            // 0x0DF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_369;                            // 0x0DF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_370;                            // 0x0E00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_371;                            // 0x0E08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_372;                            // 0x0E10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_373;                            // 0x0E18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_374;                            // 0x0E20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_35;                             // 0x0E28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E29[0x7];                                      // 0x0E29(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_33;                          // 0x0E30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_375;                            // 0x0E38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_376;                            // 0x0E40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_377;                            // 0x0E48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_378;                            // 0x0E50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_379;                            // 0x0E58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_380;                            // 0x0E60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_381;                            // 0x0E68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_382;                            // 0x0E70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_383;                            // 0x0E78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_384;                            // 0x0E80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_385;                            // 0x0E88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_386;                            // 0x0E90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_36;                             // 0x0E98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E99[0x7];                                      // 0x0E99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_34;                          // 0x0EA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_387;                            // 0x0EA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_388;                            // 0x0EB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_389;                            // 0x0EB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_390;                            // 0x0EC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_391;                            // 0x0EC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_392;                            // 0x0ED0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_393;                            // 0x0ED8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_394;                            // 0x0EE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_395;                            // 0x0EE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_396;                            // 0x0EF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_397;                            // 0x0EF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_398;                            // 0x0F00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_4;            // 0x0F08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F09[0x7];                                      // 0x0F09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_35;                          // 0x0F10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_37;                             // 0x0F18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F19[0x7];                                      // 0x0F19(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_36;                          // 0x0F20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_399;                            // 0x0F28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_400;                            // 0x0F30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_401;                            // 0x0F38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_402;                            // 0x0F40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_403;                            // 0x0F48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_404;                            // 0x0F50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_405;                            // 0x0F58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_406;                            // 0x0F60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_407;                            // 0x0F68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_408;                            // 0x0F70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_409;                            // 0x0F78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_410;                            // 0x0F80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_38;                             // 0x0F88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F89[0x7];                                      // 0x0F89(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_37;                          // 0x0F90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_411;                            // 0x0F98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_412;                            // 0x0FA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_413;                            // 0x0FA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_414;                            // 0x0FB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_415;                            // 0x0FB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_416;                            // 0x0FC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_417;                            // 0x0FC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_418;                            // 0x0FD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_419;                            // 0x0FD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_420;                            // 0x0FE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_421;                            // 0x0FE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_422;                            // 0x0FF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherVariables                         Temp_byte_Variable_39;                             // 0x0FF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FF9[0x7];                                      // 0x0FF9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_38;                          // 0x1000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherTypes                             Temp_byte_Variable_40;                             // 0x1008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1009[0x7];                                     // 0x1009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_423;                            // 0x1010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_424;                            // 0x1018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_425;                            // 0x1020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_426;                            // 0x1028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_WeatherVariables                         Temp_byte_Variable_41;                             // 0x1030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1031[0x7];                                     // 0x1031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_427;                            // 0x1038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_428;                            // 0x1040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_429;                            // 0x1048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_5;            // 0x1050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1051[0x7];                                     // 0x1051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_430;                            // 0x1058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_39;                          // 0x1060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_431;                            // 0x1068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_40;                          // 0x1070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_41;                          // 0x1078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Get_Weather_Preset) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Get_Weather_Preset");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Get_Weather_Preset) == 0x001080, "Wrong size on Ultra_Dynamic_Weather_C_Get_Weather_Preset");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Preset) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Preset' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Param_Weather_Intensity) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Param_Weather_Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Param_Cloud_Coverage) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Param_Cloud_Coverage' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Param__Snow) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Param__Snow' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Param_Wind_Intensity) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Param_Wind_Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Param_Material_Wetness) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Param_Material_Wetness' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Material_Snow) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Material_Snow' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_1) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_2) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_byte_Variable) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_3) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_4) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_5) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_6) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_7) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_8) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_9) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_10) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_11) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_12) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_13) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_14) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_byte_Variable_1) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, K2Node_Select_Default) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_15) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_16) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_17) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_18) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_19) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_20) == 0x0000F0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_21) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_22) == 0x000100, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_22' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_23) == 0x000108, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_23' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_24) == 0x000110, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_24' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_25) == 0x000118, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_25' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_26) == 0x000120, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_26' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_byte_Variable_2) == 0x000128, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, K2Node_Select_Default_1) == 0x000130, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_27) == 0x000138, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_27' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_28) == 0x000140, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_28' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_29) == 0x000148, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_29' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_30) == 0x000150, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_30' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_31) == 0x000158, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_31' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_32) == 0x000160, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_32' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_33) == 0x000168, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_33' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_34) == 0x000170, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_34' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_35) == 0x000178, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_35' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_36) == 0x000180, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_36' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_37) == 0x000188, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_37' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_38) == 0x000190, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_38' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_byte_Variable_3) == 0x000198, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, K2Node_Select_Default_2) == 0x0001A0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_39) == 0x0001A8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_39' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_40) == 0x0001B0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_40' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_41) == 0x0001B8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_41' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_42) == 0x0001C0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_42' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_43) == 0x0001C8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_43' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_44) == 0x0001D0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_44' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_45) == 0x0001D8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_45' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_46) == 0x0001E0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_46' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_47) == 0x0001E8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_47' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_48) == 0x0001F0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_48' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_49) == 0x0001F8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_49' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_50) == 0x000200, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_50' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_byte_Variable_4) == 0x000208, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, K2Node_Select_Default_3) == 0x000210, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_51) == 0x000218, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_51' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_52) == 0x000220, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_52' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_53) == 0x000228, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_53' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_54) == 0x000230, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_54' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_55) == 0x000238, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_55' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_56) == 0x000240, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_56' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_57) == 0x000248, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_57' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_58) == 0x000250, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_58' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_59) == 0x000258, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_59' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_60) == 0x000260, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_60' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_61) == 0x000268, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_61' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_62) == 0x000270, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_62' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, CallFunc_MakeLiteralByte_ReturnValue) == 0x000278, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, K2Node_Select_Default_4) == 0x000280, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_byte_Variable_5) == 0x000288, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_63) == 0x000290, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_63' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_64) == 0x000298, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_64' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_65) == 0x0002A0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_65' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_66) == 0x0002A8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_66' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_67) == 0x0002B0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_67' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_68) == 0x0002B8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_68' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_69) == 0x0002C0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_69' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_70) == 0x0002C8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_70' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_71) == 0x0002D0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_71' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_72) == 0x0002D8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_72' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_73) == 0x0002E0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_73' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_74) == 0x0002E8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_74' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_byte_Variable_6) == 0x0002F0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_byte_Variable_7) == 0x0002F1, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, K2Node_Select_Default_5) == 0x0002F8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_75) == 0x000300, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_75' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_76) == 0x000308, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_76' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_77) == 0x000310, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_77' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_78) == 0x000318, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_78' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_79) == 0x000320, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_79' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_80) == 0x000328, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_80' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_81) == 0x000330, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_81' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_82) == 0x000338, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_82' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_83) == 0x000340, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_83' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_84) == 0x000348, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_84' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_85) == 0x000350, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_85' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_86) == 0x000358, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_86' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_byte_Variable_8) == 0x000360, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, K2Node_Select_Default_6) == 0x000368, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_87) == 0x000370, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_87' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_88) == 0x000378, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_88' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_89) == 0x000380, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_89' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_90) == 0x000388, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_90' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_91) == 0x000390, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_91' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_92) == 0x000398, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_92' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_93) == 0x0003A0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_93' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_94) == 0x0003A8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_94' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_95) == 0x0003B0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_95' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_96) == 0x0003B8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_96' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_97) == 0x0003C0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_97' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_98) == 0x0003C8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_98' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_byte_Variable_9) == 0x0003D0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, K2Node_Select_Default_7) == 0x0003D8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_99) == 0x0003E0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_99' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_100) == 0x0003E8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_100' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_101) == 0x0003F0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_101' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_102) == 0x0003F8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_102' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_103) == 0x000400, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_103' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_104) == 0x000408, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_104' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_105) == 0x000410, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_105' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_106) == 0x000418, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_106' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_107) == 0x000420, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_107' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_108) == 0x000428, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_108' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_109) == 0x000430, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_109' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_110) == 0x000438, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_110' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_byte_Variable_10) == 0x000440, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, K2Node_Select_Default_8) == 0x000448, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_111) == 0x000450, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_111' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_112) == 0x000458, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_112' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_113) == 0x000460, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_113' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_114) == 0x000468, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_114' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_115) == 0x000470, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_115' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_116) == 0x000478, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_116' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_117) == 0x000480, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_117' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_118) == 0x000488, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_118' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_119) == 0x000490, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_119' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_120) == 0x000498, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_120' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_121) == 0x0004A0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_121' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_122) == 0x0004A8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_122' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_byte_Variable_11) == 0x0004B0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, K2Node_Select_Default_9) == 0x0004B8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_123) == 0x0004C0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_123' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_124) == 0x0004C8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_124' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_125) == 0x0004D0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_125' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_126) == 0x0004D8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_126' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_127) == 0x0004E0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_127' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_128) == 0x0004E8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_128' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_129) == 0x0004F0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_129' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_130) == 0x0004F8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_130' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_131) == 0x000500, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_131' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_132) == 0x000508, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_132' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_133) == 0x000510, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_133' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_134) == 0x000518, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_134' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_byte_Variable_12) == 0x000520, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, K2Node_Select_Default_10) == 0x000528, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_135) == 0x000530, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_135' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_136) == 0x000538, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_136' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_137) == 0x000540, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_137' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_138) == 0x000548, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_138' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_139) == 0x000550, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_139' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_140) == 0x000558, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_140' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_141) == 0x000560, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_141' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_142) == 0x000568, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_142' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_143) == 0x000570, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_143' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_144) == 0x000578, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_144' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_145) == 0x000580, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_145' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_146) == 0x000588, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_146' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000590, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, K2Node_Select_Default_11) == 0x000598, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_byte_Variable_13) == 0x0005A0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, K2Node_Select_Default_12) == 0x0005A8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::K2Node_Select_Default_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_147) == 0x0005B0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_147' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_148) == 0x0005B8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_148' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_149) == 0x0005C0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_149' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_150) == 0x0005C8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_150' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_151) == 0x0005D0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_151' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_152) == 0x0005D8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_152' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_153) == 0x0005E0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_153' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_154) == 0x0005E8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_154' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_155) == 0x0005F0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_155' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_156) == 0x0005F8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_156' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_157) == 0x000600, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_157' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_158) == 0x000608, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_158' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_byte_Variable_14) == 0x000610, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, K2Node_Select_Default_13) == 0x000618, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::K2Node_Select_Default_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_byte_Variable_15) == 0x000620, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_159) == 0x000628, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_159' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_160) == 0x000630, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_160' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_161) == 0x000638, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_161' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_162) == 0x000640, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_162' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_163) == 0x000648, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_163' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_164) == 0x000650, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_164' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_165) == 0x000658, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_165' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_166) == 0x000660, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_166' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_167) == 0x000668, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_167' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_168) == 0x000670, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_168' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_169) == 0x000678, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_169' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_170) == 0x000680, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_170' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_byte_Variable_16) == 0x000688, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, K2Node_Select_Default_14) == 0x000690, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::K2Node_Select_Default_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_171) == 0x000698, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_171' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_172) == 0x0006A0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_172' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_173) == 0x0006A8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_173' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_174) == 0x0006B0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_174' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_175) == 0x0006B8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_175' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_176) == 0x0006C0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_176' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_177) == 0x0006C8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_177' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_178) == 0x0006D0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_178' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_179) == 0x0006D8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_179' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_180) == 0x0006E0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_180' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_181) == 0x0006E8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_181' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_182) == 0x0006F0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_182' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_byte_Variable_17) == 0x0006F8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, K2Node_Select_Default_15) == 0x000700, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::K2Node_Select_Default_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_183) == 0x000708, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_183' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_184) == 0x000710, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_184' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_185) == 0x000718, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_185' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_186) == 0x000720, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_186' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_187) == 0x000728, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_187' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_188) == 0x000730, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_188' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_189) == 0x000738, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_189' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_190) == 0x000740, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_190' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_191) == 0x000748, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_191' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_192) == 0x000750, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_192' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_193) == 0x000758, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_193' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_194) == 0x000760, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_194' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_byte_Variable_18) == 0x000768, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, K2Node_Select_Default_16) == 0x000770, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::K2Node_Select_Default_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_195) == 0x000778, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_195' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_196) == 0x000780, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_196' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_197) == 0x000788, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_197' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_198) == 0x000790, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_198' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_199) == 0x000798, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_199' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_200) == 0x0007A0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_200' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_201) == 0x0007A8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_201' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_202) == 0x0007B0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_202' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_203) == 0x0007B8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_203' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_204) == 0x0007C0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_204' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_205) == 0x0007C8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_205' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_206) == 0x0007D0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_206' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_byte_Variable_19) == 0x0007D8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_byte_Variable_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, K2Node_Select_Default_17) == 0x0007E0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::K2Node_Select_Default_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_207) == 0x0007E8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_207' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_208) == 0x0007F0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_208' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_209) == 0x0007F8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_209' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_210) == 0x000800, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_210' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_211) == 0x000808, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_211' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_212) == 0x000810, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_212' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_213) == 0x000818, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_213' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_214) == 0x000820, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_214' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_215) == 0x000828, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_215' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_216) == 0x000830, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_216' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_217) == 0x000838, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_217' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_218) == 0x000840, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_218' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_byte_Variable_20) == 0x000848, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_byte_Variable_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, K2Node_Select_Default_18) == 0x000850, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::K2Node_Select_Default_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_219) == 0x000858, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_219' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_220) == 0x000860, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_220' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_221) == 0x000868, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_221' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_222) == 0x000870, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_222' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_223) == 0x000878, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_223' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_224) == 0x000880, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_224' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_225) == 0x000888, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_225' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_226) == 0x000890, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_226' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_227) == 0x000898, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_227' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_228) == 0x0008A0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_228' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_229) == 0x0008A8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_229' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_230) == 0x0008B0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_230' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x0008B8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, K2Node_Select_Default_19) == 0x0008C0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::K2Node_Select_Default_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_byte_Variable_21) == 0x0008C8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_byte_Variable_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, K2Node_Select_Default_20) == 0x0008D0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::K2Node_Select_Default_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_231) == 0x0008D8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_231' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_232) == 0x0008E0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_232' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_233) == 0x0008E8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_233' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_234) == 0x0008F0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_234' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_235) == 0x0008F8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_235' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_236) == 0x000900, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_236' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_237) == 0x000908, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_237' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_238) == 0x000910, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_238' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_239) == 0x000918, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_239' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_240) == 0x000920, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_240' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_241) == 0x000928, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_241' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_242) == 0x000930, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_242' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_byte_Variable_22) == 0x000938, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_byte_Variable_22' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, K2Node_Select_Default_21) == 0x000940, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::K2Node_Select_Default_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_byte_Variable_23) == 0x000948, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_byte_Variable_23' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_243) == 0x000950, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_243' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_244) == 0x000958, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_244' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_245) == 0x000960, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_245' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_246) == 0x000968, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_246' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_247) == 0x000970, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_247' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_248) == 0x000978, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_248' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_249) == 0x000980, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_249' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_250) == 0x000988, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_250' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_251) == 0x000990, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_251' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_252) == 0x000998, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_252' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_253) == 0x0009A0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_253' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_254) == 0x0009A8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_254' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_byte_Variable_24) == 0x0009B0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_byte_Variable_24' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, K2Node_Select_Default_22) == 0x0009B8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::K2Node_Select_Default_22' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_255) == 0x0009C0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_255' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_256) == 0x0009C8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_256' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_257) == 0x0009D0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_257' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_258) == 0x0009D8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_258' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_259) == 0x0009E0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_259' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_260) == 0x0009E8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_260' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_261) == 0x0009F0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_261' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_262) == 0x0009F8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_262' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_263) == 0x000A00, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_263' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_264) == 0x000A08, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_264' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_265) == 0x000A10, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_265' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_266) == 0x000A18, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_266' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_byte_Variable_25) == 0x000A20, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_byte_Variable_25' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, K2Node_Select_Default_23) == 0x000A28, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::K2Node_Select_Default_23' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_267) == 0x000A30, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_267' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_268) == 0x000A38, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_268' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_269) == 0x000A40, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_269' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_270) == 0x000A48, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_270' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_271) == 0x000A50, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_271' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_272) == 0x000A58, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_272' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_273) == 0x000A60, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_273' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_274) == 0x000A68, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_274' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_275) == 0x000A70, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_275' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_276) == 0x000A78, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_276' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_277) == 0x000A80, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_277' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_278) == 0x000A88, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_278' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_byte_Variable_26) == 0x000A90, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_byte_Variable_26' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, K2Node_Select_Default_24) == 0x000A98, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::K2Node_Select_Default_24' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_279) == 0x000AA0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_279' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_280) == 0x000AA8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_280' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_281) == 0x000AB0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_281' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_282) == 0x000AB8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_282' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_283) == 0x000AC0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_283' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_284) == 0x000AC8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_284' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_285) == 0x000AD0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_285' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_286) == 0x000AD8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_286' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_287) == 0x000AE0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_287' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_288) == 0x000AE8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_288' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_289) == 0x000AF0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_289' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_290) == 0x000AF8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_290' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_byte_Variable_27) == 0x000B00, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_byte_Variable_27' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, K2Node_Select_Default_25) == 0x000B08, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::K2Node_Select_Default_25' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_291) == 0x000B10, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_291' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_292) == 0x000B18, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_292' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_293) == 0x000B20, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_293' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_294) == 0x000B28, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_294' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_295) == 0x000B30, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_295' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_296) == 0x000B38, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_296' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_297) == 0x000B40, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_297' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_298) == 0x000B48, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_298' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_299) == 0x000B50, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_299' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_300) == 0x000B58, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_300' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_301) == 0x000B60, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_301' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_302) == 0x000B68, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_302' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_byte_Variable_28) == 0x000B70, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_byte_Variable_28' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, K2Node_Select_Default_26) == 0x000B78, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::K2Node_Select_Default_26' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_303) == 0x000B80, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_303' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_304) == 0x000B88, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_304' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_305) == 0x000B90, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_305' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_306) == 0x000B98, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_306' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_307) == 0x000BA0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_307' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_308) == 0x000BA8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_308' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_309) == 0x000BB0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_309' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_310) == 0x000BB8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_310' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_311) == 0x000BC0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_311' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_312) == 0x000BC8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_312' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_313) == 0x000BD0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_313' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_314) == 0x000BD8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_314' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, CallFunc_MakeLiteralByte_ReturnValue_3) == 0x000BE0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::CallFunc_MakeLiteralByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, K2Node_Select_Default_27) == 0x000BE8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::K2Node_Select_Default_27' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_byte_Variable_29) == 0x000BF0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_byte_Variable_29' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, K2Node_Select_Default_28) == 0x000BF8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::K2Node_Select_Default_28' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_315) == 0x000C00, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_315' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_316) == 0x000C08, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_316' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_317) == 0x000C10, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_317' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_318) == 0x000C18, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_318' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_319) == 0x000C20, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_319' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_320) == 0x000C28, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_320' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_321) == 0x000C30, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_321' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_322) == 0x000C38, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_322' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_323) == 0x000C40, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_323' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_324) == 0x000C48, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_324' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_325) == 0x000C50, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_325' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_326) == 0x000C58, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_326' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_byte_Variable_30) == 0x000C60, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_byte_Variable_30' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, K2Node_Select_Default_29) == 0x000C68, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::K2Node_Select_Default_29' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_byte_Variable_31) == 0x000C70, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_byte_Variable_31' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_327) == 0x000C78, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_327' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_328) == 0x000C80, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_328' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_329) == 0x000C88, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_329' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_330) == 0x000C90, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_330' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_331) == 0x000C98, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_331' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_332) == 0x000CA0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_332' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_333) == 0x000CA8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_333' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_334) == 0x000CB0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_334' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_335) == 0x000CB8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_335' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_336) == 0x000CC0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_336' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_337) == 0x000CC8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_337' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_338) == 0x000CD0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_338' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_byte_Variable_32) == 0x000CD8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_byte_Variable_32' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, K2Node_Select_Default_30) == 0x000CE0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::K2Node_Select_Default_30' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_339) == 0x000CE8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_339' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_340) == 0x000CF0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_340' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_341) == 0x000CF8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_341' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_342) == 0x000D00, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_342' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_343) == 0x000D08, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_343' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_344) == 0x000D10, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_344' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_345) == 0x000D18, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_345' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_346) == 0x000D20, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_346' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_347) == 0x000D28, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_347' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_348) == 0x000D30, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_348' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_349) == 0x000D38, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_349' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_350) == 0x000D40, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_350' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_byte_Variable_33) == 0x000D48, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_byte_Variable_33' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, K2Node_Select_Default_31) == 0x000D50, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::K2Node_Select_Default_31' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_351) == 0x000D58, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_351' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_352) == 0x000D60, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_352' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_353) == 0x000D68, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_353' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_354) == 0x000D70, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_354' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_355) == 0x000D78, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_355' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_356) == 0x000D80, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_356' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_357) == 0x000D88, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_357' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_358) == 0x000D90, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_358' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_359) == 0x000D98, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_359' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_360) == 0x000DA0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_360' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_361) == 0x000DA8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_361' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_362) == 0x000DB0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_362' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_byte_Variable_34) == 0x000DB8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_byte_Variable_34' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, K2Node_Select_Default_32) == 0x000DC0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::K2Node_Select_Default_32' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_363) == 0x000DC8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_363' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_364) == 0x000DD0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_364' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_365) == 0x000DD8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_365' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_366) == 0x000DE0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_366' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_367) == 0x000DE8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_367' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_368) == 0x000DF0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_368' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_369) == 0x000DF8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_369' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_370) == 0x000E00, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_370' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_371) == 0x000E08, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_371' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_372) == 0x000E10, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_372' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_373) == 0x000E18, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_373' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_374) == 0x000E20, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_374' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_byte_Variable_35) == 0x000E28, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_byte_Variable_35' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, K2Node_Select_Default_33) == 0x000E30, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::K2Node_Select_Default_33' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_375) == 0x000E38, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_375' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_376) == 0x000E40, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_376' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_377) == 0x000E48, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_377' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_378) == 0x000E50, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_378' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_379) == 0x000E58, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_379' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_380) == 0x000E60, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_380' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_381) == 0x000E68, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_381' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_382) == 0x000E70, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_382' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_383) == 0x000E78, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_383' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_384) == 0x000E80, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_384' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_385) == 0x000E88, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_385' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_386) == 0x000E90, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_386' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_byte_Variable_36) == 0x000E98, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_byte_Variable_36' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, K2Node_Select_Default_34) == 0x000EA0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::K2Node_Select_Default_34' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_387) == 0x000EA8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_387' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_388) == 0x000EB0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_388' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_389) == 0x000EB8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_389' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_390) == 0x000EC0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_390' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_391) == 0x000EC8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_391' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_392) == 0x000ED0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_392' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_393) == 0x000ED8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_393' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_394) == 0x000EE0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_394' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_395) == 0x000EE8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_395' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_396) == 0x000EF0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_396' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_397) == 0x000EF8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_397' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_398) == 0x000F00, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_398' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, CallFunc_MakeLiteralByte_ReturnValue_4) == 0x000F08, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::CallFunc_MakeLiteralByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, K2Node_Select_Default_35) == 0x000F10, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::K2Node_Select_Default_35' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_byte_Variable_37) == 0x000F18, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_byte_Variable_37' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, K2Node_Select_Default_36) == 0x000F20, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::K2Node_Select_Default_36' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_399) == 0x000F28, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_399' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_400) == 0x000F30, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_400' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_401) == 0x000F38, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_401' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_402) == 0x000F40, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_402' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_403) == 0x000F48, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_403' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_404) == 0x000F50, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_404' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_405) == 0x000F58, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_405' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_406) == 0x000F60, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_406' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_407) == 0x000F68, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_407' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_408) == 0x000F70, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_408' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_409) == 0x000F78, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_409' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_410) == 0x000F80, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_410' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_byte_Variable_38) == 0x000F88, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_byte_Variable_38' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, K2Node_Select_Default_37) == 0x000F90, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::K2Node_Select_Default_37' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_411) == 0x000F98, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_411' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_412) == 0x000FA0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_412' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_413) == 0x000FA8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_413' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_414) == 0x000FB0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_414' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_415) == 0x000FB8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_415' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_416) == 0x000FC0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_416' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_417) == 0x000FC8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_417' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_418) == 0x000FD0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_418' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_419) == 0x000FD8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_419' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_420) == 0x000FE0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_420' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_421) == 0x000FE8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_421' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_422) == 0x000FF0, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_422' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_byte_Variable_39) == 0x000FF8, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_byte_Variable_39' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, K2Node_Select_Default_38) == 0x001000, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::K2Node_Select_Default_38' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_byte_Variable_40) == 0x001008, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_byte_Variable_40' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_423) == 0x001010, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_423' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_424) == 0x001018, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_424' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_425) == 0x001020, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_425' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_426) == 0x001028, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_426' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_byte_Variable_41) == 0x001030, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_byte_Variable_41' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_427) == 0x001038, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_427' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_428) == 0x001040, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_428' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_429) == 0x001048, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_429' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, CallFunc_MakeLiteralByte_ReturnValue_5) == 0x001050, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::CallFunc_MakeLiteralByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_430) == 0x001058, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_430' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, K2Node_Select_Default_39) == 0x001060, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::K2Node_Select_Default_39' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, Temp_real_Variable_431) == 0x001068, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::Temp_real_Variable_431' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, K2Node_Select_Default_40) == 0x001070, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::K2Node_Select_Default_40' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Preset, K2Node_Select_Default_41) == 0x001078, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Preset::K2Node_Select_Default_41' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Limit Weather Intensity
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Weather_C_Limit_Weather_Intensity final
{
public:
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_3;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Limit_Weather_Intensity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Limit_Weather_Intensity");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Limit_Weather_Intensity) == 0x000030, "Wrong size on Ultra_Dynamic_Weather_C_Limit_Weather_Intensity");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Limit_Weather_Intensity, CallFunc_MapRangeClamped_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Limit_Weather_Intensity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Limit_Weather_Intensity, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Limit_Weather_Intensity::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Limit_Weather_Intensity, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Limit_Weather_Intensity::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Limit_Weather_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Limit_Weather_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Limit_Weather_Intensity, CallFunc_MapRangeClamped_ReturnValue_3) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Limit_Weather_Intensity::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Limit_Weather_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Limit_Weather_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Print Current Status To Screen
// 0x00D8 (0x00D8 - 0x0000)
struct Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen final
{
public:
	EUDS_WeatherTypes                             CallFunc_Get_Current_Weather_Type_Current_Weather_Type; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Left_ReturnValue;                         // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_1;        // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Left_ReturnValue_1;                       // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_2;        // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Left_ReturnValue_2;                       // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_3;        // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Left_ReturnValue_3;                       // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen) == 0x0000D8, "Wrong size on Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen, CallFunc_Get_Current_Weather_Type_Current_Weather_Type) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen::CallFunc_Get_Current_Weather_Type_Current_Weather_Type' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen, CallFunc_Left_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen::CallFunc_Left_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen, CallFunc_Concat_StrStr_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen, CallFunc_Conv_DoubleToString_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen::CallFunc_Conv_DoubleToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen, CallFunc_Left_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen::CallFunc_Left_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen, CallFunc_Conv_DoubleToString_ReturnValue_2) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen::CallFunc_Conv_DoubleToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen, CallFunc_Left_ReturnValue_2) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen::CallFunc_Left_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen, CallFunc_Conv_DoubleToString_ReturnValue_3) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen::CallFunc_Conv_DoubleToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen, CallFunc_Left_ReturnValue_3) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen::CallFunc_Left_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Ultra_Dynamic_Weather_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_ReceiveTick) == 0x000004, "Wrong alignment on Ultra_Dynamic_Weather_C_ReceiveTick");
static_assert(sizeof(Ultra_Dynamic_Weather_C_ReceiveTick) == 0x000004, "Wrong size on Ultra_Dynamic_Weather_C_ReceiveTick");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Recenter DLWE Render Target
// 0x00F0 (0x00F0 - 0x0000)
struct Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target final
{
public:
	class UTextureRenderTarget2D*                 Render_Target;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ETextureRenderTargetFormat                    Format;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Clear_Color;                                       // 0x000C(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     EdgeFade_Material;                                 // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 New_Target;                                        // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_CreateRenderTarget2D_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas;     // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size;       // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context;    // 0x0050(0x0008)(NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_DLWE_Mode                                Temp_byte_Variable;                                // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorInt_ReturnValue;           // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target) == 0x0000F0, "Wrong size on Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, Render_Target) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::Render_Target' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, Format) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::Format' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, Clear_Color) == 0x00000C, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::Clear_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, EdgeFade_Material) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::EdgeFade_Material' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, New_Target) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::New_Target' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_CreateRenderTarget2D_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_CreateRenderTarget2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_BeginDrawCanvasToRenderTarget_Canvas) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_BeginDrawCanvasToRenderTarget_Canvas' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_BeginDrawCanvasToRenderTarget_Size) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_BeginDrawCanvasToRenderTarget_Size' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_BeginDrawCanvasToRenderTarget_Context) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_BeginDrawCanvasToRenderTarget_Context' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_Array_Add_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, Temp_byte_Variable) == 0x00005C, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, K2Node_Select_Default) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_Divide_VectorFloat_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_Multiply_VectorInt_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_Multiply_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_BreakVector2D_X) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_BreakVector2D_Y) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_Round_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_Round_ReturnValue_1) == 0x0000BC, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_MakeVector2D_ReturnValue) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Recycle Render Targets
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Weather_C_Recycle_Render_Targets final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Recycle_Render_Targets) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Recycle_Render_Targets");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Recycle_Render_Targets) == 0x000030, "Wrong size on Ultra_Dynamic_Weather_C_Recycle_Render_Targets");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recycle_Render_Targets, Temp_int_Array_Index_Variable) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Recycle_Render_Targets::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recycle_Render_Targets, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_Recycle_Render_Targets::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recycle_Render_Targets, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Recycle_Render_Targets::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recycle_Render_Targets, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Weather_C_Recycle_Render_Targets::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recycle_Render_Targets, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00000D, "Member 'Ultra_Dynamic_Weather_C_Recycle_Render_Targets::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recycle_Render_Targets, CallFunc_Array_Get_Item) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Recycle_Render_Targets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recycle_Render_Targets, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Recycle_Render_Targets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recycle_Render_Targets, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00001C, "Member 'Ultra_Dynamic_Weather_C_Recycle_Render_Targets::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recycle_Render_Targets, CallFunc_Max_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Recycle_Render_Targets::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recycle_Render_Targets, CallFunc_Array_Length_ReturnValue_1) == 0x000024, "Member 'Ultra_Dynamic_Weather_C_Recycle_Render_Targets::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recycle_Render_Targets, CallFunc_Greater_IntInt_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Recycle_Render_Targets::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Ripple DLWE Puddle
// 0x00C0 (0x00C0 - 0x0000)
struct Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Size;                                              // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Strength;                                          // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_DLWE_Mode                                Temp_byte_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue_1;      // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle) == 0x0000C0, "Wrong size on Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle, Location) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle::Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle, Size) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle::Size' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle, Strength) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle::Strength' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle, Temp_byte_Variable) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle, CallFunc_Conv_VectorToVector2D_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle::CallFunc_Conv_VectorToVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle, CallFunc_Array_Add_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle, CallFunc_BreakVector2D_X) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle, CallFunc_BreakVector2D_Y) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle, CallFunc_Abs_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle, CallFunc_Abs_ReturnValue_1) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle, CallFunc_Array_Add_ReturnValue_1) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle, K2Node_Select_Default) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle, CallFunc_Array_Add_ReturnValue_2) == 0x0000B4, "Member 'Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle, CallFunc_BooleanAND_ReturnValue) == 0x0000B9, "Member 'Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle, CallFunc_BooleanAND_ReturnValue_1) == 0x0000BA, "Member 'Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Set Current Season
// 0x0001 (0x0001 - 0x0000)
struct Ultra_Dynamic_Weather_C_Set_Current_Season final
{
public:
	EUDS_Season                                   Param_Season;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Set_Current_Season) == 0x000001, "Wrong alignment on Ultra_Dynamic_Weather_C_Set_Current_Season");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Set_Current_Season) == 0x000001, "Wrong size on Ultra_Dynamic_Weather_C_Set_Current_Season");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Current_Season, Param_Season) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Set_Current_Season::Param_Season' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Set up Post Process Wind Fog
// 0x0730 (0x0730 - 0x0000)
struct Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog final
{
public:
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable;               // 0x0000(0x0010)(NoDestructor)
	TArray<struct FWeightedBlendable>             K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeightedBlendables                    K2Node_MakeStruct_WeightedBlendables;              // 0x0028(0x0010)()
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   K2Node_MakeStruct_PostProcessSettings;             // 0x0040(0x06E0)()
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0720(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0728(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog) == 0x000010, "Wrong alignment on Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog) == 0x000730, "Wrong size on Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog, K2Node_MakeStruct_WeightedBlendable) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog::K2Node_MakeStruct_WeightedBlendable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog, K2Node_MakeArray_Array) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog, K2Node_MakeStruct_WeightedBlendables) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog::K2Node_MakeStruct_WeightedBlendables' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog, K2Node_MakeStruct_PostProcessSettings) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog::K2Node_MakeStruct_PostProcessSettings' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000720, "Member 'Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000728, "Member 'Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C. Update DLWE Targets
// 0x01E0 (0x01E0 - 0x0000)
struct Ultra_Dynamic_Weather_C__Update_DLWE_Targets final
{
public:
	bool                                          First_Run;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_DLWE_Mode                                Temp_byte_Variable;                                // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_DLWE_Mode                                Temp_byte_Variable_1;                              // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_DLWE_Mode                                Temp_byte_Variable_2;                              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_2;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_DLWE_Mode                                Temp_byte_Variable_3;                              // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EF[0x1];                                       // 0x00EF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 CallFunc_CreateRenderTarget2D_ReturnValue;         // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_CreateRenderTarget2D_ReturnValue_1;       // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ALandscape*                             CallFunc_Array_Get_Item;                           // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ALandscape*                             CallFunc_Array_Get_Item_1;                         // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ALandscape*                             CallFunc_Array_Get_Item_2;                         // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_3;                           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_Recenter_DLWE_Render_Target_New_Target;   // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue_1;                  // 0x0190(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_Recenter_DLWE_Render_Target_New_Target_1; // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ALandscape*                             CallFunc_Array_Get_Item_3;                         // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B5[0x3];                                      // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_B_ImplicitCast;                 // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_A_ImplicitCast;                 // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_R_ImplicitCast;                 // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_G_ImplicitCast;                 // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_B_ImplicitCast_1;               // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_A_ImplicitCast_1;               // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_R_ImplicitCast_1;               // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_G_ImplicitCast_1;               // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C__Update_DLWE_Targets");
static_assert(sizeof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets) == 0x0001E0, "Wrong size on Ultra_Dynamic_Weather_C__Update_DLWE_Targets");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, First_Run) == 0x000000, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::First_Run' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, Temp_int_Variable) == 0x000004, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, Temp_int_Variable_1) == 0x000008, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_Add_IntInt_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, Temp_int_Variable_2) == 0x000014, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_Add_IntInt_ReturnValue_2) == 0x000018, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, Temp_int_Variable_3) == 0x00001C, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_Add_IntInt_ReturnValue_3) == 0x000040, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, Temp_byte_Variable) == 0x000044, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, Temp_byte_Variable_1) == 0x000045, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, K2Node_Select_Default) == 0x000048, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, K2Node_Select_Default_1) == 0x000050, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_MakeVector_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, Temp_byte_Variable_2) == 0x000080, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_BreakVector_X) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_BreakVector_Y) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_BreakVector_Z) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, K2Node_Select_Default_2) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_MakeColor_ReturnValue) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_Array_Add_ReturnValue) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, Temp_int_Variable_4) == 0x0000E4, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_Not_PreBool_ReturnValue) == 0x0000EC, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, Temp_byte_Variable_3) == 0x0000ED, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000EE, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_CreateRenderTarget2D_ReturnValue) == 0x0000F0, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_CreateRenderTarget2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_CreateRenderTarget2D_ReturnValue_1) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_CreateRenderTarget2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_Array_Get_Item) == 0x000100, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_Array_Length_ReturnValue) == 0x000108, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_Less_IntInt_ReturnValue) == 0x00010C, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_Array_Get_Item_1) == 0x000110, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_Array_Length_ReturnValue_1) == 0x000118, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_Less_IntInt_ReturnValue_1) == 0x00011C, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_Array_Get_Item_2) == 0x000120, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_Array_Length_ReturnValue_2) == 0x000128, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_Less_IntInt_ReturnValue_2) == 0x00012C, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, K2Node_Select_Default_3) == 0x000130, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000138, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_MakeVector_ReturnValue_1) == 0x000140, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_Recenter_DLWE_Render_Target_New_Target) == 0x000158, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_Recenter_DLWE_Render_Target_New_Target' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000160, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_BreakVector_X_1) == 0x000178, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_BreakVector_Y_1) == 0x000180, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_BreakVector_Z_1) == 0x000188, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_MakeColor_ReturnValue_1) == 0x000190, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_MakeColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_Recenter_DLWE_Render_Target_New_Target_1) == 0x0001A0, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_Recenter_DLWE_Render_Target_New_Target_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_Array_Get_Item_3) == 0x0001A8, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_Array_Length_ReturnValue_3) == 0x0001B0, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_Less_IntInt_ReturnValue_3) == 0x0001B4, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x0001B8, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_MakeColor_B_ImplicitCast) == 0x0001BC, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_MakeColor_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_MakeColor_A_ImplicitCast) == 0x0001C0, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_MakeColor_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_MakeColor_R_ImplicitCast) == 0x0001C4, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_MakeColor_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_MakeColor_G_ImplicitCast) == 0x0001C8, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_MakeColor_G_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_MakeColor_B_ImplicitCast_1) == 0x0001CC, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_MakeColor_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_MakeColor_A_ImplicitCast_1) == 0x0001D0, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_MakeColor_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_MakeColor_R_ImplicitCast_1) == 0x0001D4, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_MakeColor_R_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_MakeColor_G_ImplicitCast_1) == 0x0001D8, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_MakeColor_G_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Start Client Weather Change
// 0x0004 (0x0004 - 0x0000)
struct Ultra_Dynamic_Weather_C_Start_Client_Weather_Change final
{
public:
	int32                                         Param_Transition_State;                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Start_Client_Weather_Change) == 0x000004, "Wrong alignment on Ultra_Dynamic_Weather_C_Start_Client_Weather_Change");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Start_Client_Weather_Change) == 0x000004, "Wrong size on Ultra_Dynamic_Weather_C_Start_Client_Weather_Change");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Client_Weather_Change, Param_Transition_State) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Start_Client_Weather_Change::Param_Transition_State' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Active Variables
// 0x02F0 (0x02F0 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Active_Variables final
{
public:
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_3;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_4;            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_5;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_6;            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_7;            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_2; // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AA[0x6];                                      // 0x01AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue_3;                       // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_8;            // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_4;                       // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_9;            // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_5;                       // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_10;           // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_6;                       // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_11;           // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_4;                // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_12;           // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_7;                       // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_8;                       // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_3; // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeUnclamped_ReturnValue;            // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_5;                // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_9;                       // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_13;           // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_4; // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_5; // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_14;           // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_15;           // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_16;           // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_10;                      // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_11;                      // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_12;                      // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_13;                      // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_1;           // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_2;           // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSpeed_InNewSpeed_ImplicitCast;         // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_1;   // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_2;   // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_3;   // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_4;   // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_5;   // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_6;   // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_7;   // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Active_Variables) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Active_Variables");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Active_Variables) == 0x0002F0, "Wrong size on Ultra_Dynamic_Weather_C_Update_Active_Variables");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_SelectFloat_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_MapRangeClamped_ReturnValue_3) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_MakeRotator_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_MapRangeClamped_ReturnValue_4) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_MapRangeClamped_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_MapRangeClamped_ReturnValue_5) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_MapRangeClamped_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_MapRangeClamped_ReturnValue_6) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_MapRangeClamped_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_Lerp_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_IsValid_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000A1, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_Lerp_ReturnValue_1) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_MapRangeClamped_ReturnValue_7) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_MapRangeClamped_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_IsValid_ReturnValue_1) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_MakeRotator_ReturnValue_1) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_K2_SetActorRotation_ReturnValue) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_2) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_Lerp_ReturnValue_2) == 0x0000F0, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_SelectFloat_ReturnValue_1) == 0x000100, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000108, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_Add_VectorVector_ReturnValue) == 0x000120, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_MakeRotator_ReturnValue_2) == 0x000138, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000150, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_BreakRotator_Roll) == 0x000168, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_BreakRotator_Pitch) == 0x00016C, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_BreakRotator_Yaw) == 0x000170, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000178, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000180, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_SelectFloat_ReturnValue_2) == 0x000188, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_Not_PreBool_ReturnValue) == 0x000190, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000198, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0001A0, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_BooleanAND_ReturnValue) == 0x0001A8, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_BooleanAND_ReturnValue_1) == 0x0001A9, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_Lerp_ReturnValue_3) == 0x0001B0, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_MapRangeClamped_ReturnValue_8) == 0x0001B8, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_MapRangeClamped_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0001C0, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_Lerp_ReturnValue_4) == 0x0001C8, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_Lerp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_MapRangeClamped_ReturnValue_9) == 0x0001D0, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_MapRangeClamped_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_SelectFloat_ReturnValue_3) == 0x0001D8, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_Lerp_ReturnValue_5) == 0x0001E0, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_Lerp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_MapRangeClamped_ReturnValue_10) == 0x0001E8, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_MapRangeClamped_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_Lerp_ReturnValue_6) == 0x0001F0, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_Lerp_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_MapRangeClamped_ReturnValue_11) == 0x0001F8, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_MapRangeClamped_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_SelectFloat_ReturnValue_4) == 0x000200, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_MapRangeClamped_ReturnValue_12) == 0x000208, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_MapRangeClamped_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_Lerp_ReturnValue_7) == 0x000210, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_Lerp_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000218, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_Lerp_ReturnValue_8) == 0x000220, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_Lerp_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_3) == 0x000228, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_MapRangeUnclamped_ReturnValue) == 0x000230, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_MapRangeUnclamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000238, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000240, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_SelectFloat_ReturnValue_5) == 0x000248, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_SelectFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_Lerp_ReturnValue_9) == 0x000250, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_Lerp_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_MapRangeClamped_ReturnValue_13) == 0x000258, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_MapRangeClamped_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000260, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_4) == 0x000268, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_5) == 0x000270, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_MapRangeClamped_ReturnValue_14) == 0x000278, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_MapRangeClamped_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_MapRangeClamped_ReturnValue_15) == 0x000280, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_MapRangeClamped_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_MapRangeClamped_ReturnValue_16) == 0x000288, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_MapRangeClamped_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_Lerp_ReturnValue_10) == 0x000290, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_Lerp_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_Lerp_ReturnValue_11) == 0x000298, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_Lerp_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_Lerp_ReturnValue_12) == 0x0002A0, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_Lerp_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_Lerp_ReturnValue_13) == 0x0002A8, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_Lerp_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x0002B0, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_MakeRotator_Yaw_ImplicitCast_1) == 0x0002B4, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_MakeRotator_Yaw_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_MakeRotator_Yaw_ImplicitCast_2) == 0x0002B8, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_MakeRotator_Yaw_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0002C0, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x0002C8, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_SetSpeed_InNewSpeed_ImplicitCast) == 0x0002CC, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_SetSpeed_InNewSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_SetFloatParameter_Param_ImplicitCast_1) == 0x0002D0, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_SetFloatParameter_Param_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_SetFloatParameter_Param_ImplicitCast_2) == 0x0002D4, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_SetFloatParameter_Param_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_SetFloatParameter_Param_ImplicitCast_3) == 0x0002D8, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_SetFloatParameter_Param_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_SetFloatParameter_Param_ImplicitCast_4) == 0x0002DC, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_SetFloatParameter_Param_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_SetFloatParameter_Param_ImplicitCast_5) == 0x0002E0, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_SetFloatParameter_Param_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_SetFloatParameter_Param_ImplicitCast_6) == 0x0002E4, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_SetFloatParameter_Param_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_SetFloatParameter_Param_ImplicitCast_7) == 0x0002E8, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_SetFloatParameter_Param_ImplicitCast_7' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Audio Component Activity
// 0x00B0 (0x00B0 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity final
{
public:
	class UAudioComponent*                        Tested_Component;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UAudioComponent*>                Affected_Components;                               // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	double                                        Current_Sound_Intensity;                           // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Start_Randomization;                               // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E[0x2];                                       // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_Array_Get_Item_2;                         // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_Array_Get_Item_3;                         // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x009F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Play_StartTime_ImplicitCast;              // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity) == 0x0000B0, "Wrong size on Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity, Tested_Component) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity::Tested_Component' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity, Affected_Components) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity::Affected_Components' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity, Current_Sound_Intensity) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity::Current_Sound_Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity, Start_Randomization) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity::Start_Randomization' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity, Temp_int_Variable) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity, Temp_int_Variable_1) == 0x00002C, "Member 'Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity, Temp_int_Variable_2) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity, CallFunc_Add_IntInt_ReturnValue_2) == 0x00003C, "Member 'Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity, Temp_int_Array_Index_Variable) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity, CallFunc_Add_IntInt_ReturnValue_3) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity, CallFunc_Not_PreBool_ReturnValue) == 0x00004C, "Member 'Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity, CallFunc_Not_PreBool_ReturnValue_1) == 0x00004D, "Member 'Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity, CallFunc_RandomFloatInRange_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity, CallFunc_Array_Get_Item) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity, CallFunc_Array_Length_ReturnValue_1) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity, CallFunc_Less_IntInt_ReturnValue_1) == 0x00007C, "Member 'Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity, CallFunc_Array_Get_Item_2) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity, CallFunc_Array_Length_ReturnValue_2) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity, CallFunc_Less_IntInt_ReturnValue_2) == 0x00008C, "Member 'Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity, CallFunc_Array_Get_Item_3) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity, CallFunc_Array_Length_ReturnValue_3) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity, CallFunc_Less_IntInt_ReturnValue_3) == 0x00009C, "Member 'Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity, CallFunc_IsActive_ReturnValue) == 0x00009D, "Member 'Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity::CallFunc_IsActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00009E, "Member 'Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity, CallFunc_Not_PreBool_ReturnValue_2) == 0x00009F, "Member 'Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity, CallFunc_BooleanOR_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity, CallFunc_Not_PreBool_ReturnValue_3) == 0x0000A1, "Member 'Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity, CallFunc_BooleanAND_ReturnValue) == 0x0000A2, "Member 'Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity, CallFunc_Not_PreBool_ReturnValue_4) == 0x0000A3, "Member 'Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity, CallFunc_BooleanAND_ReturnValue_1) == 0x0000A4, "Member 'Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity, CallFunc_Play_StartTime_ImplicitCast) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Update_Audio_Component_Activity::CallFunc_Play_StartTime_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Cloud Coverage from UDS
// 0x0008 (0x0008 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Cloud_Coverage_from_UDS final
{
public:
	double                                        Param_Cloud_Coverage;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Cloud_Coverage_from_UDS) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Cloud_Coverage_from_UDS");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Cloud_Coverage_from_UDS) == 0x000008, "Wrong size on Ultra_Dynamic_Weather_C_Update_Cloud_Coverage_from_UDS");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Cloud_Coverage_from_UDS, Param_Cloud_Coverage) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Cloud_Coverage_from_UDS::Param_Cloud_Coverage' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Current Material Effects
// 0x01B0 (0x01B0 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Current_Material_Effects final
{
public:
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_2;                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_3;                     // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_4;                     // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_2;       // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_5;                     // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_3;            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_9;      // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_3;       // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_10;     // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_6;                     // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_4;        // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_5;        // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_11;     // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_7;                     // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_12;     // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_13;     // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_14;     // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_8;                     // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Current_Material_Effects");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects) == 0x0001B0, "Wrong size on Ultra_Dynamic_Weather_C_Update_Current_Material_Effects");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_MapRangeClamped_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_FClamp_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_FClamp_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_FClamp_ReturnValue_2) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_FClamp_ReturnValue_3) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_FClamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_BooleanAND_ReturnValue) == 0x0000C1, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_SelectFloat_ReturnValue) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_FClamp_ReturnValue_4) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_FClamp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_GetWorldDeltaSeconds_ReturnValue_2) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_GetWorldDeltaSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_FClamp_ReturnValue_5) == 0x0000F0, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_FClamp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_MapRangeClamped_ReturnValue_3) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000100, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_Multiply_DoubleDouble_ReturnValue_9) == 0x000108, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_Multiply_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_GetWorldDeltaSeconds_ReturnValue_3) == 0x000110, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_GetWorldDeltaSeconds_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_Multiply_DoubleDouble_ReturnValue_10) == 0x000118, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_Multiply_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_SelectFloat_ReturnValue_1) == 0x000120, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_FClamp_ReturnValue_6) == 0x000128, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_FClamp_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000130, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_Divide_DoubleDouble_ReturnValue_4) == 0x000138, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_Divide_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000140, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_Divide_DoubleDouble_ReturnValue_5) == 0x000148, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_Divide_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000150, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_Multiply_DoubleDouble_ReturnValue_11) == 0x000158, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_Multiply_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_FClamp_ReturnValue_7) == 0x000160, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_FClamp_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000168, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_Multiply_DoubleDouble_ReturnValue_12) == 0x000170, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_Multiply_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_BooleanAND_ReturnValue_1) == 0x000178, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_Multiply_DoubleDouble_ReturnValue_13) == 0x000180, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_Multiply_DoubleDouble_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_Multiply_DoubleDouble_ReturnValue_14) == 0x000188, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_Multiply_DoubleDouble_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000190, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_SelectFloat_ReturnValue_2) == 0x000198, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x0001A0, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Material_Effects, CallFunc_FClamp_ReturnValue_8) == 0x0001A8, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Material_Effects::CallFunc_FClamp_ReturnValue_8' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Current Occlusion Profile
// 0x0060 (0x0060 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Current_Occlusion_Profile final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item_1;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Current_Occlusion_Profile) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Current_Occlusion_Profile");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Current_Occlusion_Profile) == 0x000060, "Wrong size on Ultra_Dynamic_Weather_C_Update_Current_Occlusion_Profile");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Occlusion_Profile, Temp_int_Array_Index_Variable) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Occlusion_Profile::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Occlusion_Profile, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Occlusion_Profile::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Occlusion_Profile, CallFunc_Less_IntInt_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Occlusion_Profile::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Occlusion_Profile, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Occlusion_Profile::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Occlusion_Profile, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Occlusion_Profile::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Occlusion_Profile, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Occlusion_Profile::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Occlusion_Profile, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Occlusion_Profile::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Occlusion_Profile, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Occlusion_Profile::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Occlusion_Profile, CallFunc_Array_Get_Item) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Occlusion_Profile::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Occlusion_Profile, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Occlusion_Profile::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Occlusion_Profile, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Occlusion_Profile::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Occlusion_Profile, CallFunc_FInterpTo_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Occlusion_Profile::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Occlusion_Profile, CallFunc_Less_IntInt_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Occlusion_Profile::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update DLWE Parameters
// 0x0210 (0x0210 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_DLWE_Parameters final
{
public:
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_3;            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_4;            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_5;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_6;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_7;            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue_1;         // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_4;                // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_8;            // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_9;      // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_5;                // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_DLWE_Mode                                Temp_byte_Variable;                                // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Ease_ReturnValue;                         // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_10;     // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_4;        // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_11;     // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_12;     // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_192[0x6];                                      // 0x0192(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_9;            // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_13;     // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x01B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast; // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1; // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2; // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3; // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_4; // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_5; // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_6; // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_7; // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_8; // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_9; // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_10; // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_11; // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_12; // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_13; // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_14; // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_15; // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_16; // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_DLWE_Parameters");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters) == 0x000210, "Wrong size on Ultra_Dynamic_Weather_C_Update_DLWE_Parameters");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_SelectFloat_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_SelectFloat_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_MapRangeClamped_ReturnValue_3) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_MapRangeClamped_ReturnValue_4) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_MapRangeClamped_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_MapRangeClamped_ReturnValue_5) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_MapRangeClamped_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_MapRangeClamped_ReturnValue_6) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_MapRangeClamped_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_MapRangeClamped_ReturnValue_7) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_MapRangeClamped_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_SelectFloat_ReturnValue_2) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_SelectFloat_ReturnValue_3) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_FFloor_ReturnValue) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_FFloor_ReturnValue_1) == 0x0000EC, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_Percent_FloatFloat_ReturnValue) == 0x0000F0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_Percent_FloatFloat_ReturnValue_1) == 0x000100, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_Percent_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_SelectFloat_ReturnValue_4) == 0x000108, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000110, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000118, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000120, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000128, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_MapRangeClamped_ReturnValue_8) == 0x000130, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_MapRangeClamped_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x000138, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_Multiply_DoubleDouble_ReturnValue_9) == 0x000140, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_Multiply_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_SelectFloat_ReturnValue_5) == 0x000148, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_SelectFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_Lerp_ReturnValue) == 0x000150, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, Temp_byte_Variable) == 0x000158, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_Ease_ReturnValue) == 0x000160, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_Multiply_DoubleDouble_ReturnValue_10) == 0x000168, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_Multiply_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, K2Node_Select_Default) == 0x000170, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_Divide_DoubleDouble_ReturnValue_4) == 0x000178, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_Divide_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_Multiply_DoubleDouble_ReturnValue_11) == 0x000180, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_Multiply_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_Multiply_DoubleDouble_ReturnValue_12) == 0x000188, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_Multiply_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_IsDedicatedServer_ReturnValue) == 0x000190, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_Not_PreBool_ReturnValue) == 0x000191, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000198, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_MapRangeClamped_ReturnValue_9) == 0x0001A0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_MapRangeClamped_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x0001A8, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_Multiply_DoubleDouble_ReturnValue_13) == 0x0001B0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_Multiply_DoubleDouble_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x0001B8, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast) == 0x0001C8, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1) == 0x0001CC, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2) == 0x0001D0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3) == 0x0001D4, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_4) == 0x0001D8, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_5) == 0x0001DC, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_6) == 0x0001E0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_7) == 0x0001E4, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_8) == 0x0001E8, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_9) == 0x0001EC, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_10) == 0x0001F0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_11) == 0x0001F4, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_12) == 0x0001F8, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_13) == 0x0001FC, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_14) == 0x000200, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_15) == 0x000204, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Parameters, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_16) == 0x000208, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Parameters::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_16' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update DLWE Puddle Ripples
// 0x02D8 (0x02D8 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples final
{
public:
	struct FDrawToRenderTargetContext             Render_Context;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, NoDestructor)
	class UCanvas*                                RenderCanvas;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_DLWE_Mode                                Temp_byte_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_DLWE_Mode                                Temp_byte_Variable_1;                              // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_DLWE_Mode                                Temp_byte_Variable_2;                              // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_DLWE_Mode                                Temp_byte_Variable_3;                              // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_2;                         // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_2;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item_3;                         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_DLWE_Mode                                Temp_byte_Variable_4;                              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_3;                           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item_4;                         // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas;     // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size;       // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context;    // 0x0168(0x0008)(NoDestructor)
	EUDS_DLWE_Mode                                Temp_byte_Variable_5;                              // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_4;                           // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_5;                           // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_1;     // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x01C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x01E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x01F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_2;     // 0x0208(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0218(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item_5;                         // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas_1;   // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size_1;     // 0x0248(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context_1;  // 0x0258(0x0008)(NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue_1;      // 0x0278(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue_1;       // 0x0288(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue_1;       // 0x02A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_3;     // 0x02B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue_1;  // 0x02C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples) == 0x0002D8, "Wrong size on Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, Render_Context) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::Render_Context' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, RenderCanvas) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::RenderCanvas' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, Temp_int_Array_Index_Variable) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, Temp_byte_Variable) == 0x00001C, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, Temp_byte_Variable_1) == 0x00001D, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, Temp_byte_Variable_2) == 0x00001E, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, Temp_byte_Variable_3) == 0x00001F, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, K2Node_Select_Default) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, K2Node_Select_Default_1) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_MakeVector2D_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, Temp_int_Loop_Counter_Variable_1) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Add_IntInt_ReturnValue_1) == 0x00004C, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, Temp_int_Array_Index_Variable_1) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Array_Get_Item) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_FClamp_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Round_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Array_Get_Item_2) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, K2Node_Select_Default_2) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Array_Get_Item_3) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, Temp_byte_Variable_4) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, K2Node_Select_Default_3) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_MakeVector2D_ReturnValue_1) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x0000F0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Array_Get_Item_4) == 0x000100, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Array_Length_ReturnValue) == 0x000118, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000120, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Less_IntInt_ReturnValue) == 0x000138, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000140, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_BeginDrawCanvasToRenderTarget_Canvas) == 0x000150, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_BeginDrawCanvasToRenderTarget_Canvas' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_BeginDrawCanvasToRenderTarget_Size) == 0x000158, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_BeginDrawCanvasToRenderTarget_Size' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_BeginDrawCanvasToRenderTarget_Context) == 0x000168, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_BeginDrawCanvasToRenderTarget_Context' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, Temp_byte_Variable_5) == 0x000170, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, K2Node_Select_Default_4) == 0x000178, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000180, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x000188, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000190, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_MakeVector2D_ReturnValue_2) == 0x000198, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, K2Node_Select_Default_5) == 0x0001A8, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Multiply_Vector2DFloat_ReturnValue_1) == 0x0001B0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Multiply_Vector2DFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x0001C0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_MakeVector2D_ReturnValue_3) == 0x0001C8, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Array_Length_ReturnValue_1) == 0x0001D8, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x0001E0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Greater_IntInt_ReturnValue) == 0x0001F0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x0001F8, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Multiply_Vector2DFloat_ReturnValue_2) == 0x000208, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Multiply_Vector2DFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000218, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Array_Get_Item_5) == 0x000228, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_BeginDrawCanvasToRenderTarget_Canvas_1) == 0x000240, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_BeginDrawCanvasToRenderTarget_Canvas_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_BeginDrawCanvasToRenderTarget_Size_1) == 0x000248, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_BeginDrawCanvasToRenderTarget_Size_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_BeginDrawCanvasToRenderTarget_Context_1) == 0x000258, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_BeginDrawCanvasToRenderTarget_Context_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000260, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Conv_VectorToVector2D_ReturnValue_1) == 0x000278, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Conv_VectorToVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Add_Vector2DVector2D_ReturnValue_1) == 0x000288, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Add_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Array_Length_ReturnValue_2) == 0x000298, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Divide_Vector2DFloat_ReturnValue_1) == 0x0002A0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Divide_Vector2DFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002B0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Multiply_Vector2DFloat_ReturnValue_3) == 0x0002B8, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Multiply_Vector2DFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Subtract_Vector2DVector2D_ReturnValue_1) == 0x0002C8, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Subtract_Vector2DVector2D_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update DLWE Snow Compressions
// 0x0378 (0x0378 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions final
{
public:
	struct FDrawToRenderTargetContext             Render_Context;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, NoDestructor)
	class UCanvas*                                RenderCanvas;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EUDS_DLWE_Mode                                Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_DLWE_Mode                                Temp_byte_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_DLWE_Mode                                Temp_byte_Variable_2;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_DLWE_Mode                                Temp_byte_Variable_3;                              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_DLWE_Mode                                Temp_byte_Variable_4;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_3;           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_DLWE_Mode                                Temp_byte_Variable_5;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_2;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_DLWE_Mode                                Temp_byte_Variable_6;                              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_DLWE_Mode                                Temp_byte_Variable_7;                              // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA[0x6];                                       // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_3;                           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_4;                           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_5;                           // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item_2;                         // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x01B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas;     // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size;       // 0x01D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context;    // 0x01E8(0x0008)(NoDestructor)
	double                                        K2Node_Select_Default_6;                           // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_7;                           // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_4;        // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_5;        // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_4;               // 0x0218(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue_1;       // 0x0230(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_5;               // 0x0240(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0250(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue_2;       // 0x0260(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_1;     // 0x0270(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_2;     // 0x0280(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0290(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_3;     // 0x02A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B5[0x3];                                      // 0x02B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item_3;                         // 0x02B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas_1;   // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size_1;     // 0x02D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context_1;  // 0x02E8(0x0008)(NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x02F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue_1;      // 0x0308(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue_3;       // 0x0318(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32C[0x4];                                      // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue_1;       // 0x0330(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341[0x7];                                      // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_4;     // 0x0348(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue_1;  // 0x0358(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue_2;  // 0x0368(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions) == 0x000378, "Wrong size on Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, Render_Context) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::Render_Context' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, RenderCanvas) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::RenderCanvas' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, Temp_byte_Variable) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, Temp_byte_Variable_1) == 0x000011, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, Temp_byte_Variable_2) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, Temp_byte_Variable_3) == 0x000021, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, K2Node_Select_Default) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, Temp_byte_Variable_4) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, Temp_int_Loop_Counter_Variable_1) == 0x000034, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, K2Node_Select_Default_1) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_MakeVector2D_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, Temp_int_Array_Index_Variable_1) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Array_Get_Item) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_MapRangeClamped_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Conv_IntToDouble_ReturnValue_3) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Conv_IntToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_RandomFloatInRange_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, Temp_byte_Variable_5) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, K2Node_Select_Default_2) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, K2Node_MakeStruct_LinearColor) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_MakeVector2D_ReturnValue_1) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, Temp_byte_Variable_6) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, Temp_byte_Variable_7) == 0x0000F9, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, K2Node_Select_Default_3) == 0x000100, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000108, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000110, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000118, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, K2Node_Select_Default_4) == 0x000120, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_MakeVector2D_ReturnValue_2) == 0x000128, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000138, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000140, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, K2Node_Select_Default_5) == 0x000148, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_MakeVector2D_ReturnValue_3) == 0x000150, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000160, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000170, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Array_Get_Item_2) == 0x000180, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000198, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Array_Length_ReturnValue) == 0x0001B0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x0001B8, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Less_IntInt_ReturnValue) == 0x0001C8, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_BeginDrawCanvasToRenderTarget_Canvas) == 0x0001D0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_BeginDrawCanvasToRenderTarget_Canvas' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_BeginDrawCanvasToRenderTarget_Size) == 0x0001D8, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_BeginDrawCanvasToRenderTarget_Size' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_BeginDrawCanvasToRenderTarget_Context) == 0x0001E8, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_BeginDrawCanvasToRenderTarget_Context' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, K2Node_Select_Default_6) == 0x0001F0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, K2Node_Select_Default_7) == 0x0001F8, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Divide_DoubleDouble_ReturnValue_4) == 0x000200, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Divide_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Divide_DoubleDouble_ReturnValue_5) == 0x000208, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Divide_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x000210, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_MakeVector2D_ReturnValue_4) == 0x000218, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_MakeVector2D_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000228, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Add_Vector2DVector2D_ReturnValue_1) == 0x000230, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Add_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_MakeVector2D_ReturnValue_5) == 0x000240, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_MakeVector2D_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000250, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Add_Vector2DVector2D_ReturnValue_2) == 0x000260, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Add_Vector2DVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Multiply_Vector2DFloat_ReturnValue_1) == 0x000270, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Multiply_Vector2DFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Multiply_Vector2DFloat_ReturnValue_2) == 0x000280, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Multiply_Vector2DFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000290, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Multiply_Vector2DFloat_ReturnValue_3) == 0x0002A0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Multiply_Vector2DFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Array_Length_ReturnValue_1) == 0x0002B0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Greater_IntInt_ReturnValue) == 0x0002B4, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Array_Get_Item_3) == 0x0002B8, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_BeginDrawCanvasToRenderTarget_Canvas_1) == 0x0002D0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_BeginDrawCanvasToRenderTarget_Canvas_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_BeginDrawCanvasToRenderTarget_Size_1) == 0x0002D8, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_BeginDrawCanvasToRenderTarget_Size_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_BeginDrawCanvasToRenderTarget_Context_1) == 0x0002E8, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_BeginDrawCanvasToRenderTarget_Context_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0002F0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Conv_VectorToVector2D_ReturnValue_1) == 0x000308, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Conv_VectorToVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Add_Vector2DVector2D_ReturnValue_3) == 0x000318, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Add_Vector2DVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Array_Length_ReturnValue_2) == 0x000328, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Divide_Vector2DFloat_ReturnValue_1) == 0x000330, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Divide_Vector2DFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Less_IntInt_ReturnValue_1) == 0x000340, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Multiply_Vector2DFloat_ReturnValue_4) == 0x000348, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Multiply_Vector2DFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Subtract_Vector2DVector2D_ReturnValue_1) == 0x000358, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Subtract_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Subtract_Vector2DVector2D_ReturnValue_2) == 0x000368, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Subtract_Vector2DVector2D_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Enabled Sound Components
// 0x0100 (0x0100 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components final
{
public:
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UAudioComponent*>                K2Node_MakeArray_Array;                            // 0x00B0(0x0010)(ReferenceParm, ContainsInstancedReference)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_4;        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1; // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UAudioComponent*>                K2Node_MakeArray_Array_1;                          // 0x00D8(0x0010)(ReferenceParm, ContainsInstancedReference)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_2; // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_3;            // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components) == 0x000100, "Wrong size on Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components, CallFunc_MapRangeClamped_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components, CallFunc_Lerp_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components, CallFunc_Lerp_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components, CallFunc_FClamp_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components, K2Node_MakeArray_Array) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components, CallFunc_Divide_DoubleDouble_ReturnValue_4) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components::CallFunc_Divide_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components, K2Node_MakeArray_Array_1) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_2) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components, CallFunc_MapRangeClamped_ReturnValue_3) == 0x0000F0, "Member 'Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Update_Enabled_Sound_Components::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Material Effect Parameters
// 0x00B0 (0x00B0 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters final
{
public:
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast; // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1; // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2; // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3; // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_4; // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters) == 0x0000B0, "Wrong size on Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_MakeRotator_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast) == 0x00009C, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2) == 0x0000A4, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_4) == 0x0000AC, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_4' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Post Process Wind Fog
// 0x0278 (0x0278 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog final
{
public:
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Lerp_ReturnValue_3;                       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_3;            // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_2; // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_133[0x5];                                      // 0x0133(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item_1;                         // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_1; // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item_2;                         // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item_3;                         // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item_4;                         // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x01F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_4;                       // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x0210(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_4;       // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_1;           // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_3; // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_4; // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog) == 0x000278, "Wrong size on Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_MapRangeClamped_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_Lerp_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_Lerp_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_Lerp_ReturnValue_2) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_MakeRotator_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_Lerp_ReturnValue_3) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_Normal_ReturnValue) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000100, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000110, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_MapRangeClamped_ReturnValue_3) == 0x000118, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000120, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_2) == 0x000128, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000130, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000131, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_BooleanAND_ReturnValue) == 0x000132, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_Array_Get_Item_1) == 0x000138, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_BooleanAND_ReturnValue_1) == 0x000140, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_MakeRotator_ReturnValue_1) == 0x000148, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_GreaterGreater_VectorRotator_ReturnValue_1) == 0x000160, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_GreaterGreater_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_Array_Get_Item_2) == 0x000178, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000180, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000198, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_Array_Get_Item_3) == 0x0001B0, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x0001B8, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_Divide_VectorFloat_ReturnValue) == 0x0001D0, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_Array_Get_Item_4) == 0x0001E8, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x0001F0, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_Lerp_ReturnValue_4) == 0x000200, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_Lerp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000208, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x000210, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000220, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_Multiply_VectorFloat_ReturnValue_4) == 0x000228, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_Multiply_VectorFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000240, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000258, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x00025C, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_MakeRotator_Yaw_ImplicitCast_1) == 0x000260, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_MakeRotator_Yaw_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000264, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x000268, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_SetScalarParameterValue_Value_ImplicitCast_3) == 0x00026C, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_SetScalarParameterValue_Value_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_SetScalarParameterValue_Value_ImplicitCast_4) == 0x000270, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_SetScalarParameterValue_Value_ImplicitCast_4' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Static Variables
// 0x0120 (0x0120 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Static_Variables final
{
public:
	double                                        CallFunc_BreakVector2D_X;                          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue_1;   // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UAudioComponent*>                K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsStandalone_ReturnValue;                 // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStandalone_ReturnValue_1;               // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77[0x1];                                       // 0x0077(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAudioComponent*>                K2Node_MakeArray_Array_1;                          // 0x0078(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast; // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1; // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2; // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3; // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_4; // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_ImplicitCast;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast;                  // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_5; // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_6; // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_7; // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_8; // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_9; // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_10; // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_11; // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_12; // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_13; // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_14; // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_15; // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_1;   // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_2;   // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_3;   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_4;   // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_5;   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_6;   // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_16; // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_7;   // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_8;   // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_17; // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_9;   // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_10;  // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_11;  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_12;  // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_13;  // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_14;  // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Static_Variables) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Static_Variables");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Static_Variables) == 0x000120, "Wrong size on Ultra_Dynamic_Weather_C_Update_Static_Variables");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_BreakVector2D_X) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_BreakVector2D_Y) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, K2Node_MakeStruct_LinearColor) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Lerp_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Conv_LinearColorToVector_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Conv_LinearColorToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, K2Node_MakeArray_Array) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_IsStandalone_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_IsStandalone_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_IsStandalone_ReturnValue_1) == 0x000071, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_IsStandalone_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Not_PreBool_ReturnValue) == 0x000072, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_BooleanAND_ReturnValue) == 0x000073, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Not_PreBool_ReturnValue_1) == 0x000074, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Not_PreBool_ReturnValue_2) == 0x000075, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_BooleanAND_ReturnValue_1) == 0x000076, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, K2Node_MakeArray_Array_1) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Not_PreBool_ReturnValue_3) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_BooleanAND_ReturnValue_2) == 0x000089, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Not_PreBool_ReturnValue_4) == 0x00008A, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_HasAuthority_ReturnValue) == 0x00008B, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_BooleanAND_ReturnValue_3) == 0x00008C, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast) == 0x000094, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2) == 0x00009C, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_4) == 0x0000A4, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, K2Node_MakeStruct_R_ImplicitCast) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::K2Node_MakeStruct_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, K2Node_MakeStruct_G_ImplicitCast) == 0x0000AC, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::K2Node_MakeStruct_G_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_5) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_6) == 0x0000B4, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_7) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_8) == 0x0000BC, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_9) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_10) == 0x0000C4, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_11) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_12) == 0x0000CC, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_13) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_14) == 0x0000D4, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_15) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x0000DC, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetFloatParameter_Param_ImplicitCast_1) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetFloatParameter_Param_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetFloatParameter_Param_ImplicitCast_2) == 0x0000E4, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetFloatParameter_Param_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetFloatParameter_Param_ImplicitCast_3) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetFloatParameter_Param_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetFloatParameter_Param_ImplicitCast_4) == 0x0000EC, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetFloatParameter_Param_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetFloatParameter_Param_ImplicitCast_5) == 0x0000F0, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetFloatParameter_Param_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetFloatParameter_Param_ImplicitCast_6) == 0x0000F4, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetFloatParameter_Param_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_16) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetFloatParameter_Param_ImplicitCast_7) == 0x0000FC, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetFloatParameter_Param_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetFloatParameter_Param_ImplicitCast_8) == 0x000100, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetFloatParameter_Param_ImplicitCast_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_17) == 0x000104, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetFloatParameter_Param_ImplicitCast_9) == 0x000108, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetFloatParameter_Param_ImplicitCast_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetFloatParameter_Param_ImplicitCast_10) == 0x00010C, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetFloatParameter_Param_ImplicitCast_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetFloatParameter_Param_ImplicitCast_11) == 0x000110, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetFloatParameter_Param_ImplicitCast_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetFloatParameter_Param_ImplicitCast_12) == 0x000114, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetFloatParameter_Param_ImplicitCast_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetFloatParameter_Param_ImplicitCast_13) == 0x000118, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetFloatParameter_Param_ImplicitCast_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetFloatParameter_Param_ImplicitCast_14) == 0x00011C, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetFloatParameter_Param_ImplicitCast_14' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Target Occlusion Profile
// 0x0478 (0x0478 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile final
{
public:
	int32                                         Directional_Hits;                                  // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Distance_Occluded;                                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Total_Occlusion;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Total_Hits;                                        // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Overhead_Blocked;                                  // 0x001C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<double>                                New_Occlusion_Profile;                             // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Variable;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0040(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Variable_1;                               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x0090(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Variable_2;                               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item;                           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        K2Node_MakeArray_Array;                            // 0x0130(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_Array_Get_Item_1;                         // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x01E8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x3];                                      // 0x02D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        K2Node_MakeArray_Array_1;                          // 0x02D8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item_2;                         // 0x02F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0310(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0328(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0340(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0358(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0370(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_1;                 // 0x0388(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_1;            // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_471[0x3];                                      // 0x0471(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast;    // 0x0474(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile) == 0x000478, "Wrong size on Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, Directional_Hits) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::Directional_Hits' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, Distance_Occluded) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::Distance_Occluded' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, Total_Occlusion) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::Total_Occlusion' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, Total_Hits) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::Total_Hits' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, Overhead_Blocked) == 0x00001C, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::Overhead_Blocked' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, New_Occlusion_Profile) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::New_Occlusion_Profile' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, Temp_int_Variable) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000034, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, Temp_object_Variable) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, Temp_int_Variable_1) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, CallFunc_MakeVector_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, CallFunc_Add_IntInt_ReturnValue_1) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, Temp_object_Variable_1) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, Temp_int_Variable_2) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000B4, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, Temp_int_Variable_3) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, Temp_int_Variable_4) == 0x0000BC, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, Temp_int_Loop_Counter_Variable) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000C4, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, Temp_int_Array_Index_Variable) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, Temp_int_Variable_5) == 0x0000CC, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, CallFunc_Array_Get_Item) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000DC, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, CallFunc_Add_IntInt_ReturnValue_5) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, CallFunc_MapRangeClamped_ReturnValue) == 0x0000F0, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, CallFunc_MapRangeClamped_ReturnValue_1) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, CallFunc_Lerp_ReturnValue) == 0x000100, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000108, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, CallFunc_Array_Add_ReturnValue) == 0x000110, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000118, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000120, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, CallFunc_Add_IntInt_ReturnValue_6) == 0x000128, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, K2Node_MakeArray_Array) == 0x000130, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, CallFunc_Array_Get_Item_1) == 0x000140, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, CallFunc_Add_IntInt_ReturnValue_7) == 0x000158, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000160, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, CallFunc_Add_VectorVector_ReturnValue) == 0x000178, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, Temp_int_Variable_6) == 0x000190, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, CallFunc_Normal_ReturnValue) == 0x000198, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, CallFunc_Array_Add_ReturnValue_1) == 0x0001B0, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0001B8, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0001D0, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, CallFunc_LineTraceSingle_OutHit) == 0x0001E8, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, CallFunc_LineTraceSingle_ReturnValue) == 0x0002D0, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, CallFunc_Array_Add_ReturnValue_2) == 0x0002D4, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, K2Node_MakeArray_Array_1) == 0x0002D8, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, CallFunc_Array_Length_ReturnValue) == 0x0002E8, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, CallFunc_Array_Get_Item_2) == 0x0002F0, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, CallFunc_Less_IntInt_ReturnValue) == 0x000308, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, CallFunc_RotateAngleAxis_ReturnValue) == 0x000310, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000328, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, CallFunc_Normal_ReturnValue_1) == 0x000340, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000358, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000370, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, CallFunc_LineTraceSingle_OutHit_1) == 0x000388, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::CallFunc_LineTraceSingle_OutHit_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, CallFunc_LineTraceSingle_ReturnValue_1) == 0x000470, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::CallFunc_LineTraceSingle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast) == 0x000474, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Occlusion_Profile::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Wind Direction
// 0x0068 (0x0068 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Wind_Direction final
{
public:
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PerlinNoise1D_ReturnValue;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PerlinNoise1D_Value_ImplicitCast;         // 0x0058(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Wind_Direction) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Wind_Direction");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Wind_Direction) == 0x000068, "Wrong size on Ultra_Dynamic_Weather_C_Update_Wind_Direction");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Wind_Direction, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Wind_Direction::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Wind_Direction, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Wind_Direction::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Wind_Direction, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_Wind_Direction::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Wind_Direction, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Update_Wind_Direction::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Wind_Direction, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Update_Wind_Direction::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Wind_Direction, CallFunc_PerlinNoise1D_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Update_Wind_Direction::CallFunc_PerlinNoise1D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Wind_Direction, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_Wind_Direction::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Wind_Direction, CallFunc_BooleanAND_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Update_Wind_Direction::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Wind_Direction, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Update_Wind_Direction::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Wind_Direction, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Update_Wind_Direction::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Wind_Direction, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Update_Wind_Direction::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Wind_Direction, CallFunc_PerlinNoise1D_Value_ImplicitCast) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Update_Wind_Direction::CallFunc_PerlinNoise1D_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Wind_Direction, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Update_Wind_Direction::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

}

