#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_LootEntry

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FItemInfo_structs.hpp"


namespace SDK::Params
{

// Function WBP_LootEntry.WBP_LootEntry_C.ExecuteUbergraph_WBP_LootEntry
// 0x0140 (0x0140 - 0x0000)
struct WBP_LootEntry_C_ExecuteUbergraph_WBP_LootEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0040(0x0078)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x00B8(0x0078)(ConstParm)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LootEntry_C_ExecuteUbergraph_WBP_LootEntry) == 0x000008, "Wrong alignment on WBP_LootEntry_C_ExecuteUbergraph_WBP_LootEntry");
static_assert(sizeof(WBP_LootEntry_C_ExecuteUbergraph_WBP_LootEntry) == 0x000140, "Wrong size on WBP_LootEntry_C_ExecuteUbergraph_WBP_LootEntry");
static_assert(offsetof(WBP_LootEntry_C_ExecuteUbergraph_WBP_LootEntry, EntryPoint) == 0x000000, "Member 'WBP_LootEntry_C_ExecuteUbergraph_WBP_LootEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_LootEntry_C_ExecuteUbergraph_WBP_LootEntry, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_LootEntry_C_ExecuteUbergraph_WBP_LootEntry::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_LootEntry_C_ExecuteUbergraph_WBP_LootEntry, K2Node_Event_MyGeometry) == 0x000008, "Member 'WBP_LootEntry_C_ExecuteUbergraph_WBP_LootEntry::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_LootEntry_C_ExecuteUbergraph_WBP_LootEntry, K2Node_Event_MouseEvent_1) == 0x000040, "Member 'WBP_LootEntry_C_ExecuteUbergraph_WBP_LootEntry::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(WBP_LootEntry_C_ExecuteUbergraph_WBP_LootEntry, K2Node_Event_MouseEvent) == 0x0000B8, "Member 'WBP_LootEntry_C_ExecuteUbergraph_WBP_LootEntry::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_LootEntry_C_ExecuteUbergraph_WBP_LootEntry, CallFunc_PlayAnimationForward_ReturnValue) == 0x000130, "Member 'WBP_LootEntry_C_ExecuteUbergraph_WBP_LootEntry::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LootEntry_C_ExecuteUbergraph_WBP_LootEntry, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000138, "Member 'WBP_LootEntry_C_ExecuteUbergraph_WBP_LootEntry::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");

// Function WBP_LootEntry.WBP_LootEntry_C.GetUniqueID
// 0x0004 (0x0004 - 0x0000)
struct WBP_LootEntry_C_GetUniqueID final
{
public:
	int32                                         UniqueId;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LootEntry_C_GetUniqueID) == 0x000004, "Wrong alignment on WBP_LootEntry_C_GetUniqueID");
static_assert(sizeof(WBP_LootEntry_C_GetUniqueID) == 0x000004, "Wrong size on WBP_LootEntry_C_GetUniqueID");
static_assert(offsetof(WBP_LootEntry_C_GetUniqueID, UniqueId) == 0x000000, "Member 'WBP_LootEntry_C_GetUniqueID::UniqueId' has a wrong offset!");

// Function WBP_LootEntry.WBP_LootEntry_C.OnDragDetected
// 0x0320 (0x0320 - 0x0000)
struct WBP_LootEntry_C_OnDragDetected final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          PointerEvent;                                      // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UDragDropOperation*                     Operation;                                         // 0x00B0(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UJigSDragOperation_C*                   CallFunc_CreateDragDropOperation_ReturnValue;      // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDragWidget_C*                          CallFunc_Create_ReturnValue;                       // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow;           // 0x00C8(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x02F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_PlayEventAttached_ReturnValue;            // 0x02F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Equip_Item_Equipped;                      // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_Equip_Item_SlotItemRef;                   // 0x0308(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UnequipItem_Unequipped;                   // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_UnequipItem_SlotRef;                      // 0x0318(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LootEntry_C_OnDragDetected) == 0x000008, "Wrong alignment on WBP_LootEntry_C_OnDragDetected");
static_assert(sizeof(WBP_LootEntry_C_OnDragDetected) == 0x000320, "Wrong size on WBP_LootEntry_C_OnDragDetected");
static_assert(offsetof(WBP_LootEntry_C_OnDragDetected, MyGeometry) == 0x000000, "Member 'WBP_LootEntry_C_OnDragDetected::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_LootEntry_C_OnDragDetected, PointerEvent) == 0x000038, "Member 'WBP_LootEntry_C_OnDragDetected::PointerEvent' has a wrong offset!");
static_assert(offsetof(WBP_LootEntry_C_OnDragDetected, Operation) == 0x0000B0, "Member 'WBP_LootEntry_C_OnDragDetected::Operation' has a wrong offset!");
static_assert(offsetof(WBP_LootEntry_C_OnDragDetected, CallFunc_CreateDragDropOperation_ReturnValue) == 0x0000B8, "Member 'WBP_LootEntry_C_OnDragDetected::CallFunc_CreateDragDropOperation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LootEntry_C_OnDragDetected, CallFunc_Create_ReturnValue) == 0x0000C0, "Member 'WBP_LootEntry_C_OnDragDetected::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LootEntry_C_OnDragDetected, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000C8, "Member 'WBP_LootEntry_C_OnDragDetected::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WBP_LootEntry_C_OnDragDetected, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0002E8, "Member 'WBP_LootEntry_C_OnDragDetected::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LootEntry_C_OnDragDetected, CallFunc_GetPlayerCharacter_ReturnValue) == 0x0002F0, "Member 'WBP_LootEntry_C_OnDragDetected::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LootEntry_C_OnDragDetected, CallFunc_PlayEventAttached_ReturnValue) == 0x0002F8, "Member 'WBP_LootEntry_C_OnDragDetected::CallFunc_PlayEventAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LootEntry_C_OnDragDetected, CallFunc_Equip_Item_Equipped) == 0x000300, "Member 'WBP_LootEntry_C_OnDragDetected::CallFunc_Equip_Item_Equipped' has a wrong offset!");
static_assert(offsetof(WBP_LootEntry_C_OnDragDetected, CallFunc_Equip_Item_SlotItemRef) == 0x000308, "Member 'WBP_LootEntry_C_OnDragDetected::CallFunc_Equip_Item_SlotItemRef' has a wrong offset!");
static_assert(offsetof(WBP_LootEntry_C_OnDragDetected, CallFunc_UnequipItem_Unequipped) == 0x000310, "Member 'WBP_LootEntry_C_OnDragDetected::CallFunc_UnequipItem_Unequipped' has a wrong offset!");
static_assert(offsetof(WBP_LootEntry_C_OnDragDetected, CallFunc_UnequipItem_SlotRef) == 0x000318, "Member 'WBP_LootEntry_C_OnDragDetected::CallFunc_UnequipItem_SlotRef' has a wrong offset!");

// Function WBP_LootEntry.WBP_LootEntry_C.OnEntryDragged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_LootEntry_C_OnEntryDragged__DelegateSignature final
{
public:
	class UWBP_LootEntry_C*                       EntryRef;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LootEntry_C_OnEntryDragged__DelegateSignature) == 0x000008, "Wrong alignment on WBP_LootEntry_C_OnEntryDragged__DelegateSignature");
static_assert(sizeof(WBP_LootEntry_C_OnEntryDragged__DelegateSignature) == 0x000008, "Wrong size on WBP_LootEntry_C_OnEntryDragged__DelegateSignature");
static_assert(offsetof(WBP_LootEntry_C_OnEntryDragged__DelegateSignature, EntryRef) == 0x000000, "Member 'WBP_LootEntry_C_OnEntryDragged__DelegateSignature::EntryRef' has a wrong offset!");

// Function WBP_LootEntry.WBP_LootEntry_C.OnMouseButtonDown
// 0x0240 (0x0240 - 0x0000)
struct WBP_LootEntry_C_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FVector2D                              CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue; // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_DetectDragIfPressed_ReturnValue;          // 0x0178(0x00B8)()
	struct FVector2D                              CallFunc_AbsoluteToLocal_ReturnValue;              // 0x0230(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LootEntry_C_OnMouseButtonDown) == 0x000008, "Wrong alignment on WBP_LootEntry_C_OnMouseButtonDown");
static_assert(sizeof(WBP_LootEntry_C_OnMouseButtonDown) == 0x000240, "Wrong size on WBP_LootEntry_C_OnMouseButtonDown");
static_assert(offsetof(WBP_LootEntry_C_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'WBP_LootEntry_C_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_LootEntry_C_OnMouseButtonDown, MouseEvent) == 0x000038, "Member 'WBP_LootEntry_C_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_LootEntry_C_OnMouseButtonDown, ReturnValue) == 0x0000B0, "Member 'WBP_LootEntry_C_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LootEntry_C_OnMouseButtonDown, CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue) == 0x000168, "Member 'WBP_LootEntry_C_OnMouseButtonDown::CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LootEntry_C_OnMouseButtonDown, CallFunc_DetectDragIfPressed_ReturnValue) == 0x000178, "Member 'WBP_LootEntry_C_OnMouseButtonDown::CallFunc_DetectDragIfPressed_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LootEntry_C_OnMouseButtonDown, CallFunc_AbsoluteToLocal_ReturnValue) == 0x000230, "Member 'WBP_LootEntry_C_OnMouseButtonDown::CallFunc_AbsoluteToLocal_ReturnValue' has a wrong offset!");

// Function WBP_LootEntry.WBP_LootEntry_C.OnMouseEnter
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_LootEntry_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_LootEntry_C_OnMouseEnter) == 0x000008, "Wrong alignment on WBP_LootEntry_C_OnMouseEnter");
static_assert(sizeof(WBP_LootEntry_C_OnMouseEnter) == 0x0000B0, "Wrong size on WBP_LootEntry_C_OnMouseEnter");
static_assert(offsetof(WBP_LootEntry_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'WBP_LootEntry_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_LootEntry_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'WBP_LootEntry_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function WBP_LootEntry.WBP_LootEntry_C.OnMouseLeave
// 0x0078 (0x0078 - 0x0000)
struct WBP_LootEntry_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_LootEntry_C_OnMouseLeave) == 0x000008, "Wrong alignment on WBP_LootEntry_C_OnMouseLeave");
static_assert(sizeof(WBP_LootEntry_C_OnMouseLeave) == 0x000078, "Wrong size on WBP_LootEntry_C_OnMouseLeave");
static_assert(offsetof(WBP_LootEntry_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'WBP_LootEntry_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function WBP_LootEntry.WBP_LootEntry_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_LootEntry_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LootEntry_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_LootEntry_C_PreConstruct");
static_assert(sizeof(WBP_LootEntry_C_PreConstruct) == 0x000001, "Wrong size on WBP_LootEntry_C_PreConstruct");
static_assert(offsetof(WBP_LootEntry_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_LootEntry_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_LootEntry.WBP_LootEntry_C.SetUniqueID
// 0x0004 (0x0004 - 0x0000)
struct WBP_LootEntry_C_SetUniqueID final
{
public:
	int32                                         UniqueId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LootEntry_C_SetUniqueID) == 0x000004, "Wrong alignment on WBP_LootEntry_C_SetUniqueID");
static_assert(sizeof(WBP_LootEntry_C_SetUniqueID) == 0x000004, "Wrong size on WBP_LootEntry_C_SetUniqueID");
static_assert(offsetof(WBP_LootEntry_C_SetUniqueID, UniqueId) == 0x000000, "Member 'WBP_LootEntry_C_SetUniqueID::UniqueId' has a wrong offset!");

}

