#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_ZombieFinal

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "ABP_ZombieFinal_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "Survival_structs.hpp"
#include "Survival_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_ZombieFinal.ABP_ZombieFinal_C
// 0x16A0 (0x19F0 - 0x0350)
#pragma pack(push, 0x1)
class alignas(0x10) UABP_ZombieFinal_C : public UZombieAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_ZombieFinal::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0358(0x001C)(HasGetValueTypeHash)
	uint8                                         Pad_374[0x4];                                      // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0378(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0380(0x0008)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_3;                              // 0x0388(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x03D0(0x0108)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x04D8(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0520(0x00E0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x0600(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x0708(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0x0730(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x0778(0x0028)()
	struct FAnimNode_LookAt                       AnimGraphNode_LookAt;                              // 0x07A0(0x0250)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x09F0(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0A10(0x0020)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0A30(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x0B38(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x0B60(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x0BA8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0BD0(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0BF8(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x0C40(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x0C68(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x0C90(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x0CB8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x0CE0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x0D08(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x0D30(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0D58(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0D80(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0DA8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0DD0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0DF8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0E20(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0E48(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0E70(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0E98(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_16;                   // 0x0EC0(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x0F08(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_15;                   // 0x0F50(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x0F98(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x0FB8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x1000(0x0020)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x1020(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x1068(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x10B0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x10F8(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x1118(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x1188(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x11A8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x11F0(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x1210(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x1280(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x12A0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x12E8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x1308(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x1350(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x1398(0x0048)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt;                      // 0x13E0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x1428(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x1470(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x14B8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x1500(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x1548(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x1590(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x15D8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x1620(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x1668(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x16B0(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x16D0(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1740(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x1760(0x00C8)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x1828(0x0020)()
	TSoftObjectPtr<class UFMODEvent>              K2Node_PropertyAccess_2;                           // 0x1848(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UFMODEvent>              K2Node_PropertyAccess_1;                           // 0x1878(0x0030)(HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess;                             // 0x18A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAuthoritive;                                     // 0x18A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18AA[0x6];                                     // 0x18AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AZombie_C*                              Zombie;                                            // 0x18B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Mesh;                                              // 0x18B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UCapsuleComponent*                      CapsuleComp;                                       // 0x18C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAIMovementComponent_C*                 AIMovementComp;                                    // 0x18C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          RecentlyInitialized;                               // 0x18D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18D1[0x3];                                     // 0x18D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DeltaTime;                                         // 0x18D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          VelocityFromAnimation;                             // 0x18D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18D9[0x7];                                     // 0x18D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        VelocityValue;                                     // 0x18E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Stunned;                                           // 0x18E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Back_to_Idle;                                      // 0x18E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Agressive;                                         // 0x18EA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18EB[0x5];                                     // 0x18EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        AnimationAngle;                                    // 0x18F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStopping;                                        // 0x18F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Accelerating;                                      // 0x18F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TransitToWalkStart;                                // 0x18FA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TransitToSprintStart;                              // 0x18FB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CalculateLean;                                     // 0x18FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18FD[0x3];                                     // 0x18FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CharacterRotationLastFrame;                        // 0x1900(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               CharacterRotation;                                 // 0x1918(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	double                                        Target;                                            // 0x1930(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LeanInterpValue;                                   // 0x1938(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Lean;                                              // 0x1940(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LookAtTarget;                                      // 0x1948(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1949[0x7];                                     // 0x1949(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LookAtLocation;                                    // 0x1950(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      Target_Actor;                                      // 0x1968(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        MeshInterpSpeed;                                   // 0x1970(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRightFoot;                                       // 0x1978(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1979[0x3];                                     // 0x1979(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SurfaceTypeParameter;                              // 0x197C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MeshZOffset;                                       // 0x1980(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TransitToSprint;                                   // 0x1988(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TransitToWalk;                                     // 0x1989(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_198A[0x6];                                     // 0x198A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                SmoothRootCorrection;                              // 0x1990(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Damaged;                                           // 0x19A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieAnimType                               ZombieAnimType;                                    // 0x19A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Survival::EMovementType                       MovementType;                                      // 0x19AA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsWitch;                                           // 0x19AB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StartTransitionBackToIdle;                         // 0x19AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19AD[0x3];                                     // 0x19AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             StandupDownEvent;                                  // 0x19B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             StandUpKnee2Event;                                 // 0x19B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             StandUpKnee1Event;                                 // 0x19C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         IdleType;                                          // 0x19C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Sleeping_Zombie;                                // 0x19CC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TransitToWalkStart_0;                              // 0x19CD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19CE[0x2];                                     // 0x19CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ActualVelocity;                                    // 0x19D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             ZombieCarOpen;                                     // 0x19D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          AntiGlideTransitToSprint;                          // 0x19E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IdleToBattleIdle;                                  // 0x19E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void AnimNotify_OnEnteredIdleState();
	void AnimNotify_RunState_Entered();
	void AnimNotify_RunState_Left();
	void AnimNotify_StopWalk_Enter();
	void AnimNotify_zombie_01_attack();
	void AnimNotify_zombie_detect();
	void AnimNotify_zombie_openCar();
	void AnimNotify_zombie_sprint_step();
	void AnimNotify_zombie_standup_down();
	void AnimNotify_zombie_standup_knee1();
	void AnimNotify_zombie_standup_knee2();
	void AnimNotify_zombie_step();
	void BlueprintBeginPlay();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void CalculateLeaning();
	void CalculateLookAtLocation();
	void Check_If_Sound_Load_Needed(TSoftObjectPtr<class UFMODEvent> FMOD_Event);
	void DetermineFoot();
	void ExecuteUbergraph_ABP_ZombieFinal(int32 EntryPoint);
	bool GetAntiGlideTransitToSprint();
	bool GetTransitToSprint();
	bool GetTransitToWalk();
	void MeshSmoothCorrection();
	void OnABP_Set();
	void OnSetTargetActor(class AActor* TargetActor);
	void SetupSurfaceTypeParameter(EPhysicalSurface SurfaceType);
	void StartCalculateLeaning();
	void StopCalculateLeaning();
	void TraceOnStep(EPhysicalSurface* SurfaceType);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_ZombieFinal_C">();
	}
	static class UABP_ZombieFinal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_ZombieFinal_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(UABP_ZombieFinal_C) == 0x000010, "Wrong alignment on UABP_ZombieFinal_C");
static_assert(sizeof(UABP_ZombieFinal_C) == 0x0019F0, "Wrong size on UABP_ZombieFinal_C");
static_assert(offsetof(UABP_ZombieFinal_C, UberGraphFrame) == 0x000350, "Member 'UABP_ZombieFinal_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, __AnimBlueprintMutables) == 0x000358, "Member 'UABP_ZombieFinal_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimBlueprintExtension_PropertyAccess) == 0x000378, "Member 'UABP_ZombieFinal_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimBlueprintExtension_Base) == 0x000380, "Member 'UABP_ZombieFinal_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_Slot_3) == 0x000388, "Member 'UABP_ZombieFinal_C::AnimGraphNode_Slot_3' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_SaveCachedPose_2) == 0x0003D0, "Member 'UABP_ZombieFinal_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_Slot_2) == 0x0004D8, "Member 'UABP_ZombieFinal_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_LayeredBoneBlend) == 0x000520, "Member 'UABP_ZombieFinal_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_SaveCachedPose_1) == 0x000600, "Member 'UABP_ZombieFinal_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_UseCachedPose_4) == 0x000708, "Member 'UABP_ZombieFinal_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_BlendListByBool_3) == 0x000730, "Member 'UABP_ZombieFinal_C::AnimGraphNode_BlendListByBool_3' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_UseCachedPose_3) == 0x000778, "Member 'UABP_ZombieFinal_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_LookAt) == 0x0007A0, "Member 'UABP_ZombieFinal_C::AnimGraphNode_LookAt' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_LocalToComponentSpace) == 0x0009F0, "Member 'UABP_ZombieFinal_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_ComponentToLocalSpace) == 0x000A10, "Member 'UABP_ZombieFinal_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_SaveCachedPose) == 0x000A30, "Member 'UABP_ZombieFinal_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_UseCachedPose_2) == 0x000B38, "Member 'UABP_ZombieFinal_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_Slot_1) == 0x000B60, "Member 'UABP_ZombieFinal_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_UseCachedPose_1) == 0x000BA8, "Member 'UABP_ZombieFinal_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_UseCachedPose) == 0x000BD0, "Member 'UABP_ZombieFinal_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_Slot) == 0x000BF8, "Member 'UABP_ZombieFinal_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_TransitionResult_15) == 0x000C40, "Member 'UABP_ZombieFinal_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_TransitionResult_14) == 0x000C68, "Member 'UABP_ZombieFinal_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_TransitionResult_13) == 0x000C90, "Member 'UABP_ZombieFinal_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_TransitionResult_12) == 0x000CB8, "Member 'UABP_ZombieFinal_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_TransitionResult_11) == 0x000CE0, "Member 'UABP_ZombieFinal_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_TransitionResult_10) == 0x000D08, "Member 'UABP_ZombieFinal_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_TransitionResult_9) == 0x000D30, "Member 'UABP_ZombieFinal_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_TransitionResult_8) == 0x000D58, "Member 'UABP_ZombieFinal_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_TransitionResult_7) == 0x000D80, "Member 'UABP_ZombieFinal_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_TransitionResult_6) == 0x000DA8, "Member 'UABP_ZombieFinal_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_TransitionResult_5) == 0x000DD0, "Member 'UABP_ZombieFinal_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_TransitionResult_4) == 0x000DF8, "Member 'UABP_ZombieFinal_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_TransitionResult_3) == 0x000E20, "Member 'UABP_ZombieFinal_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_TransitionResult_2) == 0x000E48, "Member 'UABP_ZombieFinal_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_TransitionResult_1) == 0x000E70, "Member 'UABP_ZombieFinal_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_TransitionResult) == 0x000E98, "Member 'UABP_ZombieFinal_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_SequencePlayer_16) == 0x000EC0, "Member 'UABP_ZombieFinal_C::AnimGraphNode_SequencePlayer_16' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_BlendListByBool_2) == 0x000F08, "Member 'UABP_ZombieFinal_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_SequencePlayer_15) == 0x000F50, "Member 'UABP_ZombieFinal_C::AnimGraphNode_SequencePlayer_15' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_StateResult_8) == 0x000F98, "Member 'UABP_ZombieFinal_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_SequencePlayer_14) == 0x000FB8, "Member 'UABP_ZombieFinal_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_StateResult_7) == 0x001000, "Member 'UABP_ZombieFinal_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_BlendListByBool_1) == 0x001020, "Member 'UABP_ZombieFinal_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_SequencePlayer_13) == 0x001068, "Member 'UABP_ZombieFinal_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_SequencePlayer_12) == 0x0010B0, "Member 'UABP_ZombieFinal_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_StateResult_6) == 0x0010F8, "Member 'UABP_ZombieFinal_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_BlendSpacePlayer_2) == 0x001118, "Member 'UABP_ZombieFinal_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_StateResult_5) == 0x001188, "Member 'UABP_ZombieFinal_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_SequencePlayer_11) == 0x0011A8, "Member 'UABP_ZombieFinal_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_StateResult_4) == 0x0011F0, "Member 'UABP_ZombieFinal_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_BlendSpacePlayer_1) == 0x001210, "Member 'UABP_ZombieFinal_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_StateResult_3) == 0x001280, "Member 'UABP_ZombieFinal_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_SequencePlayer_10) == 0x0012A0, "Member 'UABP_ZombieFinal_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_StateResult_2) == 0x0012E8, "Member 'UABP_ZombieFinal_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_SequencePlayer_9) == 0x001308, "Member 'UABP_ZombieFinal_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_SequencePlayer_8) == 0x001350, "Member 'UABP_ZombieFinal_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_SequencePlayer_7) == 0x001398, "Member 'UABP_ZombieFinal_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_BlendListByInt) == 0x0013E0, "Member 'UABP_ZombieFinal_C::AnimGraphNode_BlendListByInt' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_SequencePlayer_6) == 0x001428, "Member 'UABP_ZombieFinal_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_BlendListByBool) == 0x001470, "Member 'UABP_ZombieFinal_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_BlendListByEnum) == 0x0014B8, "Member 'UABP_ZombieFinal_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_SequencePlayer_5) == 0x001500, "Member 'UABP_ZombieFinal_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_SequencePlayer_4) == 0x001548, "Member 'UABP_ZombieFinal_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_SequencePlayer_3) == 0x001590, "Member 'UABP_ZombieFinal_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_SequencePlayer_2) == 0x0015D8, "Member 'UABP_ZombieFinal_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_SequencePlayer_1) == 0x001620, "Member 'UABP_ZombieFinal_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_SequencePlayer) == 0x001668, "Member 'UABP_ZombieFinal_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_StateResult_1) == 0x0016B0, "Member 'UABP_ZombieFinal_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_BlendSpacePlayer) == 0x0016D0, "Member 'UABP_ZombieFinal_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_StateResult) == 0x001740, "Member 'UABP_ZombieFinal_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_StateMachine) == 0x001760, "Member 'UABP_ZombieFinal_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimGraphNode_Root) == 0x001828, "Member 'UABP_ZombieFinal_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, K2Node_PropertyAccess_2) == 0x001848, "Member 'UABP_ZombieFinal_C::K2Node_PropertyAccess_2' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, K2Node_PropertyAccess_1) == 0x001878, "Member 'UABP_ZombieFinal_C::K2Node_PropertyAccess_1' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, K2Node_PropertyAccess) == 0x0018A8, "Member 'UABP_ZombieFinal_C::K2Node_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, IsAuthoritive) == 0x0018A9, "Member 'UABP_ZombieFinal_C::IsAuthoritive' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, Zombie) == 0x0018B0, "Member 'UABP_ZombieFinal_C::Zombie' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, Mesh) == 0x0018B8, "Member 'UABP_ZombieFinal_C::Mesh' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, CapsuleComp) == 0x0018C0, "Member 'UABP_ZombieFinal_C::CapsuleComp' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AIMovementComp) == 0x0018C8, "Member 'UABP_ZombieFinal_C::AIMovementComp' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, RecentlyInitialized) == 0x0018D0, "Member 'UABP_ZombieFinal_C::RecentlyInitialized' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, DeltaTime) == 0x0018D4, "Member 'UABP_ZombieFinal_C::DeltaTime' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, VelocityFromAnimation) == 0x0018D8, "Member 'UABP_ZombieFinal_C::VelocityFromAnimation' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, VelocityValue) == 0x0018E0, "Member 'UABP_ZombieFinal_C::VelocityValue' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, Stunned) == 0x0018E8, "Member 'UABP_ZombieFinal_C::Stunned' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, Back_to_Idle) == 0x0018E9, "Member 'UABP_ZombieFinal_C::Back_to_Idle' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, Agressive) == 0x0018EA, "Member 'UABP_ZombieFinal_C::Agressive' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AnimationAngle) == 0x0018F0, "Member 'UABP_ZombieFinal_C::AnimationAngle' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, IsStopping) == 0x0018F8, "Member 'UABP_ZombieFinal_C::IsStopping' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, Accelerating) == 0x0018F9, "Member 'UABP_ZombieFinal_C::Accelerating' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, TransitToWalkStart) == 0x0018FA, "Member 'UABP_ZombieFinal_C::TransitToWalkStart' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, TransitToSprintStart) == 0x0018FB, "Member 'UABP_ZombieFinal_C::TransitToSprintStart' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, CalculateLean) == 0x0018FC, "Member 'UABP_ZombieFinal_C::CalculateLean' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, CharacterRotationLastFrame) == 0x001900, "Member 'UABP_ZombieFinal_C::CharacterRotationLastFrame' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, CharacterRotation) == 0x001918, "Member 'UABP_ZombieFinal_C::CharacterRotation' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, Target) == 0x001930, "Member 'UABP_ZombieFinal_C::Target' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, LeanInterpValue) == 0x001938, "Member 'UABP_ZombieFinal_C::LeanInterpValue' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, Lean) == 0x001940, "Member 'UABP_ZombieFinal_C::Lean' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, LookAtTarget) == 0x001948, "Member 'UABP_ZombieFinal_C::LookAtTarget' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, LookAtLocation) == 0x001950, "Member 'UABP_ZombieFinal_C::LookAtLocation' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, Target_Actor) == 0x001968, "Member 'UABP_ZombieFinal_C::Target_Actor' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, MeshInterpSpeed) == 0x001970, "Member 'UABP_ZombieFinal_C::MeshInterpSpeed' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, IsRightFoot) == 0x001978, "Member 'UABP_ZombieFinal_C::IsRightFoot' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, SurfaceTypeParameter) == 0x00197C, "Member 'UABP_ZombieFinal_C::SurfaceTypeParameter' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, MeshZOffset) == 0x001980, "Member 'UABP_ZombieFinal_C::MeshZOffset' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, TransitToSprint) == 0x001988, "Member 'UABP_ZombieFinal_C::TransitToSprint' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, TransitToWalk) == 0x001989, "Member 'UABP_ZombieFinal_C::TransitToWalk' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, SmoothRootCorrection) == 0x001990, "Member 'UABP_ZombieFinal_C::SmoothRootCorrection' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, Damaged) == 0x0019A8, "Member 'UABP_ZombieFinal_C::Damaged' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, ZombieAnimType) == 0x0019A9, "Member 'UABP_ZombieFinal_C::ZombieAnimType' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, MovementType) == 0x0019AA, "Member 'UABP_ZombieFinal_C::MovementType' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, IsWitch) == 0x0019AB, "Member 'UABP_ZombieFinal_C::IsWitch' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, StartTransitionBackToIdle) == 0x0019AC, "Member 'UABP_ZombieFinal_C::StartTransitionBackToIdle' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, StandupDownEvent) == 0x0019B0, "Member 'UABP_ZombieFinal_C::StandupDownEvent' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, StandUpKnee2Event) == 0x0019B8, "Member 'UABP_ZombieFinal_C::StandUpKnee2Event' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, StandUpKnee1Event) == 0x0019C0, "Member 'UABP_ZombieFinal_C::StandUpKnee1Event' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, IdleType) == 0x0019C8, "Member 'UABP_ZombieFinal_C::IdleType' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, Is_Sleeping_Zombie) == 0x0019CC, "Member 'UABP_ZombieFinal_C::Is_Sleeping_Zombie' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, TransitToWalkStart_0) == 0x0019CD, "Member 'UABP_ZombieFinal_C::TransitToWalkStart_0' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, ActualVelocity) == 0x0019D0, "Member 'UABP_ZombieFinal_C::ActualVelocity' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, ZombieCarOpen) == 0x0019D8, "Member 'UABP_ZombieFinal_C::ZombieCarOpen' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, AntiGlideTransitToSprint) == 0x0019E0, "Member 'UABP_ZombieFinal_C::AntiGlideTransitToSprint' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinal_C, IdleToBattleIdle) == 0x0019E1, "Member 'UABP_ZombieFinal_C::IdleToBattleIdle' has a wrong offset!");

}

