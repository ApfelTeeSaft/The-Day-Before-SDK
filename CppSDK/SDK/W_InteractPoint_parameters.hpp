#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_InteractPoint

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Slate_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function W_InteractPoint.W_InteractPoint_C.CustomPlayAnimation
// 0x0080 (0x0080 - 0x0000)
struct W_InteractPoint_C_CustomPlayAnimation final
{
public:
	class UWidgetAnimation*                       ShowAnimation;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HideAnimation;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          NewState;                                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Duration;                                          // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue_1;         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEndTime_ReturnValue_2;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue_3;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_1;       // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_Duration_ImplicitCast;       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_Duration_ImplicitCast_1;     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_Duration_ImplicitCast_2;     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_Duration_ImplicitCast_3;     // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_InteractPoint_C_CustomPlayAnimation) == 0x000008, "Wrong alignment on W_InteractPoint_C_CustomPlayAnimation");
static_assert(sizeof(W_InteractPoint_C_CustomPlayAnimation) == 0x000080, "Wrong size on W_InteractPoint_C_CustomPlayAnimation");
static_assert(offsetof(W_InteractPoint_C_CustomPlayAnimation, ShowAnimation) == 0x000000, "Member 'W_InteractPoint_C_CustomPlayAnimation::ShowAnimation' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_CustomPlayAnimation, HideAnimation) == 0x000008, "Member 'W_InteractPoint_C_CustomPlayAnimation::HideAnimation' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_CustomPlayAnimation, NewState) == 0x000010, "Member 'W_InteractPoint_C_CustomPlayAnimation::NewState' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_CustomPlayAnimation, Duration) == 0x000018, "Member 'W_InteractPoint_C_CustomPlayAnimation::Duration' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_CustomPlayAnimation, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000020, "Member 'W_InteractPoint_C_CustomPlayAnimation::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_CustomPlayAnimation, CallFunc_GetEndTime_ReturnValue) == 0x000024, "Member 'W_InteractPoint_C_CustomPlayAnimation::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_CustomPlayAnimation, CallFunc_GetEndTime_ReturnValue_1) == 0x000028, "Member 'W_InteractPoint_C_CustomPlayAnimation::CallFunc_GetEndTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_CustomPlayAnimation, CallFunc_PlayAnimationForward_ReturnValue) == 0x000030, "Member 'W_InteractPoint_C_CustomPlayAnimation::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_CustomPlayAnimation, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000038, "Member 'W_InteractPoint_C_CustomPlayAnimation::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_CustomPlayAnimation, CallFunc_IsAnimationPlaying_ReturnValue_1) == 0x000040, "Member 'W_InteractPoint_C_CustomPlayAnimation::CallFunc_IsAnimationPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_CustomPlayAnimation, CallFunc_GetEndTime_ReturnValue_2) == 0x000044, "Member 'W_InteractPoint_C_CustomPlayAnimation::CallFunc_GetEndTime_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_CustomPlayAnimation, CallFunc_GetEndTime_ReturnValue_3) == 0x000048, "Member 'W_InteractPoint_C_CustomPlayAnimation::CallFunc_GetEndTime_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_CustomPlayAnimation, CallFunc_PlayAnimationReverse_ReturnValue_1) == 0x000050, "Member 'W_InteractPoint_C_CustomPlayAnimation::CallFunc_PlayAnimationReverse_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_CustomPlayAnimation, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000058, "Member 'W_InteractPoint_C_CustomPlayAnimation::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_CustomPlayAnimation, K2Node_FunctionResult_Duration_ImplicitCast) == 0x000060, "Member 'W_InteractPoint_C_CustomPlayAnimation::K2Node_FunctionResult_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_CustomPlayAnimation, K2Node_FunctionResult_Duration_ImplicitCast_1) == 0x000068, "Member 'W_InteractPoint_C_CustomPlayAnimation::K2Node_FunctionResult_Duration_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_CustomPlayAnimation, K2Node_FunctionResult_Duration_ImplicitCast_2) == 0x000070, "Member 'W_InteractPoint_C_CustomPlayAnimation::K2Node_FunctionResult_Duration_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_CustomPlayAnimation, K2Node_FunctionResult_Duration_ImplicitCast_3) == 0x000078, "Member 'W_InteractPoint_C_CustomPlayAnimation::K2Node_FunctionResult_Duration_ImplicitCast_3' has a wrong offset!");

// Function W_InteractPoint.W_InteractPoint_C.Disabled
// 0x0001 (0x0001 - 0x0000)
struct W_InteractPoint_C_Disabled final
{
public:
	bool                                          CallFunc_K2_TimerExistsHandle_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_InteractPoint_C_Disabled) == 0x000001, "Wrong alignment on W_InteractPoint_C_Disabled");
static_assert(sizeof(W_InteractPoint_C_Disabled) == 0x000001, "Wrong size on W_InteractPoint_C_Disabled");
static_assert(offsetof(W_InteractPoint_C_Disabled, CallFunc_K2_TimerExistsHandle_ReturnValue) == 0x000000, "Member 'W_InteractPoint_C_Disabled::CallFunc_K2_TimerExistsHandle_ReturnValue' has a wrong offset!");

// Function W_InteractPoint.W_InteractPoint_C.ExecuteUbergraph_W_InteractPoint
// 0x0020 (0x0020 - 0x0000)
struct W_InteractPoint_C_ExecuteUbergraph_W_InteractPoint final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_InteractPoint_C_ExecuteUbergraph_W_InteractPoint) == 0x000008, "Wrong alignment on W_InteractPoint_C_ExecuteUbergraph_W_InteractPoint");
static_assert(sizeof(W_InteractPoint_C_ExecuteUbergraph_W_InteractPoint) == 0x000020, "Wrong size on W_InteractPoint_C_ExecuteUbergraph_W_InteractPoint");
static_assert(offsetof(W_InteractPoint_C_ExecuteUbergraph_W_InteractPoint, EntryPoint) == 0x000000, "Member 'W_InteractPoint_C_ExecuteUbergraph_W_InteractPoint::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_ExecuteUbergraph_W_InteractPoint, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000008, "Member 'W_InteractPoint_C_ExecuteUbergraph_W_InteractPoint::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_ExecuteUbergraph_W_InteractPoint, CallFunc_GetPosition_ReturnValue) == 0x000010, "Member 'W_InteractPoint_C_ExecuteUbergraph_W_InteractPoint::CallFunc_GetPosition_ReturnValue' has a wrong offset!");

// Function W_InteractPoint.W_InteractPoint_C.PointUpdaterTimerHandler
// 0x01D0 (0x01D0 - 0x0000)
struct W_InteractPoint_C_PointUpdaterTimerHandler final
{
public:
	struct FSlateBrush                            SlateBrush;                                        // 0x0000(0x00D0)(Edit, BlueprintVisible)
	double                                        K2Node_MathExpression_ReturnValue;                 // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x00F0(0x00D0)()
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x3];                                      // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDeprecateSlateVector2D                K2Node_MakeStruct_ImageSize_ImplicitCast;          // 0x01C4(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_InteractPoint_C_PointUpdaterTimerHandler) == 0x000010, "Wrong alignment on W_InteractPoint_C_PointUpdaterTimerHandler");
static_assert(sizeof(W_InteractPoint_C_PointUpdaterTimerHandler) == 0x0001D0, "Wrong size on W_InteractPoint_C_PointUpdaterTimerHandler");
static_assert(offsetof(W_InteractPoint_C_PointUpdaterTimerHandler, SlateBrush) == 0x000000, "Member 'W_InteractPoint_C_PointUpdaterTimerHandler::SlateBrush' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_PointUpdaterTimerHandler, K2Node_MathExpression_ReturnValue) == 0x0000D0, "Member 'W_InteractPoint_C_PointUpdaterTimerHandler::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_PointUpdaterTimerHandler, CallFunc_FClamp_ReturnValue) == 0x0000D8, "Member 'W_InteractPoint_C_PointUpdaterTimerHandler::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_PointUpdaterTimerHandler, CallFunc_MakeVector2D_ReturnValue) == 0x0000E0, "Member 'W_InteractPoint_C_PointUpdaterTimerHandler::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_PointUpdaterTimerHandler, K2Node_MakeStruct_SlateBrush) == 0x0000F0, "Member 'W_InteractPoint_C_PointUpdaterTimerHandler::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_PointUpdaterTimerHandler, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0001C0, "Member 'W_InteractPoint_C_PointUpdaterTimerHandler::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_PointUpdaterTimerHandler, K2Node_MakeStruct_ImageSize_ImplicitCast) == 0x0001C4, "Member 'W_InteractPoint_C_PointUpdaterTimerHandler::K2Node_MakeStruct_ImageSize_ImplicitCast' has a wrong offset!");

// Function W_InteractPoint.W_InteractPoint_C.SetPointValue
// 0x0008 (0x0008 - 0x0000)
struct W_InteractPoint_C_SetPointValue final
{
public:
	double                                        NewValue;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_InteractPoint_C_SetPointValue) == 0x000008, "Wrong alignment on W_InteractPoint_C_SetPointValue");
static_assert(sizeof(W_InteractPoint_C_SetPointValue) == 0x000008, "Wrong size on W_InteractPoint_C_SetPointValue");
static_assert(offsetof(W_InteractPoint_C_SetPointValue, NewValue) == 0x000000, "Member 'W_InteractPoint_C_SetPointValue::NewValue' has a wrong offset!");

// Function W_InteractPoint.W_InteractPoint_C.SetReferences
// 0x0010 (0x0010 - 0x0000)
struct W_InteractPoint_C_SetReferences final
{
public:
	class APawn*                                  Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Param_Target;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_InteractPoint_C_SetReferences) == 0x000008, "Wrong alignment on W_InteractPoint_C_SetReferences");
static_assert(sizeof(W_InteractPoint_C_SetReferences) == 0x000010, "Wrong size on W_InteractPoint_C_SetReferences");
static_assert(offsetof(W_InteractPoint_C_SetReferences, Param_Player) == 0x000000, "Member 'W_InteractPoint_C_SetReferences::Param_Player' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_SetReferences, Param_Target) == 0x000008, "Member 'W_InteractPoint_C_SetReferences::Param_Target' has a wrong offset!");

// Function W_InteractPoint.W_InteractPoint_C.SetVisibilityWidget
// 0x0038 (0x0038 - 0x0000)
struct W_InteractPoint_C_SetVisibilityWidget final
{
public:
	bool                                          NewVisibility;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_ToggleWidgetAnimation_Duration;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ToggleWidgetAnimation_Duration_1;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_TimerExistsHandle_ReturnValue;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_1;                // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_InteractPoint_C_SetVisibilityWidget) == 0x000008, "Wrong alignment on W_InteractPoint_C_SetVisibilityWidget");
static_assert(sizeof(W_InteractPoint_C_SetVisibilityWidget) == 0x000038, "Wrong size on W_InteractPoint_C_SetVisibilityWidget");
static_assert(offsetof(W_InteractPoint_C_SetVisibilityWidget, NewVisibility) == 0x000000, "Member 'W_InteractPoint_C_SetVisibilityWidget::NewVisibility' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_SetVisibilityWidget, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'W_InteractPoint_C_SetVisibilityWidget::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_SetVisibilityWidget, CallFunc_ToggleWidgetAnimation_Duration) == 0x000008, "Member 'W_InteractPoint_C_SetVisibilityWidget::CallFunc_ToggleWidgetAnimation_Duration' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_SetVisibilityWidget, CallFunc_ToggleWidgetAnimation_Duration_1) == 0x000010, "Member 'W_InteractPoint_C_SetVisibilityWidget::CallFunc_ToggleWidgetAnimation_Duration_1' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_SetVisibilityWidget, CallFunc_K2_SetTimer_ReturnValue) == 0x000018, "Member 'W_InteractPoint_C_SetVisibilityWidget::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_SetVisibilityWidget, CallFunc_K2_TimerExistsHandle_ReturnValue) == 0x000020, "Member 'W_InteractPoint_C_SetVisibilityWidget::CallFunc_K2_TimerExistsHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_SetVisibilityWidget, CallFunc_K2_SetTimer_ReturnValue_1) == 0x000028, "Member 'W_InteractPoint_C_SetVisibilityWidget::CallFunc_K2_SetTimer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_SetVisibilityWidget, CallFunc_K2_SetTimer_Time_ImplicitCast) == 0x000030, "Member 'W_InteractPoint_C_SetVisibilityWidget::CallFunc_K2_SetTimer_Time_ImplicitCast' has a wrong offset!");

// Function W_InteractPoint.W_InteractPoint_C.TogglePointAnimation
// 0x0020 (0x0020 - 0x0000)
struct W_InteractPoint_C_TogglePointAnimation final
{
public:
	bool                                          NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_InteractPoint_C_TogglePointAnimation) == 0x000008, "Wrong alignment on W_InteractPoint_C_TogglePointAnimation");
static_assert(sizeof(W_InteractPoint_C_TogglePointAnimation) == 0x000020, "Wrong size on W_InteractPoint_C_TogglePointAnimation");
static_assert(offsetof(W_InteractPoint_C_TogglePointAnimation, NewState) == 0x000000, "Member 'W_InteractPoint_C_TogglePointAnimation::NewState' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_TogglePointAnimation, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000008, "Member 'W_InteractPoint_C_TogglePointAnimation::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_TogglePointAnimation, CallFunc_PlayAnimationForward_ReturnValue) == 0x000010, "Member 'W_InteractPoint_C_TogglePointAnimation::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_TogglePointAnimation, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000018, "Member 'W_InteractPoint_C_TogglePointAnimation::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function W_InteractPoint.W_InteractPoint_C.ToggleWidgetAnimation
// 0x0020 (0x0020 - 0x0000)
struct W_InteractPoint_C_ToggleWidgetAnimation final
{
public:
	bool                                          NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Duration;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CustomPlayAnimation_Duration;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_InteractPoint_C_ToggleWidgetAnimation) == 0x000008, "Wrong alignment on W_InteractPoint_C_ToggleWidgetAnimation");
static_assert(sizeof(W_InteractPoint_C_ToggleWidgetAnimation) == 0x000020, "Wrong size on W_InteractPoint_C_ToggleWidgetAnimation");
static_assert(offsetof(W_InteractPoint_C_ToggleWidgetAnimation, NewState) == 0x000000, "Member 'W_InteractPoint_C_ToggleWidgetAnimation::NewState' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_ToggleWidgetAnimation, Duration) == 0x000008, "Member 'W_InteractPoint_C_ToggleWidgetAnimation::Duration' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_ToggleWidgetAnimation, CallFunc_CustomPlayAnimation_Duration) == 0x000010, "Member 'W_InteractPoint_C_ToggleWidgetAnimation::CallFunc_CustomPlayAnimation_Duration' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_ToggleWidgetAnimation, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000018, "Member 'W_InteractPoint_C_ToggleWidgetAnimation::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function W_InteractPoint.W_InteractPoint_C.UpdateWidgetPositions
// 0x0098 (0x0098 - 0x0000)
struct W_InteractPoint_C_UpdateWidgetPositions final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldToScreen_ScreenPosition;      // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldToScreen_ReturnValue;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue;      // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0078(0x0020)(NoDestructor)
};
static_assert(alignof(W_InteractPoint_C_UpdateWidgetPositions) == 0x000008, "Wrong alignment on W_InteractPoint_C_UpdateWidgetPositions");
static_assert(sizeof(W_InteractPoint_C_UpdateWidgetPositions) == 0x000098, "Wrong size on W_InteractPoint_C_UpdateWidgetPositions");
static_assert(offsetof(W_InteractPoint_C_UpdateWidgetPositions, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'W_InteractPoint_C_UpdateWidgetPositions::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_UpdateWidgetPositions, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000008, "Member 'W_InteractPoint_C_UpdateWidgetPositions::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_UpdateWidgetPositions, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000020, "Member 'W_InteractPoint_C_UpdateWidgetPositions::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_UpdateWidgetPositions, CallFunc_GetViewportSize_ReturnValue) == 0x000028, "Member 'W_InteractPoint_C_UpdateWidgetPositions::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_UpdateWidgetPositions, CallFunc_GetPlayerController_ReturnValue) == 0x000038, "Member 'W_InteractPoint_C_UpdateWidgetPositions::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_UpdateWidgetPositions, CallFunc_ProjectWorldToScreen_ScreenPosition) == 0x000040, "Member 'W_InteractPoint_C_UpdateWidgetPositions::CallFunc_ProjectWorldToScreen_ScreenPosition' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_UpdateWidgetPositions, CallFunc_ProjectWorldToScreen_ReturnValue) == 0x000050, "Member 'W_InteractPoint_C_UpdateWidgetPositions::CallFunc_ProjectWorldToScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_UpdateWidgetPositions, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000058, "Member 'W_InteractPoint_C_UpdateWidgetPositions::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_UpdateWidgetPositions, CallFunc_Divide_Vector2DVector2D_ReturnValue) == 0x000068, "Member 'W_InteractPoint_C_UpdateWidgetPositions::CallFunc_Divide_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InteractPoint_C_UpdateWidgetPositions, K2Node_MakeStruct_Anchors) == 0x000078, "Member 'W_InteractPoint_C_UpdateWidgetPositions::K2Node_MakeStruct_Anchors' has a wrong offset!");

}

