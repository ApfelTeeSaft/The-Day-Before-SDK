#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Quest

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_Quest.BP_Quest_C.ConstructRootObjectiveCollection
// 0x0008 (0x0008 - 0x0000)
struct BP_Quest_C_ConstructRootObjectiveCollection final
{
public:
	class UBP_ObjCollection_C*                    Param_RootObjectiveCollection;                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Quest_C_ConstructRootObjectiveCollection) == 0x000008, "Wrong alignment on BP_Quest_C_ConstructRootObjectiveCollection");
static_assert(sizeof(BP_Quest_C_ConstructRootObjectiveCollection) == 0x000008, "Wrong size on BP_Quest_C_ConstructRootObjectiveCollection");
static_assert(offsetof(BP_Quest_C_ConstructRootObjectiveCollection, Param_RootObjectiveCollection) == 0x000000, "Member 'BP_Quest_C_ConstructRootObjectiveCollection::Param_RootObjectiveCollection' has a wrong offset!");

// Function BP_Quest.BP_Quest_C.ExecuteUbergraph_BP_Quest
// 0x0028 (0x0028 - 0x0000)
struct BP_Quest_C_ExecuteUbergraph_BP_Quest final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ObjCollection_C*                    CallFunc_ConstructRootObjectiveCollection_RootObjectiveCollection; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvPC_C*                              K2Node_DynamicCast_AsSurv_PC;                      // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Quest_C_ExecuteUbergraph_BP_Quest) == 0x000008, "Wrong alignment on BP_Quest_C_ExecuteUbergraph_BP_Quest");
static_assert(sizeof(BP_Quest_C_ExecuteUbergraph_BP_Quest) == 0x000028, "Wrong size on BP_Quest_C_ExecuteUbergraph_BP_Quest");
static_assert(offsetof(BP_Quest_C_ExecuteUbergraph_BP_Quest, EntryPoint) == 0x000000, "Member 'BP_Quest_C_ExecuteUbergraph_BP_Quest::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Quest_C_ExecuteUbergraph_BP_Quest, Temp_bool_IsClosed_Variable) == 0x000004, "Member 'BP_Quest_C_ExecuteUbergraph_BP_Quest::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_Quest_C_ExecuteUbergraph_BP_Quest, CallFunc_ConstructRootObjectiveCollection_RootObjectiveCollection) == 0x000008, "Member 'BP_Quest_C_ExecuteUbergraph_BP_Quest::CallFunc_ConstructRootObjectiveCollection_RootObjectiveCollection' has a wrong offset!");
static_assert(offsetof(BP_Quest_C_ExecuteUbergraph_BP_Quest, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BP_Quest_C_ExecuteUbergraph_BP_Quest::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Quest_C_ExecuteUbergraph_BP_Quest, K2Node_DynamicCast_AsSurv_PC) == 0x000018, "Member 'BP_Quest_C_ExecuteUbergraph_BP_Quest::K2Node_DynamicCast_AsSurv_PC' has a wrong offset!");
static_assert(offsetof(BP_Quest_C_ExecuteUbergraph_BP_Quest, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_Quest_C_ExecuteUbergraph_BP_Quest::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Quest_C_ExecuteUbergraph_BP_Quest, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_Quest_C_ExecuteUbergraph_BP_Quest::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Quest_C_ExecuteUbergraph_BP_Quest, Temp_bool_Has_Been_Initd_Variable) == 0x000022, "Member 'BP_Quest_C_ExecuteUbergraph_BP_Quest::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");

// Function BP_Quest.BP_Quest_C.OnActivated__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_Quest_C_OnActivated__DelegateSignature final
{
public:
	class UBP_Objective_C*                        Param_RootObjectiveCollection;                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Quest_C_OnActivated__DelegateSignature) == 0x000008, "Wrong alignment on BP_Quest_C_OnActivated__DelegateSignature");
static_assert(sizeof(BP_Quest_C_OnActivated__DelegateSignature) == 0x000008, "Wrong size on BP_Quest_C_OnActivated__DelegateSignature");
static_assert(offsetof(BP_Quest_C_OnActivated__DelegateSignature, Param_RootObjectiveCollection) == 0x000000, "Member 'BP_Quest_C_OnActivated__DelegateSignature::Param_RootObjectiveCollection' has a wrong offset!");

// Function BP_Quest.BP_Quest_C.PopulateObjectives
// 0x0008 (0x0008 - 0x0000)
struct BP_Quest_C_PopulateObjectives final
{
public:
	class UBP_ObjCollection_C*                    RootObjCollection;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Quest_C_PopulateObjectives) == 0x000008, "Wrong alignment on BP_Quest_C_PopulateObjectives");
static_assert(sizeof(BP_Quest_C_PopulateObjectives) == 0x000008, "Wrong size on BP_Quest_C_PopulateObjectives");
static_assert(offsetof(BP_Quest_C_PopulateObjectives, RootObjCollection) == 0x000000, "Member 'BP_Quest_C_PopulateObjectives::RootObjCollection' has a wrong offset!");

// Function BP_Quest.BP_Quest_C.GetRootObjectiveCollection
// 0x0008 (0x0008 - 0x0000)
struct BP_Quest_C_GetRootObjectiveCollection final
{
public:
	class UBP_ObjCollection_C*                    RootObjCollection;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Quest_C_GetRootObjectiveCollection) == 0x000008, "Wrong alignment on BP_Quest_C_GetRootObjectiveCollection");
static_assert(sizeof(BP_Quest_C_GetRootObjectiveCollection) == 0x000008, "Wrong size on BP_Quest_C_GetRootObjectiveCollection");
static_assert(offsetof(BP_Quest_C_GetRootObjectiveCollection, RootObjCollection) == 0x000000, "Member 'BP_Quest_C_GetRootObjectiveCollection::RootObjCollection' has a wrong offset!");

}

