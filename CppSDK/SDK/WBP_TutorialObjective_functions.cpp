#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_TutorialObjective

#include "Basic.hpp"

#include "WBP_TutorialObjective_classes.hpp"
#include "WBP_TutorialObjective_parameters.hpp"


namespace SDK
{

// Function WBP_TutorialObjective.WBP_TutorialObjective_C.CheckOpenedInventoryToShowObjective
// (BlueprintCallable, BlueprintEvent)

void UWBP_TutorialObjective_C::CheckOpenedInventoryToShowObjective()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TutorialObjective_C", "CheckOpenedInventoryToShowObjective");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_TutorialObjective.WBP_TutorialObjective_C.CheckWidgetStates
// (BlueprintCallable, BlueprintEvent)

void UWBP_TutorialObjective_C::CheckWidgetStates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TutorialObjective_C", "CheckWidgetStates");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_TutorialObjective.WBP_TutorialObjective_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_TutorialObjective_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TutorialObjective_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_TutorialObjective.WBP_TutorialObjective_C.ExecuteUbergraph_WBP_TutorialObjective
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_TutorialObjective_C::ExecuteUbergraph_WBP_TutorialObjective(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TutorialObjective_C", "ExecuteUbergraph_WBP_TutorialObjective");

	Params::WBP_TutorialObjective_C_ExecuteUbergraph_WBP_TutorialObjective Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_TutorialObjective.WBP_TutorialObjective_C.InstantHide
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_TutorialObjective_C::InstantHide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TutorialObjective_C", "InstantHide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_TutorialObjective.WBP_TutorialObjective_C.IsEqualBothText
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsEqual                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_TutorialObjective_C::IsEqualBothText(bool* IsEqual)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TutorialObjective_C", "IsEqualBothText");

	Params::WBP_TutorialObjective_C_IsEqualBothText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsEqual != nullptr)
		*IsEqual = Parms.IsEqual;
}


// Function WBP_TutorialObjective.WBP_TutorialObjective_C.OnQuestContextCreated_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UQuestComponent*                  QuestComponent                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UQuestContext*                    Param_Context                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_TutorialObjective_C::OnQuestContextCreated_Event(class UQuestComponent* QuestComponent, class UQuestContext* Param_Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TutorialObjective_C", "OnQuestContextCreated_Event");

	Params::WBP_TutorialObjective_C_OnQuestContextCreated_Event Parms{};

	Parms.QuestComponent = QuestComponent;
	Parms.Param_Context = Param_Context;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_TutorialObjective.WBP_TutorialObjective_C.OnTryShowNewTask__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsShowed                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_TutorialObjective_C::OnTryShowNewTask__DelegateSignature(bool bIsShowed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TutorialObjective_C", "OnTryShowNewTask__DelegateSignature");

	Params::WBP_TutorialObjective_C_OnTryShowNewTask__DelegateSignature Parms{};

	Parms.bIsShowed = bIsShowed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_TutorialObjective.WBP_TutorialObjective_C.ParseButton
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             OriginalText                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             ParsedText                                             (Parm, OutParm)

void UWBP_TutorialObjective_C::ParseButton(const class FText& OriginalText, class FText* ParsedText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TutorialObjective_C", "ParseButton");

	Params::WBP_TutorialObjective_C_ParseButton Parms{};

	Parms.OriginalText = std::move(OriginalText);

	UObject::ProcessEvent(Func, &Parms);

	if (ParsedText != nullptr)
		*ParsedText = std::move(Parms.ParsedText);
}


// Function WBP_TutorialObjective.WBP_TutorialObjective_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_TutorialObjective_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TutorialObjective_C", "PreConstruct");

	Params::WBP_TutorialObjective_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_TutorialObjective.WBP_TutorialObjective_C.SetEqualBothText
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_TutorialObjective_C::SetEqualBothText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TutorialObjective_C", "SetEqualBothText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_TutorialObjective.WBP_TutorialObjective_C.SetQuestText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    WasTextEmpty                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_TutorialObjective_C::SetQuestText(bool* WasTextEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TutorialObjective_C", "SetQuestText");

	Params::WBP_TutorialObjective_C_SetQuestText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (WasTextEmpty != nullptr)
		*WasTextEmpty = Parms.WasTextEmpty;
}


// Function WBP_TutorialObjective.WBP_TutorialObjective_C.ShowByCachedInfo
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_TutorialObjective_C::ShowByCachedInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TutorialObjective_C", "ShowByCachedInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_TutorialObjective.WBP_TutorialObjective_C.ShowGeneralObjective
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Show                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Param_QuestName                                        (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             Param_MessageText                                      (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_TutorialObjective_C::ShowGeneralObjective(bool Show, const class FText& Param_QuestName, const class FText& Param_MessageText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TutorialObjective_C", "ShowGeneralObjective");

	Params::WBP_TutorialObjective_C_ShowGeneralObjective Parms{};

	Parms.Show = Show;
	Parms.Param_QuestName = std::move(Param_QuestName);
	Parms.Param_MessageText = std::move(Param_MessageText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_TutorialObjective.WBP_TutorialObjective_C.ShowTutorialObjective
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Show                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Param_QuestName                                        (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             Param_MessageText                                      (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_TutorialObjective_C::ShowTutorialObjective(bool Show, const class FText& Param_QuestName, const class FText& Param_MessageText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TutorialObjective_C", "ShowTutorialObjective");

	Params::WBP_TutorialObjective_C_ShowTutorialObjective Parms{};

	Parms.Show = Show;
	Parms.Param_QuestName = std::move(Param_QuestName);
	Parms.Param_MessageText = std::move(Param_MessageText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_TutorialObjective.WBP_TutorialObjective_C.Unbind
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_TutorialObjective_C::Unbind()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_TutorialObjective_C", "Unbind");

	UObject::ProcessEvent(Func, nullptr);
}

}

