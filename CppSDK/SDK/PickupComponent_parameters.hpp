#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PickupComponent

#include "Basic.hpp"

#include "ContainerPickupsInfo_structs.hpp"
#include "FItemInfo_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function PickupComponent.PickupComponent_C.AddContainer
// 0x0070 (0x0070 - 0x0000)
struct PickupComponent_C_AddContainer final
{
public:
	struct FContainerPickupsInfo                  Container;                                         // 0x0000(0x0068)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Added;                                             // 0x0068(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PickupComponent_C_AddContainer) == 0x000008, "Wrong alignment on PickupComponent_C_AddContainer");
static_assert(sizeof(PickupComponent_C_AddContainer) == 0x000070, "Wrong size on PickupComponent_C_AddContainer");
static_assert(offsetof(PickupComponent_C_AddContainer, Container) == 0x000000, "Member 'PickupComponent_C_AddContainer::Container' has a wrong offset!");
static_assert(offsetof(PickupComponent_C_AddContainer, Added) == 0x000068, "Member 'PickupComponent_C_AddContainer::Added' has a wrong offset!");
static_assert(offsetof(PickupComponent_C_AddContainer, CallFunc_Array_Add_ReturnValue) == 0x00006C, "Member 'PickupComponent_C_AddContainer::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function PickupComponent.PickupComponent_C.AddContainerItem
// 0x0070 (0x0070 - 0x0000)
struct PickupComponent_C_AddContainerItem final
{
public:
	struct FContainerPickupsInfo                  ContainerItem;                                     // 0x0000(0x0068)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Added;                                             // 0x0068(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PickupComponent_C_AddContainerItem) == 0x000008, "Wrong alignment on PickupComponent_C_AddContainerItem");
static_assert(sizeof(PickupComponent_C_AddContainerItem) == 0x000070, "Wrong size on PickupComponent_C_AddContainerItem");
static_assert(offsetof(PickupComponent_C_AddContainerItem, ContainerItem) == 0x000000, "Member 'PickupComponent_C_AddContainerItem::ContainerItem' has a wrong offset!");
static_assert(offsetof(PickupComponent_C_AddContainerItem, Added) == 0x000068, "Member 'PickupComponent_C_AddContainerItem::Added' has a wrong offset!");
static_assert(offsetof(PickupComponent_C_AddContainerItem, CallFunc_Array_Add_ReturnValue) == 0x00006C, "Member 'PickupComponent_C_AddContainerItem::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function PickupComponent.PickupComponent_C.ClearContainerContent
// 0x0001 (0x0001 - 0x0000)
struct PickupComponent_C_ClearContainerContent final
{
public:
	bool                                          Cleared;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PickupComponent_C_ClearContainerContent) == 0x000001, "Wrong alignment on PickupComponent_C_ClearContainerContent");
static_assert(sizeof(PickupComponent_C_ClearContainerContent) == 0x000001, "Wrong size on PickupComponent_C_ClearContainerContent");
static_assert(offsetof(PickupComponent_C_ClearContainerContent, Cleared) == 0x000000, "Member 'PickupComponent_C_ClearContainerContent::Cleared' has a wrong offset!");

// Function PickupComponent.PickupComponent_C.ExecuteUbergraph_PickupComponent
// 0x0460 (0x0460 - 0x0000)
struct PickupComponent_C_ExecuteUbergraph_PickupComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow;           // 0x0018(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23A[0x6];                                      // 0x023A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             K2Node_SetFieldsInStruct_StructOut;                // 0x0240(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(PickupComponent_C_ExecuteUbergraph_PickupComponent) == 0x000008, "Wrong alignment on PickupComponent_C_ExecuteUbergraph_PickupComponent");
static_assert(sizeof(PickupComponent_C_ExecuteUbergraph_PickupComponent) == 0x000460, "Wrong size on PickupComponent_C_ExecuteUbergraph_PickupComponent");
static_assert(offsetof(PickupComponent_C_ExecuteUbergraph_PickupComponent, EntryPoint) == 0x000000, "Member 'PickupComponent_C_ExecuteUbergraph_PickupComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(PickupComponent_C_ExecuteUbergraph_PickupComponent, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'PickupComponent_C_ExecuteUbergraph_PickupComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(PickupComponent_C_ExecuteUbergraph_PickupComponent, CallFunc_GetObjectClass_ReturnValue) == 0x000010, "Member 'PickupComponent_C_ExecuteUbergraph_PickupComponent::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PickupComponent_C_ExecuteUbergraph_PickupComponent, CallFunc_GetDataTableRowFromName_OutRow) == 0x000018, "Member 'PickupComponent_C_ExecuteUbergraph_PickupComponent::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(PickupComponent_C_ExecuteUbergraph_PickupComponent, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000238, "Member 'PickupComponent_C_ExecuteUbergraph_PickupComponent::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PickupComponent_C_ExecuteUbergraph_PickupComponent, CallFunc_IsValid_ReturnValue) == 0x000239, "Member 'PickupComponent_C_ExecuteUbergraph_PickupComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PickupComponent_C_ExecuteUbergraph_PickupComponent, K2Node_SetFieldsInStruct_StructOut) == 0x000240, "Member 'PickupComponent_C_ExecuteUbergraph_PickupComponent::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

// Function PickupComponent.PickupComponent_C.GetContainer
// 0x0008 (0x0008 - 0x0000)
struct PickupComponent_C_GetContainer final
{
public:
	class UJSIContainer_C*                        Param_ContainerRef;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PickupComponent_C_GetContainer) == 0x000008, "Wrong alignment on PickupComponent_C_GetContainer");
static_assert(sizeof(PickupComponent_C_GetContainer) == 0x000008, "Wrong size on PickupComponent_C_GetContainer");
static_assert(offsetof(PickupComponent_C_GetContainer, Param_ContainerRef) == 0x000000, "Member 'PickupComponent_C_GetContainer::Param_ContainerRef' has a wrong offset!");

// Function PickupComponent.PickupComponent_C.GetCount
// 0x0004 (0x0004 - 0x0000)
struct PickupComponent_C_GetCount final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PickupComponent_C_GetCount) == 0x000004, "Wrong alignment on PickupComponent_C_GetCount");
static_assert(sizeof(PickupComponent_C_GetCount) == 0x000004, "Wrong size on PickupComponent_C_GetCount");
static_assert(offsetof(PickupComponent_C_GetCount, Count) == 0x000000, "Member 'PickupComponent_C_GetCount::Count' has a wrong offset!");

// Function PickupComponent.PickupComponent_C.GetInfo
// 0x0220 (0x0220 - 0x0000)
struct PickupComponent_C_GetInfo final
{
public:
	struct FFItemInfo                             ItemInfo;                                          // 0x0000(0x0220)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(PickupComponent_C_GetInfo) == 0x000008, "Wrong alignment on PickupComponent_C_GetInfo");
static_assert(sizeof(PickupComponent_C_GetInfo) == 0x000220, "Wrong size on PickupComponent_C_GetInfo");
static_assert(offsetof(PickupComponent_C_GetInfo, ItemInfo) == 0x000000, "Member 'PickupComponent_C_GetInfo::ItemInfo' has a wrong offset!");

// Function PickupComponent.PickupComponent_C.GetItemNameCount
// 0x01E0 (0x01E0 - 0x0000)
struct PickupComponent_C_GetItemNameCount final
{
public:
	class FText                                   Param_Name;                                        // 0x0000(0x0018)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0020(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0040(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0058(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00A8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00C0(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0110(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0120(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0138(0x0018)(ConstParm)
	class FText                                   CallFunc_TextToLower_ReturnValue;                  // 0x0150(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0168(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x01B8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x01C8(0x0018)()
};
static_assert(alignof(PickupComponent_C_GetItemNameCount) == 0x000008, "Wrong alignment on PickupComponent_C_GetItemNameCount");
static_assert(sizeof(PickupComponent_C_GetItemNameCount) == 0x0001E0, "Wrong size on PickupComponent_C_GetItemNameCount");
static_assert(offsetof(PickupComponent_C_GetItemNameCount, Param_Name) == 0x000000, "Member 'PickupComponent_C_GetItemNameCount::Param_Name' has a wrong offset!");
static_assert(offsetof(PickupComponent_C_GetItemNameCount, Temp_bool_Variable) == 0x000018, "Member 'PickupComponent_C_GetItemNameCount::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PickupComponent_C_GetItemNameCount, CallFunc_MakeLiteralText_ReturnValue) == 0x000020, "Member 'PickupComponent_C_GetItemNameCount::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(PickupComponent_C_GetItemNameCount, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'PickupComponent_C_GetItemNameCount::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PickupComponent_C_GetItemNameCount, CallFunc_Conv_NameToText_ReturnValue) == 0x000040, "Member 'PickupComponent_C_GetItemNameCount::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(PickupComponent_C_GetItemNameCount, K2Node_MakeStruct_FormatArgumentData) == 0x000058, "Member 'PickupComponent_C_GetItemNameCount::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(PickupComponent_C_GetItemNameCount, CallFunc_Conv_IntToText_ReturnValue) == 0x0000A8, "Member 'PickupComponent_C_GetItemNameCount::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(PickupComponent_C_GetItemNameCount, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000C0, "Member 'PickupComponent_C_GetItemNameCount::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(PickupComponent_C_GetItemNameCount, K2Node_MakeArray_Array) == 0x000110, "Member 'PickupComponent_C_GetItemNameCount::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PickupComponent_C_GetItemNameCount, CallFunc_Format_ReturnValue) == 0x000120, "Member 'PickupComponent_C_GetItemNameCount::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(PickupComponent_C_GetItemNameCount, K2Node_Select_Default) == 0x000138, "Member 'PickupComponent_C_GetItemNameCount::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PickupComponent_C_GetItemNameCount, CallFunc_TextToLower_ReturnValue) == 0x000150, "Member 'PickupComponent_C_GetItemNameCount::CallFunc_TextToLower_ReturnValue' has a wrong offset!");
static_assert(offsetof(PickupComponent_C_GetItemNameCount, K2Node_MakeStruct_FormatArgumentData_2) == 0x000168, "Member 'PickupComponent_C_GetItemNameCount::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(PickupComponent_C_GetItemNameCount, K2Node_MakeArray_Array_1) == 0x0001B8, "Member 'PickupComponent_C_GetItemNameCount::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(PickupComponent_C_GetItemNameCount, CallFunc_Format_ReturnValue_1) == 0x0001C8, "Member 'PickupComponent_C_GetItemNameCount::CallFunc_Format_ReturnValue_1' has a wrong offset!");

// Function PickupComponent.PickupComponent_C.GetSpecialContainer
// 0x0030 (0x0030 - 0x0000)
struct PickupComponent_C_GetSpecialContainer final
{
public:
	TSoftClassPtr<class UClass>                   SpecialContainerWidget;                            // 0x0000(0x0030)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(PickupComponent_C_GetSpecialContainer) == 0x000008, "Wrong alignment on PickupComponent_C_GetSpecialContainer");
static_assert(sizeof(PickupComponent_C_GetSpecialContainer) == 0x000030, "Wrong size on PickupComponent_C_GetSpecialContainer");
static_assert(offsetof(PickupComponent_C_GetSpecialContainer, SpecialContainerWidget) == 0x000000, "Member 'PickupComponent_C_GetSpecialContainer::SpecialContainerWidget' has a wrong offset!");

// Function PickupComponent.PickupComponent_C.HasUniqueID
// 0x0001 (0x0001 - 0x0000)
struct PickupComponent_C_HasUniqueID final
{
public:
	bool                                          Param_HasUniqueID_;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PickupComponent_C_HasUniqueID) == 0x000001, "Wrong alignment on PickupComponent_C_HasUniqueID");
static_assert(sizeof(PickupComponent_C_HasUniqueID) == 0x000001, "Wrong size on PickupComponent_C_HasUniqueID");
static_assert(offsetof(PickupComponent_C_HasUniqueID, Param_HasUniqueID_) == 0x000000, "Member 'PickupComponent_C_HasUniqueID::Param_HasUniqueID_' has a wrong offset!");

// Function PickupComponent.PickupComponent_C.JustaDummyFunc
// 0x0002 (0x0002 - 0x0000)
struct PickupComponent_C_JustaDummyFunc final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PickupComponent_C_JustaDummyFunc) == 0x000001, "Wrong alignment on PickupComponent_C_JustaDummyFunc");
static_assert(sizeof(PickupComponent_C_JustaDummyFunc) == 0x000002, "Wrong size on PickupComponent_C_JustaDummyFunc");
static_assert(offsetof(PickupComponent_C_JustaDummyFunc, ReturnValue) == 0x000000, "Member 'PickupComponent_C_JustaDummyFunc::ReturnValue' has a wrong offset!");
static_assert(offsetof(PickupComponent_C_JustaDummyFunc, CallFunc_RandomBool_ReturnValue) == 0x000001, "Member 'PickupComponent_C_JustaDummyFunc::CallFunc_RandomBool_ReturnValue' has a wrong offset!");

// Function PickupComponent.PickupComponent_C.SetContainer
// 0x0010 (0x0010 - 0x0000)
struct PickupComponent_C_SetContainer final
{
public:
	class UJSIContainer_C*                        Param_ContainerRef;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Done;                                              // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PickupComponent_C_SetContainer) == 0x000008, "Wrong alignment on PickupComponent_C_SetContainer");
static_assert(sizeof(PickupComponent_C_SetContainer) == 0x000010, "Wrong size on PickupComponent_C_SetContainer");
static_assert(offsetof(PickupComponent_C_SetContainer, Param_ContainerRef) == 0x000000, "Member 'PickupComponent_C_SetContainer::Param_ContainerRef' has a wrong offset!");
static_assert(offsetof(PickupComponent_C_SetContainer, Done) == 0x000008, "Member 'PickupComponent_C_SetContainer::Done' has a wrong offset!");

// Function PickupComponent.PickupComponent_C.SetPickupInfo
// 0x0228 (0x0228 - 0x0000)
struct PickupComponent_C_SetPickupInfo final
{
public:
	struct FFItemInfo                             Param_PickupItemInfo;                              // 0x0000(0x0220)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Updated;                                           // 0x0220(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PickupComponent_C_SetPickupInfo) == 0x000008, "Wrong alignment on PickupComponent_C_SetPickupInfo");
static_assert(sizeof(PickupComponent_C_SetPickupInfo) == 0x000228, "Wrong size on PickupComponent_C_SetPickupInfo");
static_assert(offsetof(PickupComponent_C_SetPickupInfo, Param_PickupItemInfo) == 0x000000, "Member 'PickupComponent_C_SetPickupInfo::Param_PickupItemInfo' has a wrong offset!");
static_assert(offsetof(PickupComponent_C_SetPickupInfo, Updated) == 0x000220, "Member 'PickupComponent_C_SetPickupInfo::Updated' has a wrong offset!");

// Function PickupComponent.PickupComponent_C.SetUniqueID
// 0x0008 (0x0008 - 0x0000)
struct PickupComponent_C_SetUniqueID final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PickupComponent_C_SetUniqueID) == 0x000004, "Wrong alignment on PickupComponent_C_SetUniqueID");
static_assert(sizeof(PickupComponent_C_SetUniqueID) == 0x000008, "Wrong size on PickupComponent_C_SetUniqueID");
static_assert(offsetof(PickupComponent_C_SetUniqueID, ID) == 0x000000, "Member 'PickupComponent_C_SetUniqueID::ID' has a wrong offset!");
static_assert(offsetof(PickupComponent_C_SetUniqueID, Success) == 0x000004, "Member 'PickupComponent_C_SetUniqueID::Success' has a wrong offset!");

// Function PickupComponent.PickupComponent_C.UpdateCount
// 0x0008 (0x0008 - 0x0000)
struct PickupComponent_C_UpdateCount final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Updated;                                           // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PickupComponent_C_UpdateCount) == 0x000004, "Wrong alignment on PickupComponent_C_UpdateCount");
static_assert(sizeof(PickupComponent_C_UpdateCount) == 0x000008, "Wrong size on PickupComponent_C_UpdateCount");
static_assert(offsetof(PickupComponent_C_UpdateCount, Count) == 0x000000, "Member 'PickupComponent_C_UpdateCount::Count' has a wrong offset!");
static_assert(offsetof(PickupComponent_C_UpdateCount, Updated) == 0x000004, "Member 'PickupComponent_C_UpdateCount::Updated' has a wrong offset!");
static_assert(offsetof(PickupComponent_C_UpdateCount, CallFunc_Greater_IntInt_ReturnValue) == 0x000005, "Member 'PickupComponent_C_UpdateCount::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function PickupComponent.PickupComponent_C.UpdateEquipped
// 0x0002 (0x0002 - 0x0000)
struct PickupComponent_C_UpdateEquipped final
{
public:
	bool                                          Param_Equipped;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEquipped;                                        // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PickupComponent_C_UpdateEquipped) == 0x000001, "Wrong alignment on PickupComponent_C_UpdateEquipped");
static_assert(sizeof(PickupComponent_C_UpdateEquipped) == 0x000002, "Wrong size on PickupComponent_C_UpdateEquipped");
static_assert(offsetof(PickupComponent_C_UpdateEquipped, Param_Equipped) == 0x000000, "Member 'PickupComponent_C_UpdateEquipped::Param_Equipped' has a wrong offset!");
static_assert(offsetof(PickupComponent_C_UpdateEquipped, IsEquipped) == 0x000001, "Member 'PickupComponent_C_UpdateEquipped::IsEquipped' has a wrong offset!");

}

