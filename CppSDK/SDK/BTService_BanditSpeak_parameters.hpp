#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTService_BanditSpeak

#include "Basic.hpp"


namespace SDK::Params
{

// Function BTService_BanditSpeak.BTService_BanditSpeak_C.ExecuteUbergraph_BTService_BanditSpeak
// 0x0050 (0x0050 - 0x0000)
struct BTService_BanditSpeak_C_ExecuteUbergraph_BTService_BanditSpeak final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        K2Node_CustomEvent_AttachToComponent;              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_PlayEventWithOcclusion_FMODAudioComponent; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainBanditAI_C*                        K2Node_DynamicCast_AsMain_Bandit_AI;               // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetParameter_Value_ImplicitCast;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTService_BanditSpeak_C_ExecuteUbergraph_BTService_BanditSpeak) == 0x000008, "Wrong alignment on BTService_BanditSpeak_C_ExecuteUbergraph_BTService_BanditSpeak");
static_assert(sizeof(BTService_BanditSpeak_C_ExecuteUbergraph_BTService_BanditSpeak) == 0x000050, "Wrong size on BTService_BanditSpeak_C_ExecuteUbergraph_BTService_BanditSpeak");
static_assert(offsetof(BTService_BanditSpeak_C_ExecuteUbergraph_BTService_BanditSpeak, EntryPoint) == 0x000000, "Member 'BTService_BanditSpeak_C_ExecuteUbergraph_BTService_BanditSpeak::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTService_BanditSpeak_C_ExecuteUbergraph_BTService_BanditSpeak, K2Node_CustomEvent_AttachToComponent) == 0x000008, "Member 'BTService_BanditSpeak_C_ExecuteUbergraph_BTService_BanditSpeak::K2Node_CustomEvent_AttachToComponent' has a wrong offset!");
static_assert(offsetof(BTService_BanditSpeak_C_ExecuteUbergraph_BTService_BanditSpeak, CallFunc_PlayEventWithOcclusion_FMODAudioComponent) == 0x000010, "Member 'BTService_BanditSpeak_C_ExecuteUbergraph_BTService_BanditSpeak::CallFunc_PlayEventWithOcclusion_FMODAudioComponent' has a wrong offset!");
static_assert(offsetof(BTService_BanditSpeak_C_ExecuteUbergraph_BTService_BanditSpeak, K2Node_Event_OwnerController) == 0x000018, "Member 'BTService_BanditSpeak_C_ExecuteUbergraph_BTService_BanditSpeak::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTService_BanditSpeak_C_ExecuteUbergraph_BTService_BanditSpeak, K2Node_Event_ControlledPawn) == 0x000020, "Member 'BTService_BanditSpeak_C_ExecuteUbergraph_BTService_BanditSpeak::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTService_BanditSpeak_C_ExecuteUbergraph_BTService_BanditSpeak, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BTService_BanditSpeak_C_ExecuteUbergraph_BTService_BanditSpeak::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_BanditSpeak_C_ExecuteUbergraph_BTService_BanditSpeak, K2Node_DynamicCast_AsMain_Bandit_AI) == 0x000030, "Member 'BTService_BanditSpeak_C_ExecuteUbergraph_BTService_BanditSpeak::K2Node_DynamicCast_AsMain_Bandit_AI' has a wrong offset!");
static_assert(offsetof(BTService_BanditSpeak_C_ExecuteUbergraph_BTService_BanditSpeak, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BTService_BanditSpeak_C_ExecuteUbergraph_BTService_BanditSpeak::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTService_BanditSpeak_C_ExecuteUbergraph_BTService_BanditSpeak, CallFunc_RandomIntegerInRange_ReturnValue) == 0x00003C, "Member 'BTService_BanditSpeak_C_ExecuteUbergraph_BTService_BanditSpeak::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_BanditSpeak_C_ExecuteUbergraph_BTService_BanditSpeak, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000040, "Member 'BTService_BanditSpeak_C_ExecuteUbergraph_BTService_BanditSpeak::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_BanditSpeak_C_ExecuteUbergraph_BTService_BanditSpeak, CallFunc_SetParameter_Value_ImplicitCast) == 0x000048, "Member 'BTService_BanditSpeak_C_ExecuteUbergraph_BTService_BanditSpeak::CallFunc_SetParameter_Value_ImplicitCast' has a wrong offset!");

// Function BTService_BanditSpeak.BTService_BanditSpeak_C.PlaySound
// 0x0008 (0x0008 - 0x0000)
struct BTService_BanditSpeak_C_PlaySound final
{
public:
	class USceneComponent*                        AttachToComponent;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTService_BanditSpeak_C_PlaySound) == 0x000008, "Wrong alignment on BTService_BanditSpeak_C_PlaySound");
static_assert(sizeof(BTService_BanditSpeak_C_PlaySound) == 0x000008, "Wrong size on BTService_BanditSpeak_C_PlaySound");
static_assert(offsetof(BTService_BanditSpeak_C_PlaySound, AttachToComponent) == 0x000000, "Member 'BTService_BanditSpeak_C_PlaySound::AttachToComponent' has a wrong offset!");

// Function BTService_BanditSpeak.BTService_BanditSpeak_C.ReceiveActivationAI
// 0x0010 (0x0010 - 0x0000)
struct BTService_BanditSpeak_C_ReceiveActivationAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTService_BanditSpeak_C_ReceiveActivationAI) == 0x000008, "Wrong alignment on BTService_BanditSpeak_C_ReceiveActivationAI");
static_assert(sizeof(BTService_BanditSpeak_C_ReceiveActivationAI) == 0x000010, "Wrong size on BTService_BanditSpeak_C_ReceiveActivationAI");
static_assert(offsetof(BTService_BanditSpeak_C_ReceiveActivationAI, OwnerController) == 0x000000, "Member 'BTService_BanditSpeak_C_ReceiveActivationAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTService_BanditSpeak_C_ReceiveActivationAI, ControlledPawn) == 0x000008, "Member 'BTService_BanditSpeak_C_ReceiveActivationAI::ControlledPawn' has a wrong offset!");

}

