#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InteractiveSafe

#include "Basic.hpp"

#include "BP_InteractiveSafe_classes.hpp"
#include "BP_InteractiveSafe_parameters.hpp"


namespace SDK
{

// Function BP_InteractiveSafe.BP_InteractiveSafe_C.DestroyInteractable
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_InteractiveSafe_C::DestroyInteractable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveSafe_C", "DestroyInteractable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractiveSafe.BP_InteractiveSafe_C.ExecuteUbergraph_BP_InteractiveSafe
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InteractiveSafe_C::ExecuteUbergraph_BP_InteractiveSafe(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveSafe_C", "ExecuteUbergraph_BP_InteractiveSafe");

	Params::BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractiveSafe.BP_InteractiveSafe_C.GetActorType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ActorType                             ActorType                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InteractiveSafe_C::GetActorType(E_ActorType* ActorType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveSafe_C", "GetActorType");

	Params::BP_InteractiveSafe_C_GetActorType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ActorType != nullptr)
		*ActorType = Parms.ActorType;
}


// Function BP_InteractiveSafe.BP_InteractiveSafe_C.GetPlayerRef
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ASurvivalPlayer_C*                NewParam                                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_InteractiveSafe_C::GetPlayerRef(class ASurvivalPlayer_C** NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveSafe_C", "GetPlayerRef");

	Params::BP_InteractiveSafe_C_GetPlayerRef Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BP_InteractiveSafe.BP_InteractiveSafe_C.GetReferences (ByPawn)
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ASurvivalPlayer_C*                Param_Player                                           (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ASurvPC_C*                        Param_Controller                                       (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ABP_GameHUD_C*                    Param_HUD                                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_InteractiveSafe_C::GetReferences__ByPawn_(class APawn* Pawn, bool* Result, class ASurvivalPlayer_C** Param_Player, class ASurvPC_C** Param_Controller, class ABP_GameHUD_C** Param_HUD)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveSafe_C", "GetReferences (ByPawn)");

	Params::BP_InteractiveSafe_C_GetReferences__ByPawn_ Parms{};

	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (Param_Player != nullptr)
		*Param_Player = Parms.Param_Player;

	if (Param_Controller != nullptr)
		*Param_Controller = Parms.Param_Controller;

	if (Param_HUD != nullptr)
		*Param_HUD = Parms.Param_HUD;
}


// Function BP_InteractiveSafe.BP_InteractiveSafe_C.IsLocked?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InteractiveSafe_C::IsLocked_(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveSafe_C", "IsLocked?");

	Params::BP_InteractiveSafe_C_IsLocked_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_InteractiveSafe.BP_InteractiveSafe_C.LoadStash
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_InteractiveSafe_C::LoadStash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveSafe_C", "LoadStash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractiveSafe.BP_InteractiveSafe_C.LoadStashEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_InteractiveSafe_C::LoadStashEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveSafe_C", "LoadStashEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractiveSafe.BP_InteractiveSafe_C.OnBeginInteract
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Param_Player                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_InteractiveSafe_C::OnBeginInteract(class APawn* Param_Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveSafe_C", "OnBeginInteract");

	Params::BP_InteractiveSafe_C_OnBeginInteract Parms{};

	Parms.Param_Player = Param_Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractiveSafe.BP_InteractiveSafe_C.OnCloseStash
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_InteractiveSafe_C::OnCloseStash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveSafe_C", "OnCloseStash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractiveSafe.BP_InteractiveSafe_C.OnFocused
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Param_Player                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           HighlightActor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UActorComponent*                  HighlightActorComponent                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// E_InteractType                          InteractType                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  LateTime                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InteractiveSafe_C::OnFocused(class APawn* Param_Player, class AActor* HighlightActor, class UActorComponent* HighlightActorComponent, E_InteractType* InteractType, double* LateTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveSafe_C", "OnFocused");

	Params::BP_InteractiveSafe_C_OnFocused Parms{};

	Parms.Param_Player = Param_Player;
	Parms.HighlightActor = HighlightActor;
	Parms.HighlightActorComponent = HighlightActorComponent;

	UObject::ProcessEvent(Func, &Parms);

	if (InteractType != nullptr)
		*InteractType = Parms.InteractType;

	if (LateTime != nullptr)
		*LateTime = Parms.LateTime;
}


// Function BP_InteractiveSafe.BP_InteractiveSafe_C.OnInteract
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Param_Player                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_InteractiveSafe_C::OnInteract(class APawn* Param_Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveSafe_C", "OnInteract");

	Params::BP_InteractiveSafe_C_OnInteract Parms{};

	Parms.Param_Player = Param_Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractiveSafe.BP_InteractiveSafe_C.OnInteract2
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Param_Player                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_InteractiveSafe_C::OnInteract2(class APawn* Param_Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveSafe_C", "OnInteract2");

	Params::BP_InteractiveSafe_C_OnInteract2 Parms{};

	Parms.Param_Player = Param_Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractiveSafe.BP_InteractiveSafe_C.OnInteract3
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Param_Player                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_InteractiveSafe_C::OnInteract3(class APawn* Param_Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveSafe_C", "OnInteract3");

	Params::BP_InteractiveSafe_C_OnInteract3 Parms{};

	Parms.Param_Player = Param_Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractiveSafe.BP_InteractiveSafe_C.OnInteractVehicle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Param_Player                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   SitIndex                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    SkipAnimation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InteractiveSafe_C::OnInteractVehicle(class APawn* Param_Player, int32 SitIndex, bool SkipAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveSafe_C", "OnInteractVehicle");

	Params::BP_InteractiveSafe_C_OnInteractVehicle Parms{};

	Parms.Param_Player = Param_Player;
	Parms.SitIndex = SitIndex;
	Parms.SkipAnimation = SkipAnimation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractiveSafe.BP_InteractiveSafe_C.OnLocalInteract
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Param_Player                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_InteractiveSafe_C::OnLocalInteract(class APawn* Param_Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveSafe_C", "OnLocalInteract");

	Params::BP_InteractiveSafe_C_OnLocalInteract Parms{};

	Parms.Param_Player = Param_Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractiveSafe.BP_InteractiveSafe_C.OnLostFocus
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Param_Player                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_InteractiveSafe_C::OnLostFocus(class APawn* Param_Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveSafe_C", "OnLostFocus");

	Params::BP_InteractiveSafe_C_OnLostFocus Parms{};

	Parms.Param_Player = Param_Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractiveSafe.BP_InteractiveSafe_C.OnOpenSafe
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_InteractiveSafe_C::OnOpenSafe()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveSafe_C", "OnOpenSafe");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractiveSafe.BP_InteractiveSafe_C.OnOpenStash
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_InteractiveSafe_C::OnOpenStash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveSafe_C", "OnOpenStash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractiveSafe.BP_InteractiveSafe_C.OnSeen
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Param_Player                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_InteractiveSafe_C::OnSeen(class APawn* Param_Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveSafe_C", "OnSeen");

	Params::BP_InteractiveSafe_C_OnSeen Parms{};

	Parms.Param_Player = Param_Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractiveSafe.BP_InteractiveSafe_C.OnShowMessage (F)
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Reset                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_InteractiveSafe_C::OnShowMessage__F_(bool Reset, class APawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveSafe_C", "OnShowMessage (F)");

	Params::BP_InteractiveSafe_C_OnShowMessage__F_ Parms{};

	Parms.Reset = Reset;
	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractiveSafe.BP_InteractiveSafe_C.OnSquadCheckComplete
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_InteractiveSafe_C::OnSquadCheckComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveSafe_C", "OnSquadCheckComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractiveSafe.BP_InteractiveSafe_C.OnStopInteract
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Param_Player                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_InteractiveSafe_C::OnStopInteract(class APawn* Param_Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveSafe_C", "OnStopInteract");

	Params::BP_InteractiveSafe_C_OnStopInteract Parms{};

	Parms.Param_Player = Param_Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractiveSafe.BP_InteractiveSafe_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_InteractiveSafe_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveSafe_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractiveSafe.BP_InteractiveSafe_C.Run Lockpicking
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_InteractiveSafe_C::Run_Lockpicking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveSafe_C", "Run Lockpicking");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractiveSafe.BP_InteractiveSafe_C.Save Stash
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_InteractiveSafe_C::Save_Stash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveSafe_C", "Save Stash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractiveSafe.BP_InteractiveSafe_C.Set3DWidgetVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InteractiveSafe_C::Set3DWidgetVisibility(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveSafe_C", "Set3DWidgetVisibility");

	Params::BP_InteractiveSafe_C_Set3DWidgetVisibility Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractiveSafe.BP_InteractiveSafe_C.SetInput
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                Param_Controller                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InteractiveSafe_C::SetInput(class APlayerController* Param_Controller, bool NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveSafe_C", "SetInput");

	Params::BP_InteractiveSafe_C_SetInput Parms{};

	Parms.Param_Controller = Param_Controller;
	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractiveSafe.BP_InteractiveSafe_C.SetReferences
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InteractiveSafe_C::SetReferences(class APawn* Pawn, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveSafe_C", "SetReferences");

	Params::BP_InteractiveSafe_C_SetReferences Parms{};

	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_InteractiveSafe.BP_InteractiveSafe_C.SetTutorial3DWidgetVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InteractiveSafe_C::SetTutorial3DWidgetVisibility(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveSafe_C", "SetTutorial3DWidgetVisibility");

	Params::BP_InteractiveSafe_C_SetTutorial3DWidgetVisibility Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}

}

