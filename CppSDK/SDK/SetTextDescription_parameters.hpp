#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SetTextDescription

#include "Basic.hpp"

#include "QuestFramework_structs.hpp"


namespace SDK::Params
{

// Function SetTextDescription.SetTextDescription_C.ExecuteEvent
// 0x0028 (0x0028 - 0x0000)
struct SetTextDescription_C_ExecuteEvent final
{
public:
	class UQuestContext*                          Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FQuestEventPayload                     Payload;                                           // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(SetTextDescription_C_ExecuteEvent) == 0x000008, "Wrong alignment on SetTextDescription_C_ExecuteEvent");
static_assert(sizeof(SetTextDescription_C_ExecuteEvent) == 0x000028, "Wrong size on SetTextDescription_C_ExecuteEvent");
static_assert(offsetof(SetTextDescription_C_ExecuteEvent, Context) == 0x000000, "Member 'SetTextDescription_C_ExecuteEvent::Context' has a wrong offset!");
static_assert(offsetof(SetTextDescription_C_ExecuteEvent, Payload) == 0x000008, "Member 'SetTextDescription_C_ExecuteEvent::Payload' has a wrong offset!");

// Function SetTextDescription.SetTextDescription_C.ExecuteUbergraph_SetTextDescription
// 0x00E0 (0x00E0 - 0x0000)
struct SetTextDescription_C_ExecuteUbergraph_SetTextDescription final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuestContext*                          K2Node_Event_Context;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FQuestEventPayload                     K2Node_Event_Payload;                              // 0x0010(0x0020)(ConstParm, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetOwnerController_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UQuest*                                 CallFunc_GetQuestAsset_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvPC_C*                              K2Node_DynamicCast_AsSurv_PC;                      // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UQuestData_C*                     K2Node_DynamicCast_AsQuest_Data;                   // 0x0058(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0068(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0080(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0098(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x00B0(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x00C8(0x0018)()
};
static_assert(alignof(SetTextDescription_C_ExecuteUbergraph_SetTextDescription) == 0x000008, "Wrong alignment on SetTextDescription_C_ExecuteUbergraph_SetTextDescription");
static_assert(sizeof(SetTextDescription_C_ExecuteUbergraph_SetTextDescription) == 0x0000E0, "Wrong size on SetTextDescription_C_ExecuteUbergraph_SetTextDescription");
static_assert(offsetof(SetTextDescription_C_ExecuteUbergraph_SetTextDescription, EntryPoint) == 0x000000, "Member 'SetTextDescription_C_ExecuteUbergraph_SetTextDescription::EntryPoint' has a wrong offset!");
static_assert(offsetof(SetTextDescription_C_ExecuteUbergraph_SetTextDescription, K2Node_Event_Context) == 0x000008, "Member 'SetTextDescription_C_ExecuteUbergraph_SetTextDescription::K2Node_Event_Context' has a wrong offset!");
static_assert(offsetof(SetTextDescription_C_ExecuteUbergraph_SetTextDescription, K2Node_Event_Payload) == 0x000010, "Member 'SetTextDescription_C_ExecuteUbergraph_SetTextDescription::K2Node_Event_Payload' has a wrong offset!");
static_assert(offsetof(SetTextDescription_C_ExecuteUbergraph_SetTextDescription, Temp_int_Variable) == 0x000030, "Member 'SetTextDescription_C_ExecuteUbergraph_SetTextDescription::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(SetTextDescription_C_ExecuteUbergraph_SetTextDescription, CallFunc_GetOwnerController_ReturnValue) == 0x000038, "Member 'SetTextDescription_C_ExecuteUbergraph_SetTextDescription::CallFunc_GetOwnerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(SetTextDescription_C_ExecuteUbergraph_SetTextDescription, CallFunc_GetQuestAsset_ReturnValue) == 0x000040, "Member 'SetTextDescription_C_ExecuteUbergraph_SetTextDescription::CallFunc_GetQuestAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(SetTextDescription_C_ExecuteUbergraph_SetTextDescription, K2Node_DynamicCast_AsSurv_PC) == 0x000048, "Member 'SetTextDescription_C_ExecuteUbergraph_SetTextDescription::K2Node_DynamicCast_AsSurv_PC' has a wrong offset!");
static_assert(offsetof(SetTextDescription_C_ExecuteUbergraph_SetTextDescription, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'SetTextDescription_C_ExecuteUbergraph_SetTextDescription::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SetTextDescription_C_ExecuteUbergraph_SetTextDescription, K2Node_DynamicCast_AsQuest_Data) == 0x000058, "Member 'SetTextDescription_C_ExecuteUbergraph_SetTextDescription::K2Node_DynamicCast_AsQuest_Data' has a wrong offset!");
static_assert(offsetof(SetTextDescription_C_ExecuteUbergraph_SetTextDescription, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'SetTextDescription_C_ExecuteUbergraph_SetTextDescription::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SetTextDescription_C_ExecuteUbergraph_SetTextDescription, Temp_text_Variable) == 0x000068, "Member 'SetTextDescription_C_ExecuteUbergraph_SetTextDescription::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(SetTextDescription_C_ExecuteUbergraph_SetTextDescription, Temp_text_Variable_1) == 0x000080, "Member 'SetTextDescription_C_ExecuteUbergraph_SetTextDescription::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(SetTextDescription_C_ExecuteUbergraph_SetTextDescription, Temp_text_Variable_2) == 0x000098, "Member 'SetTextDescription_C_ExecuteUbergraph_SetTextDescription::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(SetTextDescription_C_ExecuteUbergraph_SetTextDescription, Temp_text_Variable_3) == 0x0000B0, "Member 'SetTextDescription_C_ExecuteUbergraph_SetTextDescription::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(SetTextDescription_C_ExecuteUbergraph_SetTextDescription, K2Node_Select_Default) == 0x0000C8, "Member 'SetTextDescription_C_ExecuteUbergraph_SetTextDescription::K2Node_Select_Default' has a wrong offset!");

}

