#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ScopeBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AdvancedThirdPersonCamera_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "BP_BaseAttachment_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ScopeBase.BP_ScopeBase_C
// 0x03C0 (0x06B8 - 0x02F8)
class ABP_ScopeBase_C : public ABP_BaseAttachment_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_ScopeBase_C;                     // 0x02F8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        ScopeCenter;                                       // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         LerpFOV_NewTrack_0_1F4E6E1D4E5F761AD2D58D9FA47B0099; // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            LerpFOV__Direction_1F4E6E1D4E5F761AD2D58D9FA47B0099; // 0x030C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30D[0x3];                                      // 0x030D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     LerpFOV;                                           // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        ParentSceneComponent;                              // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          WasInAimFPS;                                       // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        FOV;                                               // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ScopeOffsetFromCamera;                             // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PistolScopeOffsetFromCamera;                       // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DefaultFOV;                                        // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CameraMode;                                        // 0x0348(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           DefaultCameraMode;                                 // 0x0350(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FATPCCameraMode                        ManualCameraMode;                                  // 0x0358(0x0348)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           CameraMode_Crouch;                                 // 0x06A0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        ScopeTextureRadius;                                // 0x06A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsScopeBlur;                                       // 0x06B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Aim();
	void Custom_AddScopeEffect();
	void Custom_RemoveScopeEffect();
	void ExecuteUbergraph_BP_ScopeBase(int32 EntryPoint);
	void InitializeOnEquip();
	void LerpFOV__FinishedFunc();
	void LerpFOV__UpdateFunc();
	void OnAim(bool Param_Aim, bool FPP);
	void OnWeaponChanged();
	void PlaceholderOffset();
	void PlaceholderOffsetEquip();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void SpecificBeginPlayDueToWeapon();
	void StopAim();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ScopeBase_C">();
	}
	static class ABP_ScopeBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ScopeBase_C>();
	}
};
static_assert(alignof(ABP_ScopeBase_C) == 0x000008, "Wrong alignment on ABP_ScopeBase_C");
static_assert(sizeof(ABP_ScopeBase_C) == 0x0006B8, "Wrong size on ABP_ScopeBase_C");
static_assert(offsetof(ABP_ScopeBase_C, UberGraphFrame_BP_ScopeBase_C) == 0x0002F8, "Member 'ABP_ScopeBase_C::UberGraphFrame_BP_ScopeBase_C' has a wrong offset!");
static_assert(offsetof(ABP_ScopeBase_C, ScopeCenter) == 0x000300, "Member 'ABP_ScopeBase_C::ScopeCenter' has a wrong offset!");
static_assert(offsetof(ABP_ScopeBase_C, LerpFOV_NewTrack_0_1F4E6E1D4E5F761AD2D58D9FA47B0099) == 0x000308, "Member 'ABP_ScopeBase_C::LerpFOV_NewTrack_0_1F4E6E1D4E5F761AD2D58D9FA47B0099' has a wrong offset!");
static_assert(offsetof(ABP_ScopeBase_C, LerpFOV__Direction_1F4E6E1D4E5F761AD2D58D9FA47B0099) == 0x00030C, "Member 'ABP_ScopeBase_C::LerpFOV__Direction_1F4E6E1D4E5F761AD2D58D9FA47B0099' has a wrong offset!");
static_assert(offsetof(ABP_ScopeBase_C, LerpFOV) == 0x000310, "Member 'ABP_ScopeBase_C::LerpFOV' has a wrong offset!");
static_assert(offsetof(ABP_ScopeBase_C, ParentSceneComponent) == 0x000318, "Member 'ABP_ScopeBase_C::ParentSceneComponent' has a wrong offset!");
static_assert(offsetof(ABP_ScopeBase_C, WasInAimFPS) == 0x000320, "Member 'ABP_ScopeBase_C::WasInAimFPS' has a wrong offset!");
static_assert(offsetof(ABP_ScopeBase_C, FOV) == 0x000328, "Member 'ABP_ScopeBase_C::FOV' has a wrong offset!");
static_assert(offsetof(ABP_ScopeBase_C, ScopeOffsetFromCamera) == 0x000330, "Member 'ABP_ScopeBase_C::ScopeOffsetFromCamera' has a wrong offset!");
static_assert(offsetof(ABP_ScopeBase_C, PistolScopeOffsetFromCamera) == 0x000338, "Member 'ABP_ScopeBase_C::PistolScopeOffsetFromCamera' has a wrong offset!");
static_assert(offsetof(ABP_ScopeBase_C, DefaultFOV) == 0x000340, "Member 'ABP_ScopeBase_C::DefaultFOV' has a wrong offset!");
static_assert(offsetof(ABP_ScopeBase_C, CameraMode) == 0x000348, "Member 'ABP_ScopeBase_C::CameraMode' has a wrong offset!");
static_assert(offsetof(ABP_ScopeBase_C, DefaultCameraMode) == 0x000350, "Member 'ABP_ScopeBase_C::DefaultCameraMode' has a wrong offset!");
static_assert(offsetof(ABP_ScopeBase_C, ManualCameraMode) == 0x000358, "Member 'ABP_ScopeBase_C::ManualCameraMode' has a wrong offset!");
static_assert(offsetof(ABP_ScopeBase_C, CameraMode_Crouch) == 0x0006A0, "Member 'ABP_ScopeBase_C::CameraMode_Crouch' has a wrong offset!");
static_assert(offsetof(ABP_ScopeBase_C, ScopeTextureRadius) == 0x0006A8, "Member 'ABP_ScopeBase_C::ScopeTextureRadius' has a wrong offset!");
static_assert(offsetof(ABP_ScopeBase_C, IsScopeBlur) == 0x0006B0, "Member 'ABP_ScopeBase_C::IsScopeBlur' has a wrong offset!");

}

