#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MPInGameInventory

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "S_PointerHintInfo_structs.hpp"
#include "UMG_structs.hpp"
#include "FMODStudio_structs.hpp"
#include "E_ShopContainer_structs.hpp"
#include "JSItemType_structs.hpp"
#include "ContainerPickupsInfo_structs.hpp"
#include "FItemInfo_structs.hpp"
#include "Engine_structs.hpp"
#include "E_TrainStatType_structs.hpp"
#include "SlateCore_structs.hpp"
#include "S_EffectInfo_structs.hpp"
#include "WS_CharaterPerks_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "InfoType_structs.hpp"


namespace SDK::Params
{

// Function MPInGameInventory.MPInGameInventory_C.Add Child Widget Perks
// 0x01D0 (0x01D0 - 0x0000)
struct MPInGameInventory_C_Add_Child_Widget_Perks final
{
public:
	TArray<class FName>                           DebugPerkArray;                                    // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<class FName>                           SelectedPerks;                                     // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         In_Row_Empty__local_;                              // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         In_Row__local_;                                    // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         In_Column_Empty__Local_;                           // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         In_Column__local_;                                 // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0058(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EffectInfo                          CallFunc_GetDataTableRowFromName_OutRow;           // 0x0078(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_CharEffects_C*                     CallFunc_Create_ReturnValue;                       // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UWBP_CharEffects_C*                     CallFunc_Create_ReturnValue_1;                     // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue_1;                   // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWS_CharaterPerks                      CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0110(0x00B8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_Add_Child_Widget_Perks) == 0x000008, "Wrong alignment on MPInGameInventory_C_Add_Child_Widget_Perks");
static_assert(sizeof(MPInGameInventory_C_Add_Child_Widget_Perks) == 0x0001D0, "Wrong size on MPInGameInventory_C_Add_Child_Widget_Perks");
static_assert(offsetof(MPInGameInventory_C_Add_Child_Widget_Perks, DebugPerkArray) == 0x000000, "Member 'MPInGameInventory_C_Add_Child_Widget_Perks::DebugPerkArray' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Add_Child_Widget_Perks, SelectedPerks) == 0x000010, "Member 'MPInGameInventory_C_Add_Child_Widget_Perks::SelectedPerks' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Add_Child_Widget_Perks, In_Row_Empty__local_) == 0x000020, "Member 'MPInGameInventory_C_Add_Child_Widget_Perks::In_Row_Empty__local_' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Add_Child_Widget_Perks, In_Row__local_) == 0x000024, "Member 'MPInGameInventory_C_Add_Child_Widget_Perks::In_Row__local_' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Add_Child_Widget_Perks, In_Column_Empty__Local_) == 0x000028, "Member 'MPInGameInventory_C_Add_Child_Widget_Perks::In_Column_Empty__Local_' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Add_Child_Widget_Perks, In_Column__local_) == 0x00002C, "Member 'MPInGameInventory_C_Add_Child_Widget_Perks::In_Column__local_' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Add_Child_Widget_Perks, K2Node_MakeArray_Array) == 0x000030, "Member 'MPInGameInventory_C_Add_Child_Widget_Perks::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Add_Child_Widget_Perks, Temp_int_Array_Index_Variable) == 0x000040, "Member 'MPInGameInventory_C_Add_Child_Widget_Perks::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Add_Child_Widget_Perks, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'MPInGameInventory_C_Add_Child_Widget_Perks::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Add_Child_Widget_Perks, K2Node_MakeStruct_Margin) == 0x000048, "Member 'MPInGameInventory_C_Add_Child_Widget_Perks::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Add_Child_Widget_Perks, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000058, "Member 'MPInGameInventory_C_Add_Child_Widget_Perks::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Add_Child_Widget_Perks, Temp_int_Loop_Counter_Variable) == 0x000068, "Member 'MPInGameInventory_C_Add_Child_Widget_Perks::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Add_Child_Widget_Perks, CallFunc_Array_Get_Item) == 0x00006C, "Member 'MPInGameInventory_C_Add_Child_Widget_Perks::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Add_Child_Widget_Perks, CallFunc_GetDataTableRowFromName_OutRow) == 0x000078, "Member 'MPInGameInventory_C_Add_Child_Widget_Perks::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Add_Child_Widget_Perks, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000B8, "Member 'MPInGameInventory_C_Add_Child_Widget_Perks::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Add_Child_Widget_Perks, CallFunc_Add_IntInt_ReturnValue) == 0x0000BC, "Member 'MPInGameInventory_C_Add_Child_Widget_Perks::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Add_Child_Widget_Perks, CallFunc_Array_Length_ReturnValue_1) == 0x0000C0, "Member 'MPInGameInventory_C_Add_Child_Widget_Perks::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Add_Child_Widget_Perks, CallFunc_Less_IntInt_ReturnValue) == 0x0000C4, "Member 'MPInGameInventory_C_Add_Child_Widget_Perks::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Add_Child_Widget_Perks, CallFunc_Create_ReturnValue) == 0x0000C8, "Member 'MPInGameInventory_C_Add_Child_Widget_Perks::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Add_Child_Widget_Perks, CallFunc_AddChild_ReturnValue) == 0x0000D0, "Member 'MPInGameInventory_C_Add_Child_Widget_Perks::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Add_Child_Widget_Perks, K2Node_MakeStruct_Margin_1) == 0x0000D8, "Member 'MPInGameInventory_C_Add_Child_Widget_Perks::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Add_Child_Widget_Perks, CallFunc_Create_ReturnValue_1) == 0x0000E8, "Member 'MPInGameInventory_C_Add_Child_Widget_Perks::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Add_Child_Widget_Perks, CallFunc_AddChild_ReturnValue_1) == 0x0000F0, "Member 'MPInGameInventory_C_Add_Child_Widget_Perks::CallFunc_AddChild_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Add_Child_Widget_Perks, Temp_int_Loop_Counter_Variable_1) == 0x0000F8, "Member 'MPInGameInventory_C_Add_Child_Widget_Perks::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Add_Child_Widget_Perks, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000FC, "Member 'MPInGameInventory_C_Add_Child_Widget_Perks::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Add_Child_Widget_Perks, CallFunc_Add_IntInt_ReturnValue_1) == 0x000100, "Member 'MPInGameInventory_C_Add_Child_Widget_Perks::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Add_Child_Widget_Perks, Temp_int_Array_Index_Variable_1) == 0x000104, "Member 'MPInGameInventory_C_Add_Child_Widget_Perks::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Add_Child_Widget_Perks, CallFunc_Array_Get_Item_1) == 0x000108, "Member 'MPInGameInventory_C_Add_Child_Widget_Perks::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Add_Child_Widget_Perks, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000110, "Member 'MPInGameInventory_C_Add_Child_Widget_Perks::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Add_Child_Widget_Perks, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x0001C8, "Member 'MPInGameInventory_C_Add_Child_Widget_Perks::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.Add Squad Member Entry
// 0x0060 (0x0060 - 0x0000)
struct MPInGameInventory_C_Add_Squad_Member_Entry final
{
public:
	class UWBP_Group_C*                           SquadEntryWidget;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APS_TDB_C*                              PlayerPS;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class APS_TDB_C* PlayerState)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class APS_TDB_C* PlayerState)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class APS_TDB_C* PlayerState)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWBP_Group_C* GroupEntry)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0050(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_Add_Squad_Member_Entry) == 0x000008, "Wrong alignment on MPInGameInventory_C_Add_Squad_Member_Entry");
static_assert(sizeof(MPInGameInventory_C_Add_Squad_Member_Entry) == 0x000060, "Wrong size on MPInGameInventory_C_Add_Squad_Member_Entry");
static_assert(offsetof(MPInGameInventory_C_Add_Squad_Member_Entry, SquadEntryWidget) == 0x000000, "Member 'MPInGameInventory_C_Add_Squad_Member_Entry::SquadEntryWidget' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Add_Squad_Member_Entry, PlayerPS) == 0x000008, "Member 'MPInGameInventory_C_Add_Squad_Member_Entry::PlayerPS' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Add_Squad_Member_Entry, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'MPInGameInventory_C_Add_Squad_Member_Entry::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Add_Squad_Member_Entry, K2Node_CreateDelegate_OutputDelegate_1) == 0x000020, "Member 'MPInGameInventory_C_Add_Squad_Member_Entry::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Add_Squad_Member_Entry, K2Node_CreateDelegate_OutputDelegate_2) == 0x000030, "Member 'MPInGameInventory_C_Add_Squad_Member_Entry::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Add_Squad_Member_Entry, K2Node_CreateDelegate_OutputDelegate_3) == 0x000040, "Member 'MPInGameInventory_C_Add_Squad_Member_Entry::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Add_Squad_Member_Entry, K2Node_CreateDelegate_OutputDelegate_4) == 0x000050, "Member 'MPInGameInventory_C_Add_Squad_Member_Entry::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.AddEffect
// 0x0018 (0x0018 - 0x0000)
struct MPInGameInventory_C_AddEffect final
{
public:
	class UEffectMain_C*                          Effect;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      SurvPlayer;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UW_EffectsPanelElement_C*               Widget;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_AddEffect) == 0x000008, "Wrong alignment on MPInGameInventory_C_AddEffect");
static_assert(sizeof(MPInGameInventory_C_AddEffect) == 0x000018, "Wrong size on MPInGameInventory_C_AddEffect");
static_assert(offsetof(MPInGameInventory_C_AddEffect, Effect) == 0x000000, "Member 'MPInGameInventory_C_AddEffect::Effect' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_AddEffect, SurvPlayer) == 0x000008, "Member 'MPInGameInventory_C_AddEffect::SurvPlayer' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_AddEffect, Widget) == 0x000010, "Member 'MPInGameInventory_C_AddEffect::Widget' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.BindLootPoint
// 0x0050 (0x0050 - 0x0000)
struct MPInGameInventory_C_BindLootPoint final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UJSI_Slot_C* Item, class UJSIContainer_C* Container)> K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMPContainerWidget_C*                   K2Node_DynamicCast_AsMPContainer_Widget;           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_BindLootPoint) == 0x000008, "Wrong alignment on MPInGameInventory_C_BindLootPoint");
static_assert(sizeof(MPInGameInventory_C_BindLootPoint) == 0x000050, "Wrong size on MPInGameInventory_C_BindLootPoint");
static_assert(offsetof(MPInGameInventory_C_BindLootPoint, Temp_int_Array_Index_Variable) == 0x000000, "Member 'MPInGameInventory_C_BindLootPoint::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BindLootPoint, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'MPInGameInventory_C_BindLootPoint::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BindLootPoint, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'MPInGameInventory_C_BindLootPoint::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BindLootPoint, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'MPInGameInventory_C_BindLootPoint::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BindLootPoint, CallFunc_GetAllChildren_ReturnValue) == 0x000020, "Member 'MPInGameInventory_C_BindLootPoint::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BindLootPoint, CallFunc_Array_Get_Item) == 0x000030, "Member 'MPInGameInventory_C_BindLootPoint::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BindLootPoint, K2Node_DynamicCast_AsMPContainer_Widget) == 0x000038, "Member 'MPInGameInventory_C_BindLootPoint::K2Node_DynamicCast_AsMPContainer_Widget' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BindLootPoint, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'MPInGameInventory_C_BindLootPoint::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BindLootPoint, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'MPInGameInventory_C_BindLootPoint::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BindLootPoint, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'MPInGameInventory_C_BindLootPoint::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.BindMainContatiner
// 0x0048 (0x0048 - 0x0000)
struct MPInGameInventory_C_BindMainContatiner final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        K2Node_DynamicCast_AsJSIContainer;                 // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_BindMainContatiner) == 0x000008, "Wrong alignment on MPInGameInventory_C_BindMainContatiner");
static_assert(sizeof(MPInGameInventory_C_BindMainContatiner) == 0x000048, "Wrong size on MPInGameInventory_C_BindMainContatiner");
static_assert(offsetof(MPInGameInventory_C_BindMainContatiner, Temp_int_Array_Index_Variable) == 0x000000, "Member 'MPInGameInventory_C_BindMainContatiner::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BindMainContatiner, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'MPInGameInventory_C_BindMainContatiner::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BindMainContatiner, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'MPInGameInventory_C_BindMainContatiner::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BindMainContatiner, CallFunc_GetAllChildren_ReturnValue) == 0x000018, "Member 'MPInGameInventory_C_BindMainContatiner::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BindMainContatiner, CallFunc_Array_Get_Item) == 0x000028, "Member 'MPInGameInventory_C_BindMainContatiner::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BindMainContatiner, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'MPInGameInventory_C_BindMainContatiner::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BindMainContatiner, K2Node_DynamicCast_AsJSIContainer) == 0x000038, "Member 'MPInGameInventory_C_BindMainContatiner::K2Node_DynamicCast_AsJSIContainer' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BindMainContatiner, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'MPInGameInventory_C_BindMainContatiner::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BindMainContatiner, CallFunc_Less_IntInt_ReturnValue) == 0x000041, "Member 'MPInGameInventory_C_BindMainContatiner::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BindMainContatiner, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'MPInGameInventory_C_BindMainContatiner::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_17_EventSelectItem__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct MPInGameInventory_C_BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_17_EventSelectItem__DelegateSignature final
{
public:
	class UJSI_Slot_C*                            Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        Container;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_17_EventSelectItem__DelegateSignature) == 0x000008, "Wrong alignment on MPInGameInventory_C_BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_17_EventSelectItem__DelegateSignature");
static_assert(sizeof(MPInGameInventory_C_BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_17_EventSelectItem__DelegateSignature) == 0x000010, "Wrong size on MPInGameInventory_C_BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_17_EventSelectItem__DelegateSignature");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_17_EventSelectItem__DelegateSignature, Item) == 0x000000, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_17_EventSelectItem__DelegateSignature::Item' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_17_EventSelectItem__DelegateSignature, Container) == 0x000008, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_17_EventSelectItem__DelegateSignature::Container' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_41_OnSlotMouseButtonDown__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct MPInGameInventory_C_BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_41_OnSlotMouseButtonDown__DelegateSignature final
{
public:
	class UJSIContainer_C*                        Container;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            SlotRef;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Button;                                            // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_41_OnSlotMouseButtonDown__DelegateSignature) == 0x000008, "Wrong alignment on MPInGameInventory_C_BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_41_OnSlotMouseButtonDown__DelegateSignature");
static_assert(sizeof(MPInGameInventory_C_BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_41_OnSlotMouseButtonDown__DelegateSignature) == 0x000028, "Wrong size on MPInGameInventory_C_BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_41_OnSlotMouseButtonDown__DelegateSignature");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_41_OnSlotMouseButtonDown__DelegateSignature, Container) == 0x000000, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_41_OnSlotMouseButtonDown__DelegateSignature::Container' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_41_OnSlotMouseButtonDown__DelegateSignature, SlotRef) == 0x000008, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_41_OnSlotMouseButtonDown__DelegateSignature::SlotRef' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_41_OnSlotMouseButtonDown__DelegateSignature, Button) == 0x000010, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_41_OnSlotMouseButtonDown__DelegateSignature::Button' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_7_DropInfo_OnItemEquippedChange__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct MPInGameInventory_C_BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_7_DropInfo_OnItemEquippedChange__DelegateSignature final
{
public:
	class UJSIContainer_C*                        FromContainer;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        ToContainer;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            SlotRef;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Equipped_;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ToPockets_;                                        // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_7_DropInfo_OnItemEquippedChange__DelegateSignature) == 0x000008, "Wrong alignment on MPInGameInventory_C_BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_7_DropInfo_OnItemEquippedChange__DelegateSignature");
static_assert(sizeof(MPInGameInventory_C_BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_7_DropInfo_OnItemEquippedChange__DelegateSignature) == 0x000020, "Wrong size on MPInGameInventory_C_BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_7_DropInfo_OnItemEquippedChange__DelegateSignature");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_7_DropInfo_OnItemEquippedChange__DelegateSignature, FromContainer) == 0x000000, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_7_DropInfo_OnItemEquippedChange__DelegateSignature::FromContainer' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_7_DropInfo_OnItemEquippedChange__DelegateSignature, ToContainer) == 0x000008, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_7_DropInfo_OnItemEquippedChange__DelegateSignature::ToContainer' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_7_DropInfo_OnItemEquippedChange__DelegateSignature, SlotRef) == 0x000010, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_7_DropInfo_OnItemEquippedChange__DelegateSignature::SlotRef' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_7_DropInfo_OnItemEquippedChange__DelegateSignature, Equipped_) == 0x000018, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_7_DropInfo_OnItemEquippedChange__DelegateSignature::Equipped_' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_7_DropInfo_OnItemEquippedChange__DelegateSignature, ToPockets_) == 0x000019, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_7_DropInfo_OnItemEquippedChange__DelegateSignature::ToPockets_' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_12_DropInfo_OnItemEquippedChange__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct MPInGameInventory_C_BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_12_DropInfo_OnItemEquippedChange__DelegateSignature final
{
public:
	class UJSIContainer_C*                        FromContainer;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        ToContainer;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            SlotRef;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Equipped_;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ToPockets_;                                        // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_12_DropInfo_OnItemEquippedChange__DelegateSignature) == 0x000008, "Wrong alignment on MPInGameInventory_C_BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_12_DropInfo_OnItemEquippedChange__DelegateSignature");
static_assert(sizeof(MPInGameInventory_C_BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_12_DropInfo_OnItemEquippedChange__DelegateSignature) == 0x000020, "Wrong size on MPInGameInventory_C_BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_12_DropInfo_OnItemEquippedChange__DelegateSignature");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_12_DropInfo_OnItemEquippedChange__DelegateSignature, FromContainer) == 0x000000, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_12_DropInfo_OnItemEquippedChange__DelegateSignature::FromContainer' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_12_DropInfo_OnItemEquippedChange__DelegateSignature, ToContainer) == 0x000008, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_12_DropInfo_OnItemEquippedChange__DelegateSignature::ToContainer' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_12_DropInfo_OnItemEquippedChange__DelegateSignature, SlotRef) == 0x000010, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_12_DropInfo_OnItemEquippedChange__DelegateSignature::SlotRef' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_12_DropInfo_OnItemEquippedChange__DelegateSignature, Equipped_) == 0x000018, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_12_DropInfo_OnItemEquippedChange__DelegateSignature::Equipped_' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_12_DropInfo_OnItemEquippedChange__DelegateSignature, ToPockets_) == 0x000019, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_12_DropInfo_OnItemEquippedChange__DelegateSignature::ToPockets_' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_18_EventSelectItem__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct MPInGameInventory_C_BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_18_EventSelectItem__DelegateSignature final
{
public:
	class UJSI_Slot_C*                            Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        Container;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_18_EventSelectItem__DelegateSignature) == 0x000008, "Wrong alignment on MPInGameInventory_C_BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_18_EventSelectItem__DelegateSignature");
static_assert(sizeof(MPInGameInventory_C_BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_18_EventSelectItem__DelegateSignature) == 0x000010, "Wrong size on MPInGameInventory_C_BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_18_EventSelectItem__DelegateSignature");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_18_EventSelectItem__DelegateSignature, Item) == 0x000000, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_18_EventSelectItem__DelegateSignature::Item' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_18_EventSelectItem__DelegateSignature, Container) == 0x000008, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_18_EventSelectItem__DelegateSignature::Container' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_42_OnSlotMouseButtonDown__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct MPInGameInventory_C_BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_42_OnSlotMouseButtonDown__DelegateSignature final
{
public:
	class UJSIContainer_C*                        Container;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            SlotRef;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Button;                                            // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_42_OnSlotMouseButtonDown__DelegateSignature) == 0x000008, "Wrong alignment on MPInGameInventory_C_BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_42_OnSlotMouseButtonDown__DelegateSignature");
static_assert(sizeof(MPInGameInventory_C_BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_42_OnSlotMouseButtonDown__DelegateSignature) == 0x000028, "Wrong size on MPInGameInventory_C_BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_42_OnSlotMouseButtonDown__DelegateSignature");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_42_OnSlotMouseButtonDown__DelegateSignature, Container) == 0x000000, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_42_OnSlotMouseButtonDown__DelegateSignature::Container' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_42_OnSlotMouseButtonDown__DelegateSignature, SlotRef) == 0x000008, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_42_OnSlotMouseButtonDown__DelegateSignature::SlotRef' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_42_OnSlotMouseButtonDown__DelegateSignature, Button) == 0x000010, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_42_OnSlotMouseButtonDown__DelegateSignature::Button' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_DropItemBackGwidget_K2Node_ComponentBoundEvent_13_ItemDropRequest__DelegateSignature
// 0x0238 (0x0238 - 0x0000)
struct MPInGameInventory_C_BndEvt__MPInGameInventory_DropItemBackGwidget_K2Node_ComponentBoundEvent_13_ItemDropRequest__DelegateSignature final
{
public:
	class UJSI_Slot_C*                            ItemRef;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             ItemInfo;                                          // 0x0008(0x0220)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0228(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        Container;                                         // 0x0230(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_BndEvt__MPInGameInventory_DropItemBackGwidget_K2Node_ComponentBoundEvent_13_ItemDropRequest__DelegateSignature) == 0x000008, "Wrong alignment on MPInGameInventory_C_BndEvt__MPInGameInventory_DropItemBackGwidget_K2Node_ComponentBoundEvent_13_ItemDropRequest__DelegateSignature");
static_assert(sizeof(MPInGameInventory_C_BndEvt__MPInGameInventory_DropItemBackGwidget_K2Node_ComponentBoundEvent_13_ItemDropRequest__DelegateSignature) == 0x000238, "Wrong size on MPInGameInventory_C_BndEvt__MPInGameInventory_DropItemBackGwidget_K2Node_ComponentBoundEvent_13_ItemDropRequest__DelegateSignature");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_DropItemBackGwidget_K2Node_ComponentBoundEvent_13_ItemDropRequest__DelegateSignature, ItemRef) == 0x000000, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_DropItemBackGwidget_K2Node_ComponentBoundEvent_13_ItemDropRequest__DelegateSignature::ItemRef' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_DropItemBackGwidget_K2Node_ComponentBoundEvent_13_ItemDropRequest__DelegateSignature, ItemInfo) == 0x000008, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_DropItemBackGwidget_K2Node_ComponentBoundEvent_13_ItemDropRequest__DelegateSignature::ItemInfo' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_DropItemBackGwidget_K2Node_ComponentBoundEvent_13_ItemDropRequest__DelegateSignature, Count) == 0x000228, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_DropItemBackGwidget_K2Node_ComponentBoundEvent_13_ItemDropRequest__DelegateSignature::Count' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_DropItemBackGwidget_K2Node_ComponentBoundEvent_13_ItemDropRequest__DelegateSignature, Container) == 0x000230, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_DropItemBackGwidget_K2Node_ComponentBoundEvent_13_ItemDropRequest__DelegateSignature::Container' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_DropItemBackGwidget_K2Node_ComponentBoundEvent_36_OnDropDeniedInTutorial__DelegateSignature
// 0x0002 (0x0002 - 0x0000)
struct MPInGameInventory_C_BndEvt__MPInGameInventory_DropItemBackGwidget_K2Node_ComponentBoundEvent_36_OnDropDeniedInTutorial__DelegateSignature final
{
public:
	bool                                          TutorReason;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsProtectiveCase;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_BndEvt__MPInGameInventory_DropItemBackGwidget_K2Node_ComponentBoundEvent_36_OnDropDeniedInTutorial__DelegateSignature) == 0x000001, "Wrong alignment on MPInGameInventory_C_BndEvt__MPInGameInventory_DropItemBackGwidget_K2Node_ComponentBoundEvent_36_OnDropDeniedInTutorial__DelegateSignature");
static_assert(sizeof(MPInGameInventory_C_BndEvt__MPInGameInventory_DropItemBackGwidget_K2Node_ComponentBoundEvent_36_OnDropDeniedInTutorial__DelegateSignature) == 0x000002, "Wrong size on MPInGameInventory_C_BndEvt__MPInGameInventory_DropItemBackGwidget_K2Node_ComponentBoundEvent_36_OnDropDeniedInTutorial__DelegateSignature");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_DropItemBackGwidget_K2Node_ComponentBoundEvent_36_OnDropDeniedInTutorial__DelegateSignature, TutorReason) == 0x000000, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_DropItemBackGwidget_K2Node_ComponentBoundEvent_36_OnDropDeniedInTutorial__DelegateSignature::TutorReason' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_DropItemBackGwidget_K2Node_ComponentBoundEvent_36_OnDropDeniedInTutorial__DelegateSignature, IsProtectiveCase) == 0x000001, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_DropItemBackGwidget_K2Node_ComponentBoundEvent_36_OnDropDeniedInTutorial__DelegateSignature::IsProtectiveCase' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_16_EventSelectItem__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct MPInGameInventory_C_BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_16_EventSelectItem__DelegateSignature final
{
public:
	class UJSI_Slot_C*                            Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        Container;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_16_EventSelectItem__DelegateSignature) == 0x000008, "Wrong alignment on MPInGameInventory_C_BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_16_EventSelectItem__DelegateSignature");
static_assert(sizeof(MPInGameInventory_C_BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_16_EventSelectItem__DelegateSignature) == 0x000010, "Wrong size on MPInGameInventory_C_BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_16_EventSelectItem__DelegateSignature");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_16_EventSelectItem__DelegateSignature, Item) == 0x000000, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_16_EventSelectItem__DelegateSignature::Item' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_16_EventSelectItem__DelegateSignature, Container) == 0x000008, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_16_EventSelectItem__DelegateSignature::Container' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_43_OnSlotMouseButtonDown__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct MPInGameInventory_C_BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_43_OnSlotMouseButtonDown__DelegateSignature final
{
public:
	class UJSIContainer_C*                        Container;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            SlotRef;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Button;                                            // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_43_OnSlotMouseButtonDown__DelegateSignature) == 0x000008, "Wrong alignment on MPInGameInventory_C_BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_43_OnSlotMouseButtonDown__DelegateSignature");
static_assert(sizeof(MPInGameInventory_C_BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_43_OnSlotMouseButtonDown__DelegateSignature) == 0x000028, "Wrong size on MPInGameInventory_C_BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_43_OnSlotMouseButtonDown__DelegateSignature");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_43_OnSlotMouseButtonDown__DelegateSignature, Container) == 0x000000, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_43_OnSlotMouseButtonDown__DelegateSignature::Container' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_43_OnSlotMouseButtonDown__DelegateSignature, SlotRef) == 0x000008, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_43_OnSlotMouseButtonDown__DelegateSignature::SlotRef' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_43_OnSlotMouseButtonDown__DelegateSignature, Button) == 0x000010, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_43_OnSlotMouseButtonDown__DelegateSignature::Button' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_5_DropInfo_OnItemEquippedChange__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct MPInGameInventory_C_BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_5_DropInfo_OnItemEquippedChange__DelegateSignature final
{
public:
	class UJSIContainer_C*                        FromContainer;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        ToContainer;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            SlotRef;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Equipped_;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ToPockets_;                                        // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_5_DropInfo_OnItemEquippedChange__DelegateSignature) == 0x000008, "Wrong alignment on MPInGameInventory_C_BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_5_DropInfo_OnItemEquippedChange__DelegateSignature");
static_assert(sizeof(MPInGameInventory_C_BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_5_DropInfo_OnItemEquippedChange__DelegateSignature) == 0x000020, "Wrong size on MPInGameInventory_C_BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_5_DropInfo_OnItemEquippedChange__DelegateSignature");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_5_DropInfo_OnItemEquippedChange__DelegateSignature, FromContainer) == 0x000000, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_5_DropInfo_OnItemEquippedChange__DelegateSignature::FromContainer' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_5_DropInfo_OnItemEquippedChange__DelegateSignature, ToContainer) == 0x000008, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_5_DropInfo_OnItemEquippedChange__DelegateSignature::ToContainer' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_5_DropInfo_OnItemEquippedChange__DelegateSignature, SlotRef) == 0x000010, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_5_DropInfo_OnItemEquippedChange__DelegateSignature::SlotRef' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_5_DropInfo_OnItemEquippedChange__DelegateSignature, Equipped_) == 0x000018, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_5_DropInfo_OnItemEquippedChange__DelegateSignature::Equipped_' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_5_DropInfo_OnItemEquippedChange__DelegateSignature, ToPockets_) == 0x000019, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_5_DropInfo_OnItemEquippedChange__DelegateSignature::ToPockets_' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_20_EventSelectItem__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct MPInGameInventory_C_BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_20_EventSelectItem__DelegateSignature final
{
public:
	class UJSI_Slot_C*                            Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        Container;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_20_EventSelectItem__DelegateSignature) == 0x000008, "Wrong alignment on MPInGameInventory_C_BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_20_EventSelectItem__DelegateSignature");
static_assert(sizeof(MPInGameInventory_C_BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_20_EventSelectItem__DelegateSignature) == 0x000010, "Wrong size on MPInGameInventory_C_BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_20_EventSelectItem__DelegateSignature");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_20_EventSelectItem__DelegateSignature, Item) == 0x000000, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_20_EventSelectItem__DelegateSignature::Item' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_20_EventSelectItem__DelegateSignature, Container) == 0x000008, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_20_EventSelectItem__DelegateSignature::Container' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_44_OnSlotMouseButtonDown__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct MPInGameInventory_C_BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_44_OnSlotMouseButtonDown__DelegateSignature final
{
public:
	class UJSIContainer_C*                        Container;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            SlotRef;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Button;                                            // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_44_OnSlotMouseButtonDown__DelegateSignature) == 0x000008, "Wrong alignment on MPInGameInventory_C_BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_44_OnSlotMouseButtonDown__DelegateSignature");
static_assert(sizeof(MPInGameInventory_C_BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_44_OnSlotMouseButtonDown__DelegateSignature) == 0x000028, "Wrong size on MPInGameInventory_C_BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_44_OnSlotMouseButtonDown__DelegateSignature");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_44_OnSlotMouseButtonDown__DelegateSignature, Container) == 0x000000, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_44_OnSlotMouseButtonDown__DelegateSignature::Container' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_44_OnSlotMouseButtonDown__DelegateSignature, SlotRef) == 0x000008, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_44_OnSlotMouseButtonDown__DelegateSignature::SlotRef' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_44_OnSlotMouseButtonDown__DelegateSignature, Button) == 0x000010, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_44_OnSlotMouseButtonDown__DelegateSignature::Button' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_8_DropInfo_OnItemEquippedChange__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct MPInGameInventory_C_BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_8_DropInfo_OnItemEquippedChange__DelegateSignature final
{
public:
	class UJSIContainer_C*                        FromContainer;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        ToContainer;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            SlotRef;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Equipped_;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ToPockets_;                                        // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_8_DropInfo_OnItemEquippedChange__DelegateSignature) == 0x000008, "Wrong alignment on MPInGameInventory_C_BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_8_DropInfo_OnItemEquippedChange__DelegateSignature");
static_assert(sizeof(MPInGameInventory_C_BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_8_DropInfo_OnItemEquippedChange__DelegateSignature) == 0x000020, "Wrong size on MPInGameInventory_C_BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_8_DropInfo_OnItemEquippedChange__DelegateSignature");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_8_DropInfo_OnItemEquippedChange__DelegateSignature, FromContainer) == 0x000000, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_8_DropInfo_OnItemEquippedChange__DelegateSignature::FromContainer' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_8_DropInfo_OnItemEquippedChange__DelegateSignature, ToContainer) == 0x000008, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_8_DropInfo_OnItemEquippedChange__DelegateSignature::ToContainer' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_8_DropInfo_OnItemEquippedChange__DelegateSignature, SlotRef) == 0x000010, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_8_DropInfo_OnItemEquippedChange__DelegateSignature::SlotRef' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_8_DropInfo_OnItemEquippedChange__DelegateSignature, Equipped_) == 0x000018, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_8_DropInfo_OnItemEquippedChange__DelegateSignature::Equipped_' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_8_DropInfo_OnItemEquippedChange__DelegateSignature, ToPockets_) == 0x000019, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_8_DropInfo_OnItemEquippedChange__DelegateSignature::ToPockets_' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_15_EventSelectItem__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct MPInGameInventory_C_BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_15_EventSelectItem__DelegateSignature final
{
public:
	class UJSI_Slot_C*                            Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        Container;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_15_EventSelectItem__DelegateSignature) == 0x000008, "Wrong alignment on MPInGameInventory_C_BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_15_EventSelectItem__DelegateSignature");
static_assert(sizeof(MPInGameInventory_C_BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_15_EventSelectItem__DelegateSignature) == 0x000010, "Wrong size on MPInGameInventory_C_BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_15_EventSelectItem__DelegateSignature");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_15_EventSelectItem__DelegateSignature, Item) == 0x000000, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_15_EventSelectItem__DelegateSignature::Item' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_15_EventSelectItem__DelegateSignature, Container) == 0x000008, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_15_EventSelectItem__DelegateSignature::Container' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_45_OnSlotMouseButtonDown__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct MPInGameInventory_C_BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_45_OnSlotMouseButtonDown__DelegateSignature final
{
public:
	class UJSIContainer_C*                        Container;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            SlotRef;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Button;                                            // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_45_OnSlotMouseButtonDown__DelegateSignature) == 0x000008, "Wrong alignment on MPInGameInventory_C_BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_45_OnSlotMouseButtonDown__DelegateSignature");
static_assert(sizeof(MPInGameInventory_C_BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_45_OnSlotMouseButtonDown__DelegateSignature) == 0x000028, "Wrong size on MPInGameInventory_C_BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_45_OnSlotMouseButtonDown__DelegateSignature");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_45_OnSlotMouseButtonDown__DelegateSignature, Container) == 0x000000, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_45_OnSlotMouseButtonDown__DelegateSignature::Container' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_45_OnSlotMouseButtonDown__DelegateSignature, SlotRef) == 0x000008, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_45_OnSlotMouseButtonDown__DelegateSignature::SlotRef' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_45_OnSlotMouseButtonDown__DelegateSignature, Button) == 0x000010, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_45_OnSlotMouseButtonDown__DelegateSignature::Button' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_4_DropInfo_OnItemEquippedChange__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct MPInGameInventory_C_BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_4_DropInfo_OnItemEquippedChange__DelegateSignature final
{
public:
	class UJSIContainer_C*                        FromContainer;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        ToContainer;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            SlotRef;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Equipped_;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ToPockets_;                                        // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_4_DropInfo_OnItemEquippedChange__DelegateSignature) == 0x000008, "Wrong alignment on MPInGameInventory_C_BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_4_DropInfo_OnItemEquippedChange__DelegateSignature");
static_assert(sizeof(MPInGameInventory_C_BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_4_DropInfo_OnItemEquippedChange__DelegateSignature) == 0x000020, "Wrong size on MPInGameInventory_C_BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_4_DropInfo_OnItemEquippedChange__DelegateSignature");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_4_DropInfo_OnItemEquippedChange__DelegateSignature, FromContainer) == 0x000000, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_4_DropInfo_OnItemEquippedChange__DelegateSignature::FromContainer' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_4_DropInfo_OnItemEquippedChange__DelegateSignature, ToContainer) == 0x000008, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_4_DropInfo_OnItemEquippedChange__DelegateSignature::ToContainer' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_4_DropInfo_OnItemEquippedChange__DelegateSignature, SlotRef) == 0x000010, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_4_DropInfo_OnItemEquippedChange__DelegateSignature::SlotRef' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_4_DropInfo_OnItemEquippedChange__DelegateSignature, Equipped_) == 0x000018, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_4_DropInfo_OnItemEquippedChange__DelegateSignature::Equipped_' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_4_DropInfo_OnItemEquippedChange__DelegateSignature, ToPockets_) == 0x000019, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_4_DropInfo_OnItemEquippedChange__DelegateSignature::ToPockets_' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_MeleeContainer_K2Node_ComponentBoundEvent_26_EventSelectItem__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct MPInGameInventory_C_BndEvt__MPInGameInventory_MeleeContainer_K2Node_ComponentBoundEvent_26_EventSelectItem__DelegateSignature final
{
public:
	class UJSI_Slot_C*                            Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        Container;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_BndEvt__MPInGameInventory_MeleeContainer_K2Node_ComponentBoundEvent_26_EventSelectItem__DelegateSignature) == 0x000008, "Wrong alignment on MPInGameInventory_C_BndEvt__MPInGameInventory_MeleeContainer_K2Node_ComponentBoundEvent_26_EventSelectItem__DelegateSignature");
static_assert(sizeof(MPInGameInventory_C_BndEvt__MPInGameInventory_MeleeContainer_K2Node_ComponentBoundEvent_26_EventSelectItem__DelegateSignature) == 0x000010, "Wrong size on MPInGameInventory_C_BndEvt__MPInGameInventory_MeleeContainer_K2Node_ComponentBoundEvent_26_EventSelectItem__DelegateSignature");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_MeleeContainer_K2Node_ComponentBoundEvent_26_EventSelectItem__DelegateSignature, Item) == 0x000000, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_MeleeContainer_K2Node_ComponentBoundEvent_26_EventSelectItem__DelegateSignature::Item' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_MeleeContainer_K2Node_ComponentBoundEvent_26_EventSelectItem__DelegateSignature, Container) == 0x000008, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_MeleeContainer_K2Node_ComponentBoundEvent_26_EventSelectItem__DelegateSignature::Container' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_MeleeContainer_K2Node_ComponentBoundEvent_3_DropInfo_OnItemEquippedChange__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct MPInGameInventory_C_BndEvt__MPInGameInventory_MeleeContainer_K2Node_ComponentBoundEvent_3_DropInfo_OnItemEquippedChange__DelegateSignature final
{
public:
	class UJSIContainer_C*                        FromContainer;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        ToContainer;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            SlotRef;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Equipped_;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ToPockets_;                                        // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_BndEvt__MPInGameInventory_MeleeContainer_K2Node_ComponentBoundEvent_3_DropInfo_OnItemEquippedChange__DelegateSignature) == 0x000008, "Wrong alignment on MPInGameInventory_C_BndEvt__MPInGameInventory_MeleeContainer_K2Node_ComponentBoundEvent_3_DropInfo_OnItemEquippedChange__DelegateSignature");
static_assert(sizeof(MPInGameInventory_C_BndEvt__MPInGameInventory_MeleeContainer_K2Node_ComponentBoundEvent_3_DropInfo_OnItemEquippedChange__DelegateSignature) == 0x000020, "Wrong size on MPInGameInventory_C_BndEvt__MPInGameInventory_MeleeContainer_K2Node_ComponentBoundEvent_3_DropInfo_OnItemEquippedChange__DelegateSignature");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_MeleeContainer_K2Node_ComponentBoundEvent_3_DropInfo_OnItemEquippedChange__DelegateSignature, FromContainer) == 0x000000, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_MeleeContainer_K2Node_ComponentBoundEvent_3_DropInfo_OnItemEquippedChange__DelegateSignature::FromContainer' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_MeleeContainer_K2Node_ComponentBoundEvent_3_DropInfo_OnItemEquippedChange__DelegateSignature, ToContainer) == 0x000008, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_MeleeContainer_K2Node_ComponentBoundEvent_3_DropInfo_OnItemEquippedChange__DelegateSignature::ToContainer' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_MeleeContainer_K2Node_ComponentBoundEvent_3_DropInfo_OnItemEquippedChange__DelegateSignature, SlotRef) == 0x000010, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_MeleeContainer_K2Node_ComponentBoundEvent_3_DropInfo_OnItemEquippedChange__DelegateSignature::SlotRef' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_MeleeContainer_K2Node_ComponentBoundEvent_3_DropInfo_OnItemEquippedChange__DelegateSignature, Equipped_) == 0x000018, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_MeleeContainer_K2Node_ComponentBoundEvent_3_DropInfo_OnItemEquippedChange__DelegateSignature::Equipped_' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_MeleeContainer_K2Node_ComponentBoundEvent_3_DropInfo_OnItemEquippedChange__DelegateSignature, ToPockets_) == 0x000019, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_MeleeContainer_K2Node_ComponentBoundEvent_3_DropInfo_OnItemEquippedChange__DelegateSignature::ToPockets_' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_22_EventSelectItem__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct MPInGameInventory_C_BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_22_EventSelectItem__DelegateSignature final
{
public:
	class UJSI_Slot_C*                            Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        Container;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_22_EventSelectItem__DelegateSignature) == 0x000008, "Wrong alignment on MPInGameInventory_C_BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_22_EventSelectItem__DelegateSignature");
static_assert(sizeof(MPInGameInventory_C_BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_22_EventSelectItem__DelegateSignature) == 0x000010, "Wrong size on MPInGameInventory_C_BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_22_EventSelectItem__DelegateSignature");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_22_EventSelectItem__DelegateSignature, Item) == 0x000000, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_22_EventSelectItem__DelegateSignature::Item' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_22_EventSelectItem__DelegateSignature, Container) == 0x000008, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_22_EventSelectItem__DelegateSignature::Container' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_46_OnSlotMouseButtonDown__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct MPInGameInventory_C_BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_46_OnSlotMouseButtonDown__DelegateSignature final
{
public:
	class UJSIContainer_C*                        Container;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            SlotRef;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Button;                                            // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_46_OnSlotMouseButtonDown__DelegateSignature) == 0x000008, "Wrong alignment on MPInGameInventory_C_BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_46_OnSlotMouseButtonDown__DelegateSignature");
static_assert(sizeof(MPInGameInventory_C_BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_46_OnSlotMouseButtonDown__DelegateSignature) == 0x000028, "Wrong size on MPInGameInventory_C_BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_46_OnSlotMouseButtonDown__DelegateSignature");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_46_OnSlotMouseButtonDown__DelegateSignature, Container) == 0x000000, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_46_OnSlotMouseButtonDown__DelegateSignature::Container' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_46_OnSlotMouseButtonDown__DelegateSignature, SlotRef) == 0x000008, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_46_OnSlotMouseButtonDown__DelegateSignature::SlotRef' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_46_OnSlotMouseButtonDown__DelegateSignature, Button) == 0x000010, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_46_OnSlotMouseButtonDown__DelegateSignature::Button' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_9_DropInfo_OnItemEquippedChange__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct MPInGameInventory_C_BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_9_DropInfo_OnItemEquippedChange__DelegateSignature final
{
public:
	class UJSIContainer_C*                        FromContainer;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        ToContainer;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            SlotRef;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Equipped_;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ToPockets_;                                        // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_9_DropInfo_OnItemEquippedChange__DelegateSignature) == 0x000008, "Wrong alignment on MPInGameInventory_C_BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_9_DropInfo_OnItemEquippedChange__DelegateSignature");
static_assert(sizeof(MPInGameInventory_C_BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_9_DropInfo_OnItemEquippedChange__DelegateSignature) == 0x000020, "Wrong size on MPInGameInventory_C_BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_9_DropInfo_OnItemEquippedChange__DelegateSignature");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_9_DropInfo_OnItemEquippedChange__DelegateSignature, FromContainer) == 0x000000, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_9_DropInfo_OnItemEquippedChange__DelegateSignature::FromContainer' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_9_DropInfo_OnItemEquippedChange__DelegateSignature, ToContainer) == 0x000008, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_9_DropInfo_OnItemEquippedChange__DelegateSignature::ToContainer' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_9_DropInfo_OnItemEquippedChange__DelegateSignature, SlotRef) == 0x000010, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_9_DropInfo_OnItemEquippedChange__DelegateSignature::SlotRef' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_9_DropInfo_OnItemEquippedChange__DelegateSignature, Equipped_) == 0x000018, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_9_DropInfo_OnItemEquippedChange__DelegateSignature::Equipped_' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_9_DropInfo_OnItemEquippedChange__DelegateSignature, ToPockets_) == 0x000019, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_9_DropInfo_OnItemEquippedChange__DelegateSignature::ToPockets_' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_PistolWContainer_K2Node_ComponentBoundEvent_11_DropInfo_OnItemEquippedChange__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct MPInGameInventory_C_BndEvt__MPInGameInventory_PistolWContainer_K2Node_ComponentBoundEvent_11_DropInfo_OnItemEquippedChange__DelegateSignature final
{
public:
	class UJSIContainer_C*                        FromContainer;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        ToContainer;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            SlotRef;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Equipped_;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ToPockets_;                                        // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_BndEvt__MPInGameInventory_PistolWContainer_K2Node_ComponentBoundEvent_11_DropInfo_OnItemEquippedChange__DelegateSignature) == 0x000008, "Wrong alignment on MPInGameInventory_C_BndEvt__MPInGameInventory_PistolWContainer_K2Node_ComponentBoundEvent_11_DropInfo_OnItemEquippedChange__DelegateSignature");
static_assert(sizeof(MPInGameInventory_C_BndEvt__MPInGameInventory_PistolWContainer_K2Node_ComponentBoundEvent_11_DropInfo_OnItemEquippedChange__DelegateSignature) == 0x000020, "Wrong size on MPInGameInventory_C_BndEvt__MPInGameInventory_PistolWContainer_K2Node_ComponentBoundEvent_11_DropInfo_OnItemEquippedChange__DelegateSignature");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_PistolWContainer_K2Node_ComponentBoundEvent_11_DropInfo_OnItemEquippedChange__DelegateSignature, FromContainer) == 0x000000, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_PistolWContainer_K2Node_ComponentBoundEvent_11_DropInfo_OnItemEquippedChange__DelegateSignature::FromContainer' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_PistolWContainer_K2Node_ComponentBoundEvent_11_DropInfo_OnItemEquippedChange__DelegateSignature, ToContainer) == 0x000008, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_PistolWContainer_K2Node_ComponentBoundEvent_11_DropInfo_OnItemEquippedChange__DelegateSignature::ToContainer' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_PistolWContainer_K2Node_ComponentBoundEvent_11_DropInfo_OnItemEquippedChange__DelegateSignature, SlotRef) == 0x000010, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_PistolWContainer_K2Node_ComponentBoundEvent_11_DropInfo_OnItemEquippedChange__DelegateSignature::SlotRef' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_PistolWContainer_K2Node_ComponentBoundEvent_11_DropInfo_OnItemEquippedChange__DelegateSignature, Equipped_) == 0x000018, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_PistolWContainer_K2Node_ComponentBoundEvent_11_DropInfo_OnItemEquippedChange__DelegateSignature::Equipped_' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_PistolWContainer_K2Node_ComponentBoundEvent_11_DropInfo_OnItemEquippedChange__DelegateSignature, ToPockets_) == 0x000019, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_PistolWContainer_K2Node_ComponentBoundEvent_11_DropInfo_OnItemEquippedChange__DelegateSignature::ToPockets_' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_PistolWContainer_K2Node_ComponentBoundEvent_24_EventSelectItem__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct MPInGameInventory_C_BndEvt__MPInGameInventory_PistolWContainer_K2Node_ComponentBoundEvent_24_EventSelectItem__DelegateSignature final
{
public:
	class UJSI_Slot_C*                            Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        Container;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_BndEvt__MPInGameInventory_PistolWContainer_K2Node_ComponentBoundEvent_24_EventSelectItem__DelegateSignature) == 0x000008, "Wrong alignment on MPInGameInventory_C_BndEvt__MPInGameInventory_PistolWContainer_K2Node_ComponentBoundEvent_24_EventSelectItem__DelegateSignature");
static_assert(sizeof(MPInGameInventory_C_BndEvt__MPInGameInventory_PistolWContainer_K2Node_ComponentBoundEvent_24_EventSelectItem__DelegateSignature) == 0x000010, "Wrong size on MPInGameInventory_C_BndEvt__MPInGameInventory_PistolWContainer_K2Node_ComponentBoundEvent_24_EventSelectItem__DelegateSignature");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_PistolWContainer_K2Node_ComponentBoundEvent_24_EventSelectItem__DelegateSignature, Item) == 0x000000, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_PistolWContainer_K2Node_ComponentBoundEvent_24_EventSelectItem__DelegateSignature::Item' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_PistolWContainer_K2Node_ComponentBoundEvent_24_EventSelectItem__DelegateSignature, Container) == 0x000008, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_PistolWContainer_K2Node_ComponentBoundEvent_24_EventSelectItem__DelegateSignature::Container' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_1_DropInfo_OnItemEquippedChange__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct MPInGameInventory_C_BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_1_DropInfo_OnItemEquippedChange__DelegateSignature final
{
public:
	class UJSIContainer_C*                        FromContainer;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        ToContainer;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            SlotRef;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Equipped_;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ToPockets_;                                        // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_1_DropInfo_OnItemEquippedChange__DelegateSignature) == 0x000008, "Wrong alignment on MPInGameInventory_C_BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_1_DropInfo_OnItemEquippedChange__DelegateSignature");
static_assert(sizeof(MPInGameInventory_C_BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_1_DropInfo_OnItemEquippedChange__DelegateSignature) == 0x000020, "Wrong size on MPInGameInventory_C_BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_1_DropInfo_OnItemEquippedChange__DelegateSignature");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_1_DropInfo_OnItemEquippedChange__DelegateSignature, FromContainer) == 0x000000, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_1_DropInfo_OnItemEquippedChange__DelegateSignature::FromContainer' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_1_DropInfo_OnItemEquippedChange__DelegateSignature, ToContainer) == 0x000008, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_1_DropInfo_OnItemEquippedChange__DelegateSignature::ToContainer' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_1_DropInfo_OnItemEquippedChange__DelegateSignature, SlotRef) == 0x000010, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_1_DropInfo_OnItemEquippedChange__DelegateSignature::SlotRef' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_1_DropInfo_OnItemEquippedChange__DelegateSignature, Equipped_) == 0x000018, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_1_DropInfo_OnItemEquippedChange__DelegateSignature::Equipped_' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_1_DropInfo_OnItemEquippedChange__DelegateSignature, ToPockets_) == 0x000019, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_1_DropInfo_OnItemEquippedChange__DelegateSignature::ToPockets_' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_23_EventSelectItem__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct MPInGameInventory_C_BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_23_EventSelectItem__DelegateSignature final
{
public:
	class UJSI_Slot_C*                            Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        Container;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_23_EventSelectItem__DelegateSignature) == 0x000008, "Wrong alignment on MPInGameInventory_C_BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_23_EventSelectItem__DelegateSignature");
static_assert(sizeof(MPInGameInventory_C_BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_23_EventSelectItem__DelegateSignature) == 0x000010, "Wrong size on MPInGameInventory_C_BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_23_EventSelectItem__DelegateSignature");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_23_EventSelectItem__DelegateSignature, Item) == 0x000000, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_23_EventSelectItem__DelegateSignature::Item' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_23_EventSelectItem__DelegateSignature, Container) == 0x000008, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_23_EventSelectItem__DelegateSignature::Container' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_47_OnSlotMouseButtonDown__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct MPInGameInventory_C_BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_47_OnSlotMouseButtonDown__DelegateSignature final
{
public:
	class UJSIContainer_C*                        Container;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            SlotRef;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Button;                                            // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_47_OnSlotMouseButtonDown__DelegateSignature) == 0x000008, "Wrong alignment on MPInGameInventory_C_BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_47_OnSlotMouseButtonDown__DelegateSignature");
static_assert(sizeof(MPInGameInventory_C_BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_47_OnSlotMouseButtonDown__DelegateSignature) == 0x000028, "Wrong size on MPInGameInventory_C_BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_47_OnSlotMouseButtonDown__DelegateSignature");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_47_OnSlotMouseButtonDown__DelegateSignature, Container) == 0x000000, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_47_OnSlotMouseButtonDown__DelegateSignature::Container' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_47_OnSlotMouseButtonDown__DelegateSignature, SlotRef) == 0x000008, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_47_OnSlotMouseButtonDown__DelegateSignature::SlotRef' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_47_OnSlotMouseButtonDown__DelegateSignature, Button) == 0x000010, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_47_OnSlotMouseButtonDown__DelegateSignature::Button' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_ScrollBox_Items_K2Node_ComponentBoundEvent_29_OnUserScrolledEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct MPInGameInventory_C_BndEvt__MPInGameInventory_ScrollBox_Items_K2Node_ComponentBoundEvent_29_OnUserScrolledEvent__DelegateSignature final
{
public:
	float                                         CurrentOffset;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_BndEvt__MPInGameInventory_ScrollBox_Items_K2Node_ComponentBoundEvent_29_OnUserScrolledEvent__DelegateSignature) == 0x000004, "Wrong alignment on MPInGameInventory_C_BndEvt__MPInGameInventory_ScrollBox_Items_K2Node_ComponentBoundEvent_29_OnUserScrolledEvent__DelegateSignature");
static_assert(sizeof(MPInGameInventory_C_BndEvt__MPInGameInventory_ScrollBox_Items_K2Node_ComponentBoundEvent_29_OnUserScrolledEvent__DelegateSignature) == 0x000004, "Wrong size on MPInGameInventory_C_BndEvt__MPInGameInventory_ScrollBox_Items_K2Node_ComponentBoundEvent_29_OnUserScrolledEvent__DelegateSignature");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_ScrollBox_Items_K2Node_ComponentBoundEvent_29_OnUserScrolledEvent__DelegateSignature, CurrentOffset) == 0x000000, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_ScrollBox_Items_K2Node_ComponentBoundEvent_29_OnUserScrolledEvent__DelegateSignature::CurrentOffset' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_ScrollBox_Loot_K2Node_ComponentBoundEvent_39_OnUserScrolledEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct MPInGameInventory_C_BndEvt__MPInGameInventory_ScrollBox_Loot_K2Node_ComponentBoundEvent_39_OnUserScrolledEvent__DelegateSignature final
{
public:
	float                                         CurrentOffset;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_BndEvt__MPInGameInventory_ScrollBox_Loot_K2Node_ComponentBoundEvent_39_OnUserScrolledEvent__DelegateSignature) == 0x000004, "Wrong alignment on MPInGameInventory_C_BndEvt__MPInGameInventory_ScrollBox_Loot_K2Node_ComponentBoundEvent_39_OnUserScrolledEvent__DelegateSignature");
static_assert(sizeof(MPInGameInventory_C_BndEvt__MPInGameInventory_ScrollBox_Loot_K2Node_ComponentBoundEvent_39_OnUserScrolledEvent__DelegateSignature) == 0x000004, "Wrong size on MPInGameInventory_C_BndEvt__MPInGameInventory_ScrollBox_Loot_K2Node_ComponentBoundEvent_39_OnUserScrolledEvent__DelegateSignature");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_ScrollBox_Loot_K2Node_ComponentBoundEvent_39_OnUserScrolledEvent__DelegateSignature, CurrentOffset) == 0x000000, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_ScrollBox_Loot_K2Node_ComponentBoundEvent_39_OnUserScrolledEvent__DelegateSignature::CurrentOffset' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_25_EventSelectItem__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct MPInGameInventory_C_BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_25_EventSelectItem__DelegateSignature final
{
public:
	class UJSI_Slot_C*                            Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        Container;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_25_EventSelectItem__DelegateSignature) == 0x000008, "Wrong alignment on MPInGameInventory_C_BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_25_EventSelectItem__DelegateSignature");
static_assert(sizeof(MPInGameInventory_C_BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_25_EventSelectItem__DelegateSignature) == 0x000010, "Wrong size on MPInGameInventory_C_BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_25_EventSelectItem__DelegateSignature");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_25_EventSelectItem__DelegateSignature, Item) == 0x000000, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_25_EventSelectItem__DelegateSignature::Item' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_25_EventSelectItem__DelegateSignature, Container) == 0x000008, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_25_EventSelectItem__DelegateSignature::Container' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_2_DropInfo_OnItemEquippedChange__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct MPInGameInventory_C_BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_2_DropInfo_OnItemEquippedChange__DelegateSignature final
{
public:
	class UJSIContainer_C*                        FromContainer;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        ToContainer;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            SlotRef;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Equipped_;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ToPockets_;                                        // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_2_DropInfo_OnItemEquippedChange__DelegateSignature) == 0x000008, "Wrong alignment on MPInGameInventory_C_BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_2_DropInfo_OnItemEquippedChange__DelegateSignature");
static_assert(sizeof(MPInGameInventory_C_BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_2_DropInfo_OnItemEquippedChange__DelegateSignature) == 0x000020, "Wrong size on MPInGameInventory_C_BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_2_DropInfo_OnItemEquippedChange__DelegateSignature");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_2_DropInfo_OnItemEquippedChange__DelegateSignature, FromContainer) == 0x000000, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_2_DropInfo_OnItemEquippedChange__DelegateSignature::FromContainer' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_2_DropInfo_OnItemEquippedChange__DelegateSignature, ToContainer) == 0x000008, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_2_DropInfo_OnItemEquippedChange__DelegateSignature::ToContainer' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_2_DropInfo_OnItemEquippedChange__DelegateSignature, SlotRef) == 0x000010, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_2_DropInfo_OnItemEquippedChange__DelegateSignature::SlotRef' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_2_DropInfo_OnItemEquippedChange__DelegateSignature, Equipped_) == 0x000018, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_2_DropInfo_OnItemEquippedChange__DelegateSignature::Equipped_' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_2_DropInfo_OnItemEquippedChange__DelegateSignature, ToPockets_) == 0x000019, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_2_DropInfo_OnItemEquippedChange__DelegateSignature::ToPockets_' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_48_OnSlotMouseButtonDown__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct MPInGameInventory_C_BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_48_OnSlotMouseButtonDown__DelegateSignature final
{
public:
	class UJSIContainer_C*                        Container;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            SlotRef;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Button;                                            // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_48_OnSlotMouseButtonDown__DelegateSignature) == 0x000008, "Wrong alignment on MPInGameInventory_C_BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_48_OnSlotMouseButtonDown__DelegateSignature");
static_assert(sizeof(MPInGameInventory_C_BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_48_OnSlotMouseButtonDown__DelegateSignature) == 0x000028, "Wrong size on MPInGameInventory_C_BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_48_OnSlotMouseButtonDown__DelegateSignature");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_48_OnSlotMouseButtonDown__DelegateSignature, Container) == 0x000000, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_48_OnSlotMouseButtonDown__DelegateSignature::Container' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_48_OnSlotMouseButtonDown__DelegateSignature, SlotRef) == 0x000008, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_48_OnSlotMouseButtonDown__DelegateSignature::SlotRef' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_48_OnSlotMouseButtonDown__DelegateSignature, Button) == 0x000010, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_48_OnSlotMouseButtonDown__DelegateSignature::Button' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_19_EventSelectItem__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct MPInGameInventory_C_BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_19_EventSelectItem__DelegateSignature final
{
public:
	class UJSI_Slot_C*                            Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        Container;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_19_EventSelectItem__DelegateSignature) == 0x000008, "Wrong alignment on MPInGameInventory_C_BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_19_EventSelectItem__DelegateSignature");
static_assert(sizeof(MPInGameInventory_C_BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_19_EventSelectItem__DelegateSignature) == 0x000010, "Wrong size on MPInGameInventory_C_BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_19_EventSelectItem__DelegateSignature");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_19_EventSelectItem__DelegateSignature, Item) == 0x000000, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_19_EventSelectItem__DelegateSignature::Item' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_19_EventSelectItem__DelegateSignature, Container) == 0x000008, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_19_EventSelectItem__DelegateSignature::Container' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_40_OnSlotMouseButtonDown__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct MPInGameInventory_C_BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_40_OnSlotMouseButtonDown__DelegateSignature final
{
public:
	class UJSIContainer_C*                        Container;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            SlotRef;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Button;                                            // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_40_OnSlotMouseButtonDown__DelegateSignature) == 0x000008, "Wrong alignment on MPInGameInventory_C_BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_40_OnSlotMouseButtonDown__DelegateSignature");
static_assert(sizeof(MPInGameInventory_C_BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_40_OnSlotMouseButtonDown__DelegateSignature) == 0x000028, "Wrong size on MPInGameInventory_C_BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_40_OnSlotMouseButtonDown__DelegateSignature");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_40_OnSlotMouseButtonDown__DelegateSignature, Container) == 0x000000, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_40_OnSlotMouseButtonDown__DelegateSignature::Container' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_40_OnSlotMouseButtonDown__DelegateSignature, SlotRef) == 0x000008, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_40_OnSlotMouseButtonDown__DelegateSignature::SlotRef' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_40_OnSlotMouseButtonDown__DelegateSignature, Button) == 0x000010, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_40_OnSlotMouseButtonDown__DelegateSignature::Button' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_6_DropInfo_OnItemEquippedChange__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct MPInGameInventory_C_BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_6_DropInfo_OnItemEquippedChange__DelegateSignature final
{
public:
	class UJSIContainer_C*                        FromContainer;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        ToContainer;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            SlotRef;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Equipped_;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ToPockets_;                                        // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_6_DropInfo_OnItemEquippedChange__DelegateSignature) == 0x000008, "Wrong alignment on MPInGameInventory_C_BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_6_DropInfo_OnItemEquippedChange__DelegateSignature");
static_assert(sizeof(MPInGameInventory_C_BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_6_DropInfo_OnItemEquippedChange__DelegateSignature) == 0x000020, "Wrong size on MPInGameInventory_C_BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_6_DropInfo_OnItemEquippedChange__DelegateSignature");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_6_DropInfo_OnItemEquippedChange__DelegateSignature, FromContainer) == 0x000000, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_6_DropInfo_OnItemEquippedChange__DelegateSignature::FromContainer' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_6_DropInfo_OnItemEquippedChange__DelegateSignature, ToContainer) == 0x000008, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_6_DropInfo_OnItemEquippedChange__DelegateSignature::ToContainer' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_6_DropInfo_OnItemEquippedChange__DelegateSignature, SlotRef) == 0x000010, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_6_DropInfo_OnItemEquippedChange__DelegateSignature::SlotRef' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_6_DropInfo_OnItemEquippedChange__DelegateSignature, Equipped_) == 0x000018, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_6_DropInfo_OnItemEquippedChange__DelegateSignature::Equipped_' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_6_DropInfo_OnItemEquippedChange__DelegateSignature, ToPockets_) == 0x000019, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_6_DropInfo_OnItemEquippedChange__DelegateSignature::ToPockets_' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_UnderwearContainer_K2Node_ComponentBoundEvent_10_DropInfo_OnItemEquippedChange__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct MPInGameInventory_C_BndEvt__MPInGameInventory_UnderwearContainer_K2Node_ComponentBoundEvent_10_DropInfo_OnItemEquippedChange__DelegateSignature final
{
public:
	class UJSIContainer_C*                        FromContainer;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        ToContainer;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            SlotRef;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Equipped_;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ToPockets_;                                        // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_BndEvt__MPInGameInventory_UnderwearContainer_K2Node_ComponentBoundEvent_10_DropInfo_OnItemEquippedChange__DelegateSignature) == 0x000008, "Wrong alignment on MPInGameInventory_C_BndEvt__MPInGameInventory_UnderwearContainer_K2Node_ComponentBoundEvent_10_DropInfo_OnItemEquippedChange__DelegateSignature");
static_assert(sizeof(MPInGameInventory_C_BndEvt__MPInGameInventory_UnderwearContainer_K2Node_ComponentBoundEvent_10_DropInfo_OnItemEquippedChange__DelegateSignature) == 0x000020, "Wrong size on MPInGameInventory_C_BndEvt__MPInGameInventory_UnderwearContainer_K2Node_ComponentBoundEvent_10_DropInfo_OnItemEquippedChange__DelegateSignature");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_UnderwearContainer_K2Node_ComponentBoundEvent_10_DropInfo_OnItemEquippedChange__DelegateSignature, FromContainer) == 0x000000, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_UnderwearContainer_K2Node_ComponentBoundEvent_10_DropInfo_OnItemEquippedChange__DelegateSignature::FromContainer' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_UnderwearContainer_K2Node_ComponentBoundEvent_10_DropInfo_OnItemEquippedChange__DelegateSignature, ToContainer) == 0x000008, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_UnderwearContainer_K2Node_ComponentBoundEvent_10_DropInfo_OnItemEquippedChange__DelegateSignature::ToContainer' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_UnderwearContainer_K2Node_ComponentBoundEvent_10_DropInfo_OnItemEquippedChange__DelegateSignature, SlotRef) == 0x000010, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_UnderwearContainer_K2Node_ComponentBoundEvent_10_DropInfo_OnItemEquippedChange__DelegateSignature::SlotRef' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_UnderwearContainer_K2Node_ComponentBoundEvent_10_DropInfo_OnItemEquippedChange__DelegateSignature, Equipped_) == 0x000018, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_UnderwearContainer_K2Node_ComponentBoundEvent_10_DropInfo_OnItemEquippedChange__DelegateSignature::Equipped_' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_UnderwearContainer_K2Node_ComponentBoundEvent_10_DropInfo_OnItemEquippedChange__DelegateSignature, ToPockets_) == 0x000019, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_UnderwearContainer_K2Node_ComponentBoundEvent_10_DropInfo_OnItemEquippedChange__DelegateSignature::ToPockets_' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_UnderwearContainer_K2Node_ComponentBoundEvent_21_EventSelectItem__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct MPInGameInventory_C_BndEvt__MPInGameInventory_UnderwearContainer_K2Node_ComponentBoundEvent_21_EventSelectItem__DelegateSignature final
{
public:
	class UJSI_Slot_C*                            Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        Container;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_BndEvt__MPInGameInventory_UnderwearContainer_K2Node_ComponentBoundEvent_21_EventSelectItem__DelegateSignature) == 0x000008, "Wrong alignment on MPInGameInventory_C_BndEvt__MPInGameInventory_UnderwearContainer_K2Node_ComponentBoundEvent_21_EventSelectItem__DelegateSignature");
static_assert(sizeof(MPInGameInventory_C_BndEvt__MPInGameInventory_UnderwearContainer_K2Node_ComponentBoundEvent_21_EventSelectItem__DelegateSignature) == 0x000010, "Wrong size on MPInGameInventory_C_BndEvt__MPInGameInventory_UnderwearContainer_K2Node_ComponentBoundEvent_21_EventSelectItem__DelegateSignature");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_UnderwearContainer_K2Node_ComponentBoundEvent_21_EventSelectItem__DelegateSignature, Item) == 0x000000, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_UnderwearContainer_K2Node_ComponentBoundEvent_21_EventSelectItem__DelegateSignature::Item' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_UnderwearContainer_K2Node_ComponentBoundEvent_21_EventSelectItem__DelegateSignature, Container) == 0x000008, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_UnderwearContainer_K2Node_ComponentBoundEvent_21_EventSelectItem__DelegateSignature::Container' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_WBP_MainCategorySelector_Hoarder_K2Node_ComponentBoundEvent_32_OnCategoryChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct MPInGameInventory_C_BndEvt__MPInGameInventory_WBP_MainCategorySelector_Hoarder_K2Node_ComponentBoundEvent_32_OnCategoryChanged__DelegateSignature final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_BndEvt__MPInGameInventory_WBP_MainCategorySelector_Hoarder_K2Node_ComponentBoundEvent_32_OnCategoryChanged__DelegateSignature) == 0x000004, "Wrong alignment on MPInGameInventory_C_BndEvt__MPInGameInventory_WBP_MainCategorySelector_Hoarder_K2Node_ComponentBoundEvent_32_OnCategoryChanged__DelegateSignature");
static_assert(sizeof(MPInGameInventory_C_BndEvt__MPInGameInventory_WBP_MainCategorySelector_Hoarder_K2Node_ComponentBoundEvent_32_OnCategoryChanged__DelegateSignature) == 0x000004, "Wrong size on MPInGameInventory_C_BndEvt__MPInGameInventory_WBP_MainCategorySelector_Hoarder_K2Node_ComponentBoundEvent_32_OnCategoryChanged__DelegateSignature");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_WBP_MainCategorySelector_Hoarder_K2Node_ComponentBoundEvent_32_OnCategoryChanged__DelegateSignature, Param_Index) == 0x000000, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_WBP_MainCategorySelector_Hoarder_K2Node_ComponentBoundEvent_32_OnCategoryChanged__DelegateSignature::Param_Index' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_WBP_MainCategorySelector_K2Node_ComponentBoundEvent_33_OnCategoryChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct MPInGameInventory_C_BndEvt__MPInGameInventory_WBP_MainCategorySelector_K2Node_ComponentBoundEvent_33_OnCategoryChanged__DelegateSignature final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_BndEvt__MPInGameInventory_WBP_MainCategorySelector_K2Node_ComponentBoundEvent_33_OnCategoryChanged__DelegateSignature) == 0x000004, "Wrong alignment on MPInGameInventory_C_BndEvt__MPInGameInventory_WBP_MainCategorySelector_K2Node_ComponentBoundEvent_33_OnCategoryChanged__DelegateSignature");
static_assert(sizeof(MPInGameInventory_C_BndEvt__MPInGameInventory_WBP_MainCategorySelector_K2Node_ComponentBoundEvent_33_OnCategoryChanged__DelegateSignature) == 0x000004, "Wrong size on MPInGameInventory_C_BndEvt__MPInGameInventory_WBP_MainCategorySelector_K2Node_ComponentBoundEvent_33_OnCategoryChanged__DelegateSignature");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_WBP_MainCategorySelector_K2Node_ComponentBoundEvent_33_OnCategoryChanged__DelegateSignature, Param_Index) == 0x000000, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_WBP_MainCategorySelector_K2Node_ComponentBoundEvent_33_OnCategoryChanged__DelegateSignature::Param_Index' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_WBP_MainCategorySelector_Shop_K2Node_ComponentBoundEvent_31_OnCategoryChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct MPInGameInventory_C_BndEvt__MPInGameInventory_WBP_MainCategorySelector_Shop_K2Node_ComponentBoundEvent_31_OnCategoryChanged__DelegateSignature final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_BndEvt__MPInGameInventory_WBP_MainCategorySelector_Shop_K2Node_ComponentBoundEvent_31_OnCategoryChanged__DelegateSignature) == 0x000004, "Wrong alignment on MPInGameInventory_C_BndEvt__MPInGameInventory_WBP_MainCategorySelector_Shop_K2Node_ComponentBoundEvent_31_OnCategoryChanged__DelegateSignature");
static_assert(sizeof(MPInGameInventory_C_BndEvt__MPInGameInventory_WBP_MainCategorySelector_Shop_K2Node_ComponentBoundEvent_31_OnCategoryChanged__DelegateSignature) == 0x000004, "Wrong size on MPInGameInventory_C_BndEvt__MPInGameInventory_WBP_MainCategorySelector_Shop_K2Node_ComponentBoundEvent_31_OnCategoryChanged__DelegateSignature");
static_assert(offsetof(MPInGameInventory_C_BndEvt__MPInGameInventory_WBP_MainCategorySelector_Shop_K2Node_ComponentBoundEvent_31_OnCategoryChanged__DelegateSignature, Param_Index) == 0x000000, "Member 'MPInGameInventory_C_BndEvt__MPInGameInventory_WBP_MainCategorySelector_Shop_K2Node_ComponentBoundEvent_31_OnCategoryChanged__DelegateSignature::Param_Index' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.CanAddItemToInv
// 0x0058 (0x0058 - 0x0000)
struct MPInGameInventory_C_CanAddItemToInv final
{
public:
	class UJSIContainer_C*                        ContainerRef;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            SlotRef;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquipmentContainer_Result;             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_GetEquipmentContainer_Container;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanAddItem_Can;                           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CanAddItem_SlotIndex;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanAddItem_CanStack;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_CanAddItem_ItemRef;                       // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipped__ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemCanBeEquipped_Result;               // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_CanAddItemToInv) == 0x000008, "Wrong alignment on MPInGameInventory_C_CanAddItemToInv");
static_assert(sizeof(MPInGameInventory_C_CanAddItemToInv) == 0x000058, "Wrong size on MPInGameInventory_C_CanAddItemToInv");
static_assert(offsetof(MPInGameInventory_C_CanAddItemToInv, ContainerRef) == 0x000000, "Member 'MPInGameInventory_C_CanAddItemToInv::ContainerRef' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_CanAddItemToInv, SlotRef) == 0x000008, "Member 'MPInGameInventory_C_CanAddItemToInv::SlotRef' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_CanAddItemToInv, Result) == 0x000010, "Member 'MPInGameInventory_C_CanAddItemToInv::Result' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_CanAddItemToInv, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000018, "Member 'MPInGameInventory_C_CanAddItemToInv::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_CanAddItemToInv, K2Node_DynamicCast_AsSurvival_Player) == 0x000020, "Member 'MPInGameInventory_C_CanAddItemToInv::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_CanAddItemToInv, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'MPInGameInventory_C_CanAddItemToInv::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_CanAddItemToInv, CallFunc_GetEquipmentContainer_Result) == 0x000029, "Member 'MPInGameInventory_C_CanAddItemToInv::CallFunc_GetEquipmentContainer_Result' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_CanAddItemToInv, CallFunc_GetEquipmentContainer_Container) == 0x000030, "Member 'MPInGameInventory_C_CanAddItemToInv::CallFunc_GetEquipmentContainer_Container' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_CanAddItemToInv, CallFunc_CanAddItem_Can) == 0x000038, "Member 'MPInGameInventory_C_CanAddItemToInv::CallFunc_CanAddItem_Can' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_CanAddItemToInv, CallFunc_CanAddItem_SlotIndex) == 0x00003C, "Member 'MPInGameInventory_C_CanAddItemToInv::CallFunc_CanAddItem_SlotIndex' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_CanAddItemToInv, CallFunc_CanAddItem_CanStack) == 0x000040, "Member 'MPInGameInventory_C_CanAddItemToInv::CallFunc_CanAddItem_CanStack' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_CanAddItemToInv, CallFunc_CanAddItem_ItemRef) == 0x000048, "Member 'MPInGameInventory_C_CanAddItemToInv::CallFunc_CanAddItem_ItemRef' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_CanAddItemToInv, CallFunc_IsEquipped__ReturnValue) == 0x000050, "Member 'MPInGameInventory_C_CanAddItemToInv::CallFunc_IsEquipped__ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_CanAddItemToInv, CallFunc_IsItemCanBeEquipped_Result) == 0x000051, "Member 'MPInGameInventory_C_CanAddItemToInv::CallFunc_IsItemCanBeEquipped_Result' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.Check Satiety
// 0x0001 (0x0001 - 0x0000)
struct MPInGameInventory_C_Check_Satiety final
{
public:
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_Check_Satiety) == 0x000001, "Wrong alignment on MPInGameInventory_C_Check_Satiety");
static_assert(sizeof(MPInGameInventory_C_Check_Satiety) == 0x000001, "Wrong size on MPInGameInventory_C_Check_Satiety");
static_assert(offsetof(MPInGameInventory_C_Check_Satiety, CallFunc_BooleanAND_ReturnValue) == 0x000000, "Member 'MPInGameInventory_C_Check_Satiety::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.CheckAdrenaline
// 0x0010 (0x0010 - 0x0000)
struct MPInGameInventory_C_CheckAdrenaline final
{
public:
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_CheckAdrenaline) == 0x000008, "Wrong alignment on MPInGameInventory_C_CheckAdrenaline");
static_assert(sizeof(MPInGameInventory_C_CheckAdrenaline) == 0x000010, "Wrong size on MPInGameInventory_C_CheckAdrenaline");
static_assert(offsetof(MPInGameInventory_C_CheckAdrenaline, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000000, "Member 'MPInGameInventory_C_CheckAdrenaline::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_CheckAdrenaline, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'MPInGameInventory_C_CheckAdrenaline::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.CheckHunger
// 0x0010 (0x0010 - 0x0000)
struct MPInGameInventory_C_CheckHunger final
{
public:
	double                                        CallFunc_GetStat_Value;                            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_CheckHunger) == 0x000008, "Wrong alignment on MPInGameInventory_C_CheckHunger");
static_assert(sizeof(MPInGameInventory_C_CheckHunger) == 0x000010, "Wrong size on MPInGameInventory_C_CheckHunger");
static_assert(offsetof(MPInGameInventory_C_CheckHunger, CallFunc_GetStat_Value) == 0x000000, "Member 'MPInGameInventory_C_CheckHunger::CallFunc_GetStat_Value' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_CheckHunger, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000008, "Member 'MPInGameInventory_C_CheckHunger::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.CheckTutorialObjective_StorageItem
// 0x0001 (0x0001 - 0x0000)
struct MPInGameInventory_C_CheckTutorialObjective_StorageItem final
{
public:
	bool                                          Completed;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_CheckTutorialObjective_StorageItem) == 0x000001, "Wrong alignment on MPInGameInventory_C_CheckTutorialObjective_StorageItem");
static_assert(sizeof(MPInGameInventory_C_CheckTutorialObjective_StorageItem) == 0x000001, "Wrong size on MPInGameInventory_C_CheckTutorialObjective_StorageItem");
static_assert(offsetof(MPInGameInventory_C_CheckTutorialObjective_StorageItem, Completed) == 0x000000, "Member 'MPInGameInventory_C_CheckTutorialObjective_StorageItem::Completed' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.CheckWater
// 0x0010 (0x0010 - 0x0000)
struct MPInGameInventory_C_CheckWater final
{
public:
	double                                        CallFunc_GetStat_Value;                            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_CheckWater) == 0x000008, "Wrong alignment on MPInGameInventory_C_CheckWater");
static_assert(sizeof(MPInGameInventory_C_CheckWater) == 0x000010, "Wrong size on MPInGameInventory_C_CheckWater");
static_assert(offsetof(MPInGameInventory_C_CheckWater, CallFunc_GetStat_Value) == 0x000000, "Member 'MPInGameInventory_C_CheckWater::CallFunc_GetStat_Value' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_CheckWater, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000008, "Member 'MPInGameInventory_C_CheckWater::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.CheckWeight
// 0x0030 (0x0030 - 0x0000)
struct MPInGameInventory_C_CheckWeight final
{
public:
	double                                        CallFunc_GetStat_Value;                            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetStat_Value_1;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetStat_Value_2;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetStat_Value_3;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetStat_Value_4;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_CheckWeight) == 0x000008, "Wrong alignment on MPInGameInventory_C_CheckWeight");
static_assert(sizeof(MPInGameInventory_C_CheckWeight) == 0x000030, "Wrong size on MPInGameInventory_C_CheckWeight");
static_assert(offsetof(MPInGameInventory_C_CheckWeight, CallFunc_GetStat_Value) == 0x000000, "Member 'MPInGameInventory_C_CheckWeight::CallFunc_GetStat_Value' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_CheckWeight, CallFunc_GetStat_Value_1) == 0x000008, "Member 'MPInGameInventory_C_CheckWeight::CallFunc_GetStat_Value_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_CheckWeight, CallFunc_GetStat_Value_2) == 0x000010, "Member 'MPInGameInventory_C_CheckWeight::CallFunc_GetStat_Value_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_CheckWeight, CallFunc_GetStat_Value_3) == 0x000018, "Member 'MPInGameInventory_C_CheckWeight::CallFunc_GetStat_Value_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_CheckWeight, CallFunc_GetStat_Value_4) == 0x000020, "Member 'MPInGameInventory_C_CheckWeight::CallFunc_GetStat_Value_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_CheckWeight, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000028, "Member 'MPInGameInventory_C_CheckWeight::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_CheckWeight, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000029, "Member 'MPInGameInventory_C_CheckWeight::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.ClearAllSelection
// 0x0070 (0x0070 - 0x0000)
struct MPInGameInventory_C_ClearAllSelection final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue_1;             // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_Array_Get_Item_1;                         // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMPContainerWidget_C*                   K2Node_DynamicCast_AsMPContainer_Widget;           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        K2Node_DynamicCast_AsJSIContainer;                 // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_ClearAllSelection) == 0x000008, "Wrong alignment on MPInGameInventory_C_ClearAllSelection");
static_assert(sizeof(MPInGameInventory_C_ClearAllSelection) == 0x000070, "Wrong size on MPInGameInventory_C_ClearAllSelection");
static_assert(offsetof(MPInGameInventory_C_ClearAllSelection, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'MPInGameInventory_C_ClearAllSelection::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ClearAllSelection, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'MPInGameInventory_C_ClearAllSelection::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ClearAllSelection, Temp_int_Array_Index_Variable) == 0x000008, "Member 'MPInGameInventory_C_ClearAllSelection::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ClearAllSelection, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'MPInGameInventory_C_ClearAllSelection::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ClearAllSelection, CallFunc_GetAllChildren_ReturnValue) == 0x000010, "Member 'MPInGameInventory_C_ClearAllSelection::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ClearAllSelection, CallFunc_GetAllChildren_ReturnValue_1) == 0x000020, "Member 'MPInGameInventory_C_ClearAllSelection::CallFunc_GetAllChildren_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ClearAllSelection, CallFunc_Array_Get_Item) == 0x000030, "Member 'MPInGameInventory_C_ClearAllSelection::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ClearAllSelection, CallFunc_Array_Get_Item_1) == 0x000038, "Member 'MPInGameInventory_C_ClearAllSelection::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ClearAllSelection, K2Node_DynamicCast_AsMPContainer_Widget) == 0x000040, "Member 'MPInGameInventory_C_ClearAllSelection::K2Node_DynamicCast_AsMPContainer_Widget' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ClearAllSelection, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'MPInGameInventory_C_ClearAllSelection::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ClearAllSelection, K2Node_DynamicCast_AsJSIContainer) == 0x000050, "Member 'MPInGameInventory_C_ClearAllSelection::K2Node_DynamicCast_AsJSIContainer' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ClearAllSelection, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'MPInGameInventory_C_ClearAllSelection::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ClearAllSelection, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'MPInGameInventory_C_ClearAllSelection::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ClearAllSelection, CallFunc_Array_Length_ReturnValue_1) == 0x000060, "Member 'MPInGameInventory_C_ClearAllSelection::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ClearAllSelection, Temp_int_Loop_Counter_Variable_1) == 0x000064, "Member 'MPInGameInventory_C_ClearAllSelection::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ClearAllSelection, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'MPInGameInventory_C_ClearAllSelection::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ClearAllSelection, CallFunc_Less_IntInt_ReturnValue_1) == 0x000069, "Member 'MPInGameInventory_C_ClearAllSelection::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ClearAllSelection, CallFunc_Add_IntInt_ReturnValue_1) == 0x00006C, "Member 'MPInGameInventory_C_ClearAllSelection::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.ClearLootPointSelection
// 0x0018 (0x0018 - 0x0000)
struct MPInGameInventory_C_ClearLootPointSelection final
{
public:
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMPContainerWidget_C*                   K2Node_DynamicCast_AsMPContainer_Widget;           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_ClearLootPointSelection) == 0x000008, "Wrong alignment on MPInGameInventory_C_ClearLootPointSelection");
static_assert(sizeof(MPInGameInventory_C_ClearLootPointSelection) == 0x000018, "Wrong size on MPInGameInventory_C_ClearLootPointSelection");
static_assert(offsetof(MPInGameInventory_C_ClearLootPointSelection, CallFunc_GetChildAt_ReturnValue) == 0x000000, "Member 'MPInGameInventory_C_ClearLootPointSelection::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ClearLootPointSelection, K2Node_DynamicCast_AsMPContainer_Widget) == 0x000008, "Member 'MPInGameInventory_C_ClearLootPointSelection::K2Node_DynamicCast_AsMPContainer_Widget' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ClearLootPointSelection, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'MPInGameInventory_C_ClearLootPointSelection::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.ClearMainContainerSelection
// 0x0010 (0x0010 - 0x0000)
struct MPInGameInventory_C_ClearMainContainerSelection final
{
public:
	bool                                          CallFunc_GetPocketContainer_Result;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_GetPocketContainer_Container;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_ClearMainContainerSelection) == 0x000008, "Wrong alignment on MPInGameInventory_C_ClearMainContainerSelection");
static_assert(sizeof(MPInGameInventory_C_ClearMainContainerSelection) == 0x000010, "Wrong size on MPInGameInventory_C_ClearMainContainerSelection");
static_assert(offsetof(MPInGameInventory_C_ClearMainContainerSelection, CallFunc_GetPocketContainer_Result) == 0x000000, "Member 'MPInGameInventory_C_ClearMainContainerSelection::CallFunc_GetPocketContainer_Result' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ClearMainContainerSelection, CallFunc_GetPocketContainer_Container) == 0x000008, "Member 'MPInGameInventory_C_ClearMainContainerSelection::CallFunc_GetPocketContainer_Container' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.ContainerChanged_Event
// 0x0008 (0x0008 - 0x0000)
struct MPInGameInventory_C_ContainerChanged_Event final
{
public:
	class UJSIContainer_C*                        Pocket;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_ContainerChanged_Event) == 0x000008, "Wrong alignment on MPInGameInventory_C_ContainerChanged_Event");
static_assert(sizeof(MPInGameInventory_C_ContainerChanged_Event) == 0x000008, "Wrong size on MPInGameInventory_C_ContainerChanged_Event");
static_assert(offsetof(MPInGameInventory_C_ContainerChanged_Event, Pocket) == 0x000000, "Member 'MPInGameInventory_C_ContainerChanged_Event::Pocket' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.Create Invite Home Widget
// 0x0030 (0x0030 - 0x0000)
struct MPInGameInventory_C_Create_Invite_Home_Widget final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_InviteHome_C*                      CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_Create_Invite_Home_Widget) == 0x000008, "Wrong alignment on MPInGameInventory_C_Create_Invite_Home_Widget");
static_assert(sizeof(MPInGameInventory_C_Create_Invite_Home_Widget) == 0x000030, "Wrong size on MPInGameInventory_C_Create_Invite_Home_Widget");
static_assert(offsetof(MPInGameInventory_C_Create_Invite_Home_Widget, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'MPInGameInventory_C_Create_Invite_Home_Widget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Create_Invite_Home_Widget, CallFunc_Create_ReturnValue) == 0x000010, "Member 'MPInGameInventory_C_Create_Invite_Home_Widget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Create_Invite_Home_Widget, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'MPInGameInventory_C_Create_Invite_Home_Widget::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Create_Invite_Home_Widget, CallFunc_AddChild_ReturnValue) == 0x000020, "Member 'MPInGameInventory_C_Create_Invite_Home_Widget::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Create_Invite_Home_Widget, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000028, "Member 'MPInGameInventory_C_Create_Invite_Home_Widget::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.CreateChildWidget
// 0x0008 (0x0008 - 0x0000)
struct MPInGameInventory_C_CreateChildWidget final
{
public:
	class UUserWidget*                            ChildWidget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_CreateChildWidget) == 0x000008, "Wrong alignment on MPInGameInventory_C_CreateChildWidget");
static_assert(sizeof(MPInGameInventory_C_CreateChildWidget) == 0x000008, "Wrong size on MPInGameInventory_C_CreateChildWidget");
static_assert(offsetof(MPInGameInventory_C_CreateChildWidget, ChildWidget) == 0x000000, "Member 'MPInGameInventory_C_CreateChildWidget::ChildWidget' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.DropItem
// 0x07B8 (0x07B8 - 0x0000)
struct MPInGameInventory_C_DropItem final
{
public:
	class UW_ItemInfo_C*                          NewLocalVar;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_ItemInfo_C*                          TempSlot;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPocketContainer_Result;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_GetPocketContainer_Container;             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_GetItemInfo_ItemInfo;                     // 0x0028(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetItemInfo_TriggerUserWidget;            // 0x0248(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_DynamicCast_AsJSI_Slot;                     // 0x0258(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x0270(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_282[0x6];                                      // 0x0282(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_FurnitureShopButtons_C*            CallFunc_GetFurnitureCatalogRef_FurnitureShopButtons; // 0x0288(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x0292(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x0293(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_4;    // 0x0294(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_5;    // 0x0295(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_6;    // 0x0296(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_7;    // 0x0297(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_8;    // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_9;    // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_10;   // 0x029A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x029B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x029C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x029D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x029E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x029F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0x3];                                      // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCount_Count;                           // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             K2Node_SetFieldsInStruct_StructOut;                // 0x02B0(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x04D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x04D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x04D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_9;                  // 0x04D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x04D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x04D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x04D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_2;                           // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsBeginner_IsBeginner;                 // 0x04D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x04DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_3;                           // 0x04DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x04DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DD[0x3];                                      // 0x04DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x04E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_1;                     // 0x04E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x04F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD_1;               // 0x04F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_509[0x7];                                      // 0x0509(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_2;                     // 0x0510(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UW_ItemInfo_C*                          CallFunc_GetItemInfoWidget_Widget;                 // 0x0518(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD_2;               // 0x0520(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_531[0x7];                                      // 0x0531(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_ItemInfo_C*                          CallFunc_GetItemInfoWidget_Widget_1;               // 0x0538(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_GetItemInfo_ItemInfo_1;                   // 0x0540(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetItemInfo_TriggerUserWidget_1;          // 0x0760(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_DynamicCast_AsJSI_Slot_1;                   // 0x0768(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0770(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_771[0x7];                                      // 0x0771(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_3;        // 0x0778(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDropWidgetVisible_ReturnValue;          // 0x0780(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_781[0x7];                                      // 0x0781(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_3;                     // 0x0788(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD_3;               // 0x0790(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x07A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A1[0x7];                                      // 0x07A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_ItemInfo_C*                          CallFunc_GetItemInfoWidget_Widget_2;               // 0x07A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_10;                 // 0x07B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_11;                 // 0x07B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_12;                 // 0x07B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_13;                 // 0x07B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x07B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_DropItem) == 0x000008, "Wrong alignment on MPInGameInventory_C_DropItem");
static_assert(sizeof(MPInGameInventory_C_DropItem) == 0x0007B8, "Wrong size on MPInGameInventory_C_DropItem");
static_assert(offsetof(MPInGameInventory_C_DropItem, NewLocalVar) == 0x000000, "Member 'MPInGameInventory_C_DropItem::NewLocalVar' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, TempSlot) == 0x000008, "Member 'MPInGameInventory_C_DropItem::TempSlot' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, Temp_bool_Variable) == 0x000010, "Member 'MPInGameInventory_C_DropItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, Temp_bool_Variable_1) == 0x000011, "Member 'MPInGameInventory_C_DropItem::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, Temp_bool_Variable_2) == 0x000012, "Member 'MPInGameInventory_C_DropItem::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, Temp_bool_Variable_3) == 0x000013, "Member 'MPInGameInventory_C_DropItem::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, Temp_bool_Variable_4) == 0x000014, "Member 'MPInGameInventory_C_DropItem::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, Temp_bool_Variable_5) == 0x000015, "Member 'MPInGameInventory_C_DropItem::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, Temp_bool_Variable_6) == 0x000016, "Member 'MPInGameInventory_C_DropItem::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, Temp_bool_Variable_7) == 0x000017, "Member 'MPInGameInventory_C_DropItem::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_GetPocketContainer_Result) == 0x000018, "Member 'MPInGameInventory_C_DropItem::CallFunc_GetPocketContainer_Result' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_GetPocketContainer_Container) == 0x000020, "Member 'MPInGameInventory_C_DropItem::CallFunc_GetPocketContainer_Container' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_GetItemInfo_ItemInfo) == 0x000028, "Member 'MPInGameInventory_C_DropItem::CallFunc_GetItemInfo_ItemInfo' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_GetItemInfo_TriggerUserWidget) == 0x000248, "Member 'MPInGameInventory_C_DropItem::CallFunc_GetItemInfo_TriggerUserWidget' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_GetPlayerController_ReturnValue) == 0x000250, "Member 'MPInGameInventory_C_DropItem::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, K2Node_DynamicCast_AsJSI_Slot) == 0x000258, "Member 'MPInGameInventory_C_DropItem::K2Node_DynamicCast_AsJSI_Slot' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, K2Node_DynamicCast_bSuccess) == 0x000260, "Member 'MPInGameInventory_C_DropItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_GetHUD_ReturnValue) == 0x000268, "Member 'MPInGameInventory_C_DropItem::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x000270, "Member 'MPInGameInventory_C_DropItem::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, K2Node_DynamicCast_bSuccess_1) == 0x000280, "Member 'MPInGameInventory_C_DropItem::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000281, "Member 'MPInGameInventory_C_DropItem::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_GetFurnitureCatalogRef_FurnitureShopButtons) == 0x000288, "Member 'MPInGameInventory_C_DropItem::CallFunc_GetFurnitureCatalogRef_FurnitureShopButtons' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000290, "Member 'MPInGameInventory_C_DropItem::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_IsValid_ReturnValue) == 0x000291, "Member 'MPInGameInventory_C_DropItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x000292, "Member 'MPInGameInventory_C_DropItem::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x000293, "Member 'MPInGameInventory_C_DropItem::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_EqualEqual_ObjectObject_ReturnValue_4) == 0x000294, "Member 'MPInGameInventory_C_DropItem::CallFunc_EqualEqual_ObjectObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_EqualEqual_ObjectObject_ReturnValue_5) == 0x000295, "Member 'MPInGameInventory_C_DropItem::CallFunc_EqualEqual_ObjectObject_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_EqualEqual_ObjectObject_ReturnValue_6) == 0x000296, "Member 'MPInGameInventory_C_DropItem::CallFunc_EqualEqual_ObjectObject_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_EqualEqual_ObjectObject_ReturnValue_7) == 0x000297, "Member 'MPInGameInventory_C_DropItem::CallFunc_EqualEqual_ObjectObject_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_EqualEqual_ObjectObject_ReturnValue_8) == 0x000298, "Member 'MPInGameInventory_C_DropItem::CallFunc_EqualEqual_ObjectObject_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_EqualEqual_ObjectObject_ReturnValue_9) == 0x000299, "Member 'MPInGameInventory_C_DropItem::CallFunc_EqualEqual_ObjectObject_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_EqualEqual_ObjectObject_ReturnValue_10) == 0x00029A, "Member 'MPInGameInventory_C_DropItem::CallFunc_EqualEqual_ObjectObject_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_BooleanOR_ReturnValue) == 0x00029B, "Member 'MPInGameInventory_C_DropItem::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, K2Node_Select_Default) == 0x00029C, "Member 'MPInGameInventory_C_DropItem::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_BooleanOR_ReturnValue_1) == 0x00029D, "Member 'MPInGameInventory_C_DropItem::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_BooleanOR_ReturnValue_2) == 0x00029E, "Member 'MPInGameInventory_C_DropItem::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_BooleanOR_ReturnValue_3) == 0x00029F, "Member 'MPInGameInventory_C_DropItem::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_BooleanOR_ReturnValue_4) == 0x0002A0, "Member 'MPInGameInventory_C_DropItem::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_GetCount_Count) == 0x0002A4, "Member 'MPInGameInventory_C_DropItem::CallFunc_GetCount_Count' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_BooleanOR_ReturnValue_5) == 0x0002A8, "Member 'MPInGameInventory_C_DropItem::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, K2Node_SetFieldsInStruct_StructOut) == 0x0002B0, "Member 'MPInGameInventory_C_DropItem::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_BooleanOR_ReturnValue_6) == 0x0004D0, "Member 'MPInGameInventory_C_DropItem::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_BooleanOR_ReturnValue_7) == 0x0004D1, "Member 'MPInGameInventory_C_DropItem::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0004D2, "Member 'MPInGameInventory_C_DropItem::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_BooleanOR_ReturnValue_8) == 0x0004D3, "Member 'MPInGameInventory_C_DropItem::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_BooleanOR_ReturnValue_9) == 0x0004D4, "Member 'MPInGameInventory_C_DropItem::CallFunc_BooleanOR_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x0004D5, "Member 'MPInGameInventory_C_DropItem::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_Not_PreBool_ReturnValue) == 0x0004D6, "Member 'MPInGameInventory_C_DropItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, K2Node_Select_Default_1) == 0x0004D7, "Member 'MPInGameInventory_C_DropItem::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, K2Node_Select_Default_2) == 0x0004D8, "Member 'MPInGameInventory_C_DropItem::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_GetIsBeginner_IsBeginner) == 0x0004D9, "Member 'MPInGameInventory_C_DropItem::CallFunc_GetIsBeginner_IsBeginner' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_Not_PreBool_ReturnValue_1) == 0x0004DA, "Member 'MPInGameInventory_C_DropItem::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, K2Node_Select_Default_3) == 0x0004DB, "Member 'MPInGameInventory_C_DropItem::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_BooleanAND_ReturnValue) == 0x0004DC, "Member 'MPInGameInventory_C_DropItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_GetPlayerController_ReturnValue_1) == 0x0004E0, "Member 'MPInGameInventory_C_DropItem::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_GetHUD_ReturnValue_1) == 0x0004E8, "Member 'MPInGameInventory_C_DropItem::CallFunc_GetHUD_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_GetPlayerController_ReturnValue_2) == 0x0004F0, "Member 'MPInGameInventory_C_DropItem::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, K2Node_DynamicCast_AsBPI_Game_HUD_1) == 0x0004F8, "Member 'MPInGameInventory_C_DropItem::K2Node_DynamicCast_AsBPI_Game_HUD_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, K2Node_DynamicCast_bSuccess_2) == 0x000508, "Member 'MPInGameInventory_C_DropItem::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_GetHUD_ReturnValue_2) == 0x000510, "Member 'MPInGameInventory_C_DropItem::CallFunc_GetHUD_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_GetItemInfoWidget_Widget) == 0x000518, "Member 'MPInGameInventory_C_DropItem::CallFunc_GetItemInfoWidget_Widget' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, K2Node_DynamicCast_AsBPI_Game_HUD_2) == 0x000520, "Member 'MPInGameInventory_C_DropItem::K2Node_DynamicCast_AsBPI_Game_HUD_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, K2Node_DynamicCast_bSuccess_3) == 0x000530, "Member 'MPInGameInventory_C_DropItem::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_GetItemInfoWidget_Widget_1) == 0x000538, "Member 'MPInGameInventory_C_DropItem::CallFunc_GetItemInfoWidget_Widget_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_GetItemInfo_ItemInfo_1) == 0x000540, "Member 'MPInGameInventory_C_DropItem::CallFunc_GetItemInfo_ItemInfo_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_GetItemInfo_TriggerUserWidget_1) == 0x000760, "Member 'MPInGameInventory_C_DropItem::CallFunc_GetItemInfo_TriggerUserWidget_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, K2Node_DynamicCast_AsJSI_Slot_1) == 0x000768, "Member 'MPInGameInventory_C_DropItem::K2Node_DynamicCast_AsJSI_Slot_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, K2Node_DynamicCast_bSuccess_4) == 0x000770, "Member 'MPInGameInventory_C_DropItem::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_GetPlayerController_ReturnValue_3) == 0x000778, "Member 'MPInGameInventory_C_DropItem::CallFunc_GetPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_IsDropWidgetVisible_ReturnValue) == 0x000780, "Member 'MPInGameInventory_C_DropItem::CallFunc_IsDropWidgetVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_GetHUD_ReturnValue_3) == 0x000788, "Member 'MPInGameInventory_C_DropItem::CallFunc_GetHUD_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, K2Node_DynamicCast_AsBPI_Game_HUD_3) == 0x000790, "Member 'MPInGameInventory_C_DropItem::K2Node_DynamicCast_AsBPI_Game_HUD_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, K2Node_DynamicCast_bSuccess_5) == 0x0007A0, "Member 'MPInGameInventory_C_DropItem::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_GetItemInfoWidget_Widget_2) == 0x0007A8, "Member 'MPInGameInventory_C_DropItem::CallFunc_GetItemInfoWidget_Widget_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_BooleanOR_ReturnValue_10) == 0x0007B0, "Member 'MPInGameInventory_C_DropItem::CallFunc_BooleanOR_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_BooleanOR_ReturnValue_11) == 0x0007B1, "Member 'MPInGameInventory_C_DropItem::CallFunc_BooleanOR_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_BooleanOR_ReturnValue_12) == 0x0007B2, "Member 'MPInGameInventory_C_DropItem::CallFunc_BooleanOR_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_BooleanOR_ReturnValue_13) == 0x0007B3, "Member 'MPInGameInventory_C_DropItem::CallFunc_BooleanOR_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_DropItem, CallFunc_Not_PreBool_ReturnValue_2) == 0x0007B4, "Member 'MPInGameInventory_C_DropItem::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.EquipItem
// 0x00D0 (0x00D0 - 0x0000)
struct MPInGameInventory_C_EquipItem final
{
public:
	class UJSIContainer_C*                        Container_Ref;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            Slot_Ref;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Equipped;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        To_Container;                                      // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EJSItemType                                   Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        Temp_object_Variable;                              // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        Temp_object_Variable_1;                            // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        Temp_object_Variable_2;                            // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        Temp_object_Variable_3;                            // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        Temp_object_Variable_4;                            // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        Temp_object_Variable_5;                            // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        Temp_object_Variable_6;                            // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        Temp_object_Variable_7;                            // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        Temp_object_Variable_8;                            // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        Temp_object_Variable_9;                            // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        Temp_object_Variable_10;                           // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        Temp_object_Variable_11;                           // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        Temp_object_Variable_12;                           // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item;                           // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipped__ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        K2Node_Select_Default;                             // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        K2Node_Select_Default_1;                           // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipped__ReturnValue_1;                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_Found_;                // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef;               // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HandleContainerOnContainer_Handled_;      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_EquipItem) == 0x000008, "Wrong alignment on MPInGameInventory_C_EquipItem");
static_assert(sizeof(MPInGameInventory_C_EquipItem) == 0x0000D0, "Wrong size on MPInGameInventory_C_EquipItem");
static_assert(offsetof(MPInGameInventory_C_EquipItem, Container_Ref) == 0x000000, "Member 'MPInGameInventory_C_EquipItem::Container_Ref' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquipItem, Slot_Ref) == 0x000008, "Member 'MPInGameInventory_C_EquipItem::Slot_Ref' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquipItem, Equipped) == 0x000010, "Member 'MPInGameInventory_C_EquipItem::Equipped' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquipItem, To_Container) == 0x000018, "Member 'MPInGameInventory_C_EquipItem::To_Container' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquipItem, Temp_byte_Variable) == 0x000020, "Member 'MPInGameInventory_C_EquipItem::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquipItem, Temp_object_Variable) == 0x000028, "Member 'MPInGameInventory_C_EquipItem::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquipItem, Temp_object_Variable_1) == 0x000030, "Member 'MPInGameInventory_C_EquipItem::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquipItem, Temp_object_Variable_2) == 0x000038, "Member 'MPInGameInventory_C_EquipItem::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquipItem, Temp_object_Variable_3) == 0x000040, "Member 'MPInGameInventory_C_EquipItem::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquipItem, Temp_object_Variable_4) == 0x000048, "Member 'MPInGameInventory_C_EquipItem::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquipItem, Temp_object_Variable_5) == 0x000050, "Member 'MPInGameInventory_C_EquipItem::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquipItem, Temp_object_Variable_6) == 0x000058, "Member 'MPInGameInventory_C_EquipItem::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquipItem, Temp_object_Variable_7) == 0x000060, "Member 'MPInGameInventory_C_EquipItem::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquipItem, Temp_object_Variable_8) == 0x000068, "Member 'MPInGameInventory_C_EquipItem::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquipItem, Temp_object_Variable_9) == 0x000070, "Member 'MPInGameInventory_C_EquipItem::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquipItem, Temp_object_Variable_10) == 0x000078, "Member 'MPInGameInventory_C_EquipItem::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquipItem, Temp_object_Variable_11) == 0x000080, "Member 'MPInGameInventory_C_EquipItem::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquipItem, Temp_object_Variable_12) == 0x000088, "Member 'MPInGameInventory_C_EquipItem::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquipItem, Temp_bool_Variable) == 0x000090, "Member 'MPInGameInventory_C_EquipItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquipItem, CallFunc_Array_Get_Item) == 0x000098, "Member 'MPInGameInventory_C_EquipItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquipItem, CallFunc_IsEquipped__ReturnValue) == 0x0000A0, "Member 'MPInGameInventory_C_EquipItem::CallFunc_IsEquipped__ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquipItem, K2Node_Select_Default) == 0x0000A8, "Member 'MPInGameInventory_C_EquipItem::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquipItem, K2Node_Select_Default_1) == 0x0000B0, "Member 'MPInGameInventory_C_EquipItem::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquipItem, CallFunc_IsEquipped__ReturnValue_1) == 0x0000B8, "Member 'MPInGameInventory_C_EquipItem::CallFunc_IsEquipped__ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquipItem, CallFunc_GetEquippedItemRef_Found_) == 0x0000B9, "Member 'MPInGameInventory_C_EquipItem::CallFunc_GetEquippedItemRef_Found_' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquipItem, CallFunc_GetEquippedItemRef_ItemRef) == 0x0000C0, "Member 'MPInGameInventory_C_EquipItem::CallFunc_GetEquippedItemRef_ItemRef' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquipItem, CallFunc_HandleContainerOnContainer_Handled_) == 0x0000C8, "Member 'MPInGameInventory_C_EquipItem::CallFunc_HandleContainerOnContainer_Handled_' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquipItem, CallFunc_IsValid_ReturnValue) == 0x0000C9, "Member 'MPInGameInventory_C_EquipItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.EquippedSlotBG
// 0x0070 (0x0070 - 0x0000)
struct MPInGameInventory_C_EquippedSlotBG final
{
public:
	class UJSIContainer_C*                        Container;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            SlotToStash;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotMotherUID_UDID;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_10;                             // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_11;                             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_12;                             // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_13;                             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_14;                             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotMotherUID_UDID_1;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotMotherUID_UDID_2;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotMotherUID_UDID_3;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotMotherUID_UDID_4;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotMotherUID_UDID_5;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotMotherUID_UDID_6;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_6;          // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotMotherUID_UDID_7;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_7;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_15;                             // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipped__ReturnValue;                  // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipped__ReturnValue_1;                // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipped__ReturnValue_2;                // 0x005F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipped__ReturnValue_3;                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipped__ReturnValue_4;                // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipped__ReturnValue_5;                // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_5;                           // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipped__ReturnValue_6;                // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipped__ReturnValue_7;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_6;                           // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_7;                           // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_EquippedSlotBG) == 0x000008, "Wrong alignment on MPInGameInventory_C_EquippedSlotBG");
static_assert(sizeof(MPInGameInventory_C_EquippedSlotBG) == 0x000070, "Wrong size on MPInGameInventory_C_EquippedSlotBG");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, Container) == 0x000000, "Member 'MPInGameInventory_C_EquippedSlotBG::Container' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, SlotToStash) == 0x000008, "Member 'MPInGameInventory_C_EquippedSlotBG::SlotToStash' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, Temp_byte_Variable) == 0x000010, "Member 'MPInGameInventory_C_EquippedSlotBG::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, CallFunc_GetSlotMotherUID_UDID) == 0x000014, "Member 'MPInGameInventory_C_EquippedSlotBG::CallFunc_GetSlotMotherUID_UDID' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, Temp_bool_Variable) == 0x000018, "Member 'MPInGameInventory_C_EquippedSlotBG::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000019, "Member 'MPInGameInventory_C_EquippedSlotBG::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, Temp_byte_Variable_1) == 0x00001A, "Member 'MPInGameInventory_C_EquippedSlotBG::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, Temp_byte_Variable_2) == 0x00001B, "Member 'MPInGameInventory_C_EquippedSlotBG::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, Temp_bool_Variable_1) == 0x00001C, "Member 'MPInGameInventory_C_EquippedSlotBG::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, Temp_byte_Variable_3) == 0x00001D, "Member 'MPInGameInventory_C_EquippedSlotBG::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, Temp_byte_Variable_4) == 0x00001E, "Member 'MPInGameInventory_C_EquippedSlotBG::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, Temp_bool_Variable_2) == 0x00001F, "Member 'MPInGameInventory_C_EquippedSlotBG::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, Temp_byte_Variable_5) == 0x000020, "Member 'MPInGameInventory_C_EquippedSlotBG::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, Temp_byte_Variable_6) == 0x000021, "Member 'MPInGameInventory_C_EquippedSlotBG::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, Temp_bool_Variable_3) == 0x000022, "Member 'MPInGameInventory_C_EquippedSlotBG::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, Temp_byte_Variable_7) == 0x000023, "Member 'MPInGameInventory_C_EquippedSlotBG::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, Temp_byte_Variable_8) == 0x000024, "Member 'MPInGameInventory_C_EquippedSlotBG::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, Temp_bool_Variable_4) == 0x000025, "Member 'MPInGameInventory_C_EquippedSlotBG::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, Temp_byte_Variable_9) == 0x000026, "Member 'MPInGameInventory_C_EquippedSlotBG::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, Temp_byte_Variable_10) == 0x000027, "Member 'MPInGameInventory_C_EquippedSlotBG::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, Temp_bool_Variable_5) == 0x000028, "Member 'MPInGameInventory_C_EquippedSlotBG::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, Temp_byte_Variable_11) == 0x000029, "Member 'MPInGameInventory_C_EquippedSlotBG::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, Temp_byte_Variable_12) == 0x00002A, "Member 'MPInGameInventory_C_EquippedSlotBG::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, Temp_bool_Variable_6) == 0x00002B, "Member 'MPInGameInventory_C_EquippedSlotBG::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, Temp_byte_Variable_13) == 0x00002C, "Member 'MPInGameInventory_C_EquippedSlotBG::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, Temp_byte_Variable_14) == 0x00002D, "Member 'MPInGameInventory_C_EquippedSlotBG::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, CallFunc_GetSlotMotherUID_UDID_1) == 0x000030, "Member 'MPInGameInventory_C_EquippedSlotBG::CallFunc_GetSlotMotherUID_UDID_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, CallFunc_GetSlotMotherUID_UDID_2) == 0x000034, "Member 'MPInGameInventory_C_EquippedSlotBG::CallFunc_GetSlotMotherUID_UDID_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000038, "Member 'MPInGameInventory_C_EquippedSlotBG::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000039, "Member 'MPInGameInventory_C_EquippedSlotBG::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, CallFunc_GetSlotMotherUID_UDID_3) == 0x00003C, "Member 'MPInGameInventory_C_EquippedSlotBG::CallFunc_GetSlotMotherUID_UDID_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, CallFunc_GetSlotMotherUID_UDID_4) == 0x000040, "Member 'MPInGameInventory_C_EquippedSlotBG::CallFunc_GetSlotMotherUID_UDID_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000044, "Member 'MPInGameInventory_C_EquippedSlotBG::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x000045, "Member 'MPInGameInventory_C_EquippedSlotBG::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, CallFunc_GetSlotMotherUID_UDID_5) == 0x000048, "Member 'MPInGameInventory_C_EquippedSlotBG::CallFunc_GetSlotMotherUID_UDID_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, CallFunc_GetSlotMotherUID_UDID_6) == 0x00004C, "Member 'MPInGameInventory_C_EquippedSlotBG::CallFunc_GetSlotMotherUID_UDID_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x000050, "Member 'MPInGameInventory_C_EquippedSlotBG::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, CallFunc_EqualEqual_IntInt_ReturnValue_6) == 0x000051, "Member 'MPInGameInventory_C_EquippedSlotBG::CallFunc_EqualEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, CallFunc_GetSlotMotherUID_UDID_7) == 0x000054, "Member 'MPInGameInventory_C_EquippedSlotBG::CallFunc_GetSlotMotherUID_UDID_7' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, CallFunc_EqualEqual_IntInt_ReturnValue_7) == 0x000058, "Member 'MPInGameInventory_C_EquippedSlotBG::CallFunc_EqualEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, Temp_byte_Variable_15) == 0x000059, "Member 'MPInGameInventory_C_EquippedSlotBG::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, CallFunc_IsEquipped__ReturnValue) == 0x00005A, "Member 'MPInGameInventory_C_EquippedSlotBG::CallFunc_IsEquipped__ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, Temp_bool_Variable_7) == 0x00005B, "Member 'MPInGameInventory_C_EquippedSlotBG::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, CallFunc_IsEquipped__ReturnValue_1) == 0x00005C, "Member 'MPInGameInventory_C_EquippedSlotBG::CallFunc_IsEquipped__ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, K2Node_Select_Default) == 0x00005D, "Member 'MPInGameInventory_C_EquippedSlotBG::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, K2Node_Select_Default_1) == 0x00005E, "Member 'MPInGameInventory_C_EquippedSlotBG::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, CallFunc_IsEquipped__ReturnValue_2) == 0x00005F, "Member 'MPInGameInventory_C_EquippedSlotBG::CallFunc_IsEquipped__ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, CallFunc_IsEquipped__ReturnValue_3) == 0x000060, "Member 'MPInGameInventory_C_EquippedSlotBG::CallFunc_IsEquipped__ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, K2Node_Select_Default_2) == 0x000061, "Member 'MPInGameInventory_C_EquippedSlotBG::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, K2Node_Select_Default_3) == 0x000062, "Member 'MPInGameInventory_C_EquippedSlotBG::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, CallFunc_IsEquipped__ReturnValue_4) == 0x000063, "Member 'MPInGameInventory_C_EquippedSlotBG::CallFunc_IsEquipped__ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, CallFunc_IsEquipped__ReturnValue_5) == 0x000064, "Member 'MPInGameInventory_C_EquippedSlotBG::CallFunc_IsEquipped__ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, K2Node_Select_Default_4) == 0x000065, "Member 'MPInGameInventory_C_EquippedSlotBG::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, K2Node_Select_Default_5) == 0x000066, "Member 'MPInGameInventory_C_EquippedSlotBG::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, CallFunc_IsEquipped__ReturnValue_6) == 0x000067, "Member 'MPInGameInventory_C_EquippedSlotBG::CallFunc_IsEquipped__ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, CallFunc_IsEquipped__ReturnValue_7) == 0x000068, "Member 'MPInGameInventory_C_EquippedSlotBG::CallFunc_IsEquipped__ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, K2Node_Select_Default_6) == 0x000069, "Member 'MPInGameInventory_C_EquippedSlotBG::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EquippedSlotBG, K2Node_Select_Default_7) == 0x00006A, "Member 'MPInGameInventory_C_EquippedSlotBG::K2Node_Select_Default_7' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.EventOnContainerAction
// 0x0028 (0x0028 - 0x0000)
struct MPInGameInventory_C_EventOnContainerAction final
{
public:
	class UJSIContainer_C*                        FromContainer;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        ToContainer;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            DroppedSlotRef;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            SlotReceiverRef;                                   // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         ToSlotIndex;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rotated_;                                          // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RightMouseButton;                                  // 0x0025(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_EventOnContainerAction) == 0x000008, "Wrong alignment on MPInGameInventory_C_EventOnContainerAction");
static_assert(sizeof(MPInGameInventory_C_EventOnContainerAction) == 0x000028, "Wrong size on MPInGameInventory_C_EventOnContainerAction");
static_assert(offsetof(MPInGameInventory_C_EventOnContainerAction, FromContainer) == 0x000000, "Member 'MPInGameInventory_C_EventOnContainerAction::FromContainer' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EventOnContainerAction, ToContainer) == 0x000008, "Member 'MPInGameInventory_C_EventOnContainerAction::ToContainer' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EventOnContainerAction, DroppedSlotRef) == 0x000010, "Member 'MPInGameInventory_C_EventOnContainerAction::DroppedSlotRef' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EventOnContainerAction, SlotReceiverRef) == 0x000018, "Member 'MPInGameInventory_C_EventOnContainerAction::SlotReceiverRef' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EventOnContainerAction, ToSlotIndex) == 0x000020, "Member 'MPInGameInventory_C_EventOnContainerAction::ToSlotIndex' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EventOnContainerAction, Rotated_) == 0x000024, "Member 'MPInGameInventory_C_EventOnContainerAction::Rotated_' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_EventOnContainerAction, RightMouseButton) == 0x000025, "Member 'MPInGameInventory_C_EventOnContainerAction::RightMouseButton' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.ExecuteUbergraph_MPInGameInventory
// 0x11A0 (0x11A0 - 0x0000)
struct MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_10;                             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result;    // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_isHidden;                       // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        K2Node_ComponentBoundEvent_FromContainer_11;       // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        K2Node_ComponentBoundEvent_ToContainer_11;         // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_ComponentBoundEvent_SlotRef_20;             // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_Equipped__11;           // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_ToPockets__11;          // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        K2Node_ComponentBoundEvent_FromContainer_10;       // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        K2Node_ComponentBoundEvent_ToContainer_10;         // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_ComponentBoundEvent_SlotRef_19;             // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_Equipped__10;           // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_ToPockets__10;          // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        K2Node_ComponentBoundEvent_FromContainer_9;        // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        K2Node_ComponentBoundEvent_ToContainer_9;          // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_ComponentBoundEvent_SlotRef_18;             // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_Equipped__9;            // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_ToPockets__9;           // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        K2Node_ComponentBoundEvent_FromContainer_8;        // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        K2Node_ComponentBoundEvent_ToContainer_8;          // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_ComponentBoundEvent_SlotRef_17;             // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_Equipped__8;            // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_ToPockets__8;           // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        K2Node_ComponentBoundEvent_FromContainer_7;        // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        K2Node_ComponentBoundEvent_ToContainer_7;          // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_ComponentBoundEvent_SlotRef_16;             // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_Equipped__7;            // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_ToPockets__7;           // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E2[0x6];                                       // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        K2Node_ComponentBoundEvent_FromContainer_6;        // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        K2Node_ComponentBoundEvent_ToContainer_6;          // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_ComponentBoundEvent_SlotRef_15;             // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_Equipped__6;            // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_ToPockets__6;           // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        K2Node_ComponentBoundEvent_FromContainer_5;        // 0x0108(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        K2Node_ComponentBoundEvent_ToContainer_5;          // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_ComponentBoundEvent_SlotRef_14;             // 0x0118(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_Equipped__5;            // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_ToPockets__5;           // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_122[0x6];                                      // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        K2Node_ComponentBoundEvent_FromContainer_4;        // 0x0128(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        K2Node_ComponentBoundEvent_ToContainer_4;          // 0x0130(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_ComponentBoundEvent_SlotRef_13;             // 0x0138(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_Equipped__4;            // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_ToPockets__4;           // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_142[0x6];                                      // 0x0142(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        K2Node_ComponentBoundEvent_FromContainer_3;        // 0x0148(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        K2Node_ComponentBoundEvent_ToContainer_3;          // 0x0150(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_ComponentBoundEvent_SlotRef_12;             // 0x0158(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_Equipped__3;            // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_ToPockets__3;           // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_162[0x6];                                      // 0x0162(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        K2Node_ComponentBoundEvent_FromContainer_2;        // 0x0168(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        K2Node_ComponentBoundEvent_ToContainer_2;          // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_ComponentBoundEvent_SlotRef_11;             // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_Equipped__2;            // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_ToPockets__2;           // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_182[0x6];                                      // 0x0182(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        K2Node_ComponentBoundEvent_FromContainer_1;        // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        K2Node_ComponentBoundEvent_ToContainer_1;          // 0x0190(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_ComponentBoundEvent_SlotRef_10;             // 0x0198(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_Equipped__1;            // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_ToPockets__1;           // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A3[0x5];                                      // 0x01A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x01A8(0x0018)()
	ESlateVisibility                              Temp_byte_Variable_11;                             // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C2[0x6];                                      // 0x01C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x01C8(0x0018)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x01E0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_12;                             // 0x01F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F3[0x5];                                      // 0x01F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class II_StatsInterface_C>   K2Node_DynamicCast_AsI_Stats_Interface;            // 0x01F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPC_PlayerStatsComponent_C*            CallFunc_GetStatsComponent_PlayerStats;            // 0x0210(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_FindSlotWithItem_ActiveSlot;              // 0x0218(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_13;                             // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x3];                                      // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0224(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SurvPC_C>         CallFunc_CloseTabsWindow_self_CastInput;           // 0x0260(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CloseTabsWindow_Success;                  // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_272[0x6];                                      // 0x0272(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0278(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          Temp_bool_Variable_7;                              // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_289[0x3];                                      // 0x0289(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        K2Node_ComponentBoundEvent_FromContainer;          // 0x0290(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        K2Node_ComponentBoundEvent_ToContainer;            // 0x0298(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_ComponentBoundEvent_SlotRef_9;              // 0x02A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_Equipped_;              // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_ToPockets_;             // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AA[0x6];                                      // 0x02AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            K2Node_ComponentBoundEvent_ItemRef;                // 0x02B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             K2Node_ComponentBoundEvent_ItemInfo;               // 0x02B8(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_Count;                  // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DC[0x4];                                      // 0x04DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        K2Node_ComponentBoundEvent_Container_21;           // 0x04E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_CustomEvent_Slot;                           // 0x04E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_14;                             // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F1[0x7];                                      // 0x04F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            K2Node_CustomEvent_Item;                           // 0x04F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        K2Node_CustomEvent_Container_3;                    // 0x0500(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UJSI_Slot_C* Item, class UJSIContainer_C* Container)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0508(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0518(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_15;                             // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x0529(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52A[0x6];                                      // 0x052A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        K2Node_CustomEvent_Container_2;                    // 0x0530(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_539[0x7];                                      // 0x0539(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            K2Node_CustomEvent_ChildWidget;                    // 0x0540(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0548(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_16;                             // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_551[0x7];                                      // 0x0551(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC;                  // 0x0558(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0568(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_569[0x7];                                      // 0x0569(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_TabsWindow_C*                        CallFunc_GetTabsWidget_Widget;                     // 0x0570(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0578(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_17;                             // 0x0588(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_589[0x3];                                      // 0x0589(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x058C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0590(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvPC_C*                              K2Node_DynamicCast_AsSurv_PC;                      // 0x0598(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x05A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_18;                             // 0x05A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A3[0x5];                                      // 0x05A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x05A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x05B0(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x05C8(0x0018)()
	class UJSIContainer_C*                        K2Node_CustomEvent_FromContainer;                  // 0x05E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        K2Node_CustomEvent_ToContainer;                    // 0x05E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_CustomEvent_DroppedSlotRef;                 // 0x05F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_CustomEvent_SlotReceiverRef;                // 0x05F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ToSlotIndex;                    // 0x0600(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Rotated_;                       // 0x0604(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_RightMouseButton;               // 0x0605(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x0606(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_607[0x1];                                      // 0x0607(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UJSI_Slot_C* Item, class UJSIContainer_C* Container)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0608(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x0618(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x0628(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x0638(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_9;            // 0x0648(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_10;           // 0x0658(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        K2Node_CustomEvent_Container_1;                    // 0x0668(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_SetID_;                         // 0x0670(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_671[0x7];                                      // 0x0671(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x0678(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0688(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0689(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x068A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_19;                             // 0x068B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68C[0x4];                                      // 0x068C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            K2Node_ComponentBoundEvent_Item_11;                // 0x0690(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        K2Node_ComponentBoundEvent_Container_20;           // 0x0698(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_ComponentBoundEvent_Item_10;                // 0x06A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        K2Node_ComponentBoundEvent_Container_19;           // 0x06A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_ComponentBoundEvent_Item_9;                 // 0x06B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        K2Node_ComponentBoundEvent_Container_18;           // 0x06B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_ComponentBoundEvent_Item_8;                 // 0x06C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        K2Node_ComponentBoundEvent_Container_17;           // 0x06C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_ComponentBoundEvent_Item_7;                 // 0x06D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        K2Node_ComponentBoundEvent_Container_16;           // 0x06D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_ComponentBoundEvent_Item_6;                 // 0x06E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        K2Node_ComponentBoundEvent_Container_15;           // 0x06E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_ComponentBoundEvent_Item_5;                 // 0x06F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        K2Node_ComponentBoundEvent_Container_14;           // 0x06F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_ComponentBoundEvent_Item_4;                 // 0x0700(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        K2Node_ComponentBoundEvent_Container_13;           // 0x0708(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_ComponentBoundEvent_Item_3;                 // 0x0710(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        K2Node_ComponentBoundEvent_Container_12;           // 0x0718(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_ComponentBoundEvent_Item_2;                 // 0x0720(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        K2Node_ComponentBoundEvent_Container_11;           // 0x0728(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_ComponentBoundEvent_Item_1;                 // 0x0730(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        K2Node_ComponentBoundEvent_Container_10;           // 0x0738(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_ComponentBoundEvent_Item;                   // 0x0740(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        K2Node_ComponentBoundEvent_Container_9;            // 0x0748(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0750(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0751(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0752(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_753[0x1];                                      // 0x0753(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_11;           // 0x0754(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_CurrentOffset_1;        // 0x0764(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_11;                             // 0x0768(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0769(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76A[0x2];                                      // 0x076A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x076C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0770(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0778(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMPContainerWidget_C*                   K2Node_DynamicCast_AsMPContainer_Widget;           // 0x0780(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0788(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_789[0x7];                                      // 0x0789(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Status_C*                            K2Node_DynamicCast_AsW_Status;                     // 0x0790(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0798(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_799[0x3];                                      // 0x0799(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x079C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x07A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_20;                             // 0x07A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x07A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsBeginner_IsBeginner;                 // 0x07A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsBeginner_IsBeginner_1;               // 0x07A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x07A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_21;                             // 0x07A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x07A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x07A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_12;                             // 0x07A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x07AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue_1;      // 0x07AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7AC[0x4];                                      // 0x07AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x07B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x07B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x07C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C4[0x4];                                      // 0x07C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item_1;                         // 0x07C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x07D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_13;                             // 0x07D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_22;                             // 0x07D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x07D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_23;                             // 0x07D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x07D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_14;                             // 0x07D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_24;                             // 0x07DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x07DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_25;                             // 0x07DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_15;                             // 0x07DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7DE[0x2];                                      // 0x07DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x07E0(0x0018)()
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x07F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x07F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7FA[0x2];                                      // 0x07FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x07FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0800(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0808(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x080C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x080D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_80E[0x2];                                      // 0x080E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0810(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_16;                             // 0x0814(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_815[0x3];                                      // 0x0815(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool NewState)>                K2Node_CreateDelegate_OutputDelegate_12;           // 0x0818(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x0828(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0829(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82A[0x2];                                      // 0x082A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool NewState)>                K2Node_CreateDelegate_OutputDelegate_13;           // 0x082C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x083C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_83D[0x3];                                      // 0x083D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuestContext*                          CallFunc_GetTutorialQuestRef_TutorialQuest;        // 0x0840(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UQuestNode*                             CallFunc_GetActiveNode_ReturnValue;                // 0x0848(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetNodeText_ReturnValue;                  // 0x0850(0x0018)()
	class UQuestContextViewModel*                 CallFunc_GetViewModel_ReturnValue;                 // 0x0868(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x0870(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_NewState;                             // 0x0871(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_872[0x2];                                      // 0x0872(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_14;           // 0x0874(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UW_TabsWindow_C* TabsWindow)> K2Node_CreateDelegate_OutputDelegate_15;           // 0x0884(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x0894(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPocketContainer_Result;                // 0x0895(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_896[0x2];                                      // 0x0896(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_GetPocketContainer_Container;             // 0x0898(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPocketContainer_Result_1;              // 0x08A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A1[0x7];                                      // 0x08A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_GetPocketContainer_Container_1;           // 0x08A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_26;                             // 0x08B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x08B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DeleteSelectItem_ReturnValue;             // 0x08B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPocketContainer_Result_2;              // 0x08B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B4[0x4];                                      // 0x08B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_GetPocketContainer_Container_2;           // 0x08B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPocketContainer_Result_3;              // 0x08C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C1[0x7];                                      // 0x08C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_GetPocketContainer_Container_3;           // 0x08C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x08D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_27;                             // 0x08D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_17;                   // 0x08D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D3[0x1];                                      // 0x08D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x08D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x08D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D9[0x3];                                      // 0x08D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x08DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x08E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E1[0x3];                                      // 0x08E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_16;           // 0x08E4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_17;           // 0x08F4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_18;           // 0x0904(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_19;           // 0x0914(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_20;           // 0x0924(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_21;           // 0x0934(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_22;           // 0x0944(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_23;           // 0x0954(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_24;           // 0x0964(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_25;           // 0x0974(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_26;           // 0x0984(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_27;           // 0x0994(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_28;           // 0x09A4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_29;           // 0x09B4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_30;           // 0x09C4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_31;           // 0x09D4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_32;           // 0x09E4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_33;           // 0x09F4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_34;           // 0x0A04(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_35;           // 0x0A14(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A24[0x4];                                      // 0x0A24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        K2Node_CustomEvent_Container;                      // 0x0A28(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_CustomEvent_SlotRef;                        // 0x0A30(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_CustomEvent_Button;                         // 0x0A38(0x0018)(HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0A50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0A54(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EquipItem_Equipped;                       // 0x0A55(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A56[0x2];                                      // 0x0A56(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_EquipItem_To_Container;                   // 0x0A58(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0A60(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_18;                   // 0x0A68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A69[0x7];                                      // 0x0A69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APS_TDB_C*                              K2Node_DynamicCast_AsPS_TDB;                       // 0x0A70(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0A78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_19;                   // 0x0A79(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_20;                   // 0x0A7A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A7B[0x1];                                      // 0x0A7B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_36;           // 0x0A7C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x0A8C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x0A8D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_21;                   // 0x0A8E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0A8F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0A90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A91[0x3];                                      // 0x0A91(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_ComponentBoundEvent_Index_2;                // 0x0A94(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_17;                             // 0x0A98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x0A99(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9A[0x2];                                      // 0x0A9A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_37;           // 0x0A9C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x0AAC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AAD[0x3];                                      // 0x0AAD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<int32>                                   K2Node_MakeSet_Set;                                // 0x0AB0(0x0050)()
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0B00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0B01(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B02[0x6];                                      // 0x0B02(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0B08(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_22;                   // 0x0B10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B11[0x7];                                      // 0x0B11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0B18(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_GameHUD_C*                          K2Node_DynamicCast_AsBP_Game_HUD;                  // 0x0B20(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0B28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_23;                   // 0x0B29(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_28;                             // 0x0B2A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2B[0x1];                                      // 0x0B2B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0B2C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0B30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B31[0x3];                                      // 0x0B31(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0B34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_PointerHintInfo                     K2Node_MakeStruct_S_PointerHintInfo;               // 0x0B38(0x0028)(HasGetValueTypeHash)
	struct FS_PointerHintInfo                     K2Node_MakeStruct_S_PointerHintInfo_1;             // 0x0B60(0x0028)(HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Completed;                      // 0x0B88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_29;                             // 0x0B89(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B8A[0x6];                                      // 0x0B8A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class II_StatsInterface_C>   K2Node_DynamicCast_AsI_Stats_Interface_1;          // 0x0B90(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0BA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA1[0x7];                                      // 0x0BA1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPC_PlayerStatsComponent_C*            CallFunc_GetStatsComponent_PlayerStats_1;          // 0x0BA8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_38;           // 0x0BB0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_3;        // 0x0BC0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x0BC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC9[0x7];                                      // 0x0BC9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_1;                     // 0x0BD0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD_1;               // 0x0BD8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0BE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_18;                             // 0x0BE9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BEA[0x6];                                      // 0x0BEA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_4;        // 0x0BF0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_5;                           // 0x0BF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BF9[0x7];                                      // 0x0BF9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_2;                     // 0x0C00(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD_2;               // 0x0C08(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0C18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_30;                             // 0x0C19(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1A[0x6];                                      // 0x0C1A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_5;        // 0x0C20(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_3;                     // 0x0C28(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateStorageTutorialPointer_ItemsFound;  // 0x0C30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C31[0x7];                                      // 0x0C31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD_3;               // 0x0C38(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x0C48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C49[0x7];                                      // 0x0C49(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD_4;               // 0x0C50(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x0C60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_31;                             // 0x0C61(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C62[0x6];                                      // 0x0C62(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_6;        // 0x0C68(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_4;                     // 0x0C70(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0C78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C7C[0x4];                                      // 0x0C7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD_5;               // 0x0C80(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x0C90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C91[0x7];                                      // 0x0C91(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0C98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsShopWidgetOpen_IsOpen;                  // 0x0CA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_9;                // 0x0CA1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0CA2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_19;                             // 0x0CA3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_6;                           // 0x0CA4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA5[0x3];                                      // 0x0CA5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<int32>                                   K2Node_MakeSet_Set_1;                              // 0x0CA8(0x0050)()
	ESlateVisibility                              Temp_byte_Variable_32;                             // 0x0CF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CF9[0x7];                                      // 0x0CF9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0D00(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvPC_C*                              K2Node_DynamicCast_AsSurv_PC_1;                    // 0x0D08(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x0D10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_33;                             // 0x0D11(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_24;                   // 0x0D12(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_20;                             // 0x0D13(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_39;           // 0x0D14(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_7;                           // 0x0D24(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_34;                             // 0x0D25(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_35;                             // 0x0D26(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D27[0x1];                                      // 0x0D27(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_40;           // 0x0D28(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue;                  // 0x0D38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue_1;                // 0x0D40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue_2;                // 0x0D48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_21;                             // 0x0D50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_TutorReason;            // 0x0D51(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_IsProtectiveCase;       // 0x0D52(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_8;                           // 0x0D53(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D54[0x4];                                      // 0x0D54(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_9;                           // 0x0D58(0x0018)()
	ESlateVisibility                              Temp_byte_Variable_36;                             // 0x0D70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D71[0x7];                                      // 0x0D71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_10;                          // 0x0D78(0x0018)()
	ESlateVisibility                              Temp_byte_Variable_37;                             // 0x0D90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D91[0x7];                                      // 0x0D91(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result_1;  // 0x0D98(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1; // 0x0DA0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_25;                   // 0x0DA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA9[0x3];                                      // 0x0DA9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_CurrentOffset;          // 0x0DAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_26;                   // 0x0DB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x0DB1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsBeginner_IsBeginner_2;               // 0x0DB2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DB3[0x5];                                      // 0x0DB3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_TabsWindow_C*                        K2Node_CustomEvent_TabsWindow;                     // 0x0DB8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x0DC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x0DC1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_27;                   // 0x0DC2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC3[0x5];                                      // 0x0DC3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_7;        // 0x0DC8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC_1;                // 0x0DD0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x0DE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DE1[0x3];                                      // 0x0DE1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0DE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_TabsWindow_C*                        CallFunc_GetTabsWidget_Widget_1;                   // 0x0DE8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_8;        // 0x0DF0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_5;                     // 0x0DF8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_GameHUD_C*                          K2Node_DynamicCast_AsBP_Game_HUD_1;                // 0x0E00(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x0E08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_28;                   // 0x0E09(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_29;                   // 0x0E0A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_22;                             // 0x0E0B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E0C[0x4];                                      // 0x0E0C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_9;        // 0x0E10(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvPC_C*                              K2Node_DynamicCast_AsSurv_PC_2;                    // 0x0E18(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_17;                    // 0x0E20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_11;                          // 0x0E21(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E22[0x6];                                      // 0x0E22(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SurvPC_C>         CallFunc_GetPlayerRef_self_CastInput;              // 0x0E28(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      CallFunc_GetPlayerRef_SurvivalPlayer;              // 0x0E38(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_30;                   // 0x0E40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_31;                   // 0x0E41(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_2;          // 0x0E42(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsBeginner_IsBeginner_3;               // 0x0E43(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetTutorialDrinkWaterStage_ItemName_Name; // 0x0E44(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x0E4C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_38;                             // 0x0E4D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4E[0x2];                                      // 0x0E4E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_ComponentBoundEvent_Index_1;                // 0x0E50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_Index;                  // 0x0E54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_39;                             // 0x0E58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E59[0x7];                                      // 0x0E59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_10;       // 0x0E60(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_10;               // 0x0E68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E69[0x7];                                      // 0x0E69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_6;                     // 0x0E70(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD_6;               // 0x0E78(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_18;                    // 0x0E88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E89[0x7];                                      // 0x0E89(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_ItemInfo_C*                          CallFunc_GetItemInfoWidget_Widget;                 // 0x0E90(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_23;                             // 0x0E98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_40;                             // 0x0E99(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_12;                          // 0x0E9A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_41;                             // 0x0E9B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_24;                             // 0x0E9C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_13;                          // 0x0E9D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_11;               // 0x0E9E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9F[0x1];                                      // 0x0E9F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* DroppedSlotRef, class UJSI_Slot_C* SlotReceiverRef, int32 ToSlotIndex, bool Rotated_, bool RightMouseButton)> K2Node_CreateDelegate_OutputDelegate_41;           // 0x0EA0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_12;               // 0x0EB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x0EB1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EB2[0x6];                                      // 0x0EB2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        K2Node_CustomEvent_Pocket;                         // 0x0EB8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UJSIContainer_C* Pocket)> K2Node_CreateDelegate_OutputDelegate_42;           // 0x0EC0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UJSIContainer_C* Backpack)> K2Node_CreateDelegate_OutputDelegate_43;           // 0x0ED0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_32;                   // 0x0EE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EE1[0x3];                                      // 0x0EE1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_44;           // 0x0EE4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_33;                   // 0x0EF4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EF5[0x3];                                      // 0x0EF5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_11;       // 0x0EF8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0F00(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_7;                     // 0x0F10(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_GameHUD_C*                          K2Node_DynamicCast_AsBP_Game_HUD_2;                // 0x0F18(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_19;                    // 0x0F20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F21[0x3];                                      // 0x0F21(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_45;           // 0x0F24(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_46;           // 0x0F34(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button)> K2Node_CreateDelegate_OutputDelegate_47;           // 0x0F44(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button)> K2Node_CreateDelegate_OutputDelegate_48;           // 0x0F54(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0F64(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0F74(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_25;                             // 0x0F78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F79[0x7];                                      // 0x0F79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item_2;                         // 0x0F80(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x0F88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F89[0x3];                                      // 0x0F89(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_14;                          // 0x0F8C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0F9C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9D[0x3];                                      // 0x0F9D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        K2Node_ComponentBoundEvent_Container_8;            // 0x0FA0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_ComponentBoundEvent_SlotRef_8;              // 0x0FA8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_ComponentBoundEvent_Button_8;               // 0x0FB0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_TryToAddItemToStash_result;               // 0x0FC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipped__ReturnValue;                  // 0x0FC9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FCA[0x6];                                      // 0x0FCA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        K2Node_ComponentBoundEvent_Container_7;            // 0x0FD0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_ComponentBoundEvent_SlotRef_7;              // 0x0FD8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_ComponentBoundEvent_Button_7;               // 0x0FE0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_TryToAddItemToStash_result_1;             // 0x0FF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_15;                          // 0x0FF9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipped__ReturnValue_1;                // 0x0FFA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FFB[0x5];                                      // 0x0FFB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        K2Node_ComponentBoundEvent_Container_6;            // 0x1000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_ComponentBoundEvent_SlotRef_6;              // 0x1008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_ComponentBoundEvent_Button_6;               // 0x1010(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_TryToAddItemToStash_result_2;             // 0x1028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_16;                          // 0x1029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipped__ReturnValue_2;                // 0x102A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102B[0x5];                                     // 0x102B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        K2Node_ComponentBoundEvent_Container_5;            // 0x1030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_ComponentBoundEvent_SlotRef_5;              // 0x1038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_ComponentBoundEvent_Button_5;               // 0x1040(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_TryToAddItemToStash_result_3;             // 0x1058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_17;                          // 0x1059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipped__ReturnValue_3;                // 0x105A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_105B[0x5];                                     // 0x105B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x1060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_18;                          // 0x1070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1071[0x7];                                     // 0x1071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        K2Node_ComponentBoundEvent_Container_4;            // 0x1078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_ComponentBoundEvent_SlotRef_4;              // 0x1080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_ComponentBoundEvent_Button_4;               // 0x1088(0x0018)(HasGetValueTypeHash)
	class UJSIContainer_C*                        K2Node_ComponentBoundEvent_Container_3;            // 0x10A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_ComponentBoundEvent_SlotRef_3;              // 0x10A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_ComponentBoundEvent_Button_3;               // 0x10B0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_TryToAddItemToStash_result_4;             // 0x10C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryToAddItemToStash_result_5;             // 0x10C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipped__ReturnValue_4;                // 0x10CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipped__ReturnValue_5;                // 0x10CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_19;                          // 0x10CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_20;                          // 0x10CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10CE[0x2];                                     // 0x10CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        K2Node_ComponentBoundEvent_Container_2;            // 0x10D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_ComponentBoundEvent_SlotRef_2;              // 0x10D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_ComponentBoundEvent_Button_2;               // 0x10E0(0x0018)(HasGetValueTypeHash)
	class UJSIContainer_C*                        K2Node_ComponentBoundEvent_Container_1;            // 0x10F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_ComponentBoundEvent_SlotRef_1;              // 0x1100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_ComponentBoundEvent_Button_1;               // 0x1108(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_TryToAddItemToStash_result_6;             // 0x1120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryToAddItemToStash_result_7;             // 0x1121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipped__ReturnValue_6;                // 0x1122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipped__ReturnValue_7;                // 0x1123(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_21;                          // 0x1124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_22;                          // 0x1125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1126[0x2];                                     // 0x1126(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        K2Node_ComponentBoundEvent_Container;              // 0x1128(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_ComponentBoundEvent_SlotRef;                // 0x1130(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_ComponentBoundEvent_Button;                 // 0x1138(0x0018)(HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x1150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryToAddItemToStash_result_8;             // 0x1154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x1155(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1156[0x2];                                     // 0x1156(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x1158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipped__ReturnValue_8;                // 0x115C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_115D[0x3];                                     // 0x115D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_49;           // 0x1160(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_23;                          // 0x1170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1171[0x3];                                     // 0x1171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_50;           // 0x1174(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsBeginner_IsBeginner_4;               // 0x1184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_34;                   // 0x1185(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_13;               // 0x1186(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_42;                             // 0x1187(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_43;                             // 0x1188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_14;               // 0x1189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_24;                          // 0x118A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateStorageTutorialPointer_ItemsFound_1; // 0x118B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_118C[0x4];                                     // 0x118C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x1190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x1198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory) == 0x000008, "Wrong alignment on MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory");
static_assert(sizeof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory) == 0x0011A0, "Wrong size on MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, EntryPoint) == 0x000000, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::EntryPoint' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_bool_Variable) == 0x000004, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_byte_Variable) == 0x000005, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_byte_Variable_1) == 0x000006, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_bool_Variable_1) == 0x000007, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_byte_Variable_2) == 0x000008, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_byte_Variable_3) == 0x000009, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_bool_Variable_2) == 0x00000A, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_byte_Variable_4) == 0x00000B, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_byte_Variable_5) == 0x00000C, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_bool_Variable_3) == 0x00000D, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_byte_Variable_6) == 0x00000E, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_byte_Variable_7) == 0x00000F, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_byte_Variable_8) == 0x000010, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_byte_Variable_9) == 0x000011, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_bool_Variable_4) == 0x000012, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_byte_Variable_10) == 0x000019, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_bool_Variable_5) == 0x00001A, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsValid_ReturnValue) == 0x00001B, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_CreatePlayAnimationProxyObject_Result) == 0x000030, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_CreatePlayAnimationProxyObject_Result' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_CreatePlayAnimationProxyObject_ReturnValue) == 0x000038, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_CreatePlayAnimationProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CustomEvent_isHidden) == 0x000041, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CustomEvent_isHidden' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_FromContainer_11) == 0x000048, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_FromContainer_11' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_ToContainer_11) == 0x000050, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_ToContainer_11' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_SlotRef_20) == 0x000058, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_SlotRef_20' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Equipped__11) == 0x000060, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Equipped__11' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_ToPockets__11) == 0x000061, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_ToPockets__11' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_FromContainer_10) == 0x000068, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_FromContainer_10' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_ToContainer_10) == 0x000070, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_ToContainer_10' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_SlotRef_19) == 0x000078, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_SlotRef_19' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Equipped__10) == 0x000080, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Equipped__10' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_ToPockets__10) == 0x000081, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_ToPockets__10' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_FromContainer_9) == 0x000088, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_FromContainer_9' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_ToContainer_9) == 0x000090, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_ToContainer_9' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_SlotRef_18) == 0x000098, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_SlotRef_18' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Equipped__9) == 0x0000A0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Equipped__9' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_ToPockets__9) == 0x0000A1, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_ToPockets__9' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_FromContainer_8) == 0x0000A8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_FromContainer_8' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_ToContainer_8) == 0x0000B0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_ToContainer_8' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_SlotRef_17) == 0x0000B8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_SlotRef_17' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Equipped__8) == 0x0000C0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Equipped__8' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_ToPockets__8) == 0x0000C1, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_ToPockets__8' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_FromContainer_7) == 0x0000C8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_FromContainer_7' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_ToContainer_7) == 0x0000D0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_ToContainer_7' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_SlotRef_16) == 0x0000D8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_SlotRef_16' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Equipped__7) == 0x0000E0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Equipped__7' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_ToPockets__7) == 0x0000E1, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_ToPockets__7' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_FromContainer_6) == 0x0000E8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_FromContainer_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_ToContainer_6) == 0x0000F0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_ToContainer_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_SlotRef_15) == 0x0000F8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_SlotRef_15' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Equipped__6) == 0x000100, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Equipped__6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_ToPockets__6) == 0x000101, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_ToPockets__6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_FromContainer_5) == 0x000108, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_FromContainer_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_ToContainer_5) == 0x000110, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_ToContainer_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_SlotRef_14) == 0x000118, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_SlotRef_14' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Equipped__5) == 0x000120, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Equipped__5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_ToPockets__5) == 0x000121, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_ToPockets__5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_FromContainer_4) == 0x000128, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_FromContainer_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_ToContainer_4) == 0x000130, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_ToContainer_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_SlotRef_13) == 0x000138, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_SlotRef_13' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Equipped__4) == 0x000140, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Equipped__4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_ToPockets__4) == 0x000141, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_ToPockets__4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_FromContainer_3) == 0x000148, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_FromContainer_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_ToContainer_3) == 0x000150, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_ToContainer_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_SlotRef_12) == 0x000158, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_SlotRef_12' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Equipped__3) == 0x000160, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Equipped__3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_ToPockets__3) == 0x000161, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_ToPockets__3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_FromContainer_2) == 0x000168, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_FromContainer_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_ToContainer_2) == 0x000170, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_ToContainer_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_SlotRef_11) == 0x000178, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_SlotRef_11' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Equipped__2) == 0x000180, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Equipped__2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_ToPockets__2) == 0x000181, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_ToPockets__2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_FromContainer_1) == 0x000188, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_FromContainer_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_ToContainer_1) == 0x000190, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_ToContainer_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_SlotRef_10) == 0x000198, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_SlotRef_10' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Equipped__1) == 0x0001A0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Equipped__1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_ToPockets__1) == 0x0001A1, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_ToPockets__1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsValid_ReturnValue_2) == 0x0001A2, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_Conv_StringToText_ReturnValue) == 0x0001A8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_byte_Variable_11) == 0x0001C0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsValid_ReturnValue_3) == 0x0001C1, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0001C8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_1) == 0x0001E0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_Event_IsDesignTime) == 0x0001F0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_bool_Variable_6) == 0x0001F1, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_byte_Variable_12) == 0x0001F2, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_DynamicCast_AsI_Stats_Interface) == 0x0001F8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_DynamicCast_AsI_Stats_Interface' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_DynamicCast_bSuccess) == 0x000208, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetStatsComponent_PlayerStats) == 0x000210, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetStatsComponent_PlayerStats' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_FindSlotWithItem_ActiveSlot) == 0x000218, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_FindSlotWithItem_ActiveSlot' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_byte_Variable_13) == 0x000220, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_Event_MyGeometry) == 0x000224, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_Event_InDeltaTime) == 0x00025C, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_CloseTabsWindow_self_CastInput) == 0x000260, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_CloseTabsWindow_self_CastInput' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_CloseTabsWindow_Success) == 0x000270, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_CloseTabsWindow_Success' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsValid_ReturnValue_4) == 0x000271, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetAllChildren_ReturnValue) == 0x000278, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_bool_Variable_7) == 0x000288, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_Array_Length_ReturnValue_1) == 0x00028C, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_FromContainer) == 0x000290, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_FromContainer' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_ToContainer) == 0x000298, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_ToContainer' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_SlotRef_9) == 0x0002A0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_SlotRef_9' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Equipped_) == 0x0002A8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Equipped_' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_ToPockets_) == 0x0002A9, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_ToPockets_' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_ItemRef) == 0x0002B0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_ItemRef' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_ItemInfo) == 0x0002B8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_ItemInfo' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Count) == 0x0004D8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Count' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Container_21) == 0x0004E0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Container_21' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CustomEvent_Slot) == 0x0004E8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CustomEvent_Slot' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_byte_Variable_14) == 0x0004F0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CustomEvent_Item) == 0x0004F8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CustomEvent_Item' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CustomEvent_Container_3) == 0x000500, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CustomEvent_Container_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_2) == 0x000508, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_3) == 0x000518, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_byte_Variable_15) == 0x000528, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_bool_Variable_8) == 0x000529, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CustomEvent_Container_2) == 0x000530, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CustomEvent_Container_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_Not_PreBool_ReturnValue_1) == 0x000538, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CustomEvent_ChildWidget) == 0x000540, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CustomEvent_ChildWidget' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetPlayerController_ReturnValue) == 0x000548, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_byte_Variable_16) == 0x000550, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_DynamicCast_AsBPI_Surv_PC) == 0x000558, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_DynamicCast_AsBPI_Surv_PC' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_DynamicCast_bSuccess_1) == 0x000568, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetTabsWidget_Widget) == 0x000570, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetTabsWidget_Widget' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_4) == 0x000578, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_byte_Variable_17) == 0x000588, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_Add_IntInt_ReturnValue) == 0x00058C, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetOwningPlayer_ReturnValue) == 0x000590, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_DynamicCast_AsSurv_PC) == 0x000598, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_DynamicCast_AsSurv_PC' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_DynamicCast_bSuccess_2) == 0x0005A0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_bool_Variable_9) == 0x0005A1, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_byte_Variable_18) == 0x0005A2, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_PlayAnimationForward_ReturnValue) == 0x0005A8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_text_Variable) == 0x0005B0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_text_Variable_1) == 0x0005C8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CustomEvent_FromContainer) == 0x0005E0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CustomEvent_FromContainer' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CustomEvent_ToContainer) == 0x0005E8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CustomEvent_ToContainer' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CustomEvent_DroppedSlotRef) == 0x0005F0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CustomEvent_DroppedSlotRef' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CustomEvent_SlotReceiverRef) == 0x0005F8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CustomEvent_SlotReceiverRef' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CustomEvent_ToSlotIndex) == 0x000600, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CustomEvent_ToSlotIndex' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CustomEvent_Rotated_) == 0x000604, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CustomEvent_Rotated_' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CustomEvent_RightMouseButton) == 0x000605, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CustomEvent_RightMouseButton' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_bool_Variable_10) == 0x000606, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_5) == 0x000608, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_6) == 0x000618, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_7) == 0x000628, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_8) == 0x000638, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_9) == 0x000648, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_10) == 0x000658, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CustomEvent_Container_1) == 0x000668, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CustomEvent_Container_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CustomEvent_SetID_) == 0x000670, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CustomEvent_SetID_' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x000678, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_DynamicCast_bSuccess_3) == 0x000688, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000689, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsValid_ReturnValue_5) == 0x00068A, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_byte_Variable_19) == 0x00068B, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_byte_Variable_19' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Item_11) == 0x000690, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Item_11' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Container_20) == 0x000698, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Container_20' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Item_10) == 0x0006A0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Item_10' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Container_19) == 0x0006A8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Container_19' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Item_9) == 0x0006B0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Item_9' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Container_18) == 0x0006B8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Container_18' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Item_8) == 0x0006C0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Item_8' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Container_17) == 0x0006C8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Container_17' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Item_7) == 0x0006D0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Item_7' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Container_16) == 0x0006D8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Container_16' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Item_6) == 0x0006E0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Item_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Container_15) == 0x0006E8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Container_15' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Item_5) == 0x0006F0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Item_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Container_14) == 0x0006F8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Container_14' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Item_4) == 0x000700, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Item_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Container_13) == 0x000708, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Container_13' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Item_3) == 0x000710, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Item_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Container_12) == 0x000718, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Container_12' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Item_2) == 0x000720, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Item_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Container_11) == 0x000728, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Container_11' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Item_1) == 0x000730, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Item_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Container_10) == 0x000738, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Container_10' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Item) == 0x000740, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Item' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Container_9) == 0x000748, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Container_9' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsValid_ReturnValue_6) == 0x000750, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsVisible_ReturnValue) == 0x000751, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsValid_ReturnValue_7) == 0x000752, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_11) == 0x000754, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_CurrentOffset_1) == 0x000764, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_CurrentOffset_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_bool_Variable_11) == 0x000768, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_Select_Default) == 0x000769, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_int_Array_Index_Variable) == 0x00076C, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetChildAt_ReturnValue) == 0x000770, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_Array_Get_Item) == 0x000778, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_DynamicCast_AsMPContainer_Widget) == 0x000780, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_DynamicCast_AsMPContainer_Widget' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_DynamicCast_bSuccess_4) == 0x000788, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_DynamicCast_AsW_Status) == 0x000790, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_DynamicCast_AsW_Status' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_DynamicCast_bSuccess_5) == 0x000798, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_Array_AddUnique_ReturnValue) == 0x00079C, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x0007A0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_byte_Variable_20) == 0x0007A1, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_byte_Variable_20' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsValid_ReturnValue_8) == 0x0007A2, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetIsBeginner_IsBeginner) == 0x0007A3, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetIsBeginner_IsBeginner' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetIsBeginner_IsBeginner_1) == 0x0007A4, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetIsBeginner_IsBeginner_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0007A5, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_byte_Variable_21) == 0x0007A6, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_byte_Variable_21' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_BooleanAND_ReturnValue) == 0x0007A7, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_BooleanAND_ReturnValue_1) == 0x0007A8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_bool_Variable_12) == 0x0007A9, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_Not_PreBool_ReturnValue_2) == 0x0007AA, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_K2_IsValidTimerHandle_ReturnValue_1) == 0x0007AB, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_K2_IsValidTimerHandle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_PlayAnimationReverse_ReturnValue) == 0x0007B0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x0007B8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_int_Array_Index_Variable_1) == 0x0007C0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_Array_Get_Item_1) == 0x0007C8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_Array_Add_ReturnValue) == 0x0007D0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_bool_Variable_13) == 0x0007D4, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_bool_Variable_13' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_byte_Variable_22) == 0x0007D5, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_byte_Variable_22' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_Select_Default_1) == 0x0007D6, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_byte_Variable_23) == 0x0007D7, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_byte_Variable_23' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsValid_ReturnValue_9) == 0x0007D8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_bool_Variable_14) == 0x0007D9, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_bool_Variable_14' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_byte_Variable_24) == 0x0007DA, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_byte_Variable_24' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_Select_Default_2) == 0x0007DB, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_byte_Variable_25) == 0x0007DC, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_byte_Variable_25' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_bool_Variable_15) == 0x0007DD, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_bool_Variable_15' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_text_Variable_2) == 0x0007E0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_Select_Default_3) == 0x0007F8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsValid_ReturnValue_10) == 0x0007F9, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_Array_Length_ReturnValue_2) == 0x0007FC, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_K2_SetTimer_ReturnValue) == 0x000800, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_int_Loop_Counter_Variable) == 0x000808, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsValid_ReturnValue_11) == 0x00080C, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_Less_IntInt_ReturnValue) == 0x00080D, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_Add_IntInt_ReturnValue_1) == 0x000810, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_bool_Variable_16) == 0x000814, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_bool_Variable_16' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_12) == 0x000818, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsValid_ReturnValue_12) == 0x000828, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_Not_PreBool_ReturnValue_3) == 0x000829, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_13) == 0x00082C, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsValid_ReturnValue_13) == 0x00083C, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetTutorialQuestRef_TutorialQuest) == 0x000840, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetTutorialQuestRef_TutorialQuest' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetActiveNode_ReturnValue) == 0x000848, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetActiveNode_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetNodeText_ReturnValue) == 0x000850, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetNodeText_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetViewModel_ReturnValue) == 0x000868, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetViewModel_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsValid_ReturnValue_14) == 0x000870, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_Event_NewState) == 0x000871, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_Event_NewState' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_14) == 0x000874, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_15) == 0x000884, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsValid_ReturnValue_15) == 0x000894, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetPocketContainer_Result) == 0x000895, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetPocketContainer_Result' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetPocketContainer_Container) == 0x000898, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetPocketContainer_Container' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetPocketContainer_Result_1) == 0x0008A0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetPocketContainer_Result_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetPocketContainer_Container_1) == 0x0008A8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetPocketContainer_Container_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_byte_Variable_26) == 0x0008B0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_byte_Variable_26' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsValid_ReturnValue_16) == 0x0008B1, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_DeleteSelectItem_ReturnValue) == 0x0008B2, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_DeleteSelectItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetPocketContainer_Result_2) == 0x0008B3, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetPocketContainer_Result_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetPocketContainer_Container_2) == 0x0008B8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetPocketContainer_Container_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetPocketContainer_Result_3) == 0x0008C0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetPocketContainer_Result_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetPocketContainer_Container_3) == 0x0008C8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetPocketContainer_Container_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsVisible_ReturnValue_1) == 0x0008D0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_byte_Variable_27) == 0x0008D1, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_byte_Variable_27' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsValid_ReturnValue_17) == 0x0008D2, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsValid_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_int_Loop_Counter_Variable_1) == 0x0008D4, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_Less_IntInt_ReturnValue_1) == 0x0008D8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_Add_IntInt_ReturnValue_2) == 0x0008DC, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_Not_PreBool_ReturnValue_4) == 0x0008E0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_16) == 0x0008E4, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_17) == 0x0008F4, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_17' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_18) == 0x000904, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_18' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_19) == 0x000914, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_19' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_20) == 0x000924, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_20' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_21) == 0x000934, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_21' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_22) == 0x000944, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_22' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_23) == 0x000954, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_23' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_24) == 0x000964, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_24' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_25) == 0x000974, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_25' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_26) == 0x000984, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_26' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_27) == 0x000994, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_27' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_28) == 0x0009A4, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_28' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_29) == 0x0009B4, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_29' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_30) == 0x0009C4, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_30' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_31) == 0x0009D4, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_31' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_32) == 0x0009E4, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_32' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_33) == 0x0009F4, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_33' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_34) == 0x000A04, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_34' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_35) == 0x000A14, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_35' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CustomEvent_Container) == 0x000A28, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CustomEvent_Container' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CustomEvent_SlotRef) == 0x000A30, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CustomEvent_SlotRef' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CustomEvent_Button) == 0x000A38, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CustomEvent_Button' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_int_Array_Index_Variable_2) == 0x000A50, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000A54, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_EquipItem_Equipped) == 0x000A55, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_EquipItem_Equipped' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_EquipItem_To_Container) == 0x000A58, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_EquipItem_To_Container' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetPlayerController_ReturnValue_1) == 0x000A60, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsValid_ReturnValue_18) == 0x000A68, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsValid_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_DynamicCast_AsPS_TDB) == 0x000A70, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_DynamicCast_AsPS_TDB' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_DynamicCast_bSuccess_6) == 0x000A78, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsValid_ReturnValue_19) == 0x000A79, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsValid_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsValid_ReturnValue_20) == 0x000A7A, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsValid_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_36) == 0x000A7C, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_36' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_Not_PreBool_ReturnValue_5) == 0x000A8C, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_Not_PreBool_ReturnValue_6) == 0x000A8D, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsValid_ReturnValue_21) == 0x000A8E, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsValid_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_BooleanAND_ReturnValue_2) == 0x000A8F, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_BooleanAND_ReturnValue_3) == 0x000A90, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Index_2) == 0x000A94, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Index_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_bool_Variable_17) == 0x000A98, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_bool_Variable_17' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_Select_Default_4) == 0x000A99, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_37) == 0x000A9C, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_37' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_Not_PreBool_ReturnValue_7) == 0x000AAC, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_MakeSet_Set) == 0x000AB0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_MakeSet_Set' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_BooleanAND_ReturnValue_4) == 0x000B00, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_BooleanAND_ReturnValue_5) == 0x000B01, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetPlayerController_ReturnValue_2) == 0x000B08, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsValid_ReturnValue_22) == 0x000B10, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsValid_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetHUD_ReturnValue) == 0x000B18, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_DynamicCast_AsBP_Game_HUD) == 0x000B20, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_DynamicCast_AsBP_Game_HUD' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_DynamicCast_bSuccess_7) == 0x000B28, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsValid_ReturnValue_23) == 0x000B29, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsValid_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_byte_Variable_28) == 0x000B2A, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_byte_Variable_28' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_int_Loop_Counter_Variable_2) == 0x000B2C, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_Less_IntInt_ReturnValue_2) == 0x000B30, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_Add_IntInt_ReturnValue_3) == 0x000B34, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_MakeStruct_S_PointerHintInfo) == 0x000B38, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_MakeStruct_S_PointerHintInfo' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_MakeStruct_S_PointerHintInfo_1) == 0x000B60, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_MakeStruct_S_PointerHintInfo_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CustomEvent_Completed) == 0x000B88, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CustomEvent_Completed' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_byte_Variable_29) == 0x000B89, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_byte_Variable_29' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_DynamicCast_AsI_Stats_Interface_1) == 0x000B90, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_DynamicCast_AsI_Stats_Interface_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_DynamicCast_bSuccess_8) == 0x000BA0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetStatsComponent_PlayerStats_1) == 0x000BA8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetStatsComponent_PlayerStats_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_38) == 0x000BB0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_38' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetPlayerController_ReturnValue_3) == 0x000BC0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_Not_PreBool_ReturnValue_8) == 0x000BC8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetHUD_ReturnValue_1) == 0x000BD0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetHUD_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_DynamicCast_AsBPI_Game_HUD_1) == 0x000BD8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_DynamicCast_AsBPI_Game_HUD_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_DynamicCast_bSuccess_9) == 0x000BE8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_bool_Variable_18) == 0x000BE9, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_bool_Variable_18' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetPlayerController_ReturnValue_4) == 0x000BF0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetPlayerController_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_Select_Default_5) == 0x000BF8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetHUD_ReturnValue_2) == 0x000C00, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetHUD_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_DynamicCast_AsBPI_Game_HUD_2) == 0x000C08, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_DynamicCast_AsBPI_Game_HUD_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_DynamicCast_bSuccess_10) == 0x000C18, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_byte_Variable_30) == 0x000C19, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_byte_Variable_30' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetPlayerController_ReturnValue_5) == 0x000C20, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetPlayerController_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetHUD_ReturnValue_3) == 0x000C28, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetHUD_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_UpdateStorageTutorialPointer_ItemsFound) == 0x000C30, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_UpdateStorageTutorialPointer_ItemsFound' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_DynamicCast_AsBPI_Game_HUD_3) == 0x000C38, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_DynamicCast_AsBPI_Game_HUD_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_DynamicCast_bSuccess_11) == 0x000C48, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_DynamicCast_AsBPI_Game_HUD_4) == 0x000C50, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_DynamicCast_AsBPI_Game_HUD_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_DynamicCast_bSuccess_12) == 0x000C60, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_byte_Variable_31) == 0x000C61, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_byte_Variable_31' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetPlayerController_ReturnValue_6) == 0x000C68, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetPlayerController_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetHUD_ReturnValue_4) == 0x000C70, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetHUD_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetEndTime_ReturnValue) == 0x000C78, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_DynamicCast_AsBPI_Game_HUD_5) == 0x000C80, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_DynamicCast_AsBPI_Game_HUD_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_DynamicCast_bSuccess_13) == 0x000C90, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000C98, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsShopWidgetOpen_IsOpen) == 0x000CA0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsShopWidgetOpen_IsOpen' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_Not_PreBool_ReturnValue_9) == 0x000CA1, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_Not_PreBool_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_BooleanAND_ReturnValue_6) == 0x000CA2, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_bool_Variable_19) == 0x000CA3, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_bool_Variable_19' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_Select_Default_6) == 0x000CA4, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_MakeSet_Set_1) == 0x000CA8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_MakeSet_Set_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_byte_Variable_32) == 0x000CF8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_byte_Variable_32' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000D00, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_DynamicCast_AsSurv_PC_1) == 0x000D08, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_DynamicCast_AsSurv_PC_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_DynamicCast_bSuccess_14) == 0x000D10, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_byte_Variable_33) == 0x000D11, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_byte_Variable_33' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsValid_ReturnValue_24) == 0x000D12, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsValid_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_bool_Variable_20) == 0x000D13, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_bool_Variable_20' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_39) == 0x000D14, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_39' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_Select_Default_7) == 0x000D24, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_byte_Variable_34) == 0x000D25, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_byte_Variable_34' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_byte_Variable_35) == 0x000D26, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_byte_Variable_35' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_40) == 0x000D28, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_40' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_PlayEvent2D_ReturnValue) == 0x000D38, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_PlayEvent2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_PlayEvent2D_ReturnValue_1) == 0x000D40, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_PlayEvent2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_PlayEvent2D_ReturnValue_2) == 0x000D48, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_PlayEvent2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_bool_Variable_21) == 0x000D50, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_bool_Variable_21' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_TutorReason) == 0x000D51, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_TutorReason' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_IsProtectiveCase) == 0x000D52, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_IsProtectiveCase' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_Select_Default_8) == 0x000D53, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_Select_Default_9) == 0x000D58, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_byte_Variable_36) == 0x000D70, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_byte_Variable_36' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_Select_Default_10) == 0x000D78, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_byte_Variable_37) == 0x000D90, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_byte_Variable_37' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_CreatePlayAnimationProxyObject_Result_1) == 0x000D98, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_CreatePlayAnimationProxyObject_Result_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1) == 0x000DA0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsValid_ReturnValue_25) == 0x000DA8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsValid_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_CurrentOffset) == 0x000DAC, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_CurrentOffset' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsValid_ReturnValue_26) == 0x000DB0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsValid_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x000DB1, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetIsBeginner_IsBeginner_2) == 0x000DB2, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetIsBeginner_IsBeginner_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CustomEvent_TabsWindow) == 0x000DB8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CustomEvent_TabsWindow' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_BooleanAND_ReturnValue_7) == 0x000DC0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_BooleanAND_ReturnValue_8) == 0x000DC1, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsValid_ReturnValue_27) == 0x000DC2, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsValid_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetPlayerController_ReturnValue_7) == 0x000DC8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetPlayerController_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_DynamicCast_AsBPI_Surv_PC_1) == 0x000DD0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_DynamicCast_AsBPI_Surv_PC_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_DynamicCast_bSuccess_15) == 0x000DE0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_Array_Length_ReturnValue_3) == 0x000DE4, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetTabsWidget_Widget_1) == 0x000DE8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetTabsWidget_Widget_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetPlayerController_ReturnValue_8) == 0x000DF0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetPlayerController_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetHUD_ReturnValue_5) == 0x000DF8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetHUD_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_DynamicCast_AsBP_Game_HUD_1) == 0x000E00, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_DynamicCast_AsBP_Game_HUD_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_DynamicCast_bSuccess_16) == 0x000E08, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsValid_ReturnValue_28) == 0x000E09, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsValid_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsValid_ReturnValue_29) == 0x000E0A, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsValid_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_bool_Variable_22) == 0x000E0B, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_bool_Variable_22' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetPlayerController_ReturnValue_9) == 0x000E10, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetPlayerController_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_DynamicCast_AsSurv_PC_2) == 0x000E18, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_DynamicCast_AsSurv_PC_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_DynamicCast_bSuccess_17) == 0x000E20, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_DynamicCast_bSuccess_17' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_Select_Default_11) == 0x000E21, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetPlayerRef_self_CastInput) == 0x000E28, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetPlayerRef_self_CastInput' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetPlayerRef_SurvivalPlayer) == 0x000E38, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetPlayerRef_SurvivalPlayer' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsValid_ReturnValue_30) == 0x000E40, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsValid_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsValid_ReturnValue_31) == 0x000E41, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsValid_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_EqualEqual_StrStr_ReturnValue_2) == 0x000E42, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_EqualEqual_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetIsBeginner_IsBeginner_3) == 0x000E43, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetIsBeginner_IsBeginner_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetTutorialDrinkWaterStage_ItemName_Name) == 0x000E44, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetTutorialDrinkWaterStage_ItemName_Name' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_BooleanAND_ReturnValue_9) == 0x000E4C, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_byte_Variable_38) == 0x000E4D, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_byte_Variable_38' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Index_1) == 0x000E50, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Index_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Index) == 0x000E54, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Index' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_byte_Variable_39) == 0x000E58, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_byte_Variable_39' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetPlayerController_ReturnValue_10) == 0x000E60, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetPlayerController_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_Not_PreBool_ReturnValue_10) == 0x000E68, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_Not_PreBool_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetHUD_ReturnValue_6) == 0x000E70, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetHUD_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_DynamicCast_AsBPI_Game_HUD_6) == 0x000E78, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_DynamicCast_AsBPI_Game_HUD_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_DynamicCast_bSuccess_18) == 0x000E88, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_DynamicCast_bSuccess_18' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetItemInfoWidget_Widget) == 0x000E90, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetItemInfoWidget_Widget' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_bool_Variable_23) == 0x000E98, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_bool_Variable_23' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_byte_Variable_40) == 0x000E99, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_byte_Variable_40' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_Select_Default_12) == 0x000E9A, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_Select_Default_12' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_byte_Variable_41) == 0x000E9B, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_byte_Variable_41' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_bool_Variable_24) == 0x000E9C, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_bool_Variable_24' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_Select_Default_13) == 0x000E9D, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_Select_Default_13' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_Not_PreBool_ReturnValue_11) == 0x000E9E, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_Not_PreBool_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_41) == 0x000EA0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_41' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_Not_PreBool_ReturnValue_12) == 0x000EB0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_Not_PreBool_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_BooleanAND_ReturnValue_10) == 0x000EB1, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CustomEvent_Pocket) == 0x000EB8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CustomEvent_Pocket' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_42) == 0x000EC0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_42' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_43) == 0x000ED0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_43' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsValid_ReturnValue_32) == 0x000EE0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsValid_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_44) == 0x000EE4, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_44' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsValid_ReturnValue_33) == 0x000EF4, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsValid_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetPlayerController_ReturnValue_11) == 0x000EF8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetPlayerController_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_struct_Variable) == 0x000F00, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetHUD_ReturnValue_7) == 0x000F10, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetHUD_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_DynamicCast_AsBP_Game_HUD_2) == 0x000F18, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_DynamicCast_AsBP_Game_HUD_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_DynamicCast_bSuccess_19) == 0x000F20, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_DynamicCast_bSuccess_19' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_45) == 0x000F24, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_45' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_46) == 0x000F34, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_46' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_47) == 0x000F44, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_47' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_48) == 0x000F54, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_48' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_struct_Variable_1) == 0x000F64, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_int_Array_Index_Variable_3) == 0x000F74, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_bool_Variable_25) == 0x000F78, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_bool_Variable_25' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_Array_Get_Item_2) == 0x000F80, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x000F88, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_Select_Default_14) == 0x000F8C, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_Select_Default_14' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000F9C, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Container_8) == 0x000FA0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Container_8' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_SlotRef_8) == 0x000FA8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_SlotRef_8' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Button_8) == 0x000FB0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Button_8' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_TryToAddItemToStash_result) == 0x000FC8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_TryToAddItemToStash_result' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsEquipped__ReturnValue) == 0x000FC9, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsEquipped__ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Container_7) == 0x000FD0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Container_7' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_SlotRef_7) == 0x000FD8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_SlotRef_7' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Button_7) == 0x000FE0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Button_7' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_TryToAddItemToStash_result_1) == 0x000FF8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_TryToAddItemToStash_result_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_Select_Default_15) == 0x000FF9, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_Select_Default_15' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsEquipped__ReturnValue_1) == 0x000FFA, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsEquipped__ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Container_6) == 0x001000, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Container_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_SlotRef_6) == 0x001008, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_SlotRef_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Button_6) == 0x001010, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Button_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_TryToAddItemToStash_result_2) == 0x001028, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_TryToAddItemToStash_result_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_Select_Default_16) == 0x001029, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_Select_Default_16' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsEquipped__ReturnValue_2) == 0x00102A, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsEquipped__ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Container_5) == 0x001030, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Container_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_SlotRef_5) == 0x001038, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_SlotRef_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Button_5) == 0x001040, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Button_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_TryToAddItemToStash_result_3) == 0x001058, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_TryToAddItemToStash_result_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_Select_Default_17) == 0x001059, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_Select_Default_17' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsEquipped__ReturnValue_3) == 0x00105A, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsEquipped__ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_Conv_BoolToString_ReturnValue) == 0x001060, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_Select_Default_18) == 0x001070, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_Select_Default_18' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Container_4) == 0x001078, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Container_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_SlotRef_4) == 0x001080, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_SlotRef_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Button_4) == 0x001088, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Button_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Container_3) == 0x0010A0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Container_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_SlotRef_3) == 0x0010A8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_SlotRef_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Button_3) == 0x0010B0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Button_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_TryToAddItemToStash_result_4) == 0x0010C8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_TryToAddItemToStash_result_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_TryToAddItemToStash_result_5) == 0x0010C9, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_TryToAddItemToStash_result_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsEquipped__ReturnValue_4) == 0x0010CA, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsEquipped__ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsEquipped__ReturnValue_5) == 0x0010CB, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsEquipped__ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_Select_Default_19) == 0x0010CC, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_Select_Default_19' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_Select_Default_20) == 0x0010CD, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_Select_Default_20' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Container_2) == 0x0010D0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Container_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_SlotRef_2) == 0x0010D8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_SlotRef_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Button_2) == 0x0010E0, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Button_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Container_1) == 0x0010F8, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Container_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_SlotRef_1) == 0x001100, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_SlotRef_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Button_1) == 0x001108, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_TryToAddItemToStash_result_6) == 0x001120, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_TryToAddItemToStash_result_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_TryToAddItemToStash_result_7) == 0x001121, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_TryToAddItemToStash_result_7' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsEquipped__ReturnValue_6) == 0x001122, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsEquipped__ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsEquipped__ReturnValue_7) == 0x001123, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsEquipped__ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_Select_Default_21) == 0x001124, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_Select_Default_21' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_Select_Default_22) == 0x001125, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_Select_Default_22' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Container) == 0x001128, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Container' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_SlotRef) == 0x001130, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_SlotRef' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_ComponentBoundEvent_Button) == 0x001138, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_int_Loop_Counter_Variable_3) == 0x001150, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_TryToAddItemToStash_result_8) == 0x001154, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_TryToAddItemToStash_result_8' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_Less_IntInt_ReturnValue_3) == 0x001155, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_Add_IntInt_ReturnValue_4) == 0x001158, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsEquipped__ReturnValue_8) == 0x00115C, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsEquipped__ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_49) == 0x001160, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_49' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_Select_Default_23) == 0x001170, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_Select_Default_23' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_CreateDelegate_OutputDelegate_50) == 0x001174, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_CreateDelegate_OutputDelegate_50' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_GetIsBeginner_IsBeginner_4) == 0x001184, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_GetIsBeginner_IsBeginner_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_IsValid_ReturnValue_34) == 0x001185, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_IsValid_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_Not_PreBool_ReturnValue_13) == 0x001186, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_Not_PreBool_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_byte_Variable_42) == 0x001187, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_byte_Variable_42' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, Temp_byte_Variable_43) == 0x001188, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::Temp_byte_Variable_43' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_Not_PreBool_ReturnValue_14) == 0x001189, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_Not_PreBool_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, K2Node_Select_Default_24) == 0x00118A, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::K2Node_Select_Default_24' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_UpdateStorageTutorialPointer_ItemsFound_1) == 0x00118B, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_UpdateStorageTutorialPointer_ItemsFound_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x001190, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory, CallFunc_Delay_Duration_ImplicitCast) == 0x001198, "Member 'MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.Fill Empty Squad Slots
// 0x0038 (0x0038 - 0x0000)
struct MPInGameInventory_C_Fill_Empty_Squad_Slots final
{
public:
	int32                                         StartIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Group_C*                           CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGS_TDB_C*                              K2Node_DynamicCast_AsGS_TDB;                       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSquadsMaxPlayersQuantity_MaxSquadQuantity; // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_Fill_Empty_Squad_Slots) == 0x000008, "Wrong alignment on MPInGameInventory_C_Fill_Empty_Squad_Slots");
static_assert(sizeof(MPInGameInventory_C_Fill_Empty_Squad_Slots) == 0x000038, "Wrong size on MPInGameInventory_C_Fill_Empty_Squad_Slots");
static_assert(offsetof(MPInGameInventory_C_Fill_Empty_Squad_Slots, StartIndex) == 0x000000, "Member 'MPInGameInventory_C_Fill_Empty_Squad_Slots::StartIndex' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Fill_Empty_Squad_Slots, Temp_int_Variable) == 0x000004, "Member 'MPInGameInventory_C_Fill_Empty_Squad_Slots::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Fill_Empty_Squad_Slots, CallFunc_Array_Get_Item) == 0x000008, "Member 'MPInGameInventory_C_Fill_Empty_Squad_Slots::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Fill_Empty_Squad_Slots, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'MPInGameInventory_C_Fill_Empty_Squad_Slots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Fill_Empty_Squad_Slots, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'MPInGameInventory_C_Fill_Empty_Squad_Slots::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Fill_Empty_Squad_Slots, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'MPInGameInventory_C_Fill_Empty_Squad_Slots::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Fill_Empty_Squad_Slots, K2Node_DynamicCast_AsGS_TDB) == 0x000020, "Member 'MPInGameInventory_C_Fill_Empty_Squad_Slots::K2Node_DynamicCast_AsGS_TDB' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Fill_Empty_Squad_Slots, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'MPInGameInventory_C_Fill_Empty_Squad_Slots::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Fill_Empty_Squad_Slots, CallFunc_GetSquadsMaxPlayersQuantity_MaxSquadQuantity) == 0x00002C, "Member 'MPInGameInventory_C_Fill_Empty_Squad_Slots::CallFunc_GetSquadsMaxPlayersQuantity_MaxSquadQuantity' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Fill_Empty_Squad_Slots, CallFunc_Subtract_IntInt_ReturnValue) == 0x000030, "Member 'MPInGameInventory_C_Fill_Empty_Squad_Slots::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Fill_Empty_Squad_Slots, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000034, "Member 'MPInGameInventory_C_Fill_Empty_Squad_Slots::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Fill_Empty_Squad_Slots, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000035, "Member 'MPInGameInventory_C_Fill_Empty_Squad_Slots::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.FindSlotWithItem
// 0x0068 (0x0068 - 0x0000)
struct MPInGameInventory_C_FindSlotWithItem final
{
public:
	class UJSI_Slot_C*                            Param_ActiveSlot;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            ASlot;                                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_Found_;                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef;               // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMPContainerWidget_C*                   K2Node_DynamicCast_AsMPContainer_Widget;           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyChildren_ReturnValue;               // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmptySlot_isEmpty;                      // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_FindSlotWithItem) == 0x000008, "Wrong alignment on MPInGameInventory_C_FindSlotWithItem");
static_assert(sizeof(MPInGameInventory_C_FindSlotWithItem) == 0x000068, "Wrong size on MPInGameInventory_C_FindSlotWithItem");
static_assert(offsetof(MPInGameInventory_C_FindSlotWithItem, Param_ActiveSlot) == 0x000000, "Member 'MPInGameInventory_C_FindSlotWithItem::Param_ActiveSlot' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_FindSlotWithItem, ASlot) == 0x000008, "Member 'MPInGameInventory_C_FindSlotWithItem::ASlot' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_FindSlotWithItem, Temp_bool_True_if_break_was_hit_Variable) == 0x000010, "Member 'MPInGameInventory_C_FindSlotWithItem::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_FindSlotWithItem, Temp_int_Array_Index_Variable) == 0x000014, "Member 'MPInGameInventory_C_FindSlotWithItem::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_FindSlotWithItem, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'MPInGameInventory_C_FindSlotWithItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_FindSlotWithItem, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'MPInGameInventory_C_FindSlotWithItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_FindSlotWithItem, CallFunc_GetChildAt_ReturnValue) == 0x000020, "Member 'MPInGameInventory_C_FindSlotWithItem::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_FindSlotWithItem, CallFunc_GetEquippedItemRef_Found_) == 0x000028, "Member 'MPInGameInventory_C_FindSlotWithItem::CallFunc_GetEquippedItemRef_Found_' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_FindSlotWithItem, CallFunc_GetEquippedItemRef_ItemRef) == 0x000030, "Member 'MPInGameInventory_C_FindSlotWithItem::CallFunc_GetEquippedItemRef_ItemRef' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_FindSlotWithItem, K2Node_DynamicCast_AsMPContainer_Widget) == 0x000038, "Member 'MPInGameInventory_C_FindSlotWithItem::K2Node_DynamicCast_AsMPContainer_Widget' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_FindSlotWithItem, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'MPInGameInventory_C_FindSlotWithItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_FindSlotWithItem, CallFunc_HasAnyChildren_ReturnValue) == 0x000041, "Member 'MPInGameInventory_C_FindSlotWithItem::CallFunc_HasAnyChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_FindSlotWithItem, CallFunc_Array_Get_Item) == 0x000048, "Member 'MPInGameInventory_C_FindSlotWithItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_FindSlotWithItem, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'MPInGameInventory_C_FindSlotWithItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_FindSlotWithItem, CallFunc_IsEmptySlot_isEmpty) == 0x000054, "Member 'MPInGameInventory_C_FindSlotWithItem::CallFunc_IsEmptySlot_isEmpty' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_FindSlotWithItem, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'MPInGameInventory_C_FindSlotWithItem::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_FindSlotWithItem, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'MPInGameInventory_C_FindSlotWithItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_FindSlotWithItem, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'MPInGameInventory_C_FindSlotWithItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_FindSlotWithItem, CallFunc_BooleanAND_ReturnValue) == 0x000064, "Member 'MPInGameInventory_C_FindSlotWithItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.Get Counts Perks
// 0x0050 (0x0050 - 0x0000)
struct MPInGameInventory_C_Get_Counts_Perks final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0038(0x0018)()
};
static_assert(alignof(MPInGameInventory_C_Get_Counts_Perks) == 0x000008, "Wrong alignment on MPInGameInventory_C_Get_Counts_Perks");
static_assert(sizeof(MPInGameInventory_C_Get_Counts_Perks) == 0x000050, "Wrong size on MPInGameInventory_C_Get_Counts_Perks");
static_assert(offsetof(MPInGameInventory_C_Get_Counts_Perks, ReturnValue) == 0x000000, "Member 'MPInGameInventory_C_Get_Counts_Perks::ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Get_Counts_Perks, CallFunc_Conv_IntToString_ReturnValue) == 0x000018, "Member 'MPInGameInventory_C_Get_Counts_Perks::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Get_Counts_Perks, CallFunc_Concat_StrStr_ReturnValue) == 0x000028, "Member 'MPInGameInventory_C_Get_Counts_Perks::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Get_Counts_Perks, CallFunc_Conv_StringToText_ReturnValue) == 0x000038, "Member 'MPInGameInventory_C_Get_Counts_Perks::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.GetCategorySwitcherIndex
// 0x0004 (0x0004 - 0x0000)
struct MPInGameInventory_C_GetCategorySwitcherIndex final
{
public:
	int32                                         Param_WidgetCategorySwitcherIndex;                 // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_GetCategorySwitcherIndex) == 0x000004, "Wrong alignment on MPInGameInventory_C_GetCategorySwitcherIndex");
static_assert(sizeof(MPInGameInventory_C_GetCategorySwitcherIndex) == 0x000004, "Wrong size on MPInGameInventory_C_GetCategorySwitcherIndex");
static_assert(offsetof(MPInGameInventory_C_GetCategorySwitcherIndex, Param_WidgetCategorySwitcherIndex) == 0x000000, "Member 'MPInGameInventory_C_GetCategorySwitcherIndex::Param_WidgetCategorySwitcherIndex' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.GetCountMoney
// 0x0038 (0x0038 - 0x0000)
struct MPInGameInventory_C_GetCountMoney final
{
public:
	int32                                         Return;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AmountOfMoney;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPocketContainer_Result;                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_GetPocketContainer_Container;             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_GetCountMoney) == 0x000008, "Wrong alignment on MPInGameInventory_C_GetCountMoney");
static_assert(sizeof(MPInGameInventory_C_GetCountMoney) == 0x000038, "Wrong size on MPInGameInventory_C_GetCountMoney");
static_assert(offsetof(MPInGameInventory_C_GetCountMoney, Return) == 0x000000, "Member 'MPInGameInventory_C_GetCountMoney::Return' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_GetCountMoney, AmountOfMoney) == 0x000004, "Member 'MPInGameInventory_C_GetCountMoney::AmountOfMoney' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_GetCountMoney, Temp_int_Array_Index_Variable) == 0x000008, "Member 'MPInGameInventory_C_GetCountMoney::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_GetCountMoney, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'MPInGameInventory_C_GetCountMoney::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_GetCountMoney, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'MPInGameInventory_C_GetCountMoney::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_GetCountMoney, CallFunc_GetPocketContainer_Result) == 0x000014, "Member 'MPInGameInventory_C_GetCountMoney::CallFunc_GetPocketContainer_Result' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_GetCountMoney, CallFunc_GetPocketContainer_Container) == 0x000018, "Member 'MPInGameInventory_C_GetCountMoney::CallFunc_GetPocketContainer_Container' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_GetCountMoney, CallFunc_Array_Get_Item) == 0x000020, "Member 'MPInGameInventory_C_GetCountMoney::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_GetCountMoney, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'MPInGameInventory_C_GetCountMoney::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_GetCountMoney, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'MPInGameInventory_C_GetCountMoney::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_GetCountMoney, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00002D, "Member 'MPInGameInventory_C_GetCountMoney::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_GetCountMoney, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'MPInGameInventory_C_GetCountMoney::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.GetFocused
// 0x0001 (0x0001 - 0x0000)
struct MPInGameInventory_C_GetFocused final
{
public:
	bool                                          Param_Focused;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_GetFocused) == 0x000001, "Wrong alignment on MPInGameInventory_C_GetFocused");
static_assert(sizeof(MPInGameInventory_C_GetFocused) == 0x000001, "Wrong size on MPInGameInventory_C_GetFocused");
static_assert(offsetof(MPInGameInventory_C_GetFocused, Param_Focused) == 0x000000, "Member 'MPInGameInventory_C_GetFocused::Param_Focused' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.GetPocketContainer
// 0x0030 (0x0030 - 0x0000)
struct MPInGameInventory_C_GetPocketContainer final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        Container;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          FunctionResult;                                    // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        K2Node_DynamicCast_AsJSIContainer;                 // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_GetPocketContainer) == 0x000008, "Wrong alignment on MPInGameInventory_C_GetPocketContainer");
static_assert(sizeof(MPInGameInventory_C_GetPocketContainer) == 0x000030, "Wrong size on MPInGameInventory_C_GetPocketContainer");
static_assert(offsetof(MPInGameInventory_C_GetPocketContainer, Result) == 0x000000, "Member 'MPInGameInventory_C_GetPocketContainer::Result' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_GetPocketContainer, Container) == 0x000008, "Member 'MPInGameInventory_C_GetPocketContainer::Container' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_GetPocketContainer, FunctionResult) == 0x000010, "Member 'MPInGameInventory_C_GetPocketContainer::FunctionResult' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_GetPocketContainer, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'MPInGameInventory_C_GetPocketContainer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_GetPocketContainer, CallFunc_GetChildAt_ReturnValue) == 0x000018, "Member 'MPInGameInventory_C_GetPocketContainer::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_GetPocketContainer, K2Node_DynamicCast_AsJSIContainer) == 0x000020, "Member 'MPInGameInventory_C_GetPocketContainer::K2Node_DynamicCast_AsJSIContainer' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_GetPocketContainer, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'MPInGameInventory_C_GetPocketContainer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_GetPocketContainer, CallFunc_IsValid_ReturnValue_1) == 0x000029, "Member 'MPInGameInventory_C_GetPocketContainer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.GetScrollBarRenderOpacity
// 0x0030 (0x0030 - 0x0000)
struct MPInGameInventory_C_GetScrollBarRenderOpacity final
{
public:
	class UScrollBox*                             ScrollBoxWidgetRef;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_GetScrollBarRenderOpacity) == 0x000008, "Wrong alignment on MPInGameInventory_C_GetScrollBarRenderOpacity");
static_assert(sizeof(MPInGameInventory_C_GetScrollBarRenderOpacity) == 0x000030, "Wrong size on MPInGameInventory_C_GetScrollBarRenderOpacity");
static_assert(offsetof(MPInGameInventory_C_GetScrollBarRenderOpacity, ScrollBoxWidgetRef) == 0x000000, "Member 'MPInGameInventory_C_GetScrollBarRenderOpacity::ScrollBoxWidgetRef' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_GetScrollBarRenderOpacity, ReturnValue) == 0x000008, "Member 'MPInGameInventory_C_GetScrollBarRenderOpacity::ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_GetScrollBarRenderOpacity, CallFunc_BreakColor_R) == 0x000010, "Member 'MPInGameInventory_C_GetScrollBarRenderOpacity::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_GetScrollBarRenderOpacity, CallFunc_BreakColor_G) == 0x000014, "Member 'MPInGameInventory_C_GetScrollBarRenderOpacity::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_GetScrollBarRenderOpacity, CallFunc_BreakColor_B) == 0x000018, "Member 'MPInGameInventory_C_GetScrollBarRenderOpacity::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_GetScrollBarRenderOpacity, CallFunc_BreakColor_A) == 0x00001C, "Member 'MPInGameInventory_C_GetScrollBarRenderOpacity::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_GetScrollBarRenderOpacity, CallFunc_MapRangeClamped_ReturnValue) == 0x000020, "Member 'MPInGameInventory_C_GetScrollBarRenderOpacity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_GetScrollBarRenderOpacity, CallFunc_MapRangeClamped_Value_ImplicitCast) == 0x000028, "Member 'MPInGameInventory_C_GetScrollBarRenderOpacity::CallFunc_MapRangeClamped_Value_ImplicitCast' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.GetStashTutorialItemToTake
// 0x0008 (0x0008 - 0x0000)
struct MPInGameInventory_C_GetStashTutorialItemToTake final
{
public:
	class UJSI_Slot_C*                            Param_StashTutorialItemToTake;                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_GetStashTutorialItemToTake) == 0x000008, "Wrong alignment on MPInGameInventory_C_GetStashTutorialItemToTake");
static_assert(sizeof(MPInGameInventory_C_GetStashTutorialItemToTake) == 0x000008, "Wrong size on MPInGameInventory_C_GetStashTutorialItemToTake");
static_assert(offsetof(MPInGameInventory_C_GetStashTutorialItemToTake, Param_StashTutorialItemToTake) == 0x000000, "Member 'MPInGameInventory_C_GetStashTutorialItemToTake::Param_StashTutorialItemToTake' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.HandleContainersEvents
// 0x0010 (0x0010 - 0x0000)
struct MPInGameInventory_C_HandleContainersEvents final
{
public:
	class UJSIContainer_C*                        Container;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          SetID_;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_HandleContainersEvents) == 0x000008, "Wrong alignment on MPInGameInventory_C_HandleContainersEvents");
static_assert(sizeof(MPInGameInventory_C_HandleContainersEvents) == 0x000010, "Wrong size on MPInGameInventory_C_HandleContainersEvents");
static_assert(offsetof(MPInGameInventory_C_HandleContainersEvents, Container) == 0x000000, "Member 'MPInGameInventory_C_HandleContainersEvents::Container' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_HandleContainersEvents, SetID_) == 0x000008, "Member 'MPInGameInventory_C_HandleContainersEvents::SetID_' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.Hide Invite Home Widget
// 0x0008 (0x0008 - 0x0000)
struct MPInGameInventory_C_Hide_Invite_Home_Widget final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_Hide_Invite_Home_Widget) == 0x000008, "Wrong alignment on MPInGameInventory_C_Hide_Invite_Home_Widget");
static_assert(sizeof(MPInGameInventory_C_Hide_Invite_Home_Widget) == 0x000008, "Wrong size on MPInGameInventory_C_Hide_Invite_Home_Widget");
static_assert(offsetof(MPInGameInventory_C_Hide_Invite_Home_Widget, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'MPInGameInventory_C_Hide_Invite_Home_Widget::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.Hide Squad Options
// 0x0040 (0x0040 - 0x0000)
struct MPInGameInventory_C_Hide_Squad_Options final
{
public:
	class UWBP_Group_C*                           SquadEntry;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_Group_C*>                   CallFunc_Map_Values_Values;                        // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Group_C*                           CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_Hide_Squad_Options) == 0x000008, "Wrong alignment on MPInGameInventory_C_Hide_Squad_Options");
static_assert(sizeof(MPInGameInventory_C_Hide_Squad_Options) == 0x000040, "Wrong size on MPInGameInventory_C_Hide_Squad_Options");
static_assert(offsetof(MPInGameInventory_C_Hide_Squad_Options, SquadEntry) == 0x000000, "Member 'MPInGameInventory_C_Hide_Squad_Options::SquadEntry' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Hide_Squad_Options, Temp_int_Array_Index_Variable) == 0x000008, "Member 'MPInGameInventory_C_Hide_Squad_Options::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Hide_Squad_Options, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'MPInGameInventory_C_Hide_Squad_Options::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Hide_Squad_Options, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'MPInGameInventory_C_Hide_Squad_Options::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Hide_Squad_Options, CallFunc_Map_Values_Values) == 0x000018, "Member 'MPInGameInventory_C_Hide_Squad_Options::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Hide_Squad_Options, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'MPInGameInventory_C_Hide_Squad_Options::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Hide_Squad_Options, CallFunc_Array_Get_Item) == 0x000030, "Member 'MPInGameInventory_C_Hide_Squad_Options::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Hide_Squad_Options, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'MPInGameInventory_C_Hide_Squad_Options::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Hide_Squad_Options, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000039, "Member 'MPInGameInventory_C_Hide_Squad_Options::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.HoldRepairAll
// 0x0008 (0x0008 - 0x0000)
struct MPInGameInventory_C_HoldRepairAll final
{
public:
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_HoldRepairAll) == 0x000008, "Wrong alignment on MPInGameInventory_C_HoldRepairAll");
static_assert(sizeof(MPInGameInventory_C_HoldRepairAll) == 0x000008, "Wrong size on MPInGameInventory_C_HoldRepairAll");
static_assert(offsetof(MPInGameInventory_C_HoldRepairAll, CallFunc_K2_SetTimer_ReturnValue) == 0x000000, "Member 'MPInGameInventory_C_HoldRepairAll::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.InitStatsTrainProgress
// 0x0004 (0x0004 - 0x0000)
struct MPInGameInventory_C_InitStatsTrainProgress final
{
public:
	int32                                         WidgetsPerRow;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_InitStatsTrainProgress) == 0x000004, "Wrong alignment on MPInGameInventory_C_InitStatsTrainProgress");
static_assert(sizeof(MPInGameInventory_C_InitStatsTrainProgress) == 0x000004, "Wrong size on MPInGameInventory_C_InitStatsTrainProgress");
static_assert(offsetof(MPInGameInventory_C_InitStatsTrainProgress, WidgetsPerRow) == 0x000000, "Member 'MPInGameInventory_C_InitStatsTrainProgress::WidgetsPerRow' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.IsContainerEmpty
// 0x0040 (0x0040 - 0x0000)
struct MPInGameInventory_C_IsContainerEmpty final
{
public:
	class UJSIContainer_C*                        Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Counter;                                           // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmptySlot_isEmpty;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_IsContainerEmpty) == 0x000008, "Wrong alignment on MPInGameInventory_C_IsContainerEmpty");
static_assert(sizeof(MPInGameInventory_C_IsContainerEmpty) == 0x000040, "Wrong size on MPInGameInventory_C_IsContainerEmpty");
static_assert(offsetof(MPInGameInventory_C_IsContainerEmpty, Target) == 0x000000, "Member 'MPInGameInventory_C_IsContainerEmpty::Target' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_IsContainerEmpty, ReturnValue) == 0x000008, "Member 'MPInGameInventory_C_IsContainerEmpty::ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_IsContainerEmpty, Counter) == 0x00000C, "Member 'MPInGameInventory_C_IsContainerEmpty::Counter' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_IsContainerEmpty, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'MPInGameInventory_C_IsContainerEmpty::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_IsContainerEmpty, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'MPInGameInventory_C_IsContainerEmpty::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_IsContainerEmpty, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'MPInGameInventory_C_IsContainerEmpty::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_IsContainerEmpty, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'MPInGameInventory_C_IsContainerEmpty::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_IsContainerEmpty, CallFunc_Array_Length_ReturnValue_1) == 0x000020, "Member 'MPInGameInventory_C_IsContainerEmpty::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_IsContainerEmpty, Temp_int_Array_Index_Variable) == 0x000024, "Member 'MPInGameInventory_C_IsContainerEmpty::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_IsContainerEmpty, Temp_int_Variable) == 0x000028, "Member 'MPInGameInventory_C_IsContainerEmpty::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_IsContainerEmpty, CallFunc_Array_Get_Item) == 0x000030, "Member 'MPInGameInventory_C_IsContainerEmpty::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_IsContainerEmpty, CallFunc_IsEmptySlot_isEmpty) == 0x000038, "Member 'MPInGameInventory_C_IsContainerEmpty::CallFunc_IsEmptySlot_isEmpty' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_IsContainerEmpty, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000039, "Member 'MPInGameInventory_C_IsContainerEmpty::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_IsContainerEmpty, CallFunc_Add_IntInt_ReturnValue_1) == 0x00003C, "Member 'MPInGameInventory_C_IsContainerEmpty::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.IsDropWidgetVisible
// 0x0003 (0x0003 - 0x0000)
struct MPInGameInventory_C_IsDropWidgetVisible final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_IsDropWidgetVisible) == 0x000001, "Wrong alignment on MPInGameInventory_C_IsDropWidgetVisible");
static_assert(sizeof(MPInGameInventory_C_IsDropWidgetVisible) == 0x000003, "Wrong size on MPInGameInventory_C_IsDropWidgetVisible");
static_assert(offsetof(MPInGameInventory_C_IsDropWidgetVisible, ReturnValue) == 0x000000, "Member 'MPInGameInventory_C_IsDropWidgetVisible::ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_IsDropWidgetVisible, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'MPInGameInventory_C_IsDropWidgetVisible::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_IsDropWidgetVisible, CallFunc_IsVisible_ReturnValue) == 0x000002, "Member 'MPInGameInventory_C_IsDropWidgetVisible::CallFunc_IsVisible_ReturnValue' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.MakeGuiHidden
// 0x0001 (0x0001 - 0x0000)
struct MPInGameInventory_C_MakeGuiHidden final
{
public:
	bool                                          IsHidden;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_MakeGuiHidden) == 0x000001, "Wrong alignment on MPInGameInventory_C_MakeGuiHidden");
static_assert(sizeof(MPInGameInventory_C_MakeGuiHidden) == 0x000001, "Wrong size on MPInGameInventory_C_MakeGuiHidden");
static_assert(offsetof(MPInGameInventory_C_MakeGuiHidden, IsHidden) == 0x000000, "Member 'MPInGameInventory_C_MakeGuiHidden::IsHidden' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.MouseButtonDownInventory
// 0x0028 (0x0028 - 0x0000)
struct MPInGameInventory_C_MouseButtonDownInventory final
{
public:
	class UJSIContainer_C*                        Container;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            SlotRef;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Button;                                            // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_MouseButtonDownInventory) == 0x000008, "Wrong alignment on MPInGameInventory_C_MouseButtonDownInventory");
static_assert(sizeof(MPInGameInventory_C_MouseButtonDownInventory) == 0x000028, "Wrong size on MPInGameInventory_C_MouseButtonDownInventory");
static_assert(offsetof(MPInGameInventory_C_MouseButtonDownInventory, Container) == 0x000000, "Member 'MPInGameInventory_C_MouseButtonDownInventory::Container' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_MouseButtonDownInventory, SlotRef) == 0x000008, "Member 'MPInGameInventory_C_MouseButtonDownInventory::SlotRef' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_MouseButtonDownInventory, Button) == 0x000010, "Member 'MPInGameInventory_C_MouseButtonDownInventory::Button' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.On Buy Item
// 0x02A8 (0x02A8 - 0x0000)
struct MPInGameInventory_C_On_Buy_Item final
{
public:
	class UJSI_Slot_C*                            Item_Ref_Local;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UShopContainerWidget_C*                 K2Node_DynamicCast_AsShop_Container_Widget;        // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPageIndex_PageIndex;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_ItemInfo_C*                          CallFunc_GetItemInfoWidget_Widget;                 // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue_1;                 // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UShopContainerWidget_C*                 K2Node_DynamicCast_AsShop_Container_Widget_1;      // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetItemInfo_ItemInfo;                     // 0x0070(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetItemInfo_TriggerUserWidget;            // 0x0290(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_DynamicCast_AsJSI_Slot;                     // 0x0298(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_On_Buy_Item) == 0x000008, "Wrong alignment on MPInGameInventory_C_On_Buy_Item");
static_assert(sizeof(MPInGameInventory_C_On_Buy_Item) == 0x0002A8, "Wrong size on MPInGameInventory_C_On_Buy_Item");
static_assert(offsetof(MPInGameInventory_C_On_Buy_Item, Item_Ref_Local) == 0x000000, "Member 'MPInGameInventory_C_On_Buy_Item::Item_Ref_Local' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Buy_Item, CallFunc_GetChildAt_ReturnValue) == 0x000008, "Member 'MPInGameInventory_C_On_Buy_Item::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Buy_Item, K2Node_DynamicCast_AsShop_Container_Widget) == 0x000010, "Member 'MPInGameInventory_C_On_Buy_Item::K2Node_DynamicCast_AsShop_Container_Widget' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Buy_Item, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'MPInGameInventory_C_On_Buy_Item::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Buy_Item, CallFunc_GetPageIndex_PageIndex) == 0x00001C, "Member 'MPInGameInventory_C_On_Buy_Item::CallFunc_GetPageIndex_PageIndex' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Buy_Item, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'MPInGameInventory_C_On_Buy_Item::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Buy_Item, K2Node_SwitchInteger_CmpSuccess) == 0x000021, "Member 'MPInGameInventory_C_On_Buy_Item::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Buy_Item, K2Node_SwitchEnum_CmpSuccess_1) == 0x000022, "Member 'MPInGameInventory_C_On_Buy_Item::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Buy_Item, CallFunc_GetPlayerController_ReturnValue) == 0x000028, "Member 'MPInGameInventory_C_On_Buy_Item::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Buy_Item, CallFunc_GetHUD_ReturnValue) == 0x000030, "Member 'MPInGameInventory_C_On_Buy_Item::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Buy_Item, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x000038, "Member 'MPInGameInventory_C_On_Buy_Item::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Buy_Item, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'MPInGameInventory_C_On_Buy_Item::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Buy_Item, CallFunc_GetItemInfoWidget_Widget) == 0x000050, "Member 'MPInGameInventory_C_On_Buy_Item::CallFunc_GetItemInfoWidget_Widget' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Buy_Item, CallFunc_GetChildAt_ReturnValue_1) == 0x000058, "Member 'MPInGameInventory_C_On_Buy_Item::CallFunc_GetChildAt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Buy_Item, K2Node_DynamicCast_AsShop_Container_Widget_1) == 0x000060, "Member 'MPInGameInventory_C_On_Buy_Item::K2Node_DynamicCast_AsShop_Container_Widget_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Buy_Item, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'MPInGameInventory_C_On_Buy_Item::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Buy_Item, CallFunc_GetItemInfo_ItemInfo) == 0x000070, "Member 'MPInGameInventory_C_On_Buy_Item::CallFunc_GetItemInfo_ItemInfo' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Buy_Item, CallFunc_GetItemInfo_TriggerUserWidget) == 0x000290, "Member 'MPInGameInventory_C_On_Buy_Item::CallFunc_GetItemInfo_TriggerUserWidget' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Buy_Item, K2Node_DynamicCast_AsJSI_Slot) == 0x000298, "Member 'MPInGameInventory_C_On_Buy_Item::K2Node_DynamicCast_AsJSI_Slot' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Buy_Item, K2Node_DynamicCast_bSuccess_3) == 0x0002A0, "Member 'MPInGameInventory_C_On_Buy_Item::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.On Make Leader Func
// 0x0078 (0x0078 - 0x0000)
struct MPInGameInventory_C_On_Make_Leader_Func final
{
public:
	class APS_TDB_C*                              Param_PlayerState;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerId_ReturnValue;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerId_ReturnValue_1;                // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APS_TDB_C*                              CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_On_Make_Leader_Func) == 0x000008, "Wrong alignment on MPInGameInventory_C_On_Make_Leader_Func");
static_assert(sizeof(MPInGameInventory_C_On_Make_Leader_Func) == 0x000078, "Wrong size on MPInGameInventory_C_On_Make_Leader_Func");
static_assert(offsetof(MPInGameInventory_C_On_Make_Leader_Func, Param_PlayerState) == 0x000000, "Member 'MPInGameInventory_C_On_Make_Leader_Func::Param_PlayerState' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Make_Leader_Func, Temp_int_Array_Index_Variable) == 0x000008, "Member 'MPInGameInventory_C_On_Make_Leader_Func::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Make_Leader_Func, CallFunc_GetDisplayName_ReturnValue) == 0x000010, "Member 'MPInGameInventory_C_On_Make_Leader_Func::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Make_Leader_Func, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'MPInGameInventory_C_On_Make_Leader_Func::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Make_Leader_Func, CallFunc_GetDisplayName_ReturnValue_1) == 0x000030, "Member 'MPInGameInventory_C_On_Make_Leader_Func::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Make_Leader_Func, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000040, "Member 'MPInGameInventory_C_On_Make_Leader_Func::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Make_Leader_Func, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'MPInGameInventory_C_On_Make_Leader_Func::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Make_Leader_Func, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'MPInGameInventory_C_On_Make_Leader_Func::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Make_Leader_Func, CallFunc_GetPlayerId_ReturnValue) == 0x000058, "Member 'MPInGameInventory_C_On_Make_Leader_Func::CallFunc_GetPlayerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Make_Leader_Func, CallFunc_GetPlayerId_ReturnValue_1) == 0x00005C, "Member 'MPInGameInventory_C_On_Make_Leader_Func::CallFunc_GetPlayerId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Make_Leader_Func, CallFunc_Array_Get_Item) == 0x000060, "Member 'MPInGameInventory_C_On_Make_Leader_Func::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Make_Leader_Func, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000068, "Member 'MPInGameInventory_C_On_Make_Leader_Func::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Make_Leader_Func, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'MPInGameInventory_C_On_Make_Leader_Func::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Make_Leader_Func, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'MPInGameInventory_C_On_Make_Leader_Func::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Make_Leader_Func, CallFunc_BooleanAND_ReturnValue) == 0x000071, "Member 'MPInGameInventory_C_On_Make_Leader_Func::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.On Player Exit
// 0x0008 (0x0008 - 0x0000)
struct MPInGameInventory_C_On_Player_Exit final
{
public:
	class APS_TDB_C*                              Param_PlayerState;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_On_Player_Exit) == 0x000008, "Wrong alignment on MPInGameInventory_C_On_Player_Exit");
static_assert(sizeof(MPInGameInventory_C_On_Player_Exit) == 0x000008, "Wrong size on MPInGameInventory_C_On_Player_Exit");
static_assert(offsetof(MPInGameInventory_C_On_Player_Exit, Param_PlayerState) == 0x000000, "Member 'MPInGameInventory_C_On_Player_Exit::Param_PlayerState' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.On Player Kick
// 0x0008 (0x0008 - 0x0000)
struct MPInGameInventory_C_On_Player_Kick final
{
public:
	class APS_TDB_C*                              Param_PlayerState;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_On_Player_Kick) == 0x000008, "Wrong alignment on MPInGameInventory_C_On_Player_Kick");
static_assert(sizeof(MPInGameInventory_C_On_Player_Kick) == 0x000008, "Wrong size on MPInGameInventory_C_On_Player_Kick");
static_assert(offsetof(MPInGameInventory_C_On_Player_Kick, Param_PlayerState) == 0x000000, "Member 'MPInGameInventory_C_On_Player_Kick::Param_PlayerState' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.On Update Group List
// 0x0088 (0x0088 - 0x0000)
struct MPInGameInventory_C_On_Update_Group_List final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Group_C*                           CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_Group_C*                           CallFunc_Array_Get_Item_1;                         // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_Group_C*>                   CallFunc_Map_Values_Values;                        // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWBP_Group_C*                           CallFunc_Array_Get_Item_2;                         // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APS_TDB_C*                              CallFunc_Array_Get_Item_3;                         // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_On_Update_Group_List) == 0x000008, "Wrong alignment on MPInGameInventory_C_On_Update_Group_List");
static_assert(sizeof(MPInGameInventory_C_On_Update_Group_List) == 0x000088, "Wrong size on MPInGameInventory_C_On_Update_Group_List");
static_assert(offsetof(MPInGameInventory_C_On_Update_Group_List, Temp_int_Variable) == 0x000000, "Member 'MPInGameInventory_C_On_Update_Group_List::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Update_Group_List, Temp_int_Array_Index_Variable) == 0x000004, "Member 'MPInGameInventory_C_On_Update_Group_List::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Update_Group_List, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'MPInGameInventory_C_On_Update_Group_List::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Update_Group_List, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000010, "Member 'MPInGameInventory_C_On_Update_Group_List::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Update_Group_List, K2Node_DynamicCast_AsSurvival_Player) == 0x000018, "Member 'MPInGameInventory_C_On_Update_Group_List::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Update_Group_List, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'MPInGameInventory_C_On_Update_Group_List::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Update_Group_List, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'MPInGameInventory_C_On_Update_Group_List::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Update_Group_List, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'MPInGameInventory_C_On_Update_Group_List::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Update_Group_List, CallFunc_Add_IntInt_ReturnValue_1) == 0x00002C, "Member 'MPInGameInventory_C_On_Update_Group_List::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Update_Group_List, CallFunc_Array_Get_Item) == 0x000030, "Member 'MPInGameInventory_C_On_Update_Group_List::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Update_Group_List, CallFunc_Array_Get_Item_1) == 0x000038, "Member 'MPInGameInventory_C_On_Update_Group_List::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Update_Group_List, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'MPInGameInventory_C_On_Update_Group_List::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Update_Group_List, CallFunc_IsValid_ReturnValue_2) == 0x000041, "Member 'MPInGameInventory_C_On_Update_Group_List::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Update_Group_List, CallFunc_Map_Values_Values) == 0x000048, "Member 'MPInGameInventory_C_On_Update_Group_List::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Update_Group_List, CallFunc_Array_Get_Item_2) == 0x000058, "Member 'MPInGameInventory_C_On_Update_Group_List::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Update_Group_List, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'MPInGameInventory_C_On_Update_Group_List::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Update_Group_List, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'MPInGameInventory_C_On_Update_Group_List::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Update_Group_List, CallFunc_Array_Get_Item_3) == 0x000068, "Member 'MPInGameInventory_C_On_Update_Group_List::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Update_Group_List, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000070, "Member 'MPInGameInventory_C_On_Update_Group_List::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Update_Group_List, CallFunc_IsValid_ReturnValue_3) == 0x000071, "Member 'MPInGameInventory_C_On_Update_Group_List::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Update_Group_List, CallFunc_Array_Length_ReturnValue_1) == 0x000074, "Member 'MPInGameInventory_C_On_Update_Group_List::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Update_Group_List, CallFunc_BooleanAND_ReturnValue) == 0x000078, "Member 'MPInGameInventory_C_On_Update_Group_List::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Update_Group_List, CallFunc_Subtract_IntInt_ReturnValue) == 0x00007C, "Member 'MPInGameInventory_C_On_Update_Group_List::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_On_Update_Group_List, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000080, "Member 'MPInGameInventory_C_On_Update_Group_List::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.OnContainerAction__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct MPInGameInventory_C_OnContainerAction__DelegateSignature final
{
public:
	class UJSIContainer_C*                        FromContainer;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        ToContainer;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            DroppedSlotRef;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            SlotReceiverRef;                                   // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         ToSlotIndex;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DroppedRotated_;                                   // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_OnContainerAction__DelegateSignature) == 0x000008, "Wrong alignment on MPInGameInventory_C_OnContainerAction__DelegateSignature");
static_assert(sizeof(MPInGameInventory_C_OnContainerAction__DelegateSignature) == 0x000028, "Wrong size on MPInGameInventory_C_OnContainerAction__DelegateSignature");
static_assert(offsetof(MPInGameInventory_C_OnContainerAction__DelegateSignature, FromContainer) == 0x000000, "Member 'MPInGameInventory_C_OnContainerAction__DelegateSignature::FromContainer' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_OnContainerAction__DelegateSignature, ToContainer) == 0x000008, "Member 'MPInGameInventory_C_OnContainerAction__DelegateSignature::ToContainer' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_OnContainerAction__DelegateSignature, DroppedSlotRef) == 0x000010, "Member 'MPInGameInventory_C_OnContainerAction__DelegateSignature::DroppedSlotRef' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_OnContainerAction__DelegateSignature, SlotReceiverRef) == 0x000018, "Member 'MPInGameInventory_C_OnContainerAction__DelegateSignature::SlotReceiverRef' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_OnContainerAction__DelegateSignature, ToSlotIndex) == 0x000020, "Member 'MPInGameInventory_C_OnContainerAction__DelegateSignature::ToSlotIndex' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_OnContainerAction__DelegateSignature, DroppedRotated_) == 0x000024, "Member 'MPInGameInventory_C_OnContainerAction__DelegateSignature::DroppedRotated_' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.OnDrop
// 0x00C0 (0x00C0 - 0x0000)
struct MPInGameInventory_C_OnDrop final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          PointerEvent;                                      // 0x0038(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UDragDropOperation*                     Operation;                                         // 0x00B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x00B8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_OnDrop) == 0x000008, "Wrong alignment on MPInGameInventory_C_OnDrop");
static_assert(sizeof(MPInGameInventory_C_OnDrop) == 0x0000C0, "Wrong size on MPInGameInventory_C_OnDrop");
static_assert(offsetof(MPInGameInventory_C_OnDrop, MyGeometry) == 0x000000, "Member 'MPInGameInventory_C_OnDrop::MyGeometry' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_OnDrop, PointerEvent) == 0x000038, "Member 'MPInGameInventory_C_OnDrop::PointerEvent' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_OnDrop, Operation) == 0x0000B0, "Member 'MPInGameInventory_C_OnDrop::Operation' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_OnDrop, ReturnValue) == 0x0000B8, "Member 'MPInGameInventory_C_OnDrop::ReturnValue' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.OnInitializedDragWidget
// 0x0001 (0x0001 - 0x0000)
struct MPInGameInventory_C_OnInitializedDragWidget final
{
public:
	bool                                          NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_OnInitializedDragWidget) == 0x000001, "Wrong alignment on MPInGameInventory_C_OnInitializedDragWidget");
static_assert(sizeof(MPInGameInventory_C_OnInitializedDragWidget) == 0x000001, "Wrong size on MPInGameInventory_C_OnInitializedDragWidget");
static_assert(offsetof(MPInGameInventory_C_OnInitializedDragWidget, NewState) == 0x000000, "Member 'MPInGameInventory_C_OnInitializedDragWidget::NewState' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.OnInitializedTabsWidget_Event
// 0x0008 (0x0008 - 0x0000)
struct MPInGameInventory_C_OnInitializedTabsWidget_Event final
{
public:
	class UW_TabsWindow_C*                        TabsWindow;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_OnInitializedTabsWidget_Event) == 0x000008, "Wrong alignment on MPInGameInventory_C_OnInitializedTabsWidget_Event");
static_assert(sizeof(MPInGameInventory_C_OnInitializedTabsWidget_Event) == 0x000008, "Wrong size on MPInGameInventory_C_OnInitializedTabsWidget_Event");
static_assert(offsetof(MPInGameInventory_C_OnInitializedTabsWidget_Event, TabsWindow) == 0x000000, "Member 'MPInGameInventory_C_OnInitializedTabsWidget_Event::TabsWindow' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.OnMouseButtonDown
// 0x0220 (0x0220 - 0x0000)
struct MPInGameInventory_C_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0168(0x00B8)()
};
static_assert(alignof(MPInGameInventory_C_OnMouseButtonDown) == 0x000008, "Wrong alignment on MPInGameInventory_C_OnMouseButtonDown");
static_assert(sizeof(MPInGameInventory_C_OnMouseButtonDown) == 0x000220, "Wrong size on MPInGameInventory_C_OnMouseButtonDown");
static_assert(offsetof(MPInGameInventory_C_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'MPInGameInventory_C_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_OnMouseButtonDown, MouseEvent) == 0x000038, "Member 'MPInGameInventory_C_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_OnMouseButtonDown, ReturnValue) == 0x0000B0, "Member 'MPInGameInventory_C_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_OnMouseButtonDown, CallFunc_Handled_ReturnValue) == 0x000168, "Member 'MPInGameInventory_C_OnMouseButtonDown::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.OnToggleSplitDialog
// 0x0001 (0x0001 - 0x0000)
struct MPInGameInventory_C_OnToggleSplitDialog final
{
public:
	bool                                          NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_OnToggleSplitDialog) == 0x000001, "Wrong alignment on MPInGameInventory_C_OnToggleSplitDialog");
static_assert(sizeof(MPInGameInventory_C_OnToggleSplitDialog) == 0x000001, "Wrong size on MPInGameInventory_C_OnToggleSplitDialog");
static_assert(offsetof(MPInGameInventory_C_OnToggleSplitDialog, NewState) == 0x000000, "Member 'MPInGameInventory_C_OnToggleSplitDialog::NewState' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.OnUpdatePerkFunction
// 0x0100 (0x0100 - 0x0000)
struct MPInGameInventory_C_OnUpdatePerkFunction final
{
public:
	class FText                                   PerkName;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Map_Find_Value;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWS_CharaterPerks                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0040(0x00B8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_OnUpdatePerkFunction) == 0x000008, "Wrong alignment on MPInGameInventory_C_OnUpdatePerkFunction");
static_assert(sizeof(MPInGameInventory_C_OnUpdatePerkFunction) == 0x000100, "Wrong size on MPInGameInventory_C_OnUpdatePerkFunction");
static_assert(offsetof(MPInGameInventory_C_OnUpdatePerkFunction, PerkName) == 0x000000, "Member 'MPInGameInventory_C_OnUpdatePerkFunction::PerkName' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_OnUpdatePerkFunction, CallFunc_Conv_TextToString_ReturnValue) == 0x000018, "Member 'MPInGameInventory_C_OnUpdatePerkFunction::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_OnUpdatePerkFunction, CallFunc_Conv_StringToName_ReturnValue) == 0x000028, "Member 'MPInGameInventory_C_OnUpdatePerkFunction::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_OnUpdatePerkFunction, CallFunc_Map_Find_Value) == 0x000030, "Member 'MPInGameInventory_C_OnUpdatePerkFunction::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_OnUpdatePerkFunction, CallFunc_Map_Find_ReturnValue) == 0x000038, "Member 'MPInGameInventory_C_OnUpdatePerkFunction::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_OnUpdatePerkFunction, CallFunc_GetDataTableRowFromName_OutRow) == 0x000040, "Member 'MPInGameInventory_C_OnUpdatePerkFunction::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_OnUpdatePerkFunction, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000F8, "Member 'MPInGameInventory_C_OnUpdatePerkFunction::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.OnUpdatePerksList
// 0x0110 (0x0110 - 0x0000)
struct MPInGameInventory_C_OnUpdatePerksList final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Perks_C*                           CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FText PerkName)>         K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0028(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWS_CharaterPerks                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0048(0x00B8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x2];                                      // 0x0102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUniformGridSlot*                       CallFunc_AddChildToUniformGrid_ReturnValue;        // 0x0108(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_OnUpdatePerksList) == 0x000008, "Wrong alignment on MPInGameInventory_C_OnUpdatePerksList");
static_assert(sizeof(MPInGameInventory_C_OnUpdatePerksList) == 0x000110, "Wrong size on MPInGameInventory_C_OnUpdatePerksList");
static_assert(offsetof(MPInGameInventory_C_OnUpdatePerksList, Temp_int_Array_Index_Variable) == 0x000000, "Member 'MPInGameInventory_C_OnUpdatePerksList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_OnUpdatePerksList, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'MPInGameInventory_C_OnUpdatePerksList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_OnUpdatePerksList, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'MPInGameInventory_C_OnUpdatePerksList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_OnUpdatePerksList, CallFunc_Create_ReturnValue) == 0x000010, "Member 'MPInGameInventory_C_OnUpdatePerksList::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_OnUpdatePerksList, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'MPInGameInventory_C_OnUpdatePerksList::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_OnUpdatePerksList, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000028, "Member 'MPInGameInventory_C_OnUpdatePerksList::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_OnUpdatePerksList, CallFunc_Array_Get_Item) == 0x000038, "Member 'MPInGameInventory_C_OnUpdatePerksList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_OnUpdatePerksList, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'MPInGameInventory_C_OnUpdatePerksList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_OnUpdatePerksList, CallFunc_GetDataTableRowFromName_OutRow) == 0x000048, "Member 'MPInGameInventory_C_OnUpdatePerksList::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_OnUpdatePerksList, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000100, "Member 'MPInGameInventory_C_OnUpdatePerksList::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_OnUpdatePerksList, CallFunc_Less_IntInt_ReturnValue) == 0x000101, "Member 'MPInGameInventory_C_OnUpdatePerksList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_OnUpdatePerksList, CallFunc_Array_Length_ReturnValue_1) == 0x000104, "Member 'MPInGameInventory_C_OnUpdatePerksList::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_OnUpdatePerksList, CallFunc_AddChildToUniformGrid_ReturnValue) == 0x000108, "Member 'MPInGameInventory_C_OnUpdatePerksList::CallFunc_AddChildToUniformGrid_ReturnValue' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.PlayEquipSound
// 0x0020 (0x0020 - 0x0000)
struct MPInGameInventory_C_PlayEquipSound final
{
public:
	class UJSI_Slot_C*                            Slot_Ref;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_PlayEquipSound) == 0x000008, "Wrong alignment on MPInGameInventory_C_PlayEquipSound");
static_assert(sizeof(MPInGameInventory_C_PlayEquipSound) == 0x000020, "Wrong size on MPInGameInventory_C_PlayEquipSound");
static_assert(offsetof(MPInGameInventory_C_PlayEquipSound, Slot_Ref) == 0x000000, "Member 'MPInGameInventory_C_PlayEquipSound::Slot_Ref' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_PlayEquipSound, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'MPInGameInventory_C_PlayEquipSound::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_PlayEquipSound, CallFunc_PlayEvent2D_ReturnValue) == 0x000010, "Member 'MPInGameInventory_C_PlayEquipSound::CallFunc_PlayEvent2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_PlayEquipSound, CallFunc_IsValid_ReturnValue_1) == 0x000018, "Member 'MPInGameInventory_C_PlayEquipSound::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.PlayScrollBarOpacityAnim
// 0x0018 (0x0018 - 0x0000)
struct MPInGameInventory_C_PlayScrollBarOpacityAnim final
{
public:
	double                                        Opacity;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UScrollBox*                             ScrollBoxWidgetRef;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_PlayScrollBarOpacityAnim) == 0x000008, "Wrong alignment on MPInGameInventory_C_PlayScrollBarOpacityAnim");
static_assert(sizeof(MPInGameInventory_C_PlayScrollBarOpacityAnim) == 0x000018, "Wrong size on MPInGameInventory_C_PlayScrollBarOpacityAnim");
static_assert(offsetof(MPInGameInventory_C_PlayScrollBarOpacityAnim, Opacity) == 0x000000, "Member 'MPInGameInventory_C_PlayScrollBarOpacityAnim::Opacity' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_PlayScrollBarOpacityAnim, ScrollBoxWidgetRef) == 0x000008, "Member 'MPInGameInventory_C_PlayScrollBarOpacityAnim::ScrollBoxWidgetRef' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_PlayScrollBarOpacityAnim, CallFunc_K2_SetTimer_ReturnValue) == 0x000010, "Member 'MPInGameInventory_C_PlayScrollBarOpacityAnim::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct MPInGameInventory_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_PreConstruct) == 0x000001, "Wrong alignment on MPInGameInventory_C_PreConstruct");
static_assert(sizeof(MPInGameInventory_C_PreConstruct) == 0x000001, "Wrong size on MPInGameInventory_C_PreConstruct");
static_assert(offsetof(MPInGameInventory_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'MPInGameInventory_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.RefreshItemsOnGround
// 0x0730 (0x0730 - 0x0000)
struct MPInGameInventory_C_RefreshItemsOnGround final
{
public:
	TArray<class AA_Item_C*>                      ItemsOnGround;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         NewItem;                                           // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         IsItemStillThere;                                  // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AA_Item_C*                              CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetInfo_ItemInfo;                         // 0x0040(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_265[0x3];                                      // 0x0265(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_275[0x3];                                      // 0x0275(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_289[0x3];                                      // 0x0289(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_291[0x3];                                      // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AA_Item_C*                              CallFunc_Array_Get_Item_1;                         // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_GetInfo_ItemInfo_1;                       // 0x02A8(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x04C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x04CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D1[0x3];                                      // 0x04D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetEmptySlot_SlotIndex;                   // 0x04D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEmptySlot_Found_;                      // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddNewItem_Added;                         // 0x04D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DA[0x2];                                      // 0x04DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddNewItem_AddedToSlot;                   // 0x04DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_AddNewItem_Info;                          // 0x04E0(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_AddNewItem_SlotItemRef;                   // 0x0700(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item_2;                         // 0x0708(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item_3;                         // 0x0710(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUniqueID_UniqueServerID;               // 0x0718(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUniqueID_UniqueServerID_1;             // 0x071C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0720(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0721(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveInventoryItemByRef_Removed;         // 0x0722(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_723[0x1];                                      // 0x0723(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0724(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0728(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x072C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x072D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_RefreshItemsOnGround) == 0x000008, "Wrong alignment on MPInGameInventory_C_RefreshItemsOnGround");
static_assert(sizeof(MPInGameInventory_C_RefreshItemsOnGround) == 0x000730, "Wrong size on MPInGameInventory_C_RefreshItemsOnGround");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, ItemsOnGround) == 0x000000, "Member 'MPInGameInventory_C_RefreshItemsOnGround::ItemsOnGround' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, NewItem) == 0x000010, "Member 'MPInGameInventory_C_RefreshItemsOnGround::NewItem' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, IsItemStillThere) == 0x000014, "Member 'MPInGameInventory_C_RefreshItemsOnGround::IsItemStillThere' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'MPInGameInventory_C_RefreshItemsOnGround::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, CallFunc_Array_Length_ReturnValue_1) == 0x00001C, "Member 'MPInGameInventory_C_RefreshItemsOnGround::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, CallFunc_Array_Length_ReturnValue_2) == 0x000020, "Member 'MPInGameInventory_C_RefreshItemsOnGround::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, Temp_int_Array_Index_Variable) == 0x000024, "Member 'MPInGameInventory_C_RefreshItemsOnGround::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000028, "Member 'MPInGameInventory_C_RefreshItemsOnGround::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, Temp_int_Array_Index_Variable_1) == 0x00002C, "Member 'MPInGameInventory_C_RefreshItemsOnGround::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, CallFunc_Array_Get_Item) == 0x000030, "Member 'MPInGameInventory_C_RefreshItemsOnGround::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, Temp_int_Variable) == 0x000038, "Member 'MPInGameInventory_C_RefreshItemsOnGround::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, CallFunc_GetInfo_ItemInfo) == 0x000040, "Member 'MPInGameInventory_C_RefreshItemsOnGround::CallFunc_GetInfo_ItemInfo' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, Temp_int_Loop_Counter_Variable) == 0x000260, "Member 'MPInGameInventory_C_RefreshItemsOnGround::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, CallFunc_Less_IntInt_ReturnValue) == 0x000264, "Member 'MPInGameInventory_C_RefreshItemsOnGround::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, CallFunc_Add_IntInt_ReturnValue) == 0x000268, "Member 'MPInGameInventory_C_RefreshItemsOnGround::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, Temp_int_Loop_Counter_Variable_1) == 0x00026C, "Member 'MPInGameInventory_C_RefreshItemsOnGround::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, Temp_int_Loop_Counter_Variable_2) == 0x000270, "Member 'MPInGameInventory_C_RefreshItemsOnGround::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, CallFunc_Less_IntInt_ReturnValue_1) == 0x000274, "Member 'MPInGameInventory_C_RefreshItemsOnGround::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, CallFunc_Add_IntInt_ReturnValue_1) == 0x000278, "Member 'MPInGameInventory_C_RefreshItemsOnGround::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, CallFunc_Add_IntInt_ReturnValue_2) == 0x00027C, "Member 'MPInGameInventory_C_RefreshItemsOnGround::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, Temp_int_Variable_1) == 0x000280, "Member 'MPInGameInventory_C_RefreshItemsOnGround::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, Temp_int_Array_Index_Variable_2) == 0x000284, "Member 'MPInGameInventory_C_RefreshItemsOnGround::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000288, "Member 'MPInGameInventory_C_RefreshItemsOnGround::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, CallFunc_Add_IntInt_ReturnValue_3) == 0x00028C, "Member 'MPInGameInventory_C_RefreshItemsOnGround::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000290, "Member 'MPInGameInventory_C_RefreshItemsOnGround::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, CallFunc_Add_IntInt_ReturnValue_4) == 0x000294, "Member 'MPInGameInventory_C_RefreshItemsOnGround::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, Temp_int_Array_Index_Variable_3) == 0x000298, "Member 'MPInGameInventory_C_RefreshItemsOnGround::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, CallFunc_Array_Get_Item_1) == 0x0002A0, "Member 'MPInGameInventory_C_RefreshItemsOnGround::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, CallFunc_GetInfo_ItemInfo_1) == 0x0002A8, "Member 'MPInGameInventory_C_RefreshItemsOnGround::CallFunc_GetInfo_ItemInfo_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, Temp_int_Loop_Counter_Variable_3) == 0x0004C8, "Member 'MPInGameInventory_C_RefreshItemsOnGround::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, CallFunc_Add_IntInt_ReturnValue_5) == 0x0004CC, "Member 'MPInGameInventory_C_RefreshItemsOnGround::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, CallFunc_IsValid_ReturnValue) == 0x0004D0, "Member 'MPInGameInventory_C_RefreshItemsOnGround::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, CallFunc_GetEmptySlot_SlotIndex) == 0x0004D4, "Member 'MPInGameInventory_C_RefreshItemsOnGround::CallFunc_GetEmptySlot_SlotIndex' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, CallFunc_GetEmptySlot_Found_) == 0x0004D8, "Member 'MPInGameInventory_C_RefreshItemsOnGround::CallFunc_GetEmptySlot_Found_' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, CallFunc_AddNewItem_Added) == 0x0004D9, "Member 'MPInGameInventory_C_RefreshItemsOnGround::CallFunc_AddNewItem_Added' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, CallFunc_AddNewItem_AddedToSlot) == 0x0004DC, "Member 'MPInGameInventory_C_RefreshItemsOnGround::CallFunc_AddNewItem_AddedToSlot' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, CallFunc_AddNewItem_Info) == 0x0004E0, "Member 'MPInGameInventory_C_RefreshItemsOnGround::CallFunc_AddNewItem_Info' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, CallFunc_AddNewItem_SlotItemRef) == 0x000700, "Member 'MPInGameInventory_C_RefreshItemsOnGround::CallFunc_AddNewItem_SlotItemRef' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, CallFunc_Array_Get_Item_2) == 0x000708, "Member 'MPInGameInventory_C_RefreshItemsOnGround::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, CallFunc_Array_Get_Item_3) == 0x000710, "Member 'MPInGameInventory_C_RefreshItemsOnGround::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, CallFunc_GetUniqueID_UniqueServerID) == 0x000718, "Member 'MPInGameInventory_C_RefreshItemsOnGround::CallFunc_GetUniqueID_UniqueServerID' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, CallFunc_GetUniqueID_UniqueServerID_1) == 0x00071C, "Member 'MPInGameInventory_C_RefreshItemsOnGround::CallFunc_GetUniqueID_UniqueServerID_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000720, "Member 'MPInGameInventory_C_RefreshItemsOnGround::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000721, "Member 'MPInGameInventory_C_RefreshItemsOnGround::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, CallFunc_RemoveInventoryItemByRef_Removed) == 0x000722, "Member 'MPInGameInventory_C_RefreshItemsOnGround::CallFunc_RemoveInventoryItemByRef_Removed' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, CallFunc_Array_Length_ReturnValue_3) == 0x000724, "Member 'MPInGameInventory_C_RefreshItemsOnGround::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, CallFunc_Array_Length_ReturnValue_4) == 0x000728, "Member 'MPInGameInventory_C_RefreshItemsOnGround::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, CallFunc_Less_IntInt_ReturnValue_2) == 0x00072C, "Member 'MPInGameInventory_C_RefreshItemsOnGround::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RefreshItemsOnGround, CallFunc_Less_IntInt_ReturnValue_3) == 0x00072D, "Member 'MPInGameInventory_C_RefreshItemsOnGround::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.Remove Item By UID
// 0x0018 (0x0018 - 0x0000)
struct MPInGameInventory_C_Remove_Item_By_UID final
{
public:
	class UJSI_Slot_C*                            SlotRef;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Equipped_;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        Container;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_Remove_Item_By_UID) == 0x000008, "Wrong alignment on MPInGameInventory_C_Remove_Item_By_UID");
static_assert(sizeof(MPInGameInventory_C_Remove_Item_By_UID) == 0x000018, "Wrong size on MPInGameInventory_C_Remove_Item_By_UID");
static_assert(offsetof(MPInGameInventory_C_Remove_Item_By_UID, SlotRef) == 0x000000, "Member 'MPInGameInventory_C_Remove_Item_By_UID::SlotRef' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Remove_Item_By_UID, Equipped_) == 0x000008, "Member 'MPInGameInventory_C_Remove_Item_By_UID::Equipped_' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Remove_Item_By_UID, Container) == 0x000010, "Member 'MPInGameInventory_C_Remove_Item_By_UID::Container' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.RepairProcess
// 0x02B8 (0x02B8 - 0x0000)
struct MPInGameInventory_C_RepairProcess final
{
public:
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UShopContainerWidget_C*                 K2Node_DynamicCast_AsShop_Container_Widget;        // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_1;                     // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD_1;               // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_ItemInfo_C*                          CallFunc_GetItemInfoWidget_Widget;                 // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_ItemInfo_C*                          CallFunc_GetItemInfoWidget_Widget_1;               // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_GetItemInfo_ItemInfo;                     // 0x0080(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetItemInfo_TriggerUserWidget;            // 0x02A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_DynamicCast_AsJSI_Slot;                     // 0x02A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Enough_Money_HaveEnoughMoney;         // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x02B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x02B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_RepairProcess) == 0x000008, "Wrong alignment on MPInGameInventory_C_RepairProcess");
static_assert(sizeof(MPInGameInventory_C_RepairProcess) == 0x0002B8, "Wrong size on MPInGameInventory_C_RepairProcess");
static_assert(offsetof(MPInGameInventory_C_RepairProcess, CallFunc_GetChildAt_ReturnValue) == 0x000000, "Member 'MPInGameInventory_C_RepairProcess::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RepairProcess, K2Node_DynamicCast_AsShop_Container_Widget) == 0x000008, "Member 'MPInGameInventory_C_RepairProcess::K2Node_DynamicCast_AsShop_Container_Widget' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RepairProcess, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'MPInGameInventory_C_RepairProcess::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RepairProcess, CallFunc_PlayEvent2D_ReturnValue) == 0x000018, "Member 'MPInGameInventory_C_RepairProcess::CallFunc_PlayEvent2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RepairProcess, CallFunc_GetPlayerController_ReturnValue) == 0x000020, "Member 'MPInGameInventory_C_RepairProcess::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RepairProcess, CallFunc_GetPlayerController_ReturnValue_1) == 0x000028, "Member 'MPInGameInventory_C_RepairProcess::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RepairProcess, CallFunc_GetHUD_ReturnValue) == 0x000030, "Member 'MPInGameInventory_C_RepairProcess::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RepairProcess, CallFunc_GetHUD_ReturnValue_1) == 0x000038, "Member 'MPInGameInventory_C_RepairProcess::CallFunc_GetHUD_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RepairProcess, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x000040, "Member 'MPInGameInventory_C_RepairProcess::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RepairProcess, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'MPInGameInventory_C_RepairProcess::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RepairProcess, K2Node_DynamicCast_AsBPI_Game_HUD_1) == 0x000058, "Member 'MPInGameInventory_C_RepairProcess::K2Node_DynamicCast_AsBPI_Game_HUD_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RepairProcess, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'MPInGameInventory_C_RepairProcess::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RepairProcess, CallFunc_GetItemInfoWidget_Widget) == 0x000070, "Member 'MPInGameInventory_C_RepairProcess::CallFunc_GetItemInfoWidget_Widget' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RepairProcess, CallFunc_GetItemInfoWidget_Widget_1) == 0x000078, "Member 'MPInGameInventory_C_RepairProcess::CallFunc_GetItemInfoWidget_Widget_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RepairProcess, CallFunc_GetItemInfo_ItemInfo) == 0x000080, "Member 'MPInGameInventory_C_RepairProcess::CallFunc_GetItemInfo_ItemInfo' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RepairProcess, CallFunc_GetItemInfo_TriggerUserWidget) == 0x0002A0, "Member 'MPInGameInventory_C_RepairProcess::CallFunc_GetItemInfo_TriggerUserWidget' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RepairProcess, K2Node_DynamicCast_AsJSI_Slot) == 0x0002A8, "Member 'MPInGameInventory_C_RepairProcess::K2Node_DynamicCast_AsJSI_Slot' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RepairProcess, K2Node_DynamicCast_bSuccess_3) == 0x0002B0, "Member 'MPInGameInventory_C_RepairProcess::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RepairProcess, CallFunc_Get_Enough_Money_HaveEnoughMoney) == 0x0002B1, "Member 'MPInGameInventory_C_RepairProcess::CallFunc_Get_Enough_Money_HaveEnoughMoney' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RepairProcess, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0002B2, "Member 'MPInGameInventory_C_RepairProcess::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RepairProcess, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0002B3, "Member 'MPInGameInventory_C_RepairProcess::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_RepairProcess, CallFunc_BooleanAND_ReturnValue) == 0x0002B4, "Member 'MPInGameInventory_C_RepairProcess::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.ScrollBarOpacityAnimTick
// 0x0038 (0x0038 - 0x0000)
struct MPInGameInventory_C_ScrollBarOpacityAnimTick final
{
public:
	double                                        CallFunc_GetScrollBarRenderOpacity_ReturnValue;    // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetScrollBarRenderOpacity_ReturnValue_1;  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Constant_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_ScrollBarOpacityAnimTick) == 0x000008, "Wrong alignment on MPInGameInventory_C_ScrollBarOpacityAnimTick");
static_assert(sizeof(MPInGameInventory_C_ScrollBarOpacityAnimTick) == 0x000038, "Wrong size on MPInGameInventory_C_ScrollBarOpacityAnimTick");
static_assert(offsetof(MPInGameInventory_C_ScrollBarOpacityAnimTick, CallFunc_GetScrollBarRenderOpacity_ReturnValue) == 0x000000, "Member 'MPInGameInventory_C_ScrollBarOpacityAnimTick::CallFunc_GetScrollBarRenderOpacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ScrollBarOpacityAnimTick, CallFunc_GetScrollBarRenderOpacity_ReturnValue_1) == 0x000008, "Member 'MPInGameInventory_C_ScrollBarOpacityAnimTick::CallFunc_GetScrollBarRenderOpacity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ScrollBarOpacityAnimTick, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000010, "Member 'MPInGameInventory_C_ScrollBarOpacityAnimTick::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ScrollBarOpacityAnimTick, CallFunc_FInterpTo_Constant_ReturnValue) == 0x000018, "Member 'MPInGameInventory_C_ScrollBarOpacityAnimTick::CallFunc_FInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ScrollBarOpacityAnimTick, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000020, "Member 'MPInGameInventory_C_ScrollBarOpacityAnimTick::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ScrollBarOpacityAnimTick, CallFunc_Abs_ReturnValue) == 0x000028, "Member 'MPInGameInventory_C_ScrollBarOpacityAnimTick::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ScrollBarOpacityAnimTick, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000030, "Member 'MPInGameInventory_C_ScrollBarOpacityAnimTick::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.SelectAmountToStore
// 0x05C0 (0x05C0 - 0x0000)
struct MPInGameInventory_C_SelectAmountToStore final
{
public:
	class UJSI_Slot_C*                            Slot_Ref__local_;                                  // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        ContainerMother__local_;                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0018(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0030(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetPointedWidget_PointedWidget;           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsBeginner_IsBeginner;                 // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x005F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        K2Node_Select_Default;                             // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateStorageTutorialPointer_ItemsFound;  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryToAddItemToStashContainer_Locaked;     // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsBeginner_IsBeginner_1;               // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77[0x1];                                       // 0x0077(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x0078(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        K2Node_Select_Default_2;                           // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        K2Node_Select_Default_3;                           // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_ItemInfo_C*                          CallFunc_GetItemInfoWidget_Widget;                 // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_1;                     // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_GetItemInfo_ItemInfo;                     // 0x00F0(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetItemInfo_TriggerUserWidget;            // 0x0310(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD_1;               // 0x0318(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_329[0x7];                                      // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            K2Node_DynamicCast_AsJSI_Slot;                     // 0x0330(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_ItemInfo_C*                          CallFunc_GetItemInfoWidget_Widget_1;               // 0x0340(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0348(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDropWidgetVisible_ReturnValue;          // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_2;                     // 0x0358(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD_2;               // 0x0368(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_379[0x7];                                      // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_ItemInfo_C*                          CallFunc_GetItemInfoWidget_Widget_2;               // 0x0380(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_GetItemInfo_ItemInfo_1;                   // 0x0388(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetItemInfo_TriggerUserWidget_1;          // 0x05A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_DynamicCast_AsJSI_Slot_1;                   // 0x05B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x05B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x05B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x05BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x05BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_SelectAmountToStore) == 0x000008, "Wrong alignment on MPInGameInventory_C_SelectAmountToStore");
static_assert(sizeof(MPInGameInventory_C_SelectAmountToStore) == 0x0005C0, "Wrong size on MPInGameInventory_C_SelectAmountToStore");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, Slot_Ref__local_) == 0x000000, "Member 'MPInGameInventory_C_SelectAmountToStore::Slot_Ref__local_' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, ContainerMother__local_) == 0x000008, "Member 'MPInGameInventory_C_SelectAmountToStore::ContainerMother__local_' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, Temp_bool_Variable) == 0x000010, "Member 'MPInGameInventory_C_SelectAmountToStore::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, Temp_text_Variable) == 0x000018, "Member 'MPInGameInventory_C_SelectAmountToStore::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, Temp_text_Variable_1) == 0x000030, "Member 'MPInGameInventory_C_SelectAmountToStore::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'MPInGameInventory_C_SelectAmountToStore::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, CallFunc_GetPointedWidget_PointedWidget) == 0x000050, "Member 'MPInGameInventory_C_SelectAmountToStore::CallFunc_GetPointedWidget_PointedWidget' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000058, "Member 'MPInGameInventory_C_SelectAmountToStore::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, CallFunc_GetIsBeginner_IsBeginner) == 0x000059, "Member 'MPInGameInventory_C_SelectAmountToStore::CallFunc_GetIsBeginner_IsBeginner' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, CallFunc_BooleanAND_ReturnValue) == 0x00005A, "Member 'MPInGameInventory_C_SelectAmountToStore::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00005B, "Member 'MPInGameInventory_C_SelectAmountToStore::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, CallFunc_Not_PreBool_ReturnValue) == 0x00005C, "Member 'MPInGameInventory_C_SelectAmountToStore::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, CallFunc_IsValid_ReturnValue_1) == 0x00005D, "Member 'MPInGameInventory_C_SelectAmountToStore::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, CallFunc_IsValid_ReturnValue_2) == 0x00005E, "Member 'MPInGameInventory_C_SelectAmountToStore::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, CallFunc_IsValid_ReturnValue_3) == 0x00005F, "Member 'MPInGameInventory_C_SelectAmountToStore::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, Temp_bool_Variable_1) == 0x000060, "Member 'MPInGameInventory_C_SelectAmountToStore::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, K2Node_Select_Default) == 0x000068, "Member 'MPInGameInventory_C_SelectAmountToStore::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, CallFunc_UpdateStorageTutorialPointer_ItemsFound) == 0x000070, "Member 'MPInGameInventory_C_SelectAmountToStore::CallFunc_UpdateStorageTutorialPointer_ItemsFound' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, CallFunc_TryToAddItemToStashContainer_Locaked) == 0x000071, "Member 'MPInGameInventory_C_SelectAmountToStore::CallFunc_TryToAddItemToStashContainer_Locaked' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, Temp_bool_Variable_2) == 0x000072, "Member 'MPInGameInventory_C_SelectAmountToStore::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, CallFunc_IsValid_ReturnValue_4) == 0x000073, "Member 'MPInGameInventory_C_SelectAmountToStore::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x000074, "Member 'MPInGameInventory_C_SelectAmountToStore::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, CallFunc_GetIsBeginner_IsBeginner_1) == 0x000075, "Member 'MPInGameInventory_C_SelectAmountToStore::CallFunc_GetIsBeginner_IsBeginner_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, CallFunc_BooleanAND_ReturnValue_1) == 0x000076, "Member 'MPInGameInventory_C_SelectAmountToStore::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, K2Node_Select_Default_1) == 0x000078, "Member 'MPInGameInventory_C_SelectAmountToStore::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, CallFunc_IsValid_ReturnValue_5) == 0x000090, "Member 'MPInGameInventory_C_SelectAmountToStore::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, K2Node_Select_Default_2) == 0x000098, "Member 'MPInGameInventory_C_SelectAmountToStore::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0000A0, "Member 'MPInGameInventory_C_SelectAmountToStore::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, Temp_bool_Variable_3) == 0x0000A1, "Member 'MPInGameInventory_C_SelectAmountToStore::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, CallFunc_GetPlayerController_ReturnValue) == 0x0000A8, "Member 'MPInGameInventory_C_SelectAmountToStore::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, CallFunc_GetHUD_ReturnValue) == 0x0000B0, "Member 'MPInGameInventory_C_SelectAmountToStore::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, K2Node_Select_Default_3) == 0x0000B8, "Member 'MPInGameInventory_C_SelectAmountToStore::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x0000C0, "Member 'MPInGameInventory_C_SelectAmountToStore::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'MPInGameInventory_C_SelectAmountToStore::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, CallFunc_GetItemInfoWidget_Widget) == 0x0000D8, "Member 'MPInGameInventory_C_SelectAmountToStore::CallFunc_GetItemInfoWidget_Widget' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, CallFunc_GetPlayerController_ReturnValue_1) == 0x0000E0, "Member 'MPInGameInventory_C_SelectAmountToStore::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, CallFunc_GetHUD_ReturnValue_1) == 0x0000E8, "Member 'MPInGameInventory_C_SelectAmountToStore::CallFunc_GetHUD_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, CallFunc_GetItemInfo_ItemInfo) == 0x0000F0, "Member 'MPInGameInventory_C_SelectAmountToStore::CallFunc_GetItemInfo_ItemInfo' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, CallFunc_GetItemInfo_TriggerUserWidget) == 0x000310, "Member 'MPInGameInventory_C_SelectAmountToStore::CallFunc_GetItemInfo_TriggerUserWidget' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, K2Node_DynamicCast_AsBPI_Game_HUD_1) == 0x000318, "Member 'MPInGameInventory_C_SelectAmountToStore::K2Node_DynamicCast_AsBPI_Game_HUD_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, K2Node_DynamicCast_bSuccess_1) == 0x000328, "Member 'MPInGameInventory_C_SelectAmountToStore::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, K2Node_DynamicCast_AsJSI_Slot) == 0x000330, "Member 'MPInGameInventory_C_SelectAmountToStore::K2Node_DynamicCast_AsJSI_Slot' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, K2Node_DynamicCast_bSuccess_2) == 0x000338, "Member 'MPInGameInventory_C_SelectAmountToStore::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, CallFunc_GetItemInfoWidget_Widget_1) == 0x000340, "Member 'MPInGameInventory_C_SelectAmountToStore::CallFunc_GetItemInfoWidget_Widget_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, CallFunc_GetPlayerController_ReturnValue_2) == 0x000348, "Member 'MPInGameInventory_C_SelectAmountToStore::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, CallFunc_IsDropWidgetVisible_ReturnValue) == 0x000350, "Member 'MPInGameInventory_C_SelectAmountToStore::CallFunc_IsDropWidgetVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, CallFunc_GetHUD_ReturnValue_2) == 0x000358, "Member 'MPInGameInventory_C_SelectAmountToStore::CallFunc_GetHUD_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, CallFunc_Not_PreBool_ReturnValue_1) == 0x000360, "Member 'MPInGameInventory_C_SelectAmountToStore::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, K2Node_DynamicCast_AsBPI_Game_HUD_2) == 0x000368, "Member 'MPInGameInventory_C_SelectAmountToStore::K2Node_DynamicCast_AsBPI_Game_HUD_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, K2Node_DynamicCast_bSuccess_3) == 0x000378, "Member 'MPInGameInventory_C_SelectAmountToStore::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, CallFunc_GetItemInfoWidget_Widget_2) == 0x000380, "Member 'MPInGameInventory_C_SelectAmountToStore::CallFunc_GetItemInfoWidget_Widget_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, CallFunc_GetItemInfo_ItemInfo_1) == 0x000388, "Member 'MPInGameInventory_C_SelectAmountToStore::CallFunc_GetItemInfo_ItemInfo_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, CallFunc_GetItemInfo_TriggerUserWidget_1) == 0x0005A8, "Member 'MPInGameInventory_C_SelectAmountToStore::CallFunc_GetItemInfo_TriggerUserWidget_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, K2Node_DynamicCast_AsJSI_Slot_1) == 0x0005B0, "Member 'MPInGameInventory_C_SelectAmountToStore::K2Node_DynamicCast_AsJSI_Slot_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, K2Node_DynamicCast_bSuccess_4) == 0x0005B8, "Member 'MPInGameInventory_C_SelectAmountToStore::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0005B9, "Member 'MPInGameInventory_C_SelectAmountToStore::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, CallFunc_IsValid_ReturnValue_6) == 0x0005BA, "Member 'MPInGameInventory_C_SelectAmountToStore::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectAmountToStore, CallFunc_BooleanAND_ReturnValue_2) == 0x0005BB, "Member 'MPInGameInventory_C_SelectAmountToStore::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.Selected Loot Poin Item
// 0x0050 (0x0050 - 0x0000)
struct MPInGameInventory_C_Selected_Loot_Poin_Item final
{
public:
	class UJSI_Slot_C*                            Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        Container;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        K2Node_DynamicCast_AsJSIContainer;                 // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_Selected_Loot_Poin_Item) == 0x000008, "Wrong alignment on MPInGameInventory_C_Selected_Loot_Poin_Item");
static_assert(sizeof(MPInGameInventory_C_Selected_Loot_Poin_Item) == 0x000050, "Wrong size on MPInGameInventory_C_Selected_Loot_Poin_Item");
static_assert(offsetof(MPInGameInventory_C_Selected_Loot_Poin_Item, Item) == 0x000000, "Member 'MPInGameInventory_C_Selected_Loot_Poin_Item::Item' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Selected_Loot_Poin_Item, Container) == 0x000008, "Member 'MPInGameInventory_C_Selected_Loot_Poin_Item::Container' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Selected_Loot_Poin_Item, Temp_int_Array_Index_Variable) == 0x000010, "Member 'MPInGameInventory_C_Selected_Loot_Poin_Item::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Selected_Loot_Poin_Item, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'MPInGameInventory_C_Selected_Loot_Poin_Item::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Selected_Loot_Poin_Item, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'MPInGameInventory_C_Selected_Loot_Poin_Item::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Selected_Loot_Poin_Item, CallFunc_GetAllChildren_ReturnValue) == 0x000020, "Member 'MPInGameInventory_C_Selected_Loot_Poin_Item::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Selected_Loot_Poin_Item, CallFunc_Array_Get_Item) == 0x000030, "Member 'MPInGameInventory_C_Selected_Loot_Poin_Item::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Selected_Loot_Poin_Item, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'MPInGameInventory_C_Selected_Loot_Poin_Item::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Selected_Loot_Poin_Item, K2Node_DynamicCast_AsJSIContainer) == 0x000040, "Member 'MPInGameInventory_C_Selected_Loot_Poin_Item::K2Node_DynamicCast_AsJSIContainer' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Selected_Loot_Poin_Item, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'MPInGameInventory_C_Selected_Loot_Poin_Item::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Selected_Loot_Poin_Item, CallFunc_Less_IntInt_ReturnValue) == 0x000049, "Member 'MPInGameInventory_C_Selected_Loot_Poin_Item::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.SelectedMainContainerItem
// 0x0260 (0x0260 - 0x0000)
struct MPInGameInventory_C_SelectedMainContainerItem final
{
public:
	class UJSI_Slot_C*                            Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        Container;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInfoType                                     Temp_byte_Variable;                                // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0018(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0030(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0048(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0060(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0078(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x0090(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x00A8(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x00C0(0x0018)()
	class FText                                   Temp_text_Variable_8;                              // 0x00D8(0x0018)()
	class FText                                   Temp_text_Variable_9;                              // 0x00F0(0x0018)()
	class FText                                   Temp_text_Variable_10;                             // 0x0108(0x0018)()
	class FText                                   Temp_text_Variable_11;                             // 0x0120(0x0018)()
	class FText                                   Temp_text_Variable_12;                             // 0x0138(0x0018)()
	class FText                                   Temp_text_Variable_13;                             // 0x0150(0x0018)()
	class FText                                   Temp_text_Variable_14;                             // 0x0168(0x0018)()
	class FText                                   Temp_text_Variable_15;                             // 0x0180(0x0018)()
	class FText                                   Temp_text_Variable_16;                             // 0x0198(0x0018)()
	class FText                                   Temp_text_Variable_17;                             // 0x01B0(0x0018)()
	bool                                          Temp_bool_Variable_2;                              // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x01CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x01CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPocketContainer_Result;                // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CD[0x3];                                      // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_GetPocketContainer_Container;             // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPocketContainer_Result_1;              // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DA[0x6];                                      // 0x01DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_GetPocketContainer_Container_1;           // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x01EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x01EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_4;    // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_5;    // 0x01ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_6;    // 0x01EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_7;    // 0x01EF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_8;    // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_9;    // 0x01F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_10;   // 0x01F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_11;   // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_12;   // 0x01F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_13;   // 0x01F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_14;   // 0x01F7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_15;   // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_16;   // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_17;   // 0x01FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_18;   // 0x01FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_19;   // 0x01FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x01FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x01FF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0202(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0203(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_20;   // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x0205(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x0206(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x0207(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_9;                  // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x020A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x020B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_2;                           // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_10;                 // 0x020D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x020E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_11;                 // 0x020F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0212(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_12;                 // 0x0213(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x0215(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_13;                 // 0x0216(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x0217(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_14;                 // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_9;        // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_15;                 // 0x021A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPocketContainer_Result_2;              // 0x021B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_GetPocketContainer_Container_2;           // 0x0220(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_16;                 // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_17;                 // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_3;                           // 0x022A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x022B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_18;                 // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_19;                 // 0x022D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_20;                 // 0x022E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_21;   // 0x022F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_22;   // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_4;                           // 0x0238(0x0018)()
	bool                                          CallFunc_BooleanOR_ReturnValue_21;                 // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_22;                 // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_23;                 // 0x0252(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_24;                 // 0x0253(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_25;                 // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_26;                 // 0x0255(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_27;                 // 0x0256(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_28;                 // 0x0257(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_29;                 // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_30;                 // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x025A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_5;                           // 0x025B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_31;                 // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x025D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x025E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_SelectedMainContainerItem) == 0x000008, "Wrong alignment on MPInGameInventory_C_SelectedMainContainerItem");
static_assert(sizeof(MPInGameInventory_C_SelectedMainContainerItem) == 0x000260, "Wrong size on MPInGameInventory_C_SelectedMainContainerItem");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, Item) == 0x000000, "Member 'MPInGameInventory_C_SelectedMainContainerItem::Item' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, Container) == 0x000008, "Member 'MPInGameInventory_C_SelectedMainContainerItem::Container' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, Temp_bool_Variable) == 0x000010, "Member 'MPInGameInventory_C_SelectedMainContainerItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, Temp_bool_Variable_1) == 0x000011, "Member 'MPInGameInventory_C_SelectedMainContainerItem::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, Temp_byte_Variable) == 0x000012, "Member 'MPInGameInventory_C_SelectedMainContainerItem::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, Temp_text_Variable) == 0x000018, "Member 'MPInGameInventory_C_SelectedMainContainerItem::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, Temp_text_Variable_1) == 0x000030, "Member 'MPInGameInventory_C_SelectedMainContainerItem::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, Temp_text_Variable_2) == 0x000048, "Member 'MPInGameInventory_C_SelectedMainContainerItem::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, Temp_text_Variable_3) == 0x000060, "Member 'MPInGameInventory_C_SelectedMainContainerItem::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, Temp_text_Variable_4) == 0x000078, "Member 'MPInGameInventory_C_SelectedMainContainerItem::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, Temp_text_Variable_5) == 0x000090, "Member 'MPInGameInventory_C_SelectedMainContainerItem::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, Temp_text_Variable_6) == 0x0000A8, "Member 'MPInGameInventory_C_SelectedMainContainerItem::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, Temp_text_Variable_7) == 0x0000C0, "Member 'MPInGameInventory_C_SelectedMainContainerItem::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, Temp_text_Variable_8) == 0x0000D8, "Member 'MPInGameInventory_C_SelectedMainContainerItem::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, Temp_text_Variable_9) == 0x0000F0, "Member 'MPInGameInventory_C_SelectedMainContainerItem::Temp_text_Variable_9' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, Temp_text_Variable_10) == 0x000108, "Member 'MPInGameInventory_C_SelectedMainContainerItem::Temp_text_Variable_10' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, Temp_text_Variable_11) == 0x000120, "Member 'MPInGameInventory_C_SelectedMainContainerItem::Temp_text_Variable_11' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, Temp_text_Variable_12) == 0x000138, "Member 'MPInGameInventory_C_SelectedMainContainerItem::Temp_text_Variable_12' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, Temp_text_Variable_13) == 0x000150, "Member 'MPInGameInventory_C_SelectedMainContainerItem::Temp_text_Variable_13' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, Temp_text_Variable_14) == 0x000168, "Member 'MPInGameInventory_C_SelectedMainContainerItem::Temp_text_Variable_14' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, Temp_text_Variable_15) == 0x000180, "Member 'MPInGameInventory_C_SelectedMainContainerItem::Temp_text_Variable_15' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, Temp_text_Variable_16) == 0x000198, "Member 'MPInGameInventory_C_SelectedMainContainerItem::Temp_text_Variable_16' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, Temp_text_Variable_17) == 0x0001B0, "Member 'MPInGameInventory_C_SelectedMainContainerItem::Temp_text_Variable_17' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, Temp_bool_Variable_2) == 0x0001C8, "Member 'MPInGameInventory_C_SelectedMainContainerItem::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, Temp_bool_Variable_3) == 0x0001C9, "Member 'MPInGameInventory_C_SelectedMainContainerItem::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, Temp_bool_Variable_4) == 0x0001CA, "Member 'MPInGameInventory_C_SelectedMainContainerItem::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, Temp_bool_Variable_5) == 0x0001CB, "Member 'MPInGameInventory_C_SelectedMainContainerItem::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_GetPocketContainer_Result) == 0x0001CC, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_GetPocketContainer_Result' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_GetPocketContainer_Container) == 0x0001D0, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_GetPocketContainer_Container' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, Temp_bool_Variable_6) == 0x0001D8, "Member 'MPInGameInventory_C_SelectedMainContainerItem::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_GetPocketContainer_Result_1) == 0x0001D9, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_GetPocketContainer_Result_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_GetPocketContainer_Container_1) == 0x0001E0, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_GetPocketContainer_Container_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0001E8, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x0001E9, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x0001EA, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x0001EB, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_EqualEqual_ObjectObject_ReturnValue_4) == 0x0001EC, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_EqualEqual_ObjectObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_EqualEqual_ObjectObject_ReturnValue_5) == 0x0001ED, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_EqualEqual_ObjectObject_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_EqualEqual_ObjectObject_ReturnValue_6) == 0x0001EE, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_EqualEqual_ObjectObject_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_EqualEqual_ObjectObject_ReturnValue_7) == 0x0001EF, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_EqualEqual_ObjectObject_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, K2Node_Select_Default) == 0x0001F0, "Member 'MPInGameInventory_C_SelectedMainContainerItem::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_EqualEqual_ObjectObject_ReturnValue_8) == 0x0001F1, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_EqualEqual_ObjectObject_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_EqualEqual_ObjectObject_ReturnValue_9) == 0x0001F2, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_EqualEqual_ObjectObject_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_EqualEqual_ObjectObject_ReturnValue_10) == 0x0001F3, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_EqualEqual_ObjectObject_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_EqualEqual_ObjectObject_ReturnValue_11) == 0x0001F4, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_EqualEqual_ObjectObject_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_EqualEqual_ObjectObject_ReturnValue_12) == 0x0001F5, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_EqualEqual_ObjectObject_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_EqualEqual_ObjectObject_ReturnValue_13) == 0x0001F6, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_EqualEqual_ObjectObject_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_EqualEqual_ObjectObject_ReturnValue_14) == 0x0001F7, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_EqualEqual_ObjectObject_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_EqualEqual_ObjectObject_ReturnValue_15) == 0x0001F8, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_EqualEqual_ObjectObject_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_EqualEqual_ObjectObject_ReturnValue_16) == 0x0001F9, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_EqualEqual_ObjectObject_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_EqualEqual_ObjectObject_ReturnValue_17) == 0x0001FA, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_EqualEqual_ObjectObject_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_EqualEqual_ObjectObject_ReturnValue_18) == 0x0001FB, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_EqualEqual_ObjectObject_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_BooleanOR_ReturnValue) == 0x0001FC, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_EqualEqual_ObjectObject_ReturnValue_19) == 0x0001FD, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_EqualEqual_ObjectObject_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_BooleanOR_ReturnValue_1) == 0x0001FE, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, K2Node_Select_Default_1) == 0x0001FF, "Member 'MPInGameInventory_C_SelectedMainContainerItem::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_BooleanOR_ReturnValue_2) == 0x000200, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_BooleanOR_ReturnValue_3) == 0x000201, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_BooleanOR_ReturnValue_4) == 0x000202, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_BooleanOR_ReturnValue_5) == 0x000203, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_EqualEqual_ObjectObject_ReturnValue_20) == 0x000204, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_EqualEqual_ObjectObject_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_BooleanOR_ReturnValue_6) == 0x000205, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_BooleanOR_ReturnValue_7) == 0x000206, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_BooleanOR_ReturnValue_8) == 0x000207, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_BooleanOR_ReturnValue_9) == 0x000208, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_BooleanOR_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000209, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_Not_PreBool_ReturnValue) == 0x00020A, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00020B, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, K2Node_Select_Default_2) == 0x00020C, "Member 'MPInGameInventory_C_SelectedMainContainerItem::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_BooleanOR_ReturnValue_10) == 0x00020D, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_BooleanOR_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00020E, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_BooleanOR_ReturnValue_11) == 0x00020F, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_BooleanOR_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000210, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000211, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000212, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_BooleanOR_ReturnValue_12) == 0x000213, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_BooleanOR_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x000214, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x000215, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_BooleanOR_ReturnValue_13) == 0x000216, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_BooleanOR_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x000217, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_BooleanOR_ReturnValue_14) == 0x000218, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_BooleanOR_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_EqualEqual_ByteByte_ReturnValue_9) == 0x000219, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_EqualEqual_ByteByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_BooleanOR_ReturnValue_15) == 0x00021A, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_BooleanOR_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_GetPocketContainer_Result_2) == 0x00021B, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_GetPocketContainer_Result_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_GetPocketContainer_Container_2) == 0x000220, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_GetPocketContainer_Container_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_BooleanOR_ReturnValue_16) == 0x000228, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_BooleanOR_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_BooleanOR_ReturnValue_17) == 0x000229, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_BooleanOR_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, K2Node_Select_Default_3) == 0x00022A, "Member 'MPInGameInventory_C_SelectedMainContainerItem::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x00022B, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_BooleanOR_ReturnValue_18) == 0x00022C, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_BooleanOR_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_BooleanOR_ReturnValue_19) == 0x00022D, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_BooleanOR_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_BooleanOR_ReturnValue_20) == 0x00022E, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_BooleanOR_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_EqualEqual_ObjectObject_ReturnValue_21) == 0x00022F, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_EqualEqual_ObjectObject_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_EqualEqual_ObjectObject_ReturnValue_22) == 0x000230, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_EqualEqual_ObjectObject_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, K2Node_Select_Default_4) == 0x000238, "Member 'MPInGameInventory_C_SelectedMainContainerItem::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_BooleanOR_ReturnValue_21) == 0x000250, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_BooleanOR_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_BooleanOR_ReturnValue_22) == 0x000251, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_BooleanOR_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_BooleanOR_ReturnValue_23) == 0x000252, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_BooleanOR_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_BooleanOR_ReturnValue_24) == 0x000253, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_BooleanOR_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_BooleanOR_ReturnValue_25) == 0x000254, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_BooleanOR_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_BooleanOR_ReturnValue_26) == 0x000255, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_BooleanOR_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_BooleanOR_ReturnValue_27) == 0x000256, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_BooleanOR_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_BooleanOR_ReturnValue_28) == 0x000257, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_BooleanOR_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_BooleanOR_ReturnValue_29) == 0x000258, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_BooleanOR_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_BooleanOR_ReturnValue_30) == 0x000259, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_BooleanOR_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_Not_PreBool_ReturnValue_1) == 0x00025A, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, K2Node_Select_Default_5) == 0x00025B, "Member 'MPInGameInventory_C_SelectedMainContainerItem::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_BooleanOR_ReturnValue_31) == 0x00025C, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_BooleanOR_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_Not_PreBool_ReturnValue_2) == 0x00025D, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectedMainContainerItem, CallFunc_BooleanAND_ReturnValue) == 0x00025E, "Member 'MPInGameInventory_C_SelectedMainContainerItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.SelectItem
// 0x0010 (0x0010 - 0x0000)
struct MPInGameInventory_C_SelectItem final
{
public:
	class UJSI_Slot_C*                            Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        Container;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_SelectItem) == 0x000008, "Wrong alignment on MPInGameInventory_C_SelectItem");
static_assert(sizeof(MPInGameInventory_C_SelectItem) == 0x000010, "Wrong size on MPInGameInventory_C_SelectItem");
static_assert(offsetof(MPInGameInventory_C_SelectItem, Item) == 0x000000, "Member 'MPInGameInventory_C_SelectItem::Item' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SelectItem, Container) == 0x000008, "Member 'MPInGameInventory_C_SelectItem::Container' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.Set Equip Pants
// 0x0001 (0x0001 - 0x0000)
struct MPInGameInventory_C_Set_Equip_Pants final
{
public:
	bool                                          NewEquip;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_Set_Equip_Pants) == 0x000001, "Wrong alignment on MPInGameInventory_C_Set_Equip_Pants");
static_assert(sizeof(MPInGameInventory_C_Set_Equip_Pants) == 0x000001, "Wrong size on MPInGameInventory_C_Set_Equip_Pants");
static_assert(offsetof(MPInGameInventory_C_Set_Equip_Pants, NewEquip) == 0x000000, "Member 'MPInGameInventory_C_Set_Equip_Pants::NewEquip' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.SetActiveCharacterWidget
// 0x0010 (0x0010 - 0x0000)
struct MPInGameInventory_C_SetActiveCharacterWidget final
{
public:
	int32                                         IndexOfActiveWidget;                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       ChangeAnimation;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_SetActiveCharacterWidget) == 0x000008, "Wrong alignment on MPInGameInventory_C_SetActiveCharacterWidget");
static_assert(sizeof(MPInGameInventory_C_SetActiveCharacterWidget) == 0x000010, "Wrong size on MPInGameInventory_C_SetActiveCharacterWidget");
static_assert(offsetof(MPInGameInventory_C_SetActiveCharacterWidget, IndexOfActiveWidget) == 0x000000, "Member 'MPInGameInventory_C_SetActiveCharacterWidget::IndexOfActiveWidget' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetActiveCharacterWidget, ChangeAnimation) == 0x000008, "Member 'MPInGameInventory_C_SetActiveCharacterWidget::ChangeAnimation' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.SetActiveInventoryWidget
// 0x0010 (0x0010 - 0x0000)
struct MPInGameInventory_C_SetActiveInventoryWidget final
{
public:
	int32                                         IndexOfActiveWidget;                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       ChangeAnimation;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_SetActiveInventoryWidget) == 0x000008, "Wrong alignment on MPInGameInventory_C_SetActiveInventoryWidget");
static_assert(sizeof(MPInGameInventory_C_SetActiveInventoryWidget) == 0x000010, "Wrong size on MPInGameInventory_C_SetActiveInventoryWidget");
static_assert(offsetof(MPInGameInventory_C_SetActiveInventoryWidget, IndexOfActiveWidget) == 0x000000, "Member 'MPInGameInventory_C_SetActiveInventoryWidget::IndexOfActiveWidget' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetActiveInventoryWidget, ChangeAnimation) == 0x000008, "Member 'MPInGameInventory_C_SetActiveInventoryWidget::ChangeAnimation' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.SetActiveQuestsWidget
// 0x0010 (0x0010 - 0x0000)
struct MPInGameInventory_C_SetActiveQuestsWidget final
{
public:
	int32                                         IndexOfActiveWidget;                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       ChangeAnimation;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_SetActiveQuestsWidget) == 0x000008, "Wrong alignment on MPInGameInventory_C_SetActiveQuestsWidget");
static_assert(sizeof(MPInGameInventory_C_SetActiveQuestsWidget) == 0x000010, "Wrong size on MPInGameInventory_C_SetActiveQuestsWidget");
static_assert(offsetof(MPInGameInventory_C_SetActiveQuestsWidget, IndexOfActiveWidget) == 0x000000, "Member 'MPInGameInventory_C_SetActiveQuestsWidget::IndexOfActiveWidget' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetActiveQuestsWidget, ChangeAnimation) == 0x000008, "Member 'MPInGameInventory_C_SetActiveQuestsWidget::ChangeAnimation' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.SetActiveSlot
// 0x0008 (0x0008 - 0x0000)
struct MPInGameInventory_C_SetActiveSlot final
{
public:
	class UJSI_Slot_C*                            Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_SetActiveSlot) == 0x000008, "Wrong alignment on MPInGameInventory_C_SetActiveSlot");
static_assert(sizeof(MPInGameInventory_C_SetActiveSlot) == 0x000008, "Wrong size on MPInGameInventory_C_SetActiveSlot");
static_assert(offsetof(MPInGameInventory_C_SetActiveSlot, Param_Slot) == 0x000000, "Member 'MPInGameInventory_C_SetActiveSlot::Param_Slot' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.SetBackpackContainerName
// 0x0018 (0x0018 - 0x0000)
struct MPInGameInventory_C_SetBackpackContainerName final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(MPInGameInventory_C_SetBackpackContainerName) == 0x000008, "Wrong alignment on MPInGameInventory_C_SetBackpackContainerName");
static_assert(sizeof(MPInGameInventory_C_SetBackpackContainerName) == 0x000018, "Wrong size on MPInGameInventory_C_SetBackpackContainerName");
static_assert(offsetof(MPInGameInventory_C_SetBackpackContainerName, InText) == 0x000000, "Member 'MPInGameInventory_C_SetBackpackContainerName::InText' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.SetCategorySelectorShops
// 0x0044 (0x0044 - 0x0000)
struct MPInGameInventory_C_SetCategorySelectorShops final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_SetCategorySelectorShops) == 0x000004, "Wrong alignment on MPInGameInventory_C_SetCategorySelectorShops");
static_assert(sizeof(MPInGameInventory_C_SetCategorySelectorShops) == 0x000044, "Wrong size on MPInGameInventory_C_SetCategorySelectorShops");
static_assert(offsetof(MPInGameInventory_C_SetCategorySelectorShops, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'MPInGameInventory_C_SetCategorySelectorShops::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetCategorySelectorShops, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'MPInGameInventory_C_SetCategorySelectorShops::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetCategorySelectorShops, K2Node_CreateDelegate_OutputDelegate_2) == 0x000020, "Member 'MPInGameInventory_C_SetCategorySelectorShops::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetCategorySelectorShops, K2Node_CreateDelegate_OutputDelegate_3) == 0x000030, "Member 'MPInGameInventory_C_SetCategorySelectorShops::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetCategorySelectorShops, CallFunc_Not_PreBool_ReturnValue) == 0x000040, "Member 'MPInGameInventory_C_SetCategorySelectorShops::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.SetContainerPermissions
// 0x0008 (0x0008 - 0x0000)
struct MPInGameInventory_C_SetContainerPermissions final
{
public:
	class UJSIContainer_C*                        Conatiner;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_SetContainerPermissions) == 0x000008, "Wrong alignment on MPInGameInventory_C_SetContainerPermissions");
static_assert(sizeof(MPInGameInventory_C_SetContainerPermissions) == 0x000008, "Wrong size on MPInGameInventory_C_SetContainerPermissions");
static_assert(offsetof(MPInGameInventory_C_SetContainerPermissions, Conatiner) == 0x000000, "Member 'MPInGameInventory_C_SetContainerPermissions::Conatiner' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.SetEquipBackpack
// 0x0001 (0x0001 - 0x0000)
struct MPInGameInventory_C_SetEquipBackpack final
{
public:
	bool                                          NewEquip;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_SetEquipBackpack) == 0x000001, "Wrong alignment on MPInGameInventory_C_SetEquipBackpack");
static_assert(sizeof(MPInGameInventory_C_SetEquipBackpack) == 0x000001, "Wrong size on MPInGameInventory_C_SetEquipBackpack");
static_assert(offsetof(MPInGameInventory_C_SetEquipBackpack, NewEquip) == 0x000000, "Member 'MPInGameInventory_C_SetEquipBackpack::NewEquip' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.SetEquipTacticalRig
// 0x0001 (0x0001 - 0x0000)
struct MPInGameInventory_C_SetEquipTacticalRig final
{
public:
	bool                                          NewEquip;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_SetEquipTacticalRig) == 0x000001, "Wrong alignment on MPInGameInventory_C_SetEquipTacticalRig");
static_assert(sizeof(MPInGameInventory_C_SetEquipTacticalRig) == 0x000001, "Wrong size on MPInGameInventory_C_SetEquipTacticalRig");
static_assert(offsetof(MPInGameInventory_C_SetEquipTacticalRig, NewEquip) == 0x000000, "Member 'MPInGameInventory_C_SetEquipTacticalRig::NewEquip' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.SetFillValueRepairAll
// 0x0028 (0x0028 - 0x0000)
struct MPInGameInventory_C_SetFillValueRepairAll final
{
public:
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UShopContainerWidget_C*                 K2Node_DynamicCast_AsShop_Container_Widget;        // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_SetFillValueRepairAll) == 0x000008, "Wrong alignment on MPInGameInventory_C_SetFillValueRepairAll");
static_assert(sizeof(MPInGameInventory_C_SetFillValueRepairAll) == 0x000028, "Wrong size on MPInGameInventory_C_SetFillValueRepairAll");
static_assert(offsetof(MPInGameInventory_C_SetFillValueRepairAll, CallFunc_GetChildAt_ReturnValue) == 0x000000, "Member 'MPInGameInventory_C_SetFillValueRepairAll::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetFillValueRepairAll, K2Node_DynamicCast_AsShop_Container_Widget) == 0x000008, "Member 'MPInGameInventory_C_SetFillValueRepairAll::K2Node_DynamicCast_AsShop_Container_Widget' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetFillValueRepairAll, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'MPInGameInventory_C_SetFillValueRepairAll::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetFillValueRepairAll, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000011, "Member 'MPInGameInventory_C_SetFillValueRepairAll::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetFillValueRepairAll, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000018, "Member 'MPInGameInventory_C_SetFillValueRepairAll::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetFillValueRepairAll, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'MPInGameInventory_C_SetFillValueRepairAll::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.SetFocused
// 0x0002 (0x0002 - 0x0000)
struct MPInGameInventory_C_SetFocused final
{
public:
	bool                                          NewFocus;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_SetFocused) == 0x000001, "Wrong alignment on MPInGameInventory_C_SetFocused");
static_assert(sizeof(MPInGameInventory_C_SetFocused) == 0x000002, "Wrong size on MPInGameInventory_C_SetFocused");
static_assert(offsetof(MPInGameInventory_C_SetFocused, NewFocus) == 0x000000, "Member 'MPInGameInventory_C_SetFocused::NewFocus' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetFocused, Success) == 0x000001, "Member 'MPInGameInventory_C_SetFocused::Success' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.SetItemsOnGroundContainer
// 0x04C8 (0x04C8 - 0x0000)
struct MPInGameInventory_C_SetItemsOnGroundContainer final
{
public:
	TArray<class AA_Item_C*>                      ItemsOnGround;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UJSIContainer_C*                        MainInventoryContainer;                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMPContainerWidget_C*                   CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       K2Node_DynamicCast_AsVertical_Box_Slot;            // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0048(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AA_Item_C*                              CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateChildSize                        K2Node_MakeStruct_SlateChildSize;                  // 0x0060(0x0008)(NoDestructor)
	struct FFItemInfo                             CallFunc_GetInfo_ItemInfo;                         // 0x0068(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_GetEmptySlot_SlotIndex;                   // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEmptySlot_Found_;                      // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddNewItem_Added;                         // 0x028D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28E[0x2];                                      // 0x028E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddNewItem_AddedToSlot;                   // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_294[0x4];                                      // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_AddNewItem_Info;                          // 0x0298(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_AddNewItem_SlotItemRef;                   // 0x04B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_SetItemsOnGroundContainer) == 0x000008, "Wrong alignment on MPInGameInventory_C_SetItemsOnGroundContainer");
static_assert(sizeof(MPInGameInventory_C_SetItemsOnGroundContainer) == 0x0004C8, "Wrong size on MPInGameInventory_C_SetItemsOnGroundContainer");
static_assert(offsetof(MPInGameInventory_C_SetItemsOnGroundContainer, ItemsOnGround) == 0x000000, "Member 'MPInGameInventory_C_SetItemsOnGroundContainer::ItemsOnGround' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetItemsOnGroundContainer, MainInventoryContainer) == 0x000010, "Member 'MPInGameInventory_C_SetItemsOnGroundContainer::MainInventoryContainer' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetItemsOnGroundContainer, Temp_int_Array_Index_Variable) == 0x000018, "Member 'MPInGameInventory_C_SetItemsOnGroundContainer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetItemsOnGroundContainer, CallFunc_Create_ReturnValue) == 0x000020, "Member 'MPInGameInventory_C_SetItemsOnGroundContainer::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetItemsOnGroundContainer, CallFunc_AddChild_ReturnValue) == 0x000028, "Member 'MPInGameInventory_C_SetItemsOnGroundContainer::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetItemsOnGroundContainer, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'MPInGameInventory_C_SetItemsOnGroundContainer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetItemsOnGroundContainer, K2Node_DynamicCast_AsVertical_Box_Slot) == 0x000038, "Member 'MPInGameInventory_C_SetItemsOnGroundContainer::K2Node_DynamicCast_AsVertical_Box_Slot' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetItemsOnGroundContainer, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'MPInGameInventory_C_SetItemsOnGroundContainer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetItemsOnGroundContainer, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'MPInGameInventory_C_SetItemsOnGroundContainer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetItemsOnGroundContainer, Temp_int_Variable) == 0x000048, "Member 'MPInGameInventory_C_SetItemsOnGroundContainer::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetItemsOnGroundContainer, CallFunc_Array_Get_Item) == 0x000050, "Member 'MPInGameInventory_C_SetItemsOnGroundContainer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetItemsOnGroundContainer, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'MPInGameInventory_C_SetItemsOnGroundContainer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetItemsOnGroundContainer, CallFunc_IsValid_ReturnValue) == 0x00005C, "Member 'MPInGameInventory_C_SetItemsOnGroundContainer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetItemsOnGroundContainer, CallFunc_Less_IntInt_ReturnValue) == 0x00005D, "Member 'MPInGameInventory_C_SetItemsOnGroundContainer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetItemsOnGroundContainer, K2Node_MakeStruct_SlateChildSize) == 0x000060, "Member 'MPInGameInventory_C_SetItemsOnGroundContainer::K2Node_MakeStruct_SlateChildSize' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetItemsOnGroundContainer, CallFunc_GetInfo_ItemInfo) == 0x000068, "Member 'MPInGameInventory_C_SetItemsOnGroundContainer::CallFunc_GetInfo_ItemInfo' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetItemsOnGroundContainer, CallFunc_GetEmptySlot_SlotIndex) == 0x000288, "Member 'MPInGameInventory_C_SetItemsOnGroundContainer::CallFunc_GetEmptySlot_SlotIndex' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetItemsOnGroundContainer, CallFunc_GetEmptySlot_Found_) == 0x00028C, "Member 'MPInGameInventory_C_SetItemsOnGroundContainer::CallFunc_GetEmptySlot_Found_' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetItemsOnGroundContainer, CallFunc_AddNewItem_Added) == 0x00028D, "Member 'MPInGameInventory_C_SetItemsOnGroundContainer::CallFunc_AddNewItem_Added' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetItemsOnGroundContainer, CallFunc_AddNewItem_AddedToSlot) == 0x000290, "Member 'MPInGameInventory_C_SetItemsOnGroundContainer::CallFunc_AddNewItem_AddedToSlot' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetItemsOnGroundContainer, CallFunc_AddNewItem_Info) == 0x000298, "Member 'MPInGameInventory_C_SetItemsOnGroundContainer::CallFunc_AddNewItem_Info' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetItemsOnGroundContainer, CallFunc_AddNewItem_SlotItemRef) == 0x0004B8, "Member 'MPInGameInventory_C_SetItemsOnGroundContainer::CallFunc_AddNewItem_SlotItemRef' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetItemsOnGroundContainer, CallFunc_IsValid_ReturnValue_1) == 0x0004C0, "Member 'MPInGameInventory_C_SetItemsOnGroundContainer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.SetLootContainerName
// 0x0018 (0x0018 - 0x0000)
struct MPInGameInventory_C_SetLootContainerName final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(MPInGameInventory_C_SetLootContainerName) == 0x000008, "Wrong alignment on MPInGameInventory_C_SetLootContainerName");
static_assert(sizeof(MPInGameInventory_C_SetLootContainerName) == 0x000018, "Wrong size on MPInGameInventory_C_SetLootContainerName");
static_assert(offsetof(MPInGameInventory_C_SetLootContainerName, InText) == 0x000000, "Member 'MPInGameInventory_C_SetLootContainerName::InText' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.SetPantsContainerName
// 0x0018 (0x0018 - 0x0000)
struct MPInGameInventory_C_SetPantsContainerName final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(MPInGameInventory_C_SetPantsContainerName) == 0x000008, "Wrong alignment on MPInGameInventory_C_SetPantsContainerName");
static_assert(sizeof(MPInGameInventory_C_SetPantsContainerName) == 0x000018, "Wrong size on MPInGameInventory_C_SetPantsContainerName");
static_assert(offsetof(MPInGameInventory_C_SetPantsContainerName, InText) == 0x000000, "Member 'MPInGameInventory_C_SetPantsContainerName::InText' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.SetScrollBarRenderOpacity
// 0x0140 (0x0140 - 0x0000)
struct MPInGameInventory_C_SetScrollBarRenderOpacity final
{
public:
	class UScrollBox*                             ScrollBoxWidgetRef;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Opacity;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           TinpColor;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0048(0x0014)()
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0060(0x00D0)()
	float                                         CallFunc_MakeColor_A_ImplicitCast;                 // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_SetScrollBarRenderOpacity) == 0x000010, "Wrong alignment on MPInGameInventory_C_SetScrollBarRenderOpacity");
static_assert(sizeof(MPInGameInventory_C_SetScrollBarRenderOpacity) == 0x000140, "Wrong size on MPInGameInventory_C_SetScrollBarRenderOpacity");
static_assert(offsetof(MPInGameInventory_C_SetScrollBarRenderOpacity, ScrollBoxWidgetRef) == 0x000000, "Member 'MPInGameInventory_C_SetScrollBarRenderOpacity::ScrollBoxWidgetRef' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetScrollBarRenderOpacity, Opacity) == 0x000008, "Member 'MPInGameInventory_C_SetScrollBarRenderOpacity::Opacity' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetScrollBarRenderOpacity, TinpColor) == 0x000010, "Member 'MPInGameInventory_C_SetScrollBarRenderOpacity::TinpColor' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetScrollBarRenderOpacity, CallFunc_BreakColor_R) == 0x000020, "Member 'MPInGameInventory_C_SetScrollBarRenderOpacity::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetScrollBarRenderOpacity, CallFunc_BreakColor_G) == 0x000024, "Member 'MPInGameInventory_C_SetScrollBarRenderOpacity::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetScrollBarRenderOpacity, CallFunc_BreakColor_B) == 0x000028, "Member 'MPInGameInventory_C_SetScrollBarRenderOpacity::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetScrollBarRenderOpacity, CallFunc_BreakColor_A) == 0x00002C, "Member 'MPInGameInventory_C_SetScrollBarRenderOpacity::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetScrollBarRenderOpacity, CallFunc_MapRangeClamped_ReturnValue) == 0x000030, "Member 'MPInGameInventory_C_SetScrollBarRenderOpacity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetScrollBarRenderOpacity, CallFunc_MakeColor_ReturnValue) == 0x000038, "Member 'MPInGameInventory_C_SetScrollBarRenderOpacity::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetScrollBarRenderOpacity, K2Node_MakeStruct_SlateColor) == 0x000048, "Member 'MPInGameInventory_C_SetScrollBarRenderOpacity::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetScrollBarRenderOpacity, K2Node_MakeStruct_SlateBrush) == 0x000060, "Member 'MPInGameInventory_C_SetScrollBarRenderOpacity::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetScrollBarRenderOpacity, CallFunc_MakeColor_A_ImplicitCast) == 0x000130, "Member 'MPInGameInventory_C_SetScrollBarRenderOpacity::CallFunc_MakeColor_A_ImplicitCast' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.SetSiluetArmor
// 0x0010 (0x0010 - 0x0000)
struct MPInGameInventory_C_SetSiluetArmor final
{
public:
	bool                                          NewEnabled;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MPInGameInventory_C_SetSiluetArmor) == 0x000008, "Wrong alignment on MPInGameInventory_C_SetSiluetArmor");
static_assert(sizeof(MPInGameInventory_C_SetSiluetArmor) == 0x000010, "Wrong size on MPInGameInventory_C_SetSiluetArmor");
static_assert(offsetof(MPInGameInventory_C_SetSiluetArmor, NewEnabled) == 0x000000, "Member 'MPInGameInventory_C_SetSiluetArmor::NewEnabled' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetSiluetArmor, CallFunc_PlayEvent2D_ReturnValue) == 0x000008, "Member 'MPInGameInventory_C_SetSiluetArmor::CallFunc_PlayEvent2D_ReturnValue' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.SetSiluetBackpack
// 0x0010 (0x0010 - 0x0000)
struct MPInGameInventory_C_SetSiluetBackpack final
{
public:
	bool                                          NewEnabled;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MPInGameInventory_C_SetSiluetBackpack) == 0x000008, "Wrong alignment on MPInGameInventory_C_SetSiluetBackpack");
static_assert(sizeof(MPInGameInventory_C_SetSiluetBackpack) == 0x000010, "Wrong size on MPInGameInventory_C_SetSiluetBackpack");
static_assert(offsetof(MPInGameInventory_C_SetSiluetBackpack, NewEnabled) == 0x000000, "Member 'MPInGameInventory_C_SetSiluetBackpack::NewEnabled' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetSiluetBackpack, CallFunc_PlayEvent2D_ReturnValue) == 0x000008, "Member 'MPInGameInventory_C_SetSiluetBackpack::CallFunc_PlayEvent2D_ReturnValue' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.SetSiluetHelmet
// 0x0010 (0x0010 - 0x0000)
struct MPInGameInventory_C_SetSiluetHelmet final
{
public:
	bool                                          NewEnabled;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MPInGameInventory_C_SetSiluetHelmet) == 0x000008, "Wrong alignment on MPInGameInventory_C_SetSiluetHelmet");
static_assert(sizeof(MPInGameInventory_C_SetSiluetHelmet) == 0x000010, "Wrong size on MPInGameInventory_C_SetSiluetHelmet");
static_assert(offsetof(MPInGameInventory_C_SetSiluetHelmet, NewEnabled) == 0x000000, "Member 'MPInGameInventory_C_SetSiluetHelmet::NewEnabled' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetSiluetHelmet, CallFunc_PlayEvent2D_ReturnValue) == 0x000008, "Member 'MPInGameInventory_C_SetSiluetHelmet::CallFunc_PlayEvent2D_ReturnValue' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.SetSiluetMelee
// 0x0001 (0x0001 - 0x0000)
struct MPInGameInventory_C_SetSiluetMelee final
{
public:
	bool                                          NewEnabled;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_SetSiluetMelee) == 0x000001, "Wrong alignment on MPInGameInventory_C_SetSiluetMelee");
static_assert(sizeof(MPInGameInventory_C_SetSiluetMelee) == 0x000001, "Wrong size on MPInGameInventory_C_SetSiluetMelee");
static_assert(offsetof(MPInGameInventory_C_SetSiluetMelee, NewEnabled) == 0x000000, "Member 'MPInGameInventory_C_SetSiluetMelee::NewEnabled' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.SetSiluetPants
// 0x0001 (0x0001 - 0x0000)
struct MPInGameInventory_C_SetSiluetPants final
{
public:
	bool                                          NewEnabled;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_SetSiluetPants) == 0x000001, "Wrong alignment on MPInGameInventory_C_SetSiluetPants");
static_assert(sizeof(MPInGameInventory_C_SetSiluetPants) == 0x000001, "Wrong size on MPInGameInventory_C_SetSiluetPants");
static_assert(offsetof(MPInGameInventory_C_SetSiluetPants, NewEnabled) == 0x000000, "Member 'MPInGameInventory_C_SetSiluetPants::NewEnabled' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.SetSiluetPistol
// 0x0001 (0x0001 - 0x0000)
struct MPInGameInventory_C_SetSiluetPistol final
{
public:
	bool                                          NewEnabled;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_SetSiluetPistol) == 0x000001, "Wrong alignment on MPInGameInventory_C_SetSiluetPistol");
static_assert(sizeof(MPInGameInventory_C_SetSiluetPistol) == 0x000001, "Wrong size on MPInGameInventory_C_SetSiluetPistol");
static_assert(offsetof(MPInGameInventory_C_SetSiluetPistol, NewEnabled) == 0x000000, "Member 'MPInGameInventory_C_SetSiluetPistol::NewEnabled' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.SetSiluetPrimary
// 0x0001 (0x0001 - 0x0000)
struct MPInGameInventory_C_SetSiluetPrimary final
{
public:
	bool                                          NewEnabled;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_SetSiluetPrimary) == 0x000001, "Wrong alignment on MPInGameInventory_C_SetSiluetPrimary");
static_assert(sizeof(MPInGameInventory_C_SetSiluetPrimary) == 0x000001, "Wrong size on MPInGameInventory_C_SetSiluetPrimary");
static_assert(offsetof(MPInGameInventory_C_SetSiluetPrimary, NewEnabled) == 0x000000, "Member 'MPInGameInventory_C_SetSiluetPrimary::NewEnabled' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.SetSiluetSecondary
// 0x0001 (0x0001 - 0x0000)
struct MPInGameInventory_C_SetSiluetSecondary final
{
public:
	bool                                          NewEnabled;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_SetSiluetSecondary) == 0x000001, "Wrong alignment on MPInGameInventory_C_SetSiluetSecondary");
static_assert(sizeof(MPInGameInventory_C_SetSiluetSecondary) == 0x000001, "Wrong size on MPInGameInventory_C_SetSiluetSecondary");
static_assert(offsetof(MPInGameInventory_C_SetSiluetSecondary, NewEnabled) == 0x000000, "Member 'MPInGameInventory_C_SetSiluetSecondary::NewEnabled' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.SetSiluetTacticalRig
// 0x0001 (0x0001 - 0x0000)
struct MPInGameInventory_C_SetSiluetTacticalRig final
{
public:
	bool                                          NewEnabled;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_SetSiluetTacticalRig) == 0x000001, "Wrong alignment on MPInGameInventory_C_SetSiluetTacticalRig");
static_assert(sizeof(MPInGameInventory_C_SetSiluetTacticalRig) == 0x000001, "Wrong size on MPInGameInventory_C_SetSiluetTacticalRig");
static_assert(offsetof(MPInGameInventory_C_SetSiluetTacticalRig, NewEnabled) == 0x000000, "Member 'MPInGameInventory_C_SetSiluetTacticalRig::NewEnabled' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.SetStashView
// 0x0050 (0x0050 - 0x0000)
struct MPInGameInventory_C_SetStashView final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_10;                             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_11;                             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_2;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_InteractiveSafe_C*                  CallFunc_GetActorOfClass_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Stash_C*                            CallFunc_GetActorOfClass_ReturnValue_1;            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_5;                           // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_6;                           // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_SetStashView) == 0x000008, "Wrong alignment on MPInGameInventory_C_SetStashView");
static_assert(sizeof(MPInGameInventory_C_SetStashView) == 0x000050, "Wrong size on MPInGameInventory_C_SetStashView");
static_assert(offsetof(MPInGameInventory_C_SetStashView, Temp_byte_Variable) == 0x000000, "Member 'MPInGameInventory_C_SetStashView::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetStashView, Temp_byte_Variable_1) == 0x000001, "Member 'MPInGameInventory_C_SetStashView::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetStashView, Temp_bool_Variable) == 0x000002, "Member 'MPInGameInventory_C_SetStashView::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetStashView, CallFunc_IsValid_ReturnValue) == 0x000003, "Member 'MPInGameInventory_C_SetStashView::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetStashView, CallFunc_IsValid_ReturnValue_1) == 0x000004, "Member 'MPInGameInventory_C_SetStashView::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetStashView, Temp_byte_Variable_2) == 0x000005, "Member 'MPInGameInventory_C_SetStashView::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetStashView, Temp_byte_Variable_3) == 0x000006, "Member 'MPInGameInventory_C_SetStashView::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetStashView, Temp_bool_Variable_1) == 0x000007, "Member 'MPInGameInventory_C_SetStashView::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetStashView, Temp_byte_Variable_4) == 0x000008, "Member 'MPInGameInventory_C_SetStashView::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetStashView, Temp_byte_Variable_5) == 0x000009, "Member 'MPInGameInventory_C_SetStashView::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetStashView, Temp_bool_Variable_2) == 0x00000A, "Member 'MPInGameInventory_C_SetStashView::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetStashView, Temp_byte_Variable_6) == 0x00000B, "Member 'MPInGameInventory_C_SetStashView::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetStashView, Temp_byte_Variable_7) == 0x00000C, "Member 'MPInGameInventory_C_SetStashView::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetStashView, Temp_bool_Variable_3) == 0x00000D, "Member 'MPInGameInventory_C_SetStashView::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetStashView, Temp_byte_Variable_8) == 0x00000E, "Member 'MPInGameInventory_C_SetStashView::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetStashView, Temp_byte_Variable_9) == 0x00000F, "Member 'MPInGameInventory_C_SetStashView::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetStashView, Temp_bool_Variable_4) == 0x000010, "Member 'MPInGameInventory_C_SetStashView::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetStashView, Temp_byte_Variable_10) == 0x000011, "Member 'MPInGameInventory_C_SetStashView::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetStashView, K2Node_Select_Default) == 0x000012, "Member 'MPInGameInventory_C_SetStashView::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetStashView, CallFunc_SelectInt_ReturnValue) == 0x000014, "Member 'MPInGameInventory_C_SetStashView::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetStashView, CallFunc_SelectInt_ReturnValue_1) == 0x000018, "Member 'MPInGameInventory_C_SetStashView::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetStashView, CallFunc_PlayAnimationForward_ReturnValue) == 0x000020, "Member 'MPInGameInventory_C_SetStashView::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetStashView, Temp_bool_Variable_5) == 0x000028, "Member 'MPInGameInventory_C_SetStashView::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetStashView, Temp_byte_Variable_11) == 0x000029, "Member 'MPInGameInventory_C_SetStashView::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetStashView, Temp_bool_Variable_6) == 0x00002A, "Member 'MPInGameInventory_C_SetStashView::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetStashView, K2Node_Select_Default_1) == 0x00002B, "Member 'MPInGameInventory_C_SetStashView::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetStashView, CallFunc_SelectInt_ReturnValue_2) == 0x00002C, "Member 'MPInGameInventory_C_SetStashView::CallFunc_SelectInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetStashView, CallFunc_GetActorOfClass_ReturnValue) == 0x000030, "Member 'MPInGameInventory_C_SetStashView::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetStashView, K2Node_Select_Default_2) == 0x000038, "Member 'MPInGameInventory_C_SetStashView::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetStashView, CallFunc_GetActorOfClass_ReturnValue_1) == 0x000040, "Member 'MPInGameInventory_C_SetStashView::CallFunc_GetActorOfClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetStashView, K2Node_Select_Default_3) == 0x000048, "Member 'MPInGameInventory_C_SetStashView::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetStashView, K2Node_Select_Default_4) == 0x000049, "Member 'MPInGameInventory_C_SetStashView::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetStashView, CallFunc_BooleanOR_ReturnValue) == 0x00004A, "Member 'MPInGameInventory_C_SetStashView::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetStashView, CallFunc_Not_PreBool_ReturnValue) == 0x00004B, "Member 'MPInGameInventory_C_SetStashView::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetStashView, K2Node_Select_Default_5) == 0x00004C, "Member 'MPInGameInventory_C_SetStashView::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetStashView, K2Node_Select_Default_6) == 0x00004D, "Member 'MPInGameInventory_C_SetStashView::K2Node_Select_Default_6' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.SetTacticalRigContainerName
// 0x0018 (0x0018 - 0x0000)
struct MPInGameInventory_C_SetTacticalRigContainerName final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(MPInGameInventory_C_SetTacticalRigContainerName) == 0x000008, "Wrong alignment on MPInGameInventory_C_SetTacticalRigContainerName");
static_assert(sizeof(MPInGameInventory_C_SetTacticalRigContainerName) == 0x000018, "Wrong size on MPInGameInventory_C_SetTacticalRigContainerName");
static_assert(offsetof(MPInGameInventory_C_SetTacticalRigContainerName, InText) == 0x000000, "Member 'MPInGameInventory_C_SetTacticalRigContainerName::InText' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.SetWindowsType
// 0x0018 (0x0018 - 0x0000)
struct MPInGameInventory_C_SetWindowsType final
{
public:
	bool                                          WithLootPoint;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ground;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                NewLocalVar_0;                                     // 0x0004(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_SetWindowsType) == 0x000004, "Wrong alignment on MPInGameInventory_C_SetWindowsType");
static_assert(sizeof(MPInGameInventory_C_SetWindowsType) == 0x000018, "Wrong size on MPInGameInventory_C_SetWindowsType");
static_assert(offsetof(MPInGameInventory_C_SetWindowsType, WithLootPoint) == 0x000000, "Member 'MPInGameInventory_C_SetWindowsType::WithLootPoint' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetWindowsType, Ground) == 0x000001, "Member 'MPInGameInventory_C_SetWindowsType::Ground' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetWindowsType, NewLocalVar_0) == 0x000004, "Member 'MPInGameInventory_C_SetWindowsType::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SetWindowsType, CallFunc_SelectInt_ReturnValue) == 0x000014, "Member 'MPInGameInventory_C_SetWindowsType::CallFunc_SelectInt_ReturnValue' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.Shop Item Hovered Checking
// 0x0AF0 (0x0AF0 - 0x0000)
struct MPInGameInventory_C_Shop_Item_Hovered_Checking final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_10;                             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ShopContainer                               Temp_byte_Variable_11;                             // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0018(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0030(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0048(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0060(0x0018)()
	ESlateVisibility                              Temp_byte_Variable_12;                             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPocketContainer_Result;                // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B[0x5];                                       // 0x007B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_GetPocketContainer_Container;             // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_11;                             // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_12;                             // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_13;                             // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPocketContainer_Result_1;              // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_GetPocketContainer_Container_1;           // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UShopContainerWidget_C*                 K2Node_DynamicCast_AsShop_Container_Widget;        // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPageIndex_PageIndex;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_14;                             // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B3[0x5];                                       // 0x00B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_ItemInfo_C*                          CallFunc_GetItemInfoWidget_Widget;                 // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_GetItemInfo_ItemInfo;                     // 0x00E8(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetItemInfo_TriggerUserWidget;            // 0x0308(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_DynamicCast_AsJSI_Slot;                     // 0x0310(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0319(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x031A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x031B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x031C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_4;    // 0x031D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_5;    // 0x031E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_6;    // 0x031F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_7;    // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_8;    // 0x0321(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_9;    // 0x0322(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0323(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_10;   // 0x0324(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_15;                             // 0x0325(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0326(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0327(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0329(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x032A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x032B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x032C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x032D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x032E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x032F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMPContainerWidget_C*                   K2Node_Select_Default_2;                           // 0x0330(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0339(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_9;                  // 0x033A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x033B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33C[0x4];                                      // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0340(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_1;                     // 0x0348(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD_1;               // 0x0350(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_ItemInfo_C*                          CallFunc_GetItemInfoWidget_Widget_1;               // 0x0368(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue_1;                 // 0x0370(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UShopContainerWidget_C*                 K2Node_DynamicCast_AsShop_Container_Widget_1;      // 0x0378(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381[0x7];                                      // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetItemInfo_ItemInfo_1;                   // 0x0388(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetItemInfo_TriggerUserWidget_1;          // 0x05A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Have_Items_to_Repair_bHaveItemsToRepair; // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x05B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x05B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x05B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x05B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x05B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x05B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_10;                 // 0x05B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_16;                             // 0x05B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B9[0x7];                                      // 0x05B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x05C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_5;                           // 0x05C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C9[0x7];                                      // 0x05C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_2;                     // 0x05D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x05D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D9[0x7];                                      // 0x05D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD_2;               // 0x05E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x05F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x05F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F2[0x6];                                      // 0x05F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_ItemInfo_C*                          CallFunc_GetItemInfoWidget_Widget_2;               // 0x05F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_6;                           // 0x0600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_601[0x7];                                      // 0x0601(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetItemInfo_ItemInfo_2;                   // 0x0608(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetItemInfo_TriggerUserWidget_2;          // 0x0828(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_DynamicCast_AsJSI_Slot_1;                   // 0x0830(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0838(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0839(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_11;   // 0x083A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x083B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_12;   // 0x083C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_13;   // 0x083D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_14;   // 0x083E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_15;   // 0x083F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_16;   // 0x0840(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_17;   // 0x0841(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_18;   // 0x0842(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_19;   // 0x0843(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_20;   // 0x0844(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_11;                 // 0x0845(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_21;   // 0x0846(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_12;                 // 0x0847(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_7;                           // 0x0848(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_13;                 // 0x0849(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_14;                 // 0x084A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_22;   // 0x084B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_15;                 // 0x084C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x084D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_16;                 // 0x084E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_8;                           // 0x084F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_17;                 // 0x0850(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_18;                 // 0x0851(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0852(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_19;                 // 0x0853(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_20;                 // 0x0854(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_855[0x3];                                      // 0x0855(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCount_Count;                           // 0x0858(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x085C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x085D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_9;                           // 0x085E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_21;                 // 0x085F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_10;                          // 0x0860(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_22;                 // 0x0861(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0862(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0863(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0864(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_11;                          // 0x0865(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x0866(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_867[0x1];                                      // 0x0867(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_3;        // 0x0868(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_12;                          // 0x0870(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_871[0x7];                                      // 0x0871(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_3;                     // 0x0878(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD_3;               // 0x0880(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0890(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_891[0x7];                                      // 0x0891(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_ItemInfo_C*                          CallFunc_GetItemInfoWidget_Widget_3;               // 0x0898(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_GetItemInfo_ItemInfo_3;                   // 0x08A0(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetItemInfo_TriggerUserWidget_3;          // 0x0AC0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_DynamicCast_AsJSI_Slot_2;                   // 0x0AC8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0AD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD1[0x7];                                      // 0x0AD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_13;                          // 0x0AD8(0x0018)()
};
static_assert(alignof(MPInGameInventory_C_Shop_Item_Hovered_Checking) == 0x000008, "Wrong alignment on MPInGameInventory_C_Shop_Item_Hovered_Checking");
static_assert(sizeof(MPInGameInventory_C_Shop_Item_Hovered_Checking) == 0x000AF0, "Wrong size on MPInGameInventory_C_Shop_Item_Hovered_Checking");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, Temp_byte_Variable) == 0x000000, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, Temp_bool_Variable) == 0x000001, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, Temp_byte_Variable_1) == 0x000002, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, Temp_byte_Variable_2) == 0x000003, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, Temp_bool_Variable_1) == 0x000004, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, Temp_bool_Variable_2) == 0x000005, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, Temp_bool_Variable_3) == 0x000006, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, Temp_bool_Variable_4) == 0x000007, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, Temp_bool_Variable_5) == 0x000008, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, Temp_byte_Variable_3) == 0x000009, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, Temp_byte_Variable_4) == 0x00000A, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, Temp_bool_Variable_6) == 0x00000B, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, K2Node_Select_Default) == 0x00000C, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, Temp_byte_Variable_5) == 0x00000D, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, Temp_byte_Variable_6) == 0x00000E, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, Temp_bool_Variable_7) == 0x00000F, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, Temp_byte_Variable_7) == 0x000010, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, Temp_byte_Variable_8) == 0x000011, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, Temp_bool_Variable_8) == 0x000012, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, Temp_byte_Variable_9) == 0x000013, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, Temp_byte_Variable_10) == 0x000014, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, Temp_byte_Variable_11) == 0x000015, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, Temp_text_Variable) == 0x000018, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, Temp_text_Variable_1) == 0x000030, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, Temp_text_Variable_2) == 0x000048, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, Temp_text_Variable_3) == 0x000060, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, Temp_byte_Variable_12) == 0x000078, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, Temp_bool_Variable_9) == 0x000079, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_GetPocketContainer_Result) == 0x00007A, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_GetPocketContainer_Result' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_GetPocketContainer_Container) == 0x000080, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_GetPocketContainer_Container' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, Temp_bool_Variable_10) == 0x000088, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, Temp_bool_Variable_11) == 0x000089, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, Temp_bool_Variable_12) == 0x00008A, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, Temp_bool_Variable_13) == 0x00008B, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::Temp_bool_Variable_13' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_GetPocketContainer_Result_1) == 0x00008C, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_GetPocketContainer_Result_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_GetPocketContainer_Container_1) == 0x000090, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_GetPocketContainer_Container_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_GetChildAt_ReturnValue) == 0x000098, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, K2Node_DynamicCast_AsShop_Container_Widget) == 0x0000A0, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::K2Node_DynamicCast_AsShop_Container_Widget' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_GetPageIndex_PageIndex) == 0x0000AC, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_GetPageIndex_PageIndex' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000B0, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000B1, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, Temp_bool_Variable_14) == 0x0000B2, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::Temp_bool_Variable_14' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_GetPlayerController_ReturnValue) == 0x0000B8, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_GetHUD_ReturnValue) == 0x0000C0, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x0000C8, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, K2Node_DynamicCast_bSuccess_1) == 0x0000D8, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_GetItemInfoWidget_Widget) == 0x0000E0, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_GetItemInfoWidget_Widget' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_GetItemInfo_ItemInfo) == 0x0000E8, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_GetItemInfo_ItemInfo' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_GetItemInfo_TriggerUserWidget) == 0x000308, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_GetItemInfo_TriggerUserWidget' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, K2Node_DynamicCast_AsJSI_Slot) == 0x000310, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::K2Node_DynamicCast_AsJSI_Slot' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, K2Node_DynamicCast_bSuccess_2) == 0x000318, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000319, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x00031A, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x00031B, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x00031C, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_EqualEqual_ObjectObject_ReturnValue_4) == 0x00031D, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_EqualEqual_ObjectObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_EqualEqual_ObjectObject_ReturnValue_5) == 0x00031E, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_EqualEqual_ObjectObject_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_EqualEqual_ObjectObject_ReturnValue_6) == 0x00031F, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_EqualEqual_ObjectObject_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_EqualEqual_ObjectObject_ReturnValue_7) == 0x000320, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_EqualEqual_ObjectObject_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_EqualEqual_ObjectObject_ReturnValue_8) == 0x000321, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_EqualEqual_ObjectObject_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_EqualEqual_ObjectObject_ReturnValue_9) == 0x000322, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_EqualEqual_ObjectObject_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000323, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_EqualEqual_ObjectObject_ReturnValue_10) == 0x000324, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_EqualEqual_ObjectObject_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, Temp_bool_Variable_15) == 0x000325, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::Temp_bool_Variable_15' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_BooleanOR_ReturnValue) == 0x000326, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_BooleanOR_ReturnValue_1) == 0x000327, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, K2Node_Select_Default_1) == 0x000328, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_BooleanOR_ReturnValue_2) == 0x000329, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_BooleanOR_ReturnValue_3) == 0x00032A, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_BooleanOR_ReturnValue_4) == 0x00032B, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_BooleanOR_ReturnValue_5) == 0x00032C, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_IsValid_ReturnValue) == 0x00032D, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_BooleanOR_ReturnValue_6) == 0x00032E, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_BooleanOR_ReturnValue_7) == 0x00032F, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, K2Node_Select_Default_2) == 0x000330, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_BooleanOR_ReturnValue_8) == 0x000338, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_IsValid_ReturnValue_1) == 0x000339, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_BooleanOR_ReturnValue_9) == 0x00033A, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_BooleanOR_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_Not_PreBool_ReturnValue) == 0x00033B, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_GetPlayerController_ReturnValue_1) == 0x000340, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_GetHUD_ReturnValue_1) == 0x000348, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_GetHUD_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, K2Node_DynamicCast_AsBPI_Game_HUD_1) == 0x000350, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::K2Node_DynamicCast_AsBPI_Game_HUD_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, K2Node_DynamicCast_bSuccess_3) == 0x000360, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_GetItemInfoWidget_Widget_1) == 0x000368, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_GetItemInfoWidget_Widget_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_GetChildAt_ReturnValue_1) == 0x000370, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_GetChildAt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, K2Node_DynamicCast_AsShop_Container_Widget_1) == 0x000378, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::K2Node_DynamicCast_AsShop_Container_Widget_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, K2Node_DynamicCast_bSuccess_4) == 0x000380, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_GetItemInfo_ItemInfo_1) == 0x000388, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_GetItemInfo_ItemInfo_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_GetItemInfo_TriggerUserWidget_1) == 0x0005A8, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_GetItemInfo_TriggerUserWidget_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_Get_Have_Items_to_Repair_bHaveItemsToRepair) == 0x0005B0, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_Get_Have_Items_to_Repair_bHaveItemsToRepair' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0005B1, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, K2Node_Select_Default_3) == 0x0005B2, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0005B3, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_BooleanAND_ReturnValue) == 0x0005B4, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_BooleanAND_ReturnValue_1) == 0x0005B5, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, K2Node_Select_Default_4) == 0x0005B6, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_BooleanOR_ReturnValue_10) == 0x0005B7, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_BooleanOR_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, Temp_bool_Variable_16) == 0x0005B8, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::Temp_bool_Variable_16' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_GetPlayerController_ReturnValue_2) == 0x0005C0, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, K2Node_Select_Default_5) == 0x0005C8, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_GetHUD_ReturnValue_2) == 0x0005D0, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_GetHUD_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_BooleanAND_ReturnValue_2) == 0x0005D8, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, K2Node_DynamicCast_AsBPI_Game_HUD_2) == 0x0005E0, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::K2Node_DynamicCast_AsBPI_Game_HUD_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, K2Node_DynamicCast_bSuccess_5) == 0x0005F0, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_BooleanAND_ReturnValue_3) == 0x0005F1, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_GetItemInfoWidget_Widget_2) == 0x0005F8, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_GetItemInfoWidget_Widget_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, K2Node_Select_Default_6) == 0x000600, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_GetItemInfo_ItemInfo_2) == 0x000608, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_GetItemInfo_ItemInfo_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_GetItemInfo_TriggerUserWidget_2) == 0x000828, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_GetItemInfo_TriggerUserWidget_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, K2Node_DynamicCast_AsJSI_Slot_1) == 0x000830, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::K2Node_DynamicCast_AsJSI_Slot_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, K2Node_DynamicCast_bSuccess_6) == 0x000838, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000839, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_EqualEqual_ObjectObject_ReturnValue_11) == 0x00083A, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_EqualEqual_ObjectObject_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x00083B, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_EqualEqual_ObjectObject_ReturnValue_12) == 0x00083C, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_EqualEqual_ObjectObject_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_EqualEqual_ObjectObject_ReturnValue_13) == 0x00083D, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_EqualEqual_ObjectObject_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_EqualEqual_ObjectObject_ReturnValue_14) == 0x00083E, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_EqualEqual_ObjectObject_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_EqualEqual_ObjectObject_ReturnValue_15) == 0x00083F, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_EqualEqual_ObjectObject_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_EqualEqual_ObjectObject_ReturnValue_16) == 0x000840, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_EqualEqual_ObjectObject_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_EqualEqual_ObjectObject_ReturnValue_17) == 0x000841, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_EqualEqual_ObjectObject_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_EqualEqual_ObjectObject_ReturnValue_18) == 0x000842, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_EqualEqual_ObjectObject_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_EqualEqual_ObjectObject_ReturnValue_19) == 0x000843, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_EqualEqual_ObjectObject_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_EqualEqual_ObjectObject_ReturnValue_20) == 0x000844, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_EqualEqual_ObjectObject_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_BooleanOR_ReturnValue_11) == 0x000845, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_BooleanOR_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_EqualEqual_ObjectObject_ReturnValue_21) == 0x000846, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_EqualEqual_ObjectObject_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_BooleanOR_ReturnValue_12) == 0x000847, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_BooleanOR_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, K2Node_Select_Default_7) == 0x000848, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_BooleanOR_ReturnValue_13) == 0x000849, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_BooleanOR_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_BooleanOR_ReturnValue_14) == 0x00084A, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_BooleanOR_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_EqualEqual_ObjectObject_ReturnValue_22) == 0x00084B, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_EqualEqual_ObjectObject_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_BooleanOR_ReturnValue_15) == 0x00084C, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_BooleanOR_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_Not_PreBool_ReturnValue_1) == 0x00084D, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_BooleanOR_ReturnValue_16) == 0x00084E, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_BooleanOR_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, K2Node_Select_Default_8) == 0x00084F, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_BooleanOR_ReturnValue_17) == 0x000850, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_BooleanOR_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_BooleanOR_ReturnValue_18) == 0x000851, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_BooleanOR_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_IsValid_ReturnValue_2) == 0x000852, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_BooleanOR_ReturnValue_19) == 0x000853, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_BooleanOR_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_BooleanOR_ReturnValue_20) == 0x000854, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_BooleanOR_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_GetCount_Count) == 0x000858, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_GetCount_Count' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_Not_PreBool_ReturnValue_2) == 0x00085C, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_Greater_IntInt_ReturnValue) == 0x00085D, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, K2Node_Select_Default_9) == 0x00085E, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_BooleanOR_ReturnValue_21) == 0x00085F, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_BooleanOR_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, K2Node_Select_Default_10) == 0x000860, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_BooleanOR_ReturnValue_22) == 0x000861, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_BooleanOR_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_BooleanAND_ReturnValue_4) == 0x000862, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_BooleanAND_ReturnValue_5) == 0x000863, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_BooleanAND_ReturnValue_6) == 0x000864, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, K2Node_Select_Default_11) == 0x000865, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_BooleanAND_ReturnValue_7) == 0x000866, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_GetPlayerController_ReturnValue_3) == 0x000868, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_GetPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, K2Node_Select_Default_12) == 0x000870, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::K2Node_Select_Default_12' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_GetHUD_ReturnValue_3) == 0x000878, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_GetHUD_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, K2Node_DynamicCast_AsBPI_Game_HUD_3) == 0x000880, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::K2Node_DynamicCast_AsBPI_Game_HUD_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, K2Node_DynamicCast_bSuccess_7) == 0x000890, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_GetItemInfoWidget_Widget_3) == 0x000898, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_GetItemInfoWidget_Widget_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_GetItemInfo_ItemInfo_3) == 0x0008A0, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_GetItemInfo_ItemInfo_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, CallFunc_GetItemInfo_TriggerUserWidget_3) == 0x000AC0, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::CallFunc_GetItemInfo_TriggerUserWidget_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, K2Node_DynamicCast_AsJSI_Slot_2) == 0x000AC8, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::K2Node_DynamicCast_AsJSI_Slot_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, K2Node_DynamicCast_bSuccess_8) == 0x000AD0, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Shop_Item_Hovered_Checking, K2Node_Select_Default_13) == 0x000AD8, "Member 'MPInGameInventory_C_Shop_Item_Hovered_Checking::K2Node_Select_Default_13' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.ShopBind
// 0x0100 (0x0100 - 0x0000)
struct MPInGameInventory_C_ShopBind final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UShopContainerWidget_C*                 K2Node_DynamicCast_AsShop_Container_Widget;        // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x2];                                       // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_1;                           // 0x0088(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00AC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x00BC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x00D0(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x00D8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x00EC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_ShopBind) == 0x000008, "Wrong alignment on MPInGameInventory_C_ShopBind");
static_assert(sizeof(MPInGameInventory_C_ShopBind) == 0x000100, "Wrong size on MPInGameInventory_C_ShopBind");
static_assert(offsetof(MPInGameInventory_C_ShopBind, Temp_byte_Variable) == 0x000000, "Member 'MPInGameInventory_C_ShopBind::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ShopBind, Temp_bool_Variable) == 0x000001, "Member 'MPInGameInventory_C_ShopBind::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ShopBind, Temp_text_Variable) == 0x000008, "Member 'MPInGameInventory_C_ShopBind::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ShopBind, Temp_text_Variable_1) == 0x000020, "Member 'MPInGameInventory_C_ShopBind::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ShopBind, Temp_bool_Variable_1) == 0x000038, "Member 'MPInGameInventory_C_ShopBind::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ShopBind, Temp_byte_Variable_1) == 0x000039, "Member 'MPInGameInventory_C_ShopBind::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ShopBind, Temp_byte_Variable_2) == 0x00003A, "Member 'MPInGameInventory_C_ShopBind::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ShopBind, Temp_bool_True_if_break_was_hit_Variable) == 0x00003B, "Member 'MPInGameInventory_C_ShopBind::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ShopBind, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'MPInGameInventory_C_ShopBind::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ShopBind, CallFunc_Not_PreBool_ReturnValue) == 0x000040, "Member 'MPInGameInventory_C_ShopBind::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ShopBind, Temp_byte_Variable_3) == 0x000041, "Member 'MPInGameInventory_C_ShopBind::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ShopBind, CallFunc_Not_PreBool_ReturnValue_1) == 0x000042, "Member 'MPInGameInventory_C_ShopBind::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ShopBind, Temp_bool_Variable_2) == 0x000043, "Member 'MPInGameInventory_C_ShopBind::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ShopBind, CallFunc_GetAllChildren_ReturnValue) == 0x000048, "Member 'MPInGameInventory_C_ShopBind::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ShopBind, CallFunc_Array_Get_Item) == 0x000058, "Member 'MPInGameInventory_C_ShopBind::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ShopBind, K2Node_Select_Default) == 0x000060, "Member 'MPInGameInventory_C_ShopBind::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ShopBind, K2Node_DynamicCast_AsShop_Container_Widget) == 0x000068, "Member 'MPInGameInventory_C_ShopBind::K2Node_DynamicCast_AsShop_Container_Widget' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ShopBind, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'MPInGameInventory_C_ShopBind::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ShopBind, CallFunc_Array_Length_ReturnValue) == 0x000074, "Member 'MPInGameInventory_C_ShopBind::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ShopBind, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'MPInGameInventory_C_ShopBind::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ShopBind, CallFunc_Array_Length_ReturnValue_1) == 0x00007C, "Member 'MPInGameInventory_C_ShopBind::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ShopBind, CallFunc_Greater_IntInt_ReturnValue) == 0x000080, "Member 'MPInGameInventory_C_ShopBind::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ShopBind, CallFunc_BooleanAND_ReturnValue) == 0x000081, "Member 'MPInGameInventory_C_ShopBind::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ShopBind, Temp_int_Loop_Counter_Variable) == 0x000084, "Member 'MPInGameInventory_C_ShopBind::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ShopBind, K2Node_Select_Default_1) == 0x000088, "Member 'MPInGameInventory_C_ShopBind::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ShopBind, CallFunc_Less_IntInt_ReturnValue) == 0x0000A0, "Member 'MPInGameInventory_C_ShopBind::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ShopBind, CallFunc_Add_IntInt_ReturnValue) == 0x0000A4, "Member 'MPInGameInventory_C_ShopBind::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ShopBind, CallFunc_BooleanAND_ReturnValue_1) == 0x0000A8, "Member 'MPInGameInventory_C_ShopBind::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ShopBind, K2Node_CreateDelegate_OutputDelegate) == 0x0000AC, "Member 'MPInGameInventory_C_ShopBind::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ShopBind, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000BC, "Member 'MPInGameInventory_C_ShopBind::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ShopBind, CallFunc_K2_SetTimer_ReturnValue) == 0x0000D0, "Member 'MPInGameInventory_C_ShopBind::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ShopBind, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000D8, "Member 'MPInGameInventory_C_ShopBind::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ShopBind, K2Node_Select_Default_2) == 0x0000E8, "Member 'MPInGameInventory_C_ShopBind::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ShopBind, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000EC, "Member 'MPInGameInventory_C_ShopBind::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.ShowInventory
// 0x0008 (0x0008 - 0x0000)
struct MPInGameInventory_C_ShowInventory final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_ShowInventory) == 0x000008, "Wrong alignment on MPInGameInventory_C_ShowInventory");
static_assert(sizeof(MPInGameInventory_C_ShowInventory) == 0x000008, "Wrong size on MPInGameInventory_C_ShowInventory");
static_assert(offsetof(MPInGameInventory_C_ShowInventory, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'MPInGameInventory_C_ShowInventory::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.ShowInventoryAnimations
// 0x0008 (0x0008 - 0x0000)
struct MPInGameInventory_C_ShowInventoryAnimations final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_ShowInventoryAnimations) == 0x000008, "Wrong alignment on MPInGameInventory_C_ShowInventoryAnimations");
static_assert(sizeof(MPInGameInventory_C_ShowInventoryAnimations) == 0x000008, "Wrong size on MPInGameInventory_C_ShowInventoryAnimations");
static_assert(offsetof(MPInGameInventory_C_ShowInventoryAnimations, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'MPInGameInventory_C_ShowInventoryAnimations::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.ShowUseButton
// 0x0018 (0x0018 - 0x0000)
struct MPInGameInventory_C_ShowUseButton final
{
public:
	class FText                                   ButtonText;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(MPInGameInventory_C_ShowUseButton) == 0x000008, "Wrong alignment on MPInGameInventory_C_ShowUseButton");
static_assert(sizeof(MPInGameInventory_C_ShowUseButton) == 0x000018, "Wrong size on MPInGameInventory_C_ShowUseButton");
static_assert(offsetof(MPInGameInventory_C_ShowUseButton, ButtonText) == 0x000000, "Member 'MPInGameInventory_C_ShowUseButton::ButtonText' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.ShowWarningMessage_NotEnoughSpace
// 0x0038 (0x0038 - 0x0000)
struct MPInGameInventory_C_ShowWarningMessage_NotEnoughSpace final
{
public:
	class FText                                   MessageText;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_ShowWarningMessage_NotEnoughSpace) == 0x000008, "Wrong alignment on MPInGameInventory_C_ShowWarningMessage_NotEnoughSpace");
static_assert(sizeof(MPInGameInventory_C_ShowWarningMessage_NotEnoughSpace) == 0x000038, "Wrong size on MPInGameInventory_C_ShowWarningMessage_NotEnoughSpace");
static_assert(offsetof(MPInGameInventory_C_ShowWarningMessage_NotEnoughSpace, MessageText) == 0x000000, "Member 'MPInGameInventory_C_ShowWarningMessage_NotEnoughSpace::MessageText' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ShowWarningMessage_NotEnoughSpace, CallFunc_PlayEvent2D_ReturnValue) == 0x000018, "Member 'MPInGameInventory_C_ShowWarningMessage_NotEnoughSpace::CallFunc_PlayEvent2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ShowWarningMessage_NotEnoughSpace, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'MPInGameInventory_C_ShowWarningMessage_NotEnoughSpace::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ShowWarningMessage_NotEnoughSpace, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000030, "Member 'MPInGameInventory_C_ShowWarningMessage_NotEnoughSpace::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.Split Item
// 0x02B8 (0x02B8 - 0x0000)
struct MPInGameInventory_C_Split_Item final
{
public:
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue;                  // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJigSplitWidget_C*                      CallFunc_Create_ReturnValue;                       // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_ItemInfo_C*                          CallFunc_GetItemInfoWidget_Widget;                 // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_1;                     // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD_1;               // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_ItemInfo_C*                          CallFunc_GetItemInfoWidget_Widget_1;               // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_GetItemInfo_ItemInfo;                     // 0x0078(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetItemInfo_TriggerUserWidget;            // 0x0298(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_DynamicCast_AsJSI_Slot;                     // 0x02A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Can_Add_or_Equip_Item_Return;             // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AA[0x2];                                      // 0x02AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCount_Count;                           // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x02B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x02B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_Split_Item) == 0x000008, "Wrong alignment on MPInGameInventory_C_Split_Item");
static_assert(sizeof(MPInGameInventory_C_Split_Item) == 0x0002B8, "Wrong size on MPInGameInventory_C_Split_Item");
static_assert(offsetof(MPInGameInventory_C_Split_Item, CallFunc_PlayEvent2D_ReturnValue) == 0x000000, "Member 'MPInGameInventory_C_Split_Item::CallFunc_PlayEvent2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Split_Item, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'MPInGameInventory_C_Split_Item::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Split_Item, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'MPInGameInventory_C_Split_Item::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Split_Item, CallFunc_GetHUD_ReturnValue) == 0x000018, "Member 'MPInGameInventory_C_Split_Item::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Split_Item, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x000020, "Member 'MPInGameInventory_C_Split_Item::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Split_Item, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'MPInGameInventory_C_Split_Item::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Split_Item, CallFunc_Create_ReturnValue) == 0x000038, "Member 'MPInGameInventory_C_Split_Item::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Split_Item, CallFunc_GetItemInfoWidget_Widget) == 0x000040, "Member 'MPInGameInventory_C_Split_Item::CallFunc_GetItemInfoWidget_Widget' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Split_Item, CallFunc_GetPlayerController_ReturnValue_1) == 0x000048, "Member 'MPInGameInventory_C_Split_Item::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Split_Item, CallFunc_GetHUD_ReturnValue_1) == 0x000050, "Member 'MPInGameInventory_C_Split_Item::CallFunc_GetHUD_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Split_Item, K2Node_DynamicCast_AsBPI_Game_HUD_1) == 0x000058, "Member 'MPInGameInventory_C_Split_Item::K2Node_DynamicCast_AsBPI_Game_HUD_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Split_Item, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'MPInGameInventory_C_Split_Item::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Split_Item, CallFunc_GetItemInfoWidget_Widget_1) == 0x000070, "Member 'MPInGameInventory_C_Split_Item::CallFunc_GetItemInfoWidget_Widget_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Split_Item, CallFunc_GetItemInfo_ItemInfo) == 0x000078, "Member 'MPInGameInventory_C_Split_Item::CallFunc_GetItemInfo_ItemInfo' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Split_Item, CallFunc_GetItemInfo_TriggerUserWidget) == 0x000298, "Member 'MPInGameInventory_C_Split_Item::CallFunc_GetItemInfo_TriggerUserWidget' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Split_Item, K2Node_DynamicCast_AsJSI_Slot) == 0x0002A0, "Member 'MPInGameInventory_C_Split_Item::K2Node_DynamicCast_AsJSI_Slot' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Split_Item, K2Node_DynamicCast_bSuccess_2) == 0x0002A8, "Member 'MPInGameInventory_C_Split_Item::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Split_Item, CallFunc_Can_Add_or_Equip_Item_Return) == 0x0002A9, "Member 'MPInGameInventory_C_Split_Item::CallFunc_Can_Add_or_Equip_Item_Return' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Split_Item, CallFunc_GetCount_Count) == 0x0002AC, "Member 'MPInGameInventory_C_Split_Item::CallFunc_GetCount_Count' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Split_Item, CallFunc_Greater_IntInt_ReturnValue) == 0x0002B0, "Member 'MPInGameInventory_C_Split_Item::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Split_Item, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0002B1, "Member 'MPInGameInventory_C_Split_Item::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Split_Item, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0002B2, "Member 'MPInGameInventory_C_Split_Item::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Split_Item, CallFunc_BooleanAND_ReturnValue) == 0x0002B3, "Member 'MPInGameInventory_C_Split_Item::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Split_Item, CallFunc_BooleanAND_ReturnValue_1) == 0x0002B4, "Member 'MPInGameInventory_C_Split_Item::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Split_Item, CallFunc_BooleanAND_ReturnValue_2) == 0x0002B5, "Member 'MPInGameInventory_C_Split_Item::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.StartAnimStatusActive
// 0x0020 (0x0020 - 0x0000)
struct MPInGameInventory_C_StartAnimStatusActive final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Status_C*                            CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_StartAnimStatusActive) == 0x000008, "Wrong alignment on MPInGameInventory_C_StartAnimStatusActive");
static_assert(sizeof(MPInGameInventory_C_StartAnimStatusActive) == 0x000020, "Wrong size on MPInGameInventory_C_StartAnimStatusActive");
static_assert(offsetof(MPInGameInventory_C_StartAnimStatusActive, Temp_int_Array_Index_Variable) == 0x000000, "Member 'MPInGameInventory_C_StartAnimStatusActive::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_StartAnimStatusActive, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'MPInGameInventory_C_StartAnimStatusActive::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_StartAnimStatusActive, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'MPInGameInventory_C_StartAnimStatusActive::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_StartAnimStatusActive, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'MPInGameInventory_C_StartAnimStatusActive::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_StartAnimStatusActive, CallFunc_Array_Get_Item) == 0x000010, "Member 'MPInGameInventory_C_StartAnimStatusActive::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_StartAnimStatusActive, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'MPInGameInventory_C_StartAnimStatusActive::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.StashContainers
// 0x0018 (0x0018 - 0x0000)
struct MPInGameInventory_C_StashContainers final
{
public:
	class UJSIContainer_C*                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_StashContainers) == 0x000008, "Wrong alignment on MPInGameInventory_C_StashContainers");
static_assert(sizeof(MPInGameInventory_C_StashContainers) == 0x000018, "Wrong size on MPInGameInventory_C_StashContainers");
static_assert(offsetof(MPInGameInventory_C_StashContainers, ReturnValue) == 0x000000, "Member 'MPInGameInventory_C_StashContainers::ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_StashContainers, Temp_bool_Variable) == 0x000008, "Member 'MPInGameInventory_C_StashContainers::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_StashContainers, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'MPInGameInventory_C_StashContainers::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_StashContainers, K2Node_Select_Default) == 0x000010, "Member 'MPInGameInventory_C_StashContainers::K2Node_Select_Default' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.SwitchCategory
// 0x002C (0x002C - 0x0000)
struct MPInGameInventory_C_SwitchCategory final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SeparatorColor_Unactive;                           // 0x0004(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SeparatorColor_Active;                             // 0x0014(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_1;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_2;                 // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_3;                 // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_SwitchCategory) == 0x000004, "Wrong alignment on MPInGameInventory_C_SwitchCategory");
static_assert(sizeof(MPInGameInventory_C_SwitchCategory) == 0x00002C, "Wrong size on MPInGameInventory_C_SwitchCategory");
static_assert(offsetof(MPInGameInventory_C_SwitchCategory, Param_Index) == 0x000000, "Member 'MPInGameInventory_C_SwitchCategory::Param_Index' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SwitchCategory, SeparatorColor_Unactive) == 0x000004, "Member 'MPInGameInventory_C_SwitchCategory::SeparatorColor_Unactive' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SwitchCategory, SeparatorColor_Active) == 0x000014, "Member 'MPInGameInventory_C_SwitchCategory::SeparatorColor_Active' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SwitchCategory, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x000024, "Member 'MPInGameInventory_C_SwitchCategory::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SwitchCategory, K2Node_SwitchInteger_CmpSuccess) == 0x000028, "Member 'MPInGameInventory_C_SwitchCategory::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SwitchCategory, K2Node_SwitchInteger_CmpSuccess_1) == 0x000029, "Member 'MPInGameInventory_C_SwitchCategory::K2Node_SwitchInteger_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SwitchCategory, K2Node_SwitchInteger_CmpSuccess_2) == 0x00002A, "Member 'MPInGameInventory_C_SwitchCategory::K2Node_SwitchInteger_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_SwitchCategory, K2Node_SwitchInteger_CmpSuccess_3) == 0x00002B, "Member 'MPInGameInventory_C_SwitchCategory::K2Node_SwitchInteger_CmpSuccess_3' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.Take Item
// 0x0290 (0x0290 - 0x0000)
struct MPInGameInventory_C_Take_Item final
{
public:
	class UJSI_Slot_C*                            Slot_Ref__local_;                                  // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJSItemType                                   CallFunc_GetType_Type;                             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPocketContainer_Result;                // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_GetPocketContainer_Container;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckTutorial_Locked;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckTutorial_IsCase;                     // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_ItemInfo_C*                          CallFunc_GetItemInfoWidget_Widget;                 // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_GetItemInfo_ItemInfo;                     // 0x0058(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetItemInfo_TriggerUserWidget;            // 0x0278(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_DynamicCast_AsJSI_Slot;                     // 0x0280(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_Take_Item) == 0x000008, "Wrong alignment on MPInGameInventory_C_Take_Item");
static_assert(sizeof(MPInGameInventory_C_Take_Item) == 0x000290, "Wrong size on MPInGameInventory_C_Take_Item");
static_assert(offsetof(MPInGameInventory_C_Take_Item, Slot_Ref__local_) == 0x000000, "Member 'MPInGameInventory_C_Take_Item::Slot_Ref__local_' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Take_Item, Temp_bool_Variable) == 0x000008, "Member 'MPInGameInventory_C_Take_Item::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Take_Item, CallFunc_GetType_Type) == 0x000009, "Member 'MPInGameInventory_C_Take_Item::CallFunc_GetType_Type' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Take_Item, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000A, "Member 'MPInGameInventory_C_Take_Item::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Take_Item, CallFunc_GetPocketContainer_Result) == 0x00000B, "Member 'MPInGameInventory_C_Take_Item::CallFunc_GetPocketContainer_Result' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Take_Item, CallFunc_GetPocketContainer_Container) == 0x000010, "Member 'MPInGameInventory_C_Take_Item::CallFunc_GetPocketContainer_Container' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Take_Item, K2Node_Select_Default) == 0x000018, "Member 'MPInGameInventory_C_Take_Item::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Take_Item, CallFunc_GetPlayerController_ReturnValue) == 0x000020, "Member 'MPInGameInventory_C_Take_Item::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Take_Item, CallFunc_CheckTutorial_Locked) == 0x000028, "Member 'MPInGameInventory_C_Take_Item::CallFunc_CheckTutorial_Locked' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Take_Item, CallFunc_CheckTutorial_IsCase) == 0x000029, "Member 'MPInGameInventory_C_Take_Item::CallFunc_CheckTutorial_IsCase' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Take_Item, CallFunc_GetHUD_ReturnValue) == 0x000030, "Member 'MPInGameInventory_C_Take_Item::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Take_Item, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x000038, "Member 'MPInGameInventory_C_Take_Item::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Take_Item, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'MPInGameInventory_C_Take_Item::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Take_Item, CallFunc_GetItemInfoWidget_Widget) == 0x000050, "Member 'MPInGameInventory_C_Take_Item::CallFunc_GetItemInfoWidget_Widget' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Take_Item, CallFunc_GetItemInfo_ItemInfo) == 0x000058, "Member 'MPInGameInventory_C_Take_Item::CallFunc_GetItemInfo_ItemInfo' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Take_Item, CallFunc_GetItemInfo_TriggerUserWidget) == 0x000278, "Member 'MPInGameInventory_C_Take_Item::CallFunc_GetItemInfo_TriggerUserWidget' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Take_Item, K2Node_DynamicCast_AsJSI_Slot) == 0x000280, "Member 'MPInGameInventory_C_Take_Item::K2Node_DynamicCast_AsJSI_Slot' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Take_Item, K2Node_DynamicCast_bSuccess_1) == 0x000288, "Member 'MPInGameInventory_C_Take_Item::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.Take or Equip Item From Stash
// 0x02C8 (0x02C8 - 0x0000)
struct MPInGameInventory_C_Take_or_Equip_Item_From_Stash final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_ItemInfo_C*                          CallFunc_GetItemInfoWidget_Widget;                 // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsBeginner_IsBeginner;                 // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_1;                     // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        K2Node_Select_Default;                             // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD_1;               // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_ItemInfo_C*                          CallFunc_GetItemInfoWidget_Widget_1;               // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_GetItemInfo_ItemInfo;                     // 0x0078(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetItemInfo_TriggerUserWidget;            // 0x0298(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_DynamicCast_AsJSI_Slot;                     // 0x02A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanAddItemToInv_result;                   // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AA[0x2];                                      // 0x02AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCount_Count;                           // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EquipItem_Equipped;                       // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_EquipItem_To_Container;                   // 0x02B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CountOut_OutInt;                          // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_UpdateCount_Count;                        // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_Take_or_Equip_Item_From_Stash) == 0x000008, "Wrong alignment on MPInGameInventory_C_Take_or_Equip_Item_From_Stash");
static_assert(sizeof(MPInGameInventory_C_Take_or_Equip_Item_From_Stash) == 0x0002C8, "Wrong size on MPInGameInventory_C_Take_or_Equip_Item_From_Stash");
static_assert(offsetof(MPInGameInventory_C_Take_or_Equip_Item_From_Stash, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'MPInGameInventory_C_Take_or_Equip_Item_From_Stash::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Take_or_Equip_Item_From_Stash, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'MPInGameInventory_C_Take_or_Equip_Item_From_Stash::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Take_or_Equip_Item_From_Stash, CallFunc_GetHUD_ReturnValue) == 0x000010, "Member 'MPInGameInventory_C_Take_or_Equip_Item_From_Stash::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Take_or_Equip_Item_From_Stash, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x000018, "Member 'MPInGameInventory_C_Take_or_Equip_Item_From_Stash::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Take_or_Equip_Item_From_Stash, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'MPInGameInventory_C_Take_or_Equip_Item_From_Stash::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Take_or_Equip_Item_From_Stash, CallFunc_GetItemInfoWidget_Widget) == 0x000030, "Member 'MPInGameInventory_C_Take_or_Equip_Item_From_Stash::CallFunc_GetItemInfoWidget_Widget' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Take_or_Equip_Item_From_Stash, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'MPInGameInventory_C_Take_or_Equip_Item_From_Stash::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Take_or_Equip_Item_From_Stash, CallFunc_GetIsBeginner_IsBeginner) == 0x000039, "Member 'MPInGameInventory_C_Take_or_Equip_Item_From_Stash::CallFunc_GetIsBeginner_IsBeginner' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Take_or_Equip_Item_From_Stash, Temp_bool_Variable) == 0x00003A, "Member 'MPInGameInventory_C_Take_or_Equip_Item_From_Stash::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Take_or_Equip_Item_From_Stash, CallFunc_GetPlayerController_ReturnValue_1) == 0x000040, "Member 'MPInGameInventory_C_Take_or_Equip_Item_From_Stash::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Take_or_Equip_Item_From_Stash, CallFunc_GetHUD_ReturnValue_1) == 0x000048, "Member 'MPInGameInventory_C_Take_or_Equip_Item_From_Stash::CallFunc_GetHUD_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Take_or_Equip_Item_From_Stash, K2Node_Select_Default) == 0x000050, "Member 'MPInGameInventory_C_Take_or_Equip_Item_From_Stash::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Take_or_Equip_Item_From_Stash, K2Node_DynamicCast_AsBPI_Game_HUD_1) == 0x000058, "Member 'MPInGameInventory_C_Take_or_Equip_Item_From_Stash::K2Node_DynamicCast_AsBPI_Game_HUD_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Take_or_Equip_Item_From_Stash, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'MPInGameInventory_C_Take_or_Equip_Item_From_Stash::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Take_or_Equip_Item_From_Stash, CallFunc_GetItemInfoWidget_Widget_1) == 0x000070, "Member 'MPInGameInventory_C_Take_or_Equip_Item_From_Stash::CallFunc_GetItemInfoWidget_Widget_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Take_or_Equip_Item_From_Stash, CallFunc_GetItemInfo_ItemInfo) == 0x000078, "Member 'MPInGameInventory_C_Take_or_Equip_Item_From_Stash::CallFunc_GetItemInfo_ItemInfo' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Take_or_Equip_Item_From_Stash, CallFunc_GetItemInfo_TriggerUserWidget) == 0x000298, "Member 'MPInGameInventory_C_Take_or_Equip_Item_From_Stash::CallFunc_GetItemInfo_TriggerUserWidget' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Take_or_Equip_Item_From_Stash, K2Node_DynamicCast_AsJSI_Slot) == 0x0002A0, "Member 'MPInGameInventory_C_Take_or_Equip_Item_From_Stash::K2Node_DynamicCast_AsJSI_Slot' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Take_or_Equip_Item_From_Stash, K2Node_DynamicCast_bSuccess_2) == 0x0002A8, "Member 'MPInGameInventory_C_Take_or_Equip_Item_From_Stash::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Take_or_Equip_Item_From_Stash, CallFunc_CanAddItemToInv_result) == 0x0002A9, "Member 'MPInGameInventory_C_Take_or_Equip_Item_From_Stash::CallFunc_CanAddItemToInv_result' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Take_or_Equip_Item_From_Stash, CallFunc_GetCount_Count) == 0x0002AC, "Member 'MPInGameInventory_C_Take_or_Equip_Item_From_Stash::CallFunc_GetCount_Count' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Take_or_Equip_Item_From_Stash, CallFunc_EquipItem_Equipped) == 0x0002B0, "Member 'MPInGameInventory_C_Take_or_Equip_Item_From_Stash::CallFunc_EquipItem_Equipped' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Take_or_Equip_Item_From_Stash, CallFunc_EquipItem_To_Container) == 0x0002B8, "Member 'MPInGameInventory_C_Take_or_Equip_Item_From_Stash::CallFunc_EquipItem_To_Container' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Take_or_Equip_Item_From_Stash, CallFunc_CountOut_OutInt) == 0x0002C0, "Member 'MPInGameInventory_C_Take_or_Equip_Item_From_Stash::CallFunc_CountOut_OutInt' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Take_or_Equip_Item_From_Stash, CallFunc_UpdateCount_Count) == 0x0002C4, "Member 'MPInGameInventory_C_Take_or_Equip_Item_From_Stash::CallFunc_UpdateCount_Count' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.TakeItemProcess
// 0x0140 (0x0140 - 0x0000)
struct MPInGameInventory_C_TakeItemProcess final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPocketContainer_Result;                // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        CallFunc_GetPocketContainer_Container;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPocketContainer_Result_1;              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_GetPocketContainer_Container_1;           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMPContainerWidget_C*                   CallFunc_GetMainContainer_ContainerWidget;         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMPContainerWidget_C*                   CallFunc_GetMainContainer_ContainerWidget_1;       // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_9;        // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPocketContainer_Result_2;              // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_GetPocketContainer_Container_2;           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPocketContainer_Result_3;              // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B[0x5];                                       // 0x006B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_GetPocketContainer_Container_3;           // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_10;       // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_11;       // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_12;       // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_9;                  // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_4;    // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_5;    // 0x007F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_6;    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_7;    // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_8;    // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_9;    // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_10;   // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_11;   // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_12;   // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_10;                 // 0x0087(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_13;   // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_11;                 // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_12;                 // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_13;                 // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_14;                 // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_13;       // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_15;                 // 0x008F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_14;       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_16;                 // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_17;                 // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_18;                 // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_15;       // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_19;                 // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_16;       // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_20;                 // 0x0097(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_21;                 // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_22;                 // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_2;                           // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_17;       // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_23;                 // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_18;       // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_19;       // 0x009F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_24;                 // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_25;                 // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_14;   // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_3;                           // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_26;                 // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_15;   // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_16;   // 0x00A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_17;   // 0x00A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_18;   // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_19;   // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_20;   // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_21;   // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_22;   // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_23;   // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_24;   // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_27;                 // 0x00AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_25;   // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_28;                 // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_4;                           // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_29;                 // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_30;                 // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_26;   // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_31;                 // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_32;                 // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_33;                 // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_34;                 // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BB[0x1];                                       // 0x00BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCount_Count;                           // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_35;                 // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CountOut_OutInt;                          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_36;                 // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_UpdateCount_Count;                        // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_5;                           // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveInventoryItemByRef_Removed;         // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D3[0x1];                                       // 0x00D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCount_Count_1;                         // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CountOut_OutInt_1;                        // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EquipItem_Equipped;                       // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_EquipItem_To_Container;                   // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_UpdateCount_Count_1;                      // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Can_Add_or_Equip_Item_Return;             // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_ItemInfo_C*                          CallFunc_GetItemInfoWidget_Widget;                 // 0x0120(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FContainerPickupsInfo>          K2Node_MakeArray_Array;                            // 0x0128(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_JSAddItem_Ad;                             // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_TakeItemProcess) == 0x000008, "Wrong alignment on MPInGameInventory_C_TakeItemProcess");
static_assert(sizeof(MPInGameInventory_C_TakeItemProcess) == 0x000140, "Wrong size on MPInGameInventory_C_TakeItemProcess");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, Temp_bool_Variable) == 0x000000, "Member 'MPInGameInventory_C_TakeItemProcess::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, Temp_bool_Variable_1) == 0x000001, "Member 'MPInGameInventory_C_TakeItemProcess::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, Temp_bool_Variable_2) == 0x000002, "Member 'MPInGameInventory_C_TakeItemProcess::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, Temp_bool_Variable_3) == 0x000003, "Member 'MPInGameInventory_C_TakeItemProcess::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, Temp_bool_Variable_4) == 0x000004, "Member 'MPInGameInventory_C_TakeItemProcess::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, Temp_bool_Variable_5) == 0x000005, "Member 'MPInGameInventory_C_TakeItemProcess::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, Temp_bool_Variable_6) == 0x000006, "Member 'MPInGameInventory_C_TakeItemProcess::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_GetPocketContainer_Result) == 0x000007, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_GetPocketContainer_Result' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_GetPocketContainer_Container) == 0x000008, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_GetPocketContainer_Container' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, Temp_bool_Variable_7) == 0x000010, "Member 'MPInGameInventory_C_TakeItemProcess::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_GetPocketContainer_Result_1) == 0x000011, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_GetPocketContainer_Result_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_GetPocketContainer_Container_1) == 0x000018, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_GetPocketContainer_Container_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_GetMainContainer_ContainerWidget) == 0x000020, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_GetMainContainer_ContainerWidget' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000028, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000029, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_Not_PreBool_ReturnValue) == 0x00002A, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_GetMainContainer_ContainerWidget_1) == 0x000030, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_GetMainContainer_ContainerWidget_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000038, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_Not_PreBool_ReturnValue_1) == 0x000039, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_PlayEvent2D_ReturnValue) == 0x000040, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_PlayEvent2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000048, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000049, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00004A, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00004B, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x00004C, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x00004D, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x00004E, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x00004F, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x000050, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_BooleanOR_ReturnValue) == 0x000051, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ByteByte_ReturnValue_9) == 0x000052, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ByteByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_BooleanOR_ReturnValue_1) == 0x000053, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_BooleanOR_ReturnValue_2) == 0x000054, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_BooleanOR_ReturnValue_3) == 0x000055, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_BooleanOR_ReturnValue_4) == 0x000056, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_BooleanOR_ReturnValue_5) == 0x000057, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_BooleanOR_ReturnValue_6) == 0x000058, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_BooleanOR_ReturnValue_7) == 0x000059, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x00005A, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, K2Node_Select_Default) == 0x00005B, "Member 'MPInGameInventory_C_TakeItemProcess::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_GetPocketContainer_Result_2) == 0x00005C, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_GetPocketContainer_Result_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_GetPocketContainer_Container_2) == 0x000060, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_GetPocketContainer_Container_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_BooleanAND_ReturnValue) == 0x000068, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_IsValid_ReturnValue) == 0x000069, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_GetPocketContainer_Result_3) == 0x00006A, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_GetPocketContainer_Result_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_GetPocketContainer_Container_3) == 0x000070, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_GetPocketContainer_Container_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x000078, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ByteByte_ReturnValue_10) == 0x000079, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ByteByte_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ByteByte_ReturnValue_11) == 0x00007A, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ByteByte_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ByteByte_ReturnValue_12) == 0x00007B, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ByteByte_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_BooleanOR_ReturnValue_8) == 0x00007C, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_BooleanOR_ReturnValue_9) == 0x00007D, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_BooleanOR_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ObjectObject_ReturnValue_4) == 0x00007E, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ObjectObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ObjectObject_ReturnValue_5) == 0x00007F, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ObjectObject_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ObjectObject_ReturnValue_6) == 0x000080, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ObjectObject_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ObjectObject_ReturnValue_7) == 0x000081, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ObjectObject_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ObjectObject_ReturnValue_8) == 0x000082, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ObjectObject_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ObjectObject_ReturnValue_9) == 0x000083, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ObjectObject_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ObjectObject_ReturnValue_10) == 0x000084, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ObjectObject_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ObjectObject_ReturnValue_11) == 0x000085, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ObjectObject_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ObjectObject_ReturnValue_12) == 0x000086, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ObjectObject_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_BooleanOR_ReturnValue_10) == 0x000087, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_BooleanOR_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ObjectObject_ReturnValue_13) == 0x000088, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ObjectObject_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_BooleanOR_ReturnValue_11) == 0x000089, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_BooleanOR_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, K2Node_Select_Default_1) == 0x00008A, "Member 'MPInGameInventory_C_TakeItemProcess::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_BooleanOR_ReturnValue_12) == 0x00008B, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_BooleanOR_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_BooleanOR_ReturnValue_13) == 0x00008C, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_BooleanOR_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_BooleanOR_ReturnValue_14) == 0x00008D, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_BooleanOR_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ByteByte_ReturnValue_13) == 0x00008E, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ByteByte_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_BooleanOR_ReturnValue_15) == 0x00008F, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_BooleanOR_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ByteByte_ReturnValue_14) == 0x000090, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ByteByte_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_BooleanOR_ReturnValue_16) == 0x000091, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_BooleanOR_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_BooleanOR_ReturnValue_17) == 0x000092, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_BooleanOR_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_BooleanOR_ReturnValue_18) == 0x000093, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_BooleanOR_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ByteByte_ReturnValue_15) == 0x000094, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ByteByte_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_BooleanOR_ReturnValue_19) == 0x000095, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_BooleanOR_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ByteByte_ReturnValue_16) == 0x000096, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ByteByte_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_BooleanOR_ReturnValue_20) == 0x000097, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_BooleanOR_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_BooleanOR_ReturnValue_21) == 0x000098, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_BooleanOR_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_Not_PreBool_ReturnValue_2) == 0x000099, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_BooleanOR_ReturnValue_22) == 0x00009A, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_BooleanOR_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, K2Node_Select_Default_2) == 0x00009B, "Member 'MPInGameInventory_C_TakeItemProcess::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ByteByte_ReturnValue_17) == 0x00009C, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ByteByte_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_BooleanOR_ReturnValue_23) == 0x00009D, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_BooleanOR_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ByteByte_ReturnValue_18) == 0x00009E, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ByteByte_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ByteByte_ReturnValue_19) == 0x00009F, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ByteByte_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_BooleanOR_ReturnValue_24) == 0x0000A0, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_BooleanOR_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_BooleanOR_ReturnValue_25) == 0x0000A1, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_BooleanOR_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ObjectObject_ReturnValue_14) == 0x0000A2, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ObjectObject_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, K2Node_Select_Default_3) == 0x0000A3, "Member 'MPInGameInventory_C_TakeItemProcess::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_BooleanOR_ReturnValue_26) == 0x0000A4, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_BooleanOR_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ObjectObject_ReturnValue_15) == 0x0000A5, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ObjectObject_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ObjectObject_ReturnValue_16) == 0x0000A6, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ObjectObject_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ObjectObject_ReturnValue_17) == 0x0000A7, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ObjectObject_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ObjectObject_ReturnValue_18) == 0x0000A8, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ObjectObject_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ObjectObject_ReturnValue_19) == 0x0000A9, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ObjectObject_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ObjectObject_ReturnValue_20) == 0x0000AA, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ObjectObject_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ObjectObject_ReturnValue_21) == 0x0000AB, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ObjectObject_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ObjectObject_ReturnValue_22) == 0x0000AC, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ObjectObject_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ObjectObject_ReturnValue_23) == 0x0000AD, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ObjectObject_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ObjectObject_ReturnValue_24) == 0x0000AE, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ObjectObject_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_BooleanOR_ReturnValue_27) == 0x0000AF, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_BooleanOR_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ObjectObject_ReturnValue_25) == 0x0000B0, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ObjectObject_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_BooleanOR_ReturnValue_28) == 0x0000B1, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_BooleanOR_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, K2Node_Select_Default_4) == 0x0000B2, "Member 'MPInGameInventory_C_TakeItemProcess::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_BooleanOR_ReturnValue_29) == 0x0000B3, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_BooleanOR_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_BooleanOR_ReturnValue_30) == 0x0000B4, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_BooleanOR_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EqualEqual_ObjectObject_ReturnValue_26) == 0x0000B5, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EqualEqual_ObjectObject_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_BooleanOR_ReturnValue_31) == 0x0000B6, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_BooleanOR_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_BooleanAND_ReturnValue_1) == 0x0000B7, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_BooleanOR_ReturnValue_32) == 0x0000B8, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_BooleanOR_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_BooleanOR_ReturnValue_33) == 0x0000B9, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_BooleanOR_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_BooleanOR_ReturnValue_34) == 0x0000BA, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_BooleanOR_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_GetCount_Count) == 0x0000BC, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_GetCount_Count' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_BooleanOR_ReturnValue_35) == 0x0000C0, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_BooleanOR_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_CountOut_OutInt) == 0x0000C4, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_CountOut_OutInt' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_BooleanOR_ReturnValue_36) == 0x0000C8, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_BooleanOR_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_UpdateCount_Count) == 0x0000CC, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_UpdateCount_Count' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_Not_PreBool_ReturnValue_3) == 0x0000D0, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, K2Node_Select_Default_5) == 0x0000D1, "Member 'MPInGameInventory_C_TakeItemProcess::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_RemoveInventoryItemByRef_Removed) == 0x0000D2, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_RemoveInventoryItemByRef_Removed' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_GetCount_Count_1) == 0x0000D4, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_GetCount_Count_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_CountOut_OutInt_1) == 0x0000D8, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_CountOut_OutInt_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EquipItem_Equipped) == 0x0000DC, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EquipItem_Equipped' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_EquipItem_To_Container) == 0x0000E0, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_EquipItem_To_Container' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_UpdateCount_Count_1) == 0x0000E8, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_UpdateCount_Count_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_GetPlayerController_ReturnValue) == 0x0000F0, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_Can_Add_or_Equip_Item_Return) == 0x0000F8, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_Can_Add_or_Equip_Item_Return' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_GetHUD_ReturnValue) == 0x000100, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x000108, "Member 'MPInGameInventory_C_TakeItemProcess::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, K2Node_DynamicCast_bSuccess) == 0x000118, "Member 'MPInGameInventory_C_TakeItemProcess::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_GetItemInfoWidget_Widget) == 0x000120, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_GetItemInfoWidget_Widget' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, K2Node_MakeArray_Array) == 0x000128, "Member 'MPInGameInventory_C_TakeItemProcess::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TakeItemProcess, CallFunc_JSAddItem_Ad) == 0x000138, "Member 'MPInGameInventory_C_TakeItemProcess::CallFunc_JSAddItem_Ad' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.Tick
// 0x003C (0x003C - 0x0000)
struct MPInGameInventory_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_Tick) == 0x000004, "Wrong alignment on MPInGameInventory_C_Tick");
static_assert(sizeof(MPInGameInventory_C_Tick) == 0x00003C, "Wrong size on MPInGameInventory_C_Tick");
static_assert(offsetof(MPInGameInventory_C_Tick, MyGeometry) == 0x000000, "Member 'MPInGameInventory_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_Tick, InDeltaTime) == 0x000038, "Member 'MPInGameInventory_C_Tick::InDeltaTime' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.TryToAddItemToStash
// 0x0040 (0x0040 - 0x0000)
struct MPInGameInventory_C_TryToAddItemToStash final
{
public:
	class UJSIContainer_C*                        EquippedContainerRef;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            EquippedSlotRef;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Button;                                            // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryToAddItemToStashContainer_Locaked;     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_TryToAddItemToStash) == 0x000008, "Wrong alignment on MPInGameInventory_C_TryToAddItemToStash");
static_assert(sizeof(MPInGameInventory_C_TryToAddItemToStash) == 0x000040, "Wrong size on MPInGameInventory_C_TryToAddItemToStash");
static_assert(offsetof(MPInGameInventory_C_TryToAddItemToStash, EquippedContainerRef) == 0x000000, "Member 'MPInGameInventory_C_TryToAddItemToStash::EquippedContainerRef' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TryToAddItemToStash, EquippedSlotRef) == 0x000008, "Member 'MPInGameInventory_C_TryToAddItemToStash::EquippedSlotRef' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TryToAddItemToStash, Button) == 0x000010, "Member 'MPInGameInventory_C_TryToAddItemToStash::Button' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TryToAddItemToStash, Result) == 0x000028, "Member 'MPInGameInventory_C_TryToAddItemToStash::Result' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TryToAddItemToStash, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000029, "Member 'MPInGameInventory_C_TryToAddItemToStash::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TryToAddItemToStash, Temp_bool_Variable) == 0x00002A, "Member 'MPInGameInventory_C_TryToAddItemToStash::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TryToAddItemToStash, CallFunc_IsValid_ReturnValue) == 0x00002B, "Member 'MPInGameInventory_C_TryToAddItemToStash::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TryToAddItemToStash, CallFunc_BooleanAND_ReturnValue) == 0x00002C, "Member 'MPInGameInventory_C_TryToAddItemToStash::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TryToAddItemToStash, K2Node_Select_Default) == 0x000030, "Member 'MPInGameInventory_C_TryToAddItemToStash::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TryToAddItemToStash, CallFunc_TryToAddItemToStashContainer_Locaked) == 0x000038, "Member 'MPInGameInventory_C_TryToAddItemToStash::CallFunc_TryToAddItemToStashContainer_Locaked' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.TurnOnLight_OverallCategory
// 0x0010 (0x0010 - 0x0000)
struct MPInGameInventory_C_TurnOnLight_OverallCategory final
{
public:
	class USizeBox*                               GivenSizebox;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          TurnOn_;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_TurnOnLight_OverallCategory) == 0x000008, "Wrong alignment on MPInGameInventory_C_TurnOnLight_OverallCategory");
static_assert(sizeof(MPInGameInventory_C_TurnOnLight_OverallCategory) == 0x000010, "Wrong size on MPInGameInventory_C_TurnOnLight_OverallCategory");
static_assert(offsetof(MPInGameInventory_C_TurnOnLight_OverallCategory, GivenSizebox) == 0x000000, "Member 'MPInGameInventory_C_TurnOnLight_OverallCategory::GivenSizebox' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_TurnOnLight_OverallCategory, TurnOn_) == 0x000008, "Member 'MPInGameInventory_C_TurnOnLight_OverallCategory::TurnOn_' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.UnbindLootPoint
// 0x0050 (0x0050 - 0x0000)
struct MPInGameInventory_C_UnbindLootPoint final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UJSI_Slot_C* Item, class UJSIContainer_C* Container)> K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMPContainerWidget_C*                   K2Node_DynamicCast_AsMPContainer_Widget;           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_UnbindLootPoint) == 0x000008, "Wrong alignment on MPInGameInventory_C_UnbindLootPoint");
static_assert(sizeof(MPInGameInventory_C_UnbindLootPoint) == 0x000050, "Wrong size on MPInGameInventory_C_UnbindLootPoint");
static_assert(offsetof(MPInGameInventory_C_UnbindLootPoint, Temp_int_Array_Index_Variable) == 0x000000, "Member 'MPInGameInventory_C_UnbindLootPoint::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UnbindLootPoint, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'MPInGameInventory_C_UnbindLootPoint::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UnbindLootPoint, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'MPInGameInventory_C_UnbindLootPoint::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UnbindLootPoint, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'MPInGameInventory_C_UnbindLootPoint::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UnbindLootPoint, CallFunc_GetAllChildren_ReturnValue) == 0x000020, "Member 'MPInGameInventory_C_UnbindLootPoint::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UnbindLootPoint, CallFunc_Array_Get_Item) == 0x000030, "Member 'MPInGameInventory_C_UnbindLootPoint::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UnbindLootPoint, K2Node_DynamicCast_AsMPContainer_Widget) == 0x000038, "Member 'MPInGameInventory_C_UnbindLootPoint::K2Node_DynamicCast_AsMPContainer_Widget' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UnbindLootPoint, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'MPInGameInventory_C_UnbindLootPoint::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UnbindLootPoint, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'MPInGameInventory_C_UnbindLootPoint::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UnbindLootPoint, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'MPInGameInventory_C_UnbindLootPoint::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.UnbindMainContainer
// 0x0058 (0x0058 - 0x0000)
struct MPInGameInventory_C_UnbindMainContainer final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UJSI_Slot_C* Item, class UJSIContainer_C* Container)> K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        K2Node_DynamicCast_AsJSIContainer;                 // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_UnbindMainContainer) == 0x000008, "Wrong alignment on MPInGameInventory_C_UnbindMainContainer");
static_assert(sizeof(MPInGameInventory_C_UnbindMainContainer) == 0x000058, "Wrong size on MPInGameInventory_C_UnbindMainContainer");
static_assert(offsetof(MPInGameInventory_C_UnbindMainContainer, Temp_int_Array_Index_Variable) == 0x000000, "Member 'MPInGameInventory_C_UnbindMainContainer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UnbindMainContainer, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'MPInGameInventory_C_UnbindMainContainer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UnbindMainContainer, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'MPInGameInventory_C_UnbindMainContainer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UnbindMainContainer, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'MPInGameInventory_C_UnbindMainContainer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UnbindMainContainer, CallFunc_GetAllChildren_ReturnValue) == 0x000020, "Member 'MPInGameInventory_C_UnbindMainContainer::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UnbindMainContainer, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'MPInGameInventory_C_UnbindMainContainer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UnbindMainContainer, CallFunc_Array_Get_Item) == 0x000038, "Member 'MPInGameInventory_C_UnbindMainContainer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UnbindMainContainer, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'MPInGameInventory_C_UnbindMainContainer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UnbindMainContainer, K2Node_DynamicCast_AsJSIContainer) == 0x000048, "Member 'MPInGameInventory_C_UnbindMainContainer::K2Node_DynamicCast_AsJSIContainer' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UnbindMainContainer, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'MPInGameInventory_C_UnbindMainContainer::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.UnhandleAllEvents
// 0x0008 (0x0008 - 0x0000)
struct MPInGameInventory_C_UnhandleAllEvents final
{
public:
	class UJSIContainer_C*                        Container;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_UnhandleAllEvents) == 0x000008, "Wrong alignment on MPInGameInventory_C_UnhandleAllEvents");
static_assert(sizeof(MPInGameInventory_C_UnhandleAllEvents) == 0x000008, "Wrong size on MPInGameInventory_C_UnhandleAllEvents");
static_assert(offsetof(MPInGameInventory_C_UnhandleAllEvents, Container) == 0x000000, "Member 'MPInGameInventory_C_UnhandleAllEvents::Container' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.UpdateContainer
// 0x0028 (0x0028 - 0x0000)
struct MPInGameInventory_C_UpdateContainer final
{
public:
	class UJSIContainer_C*                        Container;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_UpdateContainer) == 0x000008, "Wrong alignment on MPInGameInventory_C_UpdateContainer");
static_assert(sizeof(MPInGameInventory_C_UpdateContainer) == 0x000028, "Wrong size on MPInGameInventory_C_UpdateContainer");
static_assert(offsetof(MPInGameInventory_C_UpdateContainer, Container) == 0x000000, "Member 'MPInGameInventory_C_UpdateContainer::Container' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateContainer, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'MPInGameInventory_C_UpdateContainer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateContainer, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'MPInGameInventory_C_UpdateContainer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateContainer, Temp_int_Array_Index_Variable) == 0x000010, "Member 'MPInGameInventory_C_UpdateContainer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateContainer, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'MPInGameInventory_C_UpdateContainer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateContainer, CallFunc_Array_Get_Item) == 0x000018, "Member 'MPInGameInventory_C_UpdateContainer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateContainer, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'MPInGameInventory_C_UpdateContainer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateContainer, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'MPInGameInventory_C_UpdateContainer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.UpdateGrenadeCount
// 0x0020 (0x0020 - 0x0000)
struct MPInGameInventory_C_UpdateGrenadeCount final
{
public:
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0000(0x0018)()
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetItemCountByName_ReturnedCount;         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_UpdateGrenadeCount) == 0x000008, "Wrong alignment on MPInGameInventory_C_UpdateGrenadeCount");
static_assert(sizeof(MPInGameInventory_C_UpdateGrenadeCount) == 0x000020, "Wrong size on MPInGameInventory_C_UpdateGrenadeCount");
static_assert(offsetof(MPInGameInventory_C_UpdateGrenadeCount, CallFunc_Conv_IntToText_ReturnValue) == 0x000000, "Member 'MPInGameInventory_C_UpdateGrenadeCount::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateGrenadeCount, CallFunc_IsVisible_ReturnValue) == 0x000018, "Member 'MPInGameInventory_C_UpdateGrenadeCount::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateGrenadeCount, CallFunc_GetItemCountByName_ReturnedCount) == 0x00001C, "Member 'MPInGameInventory_C_UpdateGrenadeCount::CallFunc_GetItemCountByName_ReturnedCount' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.UpdateLootInventory
// 0x0018 (0x0018 - 0x0000)
struct MPInGameInventory_C_UpdateLootInventory final
{
public:
	bool                                          Once;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Reset;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_TimerExistsHandle_ReturnValue;         // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_TimerExistsHandle_ReturnValue_1;       // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_UpdateLootInventory) == 0x000008, "Wrong alignment on MPInGameInventory_C_UpdateLootInventory");
static_assert(sizeof(MPInGameInventory_C_UpdateLootInventory) == 0x000018, "Wrong size on MPInGameInventory_C_UpdateLootInventory");
static_assert(offsetof(MPInGameInventory_C_UpdateLootInventory, Once) == 0x000000, "Member 'MPInGameInventory_C_UpdateLootInventory::Once' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateLootInventory, Reset) == 0x000001, "Member 'MPInGameInventory_C_UpdateLootInventory::Reset' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateLootInventory, CallFunc_K2_TimerExistsHandle_ReturnValue) == 0x000002, "Member 'MPInGameInventory_C_UpdateLootInventory::CallFunc_K2_TimerExistsHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateLootInventory, CallFunc_K2_TimerExistsHandle_ReturnValue_1) == 0x000003, "Member 'MPInGameInventory_C_UpdateLootInventory::CallFunc_K2_TimerExistsHandle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateLootInventory, CallFunc_K2_SetTimer_ReturnValue) == 0x000008, "Member 'MPInGameInventory_C_UpdateLootInventory::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateLootInventory, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'MPInGameInventory_C_UpdateLootInventory::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.UpdateLootInventoryTimerHandler
// 0x04C8 (0x04C8 - 0x0000)
struct MPInGameInventory_C_UpdateLootInventoryTimerHandler final
{
public:
	class UJSIContainer_C*                        Container;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UJSI_Slot_C*>                    ContainerSlots;                                    // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class AA_Item_C*>                      FoundItems;                                        // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AA_Item_C*                              CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetInfo_ItemInfo;                         // 0x0058(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_GetEmptySlot_SlotIndex;                   // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEmptySlot_Found_;                      // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27D[0x3];                                      // 0x027D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AA_Item_C*>                      CallFunc_FindItemsOnTheGround_ItemsOnGround;       // 0x0280(0x0010)(ReferenceParm)
	bool                                          CallFunc_AddNewItem_Added;                         // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_291[0x3];                                      // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddNewItem_AddedToSlot;                   // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_AddNewItem_Info;                          // 0x0298(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_AddNewItem_SlotItemRef;                   // 0x04B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x04C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x04C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_UpdateLootInventoryTimerHandler) == 0x000008, "Wrong alignment on MPInGameInventory_C_UpdateLootInventoryTimerHandler");
static_assert(sizeof(MPInGameInventory_C_UpdateLootInventoryTimerHandler) == 0x0004C8, "Wrong size on MPInGameInventory_C_UpdateLootInventoryTimerHandler");
static_assert(offsetof(MPInGameInventory_C_UpdateLootInventoryTimerHandler, Container) == 0x000000, "Member 'MPInGameInventory_C_UpdateLootInventoryTimerHandler::Container' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateLootInventoryTimerHandler, ContainerSlots) == 0x000008, "Member 'MPInGameInventory_C_UpdateLootInventoryTimerHandler::ContainerSlots' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateLootInventoryTimerHandler, FoundItems) == 0x000018, "Member 'MPInGameInventory_C_UpdateLootInventoryTimerHandler::FoundItems' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateLootInventoryTimerHandler, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'MPInGameInventory_C_UpdateLootInventoryTimerHandler::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateLootInventoryTimerHandler, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00002C, "Member 'MPInGameInventory_C_UpdateLootInventoryTimerHandler::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateLootInventoryTimerHandler, CallFunc_Array_Length_ReturnValue_1) == 0x000030, "Member 'MPInGameInventory_C_UpdateLootInventoryTimerHandler::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateLootInventoryTimerHandler, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000034, "Member 'MPInGameInventory_C_UpdateLootInventoryTimerHandler::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateLootInventoryTimerHandler, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'MPInGameInventory_C_UpdateLootInventoryTimerHandler::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateLootInventoryTimerHandler, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'MPInGameInventory_C_UpdateLootInventoryTimerHandler::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateLootInventoryTimerHandler, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'MPInGameInventory_C_UpdateLootInventoryTimerHandler::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateLootInventoryTimerHandler, CallFunc_Array_Get_Item) == 0x000048, "Member 'MPInGameInventory_C_UpdateLootInventoryTimerHandler::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateLootInventoryTimerHandler, CallFunc_Array_Length_ReturnValue_2) == 0x000050, "Member 'MPInGameInventory_C_UpdateLootInventoryTimerHandler::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateLootInventoryTimerHandler, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'MPInGameInventory_C_UpdateLootInventoryTimerHandler::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateLootInventoryTimerHandler, CallFunc_GetInfo_ItemInfo) == 0x000058, "Member 'MPInGameInventory_C_UpdateLootInventoryTimerHandler::CallFunc_GetInfo_ItemInfo' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateLootInventoryTimerHandler, CallFunc_GetEmptySlot_SlotIndex) == 0x000278, "Member 'MPInGameInventory_C_UpdateLootInventoryTimerHandler::CallFunc_GetEmptySlot_SlotIndex' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateLootInventoryTimerHandler, CallFunc_GetEmptySlot_Found_) == 0x00027C, "Member 'MPInGameInventory_C_UpdateLootInventoryTimerHandler::CallFunc_GetEmptySlot_Found_' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateLootInventoryTimerHandler, CallFunc_FindItemsOnTheGround_ItemsOnGround) == 0x000280, "Member 'MPInGameInventory_C_UpdateLootInventoryTimerHandler::CallFunc_FindItemsOnTheGround_ItemsOnGround' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateLootInventoryTimerHandler, CallFunc_AddNewItem_Added) == 0x000290, "Member 'MPInGameInventory_C_UpdateLootInventoryTimerHandler::CallFunc_AddNewItem_Added' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateLootInventoryTimerHandler, CallFunc_AddNewItem_AddedToSlot) == 0x000294, "Member 'MPInGameInventory_C_UpdateLootInventoryTimerHandler::CallFunc_AddNewItem_AddedToSlot' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateLootInventoryTimerHandler, CallFunc_AddNewItem_Info) == 0x000298, "Member 'MPInGameInventory_C_UpdateLootInventoryTimerHandler::CallFunc_AddNewItem_Info' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateLootInventoryTimerHandler, CallFunc_AddNewItem_SlotItemRef) == 0x0004B8, "Member 'MPInGameInventory_C_UpdateLootInventoryTimerHandler::CallFunc_AddNewItem_SlotItemRef' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateLootInventoryTimerHandler, CallFunc_IsValid_ReturnValue) == 0x0004C0, "Member 'MPInGameInventory_C_UpdateLootInventoryTimerHandler::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateLootInventoryTimerHandler, CallFunc_IsValid_ReturnValue_1) == 0x0004C1, "Member 'MPInGameInventory_C_UpdateLootInventoryTimerHandler::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateLootInventoryTimerHandler, CallFunc_BooleanAND_ReturnValue) == 0x0004C2, "Member 'MPInGameInventory_C_UpdateLootInventoryTimerHandler::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.UpdateMoneyValue
// 0x0040 (0x0040 - 0x0000)
struct MPInGameInventory_C_UpdateMoneyValue final
{
public:
	int32                                         MoneyCounter;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_UpdateMoneyValue) == 0x000008, "Wrong alignment on MPInGameInventory_C_UpdateMoneyValue");
static_assert(sizeof(MPInGameInventory_C_UpdateMoneyValue) == 0x000040, "Wrong size on MPInGameInventory_C_UpdateMoneyValue");
static_assert(offsetof(MPInGameInventory_C_UpdateMoneyValue, MoneyCounter) == 0x000000, "Member 'MPInGameInventory_C_UpdateMoneyValue::MoneyCounter' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateMoneyValue, Temp_int_Array_Index_Variable) == 0x000004, "Member 'MPInGameInventory_C_UpdateMoneyValue::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateMoneyValue, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'MPInGameInventory_C_UpdateMoneyValue::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateMoneyValue, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'MPInGameInventory_C_UpdateMoneyValue::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateMoneyValue, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'MPInGameInventory_C_UpdateMoneyValue::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateMoneyValue, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'MPInGameInventory_C_UpdateMoneyValue::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateMoneyValue, CallFunc_Array_Get_Item) == 0x000030, "Member 'MPInGameInventory_C_UpdateMoneyValue::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateMoneyValue, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'MPInGameInventory_C_UpdateMoneyValue::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateMoneyValue, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000039, "Member 'MPInGameInventory_C_UpdateMoneyValue::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateMoneyValue, CallFunc_Add_IntInt_ReturnValue_1) == 0x00003C, "Member 'MPInGameInventory_C_UpdateMoneyValue::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.UpdatePerksInfo
// 0x00C0 (0x00C0 - 0x0000)
struct MPInGameInventory_C_UpdatePerksInfo final
{
public:
	struct FWS_CharaterPerks                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0000(0x00B8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_UpdatePerksInfo) == 0x000008, "Wrong alignment on MPInGameInventory_C_UpdatePerksInfo");
static_assert(sizeof(MPInGameInventory_C_UpdatePerksInfo) == 0x0000C0, "Wrong size on MPInGameInventory_C_UpdatePerksInfo");
static_assert(offsetof(MPInGameInventory_C_UpdatePerksInfo, CallFunc_GetDataTableRowFromName_OutRow) == 0x000000, "Member 'MPInGameInventory_C_UpdatePerksInfo::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdatePerksInfo, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000B8, "Member 'MPInGameInventory_C_UpdatePerksInfo::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.UpdateStatProgress
// 0x0028 (0x0028 - 0x0000)
struct MPInGameInventory_C_UpdateStatProgress final
{
public:
	E_TrainStatType                               InputPin;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_CharStatProgress_C*                CallFunc_Map_Find_Value;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value_1;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value_2;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_UpdateStatProgress) == 0x000008, "Wrong alignment on MPInGameInventory_C_UpdateStatProgress");
static_assert(sizeof(MPInGameInventory_C_UpdateStatProgress) == 0x000028, "Wrong size on MPInGameInventory_C_UpdateStatProgress");
static_assert(offsetof(MPInGameInventory_C_UpdateStatProgress, InputPin) == 0x000000, "Member 'MPInGameInventory_C_UpdateStatProgress::InputPin' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStatProgress, CallFunc_Map_Find_Value) == 0x000008, "Member 'MPInGameInventory_C_UpdateStatProgress::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStatProgress, CallFunc_Map_Find_ReturnValue) == 0x000010, "Member 'MPInGameInventory_C_UpdateStatProgress::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStatProgress, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'MPInGameInventory_C_UpdateStatProgress::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStatProgress, CallFunc_IsValid_ReturnValue_1) == 0x000012, "Member 'MPInGameInventory_C_UpdateStatProgress::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStatProgress, CallFunc_Map_Find_Value_1) == 0x000014, "Member 'MPInGameInventory_C_UpdateStatProgress::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStatProgress, CallFunc_Map_Find_ReturnValue_1) == 0x000018, "Member 'MPInGameInventory_C_UpdateStatProgress::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStatProgress, CallFunc_Map_Find_Value_2) == 0x00001C, "Member 'MPInGameInventory_C_UpdateStatProgress::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStatProgress, CallFunc_Map_Find_ReturnValue_2) == 0x000020, "Member 'MPInGameInventory_C_UpdateStatProgress::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStatProgress, CallFunc_BooleanAND_ReturnValue) == 0x000021, "Member 'MPInGameInventory_C_UpdateStatProgress::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.UpdateStorageTutorialPointer
// 0x01C0 (0x01C0 - 0x0000)
struct MPInGameInventory_C_UpdateStorageTutorialPointer final
{
public:
	bool                                          ItemsFound;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         StorageItemCount;                                  // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, int32>                      ItemsToStore;                                      // 0x0008(0x0050)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_PointerHintInfo                     K2Node_MakeStruct_S_PointerHintInfo;               // 0x0070(0x0028)(HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, int32>                      K2Node_MakeVariable_MakeVariableOutput;            // 0x00A0(0x0050)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F3[0x5];                                       // 0x00F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_PointerHintInfo                     K2Node_MakeStruct_S_PointerHintInfo_1;             // 0x00F8(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_GameHUD_C*                          K2Node_DynamicCast_AsBP_Game_HUD;                  // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_142[0x6];                                      // 0x0142(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetPointedWidget_PointedWidget;           // 0x0148(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0150(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0164(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetInventoryItemsByName_Found_;           // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16E[0x2];                                      // 0x016E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSI_Slot_C*>                    CallFunc_GetInventoryItemsByName_ItemsFound;       // 0x0170(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item_1;                         // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCount_Count;                           // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetInventoryItemsByName_Found__1;         // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_192[0x6];                                      // 0x0192(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSI_Slot_C*>                    CallFunc_GetInventoryItemsByName_ItemsFound_1;     // 0x0198(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Map_Find_Value;                           // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AD[0x3];                                      // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item_2;                         // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x01BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_UpdateStorageTutorialPointer) == 0x000008, "Wrong alignment on MPInGameInventory_C_UpdateStorageTutorialPointer");
static_assert(sizeof(MPInGameInventory_C_UpdateStorageTutorialPointer) == 0x0001C0, "Wrong size on MPInGameInventory_C_UpdateStorageTutorialPointer");
static_assert(offsetof(MPInGameInventory_C_UpdateStorageTutorialPointer, ItemsFound) == 0x000000, "Member 'MPInGameInventory_C_UpdateStorageTutorialPointer::ItemsFound' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStorageTutorialPointer, StorageItemCount) == 0x000004, "Member 'MPInGameInventory_C_UpdateStorageTutorialPointer::StorageItemCount' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStorageTutorialPointer, ItemsToStore) == 0x000008, "Member 'MPInGameInventory_C_UpdateStorageTutorialPointer::ItemsToStore' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStorageTutorialPointer, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'MPInGameInventory_C_UpdateStorageTutorialPointer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStorageTutorialPointer, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'MPInGameInventory_C_UpdateStorageTutorialPointer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStorageTutorialPointer, Temp_int_Array_Index_Variable) == 0x000060, "Member 'MPInGameInventory_C_UpdateStorageTutorialPointer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStorageTutorialPointer, Temp_int_Loop_Counter_Variable_1) == 0x000064, "Member 'MPInGameInventory_C_UpdateStorageTutorialPointer::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStorageTutorialPointer, CallFunc_Add_IntInt_ReturnValue_1) == 0x000068, "Member 'MPInGameInventory_C_UpdateStorageTutorialPointer::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStorageTutorialPointer, K2Node_MakeStruct_S_PointerHintInfo) == 0x000070, "Member 'MPInGameInventory_C_UpdateStorageTutorialPointer::K2Node_MakeStruct_S_PointerHintInfo' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStorageTutorialPointer, Temp_int_Array_Index_Variable_1) == 0x000098, "Member 'MPInGameInventory_C_UpdateStorageTutorialPointer::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStorageTutorialPointer, K2Node_MakeVariable_MakeVariableOutput) == 0x0000A0, "Member 'MPInGameInventory_C_UpdateStorageTutorialPointer::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStorageTutorialPointer, CallFunc_IsValid_ReturnValue) == 0x0000F0, "Member 'MPInGameInventory_C_UpdateStorageTutorialPointer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStorageTutorialPointer, CallFunc_IsValid_ReturnValue_1) == 0x0000F1, "Member 'MPInGameInventory_C_UpdateStorageTutorialPointer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStorageTutorialPointer, CallFunc_IsValid_ReturnValue_2) == 0x0000F2, "Member 'MPInGameInventory_C_UpdateStorageTutorialPointer::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStorageTutorialPointer, K2Node_MakeStruct_S_PointerHintInfo_1) == 0x0000F8, "Member 'MPInGameInventory_C_UpdateStorageTutorialPointer::K2Node_MakeStruct_S_PointerHintInfo_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStorageTutorialPointer, CallFunc_IsValid_ReturnValue_3) == 0x000120, "Member 'MPInGameInventory_C_UpdateStorageTutorialPointer::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStorageTutorialPointer, CallFunc_GetPlayerController_ReturnValue) == 0x000128, "Member 'MPInGameInventory_C_UpdateStorageTutorialPointer::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStorageTutorialPointer, CallFunc_GetHUD_ReturnValue) == 0x000130, "Member 'MPInGameInventory_C_UpdateStorageTutorialPointer::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStorageTutorialPointer, K2Node_DynamicCast_AsBP_Game_HUD) == 0x000138, "Member 'MPInGameInventory_C_UpdateStorageTutorialPointer::K2Node_DynamicCast_AsBP_Game_HUD' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStorageTutorialPointer, K2Node_DynamicCast_bSuccess) == 0x000140, "Member 'MPInGameInventory_C_UpdateStorageTutorialPointer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStorageTutorialPointer, CallFunc_IsValid_ReturnValue_4) == 0x000141, "Member 'MPInGameInventory_C_UpdateStorageTutorialPointer::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStorageTutorialPointer, CallFunc_GetPointedWidget_PointedWidget) == 0x000148, "Member 'MPInGameInventory_C_UpdateStorageTutorialPointer::CallFunc_GetPointedWidget_PointedWidget' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStorageTutorialPointer, CallFunc_Map_Keys_Keys) == 0x000150, "Member 'MPInGameInventory_C_UpdateStorageTutorialPointer::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStorageTutorialPointer, CallFunc_Array_Length_ReturnValue) == 0x000160, "Member 'MPInGameInventory_C_UpdateStorageTutorialPointer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStorageTutorialPointer, CallFunc_Array_Get_Item) == 0x000164, "Member 'MPInGameInventory_C_UpdateStorageTutorialPointer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStorageTutorialPointer, CallFunc_Less_IntInt_ReturnValue) == 0x00016C, "Member 'MPInGameInventory_C_UpdateStorageTutorialPointer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStorageTutorialPointer, CallFunc_GetInventoryItemsByName_Found_) == 0x00016D, "Member 'MPInGameInventory_C_UpdateStorageTutorialPointer::CallFunc_GetInventoryItemsByName_Found_' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStorageTutorialPointer, CallFunc_GetInventoryItemsByName_ItemsFound) == 0x000170, "Member 'MPInGameInventory_C_UpdateStorageTutorialPointer::CallFunc_GetInventoryItemsByName_ItemsFound' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStorageTutorialPointer, CallFunc_Array_Get_Item_1) == 0x000180, "Member 'MPInGameInventory_C_UpdateStorageTutorialPointer::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStorageTutorialPointer, CallFunc_Array_Length_ReturnValue_1) == 0x000188, "Member 'MPInGameInventory_C_UpdateStorageTutorialPointer::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStorageTutorialPointer, CallFunc_GetCount_Count) == 0x00018C, "Member 'MPInGameInventory_C_UpdateStorageTutorialPointer::CallFunc_GetCount_Count' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStorageTutorialPointer, CallFunc_Less_IntInt_ReturnValue_1) == 0x000190, "Member 'MPInGameInventory_C_UpdateStorageTutorialPointer::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStorageTutorialPointer, CallFunc_GetInventoryItemsByName_Found__1) == 0x000191, "Member 'MPInGameInventory_C_UpdateStorageTutorialPointer::CallFunc_GetInventoryItemsByName_Found__1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStorageTutorialPointer, CallFunc_GetInventoryItemsByName_ItemsFound_1) == 0x000198, "Member 'MPInGameInventory_C_UpdateStorageTutorialPointer::CallFunc_GetInventoryItemsByName_ItemsFound_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStorageTutorialPointer, CallFunc_Map_Find_Value) == 0x0001A8, "Member 'MPInGameInventory_C_UpdateStorageTutorialPointer::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStorageTutorialPointer, CallFunc_Map_Find_ReturnValue) == 0x0001AC, "Member 'MPInGameInventory_C_UpdateStorageTutorialPointer::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStorageTutorialPointer, CallFunc_Array_Get_Item_2) == 0x0001B0, "Member 'MPInGameInventory_C_UpdateStorageTutorialPointer::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStorageTutorialPointer, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001B8, "Member 'MPInGameInventory_C_UpdateStorageTutorialPointer::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStorageTutorialPointer, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0001B9, "Member 'MPInGameInventory_C_UpdateStorageTutorialPointer::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStorageTutorialPointer, CallFunc_IsValid_ReturnValue_5) == 0x0001BA, "Member 'MPInGameInventory_C_UpdateStorageTutorialPointer::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_UpdateStorageTutorialPointer, CallFunc_Greater_IntInt_ReturnValue) == 0x0001BB, "Member 'MPInGameInventory_C_UpdateStorageTutorialPointer::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.UpdateWeight
// 0x0008 (0x0008 - 0x0000)
struct MPInGameInventory_C_UpdateWeight final
{
public:
	class UBPC_PlayerStatsComponent_C*            StatsComponent;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_UpdateWeight) == 0x000008, "Wrong alignment on MPInGameInventory_C_UpdateWeight");
static_assert(sizeof(MPInGameInventory_C_UpdateWeight) == 0x000008, "Wrong size on MPInGameInventory_C_UpdateWeight");
static_assert(offsetof(MPInGameInventory_C_UpdateWeight, StatsComponent) == 0x000000, "Member 'MPInGameInventory_C_UpdateWeight::StatsComponent' has a wrong offset!");

// Function MPInGameInventory.MPInGameInventory_C.ValidateLootInventory
// 0x0038 (0x0038 - 0x0000)
struct MPInGameInventory_C_ValidateLootInventory final
{
public:
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       K2Node_DynamicCast_AsVertical_Box_Slot;            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMPContainerWidget_C*                   CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FSlateChildSize                        K2Node_MakeStruct_SlateChildSize;                  // 0x0028(0x0008)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MPInGameInventory_C_ValidateLootInventory) == 0x000008, "Wrong alignment on MPInGameInventory_C_ValidateLootInventory");
static_assert(sizeof(MPInGameInventory_C_ValidateLootInventory) == 0x000038, "Wrong size on MPInGameInventory_C_ValidateLootInventory");
static_assert(offsetof(MPInGameInventory_C_ValidateLootInventory, CallFunc_AddChild_ReturnValue) == 0x000000, "Member 'MPInGameInventory_C_ValidateLootInventory::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ValidateLootInventory, K2Node_DynamicCast_AsVertical_Box_Slot) == 0x000008, "Member 'MPInGameInventory_C_ValidateLootInventory::K2Node_DynamicCast_AsVertical_Box_Slot' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ValidateLootInventory, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'MPInGameInventory_C_ValidateLootInventory::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ValidateLootInventory, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'MPInGameInventory_C_ValidateLootInventory::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ValidateLootInventory, Temp_int_Variable) == 0x000014, "Member 'MPInGameInventory_C_ValidateLootInventory::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ValidateLootInventory, CallFunc_IsValid_ReturnValue_1) == 0x000018, "Member 'MPInGameInventory_C_ValidateLootInventory::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ValidateLootInventory, CallFunc_Create_ReturnValue) == 0x000020, "Member 'MPInGameInventory_C_ValidateLootInventory::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ValidateLootInventory, K2Node_MakeStruct_SlateChildSize) == 0x000028, "Member 'MPInGameInventory_C_ValidateLootInventory::K2Node_MakeStruct_SlateChildSize' has a wrong offset!");
static_assert(offsetof(MPInGameInventory_C_ValidateLootInventory, CallFunc_IsValid_ReturnValue_2) == 0x000030, "Member 'MPInGameInventory_C_ValidateLootInventory::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

}

