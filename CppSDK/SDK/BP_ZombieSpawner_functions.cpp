#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ZombieSpawner

#include "Basic.hpp"

#include "BP_ZombieSpawner_classes.hpp"
#include "BP_ZombieSpawner_parameters.hpp"


namespace SDK
{

// Function BP_ZombieSpawner.BP_ZombieSpawner_C.AddArea
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAreaPropertiesUpdated           AreaProperties                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void ABP_ZombieSpawner_C::AddArea(struct FAreaPropertiesUpdated& AreaProperties)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieSpawner_C", "AddArea");

	Params::BP_ZombieSpawner_C_AddArea Parms{};

	Parms.AreaProperties = std::move(AreaProperties);

	UObject::ProcessEvent(Func, &Parms);

	AreaProperties = std::move(Parms.AreaProperties);
}


// Function BP_ZombieSpawner.BP_ZombieSpawner_C.AddPlayerCheckArea
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAreaPropertiesUpdated           Area                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// struct FTransform                       ConnectedAreaRelativeTransform                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZombieSpawner_C::AddPlayerCheckArea(struct FAreaPropertiesUpdated& Area, struct FTransform& ConnectedAreaRelativeTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieSpawner_C", "AddPlayerCheckArea");

	Params::BP_ZombieSpawner_C_AddPlayerCheckArea Parms{};

	Parms.Area = std::move(Area);
	Parms.ConnectedAreaRelativeTransform = std::move(ConnectedAreaRelativeTransform);

	UObject::ProcessEvent(Func, &Parms);

	Area = std::move(Parms.Area);
	ConnectedAreaRelativeTransform = std::move(Parms.ConnectedAreaRelativeTransform);
}


// Function BP_ZombieSpawner.BP_ZombieSpawner_C.All Areas Occupied
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_ZombieSpawner_C::All_Areas_Occupied()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieSpawner_C", "All Areas Occupied");

	Params::BP_ZombieSpawner_C_All_Areas_Occupied Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ZombieSpawner.BP_ZombieSpawner_C.AnotherZombieInSpawnPoint
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          SpawnLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_ZombieSpawner_C::AnotherZombieInSpawnPoint(const struct FVector& SpawnLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieSpawner_C", "AnotherZombieInSpawnPoint");

	Params::BP_ZombieSpawner_C_AnotherZombieInSpawnPoint Parms{};

	Parms.SpawnLocation = std::move(SpawnLocation);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ZombieSpawner.BP_ZombieSpawner_C.AreaIsEmptyFromPlayers
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   AreaIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_ZombieSpawner_C::AreaIsEmptyFromPlayers(int32 AreaIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieSpawner_C", "AreaIsEmptyFromPlayers");

	Params::BP_ZombieSpawner_C_AreaIsEmptyFromPlayers Parms{};

	Parms.AreaIndex = AreaIndex;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ZombieSpawner.BP_ZombieSpawner_C.BndEvt__BP_ZombieSpawner_BoxTriggerZone_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZombieSpawner_C::BndEvt__BP_ZombieSpawner_BoxTriggerZone_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieSpawner_C", "BndEvt__BP_ZombieSpawner_BoxTriggerZone_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature");

	Params::BP_ZombieSpawner_C_BndEvt__BP_ZombieSpawner_BoxTriggerZone_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZombieSpawner.BP_ZombieSpawner_C.BndEvt__BP_ZombieSpawner_BoxTriggerZone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_ZombieSpawner_C::BndEvt__BP_ZombieSpawner_BoxTriggerZone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieSpawner_C", "BndEvt__BP_ZombieSpawner_BoxTriggerZone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_ZombieSpawner_C_BndEvt__BP_ZombieSpawner_BoxTriggerZone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZombieSpawner.BP_ZombieSpawner_C.CheckShouldSpawnAntiCamp
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ZombieSpawner_C::CheckShouldSpawnAntiCamp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieSpawner_C", "CheckShouldSpawnAntiCamp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZombieSpawner.BP_ZombieSpawner_C.ConfigureAnimType
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FAreaPropertiesUpdated           Area                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// EZombieAnimType                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

EZombieAnimType ABP_ZombieSpawner_C::ConfigureAnimType(struct FAreaPropertiesUpdated& Area)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieSpawner_C", "ConfigureAnimType");

	Params::BP_ZombieSpawner_C_ConfigureAnimType Parms{};

	Parms.Area = std::move(Area);

	UObject::ProcessEvent(Func, &Parms);

	Area = std::move(Parms.Area);

	return Parms.ReturnValue;
}


// Function BP_ZombieSpawner.BP_ZombieSpawner_C.ConfigureRotation
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FAreaPropertiesUpdated           Area                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

struct FRotator ABP_ZombieSpawner_C::ConfigureRotation(struct FAreaPropertiesUpdated& Area)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieSpawner_C", "ConfigureRotation");

	Params::BP_ZombieSpawner_C_ConfigureRotation Parms{};

	Parms.Area = std::move(Area);

	UObject::ProcessEvent(Func, &Parms);

	Area = std::move(Parms.Area);

	return Parms.ReturnValue;
}


// Function BP_ZombieSpawner.BP_ZombieSpawner_C.ConfigureZombieAndMeshType
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAreaPropertiesUpdated           Area                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// EZombieType                             ZombieType                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MeshType                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZombieSpawner_C::ConfigureZombieAndMeshType(struct FAreaPropertiesUpdated& Area, EZombieType* ZombieType, int32* MeshType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieSpawner_C", "ConfigureZombieAndMeshType");

	Params::BP_ZombieSpawner_C_ConfigureZombieAndMeshType Parms{};

	Parms.Area = std::move(Area);

	UObject::ProcessEvent(Func, &Parms);

	Area = std::move(Parms.Area);

	if (ZombieType != nullptr)
		*ZombieType = Parms.ZombieType;

	if (MeshType != nullptr)
		*MeshType = Parms.MeshType;
}


// Function BP_ZombieSpawner.BP_ZombieSpawner_C.CREATEDELEGATE_PROXYFUNCTION_0
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_ZombieSpawner_C::CREATEDELEGATE_PROXYFUNCTION_0(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieSpawner_C", "CREATEDELEGATE_PROXYFUNCTION_0");

	Params::BP_ZombieSpawner_C_CREATEDELEGATE_PROXYFUNCTION_0 Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZombieSpawner.BP_ZombieSpawner_C.CREATEDELEGATE_PROXYFUNCTION_1
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZombieSpawner_C::CREATEDELEGATE_PROXYFUNCTION_1(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieSpawner_C", "CREATEDELEGATE_PROXYFUNCTION_1");

	Params::BP_ZombieSpawner_C_CREATEDELEGATE_PROXYFUNCTION_1 Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZombieSpawner.BP_ZombieSpawner_C.DecreaseCooldown
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_ZombieSpawner_C::DecreaseCooldown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieSpawner_C", "DecreaseCooldown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZombieSpawner.BP_ZombieSpawner_C.DecreaseGroupCounter
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_ZombieSpawner_C::DecreaseGroupCounter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieSpawner_C", "DecreaseGroupCounter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZombieSpawner.BP_ZombieSpawner_C.DetermineZombieAnimType
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EZombieAnimType                         InputType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EZombieAnimType                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

EZombieAnimType ABP_ZombieSpawner_C::DetermineZombieAnimType(EZombieAnimType InputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieSpawner_C", "DetermineZombieAnimType");

	Params::BP_ZombieSpawner_C_DetermineZombieAnimType Parms{};

	Parms.InputType = InputType;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ZombieSpawner.BP_ZombieSpawner_C.ExecuteUbergraph_BP_ZombieSpawner
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZombieSpawner_C::ExecuteUbergraph_BP_ZombieSpawner(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieSpawner_C", "ExecuteUbergraph_BP_ZombieSpawner");

	Params::BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZombieSpawner.BP_ZombieSpawner_C.GenerateDayMeshType
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   MeshType                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZombieSpawner_C::GenerateDayMeshType(int32* MeshType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieSpawner_C", "GenerateDayMeshType");

	Params::BP_ZombieSpawner_C_GenerateDayMeshType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MeshType != nullptr)
		*MeshType = Parms.MeshType;
}


// Function BP_ZombieSpawner.BP_ZombieSpawner_C.GenerateNightMeshType
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   MeshType                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZombieSpawner_C::GenerateNightMeshType(int32* MeshType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieSpawner_C", "GenerateNightMeshType");

	Params::BP_ZombieSpawner_C_GenerateNightMeshType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MeshType != nullptr)
		*MeshType = Parms.MeshType;
}


// Function BP_ZombieSpawner.BP_ZombieSpawner_C.GenerateSoldierMeshType
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   MeshType                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZombieSpawner_C::GenerateSoldierMeshType(int32* MeshType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieSpawner_C", "GenerateSoldierMeshType");

	Params::BP_ZombieSpawner_C_GenerateSoldierMeshType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MeshType != nullptr)
		*MeshType = Parms.MeshType;
}


// Function BP_ZombieSpawner.BP_ZombieSpawner_C.Get Amount Of Zombies
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   AmountOfZombies                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZombieSpawner_C::Get_Amount_Of_Zombies(int32* AmountOfZombies)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieSpawner_C", "Get Amount Of Zombies");

	Params::BP_ZombieSpawner_C_Get_Amount_Of_Zombies Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AmountOfZombies != nullptr)
		*AmountOfZombies = Parms.AmountOfZombies;
}


// Function BP_ZombieSpawner.BP_ZombieSpawner_C.Get Random Area Index
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 ABP_ZombieSpawner_C::Get_Random_Area_Index()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieSpawner_C", "Get Random Area Index");

	Params::BP_ZombieSpawner_C_Get_Random_Area_Index Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ZombieSpawner.BP_ZombieSpawner_C.GetIsSurvSpawnedFromCar
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Survival                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    IsFromCar                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZombieSpawner_C::GetIsSurvSpawnedFromCar(class AActor* Survival, bool* IsFromCar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieSpawner_C", "GetIsSurvSpawnedFromCar");

	Params::BP_ZombieSpawner_C_GetIsSurvSpawnedFromCar Parms{};

	Parms.Survival = Survival;

	UObject::ProcessEvent(Func, &Parms);

	if (IsFromCar != nullptr)
		*IsFromCar = Parms.IsFromCar;
}


// Function BP_ZombieSpawner.BP_ZombieSpawner_C.GetSpawnLocationInArea
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAreaPropertiesUpdated           SpawnArea                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// struct FVector                          SpawnLocation                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZombieSpawner_C::GetSpawnLocationInArea(struct FAreaPropertiesUpdated& SpawnArea, struct FVector* SpawnLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieSpawner_C", "GetSpawnLocationInArea");

	Params::BP_ZombieSpawner_C_GetSpawnLocationInArea Parms{};

	Parms.SpawnArea = std::move(SpawnArea);

	UObject::ProcessEvent(Func, &Parms);

	SpawnArea = std::move(Parms.SpawnArea);

	if (SpawnLocation != nullptr)
		*SpawnLocation = std::move(Parms.SpawnLocation);
}


// Function BP_ZombieSpawner.BP_ZombieSpawner_C.GetSpawnMultiplier
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double ABP_ZombieSpawner_C::GetSpawnMultiplier()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieSpawner_C", "GetSpawnMultiplier");

	Params::BP_ZombieSpawner_C_GetSpawnMultiplier Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ZombieSpawner.BP_ZombieSpawner_C.GetTraceStartAndEndPoint
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FAreaPropertiesUpdated           SpawnArea                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// struct FVector                          TraceStart                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TraceEnd                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZombieSpawner_C::GetTraceStartAndEndPoint(struct FAreaPropertiesUpdated& SpawnArea, struct FVector* TraceStart, struct FVector* TraceEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieSpawner_C", "GetTraceStartAndEndPoint");

	Params::BP_ZombieSpawner_C_GetTraceStartAndEndPoint Parms{};

	Parms.SpawnArea = std::move(SpawnArea);

	UObject::ProcessEvent(Func, &Parms);

	SpawnArea = std::move(Parms.SpawnArea);

	if (TraceStart != nullptr)
		*TraceStart = std::move(Parms.TraceStart);

	if (TraceEnd != nullptr)
		*TraceEnd = std::move(Parms.TraceEnd);
}


// Function BP_ZombieSpawner.BP_ZombieSpawner_C.Is Night Time
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_ZombieSpawner_C::Is_Night_Time()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieSpawner_C", "Is Night Time");

	Params::BP_ZombieSpawner_C_Is_Night_Time Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ZombieSpawner.BP_ZombieSpawner_C.IsSpawnerReady
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Ready                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZombieSpawner_C::IsSpawnerReady(bool* Ready)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieSpawner_C", "IsSpawnerReady");

	Params::BP_ZombieSpawner_C_IsSpawnerReady Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ready != nullptr)
		*Ready = Parms.Ready;
}


// Function BP_ZombieSpawner.BP_ZombieSpawner_C.OnCheckAreaBeginOverlap
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_ZombieSpawner_C::OnCheckAreaBeginOverlap(class UPrimitiveComponent*& OverlappedComponent, class AActor*& OtherActor, class UPrimitiveComponent*& OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieSpawner_C", "OnCheckAreaBeginOverlap");

	Params::BP_ZombieSpawner_C_OnCheckAreaBeginOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);

	OverlappedComponent = Parms.OverlappedComponent;
	OtherActor = Parms.OtherActor;
	OtherComp = Parms.OtherComp;
}


// Function BP_ZombieSpawner.BP_ZombieSpawner_C.OnCheckAreaEndOverlap
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZombieSpawner_C::OnCheckAreaEndOverlap(class UPrimitiveComponent*& OverlappedComponent, class AActor*& OtherActor, class UPrimitiveComponent*& OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieSpawner_C", "OnCheckAreaEndOverlap");

	Params::BP_ZombieSpawner_C_OnCheckAreaEndOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);

	OverlappedComponent = Parms.OverlappedComponent;
	OtherActor = Parms.OtherActor;
	OtherComp = Parms.OtherComp;
}


// Function BP_ZombieSpawner.BP_ZombieSpawner_C.OnTriggerSpawn
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_AfterAlarm                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZombieSpawner_C::OnTriggerSpawn(class AActor* Actor, bool Param_AfterAlarm)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieSpawner_C", "OnTriggerSpawn");

	Params::BP_ZombieSpawner_C_OnTriggerSpawn Parms{};

	Parms.Actor = Actor;
	Parms.Param_AfterAlarm = Param_AfterAlarm;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZombieSpawner.BP_ZombieSpawner_C.PrintLogs
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_ZombieSpawner_C::PrintLogs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieSpawner_C", "PrintLogs");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZombieSpawner.BP_ZombieSpawner_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_ZombieSpawner_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieSpawner_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZombieSpawner.BP_ZombieSpawner_C.ResetSpawner
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ZombieSpawner_C::ResetSpawner()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieSpawner_C", "ResetSpawner");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZombieSpawner.BP_ZombieSpawner_C.RotateVectorAroundPoint
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          PivotVector                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          VectorToRotate                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          RotatedVector                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZombieSpawner_C::RotateVectorAroundPoint(const struct FVector& PivotVector, const struct FVector& VectorToRotate, const struct FRotator& Rotation, struct FVector* RotatedVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieSpawner_C", "RotateVectorAroundPoint");

	Params::BP_ZombieSpawner_C_RotateVectorAroundPoint Parms{};

	Parms.PivotVector = std::move(PivotVector);
	Parms.VectorToRotate = std::move(VectorToRotate);
	Parms.Rotation = std::move(Rotation);

	UObject::ProcessEvent(Func, &Parms);

	if (RotatedVector != nullptr)
		*RotatedVector = std::move(Parms.RotatedVector);
}


// Function BP_ZombieSpawner.BP_ZombieSpawner_C.SetLinkedQuests
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UQuest*>                   Param_LinkedQuests                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_ZombieSpawner_C::SetLinkedQuests(TArray<class UQuest*>& Param_LinkedQuests)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieSpawner_C", "SetLinkedQuests");

	Params::BP_ZombieSpawner_C_SetLinkedQuests Parms{};

	Parms.Param_LinkedQuests = std::move(Param_LinkedQuests);

	UObject::ProcessEvent(Func, &Parms);

	Param_LinkedQuests = std::move(Parms.Param_LinkedQuests);
}


// Function BP_ZombieSpawner.BP_ZombieSpawner_C.SetSpawnerHandler
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_ZombieSpawnerHandler_C*       InSpawnerHandler                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ZombieSpawner_C::SetSpawnerHandler(class ABP_ZombieSpawnerHandler_C* InSpawnerHandler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieSpawner_C", "SetSpawnerHandler");

	Params::BP_ZombieSpawner_C_SetSpawnerHandler Parms{};

	Parms.InSpawnerHandler = InSpawnerHandler;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZombieSpawner.BP_ZombieSpawner_C.Spawn Zombie
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FAreaPropertiesUpdated           Area                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void ABP_ZombieSpawner_C::Spawn_Zombie(const struct FVector& Location, struct FAreaPropertiesUpdated& Area)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieSpawner_C", "Spawn Zombie");

	Params::BP_ZombieSpawner_C_Spawn_Zombie Parms{};

	Parms.Location = std::move(Location);
	Parms.Area = std::move(Area);

	UObject::ProcessEvent(Func, &Parms);

	Area = std::move(Parms.Area);
}


// Function BP_ZombieSpawner.BP_ZombieSpawner_C.Spawn Zombie in Area
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAreaPropertiesUpdated           Area                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void ABP_ZombieSpawner_C::Spawn_Zombie_in_Area(struct FAreaPropertiesUpdated& Area)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieSpawner_C", "Spawn Zombie in Area");

	Params::BP_ZombieSpawner_C_Spawn_Zombie_in_Area Parms{};

	Parms.Area = std::move(Area);

	UObject::ProcessEvent(Func, &Parms);

	Area = std::move(Parms.Area);
}


// Function BP_ZombieSpawner.BP_ZombieSpawner_C.Spawn Zombies
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_AfterAlarm                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZombieSpawner_C::Spawn_Zombies(class AActor* Actor, bool Param_AfterAlarm)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieSpawner_C", "Spawn Zombies");

	Params::BP_ZombieSpawner_C_Spawn_Zombies Parms{};

	Parms.Actor = Actor;
	Parms.Param_AfterAlarm = Param_AfterAlarm;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZombieSpawner.BP_ZombieSpawner_C.SpawnAntiCampZombies
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ZombieSpawner_C::SpawnAntiCampZombies()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieSpawner_C", "SpawnAntiCampZombies");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZombieSpawner.BP_ZombieSpawner_C.SpawnNightZombie
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    InDarkRoomArea                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EZombieType                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

EZombieType ABP_ZombieSpawner_C::SpawnNightZombie(bool InDarkRoomArea)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieSpawner_C", "SpawnNightZombie");

	Params::BP_ZombieSpawner_C_SpawnNightZombie Parms{};

	Parms.InDarkRoomArea = InDarkRoomArea;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ZombieSpawner.BP_ZombieSpawner_C.StartCooldown
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ZombieSpawner_C::StartCooldown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieSpawner_C", "StartCooldown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZombieSpawner.BP_ZombieSpawner_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ZombieSpawner_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieSpawner_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZombieSpawner.BP_ZombieSpawner_C.ValidateSpawnResult
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_ZombieSpawner_C::ValidateSpawnResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieSpawner_C", "ValidateSpawnResult");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZombieSpawner.BP_ZombieSpawner_C.ValidNightConditions
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    InDarkRoom                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_ZombieSpawner_C::ValidNightConditions(bool InDarkRoom)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieSpawner_C", "ValidNightConditions");

	Params::BP_ZombieSpawner_C_ValidNightConditions Parms{};

	Parms.InDarkRoom = InDarkRoom;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

