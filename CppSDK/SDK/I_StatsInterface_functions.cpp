#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: I_StatsInterface

#include "Basic.hpp"

#include "I_StatsInterface_classes.hpp"
#include "I_StatsInterface_parameters.hpp"


namespace SDK
{

// Function I_StatsInterface.I_StatsInterface_C.BeginOverlap
// (Public, BlueprintCallable, BlueprintEvent)

void II_StatsInterface_C::BeginOverlap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_StatsInterface_C", "BeginOverlap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function I_StatsInterface.I_StatsInterface_C.EndOverlap
// (Public, BlueprintCallable, BlueprintEvent)

void II_StatsInterface_C::EndOverlap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_StatsInterface_C", "EndOverlap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function I_StatsInterface.I_StatsInterface_C.GetStatsComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBPC_PlayerStatsComponent_C*      PlayerStats                                            (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void II_StatsInterface_C::GetStatsComponent(class UBPC_PlayerStatsComponent_C** PlayerStats)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_StatsInterface_C", "GetStatsComponent");

	Params::I_StatsInterface_C_GetStatsComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PlayerStats != nullptr)
		*PlayerStats = Parms.PlayerStats;
}


// Function I_StatsInterface.I_StatsInterface_C.StopEffectByName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FText>                     EffectName                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// E_WeakeningEffect                       WeakeningEffects                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RemoveAll                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void II_StatsInterface_C::StopEffectByName(TArray<class FText>& EffectName, E_WeakeningEffect WeakeningEffects, bool RemoveAll, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_StatsInterface_C", "StopEffectByName");

	Params::I_StatsInterface_C_StopEffectByName Parms{};

	Parms.EffectName = std::move(EffectName);
	Parms.WeakeningEffects = WeakeningEffects;
	Parms.RemoveAll = RemoveAll;

	UObject::ProcessEvent(Func, &Parms);

	EffectName = std::move(Parms.EffectName);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function I_StatsInterface.I_StatsInterface_C.StopEffectByRef
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UEffectMain_C*                    NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void II_StatsInterface_C::StopEffectByRef(class UEffectMain_C* NewParam, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_StatsInterface_C", "StopEffectByRef");

	Params::I_StatsInterface_C_StopEffectByRef Parms{};

	Parms.NewParam = NewParam;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}

}

