#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PickupComponent

#include "Basic.hpp"

#include "PickupComponent_classes.hpp"
#include "PickupComponent_parameters.hpp"


namespace SDK
{

// Function PickupComponent.PickupComponent_C.AddContainer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FContainerPickupsInfo            Container                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
// bool                                    Added                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPickupComponent_C::AddContainer(const struct FContainerPickupsInfo& Container, bool* Added)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PickupComponent_C", "AddContainer");

	Params::PickupComponent_C_AddContainer Parms{};

	Parms.Container = std::move(Container);

	UObject::ProcessEvent(Func, &Parms);

	if (Added != nullptr)
		*Added = Parms.Added;
}


// Function PickupComponent.PickupComponent_C.AddContainerItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FContainerPickupsInfo            ContainerItem                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
// bool                                    Added                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPickupComponent_C::AddContainerItem(const struct FContainerPickupsInfo& ContainerItem, bool* Added)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PickupComponent_C", "AddContainerItem");

	Params::PickupComponent_C_AddContainerItem Parms{};

	Parms.ContainerItem = std::move(ContainerItem);

	UObject::ProcessEvent(Func, &Parms);

	if (Added != nullptr)
		*Added = Parms.Added;
}


// Function PickupComponent.PickupComponent_C.ClearContainerContent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Cleared                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPickupComponent_C::ClearContainerContent(bool* Cleared)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PickupComponent_C", "ClearContainerContent");

	Params::PickupComponent_C_ClearContainerContent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Cleared != nullptr)
		*Cleared = Parms.Cleared;
}


// Function PickupComponent.PickupComponent_C.ExecuteUbergraph_PickupComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPickupComponent_C::ExecuteUbergraph_PickupComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PickupComponent_C", "ExecuteUbergraph_PickupComponent");

	Params::PickupComponent_C_ExecuteUbergraph_PickupComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PickupComponent.PickupComponent_C.GetContainer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UJSIContainer_C*                  Param_ContainerRef                                     (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UPickupComponent_C::GetContainer(class UJSIContainer_C** Param_ContainerRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PickupComponent_C", "GetContainer");

	Params::PickupComponent_C_GetContainer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_ContainerRef != nullptr)
		*Param_ContainerRef = Parms.Param_ContainerRef;
}


// Function PickupComponent.PickupComponent_C.GetCount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Count                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPickupComponent_C::GetCount(int32* Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PickupComponent_C", "GetCount");

	Params::PickupComponent_C_GetCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Count != nullptr)
		*Count = Parms.Count;
}


// Function PickupComponent.PickupComponent_C.GetInfo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FFItemInfo                       ItemInfo                                               (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)

void UPickupComponent_C::GetInfo(struct FFItemInfo* ItemInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PickupComponent_C", "GetInfo");

	Params::PickupComponent_C_GetInfo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ItemInfo != nullptr)
		*ItemInfo = std::move(Parms.ItemInfo);
}


// Function PickupComponent.PickupComponent_C.GetItemNameCount
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             Param_Name                                             (Parm, OutParm)

void UPickupComponent_C::GetItemNameCount(class FText* Param_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PickupComponent_C", "GetItemNameCount");

	Params::PickupComponent_C_GetItemNameCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Name != nullptr)
		*Param_Name = std::move(Parms.Param_Name);
}


// Function PickupComponent.PickupComponent_C.GetSpecialContainer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TSoftClassPtr<class UClass>             SpecialContainerWidget                                 (Parm, OutParm, HasGetValueTypeHash)

void UPickupComponent_C::GetSpecialContainer(TSoftClassPtr<class UClass>* SpecialContainerWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PickupComponent_C", "GetSpecialContainer");

	Params::PickupComponent_C_GetSpecialContainer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SpecialContainerWidget != nullptr)
		*SpecialContainerWidget = Parms.SpecialContainerWidget;
}


// Function PickupComponent.PickupComponent_C.HasUniqueID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Param_HasUniqueID_                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPickupComponent_C::HasUniqueID(bool* Param_HasUniqueID_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PickupComponent_C", "HasUniqueID");

	Params::PickupComponent_C_HasUniqueID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_HasUniqueID_ != nullptr)
		*Param_HasUniqueID_ = Parms.Param_HasUniqueID_;
}


// Function PickupComponent.PickupComponent_C.Init
// (BlueprintCallable, BlueprintEvent)

void UPickupComponent_C::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PickupComponent_C", "Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PickupComponent.PickupComponent_C.JustaDummyFunc
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UPickupComponent_C::JustaDummyFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PickupComponent_C", "JustaDummyFunc");

	Params::PickupComponent_C_JustaDummyFunc Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PickupComponent.PickupComponent_C.OnRep_PickupItemInfo
// (BlueprintCallable, BlueprintEvent)

void UPickupComponent_C::OnRep_PickupItemInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PickupComponent_C", "OnRep_PickupItemInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PickupComponent.PickupComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UPickupComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PickupComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PickupComponent.PickupComponent_C.SetContainer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Param_ContainerRef                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Done                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPickupComponent_C::SetContainer(class UJSIContainer_C* Param_ContainerRef, bool* Done)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PickupComponent_C", "SetContainer");

	Params::PickupComponent_C_SetContainer Parms{};

	Parms.Param_ContainerRef = Param_ContainerRef;

	UObject::ProcessEvent(Func, &Parms);

	if (Done != nullptr)
		*Done = Parms.Done;
}


// Function PickupComponent.PickupComponent_C.SetPickupInfo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFItemInfo                       Param_PickupItemInfo                                   (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// bool                                    Updated                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPickupComponent_C::SetPickupInfo(const struct FFItemInfo& Param_PickupItemInfo, bool* Updated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PickupComponent_C", "SetPickupInfo");

	Params::PickupComponent_C_SetPickupInfo Parms{};

	Parms.Param_PickupItemInfo = std::move(Param_PickupItemInfo);

	UObject::ProcessEvent(Func, &Parms);

	if (Updated != nullptr)
		*Updated = Parms.Updated;
}


// Function PickupComponent.PickupComponent_C.SetUniqueID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPickupComponent_C::SetUniqueID(int32 ID, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PickupComponent_C", "SetUniqueID");

	Params::PickupComponent_C_SetUniqueID Parms{};

	Parms.ID = ID;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function PickupComponent.PickupComponent_C.UpdateCount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Updated                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPickupComponent_C::UpdateCount(int32 Count, bool* Updated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PickupComponent_C", "UpdateCount");

	Params::PickupComponent_C_UpdateCount Parms{};

	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);

	if (Updated != nullptr)
		*Updated = Parms.Updated;
}


// Function PickupComponent.PickupComponent_C.UpdateEquipped
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_Equipped                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsEquipped                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPickupComponent_C::UpdateEquipped(bool Param_Equipped, bool* IsEquipped)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PickupComponent_C", "UpdateEquipped");

	Params::PickupComponent_C_UpdateEquipped Parms{};

	Parms.Param_Equipped = Param_Equipped;

	UObject::ProcessEvent(Func, &Parms);

	if (IsEquipped != nullptr)
		*IsEquipped = Parms.IsEquipped;
}

}

