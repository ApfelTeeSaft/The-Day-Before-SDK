#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_InventoryToItem

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "FItemInfo_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "AttachmentInfo_structs.hpp"
#include "InfoType_structs.hpp"
#include "SlotRarity_structs.hpp"
#include "InputCore_structs.hpp"
#include "E_ShopContainer_structs.hpp"


namespace SDK::Params
{

// Function WBP_InventoryToItem.WBP_InventoryToItem_C.Add Item
// 0x0738 (0x0738 - 0x0000)
struct WBP_InventoryToItem_C_Add_Item final
{
public:
	int32                                         ToSlot;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 Image;                                             // 0x0008(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FVector2D                              SlotVector;                                        // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlotRarity                                   Rarity;                                            // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             ItemInfo;                                          // 0x0050(0x0220)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	struct FFItemInfo                             Info;                                              // 0x0270(0x0220)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	class UJSI_Slot_C*                            SlotItemRef;                                       // 0x0490(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   ReturnValue;                                       // 0x0498(0x0018)(Parm, OutParm, ReturnParm)
	class UJSIContainer_C*                        Container;                                         // 0x04B0(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EInfoType                                     InfoType;                                          // 0x04B8(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B9[0x3];                                      // 0x04B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AddedToSlot;                                       // 0x04BC(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_ShopCategoryContainer_C*             CallFunc_Create_ReturnValue;                       // 0x04C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x04C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x04D8(0x0018)()
	class FText                                   Temp_text_Variable;                                // 0x04F0(0x0018)(ConstParm)
	struct FFItemInfo                             CallFunc_AddItems_Info;                            // 0x0508(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_AddItems_SlotItemRef;                     // 0x0728(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EInfoType                                     CallFunc_AddItems_InfoType;                        // 0x0730(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_731[0x3];                                      // 0x0731(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddItems_AddedToSlot;                     // 0x0734(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryToItem_C_Add_Item) == 0x000008, "Wrong alignment on WBP_InventoryToItem_C_Add_Item");
static_assert(sizeof(WBP_InventoryToItem_C_Add_Item) == 0x000738, "Wrong size on WBP_InventoryToItem_C_Add_Item");
static_assert(offsetof(WBP_InventoryToItem_C_Add_Item, ToSlot) == 0x000000, "Member 'WBP_InventoryToItem_C_Add_Item::ToSlot' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_Add_Item, Image) == 0x000008, "Member 'WBP_InventoryToItem_C_Add_Item::Image' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_Add_Item, SlotVector) == 0x000038, "Member 'WBP_InventoryToItem_C_Add_Item::SlotVector' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_Add_Item, Rarity) == 0x000048, "Member 'WBP_InventoryToItem_C_Add_Item::Rarity' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_Add_Item, ItemInfo) == 0x000050, "Member 'WBP_InventoryToItem_C_Add_Item::ItemInfo' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_Add_Item, Info) == 0x000270, "Member 'WBP_InventoryToItem_C_Add_Item::Info' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_Add_Item, SlotItemRef) == 0x000490, "Member 'WBP_InventoryToItem_C_Add_Item::SlotItemRef' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_Add_Item, ReturnValue) == 0x000498, "Member 'WBP_InventoryToItem_C_Add_Item::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_Add_Item, Container) == 0x0004B0, "Member 'WBP_InventoryToItem_C_Add_Item::Container' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_Add_Item, InfoType) == 0x0004B8, "Member 'WBP_InventoryToItem_C_Add_Item::InfoType' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_Add_Item, AddedToSlot) == 0x0004BC, "Member 'WBP_InventoryToItem_C_Add_Item::AddedToSlot' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_Add_Item, CallFunc_Create_ReturnValue) == 0x0004C0, "Member 'WBP_InventoryToItem_C_Add_Item::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_Add_Item, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0004C8, "Member 'WBP_InventoryToItem_C_Add_Item::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_Add_Item, CallFunc_Conv_StringToText_ReturnValue) == 0x0004D8, "Member 'WBP_InventoryToItem_C_Add_Item::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_Add_Item, Temp_text_Variable) == 0x0004F0, "Member 'WBP_InventoryToItem_C_Add_Item::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_Add_Item, CallFunc_AddItems_Info) == 0x000508, "Member 'WBP_InventoryToItem_C_Add_Item::CallFunc_AddItems_Info' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_Add_Item, CallFunc_AddItems_SlotItemRef) == 0x000728, "Member 'WBP_InventoryToItem_C_Add_Item::CallFunc_AddItems_SlotItemRef' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_Add_Item, CallFunc_AddItems_InfoType) == 0x000730, "Member 'WBP_InventoryToItem_C_Add_Item::CallFunc_AddItems_InfoType' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_Add_Item, CallFunc_AddItems_AddedToSlot) == 0x000734, "Member 'WBP_InventoryToItem_C_Add_Item::CallFunc_AddItems_AddedToSlot' has a wrong offset!");

// Function WBP_InventoryToItem.WBP_InventoryToItem_C.BndEvt__WBP_InventoryToItem_WBP_ShopDialogue_K2Node_ComponentBoundEvent_5_OnPressedAccept__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_InventoryToItem_C_BndEvt__WBP_InventoryToItem_WBP_ShopDialogue_K2Node_ComponentBoundEvent_5_OnPressedAccept__DelegateSignature final
{
public:
	int32                                         Param_Count;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            Ref_slot;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryToItem_C_BndEvt__WBP_InventoryToItem_WBP_ShopDialogue_K2Node_ComponentBoundEvent_5_OnPressedAccept__DelegateSignature) == 0x000008, "Wrong alignment on WBP_InventoryToItem_C_BndEvt__WBP_InventoryToItem_WBP_ShopDialogue_K2Node_ComponentBoundEvent_5_OnPressedAccept__DelegateSignature");
static_assert(sizeof(WBP_InventoryToItem_C_BndEvt__WBP_InventoryToItem_WBP_ShopDialogue_K2Node_ComponentBoundEvent_5_OnPressedAccept__DelegateSignature) == 0x000010, "Wrong size on WBP_InventoryToItem_C_BndEvt__WBP_InventoryToItem_WBP_ShopDialogue_K2Node_ComponentBoundEvent_5_OnPressedAccept__DelegateSignature");
static_assert(offsetof(WBP_InventoryToItem_C_BndEvt__WBP_InventoryToItem_WBP_ShopDialogue_K2Node_ComponentBoundEvent_5_OnPressedAccept__DelegateSignature, Param_Count) == 0x000000, "Member 'WBP_InventoryToItem_C_BndEvt__WBP_InventoryToItem_WBP_ShopDialogue_K2Node_ComponentBoundEvent_5_OnPressedAccept__DelegateSignature::Param_Count' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_BndEvt__WBP_InventoryToItem_WBP_ShopDialogue_K2Node_ComponentBoundEvent_5_OnPressedAccept__DelegateSignature, Ref_slot) == 0x000008, "Member 'WBP_InventoryToItem_C_BndEvt__WBP_InventoryToItem_WBP_ShopDialogue_K2Node_ComponentBoundEvent_5_OnPressedAccept__DelegateSignature::Ref_slot' has a wrong offset!");

// Function WBP_InventoryToItem.WBP_InventoryToItem_C.ButtonSelected
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventoryToItem_C_ButtonSelected final
{
public:
	class UW_ShopCategory_C*                      Param_ShopCategoryRef;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryToItem_C_ButtonSelected) == 0x000008, "Wrong alignment on WBP_InventoryToItem_C_ButtonSelected");
static_assert(sizeof(WBP_InventoryToItem_C_ButtonSelected) == 0x000008, "Wrong size on WBP_InventoryToItem_C_ButtonSelected");
static_assert(offsetof(WBP_InventoryToItem_C_ButtonSelected, Param_ShopCategoryRef) == 0x000000, "Member 'WBP_InventoryToItem_C_ButtonSelected::Param_ShopCategoryRef' has a wrong offset!");

// Function WBP_InventoryToItem.WBP_InventoryToItem_C.BuyRightMouseButtonDown
// 0x0028 (0x0028 - 0x0000)
struct WBP_InventoryToItem_C_BuyRightMouseButtonDown final
{
public:
	class UJSIContainer_C*                        Container;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            SlotRef;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Button;                                            // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryToItem_C_BuyRightMouseButtonDown) == 0x000008, "Wrong alignment on WBP_InventoryToItem_C_BuyRightMouseButtonDown");
static_assert(sizeof(WBP_InventoryToItem_C_BuyRightMouseButtonDown) == 0x000028, "Wrong size on WBP_InventoryToItem_C_BuyRightMouseButtonDown");
static_assert(offsetof(WBP_InventoryToItem_C_BuyRightMouseButtonDown, Container) == 0x000000, "Member 'WBP_InventoryToItem_C_BuyRightMouseButtonDown::Container' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_BuyRightMouseButtonDown, SlotRef) == 0x000008, "Member 'WBP_InventoryToItem_C_BuyRightMouseButtonDown::SlotRef' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_BuyRightMouseButtonDown, Button) == 0x000010, "Member 'WBP_InventoryToItem_C_BuyRightMouseButtonDown::Button' has a wrong offset!");

// Function WBP_InventoryToItem.WBP_InventoryToItem_C.CalculateSellPrice
// 0x0488 (0x0488 - 0x0000)
struct WBP_InventoryToItem_C_CalculateSellPrice final
{
public:
	struct FFItemInfo                             ItemInfo;                                          // 0x0000(0x0220)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Price;                                             // 0x0220(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        SellPrice;                                         // 0x0228(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttachmentInfo                        CallFunc_Array_Get_Item;                           // 0x0234(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow;           // 0x0248(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_469[0x3];                                      // 0x0469(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x046C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_471[0x3];                                      // 0x0471(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0474(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47C[0x4];                                      // 0x047C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryToItem_C_CalculateSellPrice) == 0x000008, "Wrong alignment on WBP_InventoryToItem_C_CalculateSellPrice");
static_assert(sizeof(WBP_InventoryToItem_C_CalculateSellPrice) == 0x000488, "Wrong size on WBP_InventoryToItem_C_CalculateSellPrice");
static_assert(offsetof(WBP_InventoryToItem_C_CalculateSellPrice, ItemInfo) == 0x000000, "Member 'WBP_InventoryToItem_C_CalculateSellPrice::ItemInfo' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_CalculateSellPrice, Price) == 0x000220, "Member 'WBP_InventoryToItem_C_CalculateSellPrice::Price' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_CalculateSellPrice, SellPrice) == 0x000228, "Member 'WBP_InventoryToItem_C_CalculateSellPrice::SellPrice' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_CalculateSellPrice, Temp_int_Array_Index_Variable) == 0x000230, "Member 'WBP_InventoryToItem_C_CalculateSellPrice::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_CalculateSellPrice, CallFunc_Array_Get_Item) == 0x000234, "Member 'WBP_InventoryToItem_C_CalculateSellPrice::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_CalculateSellPrice, CallFunc_Array_Length_ReturnValue) == 0x000244, "Member 'WBP_InventoryToItem_C_CalculateSellPrice::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_CalculateSellPrice, CallFunc_GetDataTableRowFromName_OutRow) == 0x000248, "Member 'WBP_InventoryToItem_C_CalculateSellPrice::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_CalculateSellPrice, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000468, "Member 'WBP_InventoryToItem_C_CalculateSellPrice::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_CalculateSellPrice, Temp_int_Loop_Counter_Variable) == 0x00046C, "Member 'WBP_InventoryToItem_C_CalculateSellPrice::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_CalculateSellPrice, CallFunc_Less_IntInt_ReturnValue) == 0x000470, "Member 'WBP_InventoryToItem_C_CalculateSellPrice::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_CalculateSellPrice, CallFunc_Add_IntInt_ReturnValue) == 0x000474, "Member 'WBP_InventoryToItem_C_CalculateSellPrice::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_CalculateSellPrice, CallFunc_FTrunc_ReturnValue) == 0x000478, "Member 'WBP_InventoryToItem_C_CalculateSellPrice::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_CalculateSellPrice, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000480, "Member 'WBP_InventoryToItem_C_CalculateSellPrice::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function WBP_InventoryToItem.WBP_InventoryToItem_C.ChangeSelectedSlot
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventoryToItem_C_ChangeSelectedSlot final
{
public:
	class UJSI_Slot_C*                            SlotWidgetRef;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryToItem_C_ChangeSelectedSlot) == 0x000008, "Wrong alignment on WBP_InventoryToItem_C_ChangeSelectedSlot");
static_assert(sizeof(WBP_InventoryToItem_C_ChangeSelectedSlot) == 0x000008, "Wrong size on WBP_InventoryToItem_C_ChangeSelectedSlot");
static_assert(offsetof(WBP_InventoryToItem_C_ChangeSelectedSlot, SlotWidgetRef) == 0x000000, "Member 'WBP_InventoryToItem_C_ChangeSelectedSlot::SlotWidgetRef' has a wrong offset!");

// Function WBP_InventoryToItem.WBP_InventoryToItem_C.ChcekFreeSpace
// 0x0018 (0x0018 - 0x0000)
struct WBP_InventoryToItem_C_ChcekFreeSpace final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFItemInfo>                     Items;                                             // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
};
static_assert(alignof(WBP_InventoryToItem_C_ChcekFreeSpace) == 0x000008, "Wrong alignment on WBP_InventoryToItem_C_ChcekFreeSpace");
static_assert(sizeof(WBP_InventoryToItem_C_ChcekFreeSpace) == 0x000018, "Wrong size on WBP_InventoryToItem_C_ChcekFreeSpace");
static_assert(offsetof(WBP_InventoryToItem_C_ChcekFreeSpace, Return) == 0x000000, "Member 'WBP_InventoryToItem_C_ChcekFreeSpace::Return' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ChcekFreeSpace, Items) == 0x000008, "Member 'WBP_InventoryToItem_C_ChcekFreeSpace::Items' has a wrong offset!");

// Function WBP_InventoryToItem.WBP_InventoryToItem_C.Check Free Space to Add Item
// 0x0038 (0x0038 - 0x0000)
struct WBP_InventoryToItem_C_Check_Free_Space_to_Add_Item final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC;                  // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      CallFunc_GetPlayerRef_SurvivalPlayer;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Can_Add_or_Equip_Item_Return;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryToItem_C_Check_Free_Space_to_Add_Item) == 0x000008, "Wrong alignment on WBP_InventoryToItem_C_Check_Free_Space_to_Add_Item");
static_assert(sizeof(WBP_InventoryToItem_C_Check_Free_Space_to_Add_Item) == 0x000038, "Wrong size on WBP_InventoryToItem_C_Check_Free_Space_to_Add_Item");
static_assert(offsetof(WBP_InventoryToItem_C_Check_Free_Space_to_Add_Item, Return) == 0x000000, "Member 'WBP_InventoryToItem_C_Check_Free_Space_to_Add_Item::Return' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_Check_Free_Space_to_Add_Item, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'WBP_InventoryToItem_C_Check_Free_Space_to_Add_Item::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_Check_Free_Space_to_Add_Item, K2Node_DynamicCast_AsBPI_Surv_PC) == 0x000010, "Member 'WBP_InventoryToItem_C_Check_Free_Space_to_Add_Item::K2Node_DynamicCast_AsBPI_Surv_PC' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_Check_Free_Space_to_Add_Item, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_InventoryToItem_C_Check_Free_Space_to_Add_Item::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_Check_Free_Space_to_Add_Item, CallFunc_GetPlayerRef_SurvivalPlayer) == 0x000028, "Member 'WBP_InventoryToItem_C_Check_Free_Space_to_Add_Item::CallFunc_GetPlayerRef_SurvivalPlayer' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_Check_Free_Space_to_Add_Item, CallFunc_Can_Add_or_Equip_Item_Return) == 0x000030, "Member 'WBP_InventoryToItem_C_Check_Free_Space_to_Add_Item::CallFunc_Can_Add_or_Equip_Item_Return' has a wrong offset!");

// Function WBP_InventoryToItem.WBP_InventoryToItem_C.ClearContainer
// 0x0028 (0x0028 - 0x0000)
struct WBP_InventoryToItem_C_ClearContainer final
{
public:
	class UJSIContainer_C*                        Container;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveInventoryItemByRef_Removed;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryToItem_C_ClearContainer) == 0x000008, "Wrong alignment on WBP_InventoryToItem_C_ClearContainer");
static_assert(sizeof(WBP_InventoryToItem_C_ClearContainer) == 0x000028, "Wrong size on WBP_InventoryToItem_C_ClearContainer");
static_assert(offsetof(WBP_InventoryToItem_C_ClearContainer, Container) == 0x000000, "Member 'WBP_InventoryToItem_C_ClearContainer::Container' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ClearContainer, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_InventoryToItem_C_ClearContainer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ClearContainer, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'WBP_InventoryToItem_C_ClearContainer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ClearContainer, CallFunc_Array_Get_Item) == 0x000010, "Member 'WBP_InventoryToItem_C_ClearContainer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ClearContainer, CallFunc_RemoveInventoryItemByRef_Removed) == 0x000018, "Member 'WBP_InventoryToItem_C_ClearContainer::CallFunc_RemoveInventoryItemByRef_Removed' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ClearContainer, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'WBP_InventoryToItem_C_ClearContainer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ClearContainer, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'WBP_InventoryToItem_C_ClearContainer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ClearContainer, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'WBP_InventoryToItem_C_ClearContainer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_InventoryToItem.WBP_InventoryToItem_C.ClearEntryListCategory
// 0x0020 (0x0020 - 0x0000)
struct WBP_InventoryToItem_C_ClearEntryListCategory final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_ShopCategory_C*                      CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryToItem_C_ClearEntryListCategory) == 0x000008, "Wrong alignment on WBP_InventoryToItem_C_ClearEntryListCategory");
static_assert(sizeof(WBP_InventoryToItem_C_ClearEntryListCategory) == 0x000020, "Wrong size on WBP_InventoryToItem_C_ClearEntryListCategory");
static_assert(offsetof(WBP_InventoryToItem_C_ClearEntryListCategory, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_InventoryToItem_C_ClearEntryListCategory::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ClearEntryListCategory, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_InventoryToItem_C_ClearEntryListCategory::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ClearEntryListCategory, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_InventoryToItem_C_ClearEntryListCategory::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ClearEntryListCategory, CallFunc_Array_Get_Item) == 0x000010, "Member 'WBP_InventoryToItem_C_ClearEntryListCategory::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ClearEntryListCategory, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'WBP_InventoryToItem_C_ClearEntryListCategory::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ClearEntryListCategory, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_InventoryToItem_C_ClearEntryListCategory::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_InventoryToItem.WBP_InventoryToItem_C.CreateBuybackContainer
// 0x0080 (0x0080 - 0x0000)
struct WBP_InventoryToItem_C_CreateBuybackContainer final
{
public:
	class UW_ShopCategoryContainer_C*             CallFunc_Create_ReturnValue;                       // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)(ConstParm)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform;                 // 0x0028(0x0038)(NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_InventoryToItem_C_CreateBuybackContainer) == 0x000008, "Wrong alignment on WBP_InventoryToItem_C_CreateBuybackContainer");
static_assert(sizeof(WBP_InventoryToItem_C_CreateBuybackContainer) == 0x000080, "Wrong size on WBP_InventoryToItem_C_CreateBuybackContainer");
static_assert(offsetof(WBP_InventoryToItem_C_CreateBuybackContainer, CallFunc_Create_ReturnValue) == 0x000000, "Member 'WBP_InventoryToItem_C_CreateBuybackContainer::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_CreateBuybackContainer, Temp_text_Variable) == 0x000008, "Member 'WBP_InventoryToItem_C_CreateBuybackContainer::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_CreateBuybackContainer, CallFunc_AddChild_ReturnValue) == 0x000020, "Member 'WBP_InventoryToItem_C_CreateBuybackContainer::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_CreateBuybackContainer, K2Node_MakeStruct_WidgetTransform) == 0x000028, "Member 'WBP_InventoryToItem_C_CreateBuybackContainer::K2Node_MakeStruct_WidgetTransform' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_CreateBuybackContainer, K2Node_MakeStruct_Margin) == 0x000060, "Member 'WBP_InventoryToItem_C_CreateBuybackContainer::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_CreateBuybackContainer, K2Node_MakeStruct_Margin_1) == 0x000070, "Member 'WBP_InventoryToItem_C_CreateBuybackContainer::K2Node_MakeStruct_Margin_1' has a wrong offset!");

// Function WBP_InventoryToItem.WBP_InventoryToItem_C.CustomNavigation_InfoRight
// 0x0050 (0x0050 - 0x0000)
struct WBP_InventoryToItem_C_CustomNavigation_InfoRight final
{
public:
	EUINavigation                                 Param_Navigation;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC;                  // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      CallFunc_GetPlayerRef_SurvivalPlayer;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryToItem_C_CustomNavigation_InfoRight) == 0x000008, "Wrong alignment on WBP_InventoryToItem_C_CustomNavigation_InfoRight");
static_assert(sizeof(WBP_InventoryToItem_C_CustomNavigation_InfoRight) == 0x000050, "Wrong size on WBP_InventoryToItem_C_CustomNavigation_InfoRight");
static_assert(offsetof(WBP_InventoryToItem_C_CustomNavigation_InfoRight, Param_Navigation) == 0x000000, "Member 'WBP_InventoryToItem_C_CustomNavigation_InfoRight::Param_Navigation' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_CustomNavigation_InfoRight, ReturnValue) == 0x000008, "Member 'WBP_InventoryToItem_C_CustomNavigation_InfoRight::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_CustomNavigation_InfoRight, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'WBP_InventoryToItem_C_CustomNavigation_InfoRight::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_CustomNavigation_InfoRight, K2Node_DynamicCast_AsBPI_Surv_PC) == 0x000018, "Member 'WBP_InventoryToItem_C_CustomNavigation_InfoRight::K2Node_DynamicCast_AsBPI_Surv_PC' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_CustomNavigation_InfoRight, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_InventoryToItem_C_CustomNavigation_InfoRight::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_CustomNavigation_InfoRight, CallFunc_GetPlayerRef_SurvivalPlayer) == 0x000030, "Member 'WBP_InventoryToItem_C_CustomNavigation_InfoRight::CallFunc_GetPlayerRef_SurvivalPlayer' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_CustomNavigation_InfoRight, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'WBP_InventoryToItem_C_CustomNavigation_InfoRight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_CustomNavigation_InfoRight, CallFunc_Array_Get_Item) == 0x000040, "Member 'WBP_InventoryToItem_C_CustomNavigation_InfoRight::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_CustomNavigation_InfoRight, CallFunc_IsValid_ReturnValue_1) == 0x000048, "Member 'WBP_InventoryToItem_C_CustomNavigation_InfoRight::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WBP_InventoryToItem.WBP_InventoryToItem_C.EnableDismantleProgressBars
// 0x0050 (0x0050 - 0x0000)
struct WBP_InventoryToItem_C_EnableDismantleProgressBars final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC;                  // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      CallFunc_GetPlayerRef_SurvivalPlayer;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryToItem_C_EnableDismantleProgressBars) == 0x000008, "Wrong alignment on WBP_InventoryToItem_C_EnableDismantleProgressBars");
static_assert(sizeof(WBP_InventoryToItem_C_EnableDismantleProgressBars) == 0x000050, "Wrong size on WBP_InventoryToItem_C_EnableDismantleProgressBars");
static_assert(offsetof(WBP_InventoryToItem_C_EnableDismantleProgressBars, Enable) == 0x000000, "Member 'WBP_InventoryToItem_C_EnableDismantleProgressBars::Enable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_EnableDismantleProgressBars, Temp_bool_Variable) == 0x000001, "Member 'WBP_InventoryToItem_C_EnableDismantleProgressBars::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_EnableDismantleProgressBars, Temp_byte_Variable) == 0x000002, "Member 'WBP_InventoryToItem_C_EnableDismantleProgressBars::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_EnableDismantleProgressBars, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_InventoryToItem_C_EnableDismantleProgressBars::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_EnableDismantleProgressBars, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_InventoryToItem_C_EnableDismantleProgressBars::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_EnableDismantleProgressBars, K2Node_Select_Default) == 0x000008, "Member 'WBP_InventoryToItem_C_EnableDismantleProgressBars::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_EnableDismantleProgressBars, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WBP_InventoryToItem_C_EnableDismantleProgressBars::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_EnableDismantleProgressBars, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'WBP_InventoryToItem_C_EnableDismantleProgressBars::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_EnableDismantleProgressBars, K2Node_DynamicCast_AsBPI_Surv_PC) == 0x000018, "Member 'WBP_InventoryToItem_C_EnableDismantleProgressBars::K2Node_DynamicCast_AsBPI_Surv_PC' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_EnableDismantleProgressBars, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_InventoryToItem_C_EnableDismantleProgressBars::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_EnableDismantleProgressBars, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'WBP_InventoryToItem_C_EnableDismantleProgressBars::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_EnableDismantleProgressBars, CallFunc_GetPlayerRef_SurvivalPlayer) == 0x000030, "Member 'WBP_InventoryToItem_C_EnableDismantleProgressBars::CallFunc_GetPlayerRef_SurvivalPlayer' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_EnableDismantleProgressBars, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'WBP_InventoryToItem_C_EnableDismantleProgressBars::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_EnableDismantleProgressBars, CallFunc_Array_Get_Item) == 0x000040, "Member 'WBP_InventoryToItem_C_EnableDismantleProgressBars::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_EnableDismantleProgressBars, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'WBP_InventoryToItem_C_EnableDismantleProgressBars::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_EnableDismantleProgressBars, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'WBP_InventoryToItem_C_EnableDismantleProgressBars::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_InventoryToItem.WBP_InventoryToItem_C.ExecuteUbergraph_WBP_InventoryToItem
// 0x0878 (0x0878 - 0x0000)
struct WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            K2Node_CustomEvent_Slot_REF_2;                     // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_CustomEvent_Slot_REF_1;                     // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_SetCount_ItemInfo;                        // 0x0018(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_SetCount_ItemInfo_1;                      // 0x0238(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	class UJSIContainer_C*                        K2Node_CustomEvent_Container_1;                    // 0x0458(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_CustomEvent_SlotRef_1;                      // 0x0460(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_CustomEvent_Button_1;                       // 0x0468(0x0018)(HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0480(0x0018)()
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0499(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x049A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x049B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x049C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49D[0x3];                                      // 0x049D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_ShopCategory_C*                      K2Node_CustomEvent_ShopCategoryRef;                // 0x04A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x04A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4AA[0x6];                                      // 0x04AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x04B0(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x04C8(0x0018)()
	bool                                          K2Node_Event_IsDesignTime;                         // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E1[0x7];                                      // 0x04E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x04E8(0x0010)(ReferenceParm, ContainsInstancedReference)
	class FText                                   Temp_text_Variable_3;                              // 0x04F8(0x0018)()
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0510(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        K2Node_DynamicCast_AsJSIContainer;                 // 0x0518(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemBySlotIndex_Found;                 // 0x0521(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_522[0x6];                                      // 0x0522(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetItemBySlotIndex_Item;                  // 0x0528(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue_1;             // 0x0530(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item_1;                         // 0x0540(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_ShopCategory_C*                      K2Node_DynamicCast_AsW_Shop_Category;              // 0x0548(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ShopContainer                               Temp_byte_Variable;                                // 0x0551(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0552(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_553[0x5];                                      // 0x0553(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        K2Node_CustomEvent_Container;                      // 0x0558(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_CustomEvent_SlotRef;                        // 0x0560(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_CustomEvent_Button;                         // 0x0568(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0581(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_582[0x6];                                      // 0x0582(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0588(0x0018)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A1[0x7];                                      // 0x05A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x05A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_CustomEvent_Slot_REF;                       // 0x05B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_Count;                  // 0x05B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5BC[0x4];                                      // 0x05BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            K2Node_ComponentBoundEvent_Ref_slot;               // 0x05C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x05C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x05C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5CA[0x6];                                      // 0x05CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_CustomNavigation_InfoRight_ReturnValue;   // 0x05D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_CustomEvent_Target;                         // 0x05D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_SetCount_ItemInfo_2;                      // 0x05E0(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_CustomEvent_SlotWidgetRef;                  // 0x0800(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0808(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0809(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_80A[0x2];                                      // 0x080A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x080C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_ShopCategory_C*                      K2Node_Select_Default_1;                           // 0x0810(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0818(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_2;       // 0x0820(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_3;       // 0x0828(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_4;       // 0x0830(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Count;                          // 0x0838(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_83C[0x4];                                      // 0x083C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            K2Node_CustomEvent_Ref;                            // 0x0840(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_GetSlotRef_SlotRef;                       // 0x0848(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentCount_CurrentValue;             // 0x0850(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0854(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0855(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x0856(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue_1;              // 0x0857(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x0858(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x0859(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue_2;              // 0x085A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85B[0x5];                                      // 0x085B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0860(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x0868(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0869(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x086A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x086B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x086C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x086D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x086E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x086F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x0870(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0874(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0875(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem) == 0x000008, "Wrong alignment on WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem");
static_assert(sizeof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem) == 0x000878, "Wrong size on WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, EntryPoint) == 0x000000, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, K2Node_CustomEvent_Slot_REF_2) == 0x000008, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::K2Node_CustomEvent_Slot_REF_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, K2Node_CustomEvent_Slot_REF_1) == 0x000010, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::K2Node_CustomEvent_Slot_REF_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, CallFunc_SetCount_ItemInfo) == 0x000018, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::CallFunc_SetCount_ItemInfo' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, CallFunc_SetCount_ItemInfo_1) == 0x000238, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::CallFunc_SetCount_ItemInfo_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, K2Node_CustomEvent_Container_1) == 0x000458, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::K2Node_CustomEvent_Container_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, K2Node_CustomEvent_SlotRef_1) == 0x000460, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::K2Node_CustomEvent_SlotRef_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, K2Node_CustomEvent_Button_1) == 0x000468, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::K2Node_CustomEvent_Button_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, Temp_text_Variable) == 0x000480, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000498, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000499, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00049A, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, CallFunc_BooleanAND_ReturnValue) == 0x00049B, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, CallFunc_BooleanAND_ReturnValue_1) == 0x00049C, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, K2Node_CustomEvent_ShopCategoryRef) == 0x0004A0, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::K2Node_CustomEvent_ShopCategoryRef' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0004A8, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, CallFunc_IsValid_ReturnValue) == 0x0004A9, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, Temp_text_Variable_1) == 0x0004B0, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, Temp_text_Variable_2) == 0x0004C8, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, K2Node_Event_IsDesignTime) == 0x0004E0, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, CallFunc_GetAllChildren_ReturnValue) == 0x0004E8, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, Temp_text_Variable_3) == 0x0004F8, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, CallFunc_Array_Get_Item) == 0x000510, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, K2Node_DynamicCast_AsJSIContainer) == 0x000518, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::K2Node_DynamicCast_AsJSIContainer' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, K2Node_DynamicCast_bSuccess) == 0x000520, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, CallFunc_GetItemBySlotIndex_Found) == 0x000521, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::CallFunc_GetItemBySlotIndex_Found' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, CallFunc_GetItemBySlotIndex_Item) == 0x000528, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::CallFunc_GetItemBySlotIndex_Item' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, CallFunc_GetAllChildren_ReturnValue_1) == 0x000530, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::CallFunc_GetAllChildren_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, CallFunc_Array_Get_Item_1) == 0x000540, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, K2Node_DynamicCast_AsW_Shop_Category) == 0x000548, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::K2Node_DynamicCast_AsW_Shop_Category' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, K2Node_DynamicCast_bSuccess_1) == 0x000550, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, Temp_byte_Variable) == 0x000551, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, CallFunc_Greater_IntInt_ReturnValue) == 0x000552, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, K2Node_CustomEvent_Container) == 0x000558, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::K2Node_CustomEvent_Container' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, K2Node_CustomEvent_SlotRef) == 0x000560, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::K2Node_CustomEvent_SlotRef' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, K2Node_CustomEvent_Button) == 0x000568, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::K2Node_CustomEvent_Button' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x000580, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000581, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, K2Node_Select_Default) == 0x000588, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0005A0, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, CallFunc_PlayAnimationForward_ReturnValue) == 0x0005A8, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, K2Node_CustomEvent_Slot_REF) == 0x0005B0, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::K2Node_CustomEvent_Slot_REF' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, K2Node_ComponentBoundEvent_Count) == 0x0005B8, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::K2Node_ComponentBoundEvent_Count' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, K2Node_ComponentBoundEvent_Ref_slot) == 0x0005C0, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::K2Node_ComponentBoundEvent_Ref_slot' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0005C8, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0005C9, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, CallFunc_CustomNavigation_InfoRight_ReturnValue) == 0x0005D0, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::CallFunc_CustomNavigation_InfoRight_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, K2Node_CustomEvent_Target) == 0x0005D8, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::K2Node_CustomEvent_Target' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, CallFunc_SetCount_ItemInfo_2) == 0x0005E0, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::CallFunc_SetCount_ItemInfo_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, K2Node_CustomEvent_SlotWidgetRef) == 0x000800, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::K2Node_CustomEvent_SlotWidgetRef' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, Temp_bool_Variable) == 0x000808, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000809, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, CallFunc_SelectInt_ReturnValue) == 0x00080C, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, K2Node_Select_Default_1) == 0x000810, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000818, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, CallFunc_PlayAnimationForward_ReturnValue_2) == 0x000820, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::CallFunc_PlayAnimationForward_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, CallFunc_PlayAnimationForward_ReturnValue_3) == 0x000828, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::CallFunc_PlayAnimationForward_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, CallFunc_PlayAnimationForward_ReturnValue_4) == 0x000830, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::CallFunc_PlayAnimationForward_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, K2Node_CustomEvent_Count) == 0x000838, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::K2Node_CustomEvent_Count' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, K2Node_CustomEvent_Ref) == 0x000840, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::K2Node_CustomEvent_Ref' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, CallFunc_GetSlotRef_SlotRef) == 0x000848, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::CallFunc_GetSlotRef_SlotRef' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, CallFunc_GetCurrentCount_CurrentValue) == 0x000850, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::CallFunc_GetCurrentCount_CurrentValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000854, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000855, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, CallFunc_GetVisibility_ReturnValue) == 0x000856, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, CallFunc_GetVisibility_ReturnValue_1) == 0x000857, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::CallFunc_GetVisibility_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x000858, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x000859, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, CallFunc_GetVisibility_ReturnValue_2) == 0x00085A, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::CallFunc_GetVisibility_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, CallFunc_PlayAnimation_ReturnValue) == 0x000860, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x000868, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, Temp_byte_Variable_1) == 0x000869, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, Temp_byte_Variable_2) == 0x00086A, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, Temp_bool_Variable_1) == 0x00086B, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, Temp_byte_Variable_3) == 0x00086C, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, K2Node_Select_Default_2) == 0x00086D, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, Temp_byte_Variable_4) == 0x00086E, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00086F, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, CallFunc_SelectInt_ReturnValue_1) == 0x000870, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, Temp_bool_Variable_2) == 0x000874, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem, K2Node_Select_Default_3) == 0x000875, "Member 'WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem::K2Node_Select_Default_3' has a wrong offset!");

// Function WBP_InventoryToItem.WBP_InventoryToItem_C.GetListEntryCategory
// 0x0010 (0x0010 - 0x0000)
struct WBP_InventoryToItem_C_GetListEntryCategory final
{
public:
	TArray<class UW_ShopCategory_C*>              Param_EntryList;                                   // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
};
static_assert(alignof(WBP_InventoryToItem_C_GetListEntryCategory) == 0x000008, "Wrong alignment on WBP_InventoryToItem_C_GetListEntryCategory");
static_assert(sizeof(WBP_InventoryToItem_C_GetListEntryCategory) == 0x000010, "Wrong size on WBP_InventoryToItem_C_GetListEntryCategory");
static_assert(offsetof(WBP_InventoryToItem_C_GetListEntryCategory, Param_EntryList) == 0x000000, "Member 'WBP_InventoryToItem_C_GetListEntryCategory::Param_EntryList' has a wrong offset!");

// Function WBP_InventoryToItem.WBP_InventoryToItem_C.GetSelectedSlot
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventoryToItem_C_GetSelectedSlot final
{
public:
	class UJSI_Slot_C*                            SelectedSlot;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryToItem_C_GetSelectedSlot) == 0x000008, "Wrong alignment on WBP_InventoryToItem_C_GetSelectedSlot");
static_assert(sizeof(WBP_InventoryToItem_C_GetSelectedSlot) == 0x000008, "Wrong size on WBP_InventoryToItem_C_GetSelectedSlot");
static_assert(offsetof(WBP_InventoryToItem_C_GetSelectedSlot, SelectedSlot) == 0x000000, "Member 'WBP_InventoryToItem_C_GetSelectedSlot::SelectedSlot' has a wrong offset!");

// Function WBP_InventoryToItem.WBP_InventoryToItem_C.HideAllCategory
// 0x0038 (0x0038 - 0x0000)
struct WBP_InventoryToItem_C_HideAllCategory final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryToItem_C_HideAllCategory) == 0x000008, "Wrong alignment on WBP_InventoryToItem_C_HideAllCategory");
static_assert(sizeof(WBP_InventoryToItem_C_HideAllCategory) == 0x000038, "Wrong size on WBP_InventoryToItem_C_HideAllCategory");
static_assert(offsetof(WBP_InventoryToItem_C_HideAllCategory, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_InventoryToItem_C_HideAllCategory::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_HideAllCategory, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_InventoryToItem_C_HideAllCategory::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_HideAllCategory, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_InventoryToItem_C_HideAllCategory::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_HideAllCategory, CallFunc_GetAllChildren_ReturnValue) == 0x000010, "Member 'WBP_InventoryToItem_C_HideAllCategory::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_HideAllCategory, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WBP_InventoryToItem_C_HideAllCategory::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_HideAllCategory, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_InventoryToItem_C_HideAllCategory::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_HideAllCategory, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'WBP_InventoryToItem_C_HideAllCategory::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_InventoryToItem.WBP_InventoryToItem_C.HideCategory
// 0x0080 (0x0080 - 0x0000)
struct WBP_InventoryToItem_C_HideCategory final
{
public:
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_ShopCategoryContainer_C*             K2Node_DynamicCast_AsW_Shop_Category_Container;    // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryToItem_C_HideCategory) == 0x000008, "Wrong alignment on WBP_InventoryToItem_C_HideCategory");
static_assert(sizeof(WBP_InventoryToItem_C_HideCategory) == 0x000080, "Wrong size on WBP_InventoryToItem_C_HideCategory");
static_assert(offsetof(WBP_InventoryToItem_C_HideCategory, Temp_bool_True_if_break_was_hit_Variable) == 0x000000, "Member 'WBP_InventoryToItem_C_HideCategory::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_HideCategory, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_InventoryToItem_C_HideCategory::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_HideCategory, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'WBP_InventoryToItem_C_HideCategory::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_HideCategory, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WBP_InventoryToItem_C_HideCategory::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_HideCategory, K2Node_MakeStruct_Margin) == 0x000010, "Member 'WBP_InventoryToItem_C_HideCategory::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_HideCategory, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'WBP_InventoryToItem_C_HideCategory::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_HideCategory, CallFunc_GetAllChildren_ReturnValue) == 0x000028, "Member 'WBP_InventoryToItem_C_HideCategory::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_HideCategory, CallFunc_Array_Get_Item) == 0x000038, "Member 'WBP_InventoryToItem_C_HideCategory::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_HideCategory, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'WBP_InventoryToItem_C_HideCategory::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_HideCategory, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'WBP_InventoryToItem_C_HideCategory::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_HideCategory, K2Node_DynamicCast_AsW_Shop_Category_Container) == 0x000048, "Member 'WBP_InventoryToItem_C_HideCategory::K2Node_DynamicCast_AsW_Shop_Category_Container' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_HideCategory, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WBP_InventoryToItem_C_HideCategory::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_HideCategory, CallFunc_BooleanAND_ReturnValue) == 0x000051, "Member 'WBP_InventoryToItem_C_HideCategory::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_HideCategory, CallFunc_Conv_TextToString_ReturnValue) == 0x000058, "Member 'WBP_InventoryToItem_C_HideCategory::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_HideCategory, CallFunc_Conv_NameToString_ReturnValue) == 0x000068, "Member 'WBP_InventoryToItem_C_HideCategory::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_HideCategory, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000078, "Member 'WBP_InventoryToItem_C_HideCategory::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function WBP_InventoryToItem.WBP_InventoryToItem_C.HideOpacityAllCategory
// 0x0038 (0x0038 - 0x0000)
struct WBP_InventoryToItem_C_HideOpacityAllCategory final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryToItem_C_HideOpacityAllCategory) == 0x000008, "Wrong alignment on WBP_InventoryToItem_C_HideOpacityAllCategory");
static_assert(sizeof(WBP_InventoryToItem_C_HideOpacityAllCategory) == 0x000038, "Wrong size on WBP_InventoryToItem_C_HideOpacityAllCategory");
static_assert(offsetof(WBP_InventoryToItem_C_HideOpacityAllCategory, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_InventoryToItem_C_HideOpacityAllCategory::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_HideOpacityAllCategory, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_InventoryToItem_C_HideOpacityAllCategory::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_HideOpacityAllCategory, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_InventoryToItem_C_HideOpacityAllCategory::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_HideOpacityAllCategory, CallFunc_GetAllChildren_ReturnValue) == 0x000010, "Member 'WBP_InventoryToItem_C_HideOpacityAllCategory::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_HideOpacityAllCategory, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WBP_InventoryToItem_C_HideOpacityAllCategory::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_HideOpacityAllCategory, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_InventoryToItem_C_HideOpacityAllCategory::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_HideOpacityAllCategory, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'WBP_InventoryToItem_C_HideOpacityAllCategory::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_InventoryToItem.WBP_InventoryToItem_C.Init
// 0x0050 (0x0050 - 0x0000)
struct WBP_InventoryToItem_C_Init final
{
public:
	class UJSIContainer_C*                        FilterPocketContainer;                             // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC;                  // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      CallFunc_GetPlayerRef_SurvivalPlayer;              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryToItem_C_Init) == 0x000008, "Wrong alignment on WBP_InventoryToItem_C_Init");
static_assert(sizeof(WBP_InventoryToItem_C_Init) == 0x000050, "Wrong size on WBP_InventoryToItem_C_Init");
static_assert(offsetof(WBP_InventoryToItem_C_Init, FilterPocketContainer) == 0x000000, "Member 'WBP_InventoryToItem_C_Init::FilterPocketContainer' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_Init, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_InventoryToItem_C_Init::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_Init, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'WBP_InventoryToItem_C_Init::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_Init, K2Node_DynamicCast_AsBPI_Surv_PC) == 0x000020, "Member 'WBP_InventoryToItem_C_Init::K2Node_DynamicCast_AsBPI_Surv_PC' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_Init, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WBP_InventoryToItem_C_Init::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_Init, CallFunc_GetPlayerRef_SurvivalPlayer) == 0x000038, "Member 'WBP_InventoryToItem_C_Init::CallFunc_GetPlayerRef_SurvivalPlayer' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_Init, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'WBP_InventoryToItem_C_Init::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_Init, CallFunc_AddChild_ReturnValue) == 0x000048, "Member 'WBP_InventoryToItem_C_Init::CallFunc_AddChild_ReturnValue' has a wrong offset!");

// Function WBP_InventoryToItem.WBP_InventoryToItem_C.OnBuyBackProcessFinished__DelegateSignature
// 0x0230 (0x0230 - 0x0000)
struct WBP_InventoryToItem_C_OnBuyBackProcessFinished__DelegateSignature final
{
public:
	struct FFItemInfo                             FItem;                                             // 0x0000(0x0220)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	class UJSI_Slot_C*                            Slot_Ref;                                          // 0x0220(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Count;                                       // 0x0228(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryToItem_C_OnBuyBackProcessFinished__DelegateSignature) == 0x000008, "Wrong alignment on WBP_InventoryToItem_C_OnBuyBackProcessFinished__DelegateSignature");
static_assert(sizeof(WBP_InventoryToItem_C_OnBuyBackProcessFinished__DelegateSignature) == 0x000230, "Wrong size on WBP_InventoryToItem_C_OnBuyBackProcessFinished__DelegateSignature");
static_assert(offsetof(WBP_InventoryToItem_C_OnBuyBackProcessFinished__DelegateSignature, FItem) == 0x000000, "Member 'WBP_InventoryToItem_C_OnBuyBackProcessFinished__DelegateSignature::FItem' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_OnBuyBackProcessFinished__DelegateSignature, Slot_Ref) == 0x000220, "Member 'WBP_InventoryToItem_C_OnBuyBackProcessFinished__DelegateSignature::Slot_Ref' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_OnBuyBackProcessFinished__DelegateSignature, Param_Count) == 0x000228, "Member 'WBP_InventoryToItem_C_OnBuyBackProcessFinished__DelegateSignature::Param_Count' has a wrong offset!");

// Function WBP_InventoryToItem.WBP_InventoryToItem_C.OnBuyProcessFinished__DelegateSignature
// 0x0228 (0x0228 - 0x0000)
struct WBP_InventoryToItem_C_OnBuyProcessFinished__DelegateSignature final
{
public:
	struct FFItemInfo                             FItem;                                             // 0x0000(0x0220)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	class UJSI_Slot_C*                            Slot_Ref;                                          // 0x0220(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryToItem_C_OnBuyProcessFinished__DelegateSignature) == 0x000008, "Wrong alignment on WBP_InventoryToItem_C_OnBuyProcessFinished__DelegateSignature");
static_assert(sizeof(WBP_InventoryToItem_C_OnBuyProcessFinished__DelegateSignature) == 0x000228, "Wrong size on WBP_InventoryToItem_C_OnBuyProcessFinished__DelegateSignature");
static_assert(offsetof(WBP_InventoryToItem_C_OnBuyProcessFinished__DelegateSignature, FItem) == 0x000000, "Member 'WBP_InventoryToItem_C_OnBuyProcessFinished__DelegateSignature::FItem' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_OnBuyProcessFinished__DelegateSignature, Slot_Ref) == 0x000220, "Member 'WBP_InventoryToItem_C_OnBuyProcessFinished__DelegateSignature::Slot_Ref' has a wrong offset!");

// Function WBP_InventoryToItem.WBP_InventoryToItem_C.OnCreateCountChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_InventoryToItem_C_OnCreateCountChanged__DelegateSignature final
{
public:
	int32                                         Param_Count;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryToItem_C_OnCreateCountChanged__DelegateSignature) == 0x000004, "Wrong alignment on WBP_InventoryToItem_C_OnCreateCountChanged__DelegateSignature");
static_assert(sizeof(WBP_InventoryToItem_C_OnCreateCountChanged__DelegateSignature) == 0x000004, "Wrong size on WBP_InventoryToItem_C_OnCreateCountChanged__DelegateSignature");
static_assert(offsetof(WBP_InventoryToItem_C_OnCreateCountChanged__DelegateSignature, Param_Count) == 0x000000, "Member 'WBP_InventoryToItem_C_OnCreateCountChanged__DelegateSignature::Param_Count' has a wrong offset!");

// Function WBP_InventoryToItem.WBP_InventoryToItem_C.OnKeyDownAccept
// 0x0010 (0x0010 - 0x0000)
struct WBP_InventoryToItem_C_OnKeyDownAccept final
{
public:
	int32                                         Param_Count;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            Ref;                                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryToItem_C_OnKeyDownAccept) == 0x000008, "Wrong alignment on WBP_InventoryToItem_C_OnKeyDownAccept");
static_assert(sizeof(WBP_InventoryToItem_C_OnKeyDownAccept) == 0x000010, "Wrong size on WBP_InventoryToItem_C_OnKeyDownAccept");
static_assert(offsetof(WBP_InventoryToItem_C_OnKeyDownAccept, Param_Count) == 0x000000, "Member 'WBP_InventoryToItem_C_OnKeyDownAccept::Param_Count' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_OnKeyDownAccept, Ref) == 0x000008, "Member 'WBP_InventoryToItem_C_OnKeyDownAccept::Ref' has a wrong offset!");

// Function WBP_InventoryToItem.WBP_InventoryToItem_C.OnProcessStarted__DelegateSignature
// 0x0220 (0x0220 - 0x0000)
struct WBP_InventoryToItem_C_OnProcessStarted__DelegateSignature final
{
public:
	struct FFItemInfo                             ItemInfo;                                          // 0x0000(0x0220)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryToItem_C_OnProcessStarted__DelegateSignature) == 0x000008, "Wrong alignment on WBP_InventoryToItem_C_OnProcessStarted__DelegateSignature");
static_assert(sizeof(WBP_InventoryToItem_C_OnProcessStarted__DelegateSignature) == 0x000220, "Wrong size on WBP_InventoryToItem_C_OnProcessStarted__DelegateSignature");
static_assert(offsetof(WBP_InventoryToItem_C_OnProcessStarted__DelegateSignature, ItemInfo) == 0x000000, "Member 'WBP_InventoryToItem_C_OnProcessStarted__DelegateSignature::ItemInfo' has a wrong offset!");

// Function WBP_InventoryToItem.WBP_InventoryToItem_C.OnSelectedSlotRMBDown__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_InventoryToItem_C_OnSelectedSlotRMBDown__DelegateSignature final
{
public:
	class UJSI_Slot_C*                            SlotWidgetRef;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Count;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryToItem_C_OnSelectedSlotRMBDown__DelegateSignature) == 0x000008, "Wrong alignment on WBP_InventoryToItem_C_OnSelectedSlotRMBDown__DelegateSignature");
static_assert(sizeof(WBP_InventoryToItem_C_OnSelectedSlotRMBDown__DelegateSignature) == 0x000010, "Wrong size on WBP_InventoryToItem_C_OnSelectedSlotRMBDown__DelegateSignature");
static_assert(offsetof(WBP_InventoryToItem_C_OnSelectedSlotRMBDown__DelegateSignature, SlotWidgetRef) == 0x000000, "Member 'WBP_InventoryToItem_C_OnSelectedSlotRMBDown__DelegateSignature::SlotWidgetRef' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_OnSelectedSlotRMBDown__DelegateSignature, Param_Count) == 0x000008, "Member 'WBP_InventoryToItem_C_OnSelectedSlotRMBDown__DelegateSignature::Param_Count' has a wrong offset!");

// Function WBP_InventoryToItem.WBP_InventoryToItem_C.OnSellProcessStarted__DelegateSignature
// 0x0220 (0x0220 - 0x0000)
struct WBP_InventoryToItem_C_OnSellProcessStarted__DelegateSignature final
{
public:
	struct FFItemInfo                             FItem;                                             // 0x0000(0x0220)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryToItem_C_OnSellProcessStarted__DelegateSignature) == 0x000008, "Wrong alignment on WBP_InventoryToItem_C_OnSellProcessStarted__DelegateSignature");
static_assert(sizeof(WBP_InventoryToItem_C_OnSellProcessStarted__DelegateSignature) == 0x000220, "Wrong size on WBP_InventoryToItem_C_OnSellProcessStarted__DelegateSignature");
static_assert(offsetof(WBP_InventoryToItem_C_OnSellProcessStarted__DelegateSignature, FItem) == 0x000000, "Member 'WBP_InventoryToItem_C_OnSellProcessStarted__DelegateSignature::FItem' has a wrong offset!");

// Function WBP_InventoryToItem.WBP_InventoryToItem_C.OpenDialogue 
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventoryToItem_C_OpenDialogue_ final
{
public:
	class UJSI_Slot_C*                            Slot_Ref;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryToItem_C_OpenDialogue_) == 0x000008, "Wrong alignment on WBP_InventoryToItem_C_OpenDialogue_");
static_assert(sizeof(WBP_InventoryToItem_C_OpenDialogue_) == 0x000008, "Wrong size on WBP_InventoryToItem_C_OpenDialogue_");
static_assert(offsetof(WBP_InventoryToItem_C_OpenDialogue_, Slot_Ref) == 0x000000, "Member 'WBP_InventoryToItem_C_OpenDialogue_::Slot_Ref' has a wrong offset!");

// Function WBP_InventoryToItem.WBP_InventoryToItem_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_InventoryToItem_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryToItem_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_InventoryToItem_C_PreConstruct");
static_assert(sizeof(WBP_InventoryToItem_C_PreConstruct) == 0x000001, "Wrong size on WBP_InventoryToItem_C_PreConstruct");
static_assert(offsetof(WBP_InventoryToItem_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_InventoryToItem_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_InventoryToItem.WBP_InventoryToItem_C.ProcessFinished__DelegateSignature
// 0x0230 (0x0230 - 0x0000)
struct WBP_InventoryToItem_C_ProcessFinished__DelegateSignature final
{
public:
	struct FFItemInfo                             ItemInfo;                                          // 0x0000(0x0220)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Param_Count;                                       // 0x0220(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            Ref;                                               // 0x0228(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryToItem_C_ProcessFinished__DelegateSignature) == 0x000008, "Wrong alignment on WBP_InventoryToItem_C_ProcessFinished__DelegateSignature");
static_assert(sizeof(WBP_InventoryToItem_C_ProcessFinished__DelegateSignature) == 0x000230, "Wrong size on WBP_InventoryToItem_C_ProcessFinished__DelegateSignature");
static_assert(offsetof(WBP_InventoryToItem_C_ProcessFinished__DelegateSignature, ItemInfo) == 0x000000, "Member 'WBP_InventoryToItem_C_ProcessFinished__DelegateSignature::ItemInfo' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ProcessFinished__DelegateSignature, Param_Count) == 0x000220, "Member 'WBP_InventoryToItem_C_ProcessFinished__DelegateSignature::Param_Count' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ProcessFinished__DelegateSignature, Ref) == 0x000228, "Member 'WBP_InventoryToItem_C_ProcessFinished__DelegateSignature::Ref' has a wrong offset!");

// Function WBP_InventoryToItem.WBP_InventoryToItem_C.RebindSelectionDelegate
// 0x0060 (0x0060 - 0x0000)
struct WBP_InventoryToItem_C_RebindSelectionDelegate final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UJSI_Slot_C* SlotWidgetRef)> K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC;                  // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      CallFunc_GetPlayerRef_SurvivalPlayer;              // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryToItem_C_RebindSelectionDelegate) == 0x000008, "Wrong alignment on WBP_InventoryToItem_C_RebindSelectionDelegate");
static_assert(sizeof(WBP_InventoryToItem_C_RebindSelectionDelegate) == 0x000060, "Wrong size on WBP_InventoryToItem_C_RebindSelectionDelegate");
static_assert(offsetof(WBP_InventoryToItem_C_RebindSelectionDelegate, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_InventoryToItem_C_RebindSelectionDelegate::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_RebindSelectionDelegate, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'WBP_InventoryToItem_C_RebindSelectionDelegate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_RebindSelectionDelegate, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WBP_InventoryToItem_C_RebindSelectionDelegate::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_RebindSelectionDelegate, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'WBP_InventoryToItem_C_RebindSelectionDelegate::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_RebindSelectionDelegate, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_InventoryToItem_C_RebindSelectionDelegate::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_RebindSelectionDelegate, CallFunc_GetPlayerController_ReturnValue) == 0x000020, "Member 'WBP_InventoryToItem_C_RebindSelectionDelegate::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_RebindSelectionDelegate, K2Node_DynamicCast_AsBPI_Surv_PC) == 0x000028, "Member 'WBP_InventoryToItem_C_RebindSelectionDelegate::K2Node_DynamicCast_AsBPI_Surv_PC' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_RebindSelectionDelegate, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WBP_InventoryToItem_C_RebindSelectionDelegate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_RebindSelectionDelegate, CallFunc_GetPlayerRef_SurvivalPlayer) == 0x000040, "Member 'WBP_InventoryToItem_C_RebindSelectionDelegate::CallFunc_GetPlayerRef_SurvivalPlayer' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_RebindSelectionDelegate, CallFunc_IsValid_ReturnValue_1) == 0x000048, "Member 'WBP_InventoryToItem_C_RebindSelectionDelegate::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_RebindSelectionDelegate, CallFunc_Array_Get_Item) == 0x000050, "Member 'WBP_InventoryToItem_C_RebindSelectionDelegate::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_RebindSelectionDelegate, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'WBP_InventoryToItem_C_RebindSelectionDelegate::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_RebindSelectionDelegate, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'WBP_InventoryToItem_C_RebindSelectionDelegate::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_InventoryToItem.WBP_InventoryToItem_C.SelectedSlotBuy
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventoryToItem_C_SelectedSlotBuy final
{
public:
	class UJSI_Slot_C*                            Slot_Ref;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryToItem_C_SelectedSlotBuy) == 0x000008, "Wrong alignment on WBP_InventoryToItem_C_SelectedSlotBuy");
static_assert(sizeof(WBP_InventoryToItem_C_SelectedSlotBuy) == 0x000008, "Wrong size on WBP_InventoryToItem_C_SelectedSlotBuy");
static_assert(offsetof(WBP_InventoryToItem_C_SelectedSlotBuy, Slot_Ref) == 0x000000, "Member 'WBP_InventoryToItem_C_SelectedSlotBuy::Slot_Ref' has a wrong offset!");

// Function WBP_InventoryToItem.WBP_InventoryToItem_C.SelectedSlotBuyBack
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventoryToItem_C_SelectedSlotBuyBack final
{
public:
	class UJSI_Slot_C*                            Slot_Ref;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryToItem_C_SelectedSlotBuyBack) == 0x000008, "Wrong alignment on WBP_InventoryToItem_C_SelectedSlotBuyBack");
static_assert(sizeof(WBP_InventoryToItem_C_SelectedSlotBuyBack) == 0x000008, "Wrong size on WBP_InventoryToItem_C_SelectedSlotBuyBack");
static_assert(offsetof(WBP_InventoryToItem_C_SelectedSlotBuyBack, Slot_Ref) == 0x000000, "Member 'WBP_InventoryToItem_C_SelectedSlotBuyBack::Slot_Ref' has a wrong offset!");

// Function WBP_InventoryToItem.WBP_InventoryToItem_C.SelectedSlotSell
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventoryToItem_C_SelectedSlotSell final
{
public:
	class UJSI_Slot_C*                            Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryToItem_C_SelectedSlotSell) == 0x000008, "Wrong alignment on WBP_InventoryToItem_C_SelectedSlotSell");
static_assert(sizeof(WBP_InventoryToItem_C_SelectedSlotSell) == 0x000008, "Wrong size on WBP_InventoryToItem_C_SelectedSlotSell");
static_assert(offsetof(WBP_InventoryToItem_C_SelectedSlotSell, Target) == 0x000000, "Member 'WBP_InventoryToItem_C_SelectedSlotSell::Target' has a wrong offset!");

// Function WBP_InventoryToItem.WBP_InventoryToItem_C.SellRMBClick
// 0x0028 (0x0028 - 0x0000)
struct WBP_InventoryToItem_C_SellRMBClick final
{
public:
	class UJSIContainer_C*                        Container;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            SlotRef;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Button;                                            // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryToItem_C_SellRMBClick) == 0x000008, "Wrong alignment on WBP_InventoryToItem_C_SellRMBClick");
static_assert(sizeof(WBP_InventoryToItem_C_SellRMBClick) == 0x000028, "Wrong size on WBP_InventoryToItem_C_SellRMBClick");
static_assert(offsetof(WBP_InventoryToItem_C_SellRMBClick, Container) == 0x000000, "Member 'WBP_InventoryToItem_C_SellRMBClick::Container' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_SellRMBClick, SlotRef) == 0x000008, "Member 'WBP_InventoryToItem_C_SellRMBClick::SlotRef' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_SellRMBClick, Button) == 0x000010, "Member 'WBP_InventoryToItem_C_SellRMBClick::Button' has a wrong offset!");

// Function WBP_InventoryToItem.WBP_InventoryToItem_C.SetCount
// 0x0230 (0x0230 - 0x0000)
struct WBP_InventoryToItem_C_SetCount final
{
public:
	class UJSI_Slot_C*                            Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             ItemInfo;                                          // 0x0008(0x0220)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_229[0x3];                                      // 0x0229(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryToItem_C_SetCount) == 0x000008, "Wrong alignment on WBP_InventoryToItem_C_SetCount");
static_assert(sizeof(WBP_InventoryToItem_C_SetCount) == 0x000230, "Wrong size on WBP_InventoryToItem_C_SetCount");
static_assert(offsetof(WBP_InventoryToItem_C_SetCount, Target) == 0x000000, "Member 'WBP_InventoryToItem_C_SetCount::Target' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_SetCount, ItemInfo) == 0x000008, "Member 'WBP_InventoryToItem_C_SetCount::ItemInfo' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_SetCount, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000228, "Member 'WBP_InventoryToItem_C_SetCount::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_SetCount, CallFunc_SelectInt_ReturnValue) == 0x00022C, "Member 'WBP_InventoryToItem_C_SetCount::CallFunc_SelectInt_ReturnValue' has a wrong offset!");

// Function WBP_InventoryToItem.WBP_InventoryToItem_C.ShowAllCategory
// 0x0078 (0x0078 - 0x0000)
struct WBP_InventoryToItem_C_ShowAllCategory final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue_1;             // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_ShopCategoryContainer_C*             K2Node_DynamicCast_AsW_Shop_Category_Container;    // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x005C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_MakeStruct_Bottom_ImplicitCast;             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryToItem_C_ShowAllCategory) == 0x000008, "Wrong alignment on WBP_InventoryToItem_C_ShowAllCategory");
static_assert(sizeof(WBP_InventoryToItem_C_ShowAllCategory) == 0x000078, "Wrong size on WBP_InventoryToItem_C_ShowAllCategory");
static_assert(offsetof(WBP_InventoryToItem_C_ShowAllCategory, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_InventoryToItem_C_ShowAllCategory::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ShowAllCategory, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_InventoryToItem_C_ShowAllCategory::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ShowAllCategory, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_InventoryToItem_C_ShowAllCategory::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ShowAllCategory, CallFunc_GetAllChildren_ReturnValue) == 0x000010, "Member 'WBP_InventoryToItem_C_ShowAllCategory::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ShowAllCategory, CallFunc_Array_LastIndex_ReturnValue) == 0x000020, "Member 'WBP_InventoryToItem_C_ShowAllCategory::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ShowAllCategory, CallFunc_GetAllChildren_ReturnValue_1) == 0x000028, "Member 'WBP_InventoryToItem_C_ShowAllCategory::CallFunc_GetAllChildren_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ShowAllCategory, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000038, "Member 'WBP_InventoryToItem_C_ShowAllCategory::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ShowAllCategory, CallFunc_Array_Get_Item) == 0x000040, "Member 'WBP_InventoryToItem_C_ShowAllCategory::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ShowAllCategory, CallFunc_SelectFloat_ReturnValue) == 0x000048, "Member 'WBP_InventoryToItem_C_ShowAllCategory::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ShowAllCategory, K2Node_DynamicCast_AsW_Shop_Category_Container) == 0x000050, "Member 'WBP_InventoryToItem_C_ShowAllCategory::K2Node_DynamicCast_AsW_Shop_Category_Container' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ShowAllCategory, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'WBP_InventoryToItem_C_ShowAllCategory::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ShowAllCategory, K2Node_MakeStruct_Margin) == 0x00005C, "Member 'WBP_InventoryToItem_C_ShowAllCategory::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ShowAllCategory, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'WBP_InventoryToItem_C_ShowAllCategory::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ShowAllCategory, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'WBP_InventoryToItem_C_ShowAllCategory::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ShowAllCategory, K2Node_MakeStruct_Bottom_ImplicitCast) == 0x000074, "Member 'WBP_InventoryToItem_C_ShowAllCategory::K2Node_MakeStruct_Bottom_ImplicitCast' has a wrong offset!");

// Function WBP_InventoryToItem.WBP_InventoryToItem_C.UnbindInventoryUpdate
// 0x0048 (0x0048 - 0x0000)
struct WBP_InventoryToItem_C_UnbindInventoryUpdate final
{
public:
	bool                                          CallFunc_EventInstanceIsValid_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC;                  // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      CallFunc_GetPlayerRef_SurvivalPlayer;              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryToItem_C_UnbindInventoryUpdate) == 0x000008, "Wrong alignment on WBP_InventoryToItem_C_UnbindInventoryUpdate");
static_assert(sizeof(WBP_InventoryToItem_C_UnbindInventoryUpdate) == 0x000048, "Wrong size on WBP_InventoryToItem_C_UnbindInventoryUpdate");
static_assert(offsetof(WBP_InventoryToItem_C_UnbindInventoryUpdate, CallFunc_EventInstanceIsValid_ReturnValue) == 0x000000, "Member 'WBP_InventoryToItem_C_UnbindInventoryUpdate::CallFunc_EventInstanceIsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_UnbindInventoryUpdate, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'WBP_InventoryToItem_C_UnbindInventoryUpdate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_UnbindInventoryUpdate, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_InventoryToItem_C_UnbindInventoryUpdate::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_UnbindInventoryUpdate, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'WBP_InventoryToItem_C_UnbindInventoryUpdate::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_UnbindInventoryUpdate, K2Node_DynamicCast_AsBPI_Surv_PC) == 0x000020, "Member 'WBP_InventoryToItem_C_UnbindInventoryUpdate::K2Node_DynamicCast_AsBPI_Surv_PC' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_UnbindInventoryUpdate, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WBP_InventoryToItem_C_UnbindInventoryUpdate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_UnbindInventoryUpdate, CallFunc_GetPlayerRef_SurvivalPlayer) == 0x000038, "Member 'WBP_InventoryToItem_C_UnbindInventoryUpdate::CallFunc_GetPlayerRef_SurvivalPlayer' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_UnbindInventoryUpdate, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'WBP_InventoryToItem_C_UnbindInventoryUpdate::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WBP_InventoryToItem.WBP_InventoryToItem_C.ValidateItemInfoCount
// 0x0010 (0x0010 - 0x0000)
struct WBP_InventoryToItem_C_ValidateItemInfoCount final
{
public:
	int32                                         CallFunc_GetItemCount_Count;                       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryToItem_C_ValidateItemInfoCount) == 0x000004, "Wrong alignment on WBP_InventoryToItem_C_ValidateItemInfoCount");
static_assert(sizeof(WBP_InventoryToItem_C_ValidateItemInfoCount) == 0x000010, "Wrong size on WBP_InventoryToItem_C_ValidateItemInfoCount");
static_assert(offsetof(WBP_InventoryToItem_C_ValidateItemInfoCount, CallFunc_GetItemCount_Count) == 0x000000, "Member 'WBP_InventoryToItem_C_ValidateItemInfoCount::CallFunc_GetItemCount_Count' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ValidateItemInfoCount, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000004, "Member 'WBP_InventoryToItem_C_ValidateItemInfoCount::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ValidateItemInfoCount, CallFunc_SelectInt_ReturnValue) == 0x000008, "Member 'WBP_InventoryToItem_C_ValidateItemInfoCount::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ValidateItemInfoCount, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'WBP_InventoryToItem_C_ValidateItemInfoCount::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryToItem_C_ValidateItemInfoCount, CallFunc_Greater_IntInt_ReturnValue) == 0x00000D, "Member 'WBP_InventoryToItem_C_ValidateItemInfoCount::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

}

