#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Service_IsPlayerHPLow

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Service_IsPlayerHPLow.Service_IsPlayerHPLow_C
// 0x0020 (0x00B8 - 0x0098)
class UService_IsPlayerHPLow_C final : public UBTService_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0098(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ASurvivalPlayer_C*                      Player;                                            // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        PlayerHealthLessThan;                              // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_Test_C*                 Player_TEST;                                       // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Service_IsPlayerHPLow(int32 EntryPoint);
	void ReceiveActivation(class AActor* OwnerActor);
	void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Service_IsPlayerHPLow_C">();
	}
	static class UService_IsPlayerHPLow_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UService_IsPlayerHPLow_C>();
	}
};
static_assert(alignof(UService_IsPlayerHPLow_C) == 0x000008, "Wrong alignment on UService_IsPlayerHPLow_C");
static_assert(sizeof(UService_IsPlayerHPLow_C) == 0x0000B8, "Wrong size on UService_IsPlayerHPLow_C");
static_assert(offsetof(UService_IsPlayerHPLow_C, UberGraphFrame) == 0x000098, "Member 'UService_IsPlayerHPLow_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UService_IsPlayerHPLow_C, Player) == 0x0000A0, "Member 'UService_IsPlayerHPLow_C::Player' has a wrong offset!");
static_assert(offsetof(UService_IsPlayerHPLow_C, PlayerHealthLessThan) == 0x0000A8, "Member 'UService_IsPlayerHPLow_C::PlayerHealthLessThan' has a wrong offset!");
static_assert(offsetof(UService_IsPlayerHPLow_C, Player_TEST) == 0x0000B0, "Member 'UService_IsPlayerHPLow_C::Player_TEST' has a wrong offset!");

}

