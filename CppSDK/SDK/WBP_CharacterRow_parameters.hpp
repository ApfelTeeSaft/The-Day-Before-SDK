#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CharacterRow

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "FMODStudio_structs.hpp"


namespace SDK::Params
{

// Function WBP_CharacterRow.WBP_CharacterRow_C.ExecuteUbergraph_WBP_CharacterRow
// 0x0800 (0x0800 - 0x0000)
struct WBP_CharacterRow_C_ExecuteUbergraph_WBP_CharacterRow final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue_1;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue_2;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FButtonStyle                           K2Node_MakeStruct_ButtonStyle;                     // 0x0020(0x03F0)()
	struct FButtonStyle                           K2Node_MakeStruct_ButtonStyle_1;                   // 0x0410(0x03F0)()
};
static_assert(alignof(WBP_CharacterRow_C_ExecuteUbergraph_WBP_CharacterRow) == 0x000010, "Wrong alignment on WBP_CharacterRow_C_ExecuteUbergraph_WBP_CharacterRow");
static_assert(sizeof(WBP_CharacterRow_C_ExecuteUbergraph_WBP_CharacterRow) == 0x000800, "Wrong size on WBP_CharacterRow_C_ExecuteUbergraph_WBP_CharacterRow");
static_assert(offsetof(WBP_CharacterRow_C_ExecuteUbergraph_WBP_CharacterRow, EntryPoint) == 0x000000, "Member 'WBP_CharacterRow_C_ExecuteUbergraph_WBP_CharacterRow::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_CharacterRow_C_ExecuteUbergraph_WBP_CharacterRow, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_CharacterRow_C_ExecuteUbergraph_WBP_CharacterRow::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_CharacterRow_C_ExecuteUbergraph_WBP_CharacterRow, CallFunc_PlayEvent2D_ReturnValue) == 0x000008, "Member 'WBP_CharacterRow_C_ExecuteUbergraph_WBP_CharacterRow::CallFunc_PlayEvent2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CharacterRow_C_ExecuteUbergraph_WBP_CharacterRow, CallFunc_PlayEvent2D_ReturnValue_1) == 0x000010, "Member 'WBP_CharacterRow_C_ExecuteUbergraph_WBP_CharacterRow::CallFunc_PlayEvent2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CharacterRow_C_ExecuteUbergraph_WBP_CharacterRow, CallFunc_PlayEvent2D_ReturnValue_2) == 0x000018, "Member 'WBP_CharacterRow_C_ExecuteUbergraph_WBP_CharacterRow::CallFunc_PlayEvent2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CharacterRow_C_ExecuteUbergraph_WBP_CharacterRow, K2Node_MakeStruct_ButtonStyle) == 0x000020, "Member 'WBP_CharacterRow_C_ExecuteUbergraph_WBP_CharacterRow::K2Node_MakeStruct_ButtonStyle' has a wrong offset!");
static_assert(offsetof(WBP_CharacterRow_C_ExecuteUbergraph_WBP_CharacterRow, K2Node_MakeStruct_ButtonStyle_1) == 0x000410, "Member 'WBP_CharacterRow_C_ExecuteUbergraph_WBP_CharacterRow::K2Node_MakeStruct_ButtonStyle_1' has a wrong offset!");

// Function WBP_CharacterRow.WBP_CharacterRow_C.GetNamePlayer
// 0x0048 (0x0048 - 0x0000)
struct WBP_CharacterRow_C_GetNamePlayer final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGI_Survival_C*                         K2Node_DynamicCast_AsGI_Survival;                  // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0018)()
};
static_assert(alignof(WBP_CharacterRow_C_GetNamePlayer) == 0x000008, "Wrong alignment on WBP_CharacterRow_C_GetNamePlayer");
static_assert(sizeof(WBP_CharacterRow_C_GetNamePlayer) == 0x000048, "Wrong size on WBP_CharacterRow_C_GetNamePlayer");
static_assert(offsetof(WBP_CharacterRow_C_GetNamePlayer, ReturnValue) == 0x000000, "Member 'WBP_CharacterRow_C_GetNamePlayer::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CharacterRow_C_GetNamePlayer, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'WBP_CharacterRow_C_GetNamePlayer::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CharacterRow_C_GetNamePlayer, K2Node_DynamicCast_AsGI_Survival) == 0x000020, "Member 'WBP_CharacterRow_C_GetNamePlayer::K2Node_DynamicCast_AsGI_Survival' has a wrong offset!");
static_assert(offsetof(WBP_CharacterRow_C_GetNamePlayer, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_CharacterRow_C_GetNamePlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_CharacterRow_C_GetNamePlayer, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'WBP_CharacterRow_C_GetNamePlayer::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function WBP_CharacterRow.WBP_CharacterRow_C.GetValueDaysOfSurvival
// 0x0018 (0x0018 - 0x0000)
struct WBP_CharacterRow_C_GetValueDaysOfSurvival final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(WBP_CharacterRow_C_GetValueDaysOfSurvival) == 0x000008, "Wrong alignment on WBP_CharacterRow_C_GetValueDaysOfSurvival");
static_assert(sizeof(WBP_CharacterRow_C_GetValueDaysOfSurvival) == 0x000018, "Wrong size on WBP_CharacterRow_C_GetValueDaysOfSurvival");
static_assert(offsetof(WBP_CharacterRow_C_GetValueDaysOfSurvival, ReturnValue) == 0x000000, "Member 'WBP_CharacterRow_C_GetValueDaysOfSurvival::ReturnValue' has a wrong offset!");

// Function WBP_CharacterRow.WBP_CharacterRow_C.OnCreateHoverTimerHandler
// 0x0010 (0x0010 - 0x0000)
struct WBP_CharacterRow_C_OnCreateHoverTimerHandler final
{
public:
	bool                                          CallFunc_K2_TimerExistsHandle_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharacterRow_C_OnCreateHoverTimerHandler) == 0x000008, "Wrong alignment on WBP_CharacterRow_C_OnCreateHoverTimerHandler");
static_assert(sizeof(WBP_CharacterRow_C_OnCreateHoverTimerHandler) == 0x000010, "Wrong size on WBP_CharacterRow_C_OnCreateHoverTimerHandler");
static_assert(offsetof(WBP_CharacterRow_C_OnCreateHoverTimerHandler, CallFunc_K2_TimerExistsHandle_ReturnValue) == 0x000000, "Member 'WBP_CharacterRow_C_OnCreateHoverTimerHandler::CallFunc_K2_TimerExistsHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CharacterRow_C_OnCreateHoverTimerHandler, CallFunc_K2_SetTimer_ReturnValue) == 0x000008, "Member 'WBP_CharacterRow_C_OnCreateHoverTimerHandler::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");

// Function WBP_CharacterRow.WBP_CharacterRow_C.OnFocus
// 0x0028 (0x0028 - 0x0000)
struct WBP_CharacterRow_C_OnFocus final
{
public:
	bool                                          NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue_1;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharacterRow_C_OnFocus) == 0x000008, "Wrong alignment on WBP_CharacterRow_C_OnFocus");
static_assert(sizeof(WBP_CharacterRow_C_OnFocus) == 0x000028, "Wrong size on WBP_CharacterRow_C_OnFocus");
static_assert(offsetof(WBP_CharacterRow_C_OnFocus, NewState) == 0x000000, "Member 'WBP_CharacterRow_C_OnFocus::NewState' has a wrong offset!");
static_assert(offsetof(WBP_CharacterRow_C_OnFocus, Temp_bool_Variable) == 0x000001, "Member 'WBP_CharacterRow_C_OnFocus::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CharacterRow_C_OnFocus, Temp_byte_Variable) == 0x000002, "Member 'WBP_CharacterRow_C_OnFocus::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CharacterRow_C_OnFocus, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_CharacterRow_C_OnFocus::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CharacterRow_C_OnFocus, CallFunc_PlayEvent2D_ReturnValue) == 0x000008, "Member 'WBP_CharacterRow_C_OnFocus::CallFunc_PlayEvent2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CharacterRow_C_OnFocus, CallFunc_PlayEvent2D_ReturnValue_1) == 0x000010, "Member 'WBP_CharacterRow_C_OnFocus::CallFunc_PlayEvent2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CharacterRow_C_OnFocus, K2Node_Select_Default) == 0x000018, "Member 'WBP_CharacterRow_C_OnFocus::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_CharacterRow_C_OnFocus, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'WBP_CharacterRow_C_OnFocus::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_CharacterRow.WBP_CharacterRow_C.OnHoverTimerHandler
// 0x0006 (0x0006 - 0x0000)
struct WBP_CharacterRow_C_OnHoverTimerHandler final
{
public:
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharacterRow_C_OnHoverTimerHandler) == 0x000001, "Wrong alignment on WBP_CharacterRow_C_OnHoverTimerHandler");
static_assert(sizeof(WBP_CharacterRow_C_OnHoverTimerHandler) == 0x000006, "Wrong size on WBP_CharacterRow_C_OnHoverTimerHandler");
static_assert(offsetof(WBP_CharacterRow_C_OnHoverTimerHandler, CallFunc_IsHovered_ReturnValue) == 0x000000, "Member 'WBP_CharacterRow_C_OnHoverTimerHandler::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CharacterRow_C_OnHoverTimerHandler, CallFunc_GetVisibility_ReturnValue) == 0x000001, "Member 'WBP_CharacterRow_C_OnHoverTimerHandler::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CharacterRow_C_OnHoverTimerHandler, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000002, "Member 'WBP_CharacterRow_C_OnHoverTimerHandler::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CharacterRow_C_OnHoverTimerHandler, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000003, "Member 'WBP_CharacterRow_C_OnHoverTimerHandler::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CharacterRow_C_OnHoverTimerHandler, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000004, "Member 'WBP_CharacterRow_C_OnHoverTimerHandler::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CharacterRow_C_OnHoverTimerHandler, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'WBP_CharacterRow_C_OnHoverTimerHandler::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_CharacterRow.WBP_CharacterRow_C.OnPlayAnimation
// 0x0018 (0x0018 - 0x0000)
struct WBP_CharacterRow_C_OnPlayAnimation final
{
public:
	class UWidgetAnimation*                       Animation;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          NewState;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharacterRow_C_OnPlayAnimation) == 0x000008, "Wrong alignment on WBP_CharacterRow_C_OnPlayAnimation");
static_assert(sizeof(WBP_CharacterRow_C_OnPlayAnimation) == 0x000018, "Wrong size on WBP_CharacterRow_C_OnPlayAnimation");
static_assert(offsetof(WBP_CharacterRow_C_OnPlayAnimation, Animation) == 0x000000, "Member 'WBP_CharacterRow_C_OnPlayAnimation::Animation' has a wrong offset!");
static_assert(offsetof(WBP_CharacterRow_C_OnPlayAnimation, NewState) == 0x000008, "Member 'WBP_CharacterRow_C_OnPlayAnimation::NewState' has a wrong offset!");
static_assert(offsetof(WBP_CharacterRow_C_OnPlayAnimation, Temp_bool_Variable) == 0x000009, "Member 'WBP_CharacterRow_C_OnPlayAnimation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CharacterRow_C_OnPlayAnimation, Temp_byte_Variable) == 0x00000A, "Member 'WBP_CharacterRow_C_OnPlayAnimation::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CharacterRow_C_OnPlayAnimation, Temp_byte_Variable_1) == 0x00000B, "Member 'WBP_CharacterRow_C_OnPlayAnimation::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CharacterRow_C_OnPlayAnimation, K2Node_Select_Default) == 0x00000C, "Member 'WBP_CharacterRow_C_OnPlayAnimation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_CharacterRow_C_OnPlayAnimation, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'WBP_CharacterRow_C_OnPlayAnimation::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_CharacterRow.WBP_CharacterRow_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_CharacterRow_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharacterRow_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_CharacterRow_C_PreConstruct");
static_assert(sizeof(WBP_CharacterRow_C_PreConstruct) == 0x000001, "Wrong size on WBP_CharacterRow_C_PreConstruct");
static_assert(offsetof(WBP_CharacterRow_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_CharacterRow_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

