#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PointerHint

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "S_PointerHintInfo_structs.hpp"
#include "CardinalDirections_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_PointerHint.WBP_PointerHint_C.ExecuteUbergraph_WBP_PointerHint
// 0x0098 (0x0098 - 0x0000)
struct WBP_PointerHint_C_ExecuteUbergraph_WBP_PointerHint final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result;    // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bShow;                          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bWithAnim;                      // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_CustomEvent_WidgetRef;                      // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_PointerHintInfo                     K2Node_CustomEvent_Info;                           // 0x0038(0x0028)(ConstParm, HasGetValueTypeHash)
	struct FVector2D                              K2Node_CustomEvent_Offeset;                        // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result_1;  // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1; // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x2];                                       // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0084(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PointerHint_C_ExecuteUbergraph_WBP_PointerHint) == 0x000008, "Wrong alignment on WBP_PointerHint_C_ExecuteUbergraph_WBP_PointerHint");
static_assert(sizeof(WBP_PointerHint_C_ExecuteUbergraph_WBP_PointerHint) == 0x000098, "Wrong size on WBP_PointerHint_C_ExecuteUbergraph_WBP_PointerHint");
static_assert(offsetof(WBP_PointerHint_C_ExecuteUbergraph_WBP_PointerHint, EntryPoint) == 0x000000, "Member 'WBP_PointerHint_C_ExecuteUbergraph_WBP_PointerHint::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_ExecuteUbergraph_WBP_PointerHint, CallFunc_CreatePlayAnimationProxyObject_Result) == 0x000008, "Member 'WBP_PointerHint_C_ExecuteUbergraph_WBP_PointerHint::CallFunc_CreatePlayAnimationProxyObject_Result' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_ExecuteUbergraph_WBP_PointerHint, CallFunc_CreatePlayAnimationProxyObject_ReturnValue) == 0x000010, "Member 'WBP_PointerHint_C_ExecuteUbergraph_WBP_PointerHint::CallFunc_CreatePlayAnimationProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_ExecuteUbergraph_WBP_PointerHint, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_PointerHint_C_ExecuteUbergraph_WBP_PointerHint::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_ExecuteUbergraph_WBP_PointerHint, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'WBP_PointerHint_C_ExecuteUbergraph_WBP_PointerHint::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_ExecuteUbergraph_WBP_PointerHint, K2Node_CustomEvent_bShow) == 0x00002C, "Member 'WBP_PointerHint_C_ExecuteUbergraph_WBP_PointerHint::K2Node_CustomEvent_bShow' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_ExecuteUbergraph_WBP_PointerHint, K2Node_CustomEvent_bWithAnim) == 0x00002D, "Member 'WBP_PointerHint_C_ExecuteUbergraph_WBP_PointerHint::K2Node_CustomEvent_bWithAnim' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_ExecuteUbergraph_WBP_PointerHint, K2Node_CustomEvent_WidgetRef) == 0x000030, "Member 'WBP_PointerHint_C_ExecuteUbergraph_WBP_PointerHint::K2Node_CustomEvent_WidgetRef' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_ExecuteUbergraph_WBP_PointerHint, K2Node_CustomEvent_Info) == 0x000038, "Member 'WBP_PointerHint_C_ExecuteUbergraph_WBP_PointerHint::K2Node_CustomEvent_Info' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_ExecuteUbergraph_WBP_PointerHint, K2Node_CustomEvent_Offeset) == 0x000060, "Member 'WBP_PointerHint_C_ExecuteUbergraph_WBP_PointerHint::K2Node_CustomEvent_Offeset' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_ExecuteUbergraph_WBP_PointerHint, CallFunc_CreatePlayAnimationProxyObject_Result_1) == 0x000070, "Member 'WBP_PointerHint_C_ExecuteUbergraph_WBP_PointerHint::CallFunc_CreatePlayAnimationProxyObject_Result_1' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_ExecuteUbergraph_WBP_PointerHint, CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1) == 0x000078, "Member 'WBP_PointerHint_C_ExecuteUbergraph_WBP_PointerHint::CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_ExecuteUbergraph_WBP_PointerHint, CallFunc_IsValid_ReturnValue_1) == 0x000080, "Member 'WBP_PointerHint_C_ExecuteUbergraph_WBP_PointerHint::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_ExecuteUbergraph_WBP_PointerHint, K2Node_Event_IsDesignTime) == 0x000081, "Member 'WBP_PointerHint_C_ExecuteUbergraph_WBP_PointerHint::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_ExecuteUbergraph_WBP_PointerHint, K2Node_CreateDelegate_OutputDelegate_1) == 0x000084, "Member 'WBP_PointerHint_C_ExecuteUbergraph_WBP_PointerHint::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_ExecuteUbergraph_WBP_PointerHint, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000094, "Member 'WBP_PointerHint_C_ExecuteUbergraph_WBP_PointerHint::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function WBP_PointerHint.WBP_PointerHint_C.GetPointedWidget
// 0x0008 (0x0008 - 0x0000)
struct WBP_PointerHint_C_GetPointedWidget final
{
public:
	class UWidget*                                Param_PointedWidget;                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PointerHint_C_GetPointedWidget) == 0x000008, "Wrong alignment on WBP_PointerHint_C_GetPointedWidget");
static_assert(sizeof(WBP_PointerHint_C_GetPointedWidget) == 0x000008, "Wrong size on WBP_PointerHint_C_GetPointedWidget");
static_assert(offsetof(WBP_PointerHint_C_GetPointedWidget, Param_PointedWidget) == 0x000000, "Member 'WBP_PointerHint_C_GetPointedWidget::Param_PointedWidget' has a wrong offset!");

// Function WBP_PointerHint.WBP_PointerHint_C.GetShowed
// 0x0001 (0x0001 - 0x0000)
struct WBP_PointerHint_C_GetShowed final
{
public:
	bool                                          Param_Showed;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PointerHint_C_GetShowed) == 0x000001, "Wrong alignment on WBP_PointerHint_C_GetShowed");
static_assert(sizeof(WBP_PointerHint_C_GetShowed) == 0x000001, "Wrong size on WBP_PointerHint_C_GetShowed");
static_assert(offsetof(WBP_PointerHint_C_GetShowed, Param_Showed) == 0x000000, "Member 'WBP_PointerHint_C_GetShowed::Param_Showed' has a wrong offset!");

// Function WBP_PointerHint.WBP_PointerHint_C.Init
// 0x0050 (0x0050 - 0x0000)
struct WBP_PointerHint_C_Init final
{
public:
	ECardinalDirections                           Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform;                 // 0x0008(0x0038)(NoDestructor)
	class UWidgetAnimation*                       K2Node_Select_Default;                             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PointerHint_C_Init) == 0x000008, "Wrong alignment on WBP_PointerHint_C_Init");
static_assert(sizeof(WBP_PointerHint_C_Init) == 0x000050, "Wrong size on WBP_PointerHint_C_Init");
static_assert(offsetof(WBP_PointerHint_C_Init, Temp_byte_Variable) == 0x000000, "Member 'WBP_PointerHint_C_Init::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_Init, K2Node_MakeStruct_WidgetTransform) == 0x000008, "Member 'WBP_PointerHint_C_Init::K2Node_MakeStruct_WidgetTransform' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_Init, K2Node_Select_Default) == 0x000040, "Member 'WBP_PointerHint_C_Init::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_Init, CallFunc_PlayAnimation_ReturnValue) == 0x000048, "Member 'WBP_PointerHint_C_Init::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_PointerHint.WBP_PointerHint_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_PointerHint_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PointerHint_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_PointerHint_C_PreConstruct");
static_assert(sizeof(WBP_PointerHint_C_PreConstruct) == 0x000001, "Wrong size on WBP_PointerHint_C_PreConstruct");
static_assert(offsetof(WBP_PointerHint_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_PointerHint_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_PointerHint.WBP_PointerHint_C.ReInit
// 0x0028 (0x0028 - 0x0000)
struct WBP_PointerHint_C_ReInit final
{
public:
	struct FS_PointerHintInfo                     PointerInfo;                                       // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PointerHint_C_ReInit) == 0x000008, "Wrong alignment on WBP_PointerHint_C_ReInit");
static_assert(sizeof(WBP_PointerHint_C_ReInit) == 0x000028, "Wrong size on WBP_PointerHint_C_ReInit");
static_assert(offsetof(WBP_PointerHint_C_ReInit, PointerInfo) == 0x000000, "Member 'WBP_PointerHint_C_ReInit::PointerInfo' has a wrong offset!");

// Function WBP_PointerHint.WBP_PointerHint_C.SetDirectionMap
// 0x0050 (0x0050 - 0x0000)
struct WBP_PointerHint_C_SetDirectionMap final
{
public:
	TMap<ECardinalDirections, class USizeBox*>    K2Node_MakeMap_Map;                                // 0x0000(0x0050)(ContainsInstancedReference)
};
static_assert(alignof(WBP_PointerHint_C_SetDirectionMap) == 0x000008, "Wrong alignment on WBP_PointerHint_C_SetDirectionMap");
static_assert(sizeof(WBP_PointerHint_C_SetDirectionMap) == 0x000050, "Wrong size on WBP_PointerHint_C_SetDirectionMap");
static_assert(offsetof(WBP_PointerHint_C_SetDirectionMap, K2Node_MakeMap_Map) == 0x000000, "Member 'WBP_PointerHint_C_SetDirectionMap::K2Node_MakeMap_Map' has a wrong offset!");

// Function WBP_PointerHint.WBP_PointerHint_C.SetImage
// 0x01B0 (0x01B0 - 0x0000)
struct WBP_PointerHint_C_SetImage final
{
public:
	struct FSlateBrush                            CallFunc_MakeBrushFromSprite_ReturnValue;          // 0x0000(0x00D0)()
	struct FSlateBrush                            CallFunc_MakeBrushFromSprite_ReturnValue_1;        // 0x00D0(0x00D0)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PointerHint_C_SetImage) == 0x000010, "Wrong alignment on WBP_PointerHint_C_SetImage");
static_assert(sizeof(WBP_PointerHint_C_SetImage) == 0x0001B0, "Wrong size on WBP_PointerHint_C_SetImage");
static_assert(offsetof(WBP_PointerHint_C_SetImage, CallFunc_MakeBrushFromSprite_ReturnValue) == 0x000000, "Member 'WBP_PointerHint_C_SetImage::CallFunc_MakeBrushFromSprite_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetImage, CallFunc_MakeBrushFromSprite_ReturnValue_1) == 0x0000D0, "Member 'WBP_PointerHint_C_SetImage::CallFunc_MakeBrushFromSprite_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetImage, CallFunc_IsValid_ReturnValue) == 0x0001A0, "Member 'WBP_PointerHint_C_SetImage::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_PointerHint.WBP_PointerHint_C.SetOrientation
// 0x0050 (0x0050 - 0x0000)
struct WBP_PointerHint_C_SetOrientation final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USizeBox*>                       CallFunc_Map_Values_Values;                        // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USizeBox*                               CallFunc_Map_Find_Value;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USizeBox*                               CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PointerHint_C_SetOrientation) == 0x000008, "Wrong alignment on WBP_PointerHint_C_SetOrientation");
static_assert(sizeof(WBP_PointerHint_C_SetOrientation) == 0x000050, "Wrong size on WBP_PointerHint_C_SetOrientation");
static_assert(offsetof(WBP_PointerHint_C_SetOrientation, Temp_byte_Variable) == 0x000000, "Member 'WBP_PointerHint_C_SetOrientation::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetOrientation, Temp_byte_Variable_1) == 0x000001, "Member 'WBP_PointerHint_C_SetOrientation::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetOrientation, Temp_bool_Variable) == 0x000002, "Member 'WBP_PointerHint_C_SetOrientation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetOrientation, CallFunc_Map_Values_Values) == 0x000008, "Member 'WBP_PointerHint_C_SetOrientation::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetOrientation, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'WBP_PointerHint_C_SetOrientation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetOrientation, CallFunc_Map_Find_Value) == 0x000020, "Member 'WBP_PointerHint_C_SetOrientation::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetOrientation, CallFunc_Map_Find_ReturnValue) == 0x000028, "Member 'WBP_PointerHint_C_SetOrientation::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetOrientation, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'WBP_PointerHint_C_SetOrientation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetOrientation, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'WBP_PointerHint_C_SetOrientation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetOrientation, CallFunc_Array_Get_Item) == 0x000038, "Member 'WBP_PointerHint_C_SetOrientation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetOrientation, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000040, "Member 'WBP_PointerHint_C_SetOrientation::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetOrientation, K2Node_Select_Default) == 0x000041, "Member 'WBP_PointerHint_C_SetOrientation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetOrientation, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'WBP_PointerHint_C_SetOrientation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetOrientation, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'WBP_PointerHint_C_SetOrientation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetOrientation, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'WBP_PointerHint_C_SetOrientation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_PointerHint.WBP_PointerHint_C.SetPosition
// 0x0468 (0x0468 - 0x0000)
struct WBP_PointerHint_C_SetPosition final
{
public:
	class UWidget*                                WidgetRef;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_PointerHintInfo                     Info;                                              // 0x0008(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	struct FVector2D                              Offeset;                                           // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Pos;                                               // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x006C(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetAbsoluteSize_ReturnValue;              // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_LocalToViewport_PixelPosition;            // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_LocalToViewport_ViewportPosition;         // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A[0x2];                                      // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue_1;           // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue_1;             // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_4;                        // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_4;                        // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECardinalDirections                           Temp_byte_Variable;                                // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECardinalDirections                           Temp_byte_Variable_1;                              // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AA[0x6];                                      // 0x01AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECardinalDirections                           Temp_byte_Variable_2;                              // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BA[0x6];                                      // 0x01BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_5;                        // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_5;                        // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_6;                        // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_6;                        // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_7;                        // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_7;                        // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_4;                              // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECardinalDirections                           Temp_byte_Variable_3;                              // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_5;                              // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECardinalDirections                           Temp_byte_Variable_4;                              // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue_2;           // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_234[0x4];                                      // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_6;                              // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_7;                              // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_8;                              // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_9;                              // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_8;                        // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_8;                        // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECardinalDirections                           Temp_byte_Variable_5;                              // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_2;                           // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_3;                           // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue_3;           // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AC[0x4];                                      // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue_2;             // 0x02B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_5;           // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_9;                        // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_9;                        // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x02E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_6;           // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_4;                           // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_7;           // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_8;           // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_10;                       // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_10;                       // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_11;                       // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_11;                       // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_4;      // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_5;      // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_9;           // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381[0x7];                                      // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_6;      // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_7;      // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0398(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_5;                           // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_12;                       // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_12;                       // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x03C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C2[0x6];                                      // 0x03C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_6;                           // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_8;      // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D9[0x7];                                      // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_10;          // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_7;                           // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_8;                           // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F9[0x7];                                      // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_9;                           // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_9;      // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_11;          // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_10;                          // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_11;                          // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0428(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1;   // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2;   // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_3;   // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_4;   // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_5;   // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PointerHint_C_SetPosition) == 0x000008, "Wrong alignment on WBP_PointerHint_C_SetPosition");
static_assert(sizeof(WBP_PointerHint_C_SetPosition) == 0x000468, "Wrong size on WBP_PointerHint_C_SetPosition");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, WidgetRef) == 0x000000, "Member 'WBP_PointerHint_C_SetPosition::WidgetRef' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, Info) == 0x000008, "Member 'WBP_PointerHint_C_SetPosition::Info' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, Offeset) == 0x000030, "Member 'WBP_PointerHint_C_SetPosition::Offeset' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, Pos) == 0x000040, "Member 'WBP_PointerHint_C_SetPosition::Pos' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, Temp_bool_Variable) == 0x000050, "Member 'WBP_PointerHint_C_SetPosition::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_BreakVector2D_X) == 0x000058, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_BreakVector2D_Y) == 0x000060, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_GetCachedGeometry_ReturnValue) == 0x00006C, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_GetAbsoluteSize_ReturnValue) == 0x0000A8, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_GetAbsoluteSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_LocalToViewport_PixelPosition) == 0x0000B8, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_LocalToViewport_PixelPosition' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_LocalToViewport_ViewportPosition) == 0x0000C8, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_LocalToViewport_ViewportPosition' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_BreakVector2D_X_1) == 0x0000D8, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_BreakVector2D_Y_1) == 0x0000E0, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_BreakVector2D_X_2) == 0x0000E8, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_BreakVector2D_Y_2) == 0x0000F0, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000F8, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000100, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, Temp_bool_Variable_1) == 0x000108, "Member 'WBP_PointerHint_C_SetPosition::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, Temp_bool_Variable_2) == 0x000109, "Member 'WBP_PointerHint_C_SetPosition::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_GetViewportScale_ReturnValue) == 0x00010C, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_GetDesiredSize_ReturnValue) == 0x000110, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_GetViewportScale_ReturnValue_1) == 0x000120, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_GetViewportScale_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_BreakVector2D_X_3) == 0x000128, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_BreakVector2D_Y_3) == 0x000130, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_GetDesiredSize_ReturnValue_1) == 0x000138, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_GetDesiredSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000148, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_BreakVector2D_X_4) == 0x000150, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_BreakVector2D_Y_4) == 0x000158, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000160, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000168, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000170, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000178, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, Temp_real_Variable) == 0x000180, "Member 'WBP_PointerHint_C_SetPosition::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000188, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, Temp_real_Variable_1) == 0x000190, "Member 'WBP_PointerHint_C_SetPosition::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, Temp_real_Variable_2) == 0x000198, "Member 'WBP_PointerHint_C_SetPosition::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, Temp_real_Variable_3) == 0x0001A0, "Member 'WBP_PointerHint_C_SetPosition::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, Temp_byte_Variable) == 0x0001A8, "Member 'WBP_PointerHint_C_SetPosition::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, Temp_byte_Variable_1) == 0x0001A9, "Member 'WBP_PointerHint_C_SetPosition::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, K2Node_Select_Default) == 0x0001B0, "Member 'WBP_PointerHint_C_SetPosition::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, Temp_bool_Variable_3) == 0x0001B8, "Member 'WBP_PointerHint_C_SetPosition::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, Temp_byte_Variable_2) == 0x0001B9, "Member 'WBP_PointerHint_C_SetPosition::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_BreakVector2D_X_5) == 0x0001C0, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_BreakVector2D_X_5' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_BreakVector2D_Y_5) == 0x0001C8, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_BreakVector2D_Y_5' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, Temp_bool_Variable_4) == 0x0001D0, "Member 'WBP_PointerHint_C_SetPosition::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_BreakVector2D_X_6) == 0x0001D8, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_BreakVector2D_X_6' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_BreakVector2D_Y_6) == 0x0001E0, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_BreakVector2D_Y_6' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_BreakVector2D_X_7) == 0x0001E8, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_BreakVector2D_X_7' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_BreakVector2D_Y_7) == 0x0001F0, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_BreakVector2D_Y_7' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, Temp_bool_Variable_5) == 0x0001F8, "Member 'WBP_PointerHint_C_SetPosition::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, Temp_real_Variable_4) == 0x000200, "Member 'WBP_PointerHint_C_SetPosition::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, Temp_byte_Variable_3) == 0x000208, "Member 'WBP_PointerHint_C_SetPosition::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, Temp_real_Variable_5) == 0x000210, "Member 'WBP_PointerHint_C_SetPosition::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, K2Node_Select_Default_1) == 0x000218, "Member 'WBP_PointerHint_C_SetPosition::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, Temp_byte_Variable_4) == 0x000220, "Member 'WBP_PointerHint_C_SetPosition::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000228, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_GetViewportScale_ReturnValue_2) == 0x000230, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_GetViewportScale_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, Temp_real_Variable_6) == 0x000238, "Member 'WBP_PointerHint_C_SetPosition::Temp_real_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000240, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000248, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, Temp_real_Variable_7) == 0x000250, "Member 'WBP_PointerHint_C_SetPosition::Temp_real_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000258, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000260, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, Temp_real_Variable_8) == 0x000268, "Member 'WBP_PointerHint_C_SetPosition::Temp_real_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, Temp_real_Variable_9) == 0x000270, "Member 'WBP_PointerHint_C_SetPosition::Temp_real_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_BreakVector2D_X_8) == 0x000278, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_BreakVector2D_X_8' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_BreakVector2D_Y_8) == 0x000280, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_BreakVector2D_Y_8' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, Temp_byte_Variable_5) == 0x000288, "Member 'WBP_PointerHint_C_SetPosition::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, K2Node_Select_Default_2) == 0x000290, "Member 'WBP_PointerHint_C_SetPosition::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x000298, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, K2Node_Select_Default_3) == 0x0002A0, "Member 'WBP_PointerHint_C_SetPosition::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_GetViewportScale_ReturnValue_3) == 0x0002A8, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_GetViewportScale_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0002B0, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_GetDesiredSize_ReturnValue_2) == 0x0002B8, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_GetDesiredSize_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_Add_DoubleDouble_ReturnValue_5) == 0x0002C8, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_Add_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_BreakVector2D_X_9) == 0x0002D0, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_BreakVector2D_X_9' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_BreakVector2D_Y_9) == 0x0002D8, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_BreakVector2D_Y_9' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_MakeVector2D_ReturnValue) == 0x0002E0, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x0002F0, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0002F8, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_Add_DoubleDouble_ReturnValue_6) == 0x000300, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_Add_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000308, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000310, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000318, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000320, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, K2Node_Select_Default_4) == 0x000328, "Member 'WBP_PointerHint_C_SetPosition::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_Add_DoubleDouble_ReturnValue_7) == 0x000330, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_Add_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x000338, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_Add_DoubleDouble_ReturnValue_8) == 0x000340, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_Add_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_BreakVector2D_X_10) == 0x000348, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_BreakVector2D_X_10' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_BreakVector2D_Y_10) == 0x000350, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_BreakVector2D_Y_10' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_BreakVector2D_X_11) == 0x000358, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_BreakVector2D_X_11' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_BreakVector2D_Y_11) == 0x000360, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_BreakVector2D_Y_11' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_Subtract_DoubleDouble_ReturnValue_4) == 0x000368, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_Subtract_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_Subtract_DoubleDouble_ReturnValue_5) == 0x000370, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_Subtract_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_Add_DoubleDouble_ReturnValue_9) == 0x000378, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_Add_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000380, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_Subtract_DoubleDouble_ReturnValue_6) == 0x000388, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_Subtract_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_Subtract_DoubleDouble_ReturnValue_7) == 0x000390, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_Subtract_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_GetViewportSize_ReturnValue) == 0x000398, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, K2Node_Select_Default_5) == 0x0003A8, "Member 'WBP_PointerHint_C_SetPosition::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_BreakVector2D_X_12) == 0x0003B0, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_BreakVector2D_X_12' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_BreakVector2D_Y_12) == 0x0003B8, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_BreakVector2D_Y_12' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0003C0, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0003C1, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, K2Node_Select_Default_6) == 0x0003C8, "Member 'WBP_PointerHint_C_SetPosition::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_Subtract_DoubleDouble_ReturnValue_8) == 0x0003D0, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_Subtract_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x0003D8, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_Add_DoubleDouble_ReturnValue_10) == 0x0003E0, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_Add_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, K2Node_Select_Default_7) == 0x0003E8, "Member 'WBP_PointerHint_C_SetPosition::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, K2Node_Select_Default_8) == 0x0003F0, "Member 'WBP_PointerHint_C_SetPosition::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x0003F8, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, K2Node_Select_Default_9) == 0x000400, "Member 'WBP_PointerHint_C_SetPosition::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_Subtract_DoubleDouble_ReturnValue_9) == 0x000408, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_Subtract_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_Add_DoubleDouble_ReturnValue_11) == 0x000410, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_Add_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, K2Node_Select_Default_10) == 0x000418, "Member 'WBP_PointerHint_C_SetPosition::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, K2Node_Select_Default_11) == 0x000420, "Member 'WBP_PointerHint_C_SetPosition::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_MakeVector2D_ReturnValue_1) == 0x000428, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000438, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1) == 0x000440, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2) == 0x000448, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_3) == 0x000450, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_4) == 0x000458, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_SetPosition, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_5) == 0x000460, "Member 'WBP_PointerHint_C_SetPosition::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_5' has a wrong offset!");

// Function WBP_PointerHint.WBP_PointerHint_C.Show
// 0x0048 (0x0048 - 0x0000)
struct WBP_PointerHint_C_Show final
{
public:
	bool                                          bShow;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWithAnim;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                WidgetRef;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_PointerHintInfo                     Info;                                              // 0x0010(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FVector2D                              Offeset;                                           // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PointerHint_C_Show) == 0x000008, "Wrong alignment on WBP_PointerHint_C_Show");
static_assert(sizeof(WBP_PointerHint_C_Show) == 0x000048, "Wrong size on WBP_PointerHint_C_Show");
static_assert(offsetof(WBP_PointerHint_C_Show, bShow) == 0x000000, "Member 'WBP_PointerHint_C_Show::bShow' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_Show, bWithAnim) == 0x000001, "Member 'WBP_PointerHint_C_Show::bWithAnim' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_Show, WidgetRef) == 0x000008, "Member 'WBP_PointerHint_C_Show::WidgetRef' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_Show, Info) == 0x000010, "Member 'WBP_PointerHint_C_Show::Info' has a wrong offset!");
static_assert(offsetof(WBP_PointerHint_C_Show, Offeset) == 0x000038, "Member 'WBP_PointerHint_C_Show::Offeset' has a wrong offset!");

}

