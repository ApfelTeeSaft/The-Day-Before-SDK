#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LootPoint

#include "Basic.hpp"

#include "LootPoint_classes.hpp"
#include "LootPoint_parameters.hpp"


namespace SDK
{

// Function LootPoint.LootPoint_C.AddMeshToShining
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UStaticMeshComponent*             MeshComponent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   MaterialIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInstanceDynamic*         DynamicMaterial                                        (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ALootPoint_C::AddMeshToShining(class UStaticMeshComponent* MeshComponent, int32 MaterialIndex, class UMaterialInstanceDynamic** DynamicMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "AddMeshToShining");

	Params::LootPoint_C_AddMeshToShining Parms{};

	Parms.MeshComponent = MeshComponent;
	Parms.MaterialIndex = MaterialIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (DynamicMaterial != nullptr)
		*DynamicMaterial = Parms.DynamicMaterial;
}


// Function LootPoint.LootPoint_C.CallCloseLootPoint
// (BlueprintCallable, BlueprintEvent)

void ALootPoint_C::CallCloseLootPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "CallCloseLootPoint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootPoint.LootPoint_C.CheckInactiveInteraction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ALootPoint_C::CheckInactiveInteraction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "CheckInactiveInteraction");

	Params::LootPoint_C_CheckInactiveInteraction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function LootPoint.LootPoint_C.Close Doors Animated
// (Public, BlueprintCallable, BlueprintEvent)

void ALootPoint_C::Close_Doors_Animated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "Close Doors Animated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootPoint.LootPoint_C.Destroy
// (Protected, BlueprintCallable, BlueprintEvent)

void ALootPoint_C::Destroy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "Destroy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootPoint.LootPoint_C.DisableCanCloseDoor
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ALootPoint_C::DisableCanCloseDoor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "DisableCanCloseDoor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootPoint.LootPoint_C.ExecuteUbergraph_LootPoint
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ALootPoint_C::ExecuteUbergraph_LootPoint(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "ExecuteUbergraph_LootPoint");

	Params::LootPoint_C_ExecuteUbergraph_LootPoint Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LootPoint.LootPoint_C.GetActorType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ActorType                             ActorType                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ALootPoint_C::GetActorType(E_ActorType* ActorType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "GetActorType");

	Params::LootPoint_C_GetActorType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ActorType != nullptr)
		*ActorType = Parms.ActorType;
}


// Function LootPoint.LootPoint_C.Show Interact
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUIW_PlayerMain_C*                GUI                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  Delay                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsHold                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Action_Text                                            (BlueprintVisible, BlueprintReadOnly, Parm)
// int32                                   Inactive                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ALootPoint_C::Show_Interact(class UUIW_PlayerMain_C* GUI, double Delay, bool IsHold, const class FText& Action_Text, int32 Inactive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "Show Interact");

	Params::LootPoint_C_Show_Interact Parms{};

	Parms.GUI = GUI;
	Parms.Delay = Delay;
	Parms.IsHold = IsHold;
	Parms.Action_Text = std::move(Action_Text);
	Parms.Inactive = Inactive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LootPoint.LootPoint_C.HideMarkWD__FinishedFunc
// (BlueprintEvent)

void ALootPoint_C::HideMarkWD__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "HideMarkWD__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootPoint.LootPoint_C.HideMarkWD__UpdateFunc
// (BlueprintEvent)

void ALootPoint_C::HideMarkWD__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "HideMarkWD__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootPoint.LootPoint_C.IsLocked?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ALootPoint_C::IsLocked_(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "IsLocked?");

	Params::LootPoint_C_IsLocked_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function LootPoint.LootPoint_C.IsSomethingOnA Way
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ALootPoint_C::IsSomethingOnA_Way()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "IsSomethingOnA Way");

	Params::LootPoint_C_IsSomethingOnA_Way Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function LootPoint.LootPoint_C.LootOpenedServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ALootPoint_C::LootOpenedServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "LootOpenedServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootPoint.LootPoint_C.MoveFifthComponent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TargetRelativeLocation                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         TargetRelativeRotation                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// double                                  OverTime                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ALootPoint_C::MoveFifthComponent(class USceneComponent* Component, const struct FVector& TargetRelativeLocation, const struct FRotator& TargetRelativeRotation, double OverTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "MoveFifthComponent");

	Params::LootPoint_C_MoveFifthComponent Parms{};

	Parms.Component = Component;
	Parms.TargetRelativeLocation = std::move(TargetRelativeLocation);
	Parms.TargetRelativeRotation = std::move(TargetRelativeRotation);
	Parms.OverTime = OverTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LootPoint.LootPoint_C.MoveFirstComponent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TargetRelativeLocation                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         TargetRelativeRotation                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// double                                  OverTime                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ALootPoint_C::MoveFirstComponent(class USceneComponent* Component, const struct FVector& TargetRelativeLocation, const struct FRotator& TargetRelativeRotation, double OverTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "MoveFirstComponent");

	Params::LootPoint_C_MoveFirstComponent Parms{};

	Parms.Component = Component;
	Parms.TargetRelativeLocation = std::move(TargetRelativeLocation);
	Parms.TargetRelativeRotation = std::move(TargetRelativeRotation);
	Parms.OverTime = OverTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LootPoint.LootPoint_C.MoveFourthComponent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TargetRelativeLocation                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         TargetRelativeRotation                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// double                                  OverTime                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ALootPoint_C::MoveFourthComponent(class USceneComponent* Component, const struct FVector& TargetRelativeLocation, const struct FRotator& TargetRelativeRotation, double OverTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "MoveFourthComponent");

	Params::LootPoint_C_MoveFourthComponent Parms{};

	Parms.Component = Component;
	Parms.TargetRelativeLocation = std::move(TargetRelativeLocation);
	Parms.TargetRelativeRotation = std::move(TargetRelativeRotation);
	Parms.OverTime = OverTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LootPoint.LootPoint_C.MoveSecondComponent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TargetRelativeLocation                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         TargetRelativeRotation                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// double                                  OverTime                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ALootPoint_C::MoveSecondComponent(class USceneComponent* Component, const struct FVector& TargetRelativeLocation, const struct FRotator& TargetRelativeRotation, double OverTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "MoveSecondComponent");

	Params::LootPoint_C_MoveSecondComponent Parms{};

	Parms.Component = Component;
	Parms.TargetRelativeLocation = std::move(TargetRelativeLocation);
	Parms.TargetRelativeRotation = std::move(TargetRelativeRotation);
	Parms.OverTime = OverTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LootPoint.LootPoint_C.MoveSixthComponent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TargetRelativeLocation                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         TargetRelativeRotation                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// double                                  OverTime                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ALootPoint_C::MoveSixthComponent(class USceneComponent* Component, const struct FVector& TargetRelativeLocation, const struct FRotator& TargetRelativeRotation, double OverTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "MoveSixthComponent");

	Params::LootPoint_C_MoveSixthComponent Parms{};

	Parms.Component = Component;
	Parms.TargetRelativeLocation = std::move(TargetRelativeLocation);
	Parms.TargetRelativeRotation = std::move(TargetRelativeRotation);
	Parms.OverTime = OverTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LootPoint.LootPoint_C.MoveThirdComponent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TargetRelativeLocation                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         TargetRelativeRotation                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// double                                  OverTime                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ALootPoint_C::MoveThirdComponent(class USceneComponent* Component, const struct FVector& TargetRelativeLocation, const struct FRotator& TargetRelativeRotation, double OverTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "MoveThirdComponent");

	Params::LootPoint_C_MoveThirdComponent Parms{};

	Parms.Component = Component;
	Parms.TargetRelativeLocation = std::move(TargetRelativeLocation);
	Parms.TargetRelativeRotation = std::move(TargetRelativeRotation);
	Parms.OverTime = OverTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LootPoint.LootPoint_C.MultiCallCloseLootPoint
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ALootPoint_C::MultiCallCloseLootPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "MultiCallCloseLootPoint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootPoint.LootPoint_C.MultiCallOpenLootPoint
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ALootPoint_C::MultiCallOpenLootPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "MultiCallOpenLootPoint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootPoint.LootPoint_C.OnBeginInteract
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ALootPoint_C::OnBeginInteract(class APawn* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "OnBeginInteract");

	Params::LootPoint_C_OnBeginInteract Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LootPoint.LootPoint_C.OnBoughtInitialItems__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ALootPoint_C::OnBoughtInitialItems__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "OnBoughtInitialItems__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootPoint.LootPoint_C.OnFocused
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           HighlightActor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UActorComponent*                  HighlightActorComponent                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// E_InteractType                          InteractType                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  LateTime                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ALootPoint_C::OnFocused(class APawn* Player, class AActor* HighlightActor, class UActorComponent* HighlightActorComponent, E_InteractType* InteractType, double* LateTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "OnFocused");

	Params::LootPoint_C_OnFocused Parms{};

	Parms.Player = Player;
	Parms.HighlightActor = HighlightActor;
	Parms.HighlightActorComponent = HighlightActorComponent;

	UObject::ProcessEvent(Func, &Parms);

	if (InteractType != nullptr)
		*InteractType = Parms.InteractType;

	if (LateTime != nullptr)
		*LateTime = Parms.LateTime;
}


// Function LootPoint.LootPoint_C.OnInteracted__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractedActor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ALootPoint_C::OnInteracted__DelegateSignature(class AActor* InteractedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "OnInteracted__DelegateSignature");

	Params::LootPoint_C_OnInteracted__DelegateSignature Parms{};

	Parms.InteractedActor = InteractedActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LootPoint.LootPoint_C.OnKnockdownStart
// (BlueprintCallable, BlueprintEvent)

void ALootPoint_C::OnKnockdownStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "OnKnockdownStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootPoint.LootPoint_C.OnLocalInteract
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ALootPoint_C::OnLocalInteract(class APawn* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "OnLocalInteract");

	Params::LootPoint_C_OnLocalInteract Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LootPoint.LootPoint_C.OnLostFocus
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ALootPoint_C::OnLostFocus(class APawn* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "OnLostFocus");

	Params::LootPoint_C_OnLostFocus Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LootPoint.LootPoint_C.OnSeen
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ALootPoint_C::OnSeen(class APawn* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "OnSeen");

	Params::LootPoint_C_OnSeen Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LootPoint.LootPoint_C.OnStopInteract
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ALootPoint_C::OnStopInteract(class APawn* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "OnStopInteract");

	Params::LootPoint_C_OnStopInteract Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LootPoint.LootPoint_C.OnStopInteracting__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ALootPoint_C::OnStopInteracting__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "OnStopInteracting__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootPoint.LootPoint_C.OpenDoorsAnimated
// (Public, BlueprintCallable, BlueprintEvent)

void ALootPoint_C::OpenDoorsAnimated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "OpenDoorsAnimated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootPoint.LootPoint_C.OpenDoorsFunc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Open                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_Fast                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ALootPoint_C::OpenDoorsFunc(bool Open, bool Param_Fast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "OpenDoorsFunc");

	Params::LootPoint_C_OpenDoorsFunc Parms{};

	Parms.Open = Open;
	Parms.Param_Fast = Param_Fast;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LootPoint.LootPoint_C.OpenDoorsMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Open                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ALootPoint_C::OpenDoorsMulti(bool Open)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "OpenDoorsMulti");

	Params::LootPoint_C_OpenDoorsMulti Parms{};

	Parms.Open = Open;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LootPoint.LootPoint_C.OverlapEnd
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ALootPoint_C::OverlapEnd(bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "OverlapEnd");

	Params::LootPoint_C_OverlapEnd Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function LootPoint.LootPoint_C.OverlapStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ALootPoint_C::OverlapStart(bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "OverlapStart");

	Params::LootPoint_C_OverlapStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function LootPoint.LootPoint_C.PauseTimerServer
// (BlueprintCallable, BlueprintEvent)

void ALootPoint_C::PauseTimerServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "PauseTimerServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootPoint.LootPoint_C.PlayInteractSound
// (Public, BlueprintCallable, BlueprintEvent)

void ALootPoint_C::PlayInteractSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "PlayInteractSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootPoint.LootPoint_C.PlayInteractSoundV2
// (BlueprintCallable, BlueprintEvent)

void ALootPoint_C::PlayInteractSoundV2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "PlayInteractSoundV2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootPoint.LootPoint_C.PlayOpenSound
// (Public, BlueprintCallable, BlueprintEvent)

void ALootPoint_C::PlayOpenSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "PlayOpenSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootPoint.LootPoint_C.RandomAngleOpenDoors
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Min                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Max                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double ALootPoint_C::RandomAngleOpenDoors(double Min, double Max)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "RandomAngleOpenDoors");

	Params::LootPoint_C_RandomAngleOpenDoors Parms{};

	Parms.Min = Min;
	Parms.Max = Max;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function LootPoint.LootPoint_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ALootPoint_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootPoint.LootPoint_C.RemoveBoxComponent
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ALootPoint_C::RemoveBoxComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "RemoveBoxComponent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootPoint.LootPoint_C.ResetByManager__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ALootPoint_C::ResetByManager__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "ResetByManager__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootPoint.LootPoint_C.ReturnFifthMoveComponent
// (BlueprintCallable, BlueprintEvent)

void ALootPoint_C::ReturnFifthMoveComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "ReturnFifthMoveComponent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootPoint.LootPoint_C.ReturnFirstMoveComponent
// (BlueprintCallable, BlueprintEvent)

void ALootPoint_C::ReturnFirstMoveComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "ReturnFirstMoveComponent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootPoint.LootPoint_C.ReturnFourthMoveComponent
// (BlueprintCallable, BlueprintEvent)

void ALootPoint_C::ReturnFourthMoveComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "ReturnFourthMoveComponent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootPoint.LootPoint_C.ReturnSecondMoveComponent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          InputObject                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ALootPoint_C::ReturnSecondMoveComponent(class UObject* InputObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "ReturnSecondMoveComponent");

	Params::LootPoint_C_ReturnSecondMoveComponent Parms{};

	Parms.InputObject = InputObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LootPoint.LootPoint_C.ReturnSixthMoveComponent
// (BlueprintCallable, BlueprintEvent)

void ALootPoint_C::ReturnSixthMoveComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "ReturnSixthMoveComponent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootPoint.LootPoint_C.ReturnThirdMoveComponent
// (BlueprintCallable, BlueprintEvent)

void ALootPoint_C::ReturnThirdMoveComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "ReturnThirdMoveComponent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootPoint.LootPoint_C.RunOpenLogicAfterLockpicking
// (BlueprintCallable, BlueprintEvent)

void ALootPoint_C::RunOpenLogicAfterLockpicking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "RunOpenLogicAfterLockpicking");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootPoint.LootPoint_C.SetDefaultTransformDoors
// (Public, BlueprintCallable, BlueprintEvent)

void ALootPoint_C::SetDefaultTransformDoors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "SetDefaultTransformDoors");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootPoint.LootPoint_C.SetDestroyTimerState
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ALootPoint_C::SetDestroyTimerState(bool NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "SetDestroyTimerState");

	Params::LootPoint_C_SetDestroyTimerState Parms{};

	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LootPoint.LootPoint_C.SetEnableSmoothSync
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewEnable                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ALootPoint_C::SetEnableSmoothSync(bool NewEnable, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "SetEnableSmoothSync");

	Params::LootPoint_C_SetEnableSmoothSync Parms{};

	Parms.NewEnable = NewEnable;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function LootPoint.LootPoint_C.SetShining
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewShine                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ALootPoint_C::SetShining(bool NewShine)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "SetShining");

	Params::LootPoint_C_SetShining Parms{};

	Parms.NewShine = NewShine;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LootPoint.LootPoint_C.SetStaticCompsTransform
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ALootPoint_C::SetStaticCompsTransform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "SetStaticCompsTransform");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootPoint.LootPoint_C.ShineMeshes
// (BlueprintCallable, BlueprintEvent)

void ALootPoint_C::ShineMeshes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "ShineMeshes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootPoint.LootPoint_C.Stop Interact Sound
// (Public, BlueprintCallable, BlueprintEvent)

void ALootPoint_C::Stop_Interact_Sound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "Stop Interact Sound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootPoint.LootPoint_C.Stop Move Component
// (Public, BlueprintCallable, BlueprintEvent)

void ALootPoint_C::Stop_Move_Component()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "Stop Move Component");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootPoint.LootPoint_C.StopClose
// (Public, BlueprintCallable, BlueprintEvent)

void ALootPoint_C::StopClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "StopClose");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootPoint.LootPoint_C.StopMoveFifthComponent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          InputObject                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ALootPoint_C::StopMoveFifthComponent(class UObject* InputObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "StopMoveFifthComponent");

	Params::LootPoint_C_StopMoveFifthComponent Parms{};

	Parms.InputObject = InputObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LootPoint.LootPoint_C.StopMoveFirstComponent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          InputObject                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ALootPoint_C::StopMoveFirstComponent(class UObject* InputObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "StopMoveFirstComponent");

	Params::LootPoint_C_StopMoveFirstComponent Parms{};

	Parms.InputObject = InputObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LootPoint.LootPoint_C.StopMoveFourthComponent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          InputObject                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ALootPoint_C::StopMoveFourthComponent(class UObject* InputObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "StopMoveFourthComponent");

	Params::LootPoint_C_StopMoveFourthComponent Parms{};

	Parms.InputObject = InputObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LootPoint.LootPoint_C.StopMoveSecondComponent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          InputObject                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ALootPoint_C::StopMoveSecondComponent(class UObject* InputObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "StopMoveSecondComponent");

	Params::LootPoint_C_StopMoveSecondComponent Parms{};

	Parms.InputObject = InputObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LootPoint.LootPoint_C.StopMoveSixthComponent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          InputObject                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ALootPoint_C::StopMoveSixthComponent(class UObject* InputObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "StopMoveSixthComponent");

	Params::LootPoint_C_StopMoveSixthComponent Parms{};

	Parms.InputObject = InputObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LootPoint.LootPoint_C.StopMoveThirdComponent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          InputObject                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ALootPoint_C::StopMoveThirdComponent(class UObject* InputObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "StopMoveThirdComponent");

	Params::LootPoint_C_StopMoveThirdComponent Parms{};

	Parms.InputObject = InputObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LootPoint.LootPoint_C.Timeline_0__FinishedFunc
// (BlueprintEvent)

void ALootPoint_C::Timeline_0__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "Timeline_0__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootPoint.LootPoint_C.Timeline_0__UpdateFunc
// (BlueprintEvent)

void ALootPoint_C::Timeline_0__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "Timeline_0__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootPoint.LootPoint_C.ToggleVisibility
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<EObjectTypeQuery>                ObjectTypes                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ALootPoint_C::ToggleVisibility(const TArray<EObjectTypeQuery>& ObjectTypes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "ToggleVisibility");

	Params::LootPoint_C_ToggleVisibility Parms{};

	Parms.ObjectTypes = std::move(ObjectTypes);

	UObject::ProcessEvent(Func, &Parms);
}


// Function LootPoint.LootPoint_C.UnpauseTimerServer
// (BlueprintCallable, BlueprintEvent)

void ALootPoint_C::UnpauseTimerServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "UnpauseTimerServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootPoint.LootPoint_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ALootPoint_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootPoint.LootPoint_C.WidgetVisibility
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ALootPoint_C::WidgetVisibility(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootPoint_C", "WidgetVisibility");

	Params::LootPoint_C_WidgetVisibility Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}

}

