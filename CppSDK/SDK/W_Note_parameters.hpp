#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Note

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_Note.W_Note_C.ExecuteUbergraph_W_Note
// 0x0090 (0x0090 - 0x0000)
struct W_Note_C_ExecuteUbergraph_W_Note final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_Title;                          // 0x0008(0x0018)()
	class FText                                   K2Node_CustomEvent_Text;                           // 0x0020(0x0018)()
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0038(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasInputKeyJustPressed_ReturnValue;       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Note_C_ExecuteUbergraph_W_Note) == 0x000008, "Wrong alignment on W_Note_C_ExecuteUbergraph_W_Note");
static_assert(sizeof(W_Note_C_ExecuteUbergraph_W_Note) == 0x000090, "Wrong size on W_Note_C_ExecuteUbergraph_W_Note");
static_assert(offsetof(W_Note_C_ExecuteUbergraph_W_Note, EntryPoint) == 0x000000, "Member 'W_Note_C_ExecuteUbergraph_W_Note::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Note_C_ExecuteUbergraph_W_Note, K2Node_CustomEvent_Title) == 0x000008, "Member 'W_Note_C_ExecuteUbergraph_W_Note::K2Node_CustomEvent_Title' has a wrong offset!");
static_assert(offsetof(W_Note_C_ExecuteUbergraph_W_Note, K2Node_CustomEvent_Text) == 0x000020, "Member 'W_Note_C_ExecuteUbergraph_W_Note::K2Node_CustomEvent_Text' has a wrong offset!");
static_assert(offsetof(W_Note_C_ExecuteUbergraph_W_Note, K2Node_Event_MyGeometry) == 0x000038, "Member 'W_Note_C_ExecuteUbergraph_W_Note::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_Note_C_ExecuteUbergraph_W_Note, K2Node_Event_InDeltaTime) == 0x000070, "Member 'W_Note_C_ExecuteUbergraph_W_Note::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_Note_C_ExecuteUbergraph_W_Note, CallFunc_GetPlayerController_ReturnValue) == 0x000078, "Member 'W_Note_C_ExecuteUbergraph_W_Note::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Note_C_ExecuteUbergraph_W_Note, CallFunc_GetPlayerController_ReturnValue_1) == 0x000080, "Member 'W_Note_C_ExecuteUbergraph_W_Note::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Note_C_ExecuteUbergraph_W_Note, CallFunc_WasInputKeyJustPressed_ReturnValue) == 0x000088, "Member 'W_Note_C_ExecuteUbergraph_W_Note::CallFunc_WasInputKeyJustPressed_ReturnValue' has a wrong offset!");

// Function W_Note.W_Note_C.SetNote
// 0x0030 (0x0030 - 0x0000)
struct W_Note_C_SetNote final
{
public:
	class FText                                   Title;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Text;                                              // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_Note_C_SetNote) == 0x000008, "Wrong alignment on W_Note_C_SetNote");
static_assert(sizeof(W_Note_C_SetNote) == 0x000030, "Wrong size on W_Note_C_SetNote");
static_assert(offsetof(W_Note_C_SetNote, Title) == 0x000000, "Member 'W_Note_C_SetNote::Title' has a wrong offset!");
static_assert(offsetof(W_Note_C_SetNote, Text) == 0x000018, "Member 'W_Note_C_SetNote::Text' has a wrong offset!");

// Function W_Note.W_Note_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_Note_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Note_C_Tick) == 0x000004, "Wrong alignment on W_Note_C_Tick");
static_assert(sizeof(W_Note_C_Tick) == 0x00003C, "Wrong size on W_Note_C_Tick");
static_assert(offsetof(W_Note_C_Tick, MyGeometry) == 0x000000, "Member 'W_Note_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_Note_C_Tick, InDeltaTime) == 0x000038, "Member 'W_Note_C_Tick::InDeltaTime' has a wrong offset!");

}

