#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GS_TDB

#include "Basic.hpp"

#include "NPC_Structure_structs.hpp"
#include "E_Works_structs.hpp"
#include "FItemInfo_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "ContainerPickupsInfo_structs.hpp"
#include "PlayerStatesArray_structs.hpp"
#include "DayCycleState_structs.hpp"


namespace SDK::Params
{

// Function GS_TDB.GS_TDB_C.AddItem
// 0x0010 (0x0010 - 0x0000)
struct GS_TDB_C_AddItem final
{
public:
	class FString                                 ItemName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_TDB_C_AddItem) == 0x000008, "Wrong alignment on GS_TDB_C_AddItem");
static_assert(sizeof(GS_TDB_C_AddItem) == 0x000010, "Wrong size on GS_TDB_C_AddItem");
static_assert(offsetof(GS_TDB_C_AddItem, ItemName) == 0x000000, "Member 'GS_TDB_C_AddItem::ItemName' has a wrong offset!");

// Function GS_TDB.GS_TDB_C.AddItemCount
// 0x0018 (0x0018 - 0x0000)
struct GS_TDB_C_AddItemCount final
{
public:
	class FString                                 ItemName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_TDB_C_AddItemCount) == 0x000008, "Wrong alignment on GS_TDB_C_AddItemCount");
static_assert(sizeof(GS_TDB_C_AddItemCount) == 0x000018, "Wrong size on GS_TDB_C_AddItemCount");
static_assert(offsetof(GS_TDB_C_AddItemCount, ItemName) == 0x000000, "Member 'GS_TDB_C_AddItemCount::ItemName' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_AddItemCount, Count) == 0x000010, "Member 'GS_TDB_C_AddItemCount::Count' has a wrong offset!");

// Function GS_TDB.GS_TDB_C.AddToSquad
// 0x0090 (0x0090 - 0x0000)
struct GS_TDB_C_AddToSquad final
{
public:
	int32                                         Squad;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APS_TDB_C*                              PlayerState;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Added;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APS_TDB_C*>                      TempArray2;                                        // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class APS_TDB_C*>                      TempArr;                                           // 0x0028(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FPlayerStatesArray                     CallFunc_Map_Find_Value;                           // 0x0048(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayerStatesArray                     CallFunc_Map_Find_Value_1;                         // 0x0068(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayerStatesArray                     K2Node_SetFieldsInStruct_StructOut;                // 0x0080(0x0010)(HasGetValueTypeHash)
};
static_assert(alignof(GS_TDB_C_AddToSquad) == 0x000008, "Wrong alignment on GS_TDB_C_AddToSquad");
static_assert(sizeof(GS_TDB_C_AddToSquad) == 0x000090, "Wrong size on GS_TDB_C_AddToSquad");
static_assert(offsetof(GS_TDB_C_AddToSquad, Squad) == 0x000000, "Member 'GS_TDB_C_AddToSquad::Squad' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_AddToSquad, PlayerState) == 0x000008, "Member 'GS_TDB_C_AddToSquad::PlayerState' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_AddToSquad, Added) == 0x000010, "Member 'GS_TDB_C_AddToSquad::Added' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_AddToSquad, TempArray2) == 0x000018, "Member 'GS_TDB_C_AddToSquad::TempArray2' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_AddToSquad, TempArr) == 0x000028, "Member 'GS_TDB_C_AddToSquad::TempArr' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_AddToSquad, CallFunc_GetDisplayName_ReturnValue) == 0x000038, "Member 'GS_TDB_C_AddToSquad::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_AddToSquad, CallFunc_Map_Find_Value) == 0x000048, "Member 'GS_TDB_C_AddToSquad::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_AddToSquad, CallFunc_Map_Find_ReturnValue) == 0x000058, "Member 'GS_TDB_C_AddToSquad::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_AddToSquad, CallFunc_Array_AddUnique_ReturnValue) == 0x00005C, "Member 'GS_TDB_C_AddToSquad::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_AddToSquad, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'GS_TDB_C_AddToSquad::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_AddToSquad, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'GS_TDB_C_AddToSquad::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_AddToSquad, CallFunc_Map_Find_Value_1) == 0x000068, "Member 'GS_TDB_C_AddToSquad::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_AddToSquad, CallFunc_Map_Find_ReturnValue_1) == 0x000078, "Member 'GS_TDB_C_AddToSquad::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_AddToSquad, K2Node_SetFieldsInStruct_StructOut) == 0x000080, "Member 'GS_TDB_C_AddToSquad::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

// Function GS_TDB.GS_TDB_C.BunkerDone
// 0x0010 (0x0010 - 0x0000)
struct GS_TDB_C_BunkerDone final
{
public:
	class FString                                 Suka;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_TDB_C_BunkerDone) == 0x000008, "Wrong alignment on GS_TDB_C_BunkerDone");
static_assert(sizeof(GS_TDB_C_BunkerDone) == 0x000010, "Wrong size on GS_TDB_C_BunkerDone");
static_assert(offsetof(GS_TDB_C_BunkerDone, Suka) == 0x000000, "Member 'GS_TDB_C_BunkerDone::Suka' has a wrong offset!");

// Function GS_TDB.GS_TDB_C.BunkerLoaded
// 0x0008 (0x0008 - 0x0000)
struct GS_TDB_C_BunkerLoaded final
{
public:
	class ABunkerElevatorReciever_C*              Elevator;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_TDB_C_BunkerLoaded) == 0x000008, "Wrong alignment on GS_TDB_C_BunkerLoaded");
static_assert(sizeof(GS_TDB_C_BunkerLoaded) == 0x000008, "Wrong size on GS_TDB_C_BunkerLoaded");
static_assert(offsetof(GS_TDB_C_BunkerLoaded, Elevator) == 0x000000, "Member 'GS_TDB_C_BunkerLoaded::Elevator' has a wrong offset!");

// Function GS_TDB.GS_TDB_C.CalculateServerTime
// 0x0020 (0x0020 - 0x0000)
struct GS_TDB_C_CalculateServerTime final
{
public:
	struct FDateTime                              CallFunc_UtcNow_ReturnValue;                       // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDay_ReturnValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDay_ReturnValue_1;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_UtcNow_ReturnValue_1;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_TDB_C_CalculateServerTime) == 0x000008, "Wrong alignment on GS_TDB_C_CalculateServerTime");
static_assert(sizeof(GS_TDB_C_CalculateServerTime) == 0x000020, "Wrong size on GS_TDB_C_CalculateServerTime");
static_assert(offsetof(GS_TDB_C_CalculateServerTime, CallFunc_UtcNow_ReturnValue) == 0x000000, "Member 'GS_TDB_C_CalculateServerTime::CallFunc_UtcNow_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_CalculateServerTime, CallFunc_GetDay_ReturnValue) == 0x000008, "Member 'GS_TDB_C_CalculateServerTime::CallFunc_GetDay_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_CalculateServerTime, CallFunc_GetDay_ReturnValue_1) == 0x00000C, "Member 'GS_TDB_C_CalculateServerTime::CallFunc_GetDay_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_CalculateServerTime, CallFunc_UtcNow_ReturnValue_1) == 0x000010, "Member 'GS_TDB_C_CalculateServerTime::CallFunc_UtcNow_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_CalculateServerTime, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000018, "Member 'GS_TDB_C_CalculateServerTime::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function GS_TDB.GS_TDB_C.ChangeClientQuest
// 0x0028 (0x0028 - 0x0000)
struct GS_TDB_C_ChangeClientQuest final
{
public:
	class UQuestV2_C*                             Quest;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC;                  // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_TDB_C_ChangeClientQuest) == 0x000008, "Wrong alignment on GS_TDB_C_ChangeClientQuest");
static_assert(sizeof(GS_TDB_C_ChangeClientQuest) == 0x000028, "Wrong size on GS_TDB_C_ChangeClientQuest");
static_assert(offsetof(GS_TDB_C_ChangeClientQuest, Quest) == 0x000000, "Member 'GS_TDB_C_ChangeClientQuest::Quest' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ChangeClientQuest, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'GS_TDB_C_ChangeClientQuest::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ChangeClientQuest, K2Node_DynamicCast_AsBPI_Surv_PC) == 0x000010, "Member 'GS_TDB_C_ChangeClientQuest::K2Node_DynamicCast_AsBPI_Surv_PC' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ChangeClientQuest, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'GS_TDB_C_ChangeClientQuest::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GS_TDB.GS_TDB_C.ChangeClientQuestV2
// 0x0028 (0x0028 - 0x0000)
struct GS_TDB_C_ChangeClientQuestV2 final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvPC_C*                              K2Node_DynamicCast_AsSurv_PC;                      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SurvPC_C>         CallFunc_SwitchQuest_self_CastInput;               // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_TDB_C_ChangeClientQuestV2) == 0x000008, "Wrong alignment on GS_TDB_C_ChangeClientQuestV2");
static_assert(sizeof(GS_TDB_C_ChangeClientQuestV2) == 0x000028, "Wrong size on GS_TDB_C_ChangeClientQuestV2");
static_assert(offsetof(GS_TDB_C_ChangeClientQuestV2, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'GS_TDB_C_ChangeClientQuestV2::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ChangeClientQuestV2, K2Node_DynamicCast_AsSurv_PC) == 0x000008, "Member 'GS_TDB_C_ChangeClientQuestV2::K2Node_DynamicCast_AsSurv_PC' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ChangeClientQuestV2, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'GS_TDB_C_ChangeClientQuestV2::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ChangeClientQuestV2, CallFunc_SwitchQuest_self_CastInput) == 0x000018, "Member 'GS_TDB_C_ChangeClientQuestV2::CallFunc_SwitchQuest_self_CastInput' has a wrong offset!");

// Function GS_TDB.GS_TDB_C.ChangeQuestHintMulti
// 0x0010 (0x0010 - 0x0000)
struct GS_TDB_C_ChangeQuestHintMulti final
{
public:
	class FString                                 Hint;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_TDB_C_ChangeQuestHintMulti) == 0x000008, "Wrong alignment on GS_TDB_C_ChangeQuestHintMulti");
static_assert(sizeof(GS_TDB_C_ChangeQuestHintMulti) == 0x000010, "Wrong size on GS_TDB_C_ChangeQuestHintMulti");
static_assert(offsetof(GS_TDB_C_ChangeQuestHintMulti, Hint) == 0x000000, "Member 'GS_TDB_C_ChangeQuestHintMulti::Hint' has a wrong offset!");

// Function GS_TDB.GS_TDB_C.CreateBunkerSystem
// 0x0008 (0x0008 - 0x0000)
struct GS_TDB_C_CreateBunkerSystem final
{
public:
	class UBunkerSystem_C*                        CallFunc_SpawnObject_ReturnValue;                  // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_TDB_C_CreateBunkerSystem) == 0x000008, "Wrong alignment on GS_TDB_C_CreateBunkerSystem");
static_assert(sizeof(GS_TDB_C_CreateBunkerSystem) == 0x000008, "Wrong size on GS_TDB_C_CreateBunkerSystem");
static_assert(offsetof(GS_TDB_C_CreateBunkerSystem, CallFunc_SpawnObject_ReturnValue) == 0x000000, "Member 'GS_TDB_C_CreateBunkerSystem::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");

// Function GS_TDB.GS_TDB_C.CreateQuestSystem
// 0x0008 (0x0008 - 0x0000)
struct GS_TDB_C_CreateQuestSystem final
{
public:
	class UQuestSystemV3_C*                       CallFunc_SpawnObject_ReturnValue;                  // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_TDB_C_CreateQuestSystem) == 0x000008, "Wrong alignment on GS_TDB_C_CreateQuestSystem");
static_assert(sizeof(GS_TDB_C_CreateQuestSystem) == 0x000008, "Wrong size on GS_TDB_C_CreateQuestSystem");
static_assert(offsetof(GS_TDB_C_CreateQuestSystem, CallFunc_SpawnObject_ReturnValue) == 0x000000, "Member 'GS_TDB_C_CreateQuestSystem::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");

// Function GS_TDB.GS_TDB_C.DayStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct GS_TDB_C_DayStateChanged__DelegateSignature final
{
public:
	EDayCycleState                                NewDayState;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_TDB_C_DayStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on GS_TDB_C_DayStateChanged__DelegateSignature");
static_assert(sizeof(GS_TDB_C_DayStateChanged__DelegateSignature) == 0x000001, "Wrong size on GS_TDB_C_DayStateChanged__DelegateSignature");
static_assert(offsetof(GS_TDB_C_DayStateChanged__DelegateSignature, NewDayState) == 0x000000, "Member 'GS_TDB_C_DayStateChanged__DelegateSignature::NewDayState' has a wrong offset!");

// Function GS_TDB.GS_TDB_C.EndPLay_Event
// 0x0010 (0x0010 - 0x0000)
struct GS_TDB_C_EndPLay_Event final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                EndPlayReason;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_TDB_C_EndPLay_Event) == 0x000008, "Wrong alignment on GS_TDB_C_EndPLay_Event");
static_assert(sizeof(GS_TDB_C_EndPLay_Event) == 0x000010, "Wrong size on GS_TDB_C_EndPLay_Event");
static_assert(offsetof(GS_TDB_C_EndPLay_Event, Actor) == 0x000000, "Member 'GS_TDB_C_EndPLay_Event::Actor' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_EndPLay_Event, EndPlayReason) == 0x000008, "Member 'GS_TDB_C_EndPLay_Event::EndPlayReason' has a wrong offset!");

// Function GS_TDB.GS_TDB_C.ExecuteUbergraph_GS_TDB
// 0x0990 (0x0990 - 0x0000)
struct GS_TDB_C_ExecuteUbergraph_GS_TDB final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_ID;                                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UQuestV2_C*                             CallFunc_GetQuestByID_Quest;                       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_BunkerID;                             // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasSideBranch_Has;                        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_QuestTrigger;                         // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABunkerElevatorReciever_C*              K2Node_CustomEvent_Elevator;                       // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Hint;                           // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_suka;                           // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FVector>                        K2Node_CustomEvent_Markers;                        // 0x0090(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_AmbientController_C*                CallFunc_GetActorOfClass_ReturnValue;              // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_ItemName_1;                     // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow;           // 0x0108(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_329[0x7];                                      // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FContainerPickupsInfo>          K2Node_MakeArray_Array;                            // 0x0330(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_JSAddItem_Ad;                             // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341[0x7];                                      // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_ItemName;                       // 0x0348(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Count;                          // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C[0x4];                                      // 0x035C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x0360(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player_1;            // 0x0370(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_379[0x7];                                      // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0380(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A1[0x7];                                      // 0x05A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FContainerPickupsInfo>          K2Node_MakeArray_Array_1;                          // 0x05A8(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_JSAddItem_Ad_1;                           // 0x05B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B9[0x3];                                      // 0x05B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x05BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             K2Node_CustomEvent_Sound;                          // 0x05C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x05C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player_2;            // 0x05D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x05D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D9[0x7];                                      // 0x05D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODAudioComponent*                    CallFunc_FMODPlayEventAttached_ReturnValue;        // 0x05E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsOpened;                             // 0x05E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E9[0x7];                                      // 0x05E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNPC_Structure                         CallFunc_GetDataTableRowFromName_OutRow_2;         // 0x05F0(0x0110)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_2;    // 0x0700(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_701[0x7];                                      // 0x0701(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x0708(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0710(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0770(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0778(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77C[0x4];                                      // 0x077C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABunkerTeleport_C*                      CallFunc_FinishSpawningActor_ReturnValue;          // 0x0780(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0788(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_789[0x7];                                      // 0x0789(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Command;                        // 0x0790(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_2;         // 0x07A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CampClient_C*                       CallFunc_GetComponentByClass_ReturnValue;          // 0x07A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UQuestV2_C*                             CallFunc_GetNextQuest_NextQuest;                   // 0x07B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasNextQuest_HasNext;                     // 0x07B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B9[0x7];                                      // 0x07B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Player;                               // 0x07C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_QuestZone_C*                        K2Node_Event_QuestZone;                            // 0x07C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_ActorRef;                             // 0x07D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x07D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7DC[0x4];                                      // 0x07DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x07E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x07F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0800(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_804[0x4];                                      // 0x0804(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_QuestItemsSpawnZone_C*              K2Node_Event_LootZpawnZone;                        // 0x0808(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_QuestZone_Towers_C*                 K2Node_Event_Zone;                                 // 0x0810(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0818(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EDayCycleState NewDayState)>   K2Node_CreateDelegate_OutputDelegate;              // 0x081C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82C[0x4];                                      // 0x082C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_QuestZone_Towers_C*                 CallFunc_Array_Get_Item;                           // 0x0830(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0838(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x083C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_83D[0x3];                                      // 0x083D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0840(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDayCycleState                                K2Node_CustomEvent_NewDayState;                    // 0x0844(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0845(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0846(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_847[0x1];                                      // 0x0847(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0848(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0850(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0860(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UQuest*                                 CallFunc_Array_Get_Item_1;                         // 0x0870(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0878(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0879(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87A[0x2];                                      // 0x087A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x087C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0880(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ATDB_GameMode_C*                        K2Node_DynamicCast_AsTDB_Game_Mode;                // 0x0888(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0890(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_891[0x7];                                      // 0x0891(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AZombieManager_C*                       CallFunc_GetZombieManager_ZombieManager;           // 0x0898(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Sleeping_Zombies_Amount_SleepingZombiesAmount; // 0x08A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActiveZombiesAmount_ZombiesAmount;     // 0x08A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ASurvivalPlayer_V2_C*>           CallFunc_GetAllActorsOfClass_OutActors;            // 0x08A8(0x0010)(ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x08B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x08B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8BA[0x6];                                      // 0x08BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x08C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_4;               // 0x08D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D1[0x7];                                      // 0x08D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x08D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x08E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8EC[0x4];                                      // 0x08EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuest*                                 CallFunc_Array_Get_Item_2;                         // 0x08F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x08F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0908(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_90C[0x4];                                      // 0x090C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0910(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	const class UQuestCustomData*                 CallFunc_GetCustomData_ReturnValue;                // 0x0920(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UQuestData_C*                     K2Node_DynamicCast_AsQuest_Data;                   // 0x0928(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0930(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0931(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_932[0x2];                                      // 0x0932(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* Actor, EEndPlayReason EndPlayReason)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0934(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0944(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0948(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_949[0x3];                                      // 0x0949(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x094C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Actor;                          // 0x0950(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_CustomEvent_EndPlayReason;                  // 0x0958(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_959[0x7];                                      // 0x0959(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0960(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0970(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_971[0x7];                                      // 0x0971(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0978(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0988(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_TDB_C_ExecuteUbergraph_GS_TDB) == 0x000010, "Wrong alignment on GS_TDB_C_ExecuteUbergraph_GS_TDB");
static_assert(sizeof(GS_TDB_C_ExecuteUbergraph_GS_TDB) == 0x000990, "Wrong size on GS_TDB_C_ExecuteUbergraph_GS_TDB");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, EntryPoint) == 0x000000, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::EntryPoint' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, K2Node_Event_ID) == 0x000004, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::K2Node_Event_ID' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_GetQuestByID_Quest) == 0x000008, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_GetQuestByID_Quest' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, K2Node_Event_BunkerID) == 0x000010, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::K2Node_Event_BunkerID' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_HasSideBranch_Has) == 0x000020, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_HasSideBranch_Has' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, K2Node_Event_QuestTrigger) == 0x000028, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::K2Node_Event_QuestTrigger' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000039, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, Temp_int_Loop_Counter_Variable_1) == 0x000048, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, K2Node_CustomEvent_Elevator) == 0x000050, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::K2Node_CustomEvent_Elevator' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_Add_IntInt_ReturnValue_1) == 0x000058, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, K2Node_CustomEvent_Hint) == 0x000060, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::K2Node_CustomEvent_Hint' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, K2Node_CustomEvent_suka) == 0x000070, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::K2Node_CustomEvent_suka' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_Concat_StrStr_ReturnValue) == 0x000080, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, K2Node_CustomEvent_Markers) == 0x000090, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::K2Node_CustomEvent_Markers' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_HasAuthority_ReturnValue) == 0x0000A0, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_Conv_IntToString_ReturnValue) == 0x0000A8, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000B8, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_GetActorOfClass_ReturnValue) == 0x0000C8, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_IsValid_ReturnValue_1) == 0x0000D0, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, K2Node_CustomEvent_ItemName_1) == 0x0000D8, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::K2Node_CustomEvent_ItemName_1' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_GetPlayerCharacter_ReturnValue) == 0x0000E8, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_Conv_StringToName_ReturnValue) == 0x0000F0, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, K2Node_DynamicCast_AsSurvival_Player) == 0x0000F8, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, K2Node_DynamicCast_bSuccess) == 0x000100, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_GetDataTableRowFromName_OutRow) == 0x000108, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000328, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, K2Node_MakeArray_Array) == 0x000330, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_JSAddItem_Ad) == 0x000340, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_JSAddItem_Ad' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, K2Node_CustomEvent_ItemName) == 0x000348, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::K2Node_CustomEvent_ItemName' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, K2Node_CustomEvent_Count) == 0x000358, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::K2Node_CustomEvent_Count' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x000360, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000368, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, K2Node_DynamicCast_AsSurvival_Player_1) == 0x000370, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::K2Node_DynamicCast_AsSurvival_Player_1' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, K2Node_DynamicCast_bSuccess_1) == 0x000378, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000380, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x0005A0, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, K2Node_MakeArray_Array_1) == 0x0005A8, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_JSAddItem_Ad_1) == 0x0005B8, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_JSAddItem_Ad_1' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, K2Node_Event_DeltaSeconds) == 0x0005BC, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, K2Node_CustomEvent_Sound) == 0x0005C0, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::K2Node_CustomEvent_Sound' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_GetPlayerPawn_ReturnValue) == 0x0005C8, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, K2Node_DynamicCast_AsSurvival_Player_2) == 0x0005D0, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::K2Node_DynamicCast_AsSurvival_Player_2' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, K2Node_DynamicCast_bSuccess_2) == 0x0005D8, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_FMODPlayEventAttached_ReturnValue) == 0x0005E0, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_FMODPlayEventAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, K2Node_Event_IsOpened) == 0x0005E8, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::K2Node_Event_IsOpened' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_GetDataTableRowFromName_OutRow_2) == 0x0005F0, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_GetDataTableRowFromName_OutRow_2' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_GetDataTableRowFromName_ReturnValue_2) == 0x000700, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_GetDataTableRowFromName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x000708, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_GetTransform_ReturnValue) == 0x000710, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000770, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_Array_Length_ReturnValue) == 0x000778, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_FinishSpawningActor_ReturnValue) == 0x000780, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_Less_IntInt_ReturnValue) == 0x000788, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, K2Node_CustomEvent_Command) == 0x000790, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::K2Node_CustomEvent_Command' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_GetPlayerCharacter_ReturnValue_2) == 0x0007A0, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_GetPlayerCharacter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_GetComponentByClass_ReturnValue) == 0x0007A8, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_GetNextQuest_NextQuest) == 0x0007B0, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_GetNextQuest_NextQuest' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_HasNextQuest_HasNext) == 0x0007B8, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_HasNextQuest_HasNext' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, K2Node_Event_Player) == 0x0007C0, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::K2Node_Event_Player' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, K2Node_Event_QuestZone) == 0x0007C8, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::K2Node_Event_QuestZone' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, K2Node_Event_ActorRef) == 0x0007D0, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::K2Node_Event_ActorRef' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_Array_Add_ReturnValue) == 0x0007D8, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_GetDisplayName_ReturnValue) == 0x0007E0, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0007F0, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_Array_Add_ReturnValue_1) == 0x000800, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, K2Node_Event_LootZpawnZone) == 0x000808, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::K2Node_Event_LootZpawnZone' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, K2Node_Event_Zone) == 0x000810, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::K2Node_Event_Zone' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_Array_Add_ReturnValue_2) == 0x000818, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, K2Node_CreateDelegate_OutputDelegate) == 0x00081C, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_Array_Get_Item) == 0x000830, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_Array_Length_ReturnValue_1) == 0x000838, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_Less_IntInt_ReturnValue_1) == 0x00083C, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_Array_Add_ReturnValue_3) == 0x000840, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, K2Node_CustomEvent_NewDayState) == 0x000844, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::K2Node_CustomEvent_NewDayState' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_HasAuthority_ReturnValue_1) == 0x000845, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_HasAuthority_ReturnValue_2) == 0x000846, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000848, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000850, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000860, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_Array_Get_Item_1) == 0x000870, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_IsValid_ReturnValue_2) == 0x000878, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000879, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_Array_Add_ReturnValue_4) == 0x00087C, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_GetGameMode_ReturnValue) == 0x000880, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, K2Node_DynamicCast_AsTDB_Game_Mode) == 0x000888, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::K2Node_DynamicCast_AsTDB_Game_Mode' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, K2Node_DynamicCast_bSuccess_3) == 0x000890, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_GetZombieManager_ZombieManager) == 0x000898, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_GetZombieManager_ZombieManager' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_Get_Sleeping_Zombies_Amount_SleepingZombiesAmount) == 0x0008A0, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_Get_Sleeping_Zombies_Amount_SleepingZombiesAmount' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_GetActiveZombiesAmount_ZombiesAmount) == 0x0008A4, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_GetActiveZombiesAmount_ZombiesAmount' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_GetAllActorsOfClass_OutActors) == 0x0008A8, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_Not_PreBool_ReturnValue) == 0x0008B8, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_HasAuthority_ReturnValue_3) == 0x0008B9, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_Conv_IntToString_ReturnValue_1) == 0x0008C0, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_HasAuthority_ReturnValue_4) == 0x0008D0, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_HasAuthority_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0008D8, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, Temp_int_Array_Index_Variable_1) == 0x0008E8, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_Array_Get_Item_2) == 0x0008F0, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_Conv_IntToString_ReturnValue_2) == 0x0008F8, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_Array_AddUnique_ReturnValue) == 0x000908, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000910, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_GetCustomData_ReturnValue) == 0x000920, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_GetCustomData_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, K2Node_DynamicCast_AsQuest_Data) == 0x000928, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::K2Node_DynamicCast_AsQuest_Data' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, K2Node_DynamicCast_bSuccess_4) == 0x000930, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000931, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, K2Node_CreateDelegate_OutputDelegate_1) == 0x000934, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_Add_IntInt_ReturnValue_2) == 0x000944, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_Less_IntInt_ReturnValue_2) == 0x000948, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_SelectInt_ReturnValue) == 0x00094C, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, K2Node_CustomEvent_Actor) == 0x000950, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::K2Node_CustomEvent_Actor' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, K2Node_CustomEvent_EndPlayReason) == 0x000958, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::K2Node_CustomEvent_EndPlayReason' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_GetDisplayName_ReturnValue_1) == 0x000960, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_Array_RemoveItem_ReturnValue) == 0x000970, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000978, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ExecuteUbergraph_GS_TDB, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000988, "Member 'GS_TDB_C_ExecuteUbergraph_GS_TDB::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function GS_TDB.GS_TDB_C.fire
// 0x0010 (0x0010 - 0x0000)
struct GS_TDB_C_Fire final
{
public:
	class FString                                 Command;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_TDB_C_Fire) == 0x000008, "Wrong alignment on GS_TDB_C_Fire");
static_assert(sizeof(GS_TDB_C_Fire) == 0x000010, "Wrong size on GS_TDB_C_Fire");
static_assert(offsetof(GS_TDB_C_Fire, Command) == 0x000000, "Member 'GS_TDB_C_Fire::Command' has a wrong offset!");

// Function GS_TDB.GS_TDB_C.GameStateTimers
// 0x0020 (0x0020 - 0x0000)
struct GS_TDB_C_GameStateTimers final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_TDB_C_GameStateTimers) == 0x000008, "Wrong alignment on GS_TDB_C_GameStateTimers");
static_assert(sizeof(GS_TDB_C_GameStateTimers) == 0x000020, "Wrong size on GS_TDB_C_GameStateTimers");
static_assert(offsetof(GS_TDB_C_GameStateTimers, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'GS_TDB_C_GameStateTimers::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GameStateTimers, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'GS_TDB_C_GameStateTimers::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GameStateTimers, CallFunc_K2_SetTimer_ReturnValue) == 0x000018, "Member 'GS_TDB_C_GameStateTimers::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");

// Function GS_TDB.GS_TDB_C.GenerateNewSquad
// 0x0028 (0x0028 - 0x0000)
struct GS_TDB_C_GenerateNewSquad final
{
public:
	class APS_TDB_C*                              SurvPC;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         SquadId;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPlayerStatesArray                     Temp_struct_Variable;                              // 0x0010(0x0010)(ConstParm, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_TDB_C_GenerateNewSquad) == 0x000008, "Wrong alignment on GS_TDB_C_GenerateNewSquad");
static_assert(sizeof(GS_TDB_C_GenerateNewSquad) == 0x000028, "Wrong size on GS_TDB_C_GenerateNewSquad");
static_assert(offsetof(GS_TDB_C_GenerateNewSquad, SurvPC) == 0x000000, "Member 'GS_TDB_C_GenerateNewSquad::SurvPC' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GenerateNewSquad, SquadId) == 0x000008, "Member 'GS_TDB_C_GenerateNewSquad::SquadId' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GenerateNewSquad, Temp_int_Variable) == 0x00000C, "Member 'GS_TDB_C_GenerateNewSquad::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GenerateNewSquad, Temp_struct_Variable) == 0x000010, "Member 'GS_TDB_C_GenerateNewSquad::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GenerateNewSquad, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'GS_TDB_C_GenerateNewSquad::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function GS_TDB.GS_TDB_C.GetBunkerSystem
// 0x0008 (0x0008 - 0x0000)
struct GS_TDB_C_GetBunkerSystem final
{
public:
	class UBunkerSystem_C*                        Param_BunkerSystem;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_TDB_C_GetBunkerSystem) == 0x000008, "Wrong alignment on GS_TDB_C_GetBunkerSystem");
static_assert(sizeof(GS_TDB_C_GetBunkerSystem) == 0x000008, "Wrong size on GS_TDB_C_GetBunkerSystem");
static_assert(offsetof(GS_TDB_C_GetBunkerSystem, Param_BunkerSystem) == 0x000000, "Member 'GS_TDB_C_GetBunkerSystem::Param_BunkerSystem' has a wrong offset!");

// Function GS_TDB.GS_TDB_C.GetExchangeRate
// 0x00A0 (0x00A0 - 0x0000)
struct GS_TDB_C_GetExchangeRate final
{
public:
	double                                        TodayExchangeRate;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PrevExchangeRate;                                  // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GetDays;                                           // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRandomStream                          Yesterday;                                         // 0x0014(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor)
	struct FRandomStream                          Today;                                             // 0x001C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Year;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Month;                      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Day;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Hour;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Minute;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Second;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Millisecond;                // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue; // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_DaysInYear_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRandomStream                          CallFunc_MakeRandomStream_ReturnValue;             // 0x006C(0x0008)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_DaysInMonth_ReturnValue;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRandomStream                          CallFunc_MakeRandomStream_ReturnValue_1;           // 0x0080(0x0008)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue_1; // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_TodayExchangeRate_ImplicitCast; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_PrevExchangeRate_ImplicitCast; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_TDB_C_GetExchangeRate) == 0x000008, "Wrong alignment on GS_TDB_C_GetExchangeRate");
static_assert(sizeof(GS_TDB_C_GetExchangeRate) == 0x0000A0, "Wrong size on GS_TDB_C_GetExchangeRate");
static_assert(offsetof(GS_TDB_C_GetExchangeRate, TodayExchangeRate) == 0x000000, "Member 'GS_TDB_C_GetExchangeRate::TodayExchangeRate' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetExchangeRate, PrevExchangeRate) == 0x000008, "Member 'GS_TDB_C_GetExchangeRate::PrevExchangeRate' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetExchangeRate, GetDays) == 0x000010, "Member 'GS_TDB_C_GetExchangeRate::GetDays' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetExchangeRate, Yesterday) == 0x000014, "Member 'GS_TDB_C_GetExchangeRate::Yesterday' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetExchangeRate, Today) == 0x00001C, "Member 'GS_TDB_C_GetExchangeRate::Today' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetExchangeRate, Temp_int_Variable) == 0x000024, "Member 'GS_TDB_C_GetExchangeRate::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetExchangeRate, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'GS_TDB_C_GetExchangeRate::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetExchangeRate, CallFunc_BreakDateTime_Year) == 0x00002C, "Member 'GS_TDB_C_GetExchangeRate::CallFunc_BreakDateTime_Year' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetExchangeRate, CallFunc_BreakDateTime_Month) == 0x000030, "Member 'GS_TDB_C_GetExchangeRate::CallFunc_BreakDateTime_Month' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetExchangeRate, CallFunc_BreakDateTime_Day) == 0x000034, "Member 'GS_TDB_C_GetExchangeRate::CallFunc_BreakDateTime_Day' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetExchangeRate, CallFunc_BreakDateTime_Hour) == 0x000038, "Member 'GS_TDB_C_GetExchangeRate::CallFunc_BreakDateTime_Hour' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetExchangeRate, CallFunc_BreakDateTime_Minute) == 0x00003C, "Member 'GS_TDB_C_GetExchangeRate::CallFunc_BreakDateTime_Minute' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetExchangeRate, CallFunc_BreakDateTime_Second) == 0x000040, "Member 'GS_TDB_C_GetExchangeRate::CallFunc_BreakDateTime_Second' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetExchangeRate, CallFunc_BreakDateTime_Millisecond) == 0x000044, "Member 'GS_TDB_C_GetExchangeRate::CallFunc_BreakDateTime_Millisecond' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetExchangeRate, CallFunc_RandomFloatInRangeFromStream_ReturnValue) == 0x000048, "Member 'GS_TDB_C_GetExchangeRate::CallFunc_RandomFloatInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetExchangeRate, CallFunc_Add_IntInt_ReturnValue_1) == 0x00004C, "Member 'GS_TDB_C_GetExchangeRate::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetExchangeRate, CallFunc_Subtract_IntInt_ReturnValue) == 0x000050, "Member 'GS_TDB_C_GetExchangeRate::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetExchangeRate, CallFunc_Add_IntInt_ReturnValue_2) == 0x000054, "Member 'GS_TDB_C_GetExchangeRate::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetExchangeRate, CallFunc_Greater_IntInt_ReturnValue) == 0x000058, "Member 'GS_TDB_C_GetExchangeRate::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetExchangeRate, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000059, "Member 'GS_TDB_C_GetExchangeRate::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetExchangeRate, CallFunc_Multiply_IntInt_ReturnValue) == 0x00005C, "Member 'GS_TDB_C_GetExchangeRate::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetExchangeRate, CallFunc_DaysInYear_ReturnValue) == 0x000060, "Member 'GS_TDB_C_GetExchangeRate::CallFunc_DaysInYear_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetExchangeRate, CallFunc_Add_IntInt_ReturnValue_3) == 0x000064, "Member 'GS_TDB_C_GetExchangeRate::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetExchangeRate, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'GS_TDB_C_GetExchangeRate::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetExchangeRate, CallFunc_MakeRandomStream_ReturnValue) == 0x00006C, "Member 'GS_TDB_C_GetExchangeRate::CallFunc_MakeRandomStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetExchangeRate, CallFunc_SelectInt_ReturnValue) == 0x000074, "Member 'GS_TDB_C_GetExchangeRate::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetExchangeRate, CallFunc_Add_IntInt_ReturnValue_4) == 0x000078, "Member 'GS_TDB_C_GetExchangeRate::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetExchangeRate, CallFunc_DaysInMonth_ReturnValue) == 0x00007C, "Member 'GS_TDB_C_GetExchangeRate::CallFunc_DaysInMonth_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetExchangeRate, CallFunc_MakeRandomStream_ReturnValue_1) == 0x000080, "Member 'GS_TDB_C_GetExchangeRate::CallFunc_MakeRandomStream_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetExchangeRate, CallFunc_Add_IntInt_ReturnValue_5) == 0x000088, "Member 'GS_TDB_C_GetExchangeRate::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetExchangeRate, CallFunc_RandomFloatInRangeFromStream_ReturnValue_1) == 0x00008C, "Member 'GS_TDB_C_GetExchangeRate::CallFunc_RandomFloatInRangeFromStream_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetExchangeRate, K2Node_FunctionResult_TodayExchangeRate_ImplicitCast) == 0x000090, "Member 'GS_TDB_C_GetExchangeRate::K2Node_FunctionResult_TodayExchangeRate_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetExchangeRate, K2Node_FunctionResult_PrevExchangeRate_ImplicitCast) == 0x000098, "Member 'GS_TDB_C_GetExchangeRate::K2Node_FunctionResult_PrevExchangeRate_ImplicitCast' has a wrong offset!");

// Function GS_TDB.GS_TDB_C.GetLootZonesByQuests
// 0x0090 (0x0090 - 0x0000)
struct GS_TDB_C_GetLootZonesByQuests final
{
public:
	TArray<class UQuest*>                         Quests;                                            // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class ABP_QuestItemsSpawnZone_C*>      Zones;                                             // 0x0010(0x0010)(Parm, OutParm)
	TArray<class ABP_QuestItemsSpawnZone_C*>      QuestZones;                                        // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_QuestItemsSpawnZone_C*              CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UQuest*>                         CallFunc_Set_ToArray_Result;                       // 0x0060(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuest*                                 CallFunc_Array_Get_Item_1;                         // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_TDB_C_GetLootZonesByQuests) == 0x000008, "Wrong alignment on GS_TDB_C_GetLootZonesByQuests");
static_assert(sizeof(GS_TDB_C_GetLootZonesByQuests) == 0x000090, "Wrong size on GS_TDB_C_GetLootZonesByQuests");
static_assert(offsetof(GS_TDB_C_GetLootZonesByQuests, Quests) == 0x000000, "Member 'GS_TDB_C_GetLootZonesByQuests::Quests' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetLootZonesByQuests, Zones) == 0x000010, "Member 'GS_TDB_C_GetLootZonesByQuests::Zones' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetLootZonesByQuests, QuestZones) == 0x000020, "Member 'GS_TDB_C_GetLootZonesByQuests::QuestZones' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetLootZonesByQuests, Temp_bool_True_if_break_was_hit_Variable) == 0x000030, "Member 'GS_TDB_C_GetLootZonesByQuests::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetLootZonesByQuests, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'GS_TDB_C_GetLootZonesByQuests::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetLootZonesByQuests, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'GS_TDB_C_GetLootZonesByQuests::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetLootZonesByQuests, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'GS_TDB_C_GetLootZonesByQuests::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetLootZonesByQuests, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'GS_TDB_C_GetLootZonesByQuests::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetLootZonesByQuests, Temp_int_Array_Index_Variable_1) == 0x000040, "Member 'GS_TDB_C_GetLootZonesByQuests::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetLootZonesByQuests, Temp_int_Loop_Counter_Variable_1) == 0x000044, "Member 'GS_TDB_C_GetLootZonesByQuests::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetLootZonesByQuests, CallFunc_Add_IntInt_ReturnValue_1) == 0x000048, "Member 'GS_TDB_C_GetLootZonesByQuests::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetLootZonesByQuests, CallFunc_Array_Get_Item) == 0x000050, "Member 'GS_TDB_C_GetLootZonesByQuests::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetLootZonesByQuests, CallFunc_Array_Add_ReturnValue) == 0x000058, "Member 'GS_TDB_C_GetLootZonesByQuests::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetLootZonesByQuests, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'GS_TDB_C_GetLootZonesByQuests::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetLootZonesByQuests, CallFunc_Set_ToArray_Result) == 0x000060, "Member 'GS_TDB_C_GetLootZonesByQuests::CallFunc_Set_ToArray_Result' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetLootZonesByQuests, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'GS_TDB_C_GetLootZonesByQuests::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetLootZonesByQuests, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'GS_TDB_C_GetLootZonesByQuests::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetLootZonesByQuests, CallFunc_Array_Contains_ReturnValue) == 0x000080, "Member 'GS_TDB_C_GetLootZonesByQuests::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetLootZonesByQuests, CallFunc_Array_Length_ReturnValue_1) == 0x000084, "Member 'GS_TDB_C_GetLootZonesByQuests::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetLootZonesByQuests, CallFunc_Less_IntInt_ReturnValue_1) == 0x000088, "Member 'GS_TDB_C_GetLootZonesByQuests::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetLootZonesByQuests, CallFunc_BooleanAND_ReturnValue) == 0x000089, "Member 'GS_TDB_C_GetLootZonesByQuests::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function GS_TDB.GS_TDB_C.GetPlayerController
// 0x0010 (0x0010 - 0x0000)
struct GS_TDB_C_GetPlayerController final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_TDB_C_GetPlayerController) == 0x000008, "Wrong alignment on GS_TDB_C_GetPlayerController");
static_assert(sizeof(GS_TDB_C_GetPlayerController) == 0x000010, "Wrong size on GS_TDB_C_GetPlayerController");
static_assert(offsetof(GS_TDB_C_GetPlayerController, PlayerController) == 0x000000, "Member 'GS_TDB_C_GetPlayerController::PlayerController' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetPlayerController, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'GS_TDB_C_GetPlayerController::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function GS_TDB.GS_TDB_C.GetQuestActor
// 0x00A8 (0x00A8 - 0x0000)
struct GS_TDB_C_GetQuestActor final
{
public:
	class FName                                   Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ActorClass;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 QuestActor;                                        // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_67[0x1];                                       // 0x0067(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_TDB_C_GetQuestActor) == 0x000008, "Wrong alignment on GS_TDB_C_GetQuestActor");
static_assert(sizeof(GS_TDB_C_GetQuestActor) == 0x0000A8, "Wrong size on GS_TDB_C_GetQuestActor");
static_assert(offsetof(GS_TDB_C_GetQuestActor, Tag) == 0x000000, "Member 'GS_TDB_C_GetQuestActor::Tag' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetQuestActor, ActorClass) == 0x000008, "Member 'GS_TDB_C_GetQuestActor::ActorClass' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetQuestActor, Actor) == 0x000010, "Member 'GS_TDB_C_GetQuestActor::Actor' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetQuestActor, QuestActor) == 0x000018, "Member 'GS_TDB_C_GetQuestActor::QuestActor' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetQuestActor, CallFunc_Conv_NameToString_ReturnValue) == 0x000020, "Member 'GS_TDB_C_GetQuestActor::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetQuestActor, Temp_bool_True_if_break_was_hit_Variable) == 0x000030, "Member 'GS_TDB_C_GetQuestActor::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetQuestActor, CallFunc_Concat_StrStr_ReturnValue) == 0x000038, "Member 'GS_TDB_C_GetQuestActor::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetQuestActor, CallFunc_Not_PreBool_ReturnValue) == 0x000048, "Member 'GS_TDB_C_GetQuestActor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetQuestActor, Temp_int_Array_Index_Variable) == 0x00004C, "Member 'GS_TDB_C_GetQuestActor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetQuestActor, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'GS_TDB_C_GetQuestActor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetQuestActor, CallFunc_Array_Get_Item) == 0x000058, "Member 'GS_TDB_C_GetQuestActor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetQuestActor, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'GS_TDB_C_GetQuestActor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetQuestActor, CallFunc_IsValid_ReturnValue) == 0x000064, "Member 'GS_TDB_C_GetQuestActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetQuestActor, CallFunc_Less_IntInt_ReturnValue) == 0x000065, "Member 'GS_TDB_C_GetQuestActor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetQuestActor, CallFunc_BooleanAND_ReturnValue) == 0x000066, "Member 'GS_TDB_C_GetQuestActor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetQuestActor, CallFunc_GetObjectClass_ReturnValue) == 0x000068, "Member 'GS_TDB_C_GetQuestActor::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetQuestActor, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000070, "Member 'GS_TDB_C_GetQuestActor::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetQuestActor, CallFunc_GetDisplayName_ReturnValue) == 0x000078, "Member 'GS_TDB_C_GetQuestActor::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetQuestActor, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000088, "Member 'GS_TDB_C_GetQuestActor::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetQuestActor, CallFunc_Array_Contains_ReturnValue) == 0x000098, "Member 'GS_TDB_C_GetQuestActor::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetQuestActor, CallFunc_Add_IntInt_ReturnValue) == 0x00009C, "Member 'GS_TDB_C_GetQuestActor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetQuestActor, CallFunc_BooleanOR_ReturnValue) == 0x0000A0, "Member 'GS_TDB_C_GetQuestActor::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function GS_TDB.GS_TDB_C.GetQuestSystem
// 0x0008 (0x0008 - 0x0000)
struct GS_TDB_C_GetQuestSystem final
{
public:
	class UQuestSystemV3_C*                       Param_QuestSystem;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_TDB_C_GetQuestSystem) == 0x000008, "Wrong alignment on GS_TDB_C_GetQuestSystem");
static_assert(sizeof(GS_TDB_C_GetQuestSystem) == 0x000008, "Wrong size on GS_TDB_C_GetQuestSystem");
static_assert(offsetof(GS_TDB_C_GetQuestSystem, Param_QuestSystem) == 0x000000, "Member 'GS_TDB_C_GetQuestSystem::Param_QuestSystem' has a wrong offset!");

// Function GS_TDB.GS_TDB_C.GetQuestZone
// 0x0038 (0x0038 - 0x0000)
struct GS_TDB_C_GetQuestZone final
{
public:
	class UQuest*                                 Quest;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_QuestItemsSpawnZone_C*              Zone;                                              // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_QuestItemsSpawnZone_C*              CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_TDB_C_GetQuestZone) == 0x000008, "Wrong alignment on GS_TDB_C_GetQuestZone");
static_assert(sizeof(GS_TDB_C_GetQuestZone) == 0x000038, "Wrong size on GS_TDB_C_GetQuestZone");
static_assert(offsetof(GS_TDB_C_GetQuestZone, Quest) == 0x000000, "Member 'GS_TDB_C_GetQuestZone::Quest' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetQuestZone, Zone) == 0x000008, "Member 'GS_TDB_C_GetQuestZone::Zone' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetQuestZone, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'GS_TDB_C_GetQuestZone::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetQuestZone, Temp_int_Array_Index_Variable) == 0x000014, "Member 'GS_TDB_C_GetQuestZone::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetQuestZone, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'GS_TDB_C_GetQuestZone::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetQuestZone, Temp_bool_True_if_break_was_hit_Variable) == 0x00001C, "Member 'GS_TDB_C_GetQuestZone::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetQuestZone, CallFunc_Not_PreBool_ReturnValue) == 0x00001D, "Member 'GS_TDB_C_GetQuestZone::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetQuestZone, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'GS_TDB_C_GetQuestZone::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetQuestZone, CallFunc_Array_Get_Item) == 0x000028, "Member 'GS_TDB_C_GetQuestZone::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetQuestZone, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'GS_TDB_C_GetQuestZone::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetQuestZone, CallFunc_BooleanAND_ReturnValue) == 0x000031, "Member 'GS_TDB_C_GetQuestZone::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetQuestZone, CallFunc_Set_Contains_ReturnValue) == 0x000032, "Member 'GS_TDB_C_GetQuestZone::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");

// Function GS_TDB.GS_TDB_C.GetQuestZoneByJobName
// 0x0070 (0x0070 - 0x0000)
struct GS_TDB_C_GetQuestZoneByJobName final
{
public:
	E_Works                                       JobType;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_QuestZone_C*>                Zones;                                             // 0x0008(0x0010)(Parm, OutParm)
	TArray<class ABP_QuestZone_C*>                ProgressZones;                                     // 0x0018(0x0010)(Parm, OutParm)
	TArray<class ABP_QuestZone_C*>                ProgressZoneArr;                                   // 0x0028(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class ABP_QuestZone_C*>                ValidJobZones;                                     // 0x0038(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_QuestZone_C*                        CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_TDB_C_GetQuestZoneByJobName) == 0x000008, "Wrong alignment on GS_TDB_C_GetQuestZoneByJobName");
static_assert(sizeof(GS_TDB_C_GetQuestZoneByJobName) == 0x000070, "Wrong size on GS_TDB_C_GetQuestZoneByJobName");
static_assert(offsetof(GS_TDB_C_GetQuestZoneByJobName, JobType) == 0x000000, "Member 'GS_TDB_C_GetQuestZoneByJobName::JobType' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetQuestZoneByJobName, Zones) == 0x000008, "Member 'GS_TDB_C_GetQuestZoneByJobName::Zones' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetQuestZoneByJobName, ProgressZones) == 0x000018, "Member 'GS_TDB_C_GetQuestZoneByJobName::ProgressZones' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetQuestZoneByJobName, ProgressZoneArr) == 0x000028, "Member 'GS_TDB_C_GetQuestZoneByJobName::ProgressZoneArr' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetQuestZoneByJobName, ValidJobZones) == 0x000038, "Member 'GS_TDB_C_GetQuestZoneByJobName::ValidJobZones' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetQuestZoneByJobName, Temp_int_Array_Index_Variable) == 0x000048, "Member 'GS_TDB_C_GetQuestZoneByJobName::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetQuestZoneByJobName, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'GS_TDB_C_GetQuestZoneByJobName::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetQuestZoneByJobName, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'GS_TDB_C_GetQuestZoneByJobName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetQuestZoneByJobName, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'GS_TDB_C_GetQuestZoneByJobName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetQuestZoneByJobName, CallFunc_Array_Get_Item) == 0x000058, "Member 'GS_TDB_C_GetQuestZoneByJobName::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetQuestZoneByJobName, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'GS_TDB_C_GetQuestZoneByJobName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetQuestZoneByJobName, CallFunc_Array_Add_ReturnValue) == 0x000064, "Member 'GS_TDB_C_GetQuestZoneByJobName::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetQuestZoneByJobName, CallFunc_Array_Add_ReturnValue_1) == 0x000068, "Member 'GS_TDB_C_GetQuestZoneByJobName::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetQuestZoneByJobName, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00006C, "Member 'GS_TDB_C_GetQuestZoneByJobName::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function GS_TDB.GS_TDB_C.GetSquadsMaxPlayersQuantity
// 0x0004 (0x0004 - 0x0000)
struct GS_TDB_C_GetSquadsMaxPlayersQuantity final
{
public:
	int32                                         Param_MaxSquadQuantity;                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_TDB_C_GetSquadsMaxPlayersQuantity) == 0x000004, "Wrong alignment on GS_TDB_C_GetSquadsMaxPlayersQuantity");
static_assert(sizeof(GS_TDB_C_GetSquadsMaxPlayersQuantity) == 0x000004, "Wrong size on GS_TDB_C_GetSquadsMaxPlayersQuantity");
static_assert(offsetof(GS_TDB_C_GetSquadsMaxPlayersQuantity, Param_MaxSquadQuantity) == 0x000000, "Member 'GS_TDB_C_GetSquadsMaxPlayersQuantity::Param_MaxSquadQuantity' has a wrong offset!");

// Function GS_TDB.GS_TDB_C.GetTowersZones
// 0x0050 (0x0050 - 0x0000)
struct GS_TDB_C_GetTowersZones final
{
public:
	class UQuest*                                 TowerQuestAsset;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_QuestZone_C*>                Zones;                                             // 0x0008(0x0010)(Parm, OutParm)
	TArray<class ABP_QuestZone_C*>                ActivatedZones;                                    // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_QuestZone_Towers_C*                 CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_TDB_C_GetTowersZones) == 0x000008, "Wrong alignment on GS_TDB_C_GetTowersZones");
static_assert(sizeof(GS_TDB_C_GetTowersZones) == 0x000050, "Wrong size on GS_TDB_C_GetTowersZones");
static_assert(offsetof(GS_TDB_C_GetTowersZones, TowerQuestAsset) == 0x000000, "Member 'GS_TDB_C_GetTowersZones::TowerQuestAsset' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetTowersZones, Zones) == 0x000008, "Member 'GS_TDB_C_GetTowersZones::Zones' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetTowersZones, ActivatedZones) == 0x000018, "Member 'GS_TDB_C_GetTowersZones::ActivatedZones' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetTowersZones, Temp_int_Array_Index_Variable) == 0x000028, "Member 'GS_TDB_C_GetTowersZones::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetTowersZones, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'GS_TDB_C_GetTowersZones::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetTowersZones, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'GS_TDB_C_GetTowersZones::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetTowersZones, CallFunc_Array_Get_Item) == 0x000038, "Member 'GS_TDB_C_GetTowersZones::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetTowersZones, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'GS_TDB_C_GetTowersZones::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetTowersZones, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'GS_TDB_C_GetTowersZones::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetTowersZones, CallFunc_Array_Contains_ReturnValue) == 0x000045, "Member 'GS_TDB_C_GetTowersZones::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_GetTowersZones, CallFunc_Array_Add_ReturnValue) == 0x000048, "Member 'GS_TDB_C_GetTowersZones::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function GS_TDB.GS_TDB_C.InitLootZones
// 0x0008 (0x0008 - 0x0000)
struct GS_TDB_C_InitLootZones final
{
public:
	class ABP_QuestItemsSpawnZone_C*              LootZpawnZone;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_TDB_C_InitLootZones) == 0x000008, "Wrong alignment on GS_TDB_C_InitLootZones");
static_assert(sizeof(GS_TDB_C_InitLootZones) == 0x000008, "Wrong size on GS_TDB_C_InitLootZones");
static_assert(offsetof(GS_TDB_C_InitLootZones, LootZpawnZone) == 0x000000, "Member 'GS_TDB_C_InitLootZones::LootZpawnZone' has a wrong offset!");

// Function GS_TDB.GS_TDB_C.InitQuestActor
// 0x0008 (0x0008 - 0x0000)
struct GS_TDB_C_InitQuestActor final
{
public:
	class AActor*                                 ActorRef;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_TDB_C_InitQuestActor) == 0x000008, "Wrong alignment on GS_TDB_C_InitQuestActor");
static_assert(sizeof(GS_TDB_C_InitQuestActor) == 0x000008, "Wrong size on GS_TDB_C_InitQuestActor");
static_assert(offsetof(GS_TDB_C_InitQuestActor, ActorRef) == 0x000000, "Member 'GS_TDB_C_InitQuestActor::ActorRef' has a wrong offset!");

// Function GS_TDB.GS_TDB_C.InitQuestZone
// 0x0008 (0x0008 - 0x0000)
struct GS_TDB_C_InitQuestZone final
{
public:
	class ABP_QuestZone_C*                        QuestZone;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_TDB_C_InitQuestZone) == 0x000008, "Wrong alignment on GS_TDB_C_InitQuestZone");
static_assert(sizeof(GS_TDB_C_InitQuestZone) == 0x000008, "Wrong size on GS_TDB_C_InitQuestZone");
static_assert(offsetof(GS_TDB_C_InitQuestZone, QuestZone) == 0x000000, "Member 'GS_TDB_C_InitQuestZone::QuestZone' has a wrong offset!");

// Function GS_TDB.GS_TDB_C.InitTowerZone
// 0x0008 (0x0008 - 0x0000)
struct GS_TDB_C_InitTowerZone final
{
public:
	class ABP_QuestZone_Towers_C*                 Zone;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_TDB_C_InitTowerZone) == 0x000008, "Wrong alignment on GS_TDB_C_InitTowerZone");
static_assert(sizeof(GS_TDB_C_InitTowerZone) == 0x000008, "Wrong size on GS_TDB_C_InitTowerZone");
static_assert(offsetof(GS_TDB_C_InitTowerZone, Zone) == 0x000000, "Member 'GS_TDB_C_InitTowerZone::Zone' has a wrong offset!");

// Function GS_TDB.GS_TDB_C.OnEnterBunkerArea
// 0x0010 (0x0010 - 0x0000)
struct GS_TDB_C_OnEnterBunkerArea final
{
public:
	class FString                                 Param_BunkerID;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_TDB_C_OnEnterBunkerArea) == 0x000008, "Wrong alignment on GS_TDB_C_OnEnterBunkerArea");
static_assert(sizeof(GS_TDB_C_OnEnterBunkerArea) == 0x000010, "Wrong size on GS_TDB_C_OnEnterBunkerArea");
static_assert(offsetof(GS_TDB_C_OnEnterBunkerArea, Param_BunkerID) == 0x000000, "Member 'GS_TDB_C_OnEnterBunkerArea::Param_BunkerID' has a wrong offset!");

// Function GS_TDB.GS_TDB_C.OnFinishQuestRemotely
// 0x0004 (0x0004 - 0x0000)
struct GS_TDB_C_OnFinishQuestRemotely final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_TDB_C_OnFinishQuestRemotely) == 0x000004, "Wrong alignment on GS_TDB_C_OnFinishQuestRemotely");
static_assert(sizeof(GS_TDB_C_OnFinishQuestRemotely) == 0x000004, "Wrong size on GS_TDB_C_OnFinishQuestRemotely");
static_assert(offsetof(GS_TDB_C_OnFinishQuestRemotely, ID) == 0x000000, "Member 'GS_TDB_C_OnFinishQuestRemotely::ID' has a wrong offset!");

// Function GS_TDB.GS_TDB_C.OnPlayerSpawned
// 0x0008 (0x0008 - 0x0000)
struct GS_TDB_C_OnPlayerSpawned final
{
public:
	class AActor*                                 Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_TDB_C_OnPlayerSpawned) == 0x000008, "Wrong alignment on GS_TDB_C_OnPlayerSpawned");
static_assert(sizeof(GS_TDB_C_OnPlayerSpawned) == 0x000008, "Wrong size on GS_TDB_C_OnPlayerSpawned");
static_assert(offsetof(GS_TDB_C_OnPlayerSpawned, Player) == 0x000000, "Member 'GS_TDB_C_OnPlayerSpawned::Player' has a wrong offset!");

// Function GS_TDB.GS_TDB_C.OnQuestTrigger
// 0x0010 (0x0010 - 0x0000)
struct GS_TDB_C_OnQuestTrigger final
{
public:
	class FString                                 QuestTrigger;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_TDB_C_OnQuestTrigger) == 0x000008, "Wrong alignment on GS_TDB_C_OnQuestTrigger");
static_assert(sizeof(GS_TDB_C_OnQuestTrigger) == 0x000010, "Wrong size on GS_TDB_C_OnQuestTrigger");
static_assert(offsetof(GS_TDB_C_OnQuestTrigger, QuestTrigger) == 0x000000, "Member 'GS_TDB_C_OnQuestTrigger::QuestTrigger' has a wrong offset!");

// Function GS_TDB.GS_TDB_C.PlayShopSound
// 0x0008 (0x0008 - 0x0000)
struct GS_TDB_C_PlayShopSound final
{
public:
	class UFMODEvent*                             Sound;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_TDB_C_PlayShopSound) == 0x000008, "Wrong alignment on GS_TDB_C_PlayShopSound");
static_assert(sizeof(GS_TDB_C_PlayShopSound) == 0x000008, "Wrong size on GS_TDB_C_PlayShopSound");
static_assert(offsetof(GS_TDB_C_PlayShopSound, Sound) == 0x000000, "Member 'GS_TDB_C_PlayShopSound::Sound' has a wrong offset!");

// Function GS_TDB.GS_TDB_C.ProcessSpawnedPlayer
// 0x0030 (0x0030 - 0x0000)
struct GS_TDB_C_ProcessSpawnedPlayer final
{
public:
	class AActor*                                 PlayerActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvPC_C*                              K2Node_DynamicCast_AsSurv_PC;                      // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_TDB_C_ProcessSpawnedPlayer) == 0x000008, "Wrong alignment on GS_TDB_C_ProcessSpawnedPlayer");
static_assert(sizeof(GS_TDB_C_ProcessSpawnedPlayer) == 0x000030, "Wrong size on GS_TDB_C_ProcessSpawnedPlayer");
static_assert(offsetof(GS_TDB_C_ProcessSpawnedPlayer, PlayerActor) == 0x000000, "Member 'GS_TDB_C_ProcessSpawnedPlayer::PlayerActor' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ProcessSpawnedPlayer, K2Node_DynamicCast_AsPawn) == 0x000008, "Member 'GS_TDB_C_ProcessSpawnedPlayer::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ProcessSpawnedPlayer, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'GS_TDB_C_ProcessSpawnedPlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ProcessSpawnedPlayer, CallFunc_GetController_ReturnValue) == 0x000018, "Member 'GS_TDB_C_ProcessSpawnedPlayer::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ProcessSpawnedPlayer, K2Node_DynamicCast_AsSurv_PC) == 0x000020, "Member 'GS_TDB_C_ProcessSpawnedPlayer::K2Node_DynamicCast_AsSurv_PC' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_ProcessSpawnedPlayer, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'GS_TDB_C_ProcessSpawnedPlayer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function GS_TDB.GS_TDB_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct GS_TDB_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_TDB_C_ReceiveTick) == 0x000004, "Wrong alignment on GS_TDB_C_ReceiveTick");
static_assert(sizeof(GS_TDB_C_ReceiveTick) == 0x000004, "Wrong size on GS_TDB_C_ReceiveTick");
static_assert(offsetof(GS_TDB_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'GS_TDB_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function GS_TDB.GS_TDB_C.RemoveFromSquad
// 0x0060 (0x0060 - 0x0000)
struct GS_TDB_C_RemoveFromSquad final
{
public:
	const class APS_TDB_C*                        Item;                                              // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	int32                                         TempSquadId;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APS_TDB_C*>                      TempArray2;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APS_TDB_C*                              CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayerStatesArray                     CallFunc_Map_Find_Value;                           // 0x0038(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayerStatesArray                     K2Node_SetFieldsInStruct_StructOut;                // 0x0050(0x0010)(HasGetValueTypeHash)
};
static_assert(alignof(GS_TDB_C_RemoveFromSquad) == 0x000008, "Wrong alignment on GS_TDB_C_RemoveFromSquad");
static_assert(sizeof(GS_TDB_C_RemoveFromSquad) == 0x000060, "Wrong size on GS_TDB_C_RemoveFromSquad");
static_assert(offsetof(GS_TDB_C_RemoveFromSquad, Item) == 0x000000, "Member 'GS_TDB_C_RemoveFromSquad::Item' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_RemoveFromSquad, TempSquadId) == 0x000008, "Member 'GS_TDB_C_RemoveFromSquad::TempSquadId' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_RemoveFromSquad, TempArray2) == 0x000010, "Member 'GS_TDB_C_RemoveFromSquad::TempArray2' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_RemoveFromSquad, CallFunc_Map_Remove_ReturnValue) == 0x000020, "Member 'GS_TDB_C_RemoveFromSquad::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_RemoveFromSquad, CallFunc_Array_Get_Item) == 0x000028, "Member 'GS_TDB_C_RemoveFromSquad::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_RemoveFromSquad, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'GS_TDB_C_RemoveFromSquad::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_RemoveFromSquad, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000034, "Member 'GS_TDB_C_RemoveFromSquad::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_RemoveFromSquad, CallFunc_Array_RemoveItem_ReturnValue) == 0x000035, "Member 'GS_TDB_C_RemoveFromSquad::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_RemoveFromSquad, CallFunc_Map_Find_Value) == 0x000038, "Member 'GS_TDB_C_RemoveFromSquad::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_RemoveFromSquad, CallFunc_Map_Find_ReturnValue) == 0x000048, "Member 'GS_TDB_C_RemoveFromSquad::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_RemoveFromSquad, K2Node_SetFieldsInStruct_StructOut) == 0x000050, "Member 'GS_TDB_C_RemoveFromSquad::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

// Function GS_TDB.GS_TDB_C.RemoveSquad
// 0x0008 (0x0008 - 0x0000)
struct GS_TDB_C_RemoveSquad final
{
public:
	int32                                         Key;                                               // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_TDB_C_RemoveSquad) == 0x000004, "Wrong alignment on GS_TDB_C_RemoveSquad");
static_assert(sizeof(GS_TDB_C_RemoveSquad) == 0x000008, "Wrong size on GS_TDB_C_RemoveSquad");
static_assert(offsetof(GS_TDB_C_RemoveSquad, Key) == 0x000000, "Member 'GS_TDB_C_RemoveSquad::Key' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_RemoveSquad, CallFunc_Map_Remove_ReturnValue) == 0x000004, "Member 'GS_TDB_C_RemoveSquad::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");

// Function GS_TDB.GS_TDB_C.SetMarkersMulti
// 0x0010 (0x0010 - 0x0000)
struct GS_TDB_C_SetMarkersMulti final
{
public:
	TArray<struct FVector>                        Markers;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GS_TDB_C_SetMarkersMulti) == 0x000008, "Wrong alignment on GS_TDB_C_SetMarkersMulti");
static_assert(sizeof(GS_TDB_C_SetMarkersMulti) == 0x000010, "Wrong size on GS_TDB_C_SetMarkersMulti");
static_assert(offsetof(GS_TDB_C_SetMarkersMulti, Markers) == 0x000000, "Member 'GS_TDB_C_SetMarkersMulti::Markers' has a wrong offset!");

// Function GS_TDB.GS_TDB_C.SetNewDayState
// 0x0001 (0x0001 - 0x0000)
struct GS_TDB_C_SetNewDayState final
{
public:
	EDayCycleState                                NewDayState;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_TDB_C_SetNewDayState) == 0x000001, "Wrong alignment on GS_TDB_C_SetNewDayState");
static_assert(sizeof(GS_TDB_C_SetNewDayState) == 0x000001, "Wrong size on GS_TDB_C_SetNewDayState");
static_assert(offsetof(GS_TDB_C_SetNewDayState, NewDayState) == 0x000000, "Member 'GS_TDB_C_SetNewDayState::NewDayState' has a wrong offset!");

// Function GS_TDB.GS_TDB_C.SetShopOpened
// 0x0001 (0x0001 - 0x0000)
struct GS_TDB_C_SetShopOpened final
{
public:
	bool                                          IsOpened;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_TDB_C_SetShopOpened) == 0x000001, "Wrong alignment on GS_TDB_C_SetShopOpened");
static_assert(sizeof(GS_TDB_C_SetShopOpened) == 0x000001, "Wrong size on GS_TDB_C_SetShopOpened");
static_assert(offsetof(GS_TDB_C_SetShopOpened, IsOpened) == 0x000000, "Member 'GS_TDB_C_SetShopOpened::IsOpened' has a wrong offset!");

// Function GS_TDB.GS_TDB_C.SyncQuestSystemSilent
// 0x0038 (0x0038 - 0x0000)
struct GS_TDB_C_SyncQuestSystemSilent final
{
public:
	class USideQuests_C*                          K2Node_DynamicCast_AsSide_Quests;                  // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USideQuests_C*                          CallFunc_GetSideQuestsByID_SideQuest;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuestV2_C*                             CallFunc_GetQuestByID_Quest;                       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UQuestV2_C*                             CallFunc_GetQuestByID_Quest_1;                     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UQuestV2_C*                             CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_TDB_C_SyncQuestSystemSilent) == 0x000008, "Wrong alignment on GS_TDB_C_SyncQuestSystemSilent");
static_assert(sizeof(GS_TDB_C_SyncQuestSystemSilent) == 0x000038, "Wrong size on GS_TDB_C_SyncQuestSystemSilent");
static_assert(offsetof(GS_TDB_C_SyncQuestSystemSilent, K2Node_DynamicCast_AsSide_Quests) == 0x000000, "Member 'GS_TDB_C_SyncQuestSystemSilent::K2Node_DynamicCast_AsSide_Quests' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_SyncQuestSystemSilent, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'GS_TDB_C_SyncQuestSystemSilent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_SyncQuestSystemSilent, CallFunc_GetSideQuestsByID_SideQuest) == 0x000010, "Member 'GS_TDB_C_SyncQuestSystemSilent::CallFunc_GetSideQuestsByID_SideQuest' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_SyncQuestSystemSilent, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'GS_TDB_C_SyncQuestSystemSilent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_SyncQuestSystemSilent, CallFunc_GetQuestByID_Quest) == 0x000020, "Member 'GS_TDB_C_SyncQuestSystemSilent::CallFunc_GetQuestByID_Quest' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_SyncQuestSystemSilent, CallFunc_GetQuestByID_Quest_1) == 0x000028, "Member 'GS_TDB_C_SyncQuestSystemSilent::CallFunc_GetQuestByID_Quest_1' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_SyncQuestSystemSilent, CallFunc_Array_Get_Item) == 0x000030, "Member 'GS_TDB_C_SyncQuestSystemSilent::CallFunc_Array_Get_Item' has a wrong offset!");

// Function GS_TDB.GS_TDB_C.UpdateSkyLight
// 0x0058 (0x0058 - 0x0000)
struct GS_TDB_C_UpdateSkyLight final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACustomSkyLight_C*                      CallFunc_GetActorOfClass_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_TDB_C_UpdateSkyLight) == 0x000008, "Wrong alignment on GS_TDB_C_UpdateSkyLight");
static_assert(sizeof(GS_TDB_C_UpdateSkyLight) == 0x000058, "Wrong size on GS_TDB_C_UpdateSkyLight");
static_assert(offsetof(GS_TDB_C_UpdateSkyLight, DeltaTime) == 0x000000, "Member 'GS_TDB_C_UpdateSkyLight::DeltaTime' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_UpdateSkyLight, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'GS_TDB_C_UpdateSkyLight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_UpdateSkyLight, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'GS_TDB_C_UpdateSkyLight::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_UpdateSkyLight, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'GS_TDB_C_UpdateSkyLight::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_UpdateSkyLight, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'GS_TDB_C_UpdateSkyLight::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_UpdateSkyLight, CallFunc_MapRangeClamped_ReturnValue) == 0x000028, "Member 'GS_TDB_C_UpdateSkyLight::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_UpdateSkyLight, CallFunc_GetActorOfClass_ReturnValue) == 0x000030, "Member 'GS_TDB_C_UpdateSkyLight::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_UpdateSkyLight, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000038, "Member 'GS_TDB_C_UpdateSkyLight::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_UpdateSkyLight, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000040, "Member 'GS_TDB_C_UpdateSkyLight::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_UpdateSkyLight, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000048, "Member 'GS_TDB_C_UpdateSkyLight::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_UpdateSkyLight, CallFunc_SelectFloat_ReturnValue) == 0x000050, "Member 'GS_TDB_C_UpdateSkyLight::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function GS_TDB.GS_TDB_C.UpdateSquadListForAllPlayers
// 0x0038 (0x0038 - 0x0000)
struct GS_TDB_C_UpdateSquadListForAllPlayers final
{
public:
	int32                                         SquadId;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPlayerStatesArray                     CallFunc_Map_Find_Value;                           // 0x0010(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APS_TDB_C*                              CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_TDB_C_UpdateSquadListForAllPlayers) == 0x000008, "Wrong alignment on GS_TDB_C_UpdateSquadListForAllPlayers");
static_assert(sizeof(GS_TDB_C_UpdateSquadListForAllPlayers) == 0x000038, "Wrong size on GS_TDB_C_UpdateSquadListForAllPlayers");
static_assert(offsetof(GS_TDB_C_UpdateSquadListForAllPlayers, SquadId) == 0x000000, "Member 'GS_TDB_C_UpdateSquadListForAllPlayers::SquadId' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_UpdateSquadListForAllPlayers, Temp_int_Array_Index_Variable) == 0x000004, "Member 'GS_TDB_C_UpdateSquadListForAllPlayers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_UpdateSquadListForAllPlayers, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'GS_TDB_C_UpdateSquadListForAllPlayers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_UpdateSquadListForAllPlayers, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'GS_TDB_C_UpdateSquadListForAllPlayers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_UpdateSquadListForAllPlayers, CallFunc_Map_Find_Value) == 0x000010, "Member 'GS_TDB_C_UpdateSquadListForAllPlayers::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_UpdateSquadListForAllPlayers, CallFunc_Map_Find_ReturnValue) == 0x000020, "Member 'GS_TDB_C_UpdateSquadListForAllPlayers::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_UpdateSquadListForAllPlayers, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'GS_TDB_C_UpdateSquadListForAllPlayers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_UpdateSquadListForAllPlayers, CallFunc_Array_Get_Item) == 0x000028, "Member 'GS_TDB_C_UpdateSquadListForAllPlayers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GS_TDB_C_UpdateSquadListForAllPlayers, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'GS_TDB_C_UpdateSquadListForAllPlayers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

