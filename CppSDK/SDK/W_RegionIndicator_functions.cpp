#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_RegionIndicator

#include "Basic.hpp"

#include "W_RegionIndicator_classes.hpp"
#include "W_RegionIndicator_parameters.hpp"


namespace SDK
{

// Function W_RegionIndicator.W_RegionIndicator_C.ExecuteUbergraph_W_RegionIndicator
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_RegionIndicator_C::ExecuteUbergraph_W_RegionIndicator(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RegionIndicator_C", "ExecuteUbergraph_W_RegionIndicator");

	Params::W_RegionIndicator_C_ExecuteUbergraph_W_RegionIndicator Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_RegionIndicator.W_RegionIndicator_C.On_Selected_MouseButtonDown_0
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UW_RegionIndicator_C::On_Selected_MouseButtonDown_0(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RegionIndicator_C", "On_Selected_MouseButtonDown_0");

	Params::W_RegionIndicator_C_On_Selected_MouseButtonDown_0 Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_RegionIndicator.W_RegionIndicator_C.Select
// (BlueprintCallable, BlueprintEvent)

void UW_RegionIndicator_C::Select()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RegionIndicator_C", "Select");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_RegionIndicator.W_RegionIndicator_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_RegionIndicator_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RegionIndicator_C", "Tick");

	Params::W_RegionIndicator_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_RegionIndicator.W_RegionIndicator_C.Unselect
// (BlueprintCallable, BlueprintEvent)

void UW_RegionIndicator_C::Unselect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RegionIndicator_C", "Unselect");

	UObject::ProcessEvent(Func, nullptr);
}

}

