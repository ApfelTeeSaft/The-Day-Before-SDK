#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TutorialTent

#include "Basic.hpp"

#include "E_InteractType_structs.hpp"
#include "E_ActorType_structs.hpp"


namespace SDK::Params
{

// Function TutorialTent.TutorialTent_C.ExecuteUbergraph_TutorialTent
// 0x0118 (0x0118 - 0x0000)
struct TutorialTent_C_ExecuteUbergraph_TutorialTent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player_6;                             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_5;                             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_4;                             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_3;                             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Visible_1;                            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Hide_;                          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player_2;                             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player_1;                             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player;                               // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GS_TDB_C>         K2Node_DynamicCast_AsBPI_GS_TDB;                   // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player_7;                             // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SitIndex;                             // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_SkipAnimation;                        // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetWidget_ReturnValue;                    // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_8;                             // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_TutorialQuest3DTracker_C*          K2Node_DynamicCast_AsWBP_Tutorial_Quest_3DTracker; // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& TutorialStage)> K2Node_CreateDelegate_OutputDelegate;              // 0x00A4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Visible;                              // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvPC_C*                              K2Node_DynamicCast_AsSurv_PC;                      // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_TutorialStage;                  // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SurvPC_C>         CallFunc_GetTutorStage_self_CastInput;             // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetTutorStage_StageName;                  // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_InteractiveSafe_C*                  K2Node_DynamicCast_AsBP_Interactive_Safe;          // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TutorialTent_C_ExecuteUbergraph_TutorialTent) == 0x000008, "Wrong alignment on TutorialTent_C_ExecuteUbergraph_TutorialTent");
static_assert(sizeof(TutorialTent_C_ExecuteUbergraph_TutorialTent) == 0x000118, "Wrong size on TutorialTent_C_ExecuteUbergraph_TutorialTent");
static_assert(offsetof(TutorialTent_C_ExecuteUbergraph_TutorialTent, EntryPoint) == 0x000000, "Member 'TutorialTent_C_ExecuteUbergraph_TutorialTent::EntryPoint' has a wrong offset!");
static_assert(offsetof(TutorialTent_C_ExecuteUbergraph_TutorialTent, K2Node_Event_Player_6) == 0x000008, "Member 'TutorialTent_C_ExecuteUbergraph_TutorialTent::K2Node_Event_Player_6' has a wrong offset!");
static_assert(offsetof(TutorialTent_C_ExecuteUbergraph_TutorialTent, K2Node_Event_Player_5) == 0x000010, "Member 'TutorialTent_C_ExecuteUbergraph_TutorialTent::K2Node_Event_Player_5' has a wrong offset!");
static_assert(offsetof(TutorialTent_C_ExecuteUbergraph_TutorialTent, K2Node_Event_Player_4) == 0x000018, "Member 'TutorialTent_C_ExecuteUbergraph_TutorialTent::K2Node_Event_Player_4' has a wrong offset!");
static_assert(offsetof(TutorialTent_C_ExecuteUbergraph_TutorialTent, K2Node_Event_Player_3) == 0x000020, "Member 'TutorialTent_C_ExecuteUbergraph_TutorialTent::K2Node_Event_Player_3' has a wrong offset!");
static_assert(offsetof(TutorialTent_C_ExecuteUbergraph_TutorialTent, K2Node_Event_Visible_1) == 0x000028, "Member 'TutorialTent_C_ExecuteUbergraph_TutorialTent::K2Node_Event_Visible_1' has a wrong offset!");
static_assert(offsetof(TutorialTent_C_ExecuteUbergraph_TutorialTent, K2Node_CustomEvent_Hide_) == 0x000029, "Member 'TutorialTent_C_ExecuteUbergraph_TutorialTent::K2Node_CustomEvent_Hide_' has a wrong offset!");
static_assert(offsetof(TutorialTent_C_ExecuteUbergraph_TutorialTent, K2Node_Event_Player_2) == 0x000030, "Member 'TutorialTent_C_ExecuteUbergraph_TutorialTent::K2Node_Event_Player_2' has a wrong offset!");
static_assert(offsetof(TutorialTent_C_ExecuteUbergraph_TutorialTent, CallFunc_Not_PreBool_ReturnValue) == 0x000038, "Member 'TutorialTent_C_ExecuteUbergraph_TutorialTent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TutorialTent_C_ExecuteUbergraph_TutorialTent, K2Node_Event_Player_1) == 0x000040, "Member 'TutorialTent_C_ExecuteUbergraph_TutorialTent::K2Node_Event_Player_1' has a wrong offset!");
static_assert(offsetof(TutorialTent_C_ExecuteUbergraph_TutorialTent, K2Node_Event_Player) == 0x000048, "Member 'TutorialTent_C_ExecuteUbergraph_TutorialTent::K2Node_Event_Player' has a wrong offset!");
static_assert(offsetof(TutorialTent_C_ExecuteUbergraph_TutorialTent, CallFunc_HasAuthority_ReturnValue) == 0x000050, "Member 'TutorialTent_C_ExecuteUbergraph_TutorialTent::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(TutorialTent_C_ExecuteUbergraph_TutorialTent, CallFunc_GetGameState_ReturnValue) == 0x000058, "Member 'TutorialTent_C_ExecuteUbergraph_TutorialTent::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(TutorialTent_C_ExecuteUbergraph_TutorialTent, K2Node_DynamicCast_AsBPI_GS_TDB) == 0x000060, "Member 'TutorialTent_C_ExecuteUbergraph_TutorialTent::K2Node_DynamicCast_AsBPI_GS_TDB' has a wrong offset!");
static_assert(offsetof(TutorialTent_C_ExecuteUbergraph_TutorialTent, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'TutorialTent_C_ExecuteUbergraph_TutorialTent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TutorialTent_C_ExecuteUbergraph_TutorialTent, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000071, "Member 'TutorialTent_C_ExecuteUbergraph_TutorialTent::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(TutorialTent_C_ExecuteUbergraph_TutorialTent, K2Node_Event_Player_7) == 0x000078, "Member 'TutorialTent_C_ExecuteUbergraph_TutorialTent::K2Node_Event_Player_7' has a wrong offset!");
static_assert(offsetof(TutorialTent_C_ExecuteUbergraph_TutorialTent, K2Node_Event_SitIndex) == 0x000080, "Member 'TutorialTent_C_ExecuteUbergraph_TutorialTent::K2Node_Event_SitIndex' has a wrong offset!");
static_assert(offsetof(TutorialTent_C_ExecuteUbergraph_TutorialTent, K2Node_Event_SkipAnimation) == 0x000084, "Member 'TutorialTent_C_ExecuteUbergraph_TutorialTent::K2Node_Event_SkipAnimation' has a wrong offset!");
static_assert(offsetof(TutorialTent_C_ExecuteUbergraph_TutorialTent, CallFunc_GetWidget_ReturnValue) == 0x000088, "Member 'TutorialTent_C_ExecuteUbergraph_TutorialTent::CallFunc_GetWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(TutorialTent_C_ExecuteUbergraph_TutorialTent, K2Node_Event_Player_8) == 0x000090, "Member 'TutorialTent_C_ExecuteUbergraph_TutorialTent::K2Node_Event_Player_8' has a wrong offset!");
static_assert(offsetof(TutorialTent_C_ExecuteUbergraph_TutorialTent, K2Node_DynamicCast_AsWBP_Tutorial_Quest_3DTracker) == 0x000098, "Member 'TutorialTent_C_ExecuteUbergraph_TutorialTent::K2Node_DynamicCast_AsWBP_Tutorial_Quest_3DTracker' has a wrong offset!");
static_assert(offsetof(TutorialTent_C_ExecuteUbergraph_TutorialTent, K2Node_DynamicCast_bSuccess_1) == 0x0000A0, "Member 'TutorialTent_C_ExecuteUbergraph_TutorialTent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(TutorialTent_C_ExecuteUbergraph_TutorialTent, K2Node_CreateDelegate_OutputDelegate) == 0x0000A4, "Member 'TutorialTent_C_ExecuteUbergraph_TutorialTent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(TutorialTent_C_ExecuteUbergraph_TutorialTent, K2Node_Event_Visible) == 0x0000B4, "Member 'TutorialTent_C_ExecuteUbergraph_TutorialTent::K2Node_Event_Visible' has a wrong offset!");
static_assert(offsetof(TutorialTent_C_ExecuteUbergraph_TutorialTent, CallFunc_GetPlayerController_ReturnValue) == 0x0000B8, "Member 'TutorialTent_C_ExecuteUbergraph_TutorialTent::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(TutorialTent_C_ExecuteUbergraph_TutorialTent, K2Node_DynamicCast_AsSurv_PC) == 0x0000C0, "Member 'TutorialTent_C_ExecuteUbergraph_TutorialTent::K2Node_DynamicCast_AsSurv_PC' has a wrong offset!");
static_assert(offsetof(TutorialTent_C_ExecuteUbergraph_TutorialTent, K2Node_DynamicCast_bSuccess_2) == 0x0000C8, "Member 'TutorialTent_C_ExecuteUbergraph_TutorialTent::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(TutorialTent_C_ExecuteUbergraph_TutorialTent, K2Node_CustomEvent_TutorialStage) == 0x0000D0, "Member 'TutorialTent_C_ExecuteUbergraph_TutorialTent::K2Node_CustomEvent_TutorialStage' has a wrong offset!");
static_assert(offsetof(TutorialTent_C_ExecuteUbergraph_TutorialTent, CallFunc_GetTutorStage_self_CastInput) == 0x0000E0, "Member 'TutorialTent_C_ExecuteUbergraph_TutorialTent::CallFunc_GetTutorStage_self_CastInput' has a wrong offset!");
static_assert(offsetof(TutorialTent_C_ExecuteUbergraph_TutorialTent, CallFunc_GetTutorStage_StageName) == 0x0000F0, "Member 'TutorialTent_C_ExecuteUbergraph_TutorialTent::CallFunc_GetTutorStage_StageName' has a wrong offset!");
static_assert(offsetof(TutorialTent_C_ExecuteUbergraph_TutorialTent, CallFunc_Array_Contains_ReturnValue) == 0x000100, "Member 'TutorialTent_C_ExecuteUbergraph_TutorialTent::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(TutorialTent_C_ExecuteUbergraph_TutorialTent, CallFunc_Array_Contains_ReturnValue_1) == 0x000101, "Member 'TutorialTent_C_ExecuteUbergraph_TutorialTent::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TutorialTent_C_ExecuteUbergraph_TutorialTent, K2Node_DynamicCast_AsBP_Interactive_Safe) == 0x000108, "Member 'TutorialTent_C_ExecuteUbergraph_TutorialTent::K2Node_DynamicCast_AsBP_Interactive_Safe' has a wrong offset!");
static_assert(offsetof(TutorialTent_C_ExecuteUbergraph_TutorialTent, K2Node_DynamicCast_bSuccess_3) == 0x000110, "Member 'TutorialTent_C_ExecuteUbergraph_TutorialTent::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");

// Function TutorialTent.TutorialTent_C.GetActorType
// 0x0001 (0x0001 - 0x0000)
struct TutorialTent_C_GetActorType final
{
public:
	E_ActorType                                   ActorType;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TutorialTent_C_GetActorType) == 0x000001, "Wrong alignment on TutorialTent_C_GetActorType");
static_assert(sizeof(TutorialTent_C_GetActorType) == 0x000001, "Wrong size on TutorialTent_C_GetActorType");
static_assert(offsetof(TutorialTent_C_GetActorType, ActorType) == 0x000000, "Member 'TutorialTent_C_GetActorType::ActorType' has a wrong offset!");

// Function TutorialTent.TutorialTent_C.IsLocked?
// 0x0001 (0x0001 - 0x0000)
struct TutorialTent_C_IsLocked_ final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TutorialTent_C_IsLocked_) == 0x000001, "Wrong alignment on TutorialTent_C_IsLocked_");
static_assert(sizeof(TutorialTent_C_IsLocked_) == 0x000001, "Wrong size on TutorialTent_C_IsLocked_");
static_assert(offsetof(TutorialTent_C_IsLocked_, Result) == 0x000000, "Member 'TutorialTent_C_IsLocked_::Result' has a wrong offset!");

// Function TutorialTent.TutorialTent_C.OnBeginInteract
// 0x0008 (0x0008 - 0x0000)
struct TutorialTent_C_OnBeginInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TutorialTent_C_OnBeginInteract) == 0x000008, "Wrong alignment on TutorialTent_C_OnBeginInteract");
static_assert(sizeof(TutorialTent_C_OnBeginInteract) == 0x000008, "Wrong size on TutorialTent_C_OnBeginInteract");
static_assert(offsetof(TutorialTent_C_OnBeginInteract, Player) == 0x000000, "Member 'TutorialTent_C_OnBeginInteract::Player' has a wrong offset!");

// Function TutorialTent.TutorialTent_C.OnFocused
// 0x0028 (0x0028 - 0x0000)
struct TutorialTent_C_OnFocused final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HighlightActor;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        HighlightActorComponent;                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_InteractType                                InteractType;                                      // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LateTime;                                          // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TutorialTent_C_OnFocused) == 0x000008, "Wrong alignment on TutorialTent_C_OnFocused");
static_assert(sizeof(TutorialTent_C_OnFocused) == 0x000028, "Wrong size on TutorialTent_C_OnFocused");
static_assert(offsetof(TutorialTent_C_OnFocused, Player) == 0x000000, "Member 'TutorialTent_C_OnFocused::Player' has a wrong offset!");
static_assert(offsetof(TutorialTent_C_OnFocused, HighlightActor) == 0x000008, "Member 'TutorialTent_C_OnFocused::HighlightActor' has a wrong offset!");
static_assert(offsetof(TutorialTent_C_OnFocused, HighlightActorComponent) == 0x000010, "Member 'TutorialTent_C_OnFocused::HighlightActorComponent' has a wrong offset!");
static_assert(offsetof(TutorialTent_C_OnFocused, InteractType) == 0x000018, "Member 'TutorialTent_C_OnFocused::InteractType' has a wrong offset!");
static_assert(offsetof(TutorialTent_C_OnFocused, LateTime) == 0x000020, "Member 'TutorialTent_C_OnFocused::LateTime' has a wrong offset!");

// Function TutorialTent.TutorialTent_C.OnInteract
// 0x0008 (0x0008 - 0x0000)
struct TutorialTent_C_OnInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TutorialTent_C_OnInteract) == 0x000008, "Wrong alignment on TutorialTent_C_OnInteract");
static_assert(sizeof(TutorialTent_C_OnInteract) == 0x000008, "Wrong size on TutorialTent_C_OnInteract");
static_assert(offsetof(TutorialTent_C_OnInteract, Player) == 0x000000, "Member 'TutorialTent_C_OnInteract::Player' has a wrong offset!");

// Function TutorialTent.TutorialTent_C.OnInteract2
// 0x0008 (0x0008 - 0x0000)
struct TutorialTent_C_OnInteract2 final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TutorialTent_C_OnInteract2) == 0x000008, "Wrong alignment on TutorialTent_C_OnInteract2");
static_assert(sizeof(TutorialTent_C_OnInteract2) == 0x000008, "Wrong size on TutorialTent_C_OnInteract2");
static_assert(offsetof(TutorialTent_C_OnInteract2, Player) == 0x000000, "Member 'TutorialTent_C_OnInteract2::Player' has a wrong offset!");

// Function TutorialTent.TutorialTent_C.OnInteract3
// 0x0008 (0x0008 - 0x0000)
struct TutorialTent_C_OnInteract3 final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TutorialTent_C_OnInteract3) == 0x000008, "Wrong alignment on TutorialTent_C_OnInteract3");
static_assert(sizeof(TutorialTent_C_OnInteract3) == 0x000008, "Wrong size on TutorialTent_C_OnInteract3");
static_assert(offsetof(TutorialTent_C_OnInteract3, Player) == 0x000000, "Member 'TutorialTent_C_OnInteract3::Player' has a wrong offset!");

// Function TutorialTent.TutorialTent_C.OnInteractVehicle
// 0x0010 (0x0010 - 0x0000)
struct TutorialTent_C_OnInteractVehicle final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         SitIndex;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipAnimation;                                     // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TutorialTent_C_OnInteractVehicle) == 0x000008, "Wrong alignment on TutorialTent_C_OnInteractVehicle");
static_assert(sizeof(TutorialTent_C_OnInteractVehicle) == 0x000010, "Wrong size on TutorialTent_C_OnInteractVehicle");
static_assert(offsetof(TutorialTent_C_OnInteractVehicle, Player) == 0x000000, "Member 'TutorialTent_C_OnInteractVehicle::Player' has a wrong offset!");
static_assert(offsetof(TutorialTent_C_OnInteractVehicle, SitIndex) == 0x000008, "Member 'TutorialTent_C_OnInteractVehicle::SitIndex' has a wrong offset!");
static_assert(offsetof(TutorialTent_C_OnInteractVehicle, SkipAnimation) == 0x00000C, "Member 'TutorialTent_C_OnInteractVehicle::SkipAnimation' has a wrong offset!");

// Function TutorialTent.TutorialTent_C.OnLocalInteract
// 0x0008 (0x0008 - 0x0000)
struct TutorialTent_C_OnLocalInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TutorialTent_C_OnLocalInteract) == 0x000008, "Wrong alignment on TutorialTent_C_OnLocalInteract");
static_assert(sizeof(TutorialTent_C_OnLocalInteract) == 0x000008, "Wrong size on TutorialTent_C_OnLocalInteract");
static_assert(offsetof(TutorialTent_C_OnLocalInteract, Player) == 0x000000, "Member 'TutorialTent_C_OnLocalInteract::Player' has a wrong offset!");

// Function TutorialTent.TutorialTent_C.OnLostFocus
// 0x0008 (0x0008 - 0x0000)
struct TutorialTent_C_OnLostFocus final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TutorialTent_C_OnLostFocus) == 0x000008, "Wrong alignment on TutorialTent_C_OnLostFocus");
static_assert(sizeof(TutorialTent_C_OnLostFocus) == 0x000008, "Wrong size on TutorialTent_C_OnLostFocus");
static_assert(offsetof(TutorialTent_C_OnLostFocus, Player) == 0x000000, "Member 'TutorialTent_C_OnLostFocus::Player' has a wrong offset!");

// Function TutorialTent.TutorialTent_C.OnSeen
// 0x0008 (0x0008 - 0x0000)
struct TutorialTent_C_OnSeen final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TutorialTent_C_OnSeen) == 0x000008, "Wrong alignment on TutorialTent_C_OnSeen");
static_assert(sizeof(TutorialTent_C_OnSeen) == 0x000008, "Wrong size on TutorialTent_C_OnSeen");
static_assert(offsetof(TutorialTent_C_OnSeen, Player) == 0x000000, "Member 'TutorialTent_C_OnSeen::Player' has a wrong offset!");

// Function TutorialTent.TutorialTent_C.OnStopInteract
// 0x0008 (0x0008 - 0x0000)
struct TutorialTent_C_OnStopInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TutorialTent_C_OnStopInteract) == 0x000008, "Wrong alignment on TutorialTent_C_OnStopInteract");
static_assert(sizeof(TutorialTent_C_OnStopInteract) == 0x000008, "Wrong size on TutorialTent_C_OnStopInteract");
static_assert(offsetof(TutorialTent_C_OnStopInteract, Player) == 0x000000, "Member 'TutorialTent_C_OnStopInteract::Player' has a wrong offset!");

// Function TutorialTent.TutorialTent_C.OnTutorStageUpdated_Event
// 0x0010 (0x0010 - 0x0000)
struct TutorialTent_C_OnTutorStageUpdated_Event final
{
public:
	class FString                                 TutorialStage;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(TutorialTent_C_OnTutorStageUpdated_Event) == 0x000008, "Wrong alignment on TutorialTent_C_OnTutorStageUpdated_Event");
static_assert(sizeof(TutorialTent_C_OnTutorStageUpdated_Event) == 0x000010, "Wrong size on TutorialTent_C_OnTutorStageUpdated_Event");
static_assert(offsetof(TutorialTent_C_OnTutorStageUpdated_Event, TutorialStage) == 0x000000, "Member 'TutorialTent_C_OnTutorStageUpdated_Event::TutorialStage' has a wrong offset!");

// Function TutorialTent.TutorialTent_C.Set3DWidgetVisibility
// 0x0001 (0x0001 - 0x0000)
struct TutorialTent_C_Set3DWidgetVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TutorialTent_C_Set3DWidgetVisibility) == 0x000001, "Wrong alignment on TutorialTent_C_Set3DWidgetVisibility");
static_assert(sizeof(TutorialTent_C_Set3DWidgetVisibility) == 0x000001, "Wrong size on TutorialTent_C_Set3DWidgetVisibility");
static_assert(offsetof(TutorialTent_C_Set3DWidgetVisibility, Visible) == 0x000000, "Member 'TutorialTent_C_Set3DWidgetVisibility::Visible' has a wrong offset!");

// Function TutorialTent.TutorialTent_C.SetTutorial3DWidgetVisibility
// 0x0001 (0x0001 - 0x0000)
struct TutorialTent_C_SetTutorial3DWidgetVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TutorialTent_C_SetTutorial3DWidgetVisibility) == 0x000001, "Wrong alignment on TutorialTent_C_SetTutorial3DWidgetVisibility");
static_assert(sizeof(TutorialTent_C_SetTutorial3DWidgetVisibility) == 0x000001, "Wrong size on TutorialTent_C_SetTutorial3DWidgetVisibility");
static_assert(offsetof(TutorialTent_C_SetTutorial3DWidgetVisibility, Visible) == 0x000000, "Member 'TutorialTent_C_SetTutorial3DWidgetVisibility::Visible' has a wrong offset!");

// Function TutorialTent.TutorialTent_C.Un\Hidetent
// 0x0001 (0x0001 - 0x0000)
struct TutorialTent_C_Un_Hidetent final
{
public:
	bool                                          Hide_;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TutorialTent_C_Un_Hidetent) == 0x000001, "Wrong alignment on TutorialTent_C_Un_Hidetent");
static_assert(sizeof(TutorialTent_C_Un_Hidetent) == 0x000001, "Wrong size on TutorialTent_C_Un_Hidetent");
static_assert(offsetof(TutorialTent_C_Un_Hidetent, Hide_) == 0x000000, "Member 'TutorialTent_C_Un_Hidetent::Hide_' has a wrong offset!");

}

