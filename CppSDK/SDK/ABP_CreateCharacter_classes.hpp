#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_CreateCharacter

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "ABP_CreateCharacter_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_CreateCharacter.ABP_CreateCharacter_C
// 0x0C50 (0x0FA0 - 0x0350)
class UABP_CreateCharacter_C final : public UAnimInstance
{
public:
	uint8                                         Pad_348[0x8];                                      // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_CreateCharacter::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0358(0x0018)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0370(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0378(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0380(0x0020)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt_3;                    // 0x03A0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_16;                   // 0x03E8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_15;                   // 0x0430(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x0478(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x04C0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x0508(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0550(0x0020)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt_2;                    // 0x0570(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x05B8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x0600(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x0648(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0690(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x06B0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x06F8(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0718(0x00C8)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x07E0(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x08A8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x08F0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0938(0x0048)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt_1;                    // 0x0980(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x09C8(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x0A10(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x0B18(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x0B40(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0B68(0x0108)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x0C70(0x00C8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0D38(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x0D80(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0DA8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0DD0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0E18(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0E60(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0EA8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0EF0(0x0048)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt;                      // 0x0F38(0x0048)()
	int32                                         K2Node_PropertyAccess_3;                           // 0x0F80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_PropertyAccess_2;                           // 0x0F84(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_PropertyAccess_1;                           // 0x0F88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_PropertyAccess;                             // 0x0F8C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CreateCharacter_C*                  CharacterRef;                                      // 0x0F90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          beard;                                             // 0x0F98(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Head;                                              // 0x0F99(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void BlueprintBeginPlay();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void ExecuteUbergraph_ABP_CreateCharacter(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_CreateCharacter_C">();
	}
	static class UABP_CreateCharacter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_CreateCharacter_C>();
	}
};
static_assert(alignof(UABP_CreateCharacter_C) == 0x000010, "Wrong alignment on UABP_CreateCharacter_C");
static_assert(sizeof(UABP_CreateCharacter_C) == 0x000FA0, "Wrong size on UABP_CreateCharacter_C");
static_assert(offsetof(UABP_CreateCharacter_C, UberGraphFrame) == 0x000350, "Member 'UABP_CreateCharacter_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_CreateCharacter_C, __AnimBlueprintMutables) == 0x000358, "Member 'UABP_CreateCharacter_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_CreateCharacter_C, AnimBlueprintExtension_PropertyAccess) == 0x000370, "Member 'UABP_CreateCharacter_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_CreateCharacter_C, AnimBlueprintExtension_Base) == 0x000378, "Member 'UABP_CreateCharacter_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_CreateCharacter_C, AnimGraphNode_Root) == 0x000380, "Member 'UABP_CreateCharacter_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_CreateCharacter_C, AnimGraphNode_BlendListByInt_3) == 0x0003A0, "Member 'UABP_CreateCharacter_C::AnimGraphNode_BlendListByInt_3' has a wrong offset!");
static_assert(offsetof(UABP_CreateCharacter_C, AnimGraphNode_SequencePlayer_16) == 0x0003E8, "Member 'UABP_CreateCharacter_C::AnimGraphNode_SequencePlayer_16' has a wrong offset!");
static_assert(offsetof(UABP_CreateCharacter_C, AnimGraphNode_SequencePlayer_15) == 0x000430, "Member 'UABP_CreateCharacter_C::AnimGraphNode_SequencePlayer_15' has a wrong offset!");
static_assert(offsetof(UABP_CreateCharacter_C, AnimGraphNode_SequencePlayer_14) == 0x000478, "Member 'UABP_CreateCharacter_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UABP_CreateCharacter_C, AnimGraphNode_SequencePlayer_13) == 0x0004C0, "Member 'UABP_CreateCharacter_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UABP_CreateCharacter_C, AnimGraphNode_SequencePlayer_12) == 0x000508, "Member 'UABP_CreateCharacter_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UABP_CreateCharacter_C, AnimGraphNode_StateResult_2) == 0x000550, "Member 'UABP_CreateCharacter_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_CreateCharacter_C, AnimGraphNode_BlendListByInt_2) == 0x000570, "Member 'UABP_CreateCharacter_C::AnimGraphNode_BlendListByInt_2' has a wrong offset!");
static_assert(offsetof(UABP_CreateCharacter_C, AnimGraphNode_SequencePlayer_11) == 0x0005B8, "Member 'UABP_CreateCharacter_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UABP_CreateCharacter_C, AnimGraphNode_SequencePlayer_10) == 0x000600, "Member 'UABP_CreateCharacter_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_CreateCharacter_C, AnimGraphNode_SequencePlayer_9) == 0x000648, "Member 'UABP_CreateCharacter_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_CreateCharacter_C, AnimGraphNode_StateResult_1) == 0x000690, "Member 'UABP_CreateCharacter_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_CreateCharacter_C, AnimGraphNode_SequencePlayer_8) == 0x0006B0, "Member 'UABP_CreateCharacter_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_CreateCharacter_C, AnimGraphNode_StateResult) == 0x0006F8, "Member 'UABP_CreateCharacter_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_CreateCharacter_C, AnimGraphNode_StateMachine) == 0x000718, "Member 'UABP_CreateCharacter_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_CreateCharacter_C, AnimGraphNode_ApplyAdditive_1) == 0x0007E0, "Member 'UABP_CreateCharacter_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UABP_CreateCharacter_C, AnimGraphNode_SequencePlayer_7) == 0x0008A8, "Member 'UABP_CreateCharacter_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_CreateCharacter_C, AnimGraphNode_SequencePlayer_6) == 0x0008F0, "Member 'UABP_CreateCharacter_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_CreateCharacter_C, AnimGraphNode_SequencePlayer_5) == 0x000938, "Member 'UABP_CreateCharacter_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_CreateCharacter_C, AnimGraphNode_BlendListByInt_1) == 0x000980, "Member 'UABP_CreateCharacter_C::AnimGraphNode_BlendListByInt_1' has a wrong offset!");
static_assert(offsetof(UABP_CreateCharacter_C, AnimGraphNode_BlendListByBool_1) == 0x0009C8, "Member 'UABP_CreateCharacter_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABP_CreateCharacter_C, AnimGraphNode_SaveCachedPose_1) == 0x000A10, "Member 'UABP_CreateCharacter_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_CreateCharacter_C, AnimGraphNode_UseCachedPose_3) == 0x000B18, "Member 'UABP_CreateCharacter_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_CreateCharacter_C, AnimGraphNode_UseCachedPose_2) == 0x000B40, "Member 'UABP_CreateCharacter_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_CreateCharacter_C, AnimGraphNode_SaveCachedPose) == 0x000B68, "Member 'UABP_CreateCharacter_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_CreateCharacter_C, AnimGraphNode_ApplyAdditive) == 0x000C70, "Member 'UABP_CreateCharacter_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_CreateCharacter_C, AnimGraphNode_BlendListByBool) == 0x000D38, "Member 'UABP_CreateCharacter_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_CreateCharacter_C, AnimGraphNode_UseCachedPose_1) == 0x000D80, "Member 'UABP_CreateCharacter_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_CreateCharacter_C, AnimGraphNode_UseCachedPose) == 0x000DA8, "Member 'UABP_CreateCharacter_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_CreateCharacter_C, AnimGraphNode_SequencePlayer_4) == 0x000DD0, "Member 'UABP_CreateCharacter_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_CreateCharacter_C, AnimGraphNode_SequencePlayer_3) == 0x000E18, "Member 'UABP_CreateCharacter_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_CreateCharacter_C, AnimGraphNode_SequencePlayer_2) == 0x000E60, "Member 'UABP_CreateCharacter_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_CreateCharacter_C, AnimGraphNode_SequencePlayer_1) == 0x000EA8, "Member 'UABP_CreateCharacter_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_CreateCharacter_C, AnimGraphNode_SequencePlayer) == 0x000EF0, "Member 'UABP_CreateCharacter_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_CreateCharacter_C, AnimGraphNode_BlendListByInt) == 0x000F38, "Member 'UABP_CreateCharacter_C::AnimGraphNode_BlendListByInt' has a wrong offset!");
static_assert(offsetof(UABP_CreateCharacter_C, K2Node_PropertyAccess_3) == 0x000F80, "Member 'UABP_CreateCharacter_C::K2Node_PropertyAccess_3' has a wrong offset!");
static_assert(offsetof(UABP_CreateCharacter_C, K2Node_PropertyAccess_2) == 0x000F84, "Member 'UABP_CreateCharacter_C::K2Node_PropertyAccess_2' has a wrong offset!");
static_assert(offsetof(UABP_CreateCharacter_C, K2Node_PropertyAccess_1) == 0x000F88, "Member 'UABP_CreateCharacter_C::K2Node_PropertyAccess_1' has a wrong offset!");
static_assert(offsetof(UABP_CreateCharacter_C, K2Node_PropertyAccess) == 0x000F8C, "Member 'UABP_CreateCharacter_C::K2Node_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_CreateCharacter_C, CharacterRef) == 0x000F90, "Member 'UABP_CreateCharacter_C::CharacterRef' has a wrong offset!");
static_assert(offsetof(UABP_CreateCharacter_C, beard) == 0x000F98, "Member 'UABP_CreateCharacter_C::beard' has a wrong offset!");
static_assert(offsetof(UABP_CreateCharacter_C, Head) == 0x000F99, "Member 'UABP_CreateCharacter_C::Head' has a wrong offset!");

}

