#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SideQuests

#include "Basic.hpp"

#include "SideQuests_classes.hpp"
#include "SideQuests_parameters.hpp"


namespace SDK
{

// Function SideQuests.SideQuests_C.ExecuteUbergraph_SideQuests
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USideQuests_C::ExecuteUbergraph_SideQuests(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SideQuests_C", "ExecuteUbergraph_SideQuests");

	Params::SideQuests_C_ExecuteUbergraph_SideQuests Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SideQuests.SideQuests_C.InitializeSideQuests
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param_ID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Param_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Param_StartTrigger                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class AQuestManager_C*                  Param_Manager                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void USideQuests_C::InitializeSideQuests(const class FString& Param_ID, const class FString& Param_Name, const class FString& Param_StartTrigger, class AQuestManager_C* Param_Manager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SideQuests_C", "InitializeSideQuests");

	Params::SideQuests_C_InitializeSideQuests Parms{};

	Parms.Param_ID = std::move(Param_ID);
	Parms.Param_Name = std::move(Param_Name);
	Parms.Param_StartTrigger = std::move(Param_StartTrigger);
	Parms.Param_Manager = Param_Manager;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SideQuests.SideQuests_C.InitializeSideQuestsV2
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param_ID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Param_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Param_StartTrigger                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UQuestSystemV3_C*                 QuestSystem                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void USideQuests_C::InitializeSideQuestsV2(const class FString& Param_ID, const class FString& Param_Name, const class FString& Param_StartTrigger, class UQuestSystemV3_C* QuestSystem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SideQuests_C", "InitializeSideQuestsV2");

	Params::SideQuests_C_InitializeSideQuestsV2 Parms{};

	Parms.Param_ID = std::move(Param_ID);
	Parms.Param_Name = std::move(Param_Name);
	Parms.Param_StartTrigger = std::move(Param_StartTrigger);
	Parms.QuestSystem = QuestSystem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SideQuests.SideQuests_C.IsMyStartTrigger
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Trigger                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Param_IsMyStartTrigger                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USideQuests_C::IsMyStartTrigger(const class FString& Trigger, bool* Param_IsMyStartTrigger)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SideQuests_C", "IsMyStartTrigger");

	Params::SideQuests_C_IsMyStartTrigger Parms{};

	Parms.Trigger = std::move(Trigger);

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsMyStartTrigger != nullptr)
		*Param_IsMyStartTrigger = Parms.Param_IsMyStartTrigger;
}


// Function SideQuests.SideQuests_C.SwitchQuestSilent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UQuestV2_C*                       Quest                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void USideQuests_C::SwitchQuestSilent(class UQuestV2_C* Quest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SideQuests_C", "SwitchQuestSilent");

	Params::SideQuests_C_SwitchQuestSilent Parms{};

	Parms.Quest = Quest;

	UObject::ProcessEvent(Func, &Parms);
}

}

