#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ClimbAsset

#include "Basic.hpp"

#include "BPE_Weapon_Type_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// UserDefinedStruct ClimbAsset.ClimbAsset
// 0x00F8 (0x00F8 - 0x0000)
struct FClimbAsset final
{
public:
	TMap<EBPE_Weapon_Type, class UAnimMontage*>   AnimMontage_57_BD00EE9F4B1E484AAFEFA89FDD922D70;   // 0x0000(0x0050)(Edit, BlueprintVisible)
	class UCurveVector*                           PositionCorrectionCurve_5_9414BD1C41F04C5AC213BCBA9611377A; // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StartingOffset_8_7657CDE843C0C777C1D860B955D248A9; // 0x0058(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LowHeight_11_CC8A2D0C4A41FC4B8A9B9BA36B992CB0;     // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LowPlayRate_13_82808E3F46E28E5D45A90C875E789705;   // 0x0074(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LowStartPosition_15_D0CC52B74A732AD664C73192BB87E3F9; // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HIghHeight_17_A76500934A5ABEC4883CAD8AA1FF3E39;    // 0x007C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HighPlayRate_19_6FDEF6EB49F64D22EA595DB38DF678C7;  // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HighStartPosition_21_3DD65489489DBEDF770F26925175CD8A; // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndingOffset_25_8844DCCC48E6EB13D5EAE6A8FBADD173;  // 0x0088(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneRoot_28_7660ED434440B3C9C6BEDD9AA0B3378B;      // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveVector*                           PositionLerpCurve_31_F0C1912842F8C219392355954EE2689F; // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AdditionalOffset_34_6B2E4A6540D1390DDDC518AACF7495F8; // 0x00B0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DistanceToCutOff_41_221A9A5D42627B67FDECE6A3FA41877D; // 0x00C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CutOffTime_42_DB5550D6443076F8220630B723DD1C91;    // 0x00CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlendoutTime_44_6EC430DB4092CD41153EC386115D39A2;  // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            RootMotion_X_47_2055FF27439D8C0228D991AC2F7E7E35;  // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            RootMotion_Y_49_53748DCE45567F58718527922A1BC3DD;  // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            RootMotion_Z_51_F127054742C28E0A69743E925691FB8A;  // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveVector*                           LerpValues_54_C650BD4541AD49101F144497D78CFEE0;    // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FClimbAsset) == 0x000008, "Wrong alignment on FClimbAsset");
static_assert(sizeof(FClimbAsset) == 0x0000F8, "Wrong size on FClimbAsset");
static_assert(offsetof(FClimbAsset, AnimMontage_57_BD00EE9F4B1E484AAFEFA89FDD922D70) == 0x000000, "Member 'FClimbAsset::AnimMontage_57_BD00EE9F4B1E484AAFEFA89FDD922D70' has a wrong offset!");
static_assert(offsetof(FClimbAsset, PositionCorrectionCurve_5_9414BD1C41F04C5AC213BCBA9611377A) == 0x000050, "Member 'FClimbAsset::PositionCorrectionCurve_5_9414BD1C41F04C5AC213BCBA9611377A' has a wrong offset!");
static_assert(offsetof(FClimbAsset, StartingOffset_8_7657CDE843C0C777C1D860B955D248A9) == 0x000058, "Member 'FClimbAsset::StartingOffset_8_7657CDE843C0C777C1D860B955D248A9' has a wrong offset!");
static_assert(offsetof(FClimbAsset, LowHeight_11_CC8A2D0C4A41FC4B8A9B9BA36B992CB0) == 0x000070, "Member 'FClimbAsset::LowHeight_11_CC8A2D0C4A41FC4B8A9B9BA36B992CB0' has a wrong offset!");
static_assert(offsetof(FClimbAsset, LowPlayRate_13_82808E3F46E28E5D45A90C875E789705) == 0x000074, "Member 'FClimbAsset::LowPlayRate_13_82808E3F46E28E5D45A90C875E789705' has a wrong offset!");
static_assert(offsetof(FClimbAsset, LowStartPosition_15_D0CC52B74A732AD664C73192BB87E3F9) == 0x000078, "Member 'FClimbAsset::LowStartPosition_15_D0CC52B74A732AD664C73192BB87E3F9' has a wrong offset!");
static_assert(offsetof(FClimbAsset, HIghHeight_17_A76500934A5ABEC4883CAD8AA1FF3E39) == 0x00007C, "Member 'FClimbAsset::HIghHeight_17_A76500934A5ABEC4883CAD8AA1FF3E39' has a wrong offset!");
static_assert(offsetof(FClimbAsset, HighPlayRate_19_6FDEF6EB49F64D22EA595DB38DF678C7) == 0x000080, "Member 'FClimbAsset::HighPlayRate_19_6FDEF6EB49F64D22EA595DB38DF678C7' has a wrong offset!");
static_assert(offsetof(FClimbAsset, HighStartPosition_21_3DD65489489DBEDF770F26925175CD8A) == 0x000084, "Member 'FClimbAsset::HighStartPosition_21_3DD65489489DBEDF770F26925175CD8A' has a wrong offset!");
static_assert(offsetof(FClimbAsset, EndingOffset_25_8844DCCC48E6EB13D5EAE6A8FBADD173) == 0x000088, "Member 'FClimbAsset::EndingOffset_25_8844DCCC48E6EB13D5EAE6A8FBADD173' has a wrong offset!");
static_assert(offsetof(FClimbAsset, BoneRoot_28_7660ED434440B3C9C6BEDD9AA0B3378B) == 0x0000A0, "Member 'FClimbAsset::BoneRoot_28_7660ED434440B3C9C6BEDD9AA0B3378B' has a wrong offset!");
static_assert(offsetof(FClimbAsset, PositionLerpCurve_31_F0C1912842F8C219392355954EE2689F) == 0x0000A8, "Member 'FClimbAsset::PositionLerpCurve_31_F0C1912842F8C219392355954EE2689F' has a wrong offset!");
static_assert(offsetof(FClimbAsset, AdditionalOffset_34_6B2E4A6540D1390DDDC518AACF7495F8) == 0x0000B0, "Member 'FClimbAsset::AdditionalOffset_34_6B2E4A6540D1390DDDC518AACF7495F8' has a wrong offset!");
static_assert(offsetof(FClimbAsset, DistanceToCutOff_41_221A9A5D42627B67FDECE6A3FA41877D) == 0x0000C8, "Member 'FClimbAsset::DistanceToCutOff_41_221A9A5D42627B67FDECE6A3FA41877D' has a wrong offset!");
static_assert(offsetof(FClimbAsset, CutOffTime_42_DB5550D6443076F8220630B723DD1C91) == 0x0000CC, "Member 'FClimbAsset::CutOffTime_42_DB5550D6443076F8220630B723DD1C91' has a wrong offset!");
static_assert(offsetof(FClimbAsset, BlendoutTime_44_6EC430DB4092CD41153EC386115D39A2) == 0x0000D0, "Member 'FClimbAsset::BlendoutTime_44_6EC430DB4092CD41153EC386115D39A2' has a wrong offset!");
static_assert(offsetof(FClimbAsset, RootMotion_X_47_2055FF27439D8C0228D991AC2F7E7E35) == 0x0000D8, "Member 'FClimbAsset::RootMotion_X_47_2055FF27439D8C0228D991AC2F7E7E35' has a wrong offset!");
static_assert(offsetof(FClimbAsset, RootMotion_Y_49_53748DCE45567F58718527922A1BC3DD) == 0x0000E0, "Member 'FClimbAsset::RootMotion_Y_49_53748DCE45567F58718527922A1BC3DD' has a wrong offset!");
static_assert(offsetof(FClimbAsset, RootMotion_Z_51_F127054742C28E0A69743E925691FB8A) == 0x0000E8, "Member 'FClimbAsset::RootMotion_Z_51_F127054742C28E0A69743E925691FB8A' has a wrong offset!");
static_assert(offsetof(FClimbAsset, LerpValues_54_C650BD4541AD49101F144497D78CFEE0) == 0x0000F0, "Member 'FClimbAsset::LerpValues_54_C650BD4541AD49101F144497D78CFEE0' has a wrong offset!");

}

