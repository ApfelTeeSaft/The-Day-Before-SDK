#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VehicleStat

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function VehicleStat.VehicleStat_C.ExecuteUbergraph_VehicleStat
// 0x0090 (0x0090 - 0x0000)
struct VehicleStat_C_ExecuteUbergraph_VehicleStat final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0004(0x0014)()
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_InText;                         // 0x0020(0x0018)()
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0038(0x0058)(HasGetValueTypeHash)
};
static_assert(alignof(VehicleStat_C_ExecuteUbergraph_VehicleStat) == 0x000008, "Wrong alignment on VehicleStat_C_ExecuteUbergraph_VehicleStat");
static_assert(sizeof(VehicleStat_C_ExecuteUbergraph_VehicleStat) == 0x000090, "Wrong size on VehicleStat_C_ExecuteUbergraph_VehicleStat");
static_assert(offsetof(VehicleStat_C_ExecuteUbergraph_VehicleStat, EntryPoint) == 0x000000, "Member 'VehicleStat_C_ExecuteUbergraph_VehicleStat::EntryPoint' has a wrong offset!");
static_assert(offsetof(VehicleStat_C_ExecuteUbergraph_VehicleStat, K2Node_MakeStruct_SlateColor) == 0x000004, "Member 'VehicleStat_C_ExecuteUbergraph_VehicleStat::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(VehicleStat_C_ExecuteUbergraph_VehicleStat, K2Node_Event_IsDesignTime) == 0x000018, "Member 'VehicleStat_C_ExecuteUbergraph_VehicleStat::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(VehicleStat_C_ExecuteUbergraph_VehicleStat, K2Node_CustomEvent_InText) == 0x000020, "Member 'VehicleStat_C_ExecuteUbergraph_VehicleStat::K2Node_CustomEvent_InText' has a wrong offset!");
static_assert(offsetof(VehicleStat_C_ExecuteUbergraph_VehicleStat, K2Node_MakeStruct_SlateFontInfo) == 0x000038, "Member 'VehicleStat_C_ExecuteUbergraph_VehicleStat::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");

// Function VehicleStat.VehicleStat_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct VehicleStat_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VehicleStat_C_PreConstruct) == 0x000001, "Wrong alignment on VehicleStat_C_PreConstruct");
static_assert(sizeof(VehicleStat_C_PreConstruct) == 0x000001, "Wrong size on VehicleStat_C_PreConstruct");
static_assert(offsetof(VehicleStat_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'VehicleStat_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function VehicleStat.VehicleStat_C.SetInfo
// 0x0018 (0x0018 - 0x0000)
struct VehicleStat_C_SetInfo final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(VehicleStat_C_SetInfo) == 0x000008, "Wrong alignment on VehicleStat_C_SetInfo");
static_assert(sizeof(VehicleStat_C_SetInfo) == 0x000018, "Wrong size on VehicleStat_C_SetInfo");
static_assert(offsetof(VehicleStat_C_SetInfo, InText) == 0x000000, "Member 'VehicleStat_C_SetInfo::InText' has a wrong offset!");

}

