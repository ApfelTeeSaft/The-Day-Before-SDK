#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ModeRow

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "InputCore_structs.hpp"
#include "FItemInfo_structs.hpp"
#include "FMODStudio_structs.hpp"


namespace SDK::Params
{

// Function WBP_ModeRow.WBP_ModeRow_C.ExecuteUbergraph_WBP_ModeRow
// 0x0270 (0x0270 - 0x0000)
struct WBP_ModeRow_C_ExecuteUbergraph_WBP_ModeRow final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWBP_ModeRow_C* ModeWidgetRef, const struct FFItemInfo& ModeInfo)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ModeRow_C*                         K2Node_CustomEvent_ModeWidgetRef;                  // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             K2Node_CustomEvent_ModeInfo;                       // 0x0020(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0242(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_243[0x5];                                      // 0x0243(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue;                  // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue_1;                // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0260(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ModeRow_C_ExecuteUbergraph_WBP_ModeRow) == 0x000008, "Wrong alignment on WBP_ModeRow_C_ExecuteUbergraph_WBP_ModeRow");
static_assert(sizeof(WBP_ModeRow_C_ExecuteUbergraph_WBP_ModeRow) == 0x000270, "Wrong size on WBP_ModeRow_C_ExecuteUbergraph_WBP_ModeRow");
static_assert(offsetof(WBP_ModeRow_C_ExecuteUbergraph_WBP_ModeRow, EntryPoint) == 0x000000, "Member 'WBP_ModeRow_C_ExecuteUbergraph_WBP_ModeRow::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_ModeRow_C_ExecuteUbergraph_WBP_ModeRow, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_ModeRow_C_ExecuteUbergraph_WBP_ModeRow::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_ModeRow_C_ExecuteUbergraph_WBP_ModeRow, CallFunc_Not_PreBool_ReturnValue) == 0x000014, "Member 'WBP_ModeRow_C_ExecuteUbergraph_WBP_ModeRow::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModeRow_C_ExecuteUbergraph_WBP_ModeRow, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000015, "Member 'WBP_ModeRow_C_ExecuteUbergraph_WBP_ModeRow::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModeRow_C_ExecuteUbergraph_WBP_ModeRow, K2Node_CustomEvent_ModeWidgetRef) == 0x000018, "Member 'WBP_ModeRow_C_ExecuteUbergraph_WBP_ModeRow::K2Node_CustomEvent_ModeWidgetRef' has a wrong offset!");
static_assert(offsetof(WBP_ModeRow_C_ExecuteUbergraph_WBP_ModeRow, K2Node_CustomEvent_ModeInfo) == 0x000020, "Member 'WBP_ModeRow_C_ExecuteUbergraph_WBP_ModeRow::K2Node_CustomEvent_ModeInfo' has a wrong offset!");
static_assert(offsetof(WBP_ModeRow_C_ExecuteUbergraph_WBP_ModeRow, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000240, "Member 'WBP_ModeRow_C_ExecuteUbergraph_WBP_ModeRow::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModeRow_C_ExecuteUbergraph_WBP_ModeRow, CallFunc_IsValid_ReturnValue) == 0x000241, "Member 'WBP_ModeRow_C_ExecuteUbergraph_WBP_ModeRow::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModeRow_C_ExecuteUbergraph_WBP_ModeRow, CallFunc_Not_PreBool_ReturnValue_1) == 0x000242, "Member 'WBP_ModeRow_C_ExecuteUbergraph_WBP_ModeRow::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ModeRow_C_ExecuteUbergraph_WBP_ModeRow, CallFunc_PlayEvent2D_ReturnValue) == 0x000248, "Member 'WBP_ModeRow_C_ExecuteUbergraph_WBP_ModeRow::CallFunc_PlayEvent2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModeRow_C_ExecuteUbergraph_WBP_ModeRow, CallFunc_PlayEvent2D_ReturnValue_1) == 0x000250, "Member 'WBP_ModeRow_C_ExecuteUbergraph_WBP_ModeRow::CallFunc_PlayEvent2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ModeRow_C_ExecuteUbergraph_WBP_ModeRow, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000258, "Member 'WBP_ModeRow_C_ExecuteUbergraph_WBP_ModeRow::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModeRow_C_ExecuteUbergraph_WBP_ModeRow, CallFunc_PlayAnimationForward_ReturnValue) == 0x000260, "Member 'WBP_ModeRow_C_ExecuteUbergraph_WBP_ModeRow::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModeRow_C_ExecuteUbergraph_WBP_ModeRow, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000268, "Member 'WBP_ModeRow_C_ExecuteUbergraph_WBP_ModeRow::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");

// Function WBP_ModeRow.WBP_ModeRow_C.IsDefaultMode
// 0x0001 (0x0001 - 0x0000)
struct WBP_ModeRow_C_IsDefaultMode final
{
public:
	bool                                          IsNoneMode;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ModeRow_C_IsDefaultMode) == 0x000001, "Wrong alignment on WBP_ModeRow_C_IsDefaultMode");
static_assert(sizeof(WBP_ModeRow_C_IsDefaultMode) == 0x000001, "Wrong size on WBP_ModeRow_C_IsDefaultMode");
static_assert(offsetof(WBP_ModeRow_C_IsDefaultMode, IsNoneMode) == 0x000000, "Member 'WBP_ModeRow_C_IsDefaultMode::IsNoneMode' has a wrong offset!");

// Function WBP_ModeRow.WBP_ModeRow_C.OnActiveModeChanged
// 0x0228 (0x0228 - 0x0000)
struct WBP_ModeRow_C_OnActiveModeChanged final
{
public:
	class UWBP_ModeRow_C*                         ModeWidgetRef;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             ModeInfo;                                          // 0x0008(0x0220)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ModeRow_C_OnActiveModeChanged) == 0x000008, "Wrong alignment on WBP_ModeRow_C_OnActiveModeChanged");
static_assert(sizeof(WBP_ModeRow_C_OnActiveModeChanged) == 0x000228, "Wrong size on WBP_ModeRow_C_OnActiveModeChanged");
static_assert(offsetof(WBP_ModeRow_C_OnActiveModeChanged, ModeWidgetRef) == 0x000000, "Member 'WBP_ModeRow_C_OnActiveModeChanged::ModeWidgetRef' has a wrong offset!");
static_assert(offsetof(WBP_ModeRow_C_OnActiveModeChanged, ModeInfo) == 0x000008, "Member 'WBP_ModeRow_C_OnActiveModeChanged::ModeInfo' has a wrong offset!");

// Function WBP_ModeRow.WBP_ModeRow_C.OnKeyDown
// 0x0208 (0x0208 - 0x0000)
struct WBP_ModeRow_C_OnKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x0130(0x0018)(HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0148(0x00B8)()
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ModeRow_C_OnKeyDown) == 0x000008, "Wrong alignment on WBP_ModeRow_C_OnKeyDown");
static_assert(sizeof(WBP_ModeRow_C_OnKeyDown) == 0x000208, "Wrong size on WBP_ModeRow_C_OnKeyDown");
static_assert(offsetof(WBP_ModeRow_C_OnKeyDown, MyGeometry) == 0x000000, "Member 'WBP_ModeRow_C_OnKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_ModeRow_C_OnKeyDown, InKeyEvent) == 0x000038, "Member 'WBP_ModeRow_C_OnKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_ModeRow_C_OnKeyDown, ReturnValue) == 0x000078, "Member 'WBP_ModeRow_C_OnKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModeRow_C_OnKeyDown, CallFunc_GetKey_ReturnValue) == 0x000130, "Member 'WBP_ModeRow_C_OnKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModeRow_C_OnKeyDown, CallFunc_Handled_ReturnValue) == 0x000148, "Member 'WBP_ModeRow_C_OnKeyDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ModeRow_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000200, "Member 'WBP_ModeRow_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");

}

