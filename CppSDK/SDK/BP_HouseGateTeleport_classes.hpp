#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HouseGateTeleport

#include "Basic.hpp"

#include "E_HouseType_structs.hpp"
#include "E_InteractType_structs.hpp"
#include "Engine_structs.hpp"
#include "E_CarStatus_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_TeleporterDoorMaster_classes.hpp"
#include "E_ActorType_structs.hpp"
#include "DayCycleState_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HouseGateTeleport.BP_HouseGateTeleport_C
// 0x0170 (0x0428 - 0x02B8)
class ABP_HouseGateTeleport_C final : public ABP_TeleporterDoorMaster_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UArrowComponent*                        Arrow;                                             // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Wood_gate_R;                                       // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Wood_gate_L;                                       // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       TutorialPoint3D;                                   // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UIconComponent_C*                       IconComponent;                                     // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Capsule;                                           // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        PointToInteract;                                   // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          TipBox;                                            // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        ExitAnimationRoot;                                 // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Door_NewTrack_0_872FEEE740E840B4036B87944C6AE275;  // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Door__Direction_872FEEE740E840B4036B87944C6AE275;  // 0x0314(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_315[0x3];                                      // 0x0315(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Door;                                              // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Has_Reset;                                         // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           Timer_by_reset;                                    // 0x0328(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ASurvPC_C*                              Current_PC;                                        // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Angle;                                             // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StartTeleport;                                     // 0x0340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PrevLineTraceResult;                               // 0x0341(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InteractingAnimation;                              // 0x0342(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_343[0x5];                                      // 0x0343(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerCutsceneComponent_C*             CutsceneEnded;                                     // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Icon;                                              // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              IconSize;                                          // 0x0358(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_PlayerSpawnPoint_C*>         SPTier1;                                           // 0x0368(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class ABP_PlayerSpawnPoint_C*>         SPTier2;                                           // 0x0378(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class ABP_PlayerSpawnPoint_C*>         SPTier3;                                           // 0x0388(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class ABP_PlayerSpawnPoint_C*>         SPTier4;                                           // 0x0398(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TMap<class ABP_PlayerSpawnPoint_C*, int32>    SPPlayer;                                          // 0x03A8(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class ASurvivalPlayer_V2_C*                   SurvChar;                                          // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            DoorMesh;                                          // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          PartyTeleport;                                     // 0x0408(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_409[0x3];                                      // 0x0409(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Home_Ref;                                          // 0x040C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ToHub_;                                            // 0x0414(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Squad_Member;                                      // 0x0415(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_416[0x2];                                      // 0x0416(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         ActiveTutorialStage;                               // 0x0418(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void AreSquadMembersReady(bool* Bool, bool* IsSquadMember);
	void BndEvt__BP_DoorTeleport_TipBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ChangeIcon(EDayCycleState DayCycleState);
	void DestroyInteractable();
	void Door__FinishedFunc();
	void Door__UpdateFunc();
	void ExecuteUbergraph_BP_HouseGateTeleport(int32 EntryPoint);
	void ExitToRaid();
	void FocusOver(class UUIW_PlayerMain_C* Param_FocusOver);
	void GARAGE();
	void GetActorType(E_ActorType* ActorType);
	void GetMapIconData(struct FVector* Location, class UTexture2D** Param_Icon, struct FVector2D* Param_IconSize, double* RotationYaw, class AActor** WorldActor, class FText* Param_Name, class FText* Description);
	void GroupTeleport();
	bool IsInViewport();
	void IsLocked_(bool* Result);
	bool IsPartyMember();
	bool IsSomethingOnA_Way();
	void On_Black_Screen_Opened();
	void OnBeginInteract(class APawn* Player);
	void OnCutsceneEnded();
	void OnFocused(class APawn* Player, class AActor* HighlightActor, class UActorComponent* HighlightActorComponent, E_InteractType* InteractType, double* LateTime);
	void OnInteract(class APawn* Player);
	void OnInteract2(class APawn* Player);
	void OnInteract3(class APawn* Player);
	void OnInteractVehicle(class APawn* Player, int32 SitIndex, bool SkipAnimation);
	void OnLocalInteract(class APawn* Player);
	void OnLostFocus(class APawn* Player);
	void OnSeen(class APawn* Player);
	void OnSquadCheckComplete();
	void OnStopInteract(class APawn* Player);
	void OnTutorStageUpdated_Event(const class FString& TutorialStage);
	void ReceiveBeginPlay();
	void Reset();
	void Reset_Timer();
	void Run_Lockpicking();
	void Set3DWidgetVisibility(bool Visible);
	void SetTutorial3DWidgetVisibility(bool Visible);
	void ShowFadeIn(bool Showed);
	void Squad(class FName Param_Home_Ref);
	void StartTpWithCar();
	void UpdateIconPosition(const struct FVector2D& Position);
	void UserConstructionScript();
	void World();
	void Zoom(bool Out);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HouseGateTeleport_C">();
	}
	static class ABP_HouseGateTeleport_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_HouseGateTeleport_C>();
	}
};
static_assert(alignof(ABP_HouseGateTeleport_C) == 0x000008, "Wrong alignment on ABP_HouseGateTeleport_C");
static_assert(sizeof(ABP_HouseGateTeleport_C) == 0x000428, "Wrong size on ABP_HouseGateTeleport_C");
static_assert(offsetof(ABP_HouseGateTeleport_C, UberGraphFrame) == 0x0002B8, "Member 'ABP_HouseGateTeleport_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_HouseGateTeleport_C, Arrow) == 0x0002C0, "Member 'ABP_HouseGateTeleport_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_HouseGateTeleport_C, Wood_gate_R) == 0x0002C8, "Member 'ABP_HouseGateTeleport_C::Wood_gate_R' has a wrong offset!");
static_assert(offsetof(ABP_HouseGateTeleport_C, Wood_gate_L) == 0x0002D0, "Member 'ABP_HouseGateTeleport_C::Wood_gate_L' has a wrong offset!");
static_assert(offsetof(ABP_HouseGateTeleport_C, TutorialPoint3D) == 0x0002D8, "Member 'ABP_HouseGateTeleport_C::TutorialPoint3D' has a wrong offset!");
static_assert(offsetof(ABP_HouseGateTeleport_C, IconComponent) == 0x0002E0, "Member 'ABP_HouseGateTeleport_C::IconComponent' has a wrong offset!");
static_assert(offsetof(ABP_HouseGateTeleport_C, Capsule) == 0x0002E8, "Member 'ABP_HouseGateTeleport_C::Capsule' has a wrong offset!");
static_assert(offsetof(ABP_HouseGateTeleport_C, PointToInteract) == 0x0002F0, "Member 'ABP_HouseGateTeleport_C::PointToInteract' has a wrong offset!");
static_assert(offsetof(ABP_HouseGateTeleport_C, TipBox) == 0x0002F8, "Member 'ABP_HouseGateTeleport_C::TipBox' has a wrong offset!");
static_assert(offsetof(ABP_HouseGateTeleport_C, ExitAnimationRoot) == 0x000300, "Member 'ABP_HouseGateTeleport_C::ExitAnimationRoot' has a wrong offset!");
static_assert(offsetof(ABP_HouseGateTeleport_C, Scene) == 0x000308, "Member 'ABP_HouseGateTeleport_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_HouseGateTeleport_C, Door_NewTrack_0_872FEEE740E840B4036B87944C6AE275) == 0x000310, "Member 'ABP_HouseGateTeleport_C::Door_NewTrack_0_872FEEE740E840B4036B87944C6AE275' has a wrong offset!");
static_assert(offsetof(ABP_HouseGateTeleport_C, Door__Direction_872FEEE740E840B4036B87944C6AE275) == 0x000314, "Member 'ABP_HouseGateTeleport_C::Door__Direction_872FEEE740E840B4036B87944C6AE275' has a wrong offset!");
static_assert(offsetof(ABP_HouseGateTeleport_C, Door) == 0x000318, "Member 'ABP_HouseGateTeleport_C::Door' has a wrong offset!");
static_assert(offsetof(ABP_HouseGateTeleport_C, Has_Reset) == 0x000320, "Member 'ABP_HouseGateTeleport_C::Has_Reset' has a wrong offset!");
static_assert(offsetof(ABP_HouseGateTeleport_C, Timer_by_reset) == 0x000328, "Member 'ABP_HouseGateTeleport_C::Timer_by_reset' has a wrong offset!");
static_assert(offsetof(ABP_HouseGateTeleport_C, Current_PC) == 0x000330, "Member 'ABP_HouseGateTeleport_C::Current_PC' has a wrong offset!");
static_assert(offsetof(ABP_HouseGateTeleport_C, Angle) == 0x000338, "Member 'ABP_HouseGateTeleport_C::Angle' has a wrong offset!");
static_assert(offsetof(ABP_HouseGateTeleport_C, StartTeleport) == 0x000340, "Member 'ABP_HouseGateTeleport_C::StartTeleport' has a wrong offset!");
static_assert(offsetof(ABP_HouseGateTeleport_C, PrevLineTraceResult) == 0x000341, "Member 'ABP_HouseGateTeleport_C::PrevLineTraceResult' has a wrong offset!");
static_assert(offsetof(ABP_HouseGateTeleport_C, InteractingAnimation) == 0x000342, "Member 'ABP_HouseGateTeleport_C::InteractingAnimation' has a wrong offset!");
static_assert(offsetof(ABP_HouseGateTeleport_C, CutsceneEnded) == 0x000348, "Member 'ABP_HouseGateTeleport_C::CutsceneEnded' has a wrong offset!");
static_assert(offsetof(ABP_HouseGateTeleport_C, Icon) == 0x000350, "Member 'ABP_HouseGateTeleport_C::Icon' has a wrong offset!");
static_assert(offsetof(ABP_HouseGateTeleport_C, IconSize) == 0x000358, "Member 'ABP_HouseGateTeleport_C::IconSize' has a wrong offset!");
static_assert(offsetof(ABP_HouseGateTeleport_C, SPTier1) == 0x000368, "Member 'ABP_HouseGateTeleport_C::SPTier1' has a wrong offset!");
static_assert(offsetof(ABP_HouseGateTeleport_C, SPTier2) == 0x000378, "Member 'ABP_HouseGateTeleport_C::SPTier2' has a wrong offset!");
static_assert(offsetof(ABP_HouseGateTeleport_C, SPTier3) == 0x000388, "Member 'ABP_HouseGateTeleport_C::SPTier3' has a wrong offset!");
static_assert(offsetof(ABP_HouseGateTeleport_C, SPTier4) == 0x000398, "Member 'ABP_HouseGateTeleport_C::SPTier4' has a wrong offset!");
static_assert(offsetof(ABP_HouseGateTeleport_C, SPPlayer) == 0x0003A8, "Member 'ABP_HouseGateTeleport_C::SPPlayer' has a wrong offset!");
static_assert(offsetof(ABP_HouseGateTeleport_C, SurvChar) == 0x0003F8, "Member 'ABP_HouseGateTeleport_C::SurvChar' has a wrong offset!");
static_assert(offsetof(ABP_HouseGateTeleport_C, DoorMesh) == 0x000400, "Member 'ABP_HouseGateTeleport_C::DoorMesh' has a wrong offset!");
static_assert(offsetof(ABP_HouseGateTeleport_C, PartyTeleport) == 0x000408, "Member 'ABP_HouseGateTeleport_C::PartyTeleport' has a wrong offset!");
static_assert(offsetof(ABP_HouseGateTeleport_C, Home_Ref) == 0x00040C, "Member 'ABP_HouseGateTeleport_C::Home_Ref' has a wrong offset!");
static_assert(offsetof(ABP_HouseGateTeleport_C, ToHub_) == 0x000414, "Member 'ABP_HouseGateTeleport_C::ToHub_' has a wrong offset!");
static_assert(offsetof(ABP_HouseGateTeleport_C, Squad_Member) == 0x000415, "Member 'ABP_HouseGateTeleport_C::Squad_Member' has a wrong offset!");
static_assert(offsetof(ABP_HouseGateTeleport_C, ActiveTutorialStage) == 0x000418, "Member 'ABP_HouseGateTeleport_C::ActiveTutorialStage' has a wrong offset!");

}

