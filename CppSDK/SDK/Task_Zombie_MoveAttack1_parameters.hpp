#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Task_Zombie_MoveAttack1

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_AttackingArm_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Task_Zombie_MoveAttack1.Task_Zombie_MoveAttack1_C.CheckDistanceAndStop
// 0x0048 (0x0048 - 0x0000)
struct Task_Zombie_MoveAttack1_C_CheckDistanceAndStop final
{
public:
	double                                        CallFunc_ClampStopDistanceByTargetSpeed_StopDistance; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Zombie_MoveAttack1_C_CheckDistanceAndStop) == 0x000008, "Wrong alignment on Task_Zombie_MoveAttack1_C_CheckDistanceAndStop");
static_assert(sizeof(Task_Zombie_MoveAttack1_C_CheckDistanceAndStop) == 0x000048, "Wrong size on Task_Zombie_MoveAttack1_C_CheckDistanceAndStop");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_CheckDistanceAndStop, CallFunc_ClampStopDistanceByTargetSpeed_StopDistance) == 0x000000, "Member 'Task_Zombie_MoveAttack1_C_CheckDistanceAndStop::CallFunc_ClampStopDistanceByTargetSpeed_StopDistance' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_CheckDistanceAndStop, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'Task_Zombie_MoveAttack1_C_CheckDistanceAndStop::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_CheckDistanceAndStop, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000020, "Member 'Task_Zombie_MoveAttack1_C_CheckDistanceAndStop::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_CheckDistanceAndStop, CallFunc_Vector_Distance_ReturnValue) == 0x000038, "Member 'Task_Zombie_MoveAttack1_C_CheckDistanceAndStop::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_CheckDistanceAndStop, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000040, "Member 'Task_Zombie_MoveAttack1_C_CheckDistanceAndStop::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Task_Zombie_MoveAttack1.Task_Zombie_MoveAttack1_C.CheckNotify
// 0x0030 (0x0030 - 0x0000)
struct Task_Zombie_MoveAttack1_C_CheckNotify final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool Door)>                    K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool Door)>                    K2Node_CreateDelegate_OutputDelegate_1;            // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Zombie_MoveAttack1_C_CheckNotify) == 0x000004, "Wrong alignment on Task_Zombie_MoveAttack1_C_CheckNotify");
static_assert(sizeof(Task_Zombie_MoveAttack1_C_CheckNotify) == 0x000030, "Wrong size on Task_Zombie_MoveAttack1_C_CheckNotify");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_CheckNotify, NotifyName) == 0x000000, "Member 'Task_Zombie_MoveAttack1_C_CheckNotify::NotifyName' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_CheckNotify, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000008, "Member 'Task_Zombie_MoveAttack1_C_CheckNotify::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_CheckNotify, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'Task_Zombie_MoveAttack1_C_CheckNotify::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_CheckNotify, K2Node_CreateDelegate_OutputDelegate_1) == 0x00001C, "Member 'Task_Zombie_MoveAttack1_C_CheckNotify::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_CheckNotify, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x00002C, "Member 'Task_Zombie_MoveAttack1_C_CheckNotify::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");

// Function Task_Zombie_MoveAttack1.Task_Zombie_MoveAttack1_C.CheckScreaming
// 0x0048 (0x0048 - 0x0000)
struct Task_Zombie_MoveAttack1_C_CheckScreaming final
{
public:
	bool                                          StartScreaming;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetChanceIsLowerThan_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBlackboardValueAsBool_ReturnValue;     // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Zombie_MoveAttack1_C_CheckScreaming) == 0x000008, "Wrong alignment on Task_Zombie_MoveAttack1_C_CheckScreaming");
static_assert(sizeof(Task_Zombie_MoveAttack1_C_CheckScreaming) == 0x000048, "Wrong size on Task_Zombie_MoveAttack1_C_CheckScreaming");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_CheckScreaming, StartScreaming) == 0x000000, "Member 'Task_Zombie_MoveAttack1_C_CheckScreaming::StartScreaming' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_CheckScreaming, CallFunc_GetChanceIsLowerThan_ReturnValue) == 0x000001, "Member 'Task_Zombie_MoveAttack1_C_CheckScreaming::CallFunc_GetChanceIsLowerThan_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_CheckScreaming, CallFunc_GetBlackboardValueAsBool_ReturnValue) == 0x000002, "Member 'Task_Zombie_MoveAttack1_C_CheckScreaming::CallFunc_GetBlackboardValueAsBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_CheckScreaming, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'Task_Zombie_MoveAttack1_C_CheckScreaming::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_CheckScreaming, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000020, "Member 'Task_Zombie_MoveAttack1_C_CheckScreaming::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_CheckScreaming, CallFunc_Vector_Distance_ReturnValue) == 0x000038, "Member 'Task_Zombie_MoveAttack1_C_CheckScreaming::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_CheckScreaming, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000040, "Member 'Task_Zombie_MoveAttack1_C_CheckScreaming::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_CheckScreaming, CallFunc_BooleanAND_ReturnValue) == 0x000041, "Member 'Task_Zombie_MoveAttack1_C_CheckScreaming::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_CheckScreaming, CallFunc_BooleanAND_ReturnValue_1) == 0x000042, "Member 'Task_Zombie_MoveAttack1_C_CheckScreaming::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_CheckScreaming, CallFunc_BooleanAND_ReturnValue_2) == 0x000043, "Member 'Task_Zombie_MoveAttack1_C_CheckScreaming::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function Task_Zombie_MoveAttack1.Task_Zombie_MoveAttack1_C.ClampDelayByTargetSpeed
// 0x0030 (0x0030 - 0x0000)
struct Task_Zombie_MoveAttack1_C_ClampDelayByTargetSpeed final
{
public:
	double                                        DelayDuration;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Zombie_MoveAttack1_C_ClampDelayByTargetSpeed) == 0x000008, "Wrong alignment on Task_Zombie_MoveAttack1_C_ClampDelayByTargetSpeed");
static_assert(sizeof(Task_Zombie_MoveAttack1_C_ClampDelayByTargetSpeed) == 0x000030, "Wrong size on Task_Zombie_MoveAttack1_C_ClampDelayByTargetSpeed");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_ClampDelayByTargetSpeed, DelayDuration) == 0x000000, "Member 'Task_Zombie_MoveAttack1_C_ClampDelayByTargetSpeed::DelayDuration' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_ClampDelayByTargetSpeed, CallFunc_GetVelocity_ReturnValue) == 0x000008, "Member 'Task_Zombie_MoveAttack1_C_ClampDelayByTargetSpeed::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_ClampDelayByTargetSpeed, CallFunc_VSize_ReturnValue) == 0x000020, "Member 'Task_Zombie_MoveAttack1_C_ClampDelayByTargetSpeed::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_ClampDelayByTargetSpeed, CallFunc_MapRangeClamped_ReturnValue) == 0x000028, "Member 'Task_Zombie_MoveAttack1_C_ClampDelayByTargetSpeed::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function Task_Zombie_MoveAttack1.Task_Zombie_MoveAttack1_C.ClampStopDistanceByTargetSpeed
// 0x0030 (0x0030 - 0x0000)
struct Task_Zombie_MoveAttack1_C_ClampStopDistanceByTargetSpeed final
{
public:
	double                                        StopDistance;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Zombie_MoveAttack1_C_ClampStopDistanceByTargetSpeed) == 0x000008, "Wrong alignment on Task_Zombie_MoveAttack1_C_ClampStopDistanceByTargetSpeed");
static_assert(sizeof(Task_Zombie_MoveAttack1_C_ClampStopDistanceByTargetSpeed) == 0x000030, "Wrong size on Task_Zombie_MoveAttack1_C_ClampStopDistanceByTargetSpeed");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_ClampStopDistanceByTargetSpeed, StopDistance) == 0x000000, "Member 'Task_Zombie_MoveAttack1_C_ClampStopDistanceByTargetSpeed::StopDistance' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_ClampStopDistanceByTargetSpeed, CallFunc_GetVelocity_ReturnValue) == 0x000008, "Member 'Task_Zombie_MoveAttack1_C_ClampStopDistanceByTargetSpeed::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_ClampStopDistanceByTargetSpeed, CallFunc_VSize_ReturnValue) == 0x000020, "Member 'Task_Zombie_MoveAttack1_C_ClampStopDistanceByTargetSpeed::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_ClampStopDistanceByTargetSpeed, CallFunc_MapRangeClamped_ReturnValue) == 0x000028, "Member 'Task_Zombie_MoveAttack1_C_ClampStopDistanceByTargetSpeed::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function Task_Zombie_MoveAttack1.Task_Zombie_MoveAttack1_C.DefineAttackingArm
// 0x0002 (0x0002 - 0x0000)
struct Task_Zombie_MoveAttack1_C_DefineAttackingArm final
{
public:
	bool                                          CallFunc_GetBlackboardValueAsBool_ReturnValue;     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Zombie_MoveAttack1_C_DefineAttackingArm) == 0x000001, "Wrong alignment on Task_Zombie_MoveAttack1_C_DefineAttackingArm");
static_assert(sizeof(Task_Zombie_MoveAttack1_C_DefineAttackingArm) == 0x000002, "Wrong size on Task_Zombie_MoveAttack1_C_DefineAttackingArm");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_DefineAttackingArm, CallFunc_GetBlackboardValueAsBool_ReturnValue) == 0x000000, "Member 'Task_Zombie_MoveAttack1_C_DefineAttackingArm::CallFunc_GetBlackboardValueAsBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_DefineAttackingArm, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'Task_Zombie_MoveAttack1_C_DefineAttackingArm::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function Task_Zombie_MoveAttack1.Task_Zombie_MoveAttack1_C.ExecuteUbergraph_Task_Zombie_MoveAttack1
// 0x0150 (0x0150 - 0x0000)
struct Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_9;                   // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_8;                   // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_7;                   // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x002C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_6;                   // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x0044(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_5;                   // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x005C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x0074(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x0084(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x008C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_5;            // 0x0094(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x00A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_6;            // 0x00AC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x00BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_7;            // 0x00C4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x00D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_8;            // 0x00DC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x00EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_9;            // 0x00F4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDamaged_ReturnValue;                   // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetCorrectAttackMontage_MontageToPlay;    // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCorrectAttackMontage_PlayRate;         // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1; // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckScreaming_StartScreaming;            // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1) == 0x000008, "Wrong alignment on Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1");
static_assert(sizeof(Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1) == 0x000150, "Wrong size on Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1, EntryPoint) == 0x000000, "Member 'Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1::EntryPoint' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1, K2Node_CustomEvent_NotifyName_9) == 0x000004, "Member 'Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1::K2Node_CustomEvent_NotifyName_9' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1, K2Node_CustomEvent_NotifyName_8) == 0x00000C, "Member 'Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1::K2Node_CustomEvent_NotifyName_8' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1, K2Node_CustomEvent_NotifyName_7) == 0x000024, "Member 'Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1::K2Node_CustomEvent_NotifyName_7' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1, K2Node_CreateDelegate_OutputDelegate_1) == 0x00002C, "Member 'Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1, K2Node_CustomEvent_NotifyName_6) == 0x00003C, "Member 'Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1::K2Node_CustomEvent_NotifyName_6' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1, K2Node_CreateDelegate_OutputDelegate_2) == 0x000044, "Member 'Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1, K2Node_CustomEvent_NotifyName_5) == 0x000054, "Member 'Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1::K2Node_CustomEvent_NotifyName_5' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1, K2Node_CreateDelegate_OutputDelegate_3) == 0x00005C, "Member 'Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1, Temp_name_Variable) == 0x00006C, "Member 'Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1, K2Node_CreateDelegate_OutputDelegate_4) == 0x000074, "Member 'Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1, K2Node_CustomEvent_NotifyName_4) == 0x000084, "Member 'Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1, K2Node_CustomEvent_NotifyName_3) == 0x00008C, "Member 'Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1, K2Node_CreateDelegate_OutputDelegate_5) == 0x000094, "Member 'Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1, K2Node_CustomEvent_NotifyName_2) == 0x0000A4, "Member 'Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1, K2Node_CreateDelegate_OutputDelegate_6) == 0x0000AC, "Member 'Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1, K2Node_CustomEvent_NotifyName_1) == 0x0000BC, "Member 'Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1, K2Node_CreateDelegate_OutputDelegate_7) == 0x0000C4, "Member 'Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1, K2Node_CustomEvent_NotifyName) == 0x0000D4, "Member 'Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1, K2Node_CreateDelegate_OutputDelegate_8) == 0x0000DC, "Member 'Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1, Temp_name_Variable_1) == 0x0000EC, "Member 'Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1, K2Node_CreateDelegate_OutputDelegate_9) == 0x0000F4, "Member 'Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x000108, "Member 'Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1, CallFunc_IsValid_ReturnValue) == 0x000110, "Member 'Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1, K2Node_Event_OwnerController) == 0x000118, "Member 'Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1, K2Node_Event_ControlledPawn) == 0x000120, "Member 'Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1, CallFunc_GetDamaged_ReturnValue) == 0x000128, "Member 'Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1::CallFunc_GetDamaged_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1, CallFunc_GetCorrectAttackMontage_MontageToPlay) == 0x000130, "Member 'Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1::CallFunc_GetCorrectAttackMontage_MontageToPlay' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1, CallFunc_GetCorrectAttackMontage_PlayRate) == 0x000138, "Member 'Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1::CallFunc_GetCorrectAttackMontage_PlayRate' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1) == 0x000140, "Member 'Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1, CallFunc_CheckScreaming_StartScreaming) == 0x000148, "Member 'Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1::CallFunc_CheckScreaming_StartScreaming' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1, CallFunc_IsValid_ReturnValue_1) == 0x000149, "Member 'Task_Zombie_MoveAttack1_C_ExecuteUbergraph_Task_Zombie_MoveAttack1::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function Task_Zombie_MoveAttack1.Task_Zombie_MoveAttack1_C.GetCorrectAttackMontage
// 0x0098 (0x0098 - 0x0000)
struct Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage final
{
public:
	class UAnimMontage*                           MontageToPlay;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         PlayRate;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Temp_object_Variable_2;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_3;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Temp_object_Variable_4;                            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_5;                            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_AttackingArm                                Temp_byte_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_AttackingArm                                Temp_byte_Variable_1;                              // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_2;                              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBlackboardValueAsBool_ReturnValue;     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Select_Default;                             // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Select_Default_1;                           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_Select_Default_2;                           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_Select_Default_3;                           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_4;                           // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage) == 0x000008, "Wrong alignment on Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage");
static_assert(sizeof(Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage) == 0x000098, "Wrong size on Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage, MontageToPlay) == 0x000000, "Member 'Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage::MontageToPlay' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage, PlayRate) == 0x000008, "Member 'Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage::PlayRate' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage, Temp_object_Variable) == 0x000010, "Member 'Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage, Temp_object_Variable_1) == 0x000018, "Member 'Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage, Temp_bool_Variable) == 0x000020, "Member 'Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage, Temp_object_Variable_2) == 0x000028, "Member 'Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage, Temp_object_Variable_3) == 0x000030, "Member 'Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage, Temp_bool_Variable_1) == 0x000038, "Member 'Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage, Temp_object_Variable_4) == 0x000040, "Member 'Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage, Temp_object_Variable_5) == 0x000048, "Member 'Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage, Temp_byte_Variable) == 0x000050, "Member 'Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage, Temp_byte_Variable_1) == 0x000051, "Member 'Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage, Temp_real_Variable) == 0x000054, "Member 'Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage, Temp_real_Variable_1) == 0x000058, "Member 'Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage, Temp_real_Variable_2) == 0x00005C, "Member 'Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage, CallFunc_GetBlackboardValueAsBool_ReturnValue) == 0x000060, "Member 'Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage::CallFunc_GetBlackboardValueAsBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage, K2Node_Select_Default) == 0x000068, "Member 'Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage, Temp_bool_Variable_2) == 0x000070, "Member 'Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage, K2Node_Select_Default_1) == 0x000078, "Member 'Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage, K2Node_Select_Default_2) == 0x000080, "Member 'Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage, K2Node_Select_Default_3) == 0x000088, "Member 'Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage, K2Node_Select_Default_4) == 0x000090, "Member 'Task_Zombie_MoveAttack1_C_GetCorrectAttackMontage::K2Node_Select_Default_4' has a wrong offset!");

// Function Task_Zombie_MoveAttack1.Task_Zombie_MoveAttack1_C.On Death Bind Func
// 0x0030 (0x0030 - 0x0000)
struct Task_Zombie_MoveAttack1_C_On_Death_Bind_Func final
{
public:
	TDelegate<void(class AActor* Actor, EEndPlayReason EndPlayReason)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_V2_C*                   K2Node_DynamicCast_AsSurvival_Player_V2;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Zombie_MoveAttack1_C_On_Death_Bind_Func) == 0x000008, "Wrong alignment on Task_Zombie_MoveAttack1_C_On_Death_Bind_Func");
static_assert(sizeof(Task_Zombie_MoveAttack1_C_On_Death_Bind_Func) == 0x000030, "Wrong size on Task_Zombie_MoveAttack1_C_On_Death_Bind_Func");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_On_Death_Bind_Func, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'Task_Zombie_MoveAttack1_C_On_Death_Bind_Func::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_On_Death_Bind_Func, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'Task_Zombie_MoveAttack1_C_On_Death_Bind_Func::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_On_Death_Bind_Func, K2Node_DynamicCast_AsSurvival_Player_V2) == 0x000020, "Member 'Task_Zombie_MoveAttack1_C_On_Death_Bind_Func::K2Node_DynamicCast_AsSurvival_Player_V2' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_On_Death_Bind_Func, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'Task_Zombie_MoveAttack1_C_On_Death_Bind_Func::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Task_Zombie_MoveAttack1.Task_Zombie_MoveAttack1_C.On Death EP Bind Func
// 0x0010 (0x0010 - 0x0000)
struct Task_Zombie_MoveAttack1_C_On_Death_EP_Bind_Func final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                EndPlayReason;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Zombie_MoveAttack1_C_On_Death_EP_Bind_Func) == 0x000008, "Wrong alignment on Task_Zombie_MoveAttack1_C_On_Death_EP_Bind_Func");
static_assert(sizeof(Task_Zombie_MoveAttack1_C_On_Death_EP_Bind_Func) == 0x000010, "Wrong size on Task_Zombie_MoveAttack1_C_On_Death_EP_Bind_Func");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_On_Death_EP_Bind_Func, Actor) == 0x000000, "Member 'Task_Zombie_MoveAttack1_C_On_Death_EP_Bind_Func::Actor' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_On_Death_EP_Bind_Func, EndPlayReason) == 0x000008, "Member 'Task_Zombie_MoveAttack1_C_On_Death_EP_Bind_Func::EndPlayReason' has a wrong offset!");

// Function Task_Zombie_MoveAttack1.Task_Zombie_MoveAttack1_C.OnAttacking
// 0x0030 (0x0030 - 0x0000)
struct Task_Zombie_MoveAttack1_C_OnAttacking final
{
public:
	bool                                          CallFunc_GetBlackboardValueAsBool_ReturnValue;     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          CallFunc_GetAIController_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AZombieController_C*                    K2Node_DynamicCast_AsZombie_Controller;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_V2_C*                   K2Node_DynamicCast_AsSurvival_Player_V2;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Zombie_MoveAttack1_C_OnAttacking) == 0x000008, "Wrong alignment on Task_Zombie_MoveAttack1_C_OnAttacking");
static_assert(sizeof(Task_Zombie_MoveAttack1_C_OnAttacking) == 0x000030, "Wrong size on Task_Zombie_MoveAttack1_C_OnAttacking");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_OnAttacking, CallFunc_GetBlackboardValueAsBool_ReturnValue) == 0x000000, "Member 'Task_Zombie_MoveAttack1_C_OnAttacking::CallFunc_GetBlackboardValueAsBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_OnAttacking, CallFunc_GetAIController_ReturnValue) == 0x000008, "Member 'Task_Zombie_MoveAttack1_C_OnAttacking::CallFunc_GetAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_OnAttacking, K2Node_DynamicCast_AsZombie_Controller) == 0x000010, "Member 'Task_Zombie_MoveAttack1_C_OnAttacking::K2Node_DynamicCast_AsZombie_Controller' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_OnAttacking, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Task_Zombie_MoveAttack1_C_OnAttacking::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_OnAttacking, K2Node_DynamicCast_AsSurvival_Player_V2) == 0x000020, "Member 'Task_Zombie_MoveAttack1_C_OnAttacking::K2Node_DynamicCast_AsSurvival_Player_V2' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_OnAttacking, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'Task_Zombie_MoveAttack1_C_OnAttacking::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function Task_Zombie_MoveAttack1.Task_Zombie_MoveAttack1_C.OnBlendOut_5D65380B4DE58406D3D3049CCE240C9E
// 0x0008 (0x0008 - 0x0000)
struct Task_Zombie_MoveAttack1_C_OnBlendOut_5D65380B4DE58406D3D3049CCE240C9E final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Zombie_MoveAttack1_C_OnBlendOut_5D65380B4DE58406D3D3049CCE240C9E) == 0x000004, "Wrong alignment on Task_Zombie_MoveAttack1_C_OnBlendOut_5D65380B4DE58406D3D3049CCE240C9E");
static_assert(sizeof(Task_Zombie_MoveAttack1_C_OnBlendOut_5D65380B4DE58406D3D3049CCE240C9E) == 0x000008, "Wrong size on Task_Zombie_MoveAttack1_C_OnBlendOut_5D65380B4DE58406D3D3049CCE240C9E");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_OnBlendOut_5D65380B4DE58406D3D3049CCE240C9E, NotifyName) == 0x000000, "Member 'Task_Zombie_MoveAttack1_C_OnBlendOut_5D65380B4DE58406D3D3049CCE240C9E::NotifyName' has a wrong offset!");

// Function Task_Zombie_MoveAttack1.Task_Zombie_MoveAttack1_C.OnBlendOut_ACAE742741FA9C3062AA768DF7F2C114
// 0x0008 (0x0008 - 0x0000)
struct Task_Zombie_MoveAttack1_C_OnBlendOut_ACAE742741FA9C3062AA768DF7F2C114 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Zombie_MoveAttack1_C_OnBlendOut_ACAE742741FA9C3062AA768DF7F2C114) == 0x000004, "Wrong alignment on Task_Zombie_MoveAttack1_C_OnBlendOut_ACAE742741FA9C3062AA768DF7F2C114");
static_assert(sizeof(Task_Zombie_MoveAttack1_C_OnBlendOut_ACAE742741FA9C3062AA768DF7F2C114) == 0x000008, "Wrong size on Task_Zombie_MoveAttack1_C_OnBlendOut_ACAE742741FA9C3062AA768DF7F2C114");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_OnBlendOut_ACAE742741FA9C3062AA768DF7F2C114, NotifyName) == 0x000000, "Member 'Task_Zombie_MoveAttack1_C_OnBlendOut_ACAE742741FA9C3062AA768DF7F2C114::NotifyName' has a wrong offset!");

// Function Task_Zombie_MoveAttack1.Task_Zombie_MoveAttack1_C.OnCompleted_5D65380B4DE58406D3D3049CCE240C9E
// 0x0008 (0x0008 - 0x0000)
struct Task_Zombie_MoveAttack1_C_OnCompleted_5D65380B4DE58406D3D3049CCE240C9E final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Zombie_MoveAttack1_C_OnCompleted_5D65380B4DE58406D3D3049CCE240C9E) == 0x000004, "Wrong alignment on Task_Zombie_MoveAttack1_C_OnCompleted_5D65380B4DE58406D3D3049CCE240C9E");
static_assert(sizeof(Task_Zombie_MoveAttack1_C_OnCompleted_5D65380B4DE58406D3D3049CCE240C9E) == 0x000008, "Wrong size on Task_Zombie_MoveAttack1_C_OnCompleted_5D65380B4DE58406D3D3049CCE240C9E");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_OnCompleted_5D65380B4DE58406D3D3049CCE240C9E, NotifyName) == 0x000000, "Member 'Task_Zombie_MoveAttack1_C_OnCompleted_5D65380B4DE58406D3D3049CCE240C9E::NotifyName' has a wrong offset!");

// Function Task_Zombie_MoveAttack1.Task_Zombie_MoveAttack1_C.OnCompleted_ACAE742741FA9C3062AA768DF7F2C114
// 0x0008 (0x0008 - 0x0000)
struct Task_Zombie_MoveAttack1_C_OnCompleted_ACAE742741FA9C3062AA768DF7F2C114 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Zombie_MoveAttack1_C_OnCompleted_ACAE742741FA9C3062AA768DF7F2C114) == 0x000004, "Wrong alignment on Task_Zombie_MoveAttack1_C_OnCompleted_ACAE742741FA9C3062AA768DF7F2C114");
static_assert(sizeof(Task_Zombie_MoveAttack1_C_OnCompleted_ACAE742741FA9C3062AA768DF7F2C114) == 0x000008, "Wrong size on Task_Zombie_MoveAttack1_C_OnCompleted_ACAE742741FA9C3062AA768DF7F2C114");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_OnCompleted_ACAE742741FA9C3062AA768DF7F2C114, NotifyName) == 0x000000, "Member 'Task_Zombie_MoveAttack1_C_OnCompleted_ACAE742741FA9C3062AA768DF7F2C114::NotifyName' has a wrong offset!");

// Function Task_Zombie_MoveAttack1.Task_Zombie_MoveAttack1_C.OnEndAttack
// 0x0002 (0x0002 - 0x0000)
struct Task_Zombie_MoveAttack1_C_OnEndAttack final
{
public:
	bool                                          CallFunc_GetBlackboardValueAsBool_ReturnValue;     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Zombie_MoveAttack1_C_OnEndAttack) == 0x000001, "Wrong alignment on Task_Zombie_MoveAttack1_C_OnEndAttack");
static_assert(sizeof(Task_Zombie_MoveAttack1_C_OnEndAttack) == 0x000002, "Wrong size on Task_Zombie_MoveAttack1_C_OnEndAttack");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_OnEndAttack, CallFunc_GetBlackboardValueAsBool_ReturnValue) == 0x000000, "Member 'Task_Zombie_MoveAttack1_C_OnEndAttack::CallFunc_GetBlackboardValueAsBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_OnEndAttack, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'Task_Zombie_MoveAttack1_C_OnEndAttack::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function Task_Zombie_MoveAttack1.Task_Zombie_MoveAttack1_C.OnHitRegistered
// 0x0018 (0x0018 - 0x0000)
struct Task_Zombie_MoveAttack1_C_OnHitRegistered final
{
public:
	bool                                          Door;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool Door)>                    K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetChanceIsLowerThan_ReturnValue;         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Zombie_MoveAttack1_C_OnHitRegistered) == 0x000004, "Wrong alignment on Task_Zombie_MoveAttack1_C_OnHitRegistered");
static_assert(sizeof(Task_Zombie_MoveAttack1_C_OnHitRegistered) == 0x000018, "Wrong size on Task_Zombie_MoveAttack1_C_OnHitRegistered");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_OnHitRegistered, Door) == 0x000000, "Member 'Task_Zombie_MoveAttack1_C_OnHitRegistered::Door' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_OnHitRegistered, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'Task_Zombie_MoveAttack1_C_OnHitRegistered::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_OnHitRegistered, CallFunc_GetChanceIsLowerThan_ReturnValue) == 0x000014, "Member 'Task_Zombie_MoveAttack1_C_OnHitRegistered::CallFunc_GetChanceIsLowerThan_ReturnValue' has a wrong offset!");

// Function Task_Zombie_MoveAttack1.Task_Zombie_MoveAttack1_C.OnInterrupted_5D65380B4DE58406D3D3049CCE240C9E
// 0x0008 (0x0008 - 0x0000)
struct Task_Zombie_MoveAttack1_C_OnInterrupted_5D65380B4DE58406D3D3049CCE240C9E final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Zombie_MoveAttack1_C_OnInterrupted_5D65380B4DE58406D3D3049CCE240C9E) == 0x000004, "Wrong alignment on Task_Zombie_MoveAttack1_C_OnInterrupted_5D65380B4DE58406D3D3049CCE240C9E");
static_assert(sizeof(Task_Zombie_MoveAttack1_C_OnInterrupted_5D65380B4DE58406D3D3049CCE240C9E) == 0x000008, "Wrong size on Task_Zombie_MoveAttack1_C_OnInterrupted_5D65380B4DE58406D3D3049CCE240C9E");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_OnInterrupted_5D65380B4DE58406D3D3049CCE240C9E, NotifyName) == 0x000000, "Member 'Task_Zombie_MoveAttack1_C_OnInterrupted_5D65380B4DE58406D3D3049CCE240C9E::NotifyName' has a wrong offset!");

// Function Task_Zombie_MoveAttack1.Task_Zombie_MoveAttack1_C.OnInterrupted_ACAE742741FA9C3062AA768DF7F2C114
// 0x0008 (0x0008 - 0x0000)
struct Task_Zombie_MoveAttack1_C_OnInterrupted_ACAE742741FA9C3062AA768DF7F2C114 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Zombie_MoveAttack1_C_OnInterrupted_ACAE742741FA9C3062AA768DF7F2C114) == 0x000004, "Wrong alignment on Task_Zombie_MoveAttack1_C_OnInterrupted_ACAE742741FA9C3062AA768DF7F2C114");
static_assert(sizeof(Task_Zombie_MoveAttack1_C_OnInterrupted_ACAE742741FA9C3062AA768DF7F2C114) == 0x000008, "Wrong size on Task_Zombie_MoveAttack1_C_OnInterrupted_ACAE742741FA9C3062AA768DF7F2C114");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_OnInterrupted_ACAE742741FA9C3062AA768DF7F2C114, NotifyName) == 0x000000, "Member 'Task_Zombie_MoveAttack1_C_OnInterrupted_ACAE742741FA9C3062AA768DF7F2C114::NotifyName' has a wrong offset!");

// Function Task_Zombie_MoveAttack1.Task_Zombie_MoveAttack1_C.OnNotifyBegin_5D65380B4DE58406D3D3049CCE240C9E
// 0x0008 (0x0008 - 0x0000)
struct Task_Zombie_MoveAttack1_C_OnNotifyBegin_5D65380B4DE58406D3D3049CCE240C9E final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Zombie_MoveAttack1_C_OnNotifyBegin_5D65380B4DE58406D3D3049CCE240C9E) == 0x000004, "Wrong alignment on Task_Zombie_MoveAttack1_C_OnNotifyBegin_5D65380B4DE58406D3D3049CCE240C9E");
static_assert(sizeof(Task_Zombie_MoveAttack1_C_OnNotifyBegin_5D65380B4DE58406D3D3049CCE240C9E) == 0x000008, "Wrong size on Task_Zombie_MoveAttack1_C_OnNotifyBegin_5D65380B4DE58406D3D3049CCE240C9E");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_OnNotifyBegin_5D65380B4DE58406D3D3049CCE240C9E, NotifyName) == 0x000000, "Member 'Task_Zombie_MoveAttack1_C_OnNotifyBegin_5D65380B4DE58406D3D3049CCE240C9E::NotifyName' has a wrong offset!");

// Function Task_Zombie_MoveAttack1.Task_Zombie_MoveAttack1_C.OnNotifyBegin_ACAE742741FA9C3062AA768DF7F2C114
// 0x0008 (0x0008 - 0x0000)
struct Task_Zombie_MoveAttack1_C_OnNotifyBegin_ACAE742741FA9C3062AA768DF7F2C114 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Zombie_MoveAttack1_C_OnNotifyBegin_ACAE742741FA9C3062AA768DF7F2C114) == 0x000004, "Wrong alignment on Task_Zombie_MoveAttack1_C_OnNotifyBegin_ACAE742741FA9C3062AA768DF7F2C114");
static_assert(sizeof(Task_Zombie_MoveAttack1_C_OnNotifyBegin_ACAE742741FA9C3062AA768DF7F2C114) == 0x000008, "Wrong size on Task_Zombie_MoveAttack1_C_OnNotifyBegin_ACAE742741FA9C3062AA768DF7F2C114");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_OnNotifyBegin_ACAE742741FA9C3062AA768DF7F2C114, NotifyName) == 0x000000, "Member 'Task_Zombie_MoveAttack1_C_OnNotifyBegin_ACAE742741FA9C3062AA768DF7F2C114::NotifyName' has a wrong offset!");

// Function Task_Zombie_MoveAttack1.Task_Zombie_MoveAttack1_C.OnNotifyEnd_5D65380B4DE58406D3D3049CCE240C9E
// 0x0008 (0x0008 - 0x0000)
struct Task_Zombie_MoveAttack1_C_OnNotifyEnd_5D65380B4DE58406D3D3049CCE240C9E final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Zombie_MoveAttack1_C_OnNotifyEnd_5D65380B4DE58406D3D3049CCE240C9E) == 0x000004, "Wrong alignment on Task_Zombie_MoveAttack1_C_OnNotifyEnd_5D65380B4DE58406D3D3049CCE240C9E");
static_assert(sizeof(Task_Zombie_MoveAttack1_C_OnNotifyEnd_5D65380B4DE58406D3D3049CCE240C9E) == 0x000008, "Wrong size on Task_Zombie_MoveAttack1_C_OnNotifyEnd_5D65380B4DE58406D3D3049CCE240C9E");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_OnNotifyEnd_5D65380B4DE58406D3D3049CCE240C9E, NotifyName) == 0x000000, "Member 'Task_Zombie_MoveAttack1_C_OnNotifyEnd_5D65380B4DE58406D3D3049CCE240C9E::NotifyName' has a wrong offset!");

// Function Task_Zombie_MoveAttack1.Task_Zombie_MoveAttack1_C.OnNotifyEnd_ACAE742741FA9C3062AA768DF7F2C114
// 0x0008 (0x0008 - 0x0000)
struct Task_Zombie_MoveAttack1_C_OnNotifyEnd_ACAE742741FA9C3062AA768DF7F2C114 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Zombie_MoveAttack1_C_OnNotifyEnd_ACAE742741FA9C3062AA768DF7F2C114) == 0x000004, "Wrong alignment on Task_Zombie_MoveAttack1_C_OnNotifyEnd_ACAE742741FA9C3062AA768DF7F2C114");
static_assert(sizeof(Task_Zombie_MoveAttack1_C_OnNotifyEnd_ACAE742741FA9C3062AA768DF7F2C114) == 0x000008, "Wrong size on Task_Zombie_MoveAttack1_C_OnNotifyEnd_ACAE742741FA9C3062AA768DF7F2C114");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_OnNotifyEnd_ACAE742741FA9C3062AA768DF7F2C114, NotifyName) == 0x000000, "Member 'Task_Zombie_MoveAttack1_C_OnNotifyEnd_ACAE742741FA9C3062AA768DF7F2C114::NotifyName' has a wrong offset!");

// Function Task_Zombie_MoveAttack1.Task_Zombie_MoveAttack1_C.OnStartAttack
// 0x0078 (0x0078 - 0x0000)
struct Task_Zombie_MoveAttack1_C_OnStartAttack final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AZombie_C*                              K2Node_DynamicCast_AsZombie;                       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* Actor, EEndPlayReason EndPlayReason)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x002C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCPPIsStopping_ReturnValue;             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_V2_C*                   K2Node_DynamicCast_AsSurvival_Player_V2;           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCPPVelocityValue_ReturnValue;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetBlackboardValueAsActor_ReturnValue;    // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSpecialZombie_IsSpecial;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Last_Point_Is_Target_Actor_LastPointIsTargetActor; // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B[0x5];                                       // 0x006B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast;    // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Zombie_MoveAttack1_C_OnStartAttack) == 0x000008, "Wrong alignment on Task_Zombie_MoveAttack1_C_OnStartAttack");
static_assert(sizeof(Task_Zombie_MoveAttack1_C_OnStartAttack) == 0x000078, "Wrong size on Task_Zombie_MoveAttack1_C_OnStartAttack");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_OnStartAttack, OwnerController) == 0x000000, "Member 'Task_Zombie_MoveAttack1_C_OnStartAttack::OwnerController' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_OnStartAttack, ControlledPawn) == 0x000008, "Member 'Task_Zombie_MoveAttack1_C_OnStartAttack::ControlledPawn' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_OnStartAttack, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'Task_Zombie_MoveAttack1_C_OnStartAttack::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_OnStartAttack, K2Node_DynamicCast_AsZombie) == 0x000020, "Member 'Task_Zombie_MoveAttack1_C_OnStartAttack::K2Node_DynamicCast_AsZombie' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_OnStartAttack, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'Task_Zombie_MoveAttack1_C_OnStartAttack::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_OnStartAttack, K2Node_CreateDelegate_OutputDelegate_1) == 0x00002C, "Member 'Task_Zombie_MoveAttack1_C_OnStartAttack::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_OnStartAttack, CallFunc_GetCPPIsStopping_ReturnValue) == 0x00003C, "Member 'Task_Zombie_MoveAttack1_C_OnStartAttack::CallFunc_GetCPPIsStopping_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_OnStartAttack, K2Node_DynamicCast_AsSurvival_Player_V2) == 0x000040, "Member 'Task_Zombie_MoveAttack1_C_OnStartAttack::K2Node_DynamicCast_AsSurvival_Player_V2' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_OnStartAttack, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'Task_Zombie_MoveAttack1_C_OnStartAttack::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_OnStartAttack, CallFunc_GetCPPVelocityValue_ReturnValue) == 0x00004C, "Member 'Task_Zombie_MoveAttack1_C_OnStartAttack::CallFunc_GetCPPVelocityValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_OnStartAttack, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000050, "Member 'Task_Zombie_MoveAttack1_C_OnStartAttack::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_OnStartAttack, CallFunc_BooleanAND_ReturnValue) == 0x000051, "Member 'Task_Zombie_MoveAttack1_C_OnStartAttack::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_OnStartAttack, CallFunc_GetBlackboardValueAsActor_ReturnValue) == 0x000058, "Member 'Task_Zombie_MoveAttack1_C_OnStartAttack::CallFunc_GetBlackboardValueAsActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_OnStartAttack, CallFunc_Not_PreBool_ReturnValue) == 0x000060, "Member 'Task_Zombie_MoveAttack1_C_OnStartAttack::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_OnStartAttack, CallFunc_Array_AddUnique_ReturnValue) == 0x000064, "Member 'Task_Zombie_MoveAttack1_C_OnStartAttack::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_OnStartAttack, CallFunc_IsSpecialZombie_IsSpecial) == 0x000068, "Member 'Task_Zombie_MoveAttack1_C_OnStartAttack::CallFunc_IsSpecialZombie_IsSpecial' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_OnStartAttack, CallFunc_Get_Last_Point_Is_Target_Actor_LastPointIsTargetActor) == 0x000069, "Member 'Task_Zombie_MoveAttack1_C_OnStartAttack::CallFunc_Get_Last_Point_Is_Target_Actor_LastPointIsTargetActor' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_OnStartAttack, CallFunc_Not_PreBool_ReturnValue_1) == 0x00006A, "Member 'Task_Zombie_MoveAttack1_C_OnStartAttack::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_OnStartAttack, CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast) == 0x000070, "Member 'Task_Zombie_MoveAttack1_C_OnStartAttack::CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast' has a wrong offset!");

// Function Task_Zombie_MoveAttack1.Task_Zombie_MoveAttack1_C.OnStopRunning
// 0x0028 (0x0028 - 0x0000)
struct Task_Zombie_MoveAttack1_C_OnStopRunning final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Zombie_MoveAttack1_C_OnStopRunning) == 0x000008, "Wrong alignment on Task_Zombie_MoveAttack1_C_OnStopRunning");
static_assert(sizeof(Task_Zombie_MoveAttack1_C_OnStopRunning) == 0x000028, "Wrong size on Task_Zombie_MoveAttack1_C_OnStopRunning");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_OnStopRunning, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'Task_Zombie_MoveAttack1_C_OnStopRunning::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_OnStopRunning, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000010, "Member 'Task_Zombie_MoveAttack1_C_OnStopRunning::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_OnStopRunning, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'Task_Zombie_MoveAttack1_C_OnStopRunning::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_OnStopRunning, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000020, "Member 'Task_Zombie_MoveAttack1_C_OnStopRunning::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function Task_Zombie_MoveAttack1.Task_Zombie_MoveAttack1_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct Task_Zombie_MoveAttack1_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Zombie_MoveAttack1_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on Task_Zombie_MoveAttack1_C_ReceiveExecuteAI");
static_assert(sizeof(Task_Zombie_MoveAttack1_C_ReceiveExecuteAI) == 0x000010, "Wrong size on Task_Zombie_MoveAttack1_C_ReceiveExecuteAI");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'Task_Zombie_MoveAttack1_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(Task_Zombie_MoveAttack1_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'Task_Zombie_MoveAttack1_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

}

