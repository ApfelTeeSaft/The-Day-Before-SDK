#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_Workbench

#include "Basic.hpp"

#include "AttachmentInfo_structs.hpp"
#include "E_TypesOfModes_structs.hpp"
#include "WE_MessageTypes_structs.hpp"
#include "E_DependenciesRule_structs.hpp"
#include "FItemInfo_structs.hpp"


namespace SDK::Params
{

// Function WI_Workbench.WI_Workbench_C.GetActiveAttachment
// 0x0228 (0x0228 - 0x0000)
struct WI_Workbench_C_GetActiveAttachment final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             Item;                                              // 0x0008(0x0220)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(WI_Workbench_C_GetActiveAttachment) == 0x000008, "Wrong alignment on WI_Workbench_C_GetActiveAttachment");
static_assert(sizeof(WI_Workbench_C_GetActiveAttachment) == 0x000228, "Wrong size on WI_Workbench_C_GetActiveAttachment");
static_assert(offsetof(WI_Workbench_C_GetActiveAttachment, Result) == 0x000000, "Member 'WI_Workbench_C_GetActiveAttachment::Result' has a wrong offset!");
static_assert(offsetof(WI_Workbench_C_GetActiveAttachment, Item) == 0x000008, "Member 'WI_Workbench_C_GetActiveAttachment::Item' has a wrong offset!");

// Function WI_Workbench.WI_Workbench_C.GetBaseAttachment
// 0x0014 (0x0014 - 0x0000)
struct WI_Workbench_C_GetBaseAttachment final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAttachmentInfo                        Attchment;                                         // 0x0004(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_Workbench_C_GetBaseAttachment) == 0x000004, "Wrong alignment on WI_Workbench_C_GetBaseAttachment");
static_assert(sizeof(WI_Workbench_C_GetBaseAttachment) == 0x000014, "Wrong size on WI_Workbench_C_GetBaseAttachment");
static_assert(offsetof(WI_Workbench_C_GetBaseAttachment, Result) == 0x000000, "Member 'WI_Workbench_C_GetBaseAttachment::Result' has a wrong offset!");
static_assert(offsetof(WI_Workbench_C_GetBaseAttachment, Attchment) == 0x000004, "Member 'WI_Workbench_C_GetBaseAttachment::Attchment' has a wrong offset!");

// Function WI_Workbench.WI_Workbench_C.GetDependencyAttachment
// 0x0230 (0x0230 - 0x0000)
struct WI_Workbench_C_GetDependencyAttachment final
{
public:
	E_TypesOfModes                                Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             Item;                                              // 0x0008(0x0220)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	E_DependenciesRule                            Rule;                                              // 0x0228(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_Workbench_C_GetDependencyAttachment) == 0x000008, "Wrong alignment on WI_Workbench_C_GetDependencyAttachment");
static_assert(sizeof(WI_Workbench_C_GetDependencyAttachment) == 0x000230, "Wrong size on WI_Workbench_C_GetDependencyAttachment");
static_assert(offsetof(WI_Workbench_C_GetDependencyAttachment, Result) == 0x000000, "Member 'WI_Workbench_C_GetDependencyAttachment::Result' has a wrong offset!");
static_assert(offsetof(WI_Workbench_C_GetDependencyAttachment, Item) == 0x000008, "Member 'WI_Workbench_C_GetDependencyAttachment::Item' has a wrong offset!");
static_assert(offsetof(WI_Workbench_C_GetDependencyAttachment, Rule) == 0x000228, "Member 'WI_Workbench_C_GetDependencyAttachment::Rule' has a wrong offset!");

// Function WI_Workbench.WI_Workbench_C.GetLocked
// 0x0001 (0x0001 - 0x0000)
struct WI_Workbench_C_GetLocked final
{
public:
	bool                                          Locked;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_Workbench_C_GetLocked) == 0x000001, "Wrong alignment on WI_Workbench_C_GetLocked");
static_assert(sizeof(WI_Workbench_C_GetLocked) == 0x000001, "Wrong size on WI_Workbench_C_GetLocked");
static_assert(offsetof(WI_Workbench_C_GetLocked, Locked) == 0x000000, "Member 'WI_Workbench_C_GetLocked::Locked' has a wrong offset!");

// Function WI_Workbench.WI_Workbench_C.OnLockOperation
// 0x0010 (0x0010 - 0x0000)
struct WI_Workbench_C_OnLockOperation final
{
public:
	double                                        Duration;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lock;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_Workbench_C_OnLockOperation) == 0x000008, "Wrong alignment on WI_Workbench_C_OnLockOperation");
static_assert(sizeof(WI_Workbench_C_OnLockOperation) == 0x000010, "Wrong size on WI_Workbench_C_OnLockOperation");
static_assert(offsetof(WI_Workbench_C_OnLockOperation, Duration) == 0x000000, "Member 'WI_Workbench_C_OnLockOperation::Duration' has a wrong offset!");
static_assert(offsetof(WI_Workbench_C_OnLockOperation, Lock) == 0x000008, "Member 'WI_Workbench_C_OnLockOperation::Lock' has a wrong offset!");

// Function WI_Workbench.WI_Workbench_C.OnPushMessage
// 0x0028 (0x0028 - 0x0000)
struct WI_Workbench_C_OnPushMessage final
{
public:
	EWE_MessageTypes                              Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Text;                                              // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	double                                        Duration;                                          // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_Workbench_C_OnPushMessage) == 0x000008, "Wrong alignment on WI_Workbench_C_OnPushMessage");
static_assert(sizeof(WI_Workbench_C_OnPushMessage) == 0x000028, "Wrong size on WI_Workbench_C_OnPushMessage");
static_assert(offsetof(WI_Workbench_C_OnPushMessage, Type) == 0x000000, "Member 'WI_Workbench_C_OnPushMessage::Type' has a wrong offset!");
static_assert(offsetof(WI_Workbench_C_OnPushMessage, Text) == 0x000008, "Member 'WI_Workbench_C_OnPushMessage::Text' has a wrong offset!");
static_assert(offsetof(WI_Workbench_C_OnPushMessage, Duration) == 0x000020, "Member 'WI_Workbench_C_OnPushMessage::Duration' has a wrong offset!");

// Function WI_Workbench.WI_Workbench_C.OnUpdateAttachments
// 0x0220 (0x0220 - 0x0000)
struct WI_Workbench_C_OnUpdateAttachments final
{
public:
	struct FFItemInfo                             NewItem;                                           // 0x0000(0x0220)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(WI_Workbench_C_OnUpdateAttachments) == 0x000008, "Wrong alignment on WI_Workbench_C_OnUpdateAttachments");
static_assert(sizeof(WI_Workbench_C_OnUpdateAttachments) == 0x000220, "Wrong size on WI_Workbench_C_OnUpdateAttachments");
static_assert(offsetof(WI_Workbench_C_OnUpdateAttachments, NewItem) == 0x000000, "Member 'WI_Workbench_C_OnUpdateAttachments::NewItem' has a wrong offset!");

// Function WI_Workbench.WI_Workbench_C.SetPositionActiveAttachment
// 0x0004 (0x0004 - 0x0000)
struct WI_Workbench_C_SetPositionActiveAttachment final
{
public:
	int32                                         NewPosition;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_Workbench_C_SetPositionActiveAttachment) == 0x000004, "Wrong alignment on WI_Workbench_C_SetPositionActiveAttachment");
static_assert(sizeof(WI_Workbench_C_SetPositionActiveAttachment) == 0x000004, "Wrong size on WI_Workbench_C_SetPositionActiveAttachment");
static_assert(offsetof(WI_Workbench_C_SetPositionActiveAttachment, NewPosition) == 0x000000, "Member 'WI_Workbench_C_SetPositionActiveAttachment::NewPosition' has a wrong offset!");

}

