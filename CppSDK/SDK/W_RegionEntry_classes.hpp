#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_RegionEntry

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_RegionEntry.W_RegionEntry_C
// 0x0050 (0x02D0 - 0x0280)
class UW_RegionEntry_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBorder*                                Border_116;                                        // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_63;                                         // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         ID;                                                // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RegionName;                                        // 0x02A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsActive;                                          // 0x02B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 RegionImage;                                       // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           RegionSprite;                                      // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSelected;                                        // 0x02C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__Button_63_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__Button_63_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__Button_63_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature();
	void ExecuteUbergraph_W_RegionEntry(int32 EntryPoint);
	void OnInitialized();
	struct FEventReply OnMouseButtonDown_0(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void Select();
	void Unselect();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_RegionEntry_C">();
	}
	static class UW_RegionEntry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_RegionEntry_C>();
	}
};
static_assert(alignof(UW_RegionEntry_C) == 0x000008, "Wrong alignment on UW_RegionEntry_C");
static_assert(sizeof(UW_RegionEntry_C) == 0x0002D0, "Wrong size on UW_RegionEntry_C");
static_assert(offsetof(UW_RegionEntry_C, UberGraphFrame) == 0x000280, "Member 'UW_RegionEntry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_RegionEntry_C, Border_116) == 0x000288, "Member 'UW_RegionEntry_C::Border_116' has a wrong offset!");
static_assert(offsetof(UW_RegionEntry_C, Button_63) == 0x000290, "Member 'UW_RegionEntry_C::Button_63' has a wrong offset!");
static_assert(offsetof(UW_RegionEntry_C, ID) == 0x000298, "Member 'UW_RegionEntry_C::ID' has a wrong offset!");
static_assert(offsetof(UW_RegionEntry_C, RegionName) == 0x0002A0, "Member 'UW_RegionEntry_C::RegionName' has a wrong offset!");
static_assert(offsetof(UW_RegionEntry_C, IsActive) == 0x0002B0, "Member 'UW_RegionEntry_C::IsActive' has a wrong offset!");
static_assert(offsetof(UW_RegionEntry_C, RegionImage) == 0x0002B8, "Member 'UW_RegionEntry_C::RegionImage' has a wrong offset!");
static_assert(offsetof(UW_RegionEntry_C, RegionSprite) == 0x0002C0, "Member 'UW_RegionEntry_C::RegionSprite' has a wrong offset!");
static_assert(offsetof(UW_RegionEntry_C, IsSelected) == 0x0002C8, "Member 'UW_RegionEntry_C::IsSelected' has a wrong offset!");

}

