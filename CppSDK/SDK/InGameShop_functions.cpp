#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InGameShop

#include "Basic.hpp"

#include "InGameShop_classes.hpp"
#include "InGameShop_parameters.hpp"


namespace SDK
{

// Function InGameShop.InGameShop_C.Add Shop Items to Widget
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AInGameShop_C::Add_Shop_Items_to_Widget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "Add Shop Items to Widget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InGameShop.InGameShop_C.AddDoor
// (Net, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABunkerTeleport_C*                NewItem                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void AInGameShop_C::AddDoor(const class ABunkerTeleport_C*& NewItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "AddDoor");

	Params::InGameShop_C_AddDoor Parms{};

	Parms.NewItem = NewItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InGameShop.InGameShop_C.BlindAddNewItemToContainer
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        SlotVector                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ItemUID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ToContainerUID                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Shop                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Added                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ToSlotIndex                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   UniqueId                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AInGameShop_C::BlindAddNewItemToContainer(const struct FVector2D& SlotVector, int32 ItemUID, int32 ToContainerUID, bool Shop, bool* Added, int32* ToSlotIndex, int32* UniqueId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "BlindAddNewItemToContainer");

	Params::InGameShop_C_BlindAddNewItemToContainer Parms{};

	Parms.SlotVector = std::move(SlotVector);
	Parms.ItemUID = ItemUID;
	Parms.ToContainerUID = ToContainerUID;
	Parms.Shop = Shop;

	UObject::ProcessEvent(Func, &Parms);

	if (Added != nullptr)
		*Added = Parms.Added;

	if (ToSlotIndex != nullptr)
		*ToSlotIndex = Parms.ToSlotIndex;

	if (UniqueId != nullptr)
		*UniqueId = Parms.UniqueId;
}


// Function InGameShop.InGameShop_C.BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AInGameShop_C::BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature");

	Params::InGameShop_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InGameShop.InGameShop_C.BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AInGameShop_C::BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");

	Params::InGameShop_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function InGameShop.InGameShop_C.BuildContainerSlotData
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NumOfColumns                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NumOfRows                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ContainerUID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Shop                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AInGameShop_C::BuildContainerSlotData(int32 NumOfColumns, int32 NumOfRows, int32 ContainerUID, bool Shop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "BuildContainerSlotData");

	Params::InGameShop_C_BuildContainerSlotData Parms{};

	Parms.NumOfColumns = NumOfColumns;
	Parms.NumOfRows = NumOfRows;
	Parms.ContainerUID = ContainerUID;
	Parms.Shop = Shop;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InGameShop.InGameShop_C.CloseShop
// (BlueprintCallable, BlueprintEvent)

void AInGameShop_C::CloseShop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "CloseShop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InGameShop.InGameShop_C.CompleteQuest
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   QuestIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ObjectiveIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AInGameShop_C::CompleteQuest(int32 QuestIndex, int32 ObjectiveIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "CompleteQuest");

	Params::InGameShop_C_CompleteQuest Parms{};

	Parms.QuestIndex = QuestIndex;
	Parms.ObjectiveIndex = ObjectiveIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InGameShop.InGameShop_C.cs
// (BlueprintCallable, BlueprintEvent)

void AInGameShop_C::Cs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "cs");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InGameShop.InGameShop_C.ExecuteUbergraph_InGameShop
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AInGameShop_C::ExecuteUbergraph_InGameShop(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "ExecuteUbergraph_InGameShop");

	Params::InGameShop_C_ExecuteUbergraph_InGameShop Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InGameShop.InGameShop_C.GenerateContainerItems
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_LootChanceModifier            LootChanceMod                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FDefaultItemInfo>         Items                                                  (Parm, OutParm, ContainsInstancedReference)

void AInGameShop_C::GenerateContainerItems(const struct FS_LootChanceModifier& LootChanceMod, TArray<struct FDefaultItemInfo>* Items)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "GenerateContainerItems");

	Params::InGameShop_C_GenerateContainerItems Parms{};

	Parms.LootChanceMod = std::move(LootChanceMod);

	UObject::ProcessEvent(Func, &Parms);

	if (Items != nullptr)
		*Items = std::move(Parms.Items);
}


// Function InGameShop.InGameShop_C.GenerateShopItems
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AInGameShop_C::GenerateShopItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "GenerateShopItems");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InGameShop.InGameShop_C.GeneretaShopItemsForEachShop
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UDataTable*                       Table                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AInGameShop_C::GeneretaShopItemsForEachShop(class UDataTable* Table)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "GeneretaShopItemsForEachShop");

	Params::InGameShop_C_GeneretaShopItemsForEachShop Parms{};

	Parms.Table = Table;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InGameShop.InGameShop_C.Get Shop Replicated Data
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FMpContentRep                    Data                                                   (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)

void AInGameShop_C::Get_Shop_Replicated_Data(struct FMpContentRep* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "Get Shop Replicated Data");

	Params::InGameShop_C_Get_Shop_Replicated_Data Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Data != nullptr)
		*Data = std::move(Parms.Data);
}


// Function InGameShop.InGameShop_C.GetSlotDataArrIndexByUID
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Uid                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Shop                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_Index                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AInGameShop_C::GetSlotDataArrIndexByUID(int32 Uid, bool Shop, int32* Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "GetSlotDataArrIndexByUID");

	Params::InGameShop_C_GetSlotDataArrIndexByUID Parms{};

	Parms.Uid = Uid;
	Parms.Shop = Shop;

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Index != nullptr)
		*Param_Index = Parms.Param_Index;
}


// Function InGameShop.InGameShop_C.MPCFindItem
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ContainerUID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ItemUID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsContainer_                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Shop                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Found                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FContainerPickupsInfo            ItemInfo                                               (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
// int32                                   Param_Index                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AInGameShop_C::MPCFindItem(int32 ContainerUID, int32 ItemUID, bool IsContainer_, bool Shop, bool* Found, struct FContainerPickupsInfo* ItemInfo, int32* Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "MPCFindItem");

	Params::InGameShop_C_MPCFindItem Parms{};

	Parms.ContainerUID = ContainerUID;
	Parms.ItemUID = ItemUID;
	Parms.IsContainer_ = IsContainer_;
	Parms.Shop = Shop;

	UObject::ProcessEvent(Func, &Parms);

	if (Found != nullptr)
		*Found = Parms.Found;

	if (ItemInfo != nullptr)
		*ItemInfo = std::move(Parms.ItemInfo);

	if (Param_Index != nullptr)
		*Param_Index = Parms.Param_Index;
}


// Function InGameShop.InGameShop_C.MPCRemoveItem
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Uid                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsContainer_                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Shop                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Removed                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AInGameShop_C::MPCRemoveItem(int32 Uid, bool IsContainer_, bool Shop, bool* Removed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "MPCRemoveItem");

	Params::InGameShop_C_MPCRemoveItem Parms{};

	Parms.Uid = Uid;
	Parms.IsContainer_ = IsContainer_;
	Parms.Shop = Shop;

	UObject::ProcessEvent(Func, &Parms);

	if (Removed != nullptr)
		*Removed = Parms.Removed;
}


// Function InGameShop.InGameShop_C.MultiPlayCMSSound
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AInGameShop_C::MultiPlayCMSSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "MultiPlayCMSSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InGameShop.InGameShop_C.MultiPlayCSSound
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AInGameShop_C::MultiPlayCSSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "MultiPlayCSSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InGameShop.InGameShop_C.MultiPlayOMSound
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AInGameShop_C::MultiPlayOMSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "MultiPlayOMSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InGameShop.InGameShop_C.MultiPlayOSSound
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AInGameShop_C::MultiPlayOSSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "MultiPlayOSSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InGameShop.InGameShop_C.NewFunction_0_0
// (Public, BlueprintCallable, BlueprintEvent)

void AInGameShop_C::NewFunction_0_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "NewFunction_0_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InGameShop.InGameShop_C.OM
// (BlueprintCallable, BlueprintEvent)

void AInGameShop_C::OM()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "OM");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InGameShop.InGameShop_C.OnChangeContent
// (BlueprintCallable, BlueprintEvent)

void AInGameShop_C::OnChangeContent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "OnChangeContent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InGameShop.InGameShop_C.OnRep_OpenedSignalSound
// (BlueprintCallable, BlueprintEvent)

void AInGameShop_C::OnRep_OpenedSignalSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "OnRep_OpenedSignalSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InGameShop.InGameShop_C.OpenAll
// (BlueprintCallable, BlueprintEvent)

void AInGameShop_C::OpenAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "OpenAll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InGameShop.InGameShop_C.OpenServ
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AInGameShop_C::OpenServ()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "OpenServ");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InGameShop.InGameShop_C.OpenShop
// (BlueprintCallable, BlueprintEvent)

void AInGameShop_C::OpenShop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "OpenShop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InGameShop.InGameShop_C.OS
// (BlueprintCallable, BlueprintEvent)

void AInGameShop_C::OS()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "OS");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InGameShop.InGameShop_C.ReceiveActorBeginOverlap
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AInGameShop_C::ReceiveActorBeginOverlap(class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "ReceiveActorBeginOverlap");

	Params::InGameShop_C_ReceiveActorBeginOverlap Parms{};

	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InGameShop.InGameShop_C.ReceiveActorEndOverlap
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AInGameShop_C::ReceiveActorEndOverlap(class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "ReceiveActorEndOverlap");

	Params::InGameShop_C_ReceiveActorEndOverlap Parms{};

	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InGameShop.InGameShop_C.RequestMoveItem
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ToSlotIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ItemUID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ToContainerUID                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Rotated_                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallMCEvent_                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Shop                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Moved                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AInGameShop_C::RequestMoveItem(int32 ToSlotIndex, int32 ItemUID, int32 ToContainerUID, bool Rotated_, bool IsContainer, bool CallMCEvent_, bool Shop, bool* Moved)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "RequestMoveItem");

	Params::InGameShop_C_RequestMoveItem Parms{};

	Parms.ToSlotIndex = ToSlotIndex;
	Parms.ItemUID = ItemUID;
	Parms.ToContainerUID = ToContainerUID;
	Parms.Rotated_ = Rotated_;
	Parms.IsContainer = IsContainer;
	Parms.CallMCEvent_ = CallMCEvent_;
	Parms.Shop = Shop;

	UObject::ProcessEvent(Func, &Parms);

	if (Moved != nullptr)
		*Moved = Parms.Moved;
}


// Function InGameShop.InGameShop_C.ResetDoors
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsActive                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AInGameShop_C::ResetDoors(bool IsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "ResetDoors");

	Params::InGameShop_C_ResetDoors Parms{};

	Parms.IsActive = IsActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InGameShop.InGameShop_C.SetActiveDoors
// (Public, BlueprintCallable, BlueprintEvent)

void AInGameShop_C::SetActiveDoors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "SetActiveDoors");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InGameShop.InGameShop_C.SetDialogueCamera
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Condition                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AInGameShop_C::SetDialogueCamera(bool Condition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "SetDialogueCamera");

	Params::InGameShop_C_SetDialogueCamera Parms{};

	Parms.Condition = Condition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InGameShop.InGameShop_C.SetShopView
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Condition                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AInGameShop_C::SetShopView(bool Condition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "SetShopView");

	Params::InGameShop_C_SetShopView Parms{};

	Parms.Condition = Condition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InGameShop.InGameShop_C.SetShopWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMPContainerWidget_C*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UMPContainerWidget_C* AInGameShop_C::SetShopWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "SetShopWidget");

	Params::InGameShop_C_SetShopWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InGameShop.InGameShop_C.Shop Cont to Full
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FMpContentRep                    Content                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
// TArray<struct FContainerPickupsInfo>    Containers                                             (Parm, OutParm, ContainsInstancedReference)
// TArray<struct FContainerPickupsInfo>    Param_ContainerItems                                   (Parm, OutParm, ContainsInstancedReference)

void AInGameShop_C::Shop_Cont_to_Full(const struct FMpContentRep& Content, TArray<struct FContainerPickupsInfo>* Containers, TArray<struct FContainerPickupsInfo>* Param_ContainerItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "Shop Cont to Full");

	Params::InGameShop_C_Shop_Cont_to_Full Parms{};

	Parms.Content = std::move(Content);

	UObject::ProcessEvent(Func, &Parms);

	if (Containers != nullptr)
		*Containers = std::move(Parms.Containers);

	if (Param_ContainerItems != nullptr)
		*Param_ContainerItems = std::move(Parms.Param_ContainerItems);
}


// Function InGameShop.InGameShop_C.Timer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AInGameShop_C::Timer(bool On)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "Timer");

	Params::InGameShop_C_Timer Parms{};

	Parms.On = On;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InGameShop.InGameShop_C.TransferMPCDataToChar
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FContainerPickupsInfo            ContainerInfo                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
// int32                                   ContainerIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Shop                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ItemsLeft                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FContainerPickupsInfo>    ContainerDataResult                                    (Parm, OutParm, ContainsInstancedReference)
// TArray<struct FContainerPickupsInfo>    ContainerItemsResult                                   (Parm, OutParm, ContainsInstancedReference)

void AInGameShop_C::TransferMPCDataToChar(const struct FContainerPickupsInfo& ContainerInfo, int32 ContainerIndex, bool Shop, int32 ItemsLeft, bool* Success, TArray<struct FContainerPickupsInfo>* ContainerDataResult, TArray<struct FContainerPickupsInfo>* ContainerItemsResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "TransferMPCDataToChar");

	Params::InGameShop_C_TransferMPCDataToChar Parms{};

	Parms.ContainerInfo = std::move(ContainerInfo);
	Parms.ContainerIndex = ContainerIndex;
	Parms.Shop = Shop;
	Parms.ItemsLeft = ItemsLeft;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;

	if (ContainerDataResult != nullptr)
		*ContainerDataResult = std::move(Parms.ContainerDataResult);

	if (ContainerItemsResult != nullptr)
		*ContainerItemsResult = std::move(Parms.ContainerItemsResult);
}


// Function InGameShop.InGameShop_C.GetActorType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ActorType                             ActorType                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AInGameShop_C::GetActorType(E_ActorType* ActorType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "GetActorType");

	Params::InGameShop_C_GetActorType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ActorType != nullptr)
		*ActorType = Parms.ActorType;
}


// Function InGameShop.InGameShop_C.MultiCallCloseLootPoint
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AInGameShop_C::MultiCallCloseLootPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "MultiCallCloseLootPoint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InGameShop.InGameShop_C.MultiCallOpenLootPoint
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AInGameShop_C::MultiCallOpenLootPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "MultiCallOpenLootPoint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InGameShop.InGameShop_C.OnFocused
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           HighlightActor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UActorComponent*                  HighlightActorComponent                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// E_InteractType                          InteractType                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  LateTime                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AInGameShop_C::OnFocused(class APawn* Player, class AActor* HighlightActor, class UActorComponent* HighlightActorComponent, E_InteractType* InteractType, double* LateTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "OnFocused");

	Params::InGameShop_C_OnFocused Parms{};

	Parms.Player = Player;
	Parms.HighlightActor = HighlightActor;
	Parms.HighlightActorComponent = HighlightActorComponent;

	UObject::ProcessEvent(Func, &Parms);

	if (InteractType != nullptr)
		*InteractType = Parms.InteractType;

	if (LateTime != nullptr)
		*LateTime = Parms.LateTime;
}


// Function InGameShop.InGameShop_C.OnLocalInteract
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AInGameShop_C::OnLocalInteract(class APawn* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "OnLocalInteract");

	Params::InGameShop_C_OnLocalInteract Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InGameShop.InGameShop_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AInGameShop_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InGameShop.InGameShop_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AInGameShop_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGameShop_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

