#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_Equipment

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "BPS_WeaponData_structs.hpp"
#include "FItemInfo_structs.hpp"
#include "BPE_Weapon_Type_structs.hpp"
#include "StanceState_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPC_Equipment.BPC_Equipment_C
// 0x1120 (0x11C0 - 0x00A0)
class UBPC_Equipment_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ABP_Weapon_C*                           WeaponReference;                                   // 0x00A8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, RepNotify, NoDestructor, HasGetValueTypeHash)
	struct FBPS_WeaponData                        SecondaryWeapon;                                   // 0x00B0(0x04C0)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FBPS_WeaponData                        MainWeapons;                                       // 0x0570(0x04C0)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         MainWeaponIndex;                                   // 0x0A30(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A34[0x4];                                      // 0x0A34(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             Char;                                              // 0x0A38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Shaker;                                            // 0x0A40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UO_InventoryItem_C*                     Helmet;                                            // 0x0A48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UO_InventoryItem_C*                     Armor;                                             // 0x0A50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UO_InventoryItem_C*                     KneePads;                                          // 0x0A58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UEffect_C*>                      ActiveHelmetEffect;                                // 0x0A60(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UEffect_C*>                      ActiveArmorEffect;                                 // 0x0A70(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UEffect_C*>                      ActivePantsEffect;                                 // 0x0A80(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UO_InventoryItem_C*                     Backpack;                                          // 0x0A90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UEffect_C*>                      ActiveOuterwearEffect;                             // 0x0A98(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UEffect_C*>                      ActiveBackpackEffect;                              // 0x0AA8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          WeaponItem;                                        // 0x0AB8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AB9[0x7];                                      // 0x0AB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBPS_WeaponData                        PickingWeapon;                                     // 0x0AC0(0x04C0)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UJSI_Slot_C*                            PickingItem;                                       // 0x0F80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWeaponAnimAsset*                       PickingWeaponAnimAsset;                            // 0x0F88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UWeaponAnimAsset*                       MainWeaponAnimAsset;                               // 0x0F90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             PickingWeapon_ItemInfo;                            // 0x0F98(0x0220)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          EquipAnim;                                         // 0x11B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Equiped_;                                          // 0x11B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UnarmToWeapon;                                     // 0x11BA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CallEquipAnim(bool Equip);
	void ExecuteUbergraph_BPC_Equipment(int32 EntryPoint);
	void FakeFire(const TArray<struct FBPS_DamageInfo>& HitInfo, bool Param_Fire);
	void Fire(bool Trigger);
	void OnBlendOut_20EFB4624C061FCAED06DC97236C0450(class FName NotifyName);
	void OnCompleted_20EFB4624C061FCAED06DC97236C0450(class FName NotifyName);
	void OnCrouch();
	void OnInterrupted_20EFB4624C061FCAED06DC97236C0450(class FName NotifyName);
	void OnNotifyBegin_20EFB4624C061FCAED06DC97236C0450(class FName NotifyName);
	void OnNotifyEnd_20EFB4624C061FCAED06DC97236C0450(class FName NotifyName);
	void OnRep_WeaponReference();
	void PickedWeapon(const struct FBPS_WeaponData& WeaponData, class UJSI_Slot_C* ItemState, const struct FFItemInfo& Weapon_ItemInfo);
	void PickedWeaponWithoutAnimation(const struct FBPS_WeaponData& WeaponData, class UJSI_Slot_C* ItemState, const struct FFItemInfo& Weapon_ItemInfo);
	class UAnimMontage* PickEquipAnim();
	void PickUnequipAnim2(class UAnimMontage** NewParam);
	void ReceiveBeginPlay();
	void WeaponEquipNotif();
	void WeaponUnequip(bool bNewVisibility);
	void WP_Aiming(bool Aim);
	void WP_Anim_Weapon_Equiped(class ABP_Weapon_C* NewParam);
	void WP_EquipWeapon(class FName WeaponName);
	void WP_GetAimCamera(class UCameraComponent** Camera);
	void WP_GetLefHandEffectorTransform(struct FTransform* Transform, bool* HasEffector);
	void WP_GetRotationInput(struct FVector2D* NewParam);
	void WP_GetShootDirection(struct FVector* ShootDirection);
	void WP_GetSkeletalMesh(class USkeletalMeshComponent** SkinnedMesh, bool* Success);
	void WP_GetWeaponType(EBPE_Weapon_Type* WeaponType);
	void WP_HasWeaponOrBroken(bool* Value);
	void WP_MeleeActivation(bool State);
	void WP_PlayGunTail(class UFMODEvent* TailSound);
	void WP_SetRecoilPower(double RecoilPower);
	void WP_UnequipWeapon();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPC_Equipment_C">();
	}
	static class UBPC_Equipment_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPC_Equipment_C>();
	}
};
static_assert(alignof(UBPC_Equipment_C) == 0x000008, "Wrong alignment on UBPC_Equipment_C");
static_assert(sizeof(UBPC_Equipment_C) == 0x0011C0, "Wrong size on UBPC_Equipment_C");
static_assert(offsetof(UBPC_Equipment_C, UberGraphFrame) == 0x0000A0, "Member 'UBPC_Equipment_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPC_Equipment_C, WeaponReference) == 0x0000A8, "Member 'UBPC_Equipment_C::WeaponReference' has a wrong offset!");
static_assert(offsetof(UBPC_Equipment_C, SecondaryWeapon) == 0x0000B0, "Member 'UBPC_Equipment_C::SecondaryWeapon' has a wrong offset!");
static_assert(offsetof(UBPC_Equipment_C, MainWeapons) == 0x000570, "Member 'UBPC_Equipment_C::MainWeapons' has a wrong offset!");
static_assert(offsetof(UBPC_Equipment_C, MainWeaponIndex) == 0x000A30, "Member 'UBPC_Equipment_C::MainWeaponIndex' has a wrong offset!");
static_assert(offsetof(UBPC_Equipment_C, Char) == 0x000A38, "Member 'UBPC_Equipment_C::Char' has a wrong offset!");
static_assert(offsetof(UBPC_Equipment_C, Shaker) == 0x000A40, "Member 'UBPC_Equipment_C::Shaker' has a wrong offset!");
static_assert(offsetof(UBPC_Equipment_C, Helmet) == 0x000A48, "Member 'UBPC_Equipment_C::Helmet' has a wrong offset!");
static_assert(offsetof(UBPC_Equipment_C, Armor) == 0x000A50, "Member 'UBPC_Equipment_C::Armor' has a wrong offset!");
static_assert(offsetof(UBPC_Equipment_C, KneePads) == 0x000A58, "Member 'UBPC_Equipment_C::KneePads' has a wrong offset!");
static_assert(offsetof(UBPC_Equipment_C, ActiveHelmetEffect) == 0x000A60, "Member 'UBPC_Equipment_C::ActiveHelmetEffect' has a wrong offset!");
static_assert(offsetof(UBPC_Equipment_C, ActiveArmorEffect) == 0x000A70, "Member 'UBPC_Equipment_C::ActiveArmorEffect' has a wrong offset!");
static_assert(offsetof(UBPC_Equipment_C, ActivePantsEffect) == 0x000A80, "Member 'UBPC_Equipment_C::ActivePantsEffect' has a wrong offset!");
static_assert(offsetof(UBPC_Equipment_C, Backpack) == 0x000A90, "Member 'UBPC_Equipment_C::Backpack' has a wrong offset!");
static_assert(offsetof(UBPC_Equipment_C, ActiveOuterwearEffect) == 0x000A98, "Member 'UBPC_Equipment_C::ActiveOuterwearEffect' has a wrong offset!");
static_assert(offsetof(UBPC_Equipment_C, ActiveBackpackEffect) == 0x000AA8, "Member 'UBPC_Equipment_C::ActiveBackpackEffect' has a wrong offset!");
static_assert(offsetof(UBPC_Equipment_C, WeaponItem) == 0x000AB8, "Member 'UBPC_Equipment_C::WeaponItem' has a wrong offset!");
static_assert(offsetof(UBPC_Equipment_C, PickingWeapon) == 0x000AC0, "Member 'UBPC_Equipment_C::PickingWeapon' has a wrong offset!");
static_assert(offsetof(UBPC_Equipment_C, PickingItem) == 0x000F80, "Member 'UBPC_Equipment_C::PickingItem' has a wrong offset!");
static_assert(offsetof(UBPC_Equipment_C, PickingWeaponAnimAsset) == 0x000F88, "Member 'UBPC_Equipment_C::PickingWeaponAnimAsset' has a wrong offset!");
static_assert(offsetof(UBPC_Equipment_C, MainWeaponAnimAsset) == 0x000F90, "Member 'UBPC_Equipment_C::MainWeaponAnimAsset' has a wrong offset!");
static_assert(offsetof(UBPC_Equipment_C, PickingWeapon_ItemInfo) == 0x000F98, "Member 'UBPC_Equipment_C::PickingWeapon_ItemInfo' has a wrong offset!");
static_assert(offsetof(UBPC_Equipment_C, EquipAnim) == 0x0011B8, "Member 'UBPC_Equipment_C::EquipAnim' has a wrong offset!");
static_assert(offsetof(UBPC_Equipment_C, Equiped_) == 0x0011B9, "Member 'UBPC_Equipment_C::Equiped_' has a wrong offset!");
static_assert(offsetof(UBPC_Equipment_C, UnarmToWeapon) == 0x0011BA, "Member 'UBPC_Equipment_C::UnarmToWeapon' has a wrong offset!");

}

