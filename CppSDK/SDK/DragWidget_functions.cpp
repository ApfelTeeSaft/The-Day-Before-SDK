#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DragWidget

#include "Basic.hpp"

#include "DragWidget_classes.hpp"
#include "DragWidget_parameters.hpp"


namespace SDK
{

// Function DragWidget.DragWidget_C.AddContainer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  NewContainer                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UDragWidget_C::AddContainer(const class UJSIContainer_C*& NewContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DragWidget_C", "AddContainer");

	Params::DragWidget_C_AddContainer Parms{};

	Parms.NewContainer = NewContainer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DragWidget.DragWidget_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UDragWidget_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DragWidget_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DragWidget.DragWidget_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UDragWidget_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DragWidget_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DragWidget.DragWidget_C.ExecuteUbergraph_DragWidget
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDragWidget_C::ExecuteUbergraph_DragWidget(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DragWidget_C", "ExecuteUbergraph_DragWidget");

	Params::DragWidget_C_ExecuteUbergraph_DragWidget Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DragWidget.DragWidget_C.GetPivotIndex
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Ind                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDragWidget_C::GetPivotIndex(int32* Ind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DragWidget_C", "GetPivotIndex");

	Params::DragWidget_C_GetPivotIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ind != nullptr)
		*Ind = Parms.Ind;
}


// Function DragWidget.DragWidget_C.GetRotationOffset
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector2D                        Param_MoveOffset                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        RotationOffset                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDragWidget_C::GetRotationOffset(const struct FVector2D& Param_MoveOffset, struct FVector2D* RotationOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DragWidget_C", "GetRotationOffset");

	Params::DragWidget_C_GetRotationOffset Parms{};

	Parms.Param_MoveOffset = std::move(Param_MoveOffset);

	UObject::ProcessEvent(Func, &Parms);

	if (RotationOffset != nullptr)
		*RotationOffset = std::move(Parms.RotationOffset);
}


// Function DragWidget.DragWidget_C.OnKeyDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FKeyEvent                        InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UDragWidget_C::OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DragWidget_C", "OnKeyDown");

	Params::DragWidget_C_OnKeyDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DragWidget.DragWidget_C.RotateKeyDown
// (BlueprintCallable, BlueprintEvent)

void UDragWidget_C::RotateKeyDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DragWidget_C", "RotateKeyDown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DragWidget.DragWidget_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDragWidget_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DragWidget_C", "Tick");

	Params::DragWidget_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DragWidget.DragWidget_C.GetMoveOffset
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector2D UDragWidget_C::GetMoveOffset() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DragWidget_C", "GetMoveOffset");

	Params::DragWidget_C_GetMoveOffset Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DragWidget.DragWidget_C.GetSlotBrushes
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FSlateBrush                      BG_Brush                                               (Parm, OutParm)
// struct FSlateBrush                      Gradient_Brush                                         (Parm, OutParm)

void UDragWidget_C::GetSlotBrushes(struct FSlateBrush* BG_Brush, struct FSlateBrush* Gradient_Brush) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DragWidget_C", "GetSlotBrushes");

	Params::DragWidget_C_GetSlotBrushes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BG_Brush != nullptr)
		*BG_Brush = std::move(Parms.BG_Brush);

	if (Gradient_Brush != nullptr)
		*Gradient_Brush = std::move(Parms.Gradient_Brush);
}

}

