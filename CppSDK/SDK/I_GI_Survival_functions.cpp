#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: I_GI_Survival

#include "Basic.hpp"

#include "I_GI_Survival_classes.hpp"
#include "I_GI_Survival_parameters.hpp"


namespace SDK
{

// Function I_GI_Survival.I_GI_Survival_C.GetDisclaimerShowed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Showed                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void II_GI_Survival_C::GetDisclaimerShowed(bool* Showed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_GI_Survival_C", "GetDisclaimerShowed");

	Params::I_GI_Survival_C_GetDisclaimerShowed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Showed != nullptr)
		*Showed = Parms.Showed;
}


// Function I_GI_Survival.I_GI_Survival_C.GetIsFemale
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsFemale                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void II_GI_Survival_C::GetIsFemale(bool* IsFemale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_GI_Survival_C", "GetIsFemale");

	Params::I_GI_Survival_C_GetIsFemale Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsFemale != nullptr)
		*IsFemale = Parms.IsFemale;
}


// Function I_GI_Survival.I_GI_Survival_C.GetKickedFromAFK
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    OutKickedFromAFK                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void II_GI_Survival_C::GetKickedFromAFK(bool* OutKickedFromAFK)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_GI_Survival_C", "GetKickedFromAFK");

	Params::I_GI_Survival_C_GetKickedFromAFK Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutKickedFromAFK != nullptr)
		*OutKickedFromAFK = Parms.OutKickedFromAFK;
}


// Function I_GI_Survival.I_GI_Survival_C.GetMovieShowed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Showed                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void II_GI_Survival_C::GetMovieShowed(bool* Showed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_GI_Survival_C", "GetMovieShowed");

	Params::I_GI_Survival_C_GetMovieShowed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Showed != nullptr)
		*Showed = Parms.Showed;
}


// Function I_GI_Survival.I_GI_Survival_C.GetNPCQuests
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    SpecQuests                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSet<class UQuest*>                     Quests                                                 (Parm, OutParm)

void II_GI_Survival_C::GetNPCQuests(bool SpecQuests, TSet<class UQuest*>* Quests)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_GI_Survival_C", "GetNPCQuests");

	Params::I_GI_Survival_C_GetNPCQuests Parms{};

	Parms.SpecQuests = SpecQuests;

	UObject::ProcessEvent(Func, &Parms);

	if (Quests != nullptr)
		*Quests = std::move(Parms.Quests);
}


// Function I_GI_Survival.I_GI_Survival_C.GetShadersRemainingPSO
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   Count                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void II_GI_Survival_C::GetShadersRemainingPSO(int64* Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_GI_Survival_C", "GetShadersRemainingPSO");

	Params::I_GI_Survival_C_GetShadersRemainingPSO Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Count != nullptr)
		*Count = Parms.Count;
}


// Function I_GI_Survival.I_GI_Survival_C.GetTextChatEnabled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnabled                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void II_GI_Survival_C::GetTextChatEnabled(bool* bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_GI_Survival_C", "GetTextChatEnabled");

	Params::I_GI_Survival_C_GetTextChatEnabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bEnabled != nullptr)
		*bEnabled = Parms.bEnabled;
}


// Function I_GI_Survival.I_GI_Survival_C.GetVoiceChatEnabled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnabled                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void II_GI_Survival_C::GetVoiceChatEnabled(bool* bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_GI_Survival_C", "GetVoiceChatEnabled");

	Params::I_GI_Survival_C_GetVoiceChatEnabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bEnabled != nullptr)
		*bEnabled = Parms.bEnabled;
}


// Function I_GI_Survival.I_GI_Survival_C.GetVoiceLinesEnabled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnabled                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void II_GI_Survival_C::GetVoiceLinesEnabled(bool* bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_GI_Survival_C", "GetVoiceLinesEnabled");

	Params::I_GI_Survival_C_GetVoiceLinesEnabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bEnabled != nullptr)
		*bEnabled = Parms.bEnabled;
}


// Function I_GI_Survival.I_GI_Survival_C.GetWarningMessage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_WarningMessageType                 Type_Message                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Description_Text                                       (Parm, OutParm)
// class FString                           Time                                                   (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    New_State                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void II_GI_Survival_C::GetWarningMessage(Enum_WarningMessageType* Type_Message, class FText* Description_Text, class FString* Time, bool* New_State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_GI_Survival_C", "GetWarningMessage");

	Params::I_GI_Survival_C_GetWarningMessage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Type_Message != nullptr)
		*Type_Message = Parms.Type_Message;

	if (Description_Text != nullptr)
		*Description_Text = std::move(Parms.Description_Text);

	if (Time != nullptr)
		*Time = std::move(Parms.Time);

	if (New_State != nullptr)
		*New_State = Parms.New_State;
}


// Function I_GI_Survival.I_GI_Survival_C.IsFirstStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsFirstStart                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void II_GI_Survival_C::IsFirstStart(bool* Param_IsFirstStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_GI_Survival_C", "IsFirstStart");

	Params::I_GI_Survival_C_IsFirstStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsFirstStart != nullptr)
		*Param_IsFirstStart = Parms.Param_IsFirstStart;
}


// Function I_GI_Survival.I_GI_Survival_C.IsRadioMessagePlayed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPlayed                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void II_GI_Survival_C::IsRadioMessagePlayed(bool* IsPlayed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_GI_Survival_C", "IsRadioMessagePlayed");

	Params::I_GI_Survival_C_IsRadioMessagePlayed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsPlayed != nullptr)
		*IsPlayed = Parms.IsPlayed;
}


// Function I_GI_Survival.I_GI_Survival_C.IsStashTutorialCompleted
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Completed                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void II_GI_Survival_C::IsStashTutorialCompleted(bool* Completed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_GI_Survival_C", "IsStashTutorialCompleted");

	Params::I_GI_Survival_C_IsStashTutorialCompleted Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Completed != nullptr)
		*Completed = Parms.Completed;
}


// Function I_GI_Survival.I_GI_Survival_C.IsTutorialBeginCompleted
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Completed                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void II_GI_Survival_C::IsTutorialBeginCompleted(bool* Completed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_GI_Survival_C", "IsTutorialBeginCompleted");

	Params::I_GI_Survival_C_IsTutorialBeginCompleted Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Completed != nullptr)
		*Completed = Parms.Completed;
}


// Function I_GI_Survival.I_GI_Survival_C.IsTutorialCompleted
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Completed                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void II_GI_Survival_C::IsTutorialCompleted(bool* Completed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_GI_Survival_C", "IsTutorialCompleted");

	Params::I_GI_Survival_C_IsTutorialCompleted Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Completed != nullptr)
		*Completed = Parms.Completed;
}


// Function I_GI_Survival.I_GI_Survival_C.JoinToServer
// (Public, BlueprintCallable, BlueprintEvent)

void II_GI_Survival_C::JoinToServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_GI_Survival_C", "JoinToServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function I_GI_Survival.I_GI_Survival_C.LoadDeathCount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DeathCount                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void II_GI_Survival_C::LoadDeathCount(int32* DeathCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_GI_Survival_C", "LoadDeathCount");

	Params::I_GI_Survival_C_LoadDeathCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DeathCount != nullptr)
		*DeathCount = Parms.DeathCount;
}


// Function I_GI_Survival.I_GI_Survival_C.SetBatchModePSO
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Mode                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void II_GI_Survival_C::SetBatchModePSO(int32 Mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_GI_Survival_C", "SetBatchModePSO");

	Params::I_GI_Survival_C_SetBatchModePSO Parms{};

	Parms.Mode = Mode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function I_GI_Survival.I_GI_Survival_C.SetDisclaimerShowed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Show                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void II_GI_Survival_C::SetDisclaimerShowed(bool Show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_GI_Survival_C", "SetDisclaimerShowed");

	Params::I_GI_Survival_C_SetDisclaimerShowed Parms{};

	Parms.Show = Show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function I_GI_Survival.I_GI_Survival_C.SetFistStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsFirstStart                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void II_GI_Survival_C::SetFistStart(bool Param_IsFirstStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_GI_Survival_C", "SetFistStart");

	Params::I_GI_Survival_C_SetFistStart Parms{};

	Parms.Param_IsFirstStart = Param_IsFirstStart;

	UObject::ProcessEvent(Func, &Parms);
}


// Function I_GI_Survival.I_GI_Survival_C.SetKickedFromAFK
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewKickedFromAFK                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void II_GI_Survival_C::SetKickedFromAFK(bool NewKickedFromAFK)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_GI_Survival_C", "SetKickedFromAFK");

	Params::I_GI_Survival_C_SetKickedFromAFK Parms{};

	Parms.NewKickedFromAFK = NewKickedFromAFK;

	UObject::ProcessEvent(Func, &Parms);
}


// Function I_GI_Survival.I_GI_Survival_C.SetMovieShowed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Show                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void II_GI_Survival_C::SetMovieShowed(bool Show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_GI_Survival_C", "SetMovieShowed");

	Params::I_GI_Survival_C_SetMovieShowed Parms{};

	Parms.Show = Show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function I_GI_Survival.I_GI_Survival_C.SetRadioMessagePlayed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Played                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void II_GI_Survival_C::SetRadioMessagePlayed(bool Played)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_GI_Survival_C", "SetRadioMessagePlayed");

	Params::I_GI_Survival_C_SetRadioMessagePlayed Parms{};

	Parms.Played = Played;

	UObject::ProcessEvent(Func, &Parms);
}


// Function I_GI_Survival.I_GI_Survival_C.SetServerAddress
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           IP                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Port                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void II_GI_Survival_C::SetServerAddress(const class FString& IP, const class FString& Port)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_GI_Survival_C", "SetServerAddress");

	Params::I_GI_Survival_C_SetServerAddress Parms{};

	Parms.IP = std::move(IP);
	Parms.Port = std::move(Port);

	UObject::ProcessEvent(Func, &Parms);
}


// Function I_GI_Survival.I_GI_Survival_C.SetSpawnRegion
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Region                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void II_GI_Survival_C::SetSpawnRegion(class FName Region)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_GI_Survival_C", "SetSpawnRegion");

	Params::I_GI_Survival_C_SetSpawnRegion Parms{};

	Parms.Region = Region;

	UObject::ProcessEvent(Func, &Parms);
}


// Function I_GI_Survival.I_GI_Survival_C.SetStashTutorialCompleted
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Completed                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void II_GI_Survival_C::SetStashTutorialCompleted(bool Completed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_GI_Survival_C", "SetStashTutorialCompleted");

	Params::I_GI_Survival_C_SetStashTutorialCompleted Parms{};

	Parms.Completed = Completed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function I_GI_Survival.I_GI_Survival_C.SetTextChatEnabled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void II_GI_Survival_C::SetTextChatEnabled(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_GI_Survival_C", "SetTextChatEnabled");

	Params::I_GI_Survival_C_SetTextChatEnabled Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function I_GI_Survival.I_GI_Survival_C.SetTutorialBeginCompleted
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Completed                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void II_GI_Survival_C::SetTutorialBeginCompleted(bool Completed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_GI_Survival_C", "SetTutorialBeginCompleted");

	Params::I_GI_Survival_C_SetTutorialBeginCompleted Parms{};

	Parms.Completed = Completed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function I_GI_Survival.I_GI_Survival_C.SetTutorialCompleted
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Completed                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void II_GI_Survival_C::SetTutorialCompleted(bool Completed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_GI_Survival_C", "SetTutorialCompleted");

	Params::I_GI_Survival_C_SetTutorialCompleted Parms{};

	Parms.Completed = Completed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function I_GI_Survival.I_GI_Survival_C.SetVoiceChatEnabled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void II_GI_Survival_C::SetVoiceChatEnabled(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_GI_Survival_C", "SetVoiceChatEnabled");

	Params::I_GI_Survival_C_SetVoiceChatEnabled Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function I_GI_Survival.I_GI_Survival_C.SetVoiceLinesEnabled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void II_GI_Survival_C::SetVoiceLinesEnabled(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_GI_Survival_C", "SetVoiceLinesEnabled");

	Params::I_GI_Survival_C_SetVoiceLinesEnabled Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function I_GI_Survival.I_GI_Survival_C.SetWarningMessage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_WarningMessageType                 Type_Message                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Description_Text                                       (BlueprintVisible, BlueprintReadOnly, Parm)
// class FString                           Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    New_State                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void II_GI_Survival_C::SetWarningMessage(Enum_WarningMessageType Type_Message, const class FText& Description_Text, const class FString& Time, bool New_State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_GI_Survival_C", "SetWarningMessage");

	Params::I_GI_Survival_C_SetWarningMessage Parms{};

	Parms.Type_Message = Type_Message;
	Parms.Description_Text = std::move(Description_Text);
	Parms.Time = std::move(Time);
	Parms.New_State = New_State;

	UObject::ProcessEvent(Func, &Parms);
}

}

