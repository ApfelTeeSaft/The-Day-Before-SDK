#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DecalDelaySpawner

#include "Basic.hpp"

#include "DecalDelaySpawner_classes.hpp"
#include "DecalDelaySpawner_parameters.hpp"


namespace SDK
{

// Function DecalDelaySpawner.DecalDelaySpawner_C.Call
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInterface*               DecalMaterial                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  AttachToComponent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FVector                          DecalSize                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             AttachPointName                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// double                                  Delay                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDecalDelaySpawner_C::Call(class UMaterialInterface* DecalMaterial, class USceneComponent* AttachToComponent, const struct FVector& DecalSize, class FName AttachPointName, const struct FVector& Location, const struct FRotator& Rotation, double Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DecalDelaySpawner_C", "Call");

	Params::DecalDelaySpawner_C_Call Parms{};

	Parms.DecalMaterial = DecalMaterial;
	Parms.AttachToComponent = AttachToComponent;
	Parms.DecalSize = std::move(DecalSize);
	Parms.AttachPointName = AttachPointName;
	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);
	Parms.Delay = Delay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DecalDelaySpawner.DecalDelaySpawner_C.ExecuteUbergraph_DecalDelaySpawner
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDecalDelaySpawner_C::ExecuteUbergraph_DecalDelaySpawner(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DecalDelaySpawner_C", "ExecuteUbergraph_DecalDelaySpawner");

	Params::DecalDelaySpawner_C_ExecuteUbergraph_DecalDelaySpawner Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DecalDelaySpawner.DecalDelaySpawner_C.Timer
// (BlueprintCallable, BlueprintEvent)

void UDecalDelaySpawner_C::Timer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DecalDelaySpawner_C", "Timer");

	UObject::ProcessEvent(Func, nullptr);
}

}

