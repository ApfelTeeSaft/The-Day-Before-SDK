#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_RepairTab

#include "Basic.hpp"

#include "FItemInfo_structs.hpp"
#include "ContainerPickupsInfo_structs.hpp"
#include "JSItemType_structs.hpp"


namespace SDK::Params
{

// Function WBP_RepairTab.WBP_RepairTab_C.ExecuteUbergraph_WBP_RepairTab
// 0x0004 (0x0004 - 0x0000)
struct WBP_RepairTab_C_ExecuteUbergraph_WBP_RepairTab final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RepairTab_C_ExecuteUbergraph_WBP_RepairTab) == 0x000004, "Wrong alignment on WBP_RepairTab_C_ExecuteUbergraph_WBP_RepairTab");
static_assert(sizeof(WBP_RepairTab_C_ExecuteUbergraph_WBP_RepairTab) == 0x000004, "Wrong size on WBP_RepairTab_C_ExecuteUbergraph_WBP_RepairTab");
static_assert(offsetof(WBP_RepairTab_C_ExecuteUbergraph_WBP_RepairTab, EntryPoint) == 0x000000, "Member 'WBP_RepairTab_C_ExecuteUbergraph_WBP_RepairTab::EntryPoint' has a wrong offset!");

// Function WBP_RepairTab.WBP_RepairTab_C.GetEntries
// 0x0010 (0x0010 - 0x0000)
struct WBP_RepairTab_C_GetEntries final
{
public:
	TArray<class UWBP_RepairEntry_C*>             Param_EntryList;                                   // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
};
static_assert(alignof(WBP_RepairTab_C_GetEntries) == 0x000008, "Wrong alignment on WBP_RepairTab_C_GetEntries");
static_assert(sizeof(WBP_RepairTab_C_GetEntries) == 0x000010, "Wrong size on WBP_RepairTab_C_GetEntries");
static_assert(offsetof(WBP_RepairTab_C_GetEntries, Param_EntryList) == 0x000000, "Member 'WBP_RepairTab_C_GetEntries::Param_EntryList' has a wrong offset!");

// Function WBP_RepairTab.WBP_RepairTab_C.GetHaveItemsToRepair
// 0x0001 (0x0001 - 0x0000)
struct WBP_RepairTab_C_GetHaveItemsToRepair final
{
public:
	bool                                          Param_bHaveItemsToRepair;                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RepairTab_C_GetHaveItemsToRepair) == 0x000001, "Wrong alignment on WBP_RepairTab_C_GetHaveItemsToRepair");
static_assert(sizeof(WBP_RepairTab_C_GetHaveItemsToRepair) == 0x000001, "Wrong size on WBP_RepairTab_C_GetHaveItemsToRepair");
static_assert(offsetof(WBP_RepairTab_C_GetHaveItemsToRepair, Param_bHaveItemsToRepair) == 0x000000, "Member 'WBP_RepairTab_C_GetHaveItemsToRepair::Param_bHaveItemsToRepair' has a wrong offset!");

// Function WBP_RepairTab.WBP_RepairTab_C.Init
// 0x0650 (0x0650 - 0x0000)
struct WBP_RepairTab_C_Init final
{
public:
	TArray<int32>                                 NewLocalVar_0;                                     // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 NewLocalVar;                                       // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         RepairAllPrice;                                    // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0058(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_Array_Get_Item;                           // 0x0068(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28D[0x3];                                      // 0x028D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EJSItemType>                           K2Node_MakeArray_Array;                            // 0x0290(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_RepairEntry_C*                     CallFunc_Create_ReturnValue;                       // 0x02A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_RepairEntry_C*                     CallFunc_Array_Get_Item_1;                         // 0x02B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC;                  // 0x02C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      CallFunc_GetPlayerRef_SurvivalPlayer;              // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FContainerPickupsInfo>          CallFunc_getItemsInventory_ContainerItems;         // 0x02E8(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<struct FContainerPickupsInfo>          CallFunc_getItemsInventory_ContainersData;         // 0x02F8(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FContainerPickupsInfo                  CallFunc_Array_Get_Item_2;                         // 0x0308(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_374[0x4];                                      // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo; // 0x0378(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0598(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0599(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59A[0x2];                                      // 0x059A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x059C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x05A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x05A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x05A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x05A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AA[0x6];                                      // 0x05AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x05B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC_1;                // 0x05B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x05C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C9[0x7];                                      // 0x05C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      CallFunc_GetPlayerRef_SurvivalPlayer_1;            // 0x05D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_RepairEntry_C*                     CallFunc_Array_Get_Item_3;                         // 0x05D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x05E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRepairPrice_RepairPrice;               // 0x05E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x05E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E9[0x3];                                      // 0x05E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x05EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemCountByName_ReturnedCount;         // 0x05F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x05F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F5[0x3];                                      // 0x05F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x05F8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_RepairEntry_C*                     CallFunc_Create_ReturnValue_1;                     // 0x0608(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0610(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0614(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_619[0x3];                                      // 0x0619(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x061C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0620(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_621[0x3];                                      // 0x0621(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0624(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0628(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62C[0x4];                                      // 0x062C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUniformGridSlot*                       CallFunc_AddChildToUniformGrid_ReturnValue;        // 0x0630(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue_1;           // 0x0638(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_1;             // 0x063C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue_1;              // 0x0640(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_644[0x4];                                      // 0x0644(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUniformGridSlot*                       CallFunc_AddChildToUniformGrid_ReturnValue_1;      // 0x0648(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RepairTab_C_Init) == 0x000008, "Wrong alignment on WBP_RepairTab_C_Init");
static_assert(sizeof(WBP_RepairTab_C_Init) == 0x000650, "Wrong size on WBP_RepairTab_C_Init");
static_assert(offsetof(WBP_RepairTab_C_Init, NewLocalVar_0) == 0x000000, "Member 'WBP_RepairTab_C_Init::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, NewLocalVar) == 0x000010, "Member 'WBP_RepairTab_C_Init::NewLocalVar' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, RepairAllPrice) == 0x000020, "Member 'WBP_RepairTab_C_Init::RepairAllPrice' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, Temp_int_Array_Index_Variable) == 0x000024, "Member 'WBP_RepairTab_C_Init::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'WBP_RepairTab_C_Init::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'WBP_RepairTab_C_Init::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, Temp_int_Loop_Counter_Variable_1) == 0x000030, "Member 'WBP_RepairTab_C_Init::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, Temp_int_Variable) == 0x000034, "Member 'WBP_RepairTab_C_Init::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'WBP_RepairTab_C_Init::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_Add_IntInt_ReturnValue_2) == 0x00003C, "Member 'WBP_RepairTab_C_Init::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, Temp_int_Array_Index_Variable_1) == 0x000040, "Member 'WBP_RepairTab_C_Init::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, Temp_int_Loop_Counter_Variable_2) == 0x000044, "Member 'WBP_RepairTab_C_Init::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_Add_IntInt_ReturnValue_3) == 0x000048, "Member 'WBP_RepairTab_C_Init::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, Temp_int_Array_Index_Variable_2) == 0x00004C, "Member 'WBP_RepairTab_C_Init::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, Temp_int_Loop_Counter_Variable_3) == 0x000050, "Member 'WBP_RepairTab_C_Init::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_Add_IntInt_ReturnValue_4) == 0x000054, "Member 'WBP_RepairTab_C_Init::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, K2Node_CreateDelegate_OutputDelegate) == 0x000058, "Member 'WBP_RepairTab_C_Init::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_Array_Get_Item) == 0x000068, "Member 'WBP_RepairTab_C_Init::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_Array_Length_ReturnValue) == 0x000288, "Member 'WBP_RepairTab_C_Init::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_Less_IntInt_ReturnValue) == 0x00028C, "Member 'WBP_RepairTab_C_Init::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, K2Node_MakeArray_Array) == 0x000290, "Member 'WBP_RepairTab_C_Init::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, Temp_int_Array_Index_Variable_3) == 0x0002A0, "Member 'WBP_RepairTab_C_Init::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_Create_ReturnValue) == 0x0002A8, "Member 'WBP_RepairTab_C_Init::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_GetPlayerController_ReturnValue) == 0x0002B0, "Member 'WBP_RepairTab_C_Init::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_Array_Get_Item_1) == 0x0002B8, "Member 'WBP_RepairTab_C_Init::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, K2Node_DynamicCast_AsBPI_Surv_PC) == 0x0002C0, "Member 'WBP_RepairTab_C_Init::K2Node_DynamicCast_AsBPI_Surv_PC' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, K2Node_DynamicCast_bSuccess) == 0x0002D0, "Member 'WBP_RepairTab_C_Init::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_GetPlayerRef_SurvivalPlayer) == 0x0002D8, "Member 'WBP_RepairTab_C_Init::CallFunc_GetPlayerRef_SurvivalPlayer' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_IsValid_ReturnValue) == 0x0002E0, "Member 'WBP_RepairTab_C_Init::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_getItemsInventory_ContainerItems) == 0x0002E8, "Member 'WBP_RepairTab_C_Init::CallFunc_getItemsInventory_ContainerItems' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_getItemsInventory_ContainersData) == 0x0002F8, "Member 'WBP_RepairTab_C_Init::CallFunc_getItemsInventory_ContainersData' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_Array_Get_Item_2) == 0x000308, "Member 'WBP_RepairTab_C_Init::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_Array_Length_ReturnValue_1) == 0x000370, "Member 'WBP_RepairTab_C_Init::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo) == 0x000378, "Member 'WBP_RepairTab_C_Init::CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_Less_IntInt_ReturnValue_1) == 0x000598, "Member 'WBP_RepairTab_C_Init::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000599, "Member 'WBP_RepairTab_C_Init::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_Array_Add_ReturnValue) == 0x00059C, "Member 'WBP_RepairTab_C_Init::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_Array_Length_ReturnValue_2) == 0x0005A0, "Member 'WBP_RepairTab_C_Init::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_Array_Find_ReturnValue) == 0x0005A4, "Member 'WBP_RepairTab_C_Init::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_Less_IntInt_ReturnValue_2) == 0x0005A8, "Member 'WBP_RepairTab_C_Init::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0005A9, "Member 'WBP_RepairTab_C_Init::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_GetPlayerController_ReturnValue_1) == 0x0005B0, "Member 'WBP_RepairTab_C_Init::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, K2Node_DynamicCast_AsBPI_Surv_PC_1) == 0x0005B8, "Member 'WBP_RepairTab_C_Init::K2Node_DynamicCast_AsBPI_Surv_PC_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, K2Node_DynamicCast_bSuccess_1) == 0x0005C8, "Member 'WBP_RepairTab_C_Init::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_GetPlayerRef_SurvivalPlayer_1) == 0x0005D0, "Member 'WBP_RepairTab_C_Init::CallFunc_GetPlayerRef_SurvivalPlayer_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_Array_Get_Item_3) == 0x0005D8, "Member 'WBP_RepairTab_C_Init::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_Array_Length_ReturnValue_3) == 0x0005E0, "Member 'WBP_RepairTab_C_Init::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_GetRepairPrice_RepairPrice) == 0x0005E4, "Member 'WBP_RepairTab_C_Init::CallFunc_GetRepairPrice_RepairPrice' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_Less_IntInt_ReturnValue_3) == 0x0005E8, "Member 'WBP_RepairTab_C_Init::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_Add_IntInt_ReturnValue_5) == 0x0005EC, "Member 'WBP_RepairTab_C_Init::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_GetItemCountByName_ReturnedCount) == 0x0005F0, "Member 'WBP_RepairTab_C_Init::CallFunc_GetItemCountByName_ReturnedCount' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0005F4, "Member 'WBP_RepairTab_C_Init::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, K2Node_CreateDelegate_OutputDelegate_1) == 0x0005F8, "Member 'WBP_RepairTab_C_Init::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_Create_ReturnValue_1) == 0x000608, "Member 'WBP_RepairTab_C_Init::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_Array_Add_ReturnValue_1) == 0x000610, "Member 'WBP_RepairTab_C_Init::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_Subtract_IntInt_ReturnValue) == 0x000614, "Member 'WBP_RepairTab_C_Init::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000618, "Member 'WBP_RepairTab_C_Init::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_GetChildrenCount_ReturnValue) == 0x00061C, "Member 'WBP_RepairTab_C_Init::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_Less_IntInt_ReturnValue_4) == 0x000620, "Member 'WBP_RepairTab_C_Init::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_Divide_IntInt_ReturnValue) == 0x000624, "Member 'WBP_RepairTab_C_Init::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_Percent_IntInt_ReturnValue) == 0x000628, "Member 'WBP_RepairTab_C_Init::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_AddChildToUniformGrid_ReturnValue) == 0x000630, "Member 'WBP_RepairTab_C_Init::CallFunc_AddChildToUniformGrid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_GetChildrenCount_ReturnValue_1) == 0x000638, "Member 'WBP_RepairTab_C_Init::CallFunc_GetChildrenCount_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_Percent_IntInt_ReturnValue_1) == 0x00063C, "Member 'WBP_RepairTab_C_Init::CallFunc_Percent_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_Divide_IntInt_ReturnValue_1) == 0x000640, "Member 'WBP_RepairTab_C_Init::CallFunc_Divide_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_Init, CallFunc_AddChildToUniformGrid_ReturnValue_1) == 0x000648, "Member 'WBP_RepairTab_C_Init::CallFunc_AddChildToUniformGrid_ReturnValue_1' has a wrong offset!");

// Function WBP_RepairTab.WBP_RepairTab_C.OnRecalculateRepairAllPrice__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_RepairTab_C_OnRecalculateRepairAllPrice__DelegateSignature final
{
public:
	bool                                          bEnoughMoney;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RepairTab_C_OnRecalculateRepairAllPrice__DelegateSignature) == 0x000001, "Wrong alignment on WBP_RepairTab_C_OnRecalculateRepairAllPrice__DelegateSignature");
static_assert(sizeof(WBP_RepairTab_C_OnRecalculateRepairAllPrice__DelegateSignature) == 0x000001, "Wrong size on WBP_RepairTab_C_OnRecalculateRepairAllPrice__DelegateSignature");
static_assert(offsetof(WBP_RepairTab_C_OnRecalculateRepairAllPrice__DelegateSignature, bEnoughMoney) == 0x000000, "Member 'WBP_RepairTab_C_OnRecalculateRepairAllPrice__DelegateSignature::bEnoughMoney' has a wrong offset!");

// Function WBP_RepairTab.WBP_RepairTab_C.RepairAll
// 0x0020 (0x0020 - 0x0000)
struct WBP_RepairTab_C_RepairAll final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_RepairEntry_C*                     CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RepairTab_C_RepairAll) == 0x000008, "Wrong alignment on WBP_RepairTab_C_RepairAll");
static_assert(sizeof(WBP_RepairTab_C_RepairAll) == 0x000020, "Wrong size on WBP_RepairTab_C_RepairAll");
static_assert(offsetof(WBP_RepairTab_C_RepairAll, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_RepairTab_C_RepairAll::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_RepairAll, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_RepairTab_C_RepairAll::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_RepairAll, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_RepairTab_C_RepairAll::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_RepairAll, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'WBP_RepairTab_C_RepairAll::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_RepairAll, CallFunc_Array_Get_Item) == 0x000010, "Member 'WBP_RepairTab_C_RepairAll::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_RepairAll, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'WBP_RepairTab_C_RepairAll::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_RepairTab.WBP_RepairTab_C.Sort
// 0x0004 (0x0004 - 0x0000)
struct WBP_RepairTab_C_Sort final
{
public:
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RepairTab_C_Sort) == 0x000004, "Wrong alignment on WBP_RepairTab_C_Sort");
static_assert(sizeof(WBP_RepairTab_C_Sort) == 0x000004, "Wrong size on WBP_RepairTab_C_Sort");
static_assert(offsetof(WBP_RepairTab_C_Sort, CallFunc_Array_LastIndex_ReturnValue) == 0x000000, "Member 'WBP_RepairTab_C_Sort::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");

// Function WBP_RepairTab.WBP_RepairTab_C.SortIteration
// 0x0020 (0x0020 - 0x0000)
struct WBP_RepairTab_C_SortIteration final
{
public:
	int32                                         First;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Last;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SortSetPivot_PivotIndex;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RepairTab_C_SortIteration) == 0x000004, "Wrong alignment on WBP_RepairTab_C_SortIteration");
static_assert(sizeof(WBP_RepairTab_C_SortIteration) == 0x000020, "Wrong size on WBP_RepairTab_C_SortIteration");
static_assert(offsetof(WBP_RepairTab_C_SortIteration, First) == 0x000000, "Member 'WBP_RepairTab_C_SortIteration::First' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_SortIteration, Last) == 0x000004, "Member 'WBP_RepairTab_C_SortIteration::Last' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_SortIteration, CallFunc_Less_IntInt_ReturnValue) == 0x000008, "Member 'WBP_RepairTab_C_SortIteration::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_SortIteration, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000009, "Member 'WBP_RepairTab_C_SortIteration::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_SortIteration, CallFunc_SortSetPivot_PivotIndex) == 0x00000C, "Member 'WBP_RepairTab_C_SortIteration::CallFunc_SortSetPivot_PivotIndex' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_SortIteration, CallFunc_BooleanOR_ReturnValue) == 0x000010, "Member 'WBP_RepairTab_C_SortIteration::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_SortIteration, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'WBP_RepairTab_C_SortIteration::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_SortIteration, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'WBP_RepairTab_C_SortIteration::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_SortIteration, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_RepairTab_C_SortIteration::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_RepairTab.WBP_RepairTab_C.SortSetPivot
// 0x0498 (0x0498 - 0x0000)
struct WBP_RepairTab_C_SortSetPivot final
{
public:
	int32                                         First;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Last;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PivotIndex;                                        // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Pivot;                                             // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_Array_Get_Item;                           // 0x0028(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_Array_Get_Item_1;                         // 0x0260(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x048C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RepairTab_C_SortSetPivot) == 0x000008, "Wrong alignment on WBP_RepairTab_C_SortSetPivot");
static_assert(sizeof(WBP_RepairTab_C_SortSetPivot) == 0x000498, "Wrong size on WBP_RepairTab_C_SortSetPivot");
static_assert(offsetof(WBP_RepairTab_C_SortSetPivot, First) == 0x000000, "Member 'WBP_RepairTab_C_SortSetPivot::First' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_SortSetPivot, Last) == 0x000004, "Member 'WBP_RepairTab_C_SortSetPivot::Last' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_SortSetPivot, PivotIndex) == 0x000008, "Member 'WBP_RepairTab_C_SortSetPivot::PivotIndex' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_SortSetPivot, Param_Index) == 0x00000C, "Member 'WBP_RepairTab_C_SortSetPivot::Param_Index' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_SortSetPivot, Pivot) == 0x000010, "Member 'WBP_RepairTab_C_SortSetPivot::Pivot' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_SortSetPivot, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'WBP_RepairTab_C_SortSetPivot::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_SortSetPivot, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00001C, "Member 'WBP_RepairTab_C_SortSetPivot::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_SortSetPivot, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'WBP_RepairTab_C_SortSetPivot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_SortSetPivot, Temp_int_Variable) == 0x000024, "Member 'WBP_RepairTab_C_SortSetPivot::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_SortSetPivot, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_RepairTab_C_SortSetPivot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_SortSetPivot, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000248, "Member 'WBP_RepairTab_C_SortSetPivot::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_SortSetPivot, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000250, "Member 'WBP_RepairTab_C_SortSetPivot::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_SortSetPivot, CallFunc_Add_IntInt_ReturnValue_1) == 0x000258, "Member 'WBP_RepairTab_C_SortSetPivot::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_SortSetPivot, Temp_int_Variable_1) == 0x00025C, "Member 'WBP_RepairTab_C_SortSetPivot::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_SortSetPivot, CallFunc_Array_Get_Item_1) == 0x000260, "Member 'WBP_RepairTab_C_SortSetPivot::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_SortSetPivot, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000480, "Member 'WBP_RepairTab_C_SortSetPivot::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_SortSetPivot, CallFunc_Add_IntInt_ReturnValue_2) == 0x000488, "Member 'WBP_RepairTab_C_SortSetPivot::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_SortSetPivot, Temp_int_Variable_2) == 0x00048C, "Member 'WBP_RepairTab_C_SortSetPivot::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_RepairTab_C_SortSetPivot, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000490, "Member 'WBP_RepairTab_C_SortSetPivot::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");

}

