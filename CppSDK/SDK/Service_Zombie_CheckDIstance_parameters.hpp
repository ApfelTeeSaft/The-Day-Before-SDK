#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Service_Zombie_CheckDIstance

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Service_Zombie_CheckDIstance.Service_Zombie_CheckDIstance_C.CheckDoorInFront
// 0x0268 (0x0268 - 0x0000)
struct Service_Zombie_CheckDIstance_C_CheckDoorInFront final
{
public:
	bool                                          FoundDoor;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_BoxTraceSingle_OutHit;                    // 0x0048(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BoxTraceSingle_ReturnValue;               // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCPPVelocityValue_ReturnValue;          // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13A[0x2];                                      // 0x013A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Door_C*                             K2Node_DynamicCast_AsBP_Door;                      // 0x0228(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetAngleToActor_Angle;                    // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25A[0x6];                                      // 0x025A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_NearlyEqual_FloatFloat_B_ImplicitCast;    // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Service_Zombie_CheckDIstance_C_CheckDoorInFront) == 0x000008, "Wrong alignment on Service_Zombie_CheckDIstance_C_CheckDoorInFront");
static_assert(sizeof(Service_Zombie_CheckDIstance_C_CheckDoorInFront) == 0x000268, "Wrong size on Service_Zombie_CheckDIstance_C_CheckDoorInFront");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_CheckDoorInFront, FoundDoor) == 0x000000, "Member 'Service_Zombie_CheckDIstance_C_CheckDoorInFront::FoundDoor' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_CheckDoorInFront, CallFunc_MakeVector_ReturnValue) == 0x000008, "Member 'Service_Zombie_CheckDIstance_C_CheckDoorInFront::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_CheckDoorInFront, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'Service_Zombie_CheckDIstance_C_CheckDoorInFront::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_CheckDoorInFront, K2Node_MakeArray_Array) == 0x000038, "Member 'Service_Zombie_CheckDIstance_C_CheckDoorInFront::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_CheckDoorInFront, CallFunc_BoxTraceSingle_OutHit) == 0x000048, "Member 'Service_Zombie_CheckDIstance_C_CheckDoorInFront::CallFunc_BoxTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_CheckDoorInFront, CallFunc_BoxTraceSingle_ReturnValue) == 0x000130, "Member 'Service_Zombie_CheckDIstance_C_CheckDoorInFront::CallFunc_BoxTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_CheckDoorInFront, CallFunc_GetCPPVelocityValue_ReturnValue) == 0x000134, "Member 'Service_Zombie_CheckDIstance_C_CheckDoorInFront::CallFunc_GetCPPVelocityValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_CheckDoorInFront, CallFunc_BreakHitResult_bBlockingHit) == 0x000138, "Member 'Service_Zombie_CheckDIstance_C_CheckDoorInFront::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_CheckDoorInFront, CallFunc_BreakHitResult_bInitialOverlap) == 0x000139, "Member 'Service_Zombie_CheckDIstance_C_CheckDoorInFront::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_CheckDoorInFront, CallFunc_BreakHitResult_Time) == 0x00013C, "Member 'Service_Zombie_CheckDIstance_C_CheckDoorInFront::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_CheckDoorInFront, CallFunc_BreakHitResult_Distance) == 0x000140, "Member 'Service_Zombie_CheckDIstance_C_CheckDoorInFront::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_CheckDoorInFront, CallFunc_BreakHitResult_Location) == 0x000148, "Member 'Service_Zombie_CheckDIstance_C_CheckDoorInFront::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_CheckDoorInFront, CallFunc_BreakHitResult_ImpactPoint) == 0x000160, "Member 'Service_Zombie_CheckDIstance_C_CheckDoorInFront::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_CheckDoorInFront, CallFunc_BreakHitResult_Normal) == 0x000178, "Member 'Service_Zombie_CheckDIstance_C_CheckDoorInFront::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_CheckDoorInFront, CallFunc_BreakHitResult_ImpactNormal) == 0x000190, "Member 'Service_Zombie_CheckDIstance_C_CheckDoorInFront::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_CheckDoorInFront, CallFunc_BreakHitResult_PhysMat) == 0x0001A8, "Member 'Service_Zombie_CheckDIstance_C_CheckDoorInFront::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_CheckDoorInFront, CallFunc_BreakHitResult_HitActor) == 0x0001B0, "Member 'Service_Zombie_CheckDIstance_C_CheckDoorInFront::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_CheckDoorInFront, CallFunc_BreakHitResult_HitComponent) == 0x0001B8, "Member 'Service_Zombie_CheckDIstance_C_CheckDoorInFront::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_CheckDoorInFront, CallFunc_BreakHitResult_HitBoneName) == 0x0001C0, "Member 'Service_Zombie_CheckDIstance_C_CheckDoorInFront::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_CheckDoorInFront, CallFunc_BreakHitResult_BoneName) == 0x0001C8, "Member 'Service_Zombie_CheckDIstance_C_CheckDoorInFront::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_CheckDoorInFront, CallFunc_BreakHitResult_HitItem) == 0x0001D0, "Member 'Service_Zombie_CheckDIstance_C_CheckDoorInFront::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_CheckDoorInFront, CallFunc_BreakHitResult_ElementIndex) == 0x0001D4, "Member 'Service_Zombie_CheckDIstance_C_CheckDoorInFront::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_CheckDoorInFront, CallFunc_BreakHitResult_FaceIndex) == 0x0001D8, "Member 'Service_Zombie_CheckDIstance_C_CheckDoorInFront::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_CheckDoorInFront, CallFunc_BreakHitResult_TraceStart) == 0x0001E0, "Member 'Service_Zombie_CheckDIstance_C_CheckDoorInFront::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_CheckDoorInFront, CallFunc_BreakHitResult_TraceEnd) == 0x0001F8, "Member 'Service_Zombie_CheckDIstance_C_CheckDoorInFront::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_CheckDoorInFront, CallFunc_GetVelocity_ReturnValue) == 0x000210, "Member 'Service_Zombie_CheckDIstance_C_CheckDoorInFront::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_CheckDoorInFront, K2Node_DynamicCast_AsBP_Door) == 0x000228, "Member 'Service_Zombie_CheckDIstance_C_CheckDoorInFront::K2Node_DynamicCast_AsBP_Door' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_CheckDoorInFront, K2Node_DynamicCast_bSuccess) == 0x000230, "Member 'Service_Zombie_CheckDIstance_C_CheckDoorInFront::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_CheckDoorInFront, CallFunc_VSize_ReturnValue) == 0x000238, "Member 'Service_Zombie_CheckDIstance_C_CheckDoorInFront::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_CheckDoorInFront, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000240, "Member 'Service_Zombie_CheckDIstance_C_CheckDoorInFront::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_CheckDoorInFront, CallFunc_GetAngleToActor_Angle) == 0x000248, "Member 'Service_Zombie_CheckDIstance_C_CheckDoorInFront::CallFunc_GetAngleToActor_Angle' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_CheckDoorInFront, CallFunc_Abs_ReturnValue) == 0x000250, "Member 'Service_Zombie_CheckDIstance_C_CheckDoorInFront::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_CheckDoorInFront, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000258, "Member 'Service_Zombie_CheckDIstance_C_CheckDoorInFront::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_CheckDoorInFront, CallFunc_BooleanOR_ReturnValue) == 0x000259, "Member 'Service_Zombie_CheckDIstance_C_CheckDoorInFront::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_CheckDoorInFront, CallFunc_NearlyEqual_FloatFloat_B_ImplicitCast) == 0x000260, "Member 'Service_Zombie_CheckDIstance_C_CheckDoorInFront::CallFunc_NearlyEqual_FloatFloat_B_ImplicitCast' has a wrong offset!");

// Function Service_Zombie_CheckDIstance.Service_Zombie_CheckDIstance_C.ExecuteUbergraph_Service_Zombie_CheckDIstance
// 0x00A0 (0x00A0 - 0x0000)
struct Service_Zombie_CheckDIstance_C_ExecuteUbergraph_Service_Zombie_CheckDIstance final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAVS_VehicleMaster_C*                   K2Node_DynamicCast_AsAVS_Vehicle_Master;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_1;                    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_1;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetBlackboardValueAsActor_ReturnValue;    // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AZombie_C*                              K2Node_DynamicCast_AsZombie;                       // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Service_Zombie_CheckDIstance_C_ExecuteUbergraph_Service_Zombie_CheckDIstance) == 0x000008, "Wrong alignment on Service_Zombie_CheckDIstance_C_ExecuteUbergraph_Service_Zombie_CheckDIstance");
static_assert(sizeof(Service_Zombie_CheckDIstance_C_ExecuteUbergraph_Service_Zombie_CheckDIstance) == 0x0000A0, "Wrong size on Service_Zombie_CheckDIstance_C_ExecuteUbergraph_Service_Zombie_CheckDIstance");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_ExecuteUbergraph_Service_Zombie_CheckDIstance, EntryPoint) == 0x000000, "Member 'Service_Zombie_CheckDIstance_C_ExecuteUbergraph_Service_Zombie_CheckDIstance::EntryPoint' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_ExecuteUbergraph_Service_Zombie_CheckDIstance, K2Node_DynamicCast_AsAVS_Vehicle_Master) == 0x000008, "Member 'Service_Zombie_CheckDIstance_C_ExecuteUbergraph_Service_Zombie_CheckDIstance::K2Node_DynamicCast_AsAVS_Vehicle_Master' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_ExecuteUbergraph_Service_Zombie_CheckDIstance, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'Service_Zombie_CheckDIstance_C_ExecuteUbergraph_Service_Zombie_CheckDIstance::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_ExecuteUbergraph_Service_Zombie_CheckDIstance, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'Service_Zombie_CheckDIstance_C_ExecuteUbergraph_Service_Zombie_CheckDIstance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_ExecuteUbergraph_Service_Zombie_CheckDIstance, K2Node_Event_OwnerController_1) == 0x000018, "Member 'Service_Zombie_CheckDIstance_C_ExecuteUbergraph_Service_Zombie_CheckDIstance::K2Node_Event_OwnerController_1' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_ExecuteUbergraph_Service_Zombie_CheckDIstance, K2Node_Event_ControlledPawn_1) == 0x000020, "Member 'Service_Zombie_CheckDIstance_C_ExecuteUbergraph_Service_Zombie_CheckDIstance::K2Node_Event_ControlledPawn_1' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_ExecuteUbergraph_Service_Zombie_CheckDIstance, K2Node_Event_DeltaSeconds) == 0x000028, "Member 'Service_Zombie_CheckDIstance_C_ExecuteUbergraph_Service_Zombie_CheckDIstance::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_ExecuteUbergraph_Service_Zombie_CheckDIstance, CallFunc_GetBlackboardValueAsActor_ReturnValue) == 0x000030, "Member 'Service_Zombie_CheckDIstance_C_ExecuteUbergraph_Service_Zombie_CheckDIstance::CallFunc_GetBlackboardValueAsActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_ExecuteUbergraph_Service_Zombie_CheckDIstance, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'Service_Zombie_CheckDIstance_C_ExecuteUbergraph_Service_Zombie_CheckDIstance::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_ExecuteUbergraph_Service_Zombie_CheckDIstance, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000050, "Member 'Service_Zombie_CheckDIstance_C_ExecuteUbergraph_Service_Zombie_CheckDIstance::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_ExecuteUbergraph_Service_Zombie_CheckDIstance, CallFunc_Vector_Distance_ReturnValue) == 0x000068, "Member 'Service_Zombie_CheckDIstance_C_ExecuteUbergraph_Service_Zombie_CheckDIstance::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_ExecuteUbergraph_Service_Zombie_CheckDIstance, K2Node_Event_OwnerController) == 0x000070, "Member 'Service_Zombie_CheckDIstance_C_ExecuteUbergraph_Service_Zombie_CheckDIstance::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_ExecuteUbergraph_Service_Zombie_CheckDIstance, K2Node_Event_ControlledPawn) == 0x000078, "Member 'Service_Zombie_CheckDIstance_C_ExecuteUbergraph_Service_Zombie_CheckDIstance::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_ExecuteUbergraph_Service_Zombie_CheckDIstance, K2Node_DynamicCast_AsZombie) == 0x000080, "Member 'Service_Zombie_CheckDIstance_C_ExecuteUbergraph_Service_Zombie_CheckDIstance::K2Node_DynamicCast_AsZombie' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_ExecuteUbergraph_Service_Zombie_CheckDIstance, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'Service_Zombie_CheckDIstance_C_ExecuteUbergraph_Service_Zombie_CheckDIstance::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_ExecuteUbergraph_Service_Zombie_CheckDIstance, CallFunc_GetBlackboard_ReturnValue) == 0x000090, "Member 'Service_Zombie_CheckDIstance_C_ExecuteUbergraph_Service_Zombie_CheckDIstance::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_ExecuteUbergraph_Service_Zombie_CheckDIstance, CallFunc_IsValid_ReturnValue_1) == 0x000098, "Member 'Service_Zombie_CheckDIstance_C_ExecuteUbergraph_Service_Zombie_CheckDIstance::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function Service_Zombie_CheckDIstance.Service_Zombie_CheckDIstance_C.GetCloseAttack
// 0x0020 (0x0020 - 0x0000)
struct Service_Zombie_CheckDIstance_C_GetCloseAttack final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Service_Zombie_CheckDIstance_C_GetCloseAttack) == 0x000008, "Wrong alignment on Service_Zombie_CheckDIstance_C_GetCloseAttack");
static_assert(sizeof(Service_Zombie_CheckDIstance_C_GetCloseAttack) == 0x000020, "Wrong size on Service_Zombie_CheckDIstance_C_GetCloseAttack");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetCloseAttack, ReturnValue) == 0x000000, "Member 'Service_Zombie_CheckDIstance_C_GetCloseAttack::ReturnValue' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetCloseAttack, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'Service_Zombie_CheckDIstance_C_GetCloseAttack::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetCloseAttack, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'Service_Zombie_CheckDIstance_C_GetCloseAttack::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetCloseAttack, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000018, "Member 'Service_Zombie_CheckDIstance_C_GetCloseAttack::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Service_Zombie_CheckDIstance.Service_Zombie_CheckDIstance_C.GetFarAttack
// 0x0290 (0x0290 - 0x0000)
struct Service_Zombie_CheckDIstance_C_GetFarAttack final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0078(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_163[0x1];                                      // 0x0163(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue_1;                // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue_1;                      // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x028A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Service_Zombie_CheckDIstance_C_GetFarAttack) == 0x000008, "Wrong alignment on Service_Zombie_CheckDIstance_C_GetFarAttack");
static_assert(sizeof(Service_Zombie_CheckDIstance_C_GetFarAttack) == 0x000290, "Wrong size on Service_Zombie_CheckDIstance_C_GetFarAttack");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetFarAttack, ReturnValue) == 0x000000, "Member 'Service_Zombie_CheckDIstance_C_GetFarAttack::ReturnValue' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetFarAttack, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'Service_Zombie_CheckDIstance_C_GetFarAttack::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetFarAttack, CallFunc_SelectFloat_ReturnValue_1) == 0x000010, "Member 'Service_Zombie_CheckDIstance_C_GetFarAttack::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetFarAttack, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Service_Zombie_CheckDIstance_C_GetFarAttack::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetFarAttack, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'Service_Zombie_CheckDIstance_C_GetFarAttack::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetFarAttack, K2Node_MakeArray_Array) == 0x000028, "Member 'Service_Zombie_CheckDIstance_C_GetFarAttack::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetFarAttack, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000038, "Member 'Service_Zombie_CheckDIstance_C_GetFarAttack::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetFarAttack, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'Service_Zombie_CheckDIstance_C_GetFarAttack::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetFarAttack, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000058, "Member 'Service_Zombie_CheckDIstance_C_GetFarAttack::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetFarAttack, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000070, "Member 'Service_Zombie_CheckDIstance_C_GetFarAttack::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetFarAttack, CallFunc_LineTraceSingle_OutHit) == 0x000078, "Member 'Service_Zombie_CheckDIstance_C_GetFarAttack::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetFarAttack, CallFunc_LineTraceSingle_ReturnValue) == 0x000160, "Member 'Service_Zombie_CheckDIstance_C_GetFarAttack::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetFarAttack, CallFunc_BreakHitResult_bBlockingHit) == 0x000161, "Member 'Service_Zombie_CheckDIstance_C_GetFarAttack::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetFarAttack, CallFunc_BreakHitResult_bInitialOverlap) == 0x000162, "Member 'Service_Zombie_CheckDIstance_C_GetFarAttack::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetFarAttack, CallFunc_BreakHitResult_Time) == 0x000164, "Member 'Service_Zombie_CheckDIstance_C_GetFarAttack::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetFarAttack, CallFunc_BreakHitResult_Distance) == 0x000168, "Member 'Service_Zombie_CheckDIstance_C_GetFarAttack::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetFarAttack, CallFunc_BreakHitResult_Location) == 0x000170, "Member 'Service_Zombie_CheckDIstance_C_GetFarAttack::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetFarAttack, CallFunc_BreakHitResult_ImpactPoint) == 0x000188, "Member 'Service_Zombie_CheckDIstance_C_GetFarAttack::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetFarAttack, CallFunc_BreakHitResult_Normal) == 0x0001A0, "Member 'Service_Zombie_CheckDIstance_C_GetFarAttack::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetFarAttack, CallFunc_BreakHitResult_ImpactNormal) == 0x0001B8, "Member 'Service_Zombie_CheckDIstance_C_GetFarAttack::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetFarAttack, CallFunc_BreakHitResult_PhysMat) == 0x0001D0, "Member 'Service_Zombie_CheckDIstance_C_GetFarAttack::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetFarAttack, CallFunc_BreakHitResult_HitActor) == 0x0001D8, "Member 'Service_Zombie_CheckDIstance_C_GetFarAttack::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetFarAttack, CallFunc_BreakHitResult_HitComponent) == 0x0001E0, "Member 'Service_Zombie_CheckDIstance_C_GetFarAttack::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetFarAttack, CallFunc_BreakHitResult_HitBoneName) == 0x0001E8, "Member 'Service_Zombie_CheckDIstance_C_GetFarAttack::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetFarAttack, CallFunc_BreakHitResult_BoneName) == 0x0001F0, "Member 'Service_Zombie_CheckDIstance_C_GetFarAttack::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetFarAttack, CallFunc_BreakHitResult_HitItem) == 0x0001F8, "Member 'Service_Zombie_CheckDIstance_C_GetFarAttack::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetFarAttack, CallFunc_BreakHitResult_ElementIndex) == 0x0001FC, "Member 'Service_Zombie_CheckDIstance_C_GetFarAttack::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetFarAttack, CallFunc_BreakHitResult_FaceIndex) == 0x000200, "Member 'Service_Zombie_CheckDIstance_C_GetFarAttack::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetFarAttack, CallFunc_BreakHitResult_TraceStart) == 0x000208, "Member 'Service_Zombie_CheckDIstance_C_GetFarAttack::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetFarAttack, CallFunc_BreakHitResult_TraceEnd) == 0x000220, "Member 'Service_Zombie_CheckDIstance_C_GetFarAttack::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetFarAttack, CallFunc_GetVelocity_ReturnValue) == 0x000238, "Member 'Service_Zombie_CheckDIstance_C_GetFarAttack::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetFarAttack, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000250, "Member 'Service_Zombie_CheckDIstance_C_GetFarAttack::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetFarAttack, CallFunc_VSize_ReturnValue) == 0x000258, "Member 'Service_Zombie_CheckDIstance_C_GetFarAttack::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetFarAttack, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000260, "Member 'Service_Zombie_CheckDIstance_C_GetFarAttack::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetFarAttack, CallFunc_GetVelocity_ReturnValue_1) == 0x000268, "Member 'Service_Zombie_CheckDIstance_C_GetFarAttack::CallFunc_GetVelocity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetFarAttack, CallFunc_VSize_ReturnValue_1) == 0x000280, "Member 'Service_Zombie_CheckDIstance_C_GetFarAttack::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetFarAttack, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000288, "Member 'Service_Zombie_CheckDIstance_C_GetFarAttack::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetFarAttack, CallFunc_BooleanAND_ReturnValue) == 0x000289, "Member 'Service_Zombie_CheckDIstance_C_GetFarAttack::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetFarAttack, CallFunc_BooleanAND_ReturnValue_1) == 0x00028A, "Member 'Service_Zombie_CheckDIstance_C_GetFarAttack::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function Service_Zombie_CheckDIstance.Service_Zombie_CheckDIstance_C.GetNearAttack
// 0x0030 (0x0030 - 0x0000)
struct Service_Zombie_CheckDIstance_C_GetNearAttack final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Service_Zombie_CheckDIstance_C_GetNearAttack) == 0x000008, "Wrong alignment on Service_Zombie_CheckDIstance_C_GetNearAttack");
static_assert(sizeof(Service_Zombie_CheckDIstance_C_GetNearAttack) == 0x000030, "Wrong size on Service_Zombie_CheckDIstance_C_GetNearAttack");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetNearAttack, ReturnValue) == 0x000000, "Member 'Service_Zombie_CheckDIstance_C_GetNearAttack::ReturnValue' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetNearAttack, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'Service_Zombie_CheckDIstance_C_GetNearAttack::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetNearAttack, CallFunc_SelectFloat_ReturnValue_1) == 0x000010, "Member 'Service_Zombie_CheckDIstance_C_GetNearAttack::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetNearAttack, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Service_Zombie_CheckDIstance_C_GetNearAttack::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetNearAttack, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'Service_Zombie_CheckDIstance_C_GetNearAttack::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetNearAttack, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000028, "Member 'Service_Zombie_CheckDIstance_C_GetNearAttack::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetNearAttack, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000029, "Member 'Service_Zombie_CheckDIstance_C_GetNearAttack::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_GetNearAttack, CallFunc_BooleanAND_ReturnValue) == 0x00002A, "Member 'Service_Zombie_CheckDIstance_C_GetNearAttack::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Service_Zombie_CheckDIstance.Service_Zombie_CheckDIstance_C.ReceiveActivationAI
// 0x0010 (0x0010 - 0x0000)
struct Service_Zombie_CheckDIstance_C_ReceiveActivationAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Service_Zombie_CheckDIstance_C_ReceiveActivationAI) == 0x000008, "Wrong alignment on Service_Zombie_CheckDIstance_C_ReceiveActivationAI");
static_assert(sizeof(Service_Zombie_CheckDIstance_C_ReceiveActivationAI) == 0x000010, "Wrong size on Service_Zombie_CheckDIstance_C_ReceiveActivationAI");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_ReceiveActivationAI, OwnerController) == 0x000000, "Member 'Service_Zombie_CheckDIstance_C_ReceiveActivationAI::OwnerController' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_ReceiveActivationAI, ControlledPawn) == 0x000008, "Member 'Service_Zombie_CheckDIstance_C_ReceiveActivationAI::ControlledPawn' has a wrong offset!");

// Function Service_Zombie_CheckDIstance.Service_Zombie_CheckDIstance_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct Service_Zombie_CheckDIstance_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Service_Zombie_CheckDIstance_C_ReceiveTickAI) == 0x000008, "Wrong alignment on Service_Zombie_CheckDIstance_C_ReceiveTickAI");
static_assert(sizeof(Service_Zombie_CheckDIstance_C_ReceiveTickAI) == 0x000018, "Wrong size on Service_Zombie_CheckDIstance_C_ReceiveTickAI");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'Service_Zombie_CheckDIstance_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'Service_Zombie_CheckDIstance_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'Service_Zombie_CheckDIstance_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

// Function Service_Zombie_CheckDIstance.Service_Zombie_CheckDIstance_C.SetupAllBooleans
// 0x0260 (0x0260 - 0x0000)
struct Service_Zombie_CheckDIstance_C_SetupAllBooleans final
{
public:
	bool                                          CallFunc_CheckDoorInFront_FoundDoor;               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBlackboardValueAsBool_ReturnValue;     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Last_Point_Is_Target_Actor_LastPointIsTargetActor; // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0098(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_183[0x1];                                      // 0x0183(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0200(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFarAttack_ReturnValue;                 // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x025A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCloseAttack_ReturnValue;               // 0x025B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Service_Zombie_CheckDIstance_C_SetupAllBooleans) == 0x000008, "Wrong alignment on Service_Zombie_CheckDIstance_C_SetupAllBooleans");
static_assert(sizeof(Service_Zombie_CheckDIstance_C_SetupAllBooleans) == 0x000260, "Wrong size on Service_Zombie_CheckDIstance_C_SetupAllBooleans");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_SetupAllBooleans, CallFunc_CheckDoorInFront_FoundDoor) == 0x000000, "Member 'Service_Zombie_CheckDIstance_C_SetupAllBooleans::CallFunc_CheckDoorInFront_FoundDoor' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_SetupAllBooleans, CallFunc_GetBlackboardValueAsBool_ReturnValue) == 0x000001, "Member 'Service_Zombie_CheckDIstance_C_SetupAllBooleans::CallFunc_GetBlackboardValueAsBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_SetupAllBooleans, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000008, "Member 'Service_Zombie_CheckDIstance_C_SetupAllBooleans::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_SetupAllBooleans, K2Node_MakeArray_Array) == 0x000020, "Member 'Service_Zombie_CheckDIstance_C_SetupAllBooleans::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_SetupAllBooleans, CallFunc_GetActorForwardVector_ReturnValue) == 0x000030, "Member 'Service_Zombie_CheckDIstance_C_SetupAllBooleans::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_SetupAllBooleans, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000048, "Member 'Service_Zombie_CheckDIstance_C_SetupAllBooleans::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_SetupAllBooleans, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000060, "Member 'Service_Zombie_CheckDIstance_C_SetupAllBooleans::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_SetupAllBooleans, CallFunc_Add_VectorVector_ReturnValue) == 0x000078, "Member 'Service_Zombie_CheckDIstance_C_SetupAllBooleans::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_SetupAllBooleans, CallFunc_Get_Last_Point_Is_Target_Actor_LastPointIsTargetActor) == 0x000090, "Member 'Service_Zombie_CheckDIstance_C_SetupAllBooleans::CallFunc_Get_Last_Point_Is_Target_Actor_LastPointIsTargetActor' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_SetupAllBooleans, CallFunc_LineTraceSingle_OutHit) == 0x000098, "Member 'Service_Zombie_CheckDIstance_C_SetupAllBooleans::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_SetupAllBooleans, CallFunc_LineTraceSingle_ReturnValue) == 0x000180, "Member 'Service_Zombie_CheckDIstance_C_SetupAllBooleans::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_SetupAllBooleans, CallFunc_BreakHitResult_bBlockingHit) == 0x000181, "Member 'Service_Zombie_CheckDIstance_C_SetupAllBooleans::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_SetupAllBooleans, CallFunc_BreakHitResult_bInitialOverlap) == 0x000182, "Member 'Service_Zombie_CheckDIstance_C_SetupAllBooleans::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_SetupAllBooleans, CallFunc_BreakHitResult_Time) == 0x000184, "Member 'Service_Zombie_CheckDIstance_C_SetupAllBooleans::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_SetupAllBooleans, CallFunc_BreakHitResult_Distance) == 0x000188, "Member 'Service_Zombie_CheckDIstance_C_SetupAllBooleans::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_SetupAllBooleans, CallFunc_BreakHitResult_Location) == 0x000190, "Member 'Service_Zombie_CheckDIstance_C_SetupAllBooleans::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_SetupAllBooleans, CallFunc_BreakHitResult_ImpactPoint) == 0x0001A8, "Member 'Service_Zombie_CheckDIstance_C_SetupAllBooleans::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_SetupAllBooleans, CallFunc_BreakHitResult_Normal) == 0x0001C0, "Member 'Service_Zombie_CheckDIstance_C_SetupAllBooleans::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_SetupAllBooleans, CallFunc_BreakHitResult_ImpactNormal) == 0x0001D8, "Member 'Service_Zombie_CheckDIstance_C_SetupAllBooleans::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_SetupAllBooleans, CallFunc_BreakHitResult_PhysMat) == 0x0001F0, "Member 'Service_Zombie_CheckDIstance_C_SetupAllBooleans::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_SetupAllBooleans, CallFunc_BreakHitResult_HitActor) == 0x0001F8, "Member 'Service_Zombie_CheckDIstance_C_SetupAllBooleans::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_SetupAllBooleans, CallFunc_BreakHitResult_HitComponent) == 0x000200, "Member 'Service_Zombie_CheckDIstance_C_SetupAllBooleans::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_SetupAllBooleans, CallFunc_BreakHitResult_HitBoneName) == 0x000208, "Member 'Service_Zombie_CheckDIstance_C_SetupAllBooleans::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_SetupAllBooleans, CallFunc_BreakHitResult_BoneName) == 0x000210, "Member 'Service_Zombie_CheckDIstance_C_SetupAllBooleans::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_SetupAllBooleans, CallFunc_BreakHitResult_HitItem) == 0x000218, "Member 'Service_Zombie_CheckDIstance_C_SetupAllBooleans::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_SetupAllBooleans, CallFunc_BreakHitResult_ElementIndex) == 0x00021C, "Member 'Service_Zombie_CheckDIstance_C_SetupAllBooleans::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_SetupAllBooleans, CallFunc_BreakHitResult_FaceIndex) == 0x000220, "Member 'Service_Zombie_CheckDIstance_C_SetupAllBooleans::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_SetupAllBooleans, CallFunc_BreakHitResult_TraceStart) == 0x000228, "Member 'Service_Zombie_CheckDIstance_C_SetupAllBooleans::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_SetupAllBooleans, CallFunc_BreakHitResult_TraceEnd) == 0x000240, "Member 'Service_Zombie_CheckDIstance_C_SetupAllBooleans::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_SetupAllBooleans, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000258, "Member 'Service_Zombie_CheckDIstance_C_SetupAllBooleans::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_SetupAllBooleans, CallFunc_GetFarAttack_ReturnValue) == 0x000259, "Member 'Service_Zombie_CheckDIstance_C_SetupAllBooleans::CallFunc_GetFarAttack_ReturnValue' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_SetupAllBooleans, CallFunc_BooleanOR_ReturnValue) == 0x00025A, "Member 'Service_Zombie_CheckDIstance_C_SetupAllBooleans::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Service_Zombie_CheckDIstance_C_SetupAllBooleans, CallFunc_GetCloseAttack_ReturnValue) == 0x00025B, "Member 'Service_Zombie_CheckDIstance_C_SetupAllBooleans::CallFunc_GetCloseAttack_ReturnValue' has a wrong offset!");

}

