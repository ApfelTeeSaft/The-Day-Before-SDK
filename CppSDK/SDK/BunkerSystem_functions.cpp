#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BunkerSystem

#include "Basic.hpp"

#include "BunkerSystem_classes.hpp"
#include "BunkerSystem_parameters.hpp"


namespace SDK
{

// Function BunkerSystem.BunkerSystem_C.DoMagic
// (Public, BlueprintCallable, BlueprintEvent)

void UBunkerSystem_C::DoMagic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BunkerSystem_C", "DoMagic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BunkerSystem.BunkerSystem_C.GetBunkerGeneratorEnabledLight
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           BunkerID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// double                                  Light                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBunkerSystem_C::GetBunkerGeneratorEnabledLight(const class FString& BunkerID, double* Light)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BunkerSystem_C", "GetBunkerGeneratorEnabledLight");

	Params::BunkerSystem_C_GetBunkerGeneratorEnabledLight Parms{};

	Parms.BunkerID = std::move(BunkerID);

	UObject::ProcessEvent(Func, &Parms);

	if (Light != nullptr)
		*Light = Parms.Light;
}


// Function BunkerSystem.BunkerSystem_C.GetBunkerLevelNameByElevator
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABunkerElevatorSender_C*          Elevator                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString                           LevelName                                              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UBunkerSystem_C::GetBunkerLevelNameByElevator(class ABunkerElevatorSender_C* Elevator, class FString* LevelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BunkerSystem_C", "GetBunkerLevelNameByElevator");

	Params::BunkerSystem_C_GetBunkerLevelNameByElevator Parms{};

	Parms.Elevator = Elevator;

	UObject::ProcessEvent(Func, &Parms);

	if (LevelName != nullptr)
		*LevelName = std::move(Parms.LevelName);
}


// Function BunkerSystem.BunkerSystem_C.GetBunkerLevelNameByID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           LevelName                                              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UBunkerSystem_C::GetBunkerLevelNameByID(const class FString& ID, class FString* LevelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BunkerSystem_C", "GetBunkerLevelNameByID");

	Params::BunkerSystem_C_GetBunkerLevelNameByID Parms{};

	Parms.ID = std::move(ID);

	UObject::ProcessEvent(Func, &Parms);

	if (LevelName != nullptr)
		*LevelName = std::move(Parms.LevelName);
}


// Function BunkerSystem.BunkerSystem_C.GetBunkerSkyLight
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           BunkerID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// double                                  Light                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBunkerSystem_C::GetBunkerSkyLight(const class FString& BunkerID, double* Light)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BunkerSystem_C", "GetBunkerSkyLight");

	Params::BunkerSystem_C_GetBunkerSkyLight Parms{};

	Parms.BunkerID = std::move(BunkerID);

	UObject::ProcessEvent(Func, &Parms);

	if (Light != nullptr)
		*Light = Parms.Light;
}


// Function BunkerSystem.BunkerSystem_C.HasBunker
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           BunkerID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Param_HasBunker                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBunkerSystem_C::HasBunker(const class FString& BunkerID, bool* Param_HasBunker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BunkerSystem_C", "HasBunker");

	Params::BunkerSystem_C_HasBunker Parms{};

	Parms.BunkerID = std::move(BunkerID);

	UObject::ProcessEvent(Func, &Parms);

	if (Param_HasBunker != nullptr)
		*Param_HasBunker = Parms.Param_HasBunker;
}


// Function BunkerSystem.BunkerSystem_C.HasBunkerGeneratorEnabledLight
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           BunkerID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Has                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBunkerSystem_C::HasBunkerGeneratorEnabledLight(const class FString& BunkerID, bool* Has)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BunkerSystem_C", "HasBunkerGeneratorEnabledLight");

	Params::BunkerSystem_C_HasBunkerGeneratorEnabledLight Parms{};

	Parms.BunkerID = std::move(BunkerID);

	UObject::ProcessEvent(Func, &Parms);

	if (Has != nullptr)
		*Has = Parms.Has;
}


// Function BunkerSystem.BunkerSystem_C.HasBunkerSkyLight
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           BunkerID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Has                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBunkerSystem_C::HasBunkerSkyLight(const class FString& BunkerID, bool* Has)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BunkerSystem_C", "HasBunkerSkyLight");

	Params::BunkerSystem_C_HasBunkerSkyLight Parms{};

	Parms.BunkerID = std::move(BunkerID);

	UObject::ProcessEvent(Func, &Parms);

	if (Has != nullptr)
		*Has = Parms.Has;
}


// Function BunkerSystem.BunkerSystem_C.Initialize
// (Public, BlueprintCallable, BlueprintEvent)

void UBunkerSystem_C::Initialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BunkerSystem_C", "Initialize");

	UObject::ProcessEvent(Func, nullptr);
}

}

