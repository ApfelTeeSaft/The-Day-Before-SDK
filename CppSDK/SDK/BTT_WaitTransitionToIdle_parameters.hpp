#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_WaitTransitionToIdle

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BTT_WaitTransitionToIdle.BTT_WaitTransitionToIdle_C.ExecuteUbergraph_BTT_WaitTransitionToIdle
// 0x0078 (0x0078 - 0x0000)
struct BTT_WaitTransitionToIdle_C_ExecuteUbergraph_BTT_WaitTransitionToIdle final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_1;                    // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_1;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AZombie_C*                              K2Node_DynamicCast_AsZombie;                       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0024(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          K2Node_Select_Default;                             // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayLength_ReturnValue;                // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0060(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_WaitTransitionToIdle_C_ExecuteUbergraph_BTT_WaitTransitionToIdle) == 0x000008, "Wrong alignment on BTT_WaitTransitionToIdle_C_ExecuteUbergraph_BTT_WaitTransitionToIdle");
static_assert(sizeof(BTT_WaitTransitionToIdle_C_ExecuteUbergraph_BTT_WaitTransitionToIdle) == 0x000078, "Wrong size on BTT_WaitTransitionToIdle_C_ExecuteUbergraph_BTT_WaitTransitionToIdle");
static_assert(offsetof(BTT_WaitTransitionToIdle_C_ExecuteUbergraph_BTT_WaitTransitionToIdle, EntryPoint) == 0x000000, "Member 'BTT_WaitTransitionToIdle_C_ExecuteUbergraph_BTT_WaitTransitionToIdle::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTT_WaitTransitionToIdle_C_ExecuteUbergraph_BTT_WaitTransitionToIdle, Temp_bool_Variable) == 0x000004, "Member 'BTT_WaitTransitionToIdle_C_ExecuteUbergraph_BTT_WaitTransitionToIdle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BTT_WaitTransitionToIdle_C_ExecuteUbergraph_BTT_WaitTransitionToIdle, K2Node_Event_OwnerController_1) == 0x000008, "Member 'BTT_WaitTransitionToIdle_C_ExecuteUbergraph_BTT_WaitTransitionToIdle::K2Node_Event_OwnerController_1' has a wrong offset!");
static_assert(offsetof(BTT_WaitTransitionToIdle_C_ExecuteUbergraph_BTT_WaitTransitionToIdle, K2Node_Event_ControlledPawn_1) == 0x000010, "Member 'BTT_WaitTransitionToIdle_C_ExecuteUbergraph_BTT_WaitTransitionToIdle::K2Node_Event_ControlledPawn_1' has a wrong offset!");
static_assert(offsetof(BTT_WaitTransitionToIdle_C_ExecuteUbergraph_BTT_WaitTransitionToIdle, K2Node_DynamicCast_AsZombie) == 0x000018, "Member 'BTT_WaitTransitionToIdle_C_ExecuteUbergraph_BTT_WaitTransitionToIdle::K2Node_DynamicCast_AsZombie' has a wrong offset!");
static_assert(offsetof(BTT_WaitTransitionToIdle_C_ExecuteUbergraph_BTT_WaitTransitionToIdle, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BTT_WaitTransitionToIdle_C_ExecuteUbergraph_BTT_WaitTransitionToIdle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTT_WaitTransitionToIdle_C_ExecuteUbergraph_BTT_WaitTransitionToIdle, K2Node_CreateDelegate_OutputDelegate) == 0x000024, "Member 'BTT_WaitTransitionToIdle_C_ExecuteUbergraph_BTT_WaitTransitionToIdle::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BTT_WaitTransitionToIdle_C_ExecuteUbergraph_BTT_WaitTransitionToIdle, K2Node_Event_OwnerController) == 0x000038, "Member 'BTT_WaitTransitionToIdle_C_ExecuteUbergraph_BTT_WaitTransitionToIdle::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_WaitTransitionToIdle_C_ExecuteUbergraph_BTT_WaitTransitionToIdle, K2Node_Event_ControlledPawn) == 0x000040, "Member 'BTT_WaitTransitionToIdle_C_ExecuteUbergraph_BTT_WaitTransitionToIdle::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_WaitTransitionToIdle_C_ExecuteUbergraph_BTT_WaitTransitionToIdle, K2Node_Select_Default) == 0x000048, "Member 'BTT_WaitTransitionToIdle_C_ExecuteUbergraph_BTT_WaitTransitionToIdle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BTT_WaitTransitionToIdle_C_ExecuteUbergraph_BTT_WaitTransitionToIdle, CallFunc_GetPlayLength_ReturnValue) == 0x000050, "Member 'BTT_WaitTransitionToIdle_C_ExecuteUbergraph_BTT_WaitTransitionToIdle::CallFunc_GetPlayLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_WaitTransitionToIdle_C_ExecuteUbergraph_BTT_WaitTransitionToIdle, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000058, "Member 'BTT_WaitTransitionToIdle_C_ExecuteUbergraph_BTT_WaitTransitionToIdle::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_WaitTransitionToIdle_C_ExecuteUbergraph_BTT_WaitTransitionToIdle, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000060, "Member 'BTT_WaitTransitionToIdle_C_ExecuteUbergraph_BTT_WaitTransitionToIdle::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_WaitTransitionToIdle_C_ExecuteUbergraph_BTT_WaitTransitionToIdle, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000068, "Member 'BTT_WaitTransitionToIdle_C_ExecuteUbergraph_BTT_WaitTransitionToIdle::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTT_WaitTransitionToIdle_C_ExecuteUbergraph_BTT_WaitTransitionToIdle, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000070, "Member 'BTT_WaitTransitionToIdle_C_ExecuteUbergraph_BTT_WaitTransitionToIdle::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function BTT_WaitTransitionToIdle.BTT_WaitTransitionToIdle_C.ReceiveAbortAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_WaitTransitionToIdle_C_ReceiveAbortAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_WaitTransitionToIdle_C_ReceiveAbortAI) == 0x000008, "Wrong alignment on BTT_WaitTransitionToIdle_C_ReceiveAbortAI");
static_assert(sizeof(BTT_WaitTransitionToIdle_C_ReceiveAbortAI) == 0x000010, "Wrong size on BTT_WaitTransitionToIdle_C_ReceiveAbortAI");
static_assert(offsetof(BTT_WaitTransitionToIdle_C_ReceiveAbortAI, OwnerController) == 0x000000, "Member 'BTT_WaitTransitionToIdle_C_ReceiveAbortAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_WaitTransitionToIdle_C_ReceiveAbortAI, ControlledPawn) == 0x000008, "Member 'BTT_WaitTransitionToIdle_C_ReceiveAbortAI::ControlledPawn' has a wrong offset!");

// Function BTT_WaitTransitionToIdle.BTT_WaitTransitionToIdle_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_WaitTransitionToIdle_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_WaitTransitionToIdle_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTT_WaitTransitionToIdle_C_ReceiveExecuteAI");
static_assert(sizeof(BTT_WaitTransitionToIdle_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTT_WaitTransitionToIdle_C_ReceiveExecuteAI");
static_assert(offsetof(BTT_WaitTransitionToIdle_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTT_WaitTransitionToIdle_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_WaitTransitionToIdle_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTT_WaitTransitionToIdle_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

}

