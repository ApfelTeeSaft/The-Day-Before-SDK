#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_BaseSlot

#include "Basic.hpp"

#include "ContainerPickupsInfo_structs.hpp"
#include "E_SlotStatus_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "FItemInfo_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "E_ItemColorTypes_structs.hpp"
#include "FMODStudio_structs.hpp"


namespace SDK::Params
{

// Function W_BaseSlot.W_BaseSlot_C.AddCount
// 0x0238 (0x0238 - 0x0000)
struct W_BaseSlot_C_AddCount final
{
public:
	int32                                         Param_AddCount;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewCount;                                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCount_MaxStack;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCount_Count;                           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo; // 0x0010(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseSlot_C_AddCount) == 0x000008, "Wrong alignment on W_BaseSlot_C_AddCount");
static_assert(sizeof(W_BaseSlot_C_AddCount) == 0x000238, "Wrong size on W_BaseSlot_C_AddCount");
static_assert(offsetof(W_BaseSlot_C_AddCount, Param_AddCount) == 0x000000, "Member 'W_BaseSlot_C_AddCount::Param_AddCount' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_AddCount, NewCount) == 0x000004, "Member 'W_BaseSlot_C_AddCount::NewCount' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_AddCount, CallFunc_GetCount_MaxStack) == 0x000008, "Member 'W_BaseSlot_C_AddCount::CallFunc_GetCount_MaxStack' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_AddCount, CallFunc_GetCount_Count) == 0x00000C, "Member 'W_BaseSlot_C_AddCount::CallFunc_GetCount_Count' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_AddCount, CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo) == 0x000010, "Member 'W_BaseSlot_C_AddCount::CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_AddCount, CallFunc_Add_IntInt_ReturnValue) == 0x000230, "Member 'W_BaseSlot_C_AddCount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_AddCount, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000234, "Member 'W_BaseSlot_C_AddCount::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function W_BaseSlot.W_BaseSlot_C.AddItem
// 0x0068 (0x0068 - 0x0000)
struct W_BaseSlot_C_AddItem final
{
public:
	struct FContainerPickupsInfo                  Param_PickupInfo;                                  // 0x0000(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseSlot_C_AddItem) == 0x000008, "Wrong alignment on W_BaseSlot_C_AddItem");
static_assert(sizeof(W_BaseSlot_C_AddItem) == 0x000068, "Wrong size on W_BaseSlot_C_AddItem");
static_assert(offsetof(W_BaseSlot_C_AddItem, Param_PickupInfo) == 0x000000, "Member 'W_BaseSlot_C_AddItem::Param_PickupInfo' has a wrong offset!");

// Function W_BaseSlot.W_BaseSlot_C.Canstack
// 0x0001 (0x0001 - 0x0000)
struct W_BaseSlot_C_Canstack final
{
public:
	bool                                          Param_Canstack;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseSlot_C_Canstack) == 0x000001, "Wrong alignment on W_BaseSlot_C_Canstack");
static_assert(sizeof(W_BaseSlot_C_Canstack) == 0x000001, "Wrong size on W_BaseSlot_C_Canstack");
static_assert(offsetof(W_BaseSlot_C_Canstack, Param_Canstack) == 0x000000, "Member 'W_BaseSlot_C_Canstack::Param_Canstack' has a wrong offset!");

// Function W_BaseSlot.W_BaseSlot_C.Change Sell Status
// 0x0004 (0x0004 - 0x0000)
struct W_BaseSlot_C_Change_Sell_Status final
{
public:
	E_SlotStatus                                  Param_Status;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemPriceless_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseSlot_C_Change_Sell_Status) == 0x000001, "Wrong alignment on W_BaseSlot_C_Change_Sell_Status");
static_assert(sizeof(W_BaseSlot_C_Change_Sell_Status) == 0x000004, "Wrong size on W_BaseSlot_C_Change_Sell_Status");
static_assert(offsetof(W_BaseSlot_C_Change_Sell_Status, Param_Status) == 0x000000, "Member 'W_BaseSlot_C_Change_Sell_Status::Param_Status' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Change_Sell_Status, CallFunc_IsItemPriceless_ReturnValue) == 0x000001, "Member 'W_BaseSlot_C_Change_Sell_Status::CallFunc_IsItemPriceless_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Change_Sell_Status, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'W_BaseSlot_C_Change_Sell_Status::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Change_Sell_Status, CallFunc_IsValid_ReturnValue) == 0x000003, "Member 'W_BaseSlot_C_Change_Sell_Status::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function W_BaseSlot.W_BaseSlot_C.ChangeCount
// 0x02A8 (0x02A8 - 0x0000)
struct W_BaseSlot_C_ChangeCount final
{
public:
	int32                                         NewCount;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0010(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ReferenceParm)
	struct FFItemInfo                             CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo; // 0x0070(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0290(0x0018)()
};
static_assert(alignof(W_BaseSlot_C_ChangeCount) == 0x000008, "Wrong alignment on W_BaseSlot_C_ChangeCount");
static_assert(sizeof(W_BaseSlot_C_ChangeCount) == 0x0002A8, "Wrong size on W_BaseSlot_C_ChangeCount");
static_assert(offsetof(W_BaseSlot_C_ChangeCount, NewCount) == 0x000000, "Member 'W_BaseSlot_C_ChangeCount::NewCount' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ChangeCount, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000008, "Member 'W_BaseSlot_C_ChangeCount::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ChangeCount, K2Node_MakeStruct_FormatArgumentData) == 0x000010, "Member 'W_BaseSlot_C_ChangeCount::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ChangeCount, K2Node_MakeArray_Array) == 0x000060, "Member 'W_BaseSlot_C_ChangeCount::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ChangeCount, CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo) == 0x000070, "Member 'W_BaseSlot_C_ChangeCount::CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ChangeCount, CallFunc_Format_ReturnValue) == 0x000290, "Member 'W_BaseSlot_C_ChangeCount::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function W_BaseSlot.W_BaseSlot_C.ChangeStatus
// 0x0004 (0x0004 - 0x0000)
struct W_BaseSlot_C_ChangeStatus final
{
public:
	E_SlotStatus                                  Param_Status;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemPriceless_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseSlot_C_ChangeStatus) == 0x000001, "Wrong alignment on W_BaseSlot_C_ChangeStatus");
static_assert(sizeof(W_BaseSlot_C_ChangeStatus) == 0x000004, "Wrong size on W_BaseSlot_C_ChangeStatus");
static_assert(offsetof(W_BaseSlot_C_ChangeStatus, Param_Status) == 0x000000, "Member 'W_BaseSlot_C_ChangeStatus::Param_Status' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ChangeStatus, CallFunc_IsItemPriceless_ReturnValue) == 0x000001, "Member 'W_BaseSlot_C_ChangeStatus::CallFunc_IsItemPriceless_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ChangeStatus, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'W_BaseSlot_C_ChangeStatus::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ChangeStatus, CallFunc_IsValid_ReturnValue) == 0x000003, "Member 'W_BaseSlot_C_ChangeStatus::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function W_BaseSlot.W_BaseSlot_C.ExecuteUbergraph_W_BaseSlot
// 0x13C0 (0x13C0 - 0x0000)
struct W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo; // 0x0018(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0238(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0250(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0260(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0280(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0298(0x0018)()
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_3;           // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_2;             // 0x02B8(0x0018)()
	struct FContainerPickupsInfo                  K2Node_MakeStruct_ContainerPickupsInfo;            // 0x02D0(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FPointerEvent                          K2Node_Event_PointerEvent_2;                       // 0x0338(0x0078)(ConstParm)
	class UDragDropOperation*                     K2Node_Event_Operation_2;                          // 0x03B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry_1;                         // 0x03B8(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_PointerEvent_1;                       // 0x03F0(0x0078)()
	class UDragDropOperation*                     K2Node_Event_Operation_1;                          // 0x0468(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPointerEvent                          K2Node_Event_PointerEvent;                         // 0x0470(0x0078)()
	class UDragDropOperation*                     K2Node_Event_Operation;                            // 0x04E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_BaseDragOperation_C*                K2Node_DynamicCast_AsBP_Base_Drag_Operation;       // 0x04F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x04F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F9[0x3];                                      // 0x04F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x04FC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50C[0x4];                                      // 0x050C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo_1; // 0x0510(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0730(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_731[0x3];                                      // 0x0731(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0734(0x0038)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_76C[0x4];                                      // 0x076C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0770(0x0078)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x07E8(0x0078)(ConstParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0860(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0861(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_862[0x2];                                      // 0x0862(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x0864(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0874(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0875(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_876[0x2];                                      // 0x0876(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_6;                            // 0x0878(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0888(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_889[0x7];                                      // 0x0889(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_GetSlotBrushes_Hover2_Brush;              // 0x0890(0x00D0)()
	struct FSlateBrush                            CallFunc_GetSlotBrushes_Hover_Brush;               // 0x0960(0x00D0)()
	struct FSlateBrush                            CallFunc_GetSlotBrushes_BG_Brush;                  // 0x0A30(0x00D0)()
	struct FSlateBrush                            CallFunc_GetSlotBrushes_Gradient_Brush;            // 0x0B00(0x00D0)()
	struct FSlateBrush                            CallFunc_GetSlotBrushes_Highlight_Brush;           // 0x0BD0(0x00D0)()
	struct FSlateBrush                            CallFunc_GetSlotBrushes_Item_Brush;                // 0x0CA0(0x00D0)()
	struct FContainerPickupsInfo                  K2Node_CustomEvent_PickupInfo;                     // 0x0D70(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_7;                            // 0x0DD8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             K2Node_MakeStruct_FItemInfo;                       // 0x0DE8(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	class UDragDropOperation*                     K2Node_CustomEvent_DragDropOperation;              // 0x1008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_BaseDragOperation_C*                K2Node_DynamicCast_AsBP_Base_Drag_Operation_1;     // 0x1010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x1018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1019[0x7];                                     // 0x1019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo_2; // 0x1020(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	E_ItemColorTypes                              Temp_byte_Variable;                                // 0x1240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1241[0x7];                                     // 0x1241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x1248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x1250(0x0050)(HasGetValueTypeHash)
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue;                  // 0x12A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x12A8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x12B8(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x12D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12D1[0x3];                                     // 0x12D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_8;                            // 0x12D4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x12E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_4;           // 0x12E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x12F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12F1[0x3];                                     // 0x12F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x12F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x12F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x12F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12FA[0x6];                                     // 0x12FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x1300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x1308(0x0018)()
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x1320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_1;          // 0x1328(0x0018)()
	struct FLinearColor                           Temp_struct_Variable_9;                            // 0x1340(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x1350(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x1360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_2;          // 0x1368(0x0018)()
	float                                         CallFunc_GetRenderOpacity_ReturnValue;             // 0x1380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRenderOpacity_ReturnValue_1;           // 0x1384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x1388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x1389(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x138A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_138B[0x5];                                     // 0x138B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x1390(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x1398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1399[0x7];                                     // 0x1399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x13A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x13A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_1;    // 0x13B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot) == 0x000010, "Wrong alignment on W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot");
static_assert(sizeof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot) == 0x0013C0, "Wrong size on W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, EntryPoint) == 0x000000, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, Temp_struct_Variable) == 0x000004, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo) == 0x000018, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, Temp_struct_Variable_1) == 0x000238, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000248, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, Temp_struct_Variable_2) == 0x000250, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, Temp_struct_Variable_3) == 0x000260, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000270, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000278, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, CallFunc_Conv_IntToText_ReturnValue) == 0x000280, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000298, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, CallFunc_Conv_IntToDouble_ReturnValue_3) == 0x0002B0, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::CallFunc_Conv_IntToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, CallFunc_Conv_IntToText_ReturnValue_2) == 0x0002B8, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::CallFunc_Conv_IntToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, K2Node_MakeStruct_ContainerPickupsInfo) == 0x0002D0, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::K2Node_MakeStruct_ContainerPickupsInfo' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, K2Node_Event_PointerEvent_2) == 0x000338, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::K2Node_Event_PointerEvent_2' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, K2Node_Event_Operation_2) == 0x0003B0, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::K2Node_Event_Operation_2' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, K2Node_Event_MyGeometry_1) == 0x0003B8, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::K2Node_Event_MyGeometry_1' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, K2Node_Event_PointerEvent_1) == 0x0003F0, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::K2Node_Event_PointerEvent_1' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, K2Node_Event_Operation_1) == 0x000468, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::K2Node_Event_Operation_1' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, K2Node_Event_PointerEvent) == 0x000470, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::K2Node_Event_PointerEvent' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, K2Node_Event_Operation) == 0x0004E8, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::K2Node_Event_Operation' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, K2Node_DynamicCast_AsBP_Base_Drag_Operation) == 0x0004F0, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::K2Node_DynamicCast_AsBP_Base_Drag_Operation' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, K2Node_DynamicCast_bSuccess) == 0x0004F8, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, Temp_struct_Variable_4) == 0x0004FC, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo_1) == 0x000510, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo_1' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, CallFunc_IsValid_ReturnValue) == 0x000730, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, K2Node_Event_MyGeometry) == 0x000734, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, K2Node_Event_MouseEvent_1) == 0x000770, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, K2Node_Event_MouseEvent) == 0x0007E8, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, K2Node_SwitchEnum_CmpSuccess) == 0x000860, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, K2Node_Event_IsDesignTime) == 0x000861, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, Temp_struct_Variable_5) == 0x000864, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000874, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, CallFunc_IsValid_ReturnValue_1) == 0x000875, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, Temp_struct_Variable_6) == 0x000878, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000888, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, CallFunc_GetSlotBrushes_Hover2_Brush) == 0x000890, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::CallFunc_GetSlotBrushes_Hover2_Brush' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, CallFunc_GetSlotBrushes_Hover_Brush) == 0x000960, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::CallFunc_GetSlotBrushes_Hover_Brush' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, CallFunc_GetSlotBrushes_BG_Brush) == 0x000A30, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::CallFunc_GetSlotBrushes_BG_Brush' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, CallFunc_GetSlotBrushes_Gradient_Brush) == 0x000B00, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::CallFunc_GetSlotBrushes_Gradient_Brush' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, CallFunc_GetSlotBrushes_Highlight_Brush) == 0x000BD0, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::CallFunc_GetSlotBrushes_Highlight_Brush' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, CallFunc_GetSlotBrushes_Item_Brush) == 0x000CA0, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::CallFunc_GetSlotBrushes_Item_Brush' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, K2Node_CustomEvent_PickupInfo) == 0x000D70, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::K2Node_CustomEvent_PickupInfo' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, Temp_struct_Variable_7) == 0x000DD8, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, K2Node_MakeStruct_FItemInfo) == 0x000DE8, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::K2Node_MakeStruct_FItemInfo' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, K2Node_CustomEvent_DragDropOperation) == 0x001008, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::K2Node_CustomEvent_DragDropOperation' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, K2Node_DynamicCast_AsBP_Base_Drag_Operation_1) == 0x001010, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::K2Node_DynamicCast_AsBP_Base_Drag_Operation_1' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, K2Node_DynamicCast_bSuccess_1) == 0x001018, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo_2) == 0x001020, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo_2' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, Temp_byte_Variable) == 0x001240, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, CallFunc_Conv_IntToInt64_ReturnValue) == 0x001248, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, K2Node_MakeStruct_FormatArgumentData) == 0x001250, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, CallFunc_PlayEvent2D_ReturnValue) == 0x0012A0, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::CallFunc_PlayEvent2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, K2Node_MakeArray_Array) == 0x0012A8, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, CallFunc_Format_ReturnValue) == 0x0012B8, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, CallFunc_IsValid_ReturnValue_2) == 0x0012D0, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, Temp_struct_Variable_8) == 0x0012D4, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, CallFunc_Add_IntInt_ReturnValue) == 0x0012E4, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, CallFunc_Conv_IntToDouble_ReturnValue_4) == 0x0012E8, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::CallFunc_Conv_IntToDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0012F0, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, CallFunc_Subtract_IntInt_ReturnValue) == 0x0012F4, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0012F8, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, CallFunc_IsValid_ReturnValue_3) == 0x0012F9, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x001300, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, CallFunc_Conv_DoubleToText_ReturnValue) == 0x001308, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x001320, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, CallFunc_Conv_DoubleToText_ReturnValue_1) == 0x001328, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::CallFunc_Conv_DoubleToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, Temp_struct_Variable_9) == 0x001340, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, K2Node_Select_Default) == 0x001350, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x001360, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, CallFunc_Conv_DoubleToText_ReturnValue_2) == 0x001368, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::CallFunc_Conv_DoubleToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, CallFunc_GetRenderOpacity_ReturnValue) == 0x001380, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::CallFunc_GetRenderOpacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, CallFunc_GetRenderOpacity_ReturnValue_1) == 0x001384, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::CallFunc_GetRenderOpacity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x001388, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x001389, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, CallFunc_IsValid_ReturnValue_4) == 0x00138A, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, CallFunc_PlayAnimationForward_ReturnValue) == 0x001390, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x001398, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, CallFunc_PlayAnimationReverse_ReturnValue) == 0x0013A0, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0013A8, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot, CallFunc_Greater_DoubleDouble_A_ImplicitCast_1) == 0x0013B0, "Member 'W_BaseSlot_C_ExecuteUbergraph_W_BaseSlot::CallFunc_Greater_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

// Function W_BaseSlot.W_BaseSlot_C.Get Pivot Index
// 0x0148 (0x0148 - 0x0000)
struct W_BaseSlot_C_Get_Pivot_Index final
{
public:
	struct FVector2D                              Param_DragOffset;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumberOfCellsInRow;                                // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumberOfCellsInColumn;                             // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Y_Location;                                        // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        X_Location;                                        // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSlotSize_SlotSize;                     // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRotated__Result;                        // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeToRange_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeToRange_ReturnValue_1;           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_2;     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_3;     // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_4;     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_3;           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_5;     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_4;           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F2[0x6];                                       // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_6;     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_5;           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_2;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_7;     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue_3;                  // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x012B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_6;          // 0x012E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_7;          // 0x012F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_8;          // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_9;          // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0133(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_10;         // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_11;         // 0x0135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_12;         // 0x0136(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0137(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_13;         // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetItemSlotDimension_X;                   // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemSlotDimension_Y;                   // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseSlot_C_Get_Pivot_Index) == 0x000008, "Wrong alignment on W_BaseSlot_C_Get_Pivot_Index");
static_assert(sizeof(W_BaseSlot_C_Get_Pivot_Index) == 0x000148, "Wrong size on W_BaseSlot_C_Get_Pivot_Index");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, Param_DragOffset) == 0x000000, "Member 'W_BaseSlot_C_Get_Pivot_Index::Param_DragOffset' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, Param_Index) == 0x000010, "Member 'W_BaseSlot_C_Get_Pivot_Index::Param_Index' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, NumberOfCellsInRow) == 0x000014, "Member 'W_BaseSlot_C_Get_Pivot_Index::NumberOfCellsInRow' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, NumberOfCellsInColumn) == 0x000018, "Member 'W_BaseSlot_C_Get_Pivot_Index::NumberOfCellsInColumn' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, Y_Location) == 0x000020, "Member 'W_BaseSlot_C_Get_Pivot_Index::Y_Location' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, X_Location) == 0x000028, "Member 'W_BaseSlot_C_Get_Pivot_Index::X_Location' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_BreakVector2D_X) == 0x000030, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_BreakVector2D_Y) == 0x000038, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_GetSlotSize_SlotSize) == 0x000040, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_GetSlotSize_SlotSize' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_IsRotated__Result) == 0x000050, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_IsRotated__Result' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_BreakVector2D_X_1) == 0x000058, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_BreakVector2D_Y_1) == 0x000060, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_NormalizeToRange_ReturnValue) == 0x000068, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_NormalizeToRange_ReturnValue_1) == 0x000070, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_NormalizeToRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000078, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000080, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000088, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x000089, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000090, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000098, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_LessEqual_DoubleDouble_ReturnValue_2) == 0x0000A0, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_LessEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_LessEqual_DoubleDouble_ReturnValue_3) == 0x0000A1, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_LessEqual_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x0000A8, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000B0, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_LessEqual_DoubleDouble_ReturnValue_4) == 0x0000B8, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_LessEqual_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_Conv_IntToDouble_ReturnValue_3) == 0x0000C0, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_Conv_IntToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_SelectInt_ReturnValue) == 0x0000C8, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000D0, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_LessEqual_DoubleDouble_ReturnValue_5) == 0x0000D8, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_LessEqual_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_SelectInt_ReturnValue_1) == 0x0000DC, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_Conv_IntToDouble_ReturnValue_4) == 0x0000E0, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_Conv_IntToDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_Greater_IntInt_ReturnValue) == 0x0000E8, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_Add_IntInt_ReturnValue) == 0x0000EC, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000F0, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000F1, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0000F8, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_LessEqual_DoubleDouble_ReturnValue_6) == 0x000100, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_LessEqual_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_Conv_IntToDouble_ReturnValue_5) == 0x000108, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_Conv_IntToDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_SelectInt_ReturnValue_2) == 0x000110, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_SelectInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000118, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_LessEqual_DoubleDouble_ReturnValue_7) == 0x000120, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_LessEqual_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_SelectInt_ReturnValue_3) == 0x000124, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_SelectInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000128, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000129, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x00012A, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_BooleanAND_ReturnValue) == 0x00012B, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x00012C, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_BooleanAND_ReturnValue_1) == 0x00012D, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_EqualEqual_IntInt_ReturnValue_6) == 0x00012E, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_EqualEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_EqualEqual_IntInt_ReturnValue_7) == 0x00012F, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_EqualEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_EqualEqual_IntInt_ReturnValue_8) == 0x000130, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_EqualEqual_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_BooleanAND_ReturnValue_2) == 0x000131, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_EqualEqual_IntInt_ReturnValue_9) == 0x000132, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_EqualEqual_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_BooleanAND_ReturnValue_3) == 0x000133, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_EqualEqual_IntInt_ReturnValue_10) == 0x000134, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_EqualEqual_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_EqualEqual_IntInt_ReturnValue_11) == 0x000135, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_EqualEqual_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_EqualEqual_IntInt_ReturnValue_12) == 0x000136, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_EqualEqual_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_BooleanAND_ReturnValue_4) == 0x000137, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_EqualEqual_IntInt_ReturnValue_13) == 0x000138, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_EqualEqual_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_GetItemSlotDimension_X) == 0x00013C, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_GetItemSlotDimension_X' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_GetItemSlotDimension_Y) == 0x000140, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_GetItemSlotDimension_Y' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_Get_Pivot_Index, CallFunc_BooleanAND_ReturnValue_5) == 0x000144, "Member 'W_BaseSlot_C_Get_Pivot_Index::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");

// Function W_BaseSlot.W_BaseSlot_C.GetEquipmentMark
// 0x0003 (0x0003 - 0x0000)
struct W_BaseSlot_C_GetEquipmentMark final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseSlot_C_GetEquipmentMark) == 0x000001, "Wrong alignment on W_BaseSlot_C_GetEquipmentMark");
static_assert(sizeof(W_BaseSlot_C_GetEquipmentMark) == 0x000003, "Wrong size on W_BaseSlot_C_GetEquipmentMark");
static_assert(offsetof(W_BaseSlot_C_GetEquipmentMark, ReturnValue) == 0x000000, "Member 'W_BaseSlot_C_GetEquipmentMark::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetEquipmentMark, CallFunc_GetVisibility_ReturnValue) == 0x000001, "Member 'W_BaseSlot_C_GetEquipmentMark::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetEquipmentMark, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'W_BaseSlot_C_GetEquipmentMark::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function W_BaseSlot.W_BaseSlot_C.GetItemPrice
// 0x0008 (0x0008 - 0x0000)
struct W_BaseSlot_C_GetItemPrice final
{
public:
	double                                        Param_Price;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseSlot_C_GetItemPrice) == 0x000008, "Wrong alignment on W_BaseSlot_C_GetItemPrice");
static_assert(sizeof(W_BaseSlot_C_GetItemPrice) == 0x000008, "Wrong size on W_BaseSlot_C_GetItemPrice");
static_assert(offsetof(W_BaseSlot_C_GetItemPrice, Param_Price) == 0x000000, "Member 'W_BaseSlot_C_GetItemPrice::Param_Price' has a wrong offset!");

// Function W_BaseSlot.W_BaseSlot_C.OccupySlot
// 0x0004 (0x0004 - 0x0000)
struct W_BaseSlot_C_OccupySlot final
{
public:
	int32                                         Param_OccupantIndex;                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseSlot_C_OccupySlot) == 0x000004, "Wrong alignment on W_BaseSlot_C_OccupySlot");
static_assert(sizeof(W_BaseSlot_C_OccupySlot) == 0x000004, "Wrong size on W_BaseSlot_C_OccupySlot");
static_assert(offsetof(W_BaseSlot_C_OccupySlot, Param_OccupantIndex) == 0x000000, "Member 'W_BaseSlot_C_OccupySlot::Param_OccupantIndex' has a wrong offset!");

// Function W_BaseSlot.W_BaseSlot_C.OnDragCancelled
// 0x0080 (0x0080 - 0x0000)
struct W_BaseSlot_C_OnDragCancelled final
{
public:
	struct FPointerEvent                          PointerEvent;                                      // 0x0000(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UDragDropOperation*                     Operation;                                         // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseSlot_C_OnDragCancelled) == 0x000008, "Wrong alignment on W_BaseSlot_C_OnDragCancelled");
static_assert(sizeof(W_BaseSlot_C_OnDragCancelled) == 0x000080, "Wrong size on W_BaseSlot_C_OnDragCancelled");
static_assert(offsetof(W_BaseSlot_C_OnDragCancelled, PointerEvent) == 0x000000, "Member 'W_BaseSlot_C_OnDragCancelled::PointerEvent' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnDragCancelled, Operation) == 0x000078, "Member 'W_BaseSlot_C_OnDragCancelled::Operation' has a wrong offset!");

// Function W_BaseSlot.W_BaseSlot_C.OnDragDetected
// 0x05D0 (0x05D0 - 0x0000)
struct W_BaseSlot_C_OnDragDetected final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          PointerEvent;                                      // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UDragDropOperation*                     Operation;                                         // 0x00B0(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRotated__Result;                        // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCount_MaxStack;                        // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCount_Count;                           // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BaseDragOperation_C*                CallFunc_CreateDragDropOperation_ReturnValue;      // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Pivot_Index_Index;                    // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0xC];                                       // 0x00D4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_GetSlotBrushes_Hover2_Brush;              // 0x00E0(0x00D0)()
	struct FSlateBrush                            CallFunc_GetSlotBrushes_Hover_Brush;               // 0x01B0(0x00D0)()
	struct FSlateBrush                            CallFunc_GetSlotBrushes_BG_Brush;                  // 0x0280(0x00D0)()
	struct FSlateBrush                            CallFunc_GetSlotBrushes_Gradient_Brush;            // 0x0350(0x00D0)()
	struct FSlateBrush                            CallFunc_GetSlotBrushes_Highlight_Brush;           // 0x0420(0x00D0)()
	struct FSlateBrush                            CallFunc_GetSlotBrushes_Item_Brush;                // 0x04F0(0x00D0)()
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x05C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UW_BaseDragWidget_C*                    CallFunc_Create_ReturnValue;                       // 0x05C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseSlot_C_OnDragDetected) == 0x000010, "Wrong alignment on W_BaseSlot_C_OnDragDetected");
static_assert(sizeof(W_BaseSlot_C_OnDragDetected) == 0x0005D0, "Wrong size on W_BaseSlot_C_OnDragDetected");
static_assert(offsetof(W_BaseSlot_C_OnDragDetected, MyGeometry) == 0x000000, "Member 'W_BaseSlot_C_OnDragDetected::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnDragDetected, PointerEvent) == 0x000038, "Member 'W_BaseSlot_C_OnDragDetected::PointerEvent' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnDragDetected, Operation) == 0x0000B0, "Member 'W_BaseSlot_C_OnDragDetected::Operation' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnDragDetected, CallFunc_IsRotated__Result) == 0x0000B8, "Member 'W_BaseSlot_C_OnDragDetected::CallFunc_IsRotated__Result' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnDragDetected, CallFunc_GetCount_MaxStack) == 0x0000BC, "Member 'W_BaseSlot_C_OnDragDetected::CallFunc_GetCount_MaxStack' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnDragDetected, CallFunc_GetCount_Count) == 0x0000C0, "Member 'W_BaseSlot_C_OnDragDetected::CallFunc_GetCount_Count' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnDragDetected, CallFunc_IsValid_ReturnValue) == 0x0000C4, "Member 'W_BaseSlot_C_OnDragDetected::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnDragDetected, CallFunc_CreateDragDropOperation_ReturnValue) == 0x0000C8, "Member 'W_BaseSlot_C_OnDragDetected::CallFunc_CreateDragDropOperation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnDragDetected, CallFunc_Get_Pivot_Index_Index) == 0x0000D0, "Member 'W_BaseSlot_C_OnDragDetected::CallFunc_Get_Pivot_Index_Index' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnDragDetected, CallFunc_GetSlotBrushes_Hover2_Brush) == 0x0000E0, "Member 'W_BaseSlot_C_OnDragDetected::CallFunc_GetSlotBrushes_Hover2_Brush' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnDragDetected, CallFunc_GetSlotBrushes_Hover_Brush) == 0x0001B0, "Member 'W_BaseSlot_C_OnDragDetected::CallFunc_GetSlotBrushes_Hover_Brush' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnDragDetected, CallFunc_GetSlotBrushes_BG_Brush) == 0x000280, "Member 'W_BaseSlot_C_OnDragDetected::CallFunc_GetSlotBrushes_BG_Brush' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnDragDetected, CallFunc_GetSlotBrushes_Gradient_Brush) == 0x000350, "Member 'W_BaseSlot_C_OnDragDetected::CallFunc_GetSlotBrushes_Gradient_Brush' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnDragDetected, CallFunc_GetSlotBrushes_Highlight_Brush) == 0x000420, "Member 'W_BaseSlot_C_OnDragDetected::CallFunc_GetSlotBrushes_Highlight_Brush' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnDragDetected, CallFunc_GetSlotBrushes_Item_Brush) == 0x0004F0, "Member 'W_BaseSlot_C_OnDragDetected::CallFunc_GetSlotBrushes_Item_Brush' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnDragDetected, CallFunc_GetOwningPlayer_ReturnValue) == 0x0005C0, "Member 'W_BaseSlot_C_OnDragDetected::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnDragDetected, CallFunc_Create_ReturnValue) == 0x0005C8, "Member 'W_BaseSlot_C_OnDragDetected::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function W_BaseSlot.W_BaseSlot_C.OnDragEnter
// 0x00B8 (0x00B8 - 0x0000)
struct W_BaseSlot_C_OnDragEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          PointerEvent;                                      // 0x0038(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UDragDropOperation*                     Operation;                                         // 0x00B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseSlot_C_OnDragEnter) == 0x000008, "Wrong alignment on W_BaseSlot_C_OnDragEnter");
static_assert(sizeof(W_BaseSlot_C_OnDragEnter) == 0x0000B8, "Wrong size on W_BaseSlot_C_OnDragEnter");
static_assert(offsetof(W_BaseSlot_C_OnDragEnter, MyGeometry) == 0x000000, "Member 'W_BaseSlot_C_OnDragEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnDragEnter, PointerEvent) == 0x000038, "Member 'W_BaseSlot_C_OnDragEnter::PointerEvent' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnDragEnter, Operation) == 0x0000B0, "Member 'W_BaseSlot_C_OnDragEnter::Operation' has a wrong offset!");

// Function W_BaseSlot.W_BaseSlot_C.OnDragLeave
// 0x0080 (0x0080 - 0x0000)
struct W_BaseSlot_C_OnDragLeave final
{
public:
	struct FPointerEvent                          PointerEvent;                                      // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UDragDropOperation*                     Operation;                                         // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseSlot_C_OnDragLeave) == 0x000008, "Wrong alignment on W_BaseSlot_C_OnDragLeave");
static_assert(sizeof(W_BaseSlot_C_OnDragLeave) == 0x000080, "Wrong size on W_BaseSlot_C_OnDragLeave");
static_assert(offsetof(W_BaseSlot_C_OnDragLeave, PointerEvent) == 0x000000, "Member 'W_BaseSlot_C_OnDragLeave::PointerEvent' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnDragLeave, Operation) == 0x000078, "Member 'W_BaseSlot_C_OnDragLeave::Operation' has a wrong offset!");

// Function W_BaseSlot.W_BaseSlot_C.OnDrop
// 0x0100 (0x0100 - 0x0000)
struct W_BaseSlot_C_OnDrop final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          PointerEvent;                                      // 0x0038(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UDragDropOperation*                     Operation;                                         // 0x00B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x00B8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_BaseContainer_C*                     CachedSenderContainer;                             // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_BaseDragOperation_C*                K2Node_DynamicCast_AsBP_Base_Drag_Operation;       // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHostedItemRotate__Rotated;              // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D3[0x1];                                       // 0x00D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSizeOfHostedItem_X;                    // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSizeOfHostedItem_Y;                    // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Recipient_Slot_with_Offset_Result;    // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_BaseSlot_C*                          CallFunc_Get_Recipient_Slot_with_Offset_RecipientSlot; // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Can_Drop_On_Slot_Can;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Can_Stack_On_Slot_CanStack;               // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EA[0x6];                                       // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_BaseSlot_C*>                  CallFunc_Can_Stack_On_Slot_TargetSlotsArray;       // 0x00F0(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(W_BaseSlot_C_OnDrop) == 0x000008, "Wrong alignment on W_BaseSlot_C_OnDrop");
static_assert(sizeof(W_BaseSlot_C_OnDrop) == 0x000100, "Wrong size on W_BaseSlot_C_OnDrop");
static_assert(offsetof(W_BaseSlot_C_OnDrop, MyGeometry) == 0x000000, "Member 'W_BaseSlot_C_OnDrop::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnDrop, PointerEvent) == 0x000038, "Member 'W_BaseSlot_C_OnDrop::PointerEvent' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnDrop, Operation) == 0x0000B0, "Member 'W_BaseSlot_C_OnDrop::Operation' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnDrop, ReturnValue) == 0x0000B8, "Member 'W_BaseSlot_C_OnDrop::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnDrop, CachedSenderContainer) == 0x0000C0, "Member 'W_BaseSlot_C_OnDrop::CachedSenderContainer' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnDrop, K2Node_DynamicCast_AsBP_Base_Drag_Operation) == 0x0000C8, "Member 'W_BaseSlot_C_OnDrop::K2Node_DynamicCast_AsBP_Base_Drag_Operation' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnDrop, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'W_BaseSlot_C_OnDrop::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnDrop, CallFunc_IsValid_ReturnValue) == 0x0000D1, "Member 'W_BaseSlot_C_OnDrop::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnDrop, CallFunc_IsHostedItemRotate__Rotated) == 0x0000D2, "Member 'W_BaseSlot_C_OnDrop::CallFunc_IsHostedItemRotate__Rotated' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnDrop, CallFunc_GetSizeOfHostedItem_X) == 0x0000D4, "Member 'W_BaseSlot_C_OnDrop::CallFunc_GetSizeOfHostedItem_X' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnDrop, CallFunc_GetSizeOfHostedItem_Y) == 0x0000D8, "Member 'W_BaseSlot_C_OnDrop::CallFunc_GetSizeOfHostedItem_Y' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnDrop, CallFunc_Get_Recipient_Slot_with_Offset_Result) == 0x0000DC, "Member 'W_BaseSlot_C_OnDrop::CallFunc_Get_Recipient_Slot_with_Offset_Result' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnDrop, CallFunc_Get_Recipient_Slot_with_Offset_RecipientSlot) == 0x0000E0, "Member 'W_BaseSlot_C_OnDrop::CallFunc_Get_Recipient_Slot_with_Offset_RecipientSlot' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnDrop, CallFunc_Can_Drop_On_Slot_Can) == 0x0000E8, "Member 'W_BaseSlot_C_OnDrop::CallFunc_Can_Drop_On_Slot_Can' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnDrop, CallFunc_Can_Stack_On_Slot_CanStack) == 0x0000E9, "Member 'W_BaseSlot_C_OnDrop::CallFunc_Can_Stack_On_Slot_CanStack' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnDrop, CallFunc_Can_Stack_On_Slot_TargetSlotsArray) == 0x0000F0, "Member 'W_BaseSlot_C_OnDrop::CallFunc_Can_Stack_On_Slot_TargetSlotsArray' has a wrong offset!");

// Function W_BaseSlot.W_BaseSlot_C.OnMouseButtonDoubleClick
// 0x0228 (0x0228 - 0x0000)
struct W_BaseSlot_C_OnMouseButtonDoubleClick final
{
public:
	struct FGeometry                              InMyGeometry;                                      // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          InMouseEvent;                                      // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0168(0x00B8)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseSlot_C_OnMouseButtonDoubleClick) == 0x000008, "Wrong alignment on W_BaseSlot_C_OnMouseButtonDoubleClick");
static_assert(sizeof(W_BaseSlot_C_OnMouseButtonDoubleClick) == 0x000228, "Wrong size on W_BaseSlot_C_OnMouseButtonDoubleClick");
static_assert(offsetof(W_BaseSlot_C_OnMouseButtonDoubleClick, InMyGeometry) == 0x000000, "Member 'W_BaseSlot_C_OnMouseButtonDoubleClick::InMyGeometry' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnMouseButtonDoubleClick, InMouseEvent) == 0x000038, "Member 'W_BaseSlot_C_OnMouseButtonDoubleClick::InMouseEvent' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnMouseButtonDoubleClick, ReturnValue) == 0x0000B0, "Member 'W_BaseSlot_C_OnMouseButtonDoubleClick::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnMouseButtonDoubleClick, CallFunc_Unhandled_ReturnValue) == 0x000168, "Member 'W_BaseSlot_C_OnMouseButtonDoubleClick::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnMouseButtonDoubleClick, CallFunc_IsValid_ReturnValue) == 0x000220, "Member 'W_BaseSlot_C_OnMouseButtonDoubleClick::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function W_BaseSlot.W_BaseSlot_C.OnMouseButtonDown
// 0x0290 (0x0290 - 0x0000)
struct W_BaseSlot_C_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue; // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x016C(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue; // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_AbsoluteToLocal_ReturnValue;              // 0x01C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue_1; // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanDrag_can;                              // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D2[0x6];                                      // 0x01D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_DetectDragIfPressed_ReturnValue;          // 0x01D8(0x00B8)()
};
static_assert(alignof(W_BaseSlot_C_OnMouseButtonDown) == 0x000008, "Wrong alignment on W_BaseSlot_C_OnMouseButtonDown");
static_assert(sizeof(W_BaseSlot_C_OnMouseButtonDown) == 0x000290, "Wrong size on W_BaseSlot_C_OnMouseButtonDown");
static_assert(offsetof(W_BaseSlot_C_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'W_BaseSlot_C_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnMouseButtonDown, MouseEvent) == 0x000038, "Member 'W_BaseSlot_C_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnMouseButtonDown, ReturnValue) == 0x0000B0, "Member 'W_BaseSlot_C_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnMouseButtonDown, CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue) == 0x000168, "Member 'W_BaseSlot_C_OnMouseButtonDown::CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnMouseButtonDown, CallFunc_GetCachedGeometry_ReturnValue) == 0x00016C, "Member 'W_BaseSlot_C_OnMouseButtonDown::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnMouseButtonDown, CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue) == 0x0001A8, "Member 'W_BaseSlot_C_OnMouseButtonDown::CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnMouseButtonDown, CallFunc_IsValid_ReturnValue) == 0x0001B8, "Member 'W_BaseSlot_C_OnMouseButtonDown::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnMouseButtonDown, CallFunc_AbsoluteToLocal_ReturnValue) == 0x0001C0, "Member 'W_BaseSlot_C_OnMouseButtonDown::CallFunc_AbsoluteToLocal_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnMouseButtonDown, CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue_1) == 0x0001D0, "Member 'W_BaseSlot_C_OnMouseButtonDown::CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnMouseButtonDown, CallFunc_CanDrag_can) == 0x0001D1, "Member 'W_BaseSlot_C_OnMouseButtonDown::CallFunc_CanDrag_can' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnMouseButtonDown, CallFunc_DetectDragIfPressed_ReturnValue) == 0x0001D8, "Member 'W_BaseSlot_C_OnMouseButtonDown::CallFunc_DetectDragIfPressed_ReturnValue' has a wrong offset!");

// Function W_BaseSlot.W_BaseSlot_C.OnMouseEnter
// 0x00B0 (0x00B0 - 0x0000)
struct W_BaseSlot_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_BaseSlot_C_OnMouseEnter) == 0x000008, "Wrong alignment on W_BaseSlot_C_OnMouseEnter");
static_assert(sizeof(W_BaseSlot_C_OnMouseEnter) == 0x0000B0, "Wrong size on W_BaseSlot_C_OnMouseEnter");
static_assert(offsetof(W_BaseSlot_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'W_BaseSlot_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'W_BaseSlot_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function W_BaseSlot.W_BaseSlot_C.OnMouseLeave
// 0x0078 (0x0078 - 0x0000)
struct W_BaseSlot_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_BaseSlot_C_OnMouseLeave) == 0x000008, "Wrong alignment on W_BaseSlot_C_OnMouseLeave");
static_assert(sizeof(W_BaseSlot_C_OnMouseLeave) == 0x000078, "Wrong size on W_BaseSlot_C_OnMouseLeave");
static_assert(offsetof(W_BaseSlot_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'W_BaseSlot_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function W_BaseSlot.W_BaseSlot_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_BaseSlot_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseSlot_C_PreConstruct) == 0x000001, "Wrong alignment on W_BaseSlot_C_PreConstruct");
static_assert(sizeof(W_BaseSlot_C_PreConstruct) == 0x000001, "Wrong size on W_BaseSlot_C_PreConstruct");
static_assert(offsetof(W_BaseSlot_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_BaseSlot_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_BaseSlot.W_BaseSlot_C.SetCollisionEnabled
// 0x0005 (0x0005 - 0x0000)
struct W_BaseSlot_C_SetCollisionEnabled final
{
public:
	bool                                          In_Is_Enabled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseSlot_C_SetCollisionEnabled) == 0x000001, "Wrong alignment on W_BaseSlot_C_SetCollisionEnabled");
static_assert(sizeof(W_BaseSlot_C_SetCollisionEnabled) == 0x000005, "Wrong size on W_BaseSlot_C_SetCollisionEnabled");
static_assert(offsetof(W_BaseSlot_C_SetCollisionEnabled, In_Is_Enabled) == 0x000000, "Member 'W_BaseSlot_C_SetCollisionEnabled::In_Is_Enabled' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_SetCollisionEnabled, Temp_bool_Variable) == 0x000001, "Member 'W_BaseSlot_C_SetCollisionEnabled::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_SetCollisionEnabled, Temp_byte_Variable) == 0x000002, "Member 'W_BaseSlot_C_SetCollisionEnabled::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_SetCollisionEnabled, Temp_byte_Variable_1) == 0x000003, "Member 'W_BaseSlot_C_SetCollisionEnabled::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_SetCollisionEnabled, K2Node_Select_Default) == 0x000004, "Member 'W_BaseSlot_C_SetCollisionEnabled::K2Node_Select_Default' has a wrong offset!");

// Function W_BaseSlot.W_BaseSlot_C.SetDefaultSlotImages
// 0x0410 (0x0410 - 0x0000)
struct W_BaseSlot_C_SetDefaultSlotImages final
{
public:
	struct FSlateBrush                            CallFunc_GetDefaultSlotBrushes_BG_Brush;           // 0x0000(0x00D0)()
	struct FSlateBrush                            CallFunc_GetDefaultSlotBrushes_Gradient_Brush;     // 0x00D0(0x00D0)()
	struct FSlateBrush                            CallFunc_GetDefaultSlotBrushes_Highlight_Brush;    // 0x01A0(0x00D0)()
	struct FSlateBrush                            CallFunc_GetDefaultSlotBrushes_Hover_Brush;        // 0x0270(0x00D0)()
	struct FSlateBrush                            CallFunc_GetDefaultSlotBrushes_Item_Brush;         // 0x0340(0x00D0)()
};
static_assert(alignof(W_BaseSlot_C_SetDefaultSlotImages) == 0x000010, "Wrong alignment on W_BaseSlot_C_SetDefaultSlotImages");
static_assert(sizeof(W_BaseSlot_C_SetDefaultSlotImages) == 0x000410, "Wrong size on W_BaseSlot_C_SetDefaultSlotImages");
static_assert(offsetof(W_BaseSlot_C_SetDefaultSlotImages, CallFunc_GetDefaultSlotBrushes_BG_Brush) == 0x000000, "Member 'W_BaseSlot_C_SetDefaultSlotImages::CallFunc_GetDefaultSlotBrushes_BG_Brush' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_SetDefaultSlotImages, CallFunc_GetDefaultSlotBrushes_Gradient_Brush) == 0x0000D0, "Member 'W_BaseSlot_C_SetDefaultSlotImages::CallFunc_GetDefaultSlotBrushes_Gradient_Brush' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_SetDefaultSlotImages, CallFunc_GetDefaultSlotBrushes_Highlight_Brush) == 0x0001A0, "Member 'W_BaseSlot_C_SetDefaultSlotImages::CallFunc_GetDefaultSlotBrushes_Highlight_Brush' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_SetDefaultSlotImages, CallFunc_GetDefaultSlotBrushes_Hover_Brush) == 0x000270, "Member 'W_BaseSlot_C_SetDefaultSlotImages::CallFunc_GetDefaultSlotBrushes_Hover_Brush' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_SetDefaultSlotImages, CallFunc_GetDefaultSlotBrushes_Item_Brush) == 0x000340, "Member 'W_BaseSlot_C_SetDefaultSlotImages::CallFunc_GetDefaultSlotBrushes_Item_Brush' has a wrong offset!");

// Function W_BaseSlot.W_BaseSlot_C.SetEquipmentMark
// 0x0005 (0x0005 - 0x0000)
struct W_BaseSlot_C_SetEquipmentMark final
{
public:
	bool                                          Param_IsVisible;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseSlot_C_SetEquipmentMark) == 0x000001, "Wrong alignment on W_BaseSlot_C_SetEquipmentMark");
static_assert(sizeof(W_BaseSlot_C_SetEquipmentMark) == 0x000005, "Wrong size on W_BaseSlot_C_SetEquipmentMark");
static_assert(offsetof(W_BaseSlot_C_SetEquipmentMark, Param_IsVisible) == 0x000000, "Member 'W_BaseSlot_C_SetEquipmentMark::Param_IsVisible' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_SetEquipmentMark, Temp_bool_Variable) == 0x000001, "Member 'W_BaseSlot_C_SetEquipmentMark::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_SetEquipmentMark, Temp_byte_Variable) == 0x000002, "Member 'W_BaseSlot_C_SetEquipmentMark::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_SetEquipmentMark, Temp_byte_Variable_1) == 0x000003, "Member 'W_BaseSlot_C_SetEquipmentMark::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_SetEquipmentMark, K2Node_Select_Default) == 0x000004, "Member 'W_BaseSlot_C_SetEquipmentMark::K2Node_Select_Default' has a wrong offset!");

// Function W_BaseSlot.W_BaseSlot_C.SetPrice
// 0x0018 (0x0018 - 0x0000)
struct W_BaseSlot_C_SetPrice final
{
public:
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0000(0x0018)()
};
static_assert(alignof(W_BaseSlot_C_SetPrice) == 0x000008, "Wrong alignment on W_BaseSlot_C_SetPrice");
static_assert(sizeof(W_BaseSlot_C_SetPrice) == 0x000018, "Wrong size on W_BaseSlot_C_SetPrice");
static_assert(offsetof(W_BaseSlot_C_SetPrice, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000000, "Member 'W_BaseSlot_C_SetPrice::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");

// Function W_BaseSlot.W_BaseSlot_C.SetSellPrice
// 0x0018 (0x0018 - 0x0000)
struct W_BaseSlot_C_SetSellPrice final
{
public:
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0000(0x0018)()
};
static_assert(alignof(W_BaseSlot_C_SetSellPrice) == 0x000008, "Wrong alignment on W_BaseSlot_C_SetSellPrice");
static_assert(sizeof(W_BaseSlot_C_SetSellPrice) == 0x000018, "Wrong size on W_BaseSlot_C_SetSellPrice");
static_assert(offsetof(W_BaseSlot_C_SetSellPrice, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000000, "Member 'W_BaseSlot_C_SetSellPrice::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");

// Function W_BaseSlot.W_BaseSlot_C.UpdateDragMove
// 0x0008 (0x0008 - 0x0000)
struct W_BaseSlot_C_UpdateDragMove final
{
public:
	class UDragDropOperation*                     DragDropOperation;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseSlot_C_UpdateDragMove) == 0x000008, "Wrong alignment on W_BaseSlot_C_UpdateDragMove");
static_assert(sizeof(W_BaseSlot_C_UpdateDragMove) == 0x000008, "Wrong size on W_BaseSlot_C_UpdateDragMove");
static_assert(offsetof(W_BaseSlot_C_UpdateDragMove, DragDropOperation) == 0x000000, "Member 'W_BaseSlot_C_UpdateDragMove::DragDropOperation' has a wrong offset!");

// Function W_BaseSlot.W_BaseSlot_C.UpdateItemCounter
// 0x02A8 (0x02A8 - 0x0000)
struct W_BaseSlot_C_UpdateItemCounter final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo; // 0x0008(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0230(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0280(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0290(0x0018)()
};
static_assert(alignof(W_BaseSlot_C_UpdateItemCounter) == 0x000008, "Wrong alignment on W_BaseSlot_C_UpdateItemCounter");
static_assert(sizeof(W_BaseSlot_C_UpdateItemCounter) == 0x0002A8, "Wrong size on W_BaseSlot_C_UpdateItemCounter");
static_assert(offsetof(W_BaseSlot_C_UpdateItemCounter, Value) == 0x000000, "Member 'W_BaseSlot_C_UpdateItemCounter::Value' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_UpdateItemCounter, CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo) == 0x000008, "Member 'W_BaseSlot_C_UpdateItemCounter::CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_UpdateItemCounter, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000228, "Member 'W_BaseSlot_C_UpdateItemCounter::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_UpdateItemCounter, K2Node_MakeStruct_FormatArgumentData) == 0x000230, "Member 'W_BaseSlot_C_UpdateItemCounter::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_UpdateItemCounter, K2Node_MakeArray_Array) == 0x000280, "Member 'W_BaseSlot_C_UpdateItemCounter::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_UpdateItemCounter, CallFunc_Format_ReturnValue) == 0x000290, "Member 'W_BaseSlot_C_UpdateItemCounter::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function W_BaseSlot.W_BaseSlot_C.GetCount
// 0x0008 (0x0008 - 0x0000)
struct W_BaseSlot_C_GetCount final
{
public:
	int32                                         MaxStack;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseSlot_C_GetCount) == 0x000004, "Wrong alignment on W_BaseSlot_C_GetCount");
static_assert(sizeof(W_BaseSlot_C_GetCount) == 0x000008, "Wrong size on W_BaseSlot_C_GetCount");
static_assert(offsetof(W_BaseSlot_C_GetCount, MaxStack) == 0x000000, "Member 'W_BaseSlot_C_GetCount::MaxStack' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetCount, Count) == 0x000004, "Member 'W_BaseSlot_C_GetCount::Count' has a wrong offset!");

// Function W_BaseSlot.W_BaseSlot_C.GetDefaultSlotBrushes
// 0x09D0 (0x09D0 - 0x0000)
struct W_BaseSlot_C_GetDefaultSlotBrushes final
{
public:
	struct FSlateBrush                            BG_Brush;                                          // 0x0000(0x00D0)(Parm, OutParm)
	struct FSlateBrush                            Gradient_Brush;                                    // 0x00D0(0x00D0)(Parm, OutParm)
	struct FSlateBrush                            Highlight_Brush;                                   // 0x01A0(0x00D0)(Parm, OutParm)
	struct FSlateBrush                            Hover_Brush;                                       // 0x0270(0x00D0)(Parm, OutParm)
	struct FSlateBrush                            Item_Brush;                                        // 0x0340(0x00D0)(Parm, OutParm)
	struct FVector2D                              CurrentSlotSize;                                   // 0x0410(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Hover_Sprite;                                      // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                Highlight_Sprite;                                  // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                Gradient_Sprite;                                   // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                BG_Sprite;                                         // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         Y;                                                 // 0x0440(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         X;                                                 // 0x0444(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             K2Node_MakeStruct_FItemInfo;                       // 0x0448(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0668(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0670(0x00D0)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_1;                    // 0x0740(0x00D0)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_2;                    // 0x0810(0x00D0)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_3;                    // 0x08E0(0x00D0)()
	struct FDeprecateSlateVector2D                K2Node_MakeStruct_ImageSize_ImplicitCast;          // 0x09B0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FDeprecateSlateVector2D                K2Node_MakeStruct_ImageSize_ImplicitCast_1;        // 0x09B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FDeprecateSlateVector2D                K2Node_MakeStruct_ImageSize_ImplicitCast_2;        // 0x09C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FDeprecateSlateVector2D                K2Node_MakeStruct_ImageSize_ImplicitCast_3;        // 0x09C8(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseSlot_C_GetDefaultSlotBrushes) == 0x000010, "Wrong alignment on W_BaseSlot_C_GetDefaultSlotBrushes");
static_assert(sizeof(W_BaseSlot_C_GetDefaultSlotBrushes) == 0x0009D0, "Wrong size on W_BaseSlot_C_GetDefaultSlotBrushes");
static_assert(offsetof(W_BaseSlot_C_GetDefaultSlotBrushes, BG_Brush) == 0x000000, "Member 'W_BaseSlot_C_GetDefaultSlotBrushes::BG_Brush' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetDefaultSlotBrushes, Gradient_Brush) == 0x0000D0, "Member 'W_BaseSlot_C_GetDefaultSlotBrushes::Gradient_Brush' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetDefaultSlotBrushes, Highlight_Brush) == 0x0001A0, "Member 'W_BaseSlot_C_GetDefaultSlotBrushes::Highlight_Brush' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetDefaultSlotBrushes, Hover_Brush) == 0x000270, "Member 'W_BaseSlot_C_GetDefaultSlotBrushes::Hover_Brush' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetDefaultSlotBrushes, Item_Brush) == 0x000340, "Member 'W_BaseSlot_C_GetDefaultSlotBrushes::Item_Brush' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetDefaultSlotBrushes, CurrentSlotSize) == 0x000410, "Member 'W_BaseSlot_C_GetDefaultSlotBrushes::CurrentSlotSize' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetDefaultSlotBrushes, Hover_Sprite) == 0x000420, "Member 'W_BaseSlot_C_GetDefaultSlotBrushes::Hover_Sprite' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetDefaultSlotBrushes, Highlight_Sprite) == 0x000428, "Member 'W_BaseSlot_C_GetDefaultSlotBrushes::Highlight_Sprite' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetDefaultSlotBrushes, Gradient_Sprite) == 0x000430, "Member 'W_BaseSlot_C_GetDefaultSlotBrushes::Gradient_Sprite' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetDefaultSlotBrushes, BG_Sprite) == 0x000438, "Member 'W_BaseSlot_C_GetDefaultSlotBrushes::BG_Sprite' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetDefaultSlotBrushes, Y) == 0x000440, "Member 'W_BaseSlot_C_GetDefaultSlotBrushes::Y' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetDefaultSlotBrushes, X) == 0x000444, "Member 'W_BaseSlot_C_GetDefaultSlotBrushes::X' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetDefaultSlotBrushes, K2Node_MakeStruct_FItemInfo) == 0x000448, "Member 'W_BaseSlot_C_GetDefaultSlotBrushes::K2Node_MakeStruct_FItemInfo' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetDefaultSlotBrushes, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000668, "Member 'W_BaseSlot_C_GetDefaultSlotBrushes::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetDefaultSlotBrushes, K2Node_MakeStruct_SlateBrush) == 0x000670, "Member 'W_BaseSlot_C_GetDefaultSlotBrushes::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetDefaultSlotBrushes, K2Node_MakeStruct_SlateBrush_1) == 0x000740, "Member 'W_BaseSlot_C_GetDefaultSlotBrushes::K2Node_MakeStruct_SlateBrush_1' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetDefaultSlotBrushes, K2Node_MakeStruct_SlateBrush_2) == 0x000810, "Member 'W_BaseSlot_C_GetDefaultSlotBrushes::K2Node_MakeStruct_SlateBrush_2' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetDefaultSlotBrushes, K2Node_MakeStruct_SlateBrush_3) == 0x0008E0, "Member 'W_BaseSlot_C_GetDefaultSlotBrushes::K2Node_MakeStruct_SlateBrush_3' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetDefaultSlotBrushes, K2Node_MakeStruct_ImageSize_ImplicitCast) == 0x0009B0, "Member 'W_BaseSlot_C_GetDefaultSlotBrushes::K2Node_MakeStruct_ImageSize_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetDefaultSlotBrushes, K2Node_MakeStruct_ImageSize_ImplicitCast_1) == 0x0009B8, "Member 'W_BaseSlot_C_GetDefaultSlotBrushes::K2Node_MakeStruct_ImageSize_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetDefaultSlotBrushes, K2Node_MakeStruct_ImageSize_ImplicitCast_2) == 0x0009C0, "Member 'W_BaseSlot_C_GetDefaultSlotBrushes::K2Node_MakeStruct_ImageSize_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetDefaultSlotBrushes, K2Node_MakeStruct_ImageSize_ImplicitCast_3) == 0x0009C8, "Member 'W_BaseSlot_C_GetDefaultSlotBrushes::K2Node_MakeStruct_ImageSize_ImplicitCast_3' has a wrong offset!");

// Function W_BaseSlot.W_BaseSlot_C.GetItemBrush
// 0x01D0 (0x01D0 - 0x0000)
struct W_BaseSlot_C_GetItemBrush final
{
public:
	struct FSlateBrush                            SlateBrush;                                        // 0x0000(0x00D0)(Parm, OutParm)
	struct FVector2D                              CallFunc_GetSlotSize_SlotSize;                     // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E8[0x8];                                       // 0x00E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x00F0(0x00D0)()
	struct FDeprecateSlateVector2D                K2Node_MakeStruct_ImageSize_ImplicitCast;          // 0x01C0(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseSlot_C_GetItemBrush) == 0x000010, "Wrong alignment on W_BaseSlot_C_GetItemBrush");
static_assert(sizeof(W_BaseSlot_C_GetItemBrush) == 0x0001D0, "Wrong size on W_BaseSlot_C_GetItemBrush");
static_assert(offsetof(W_BaseSlot_C_GetItemBrush, SlateBrush) == 0x000000, "Member 'W_BaseSlot_C_GetItemBrush::SlateBrush' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetItemBrush, CallFunc_GetSlotSize_SlotSize) == 0x0000D0, "Member 'W_BaseSlot_C_GetItemBrush::CallFunc_GetSlotSize_SlotSize' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetItemBrush, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x0000E0, "Member 'W_BaseSlot_C_GetItemBrush::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetItemBrush, K2Node_MakeStruct_SlateBrush) == 0x0000F0, "Member 'W_BaseSlot_C_GetItemBrush::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetItemBrush, K2Node_MakeStruct_ImageSize_ImplicitCast) == 0x0001C0, "Member 'W_BaseSlot_C_GetItemBrush::K2Node_MakeStruct_ImageSize_ImplicitCast' has a wrong offset!");

// Function W_BaseSlot.W_BaseSlot_C.GetItemId
// 0x0004 (0x0004 - 0x0000)
struct W_BaseSlot_C_GetItemId final
{
public:
	int32                                         ItemId;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseSlot_C_GetItemId) == 0x000004, "Wrong alignment on W_BaseSlot_C_GetItemId");
static_assert(sizeof(W_BaseSlot_C_GetItemId) == 0x000004, "Wrong size on W_BaseSlot_C_GetItemId");
static_assert(offsetof(W_BaseSlot_C_GetItemId, ItemId) == 0x000000, "Member 'W_BaseSlot_C_GetItemId::ItemId' has a wrong offset!");

// Function W_BaseSlot.W_BaseSlot_C.GetItemSlotDimension
// 0x0020 (0x0020 - 0x0000)
struct W_BaseSlot_C_GetItemSlotDimension final
{
public:
	int32                                         X;                                                 // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Y;                                                 // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseSlot_C_GetItemSlotDimension) == 0x000008, "Wrong alignment on W_BaseSlot_C_GetItemSlotDimension");
static_assert(sizeof(W_BaseSlot_C_GetItemSlotDimension) == 0x000020, "Wrong size on W_BaseSlot_C_GetItemSlotDimension");
static_assert(offsetof(W_BaseSlot_C_GetItemSlotDimension, X) == 0x000000, "Member 'W_BaseSlot_C_GetItemSlotDimension::X' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetItemSlotDimension, Y) == 0x000004, "Member 'W_BaseSlot_C_GetItemSlotDimension::Y' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetItemSlotDimension, CallFunc_BreakVector2D_X) == 0x000008, "Member 'W_BaseSlot_C_GetItemSlotDimension::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetItemSlotDimension, CallFunc_BreakVector2D_Y) == 0x000010, "Member 'W_BaseSlot_C_GetItemSlotDimension::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetItemSlotDimension, CallFunc_Round_ReturnValue) == 0x000018, "Member 'W_BaseSlot_C_GetItemSlotDimension::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetItemSlotDimension, CallFunc_Round_ReturnValue_1) == 0x00001C, "Member 'W_BaseSlot_C_GetItemSlotDimension::CallFunc_Round_ReturnValue_1' has a wrong offset!");

// Function W_BaseSlot.W_BaseSlot_C.GetItemWeight
// 0x0008 (0x0008 - 0x0000)
struct W_BaseSlot_C_GetItemWeight final
{
public:
	double                                        Weight;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseSlot_C_GetItemWeight) == 0x000008, "Wrong alignment on W_BaseSlot_C_GetItemWeight");
static_assert(sizeof(W_BaseSlot_C_GetItemWeight) == 0x000008, "Wrong size on W_BaseSlot_C_GetItemWeight");
static_assert(offsetof(W_BaseSlot_C_GetItemWeight, Weight) == 0x000000, "Member 'W_BaseSlot_C_GetItemWeight::Weight' has a wrong offset!");

// Function W_BaseSlot.W_BaseSlot_C.GetNumberOfSlotsUsed
// 0x0028 (0x0028 - 0x0000)
struct W_BaseSlot_C_GetNumberOfSlotsUsed final
{
public:
	int32                                         Number;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseSlot_C_GetNumberOfSlotsUsed) == 0x000008, "Wrong alignment on W_BaseSlot_C_GetNumberOfSlotsUsed");
static_assert(sizeof(W_BaseSlot_C_GetNumberOfSlotsUsed) == 0x000028, "Wrong size on W_BaseSlot_C_GetNumberOfSlotsUsed");
static_assert(offsetof(W_BaseSlot_C_GetNumberOfSlotsUsed, Number) == 0x000000, "Member 'W_BaseSlot_C_GetNumberOfSlotsUsed::Number' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetNumberOfSlotsUsed, CallFunc_BreakVector2D_X) == 0x000008, "Member 'W_BaseSlot_C_GetNumberOfSlotsUsed::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetNumberOfSlotsUsed, CallFunc_BreakVector2D_Y) == 0x000010, "Member 'W_BaseSlot_C_GetNumberOfSlotsUsed::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetNumberOfSlotsUsed, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'W_BaseSlot_C_GetNumberOfSlotsUsed::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetNumberOfSlotsUsed, CallFunc_Round_ReturnValue) == 0x000020, "Member 'W_BaseSlot_C_GetNumberOfSlotsUsed::CallFunc_Round_ReturnValue' has a wrong offset!");

// Function W_BaseSlot.W_BaseSlot_C.GetOcupantIndex
// 0x0004 (0x0004 - 0x0000)
struct W_BaseSlot_C_GetOcupantIndex final
{
public:
	int32                                         OcupantIndex;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseSlot_C_GetOcupantIndex) == 0x000004, "Wrong alignment on W_BaseSlot_C_GetOcupantIndex");
static_assert(sizeof(W_BaseSlot_C_GetOcupantIndex) == 0x000004, "Wrong size on W_BaseSlot_C_GetOcupantIndex");
static_assert(offsetof(W_BaseSlot_C_GetOcupantIndex, OcupantIndex) == 0x000000, "Member 'W_BaseSlot_C_GetOcupantIndex::OcupantIndex' has a wrong offset!");

// Function W_BaseSlot.W_BaseSlot_C.GetParentContainer
// 0x0008 (0x0008 - 0x0000)
struct W_BaseSlot_C_GetParentContainer final
{
public:
	class UW_BaseContainer_C*                     Param_ParentContainer;                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseSlot_C_GetParentContainer) == 0x000008, "Wrong alignment on W_BaseSlot_C_GetParentContainer");
static_assert(sizeof(W_BaseSlot_C_GetParentContainer) == 0x000008, "Wrong size on W_BaseSlot_C_GetParentContainer");
static_assert(offsetof(W_BaseSlot_C_GetParentContainer, Param_ParentContainer) == 0x000000, "Member 'W_BaseSlot_C_GetParentContainer::Param_ParentContainer' has a wrong offset!");

// Function W_BaseSlot.W_BaseSlot_C.GetPickupInfo
// 0x0068 (0x0068 - 0x0000)
struct W_BaseSlot_C_GetPickupInfo final
{
public:
	struct FContainerPickupsInfo                  Param_PickupInfo;                                  // 0x0000(0x0068)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseSlot_C_GetPickupInfo) == 0x000008, "Wrong alignment on W_BaseSlot_C_GetPickupInfo");
static_assert(sizeof(W_BaseSlot_C_GetPickupInfo) == 0x000068, "Wrong size on W_BaseSlot_C_GetPickupInfo");
static_assert(offsetof(W_BaseSlot_C_GetPickupInfo, Param_PickupInfo) == 0x000000, "Member 'W_BaseSlot_C_GetPickupInfo::Param_PickupInfo' has a wrong offset!");

// Function W_BaseSlot.W_BaseSlot_C.GetSlotBrushes
// 0x0B60 (0x0B60 - 0x0000)
struct W_BaseSlot_C_GetSlotBrushes final
{
public:
	struct FSlateBrush                            Hover2_Brush;                                      // 0x0000(0x00D0)(Parm, OutParm)
	struct FSlateBrush                            Hover_Brush;                                       // 0x00D0(0x00D0)(Parm, OutParm)
	struct FSlateBrush                            BG_Brush;                                          // 0x01A0(0x00D0)(Parm, OutParm)
	struct FSlateBrush                            Gradient_Brush;                                    // 0x0270(0x00D0)(Parm, OutParm)
	struct FSlateBrush                            Highlight_Brush;                                   // 0x0340(0x00D0)(Parm, OutParm)
	struct FSlateBrush                            Item_Brush;                                        // 0x0410(0x00D0)(Parm, OutParm)
	struct FVector2D                              SwappedSlotSize;                                   // 0x04E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CurrentSlotSize;                                   // 0x04F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Hover_Sprite;                                      // 0x0500(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                Highlight_Sprite;                                  // 0x0508(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                Gradient_Sprite;                                   // 0x0510(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                BG_Sprite;                                         // 0x0518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         Y;                                                 // 0x0520(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         X;                                                 // 0x0524(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0528(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x053C(0x0014)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0550(0x00D0)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_1;                    // 0x0620(0x00D0)()
	struct FVector2D                              CallFunc_GetSlotSize_SlotSize;                     // 0x06F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0700(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0708(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0710(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_718[0x8];                                      // 0x0718(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_2;                    // 0x0720(0x00D0)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x07F0(0x0014)()
	uint8                                         Pad_804[0xC];                                      // 0x0804(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               CallFunc_MakeVector4_ReturnValue;                  // 0x0810(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_3;                    // 0x0830(0x0014)()
	uint8                                         Pad_844[0xC];                                      // 0x0844(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrushOutlineSettings             K2Node_MakeStruct_SlateBrushOutlineSettings;       // 0x0850(0x0040)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_3;                    // 0x0890(0x00D0)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_4;                    // 0x0960(0x00D0)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_5;                    // 0x0A30(0x00D0)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0B00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0B01(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0B02(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0B03(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0B04(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0B05(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x0B06(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x0B07(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0B08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_6;          // 0x0B09(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_7;          // 0x0B0A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0B0B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B0C[0x4];                                      // 0x0B0C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_SwapVector_ReturnValue;                   // 0x0B10(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_8;          // 0x0B20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_9;          // 0x0B21(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0B22(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_10;         // 0x0B23(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_11;         // 0x0B24(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0B25(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B26[0x2];                                      // 0x0B26(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0B28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0B30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0B38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x0B3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDeprecateSlateVector2D                K2Node_MakeStruct_ImageSize_ImplicitCast;          // 0x0B40(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderTransformAngle_Angle_ImplicitCast; // 0x0B48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDeprecateSlateVector2D                K2Node_MakeStruct_ImageSize_ImplicitCast_1;        // 0x0B4C(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FDeprecateSlateVector2D                K2Node_MakeStruct_ImageSize_ImplicitCast_2;        // 0x0B54(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseSlot_C_GetSlotBrushes) == 0x000010, "Wrong alignment on W_BaseSlot_C_GetSlotBrushes");
static_assert(sizeof(W_BaseSlot_C_GetSlotBrushes) == 0x000B60, "Wrong size on W_BaseSlot_C_GetSlotBrushes");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, Hover2_Brush) == 0x000000, "Member 'W_BaseSlot_C_GetSlotBrushes::Hover2_Brush' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, Hover_Brush) == 0x0000D0, "Member 'W_BaseSlot_C_GetSlotBrushes::Hover_Brush' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, BG_Brush) == 0x0001A0, "Member 'W_BaseSlot_C_GetSlotBrushes::BG_Brush' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, Gradient_Brush) == 0x000270, "Member 'W_BaseSlot_C_GetSlotBrushes::Gradient_Brush' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, Highlight_Brush) == 0x000340, "Member 'W_BaseSlot_C_GetSlotBrushes::Highlight_Brush' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, Item_Brush) == 0x000410, "Member 'W_BaseSlot_C_GetSlotBrushes::Item_Brush' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, SwappedSlotSize) == 0x0004E0, "Member 'W_BaseSlot_C_GetSlotBrushes::SwappedSlotSize' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, CurrentSlotSize) == 0x0004F0, "Member 'W_BaseSlot_C_GetSlotBrushes::CurrentSlotSize' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, Hover_Sprite) == 0x000500, "Member 'W_BaseSlot_C_GetSlotBrushes::Hover_Sprite' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, Highlight_Sprite) == 0x000508, "Member 'W_BaseSlot_C_GetSlotBrushes::Highlight_Sprite' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, Gradient_Sprite) == 0x000510, "Member 'W_BaseSlot_C_GetSlotBrushes::Gradient_Sprite' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, BG_Sprite) == 0x000518, "Member 'W_BaseSlot_C_GetSlotBrushes::BG_Sprite' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, Y) == 0x000520, "Member 'W_BaseSlot_C_GetSlotBrushes::Y' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, X) == 0x000524, "Member 'W_BaseSlot_C_GetSlotBrushes::X' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, K2Node_MakeStruct_SlateColor) == 0x000528, "Member 'W_BaseSlot_C_GetSlotBrushes::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, K2Node_MakeStruct_SlateColor_1) == 0x00053C, "Member 'W_BaseSlot_C_GetSlotBrushes::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, K2Node_MakeStruct_SlateBrush) == 0x000550, "Member 'W_BaseSlot_C_GetSlotBrushes::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, K2Node_MakeStruct_SlateBrush_1) == 0x000620, "Member 'W_BaseSlot_C_GetSlotBrushes::K2Node_MakeStruct_SlateBrush_1' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, CallFunc_GetSlotSize_SlotSize) == 0x0006F0, "Member 'W_BaseSlot_C_GetSlotBrushes::CallFunc_GetSlotSize_SlotSize' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000700, "Member 'W_BaseSlot_C_GetSlotBrushes::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, CallFunc_SelectFloat_ReturnValue) == 0x000708, "Member 'W_BaseSlot_C_GetSlotBrushes::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000710, "Member 'W_BaseSlot_C_GetSlotBrushes::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, K2Node_MakeStruct_SlateBrush_2) == 0x000720, "Member 'W_BaseSlot_C_GetSlotBrushes::K2Node_MakeStruct_SlateBrush_2' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, K2Node_MakeStruct_SlateColor_2) == 0x0007F0, "Member 'W_BaseSlot_C_GetSlotBrushes::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, CallFunc_MakeVector4_ReturnValue) == 0x000810, "Member 'W_BaseSlot_C_GetSlotBrushes::CallFunc_MakeVector4_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, K2Node_MakeStruct_SlateColor_3) == 0x000830, "Member 'W_BaseSlot_C_GetSlotBrushes::K2Node_MakeStruct_SlateColor_3' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, K2Node_MakeStruct_SlateBrushOutlineSettings) == 0x000850, "Member 'W_BaseSlot_C_GetSlotBrushes::K2Node_MakeStruct_SlateBrushOutlineSettings' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, K2Node_MakeStruct_SlateBrush_3) == 0x000890, "Member 'W_BaseSlot_C_GetSlotBrushes::K2Node_MakeStruct_SlateBrush_3' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, K2Node_MakeStruct_SlateBrush_4) == 0x000960, "Member 'W_BaseSlot_C_GetSlotBrushes::K2Node_MakeStruct_SlateBrush_4' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, K2Node_MakeStruct_SlateBrush_5) == 0x000A30, "Member 'W_BaseSlot_C_GetSlotBrushes::K2Node_MakeStruct_SlateBrush_5' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000B00, "Member 'W_BaseSlot_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000B01, "Member 'W_BaseSlot_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, CallFunc_BooleanAND_ReturnValue) == 0x000B02, "Member 'W_BaseSlot_C_GetSlotBrushes::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000B03, "Member 'W_BaseSlot_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000B04, "Member 'W_BaseSlot_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, CallFunc_BooleanAND_ReturnValue_1) == 0x000B05, "Member 'W_BaseSlot_C_GetSlotBrushes::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x000B06, "Member 'W_BaseSlot_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x000B07, "Member 'W_BaseSlot_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, CallFunc_BooleanAND_ReturnValue_2) == 0x000B08, "Member 'W_BaseSlot_C_GetSlotBrushes::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue_6) == 0x000B09, "Member 'W_BaseSlot_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue_7) == 0x000B0A, "Member 'W_BaseSlot_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, CallFunc_BooleanAND_ReturnValue_3) == 0x000B0B, "Member 'W_BaseSlot_C_GetSlotBrushes::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, CallFunc_SwapVector_ReturnValue) == 0x000B10, "Member 'W_BaseSlot_C_GetSlotBrushes::CallFunc_SwapVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue_8) == 0x000B20, "Member 'W_BaseSlot_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue_9) == 0x000B21, "Member 'W_BaseSlot_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, CallFunc_BooleanAND_ReturnValue_4) == 0x000B22, "Member 'W_BaseSlot_C_GetSlotBrushes::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue_10) == 0x000B23, "Member 'W_BaseSlot_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue_11) == 0x000B24, "Member 'W_BaseSlot_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, CallFunc_BooleanAND_ReturnValue_5) == 0x000B25, "Member 'W_BaseSlot_C_GetSlotBrushes::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, CallFunc_BreakVector2D_X) == 0x000B28, "Member 'W_BaseSlot_C_GetSlotBrushes::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, CallFunc_BreakVector2D_Y) == 0x000B30, "Member 'W_BaseSlot_C_GetSlotBrushes::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, CallFunc_Round_ReturnValue) == 0x000B38, "Member 'W_BaseSlot_C_GetSlotBrushes::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, CallFunc_Round_ReturnValue_1) == 0x000B3C, "Member 'W_BaseSlot_C_GetSlotBrushes::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, K2Node_MakeStruct_ImageSize_ImplicitCast) == 0x000B40, "Member 'W_BaseSlot_C_GetSlotBrushes::K2Node_MakeStruct_ImageSize_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, CallFunc_SetRenderTransformAngle_Angle_ImplicitCast) == 0x000B48, "Member 'W_BaseSlot_C_GetSlotBrushes::CallFunc_SetRenderTransformAngle_Angle_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, K2Node_MakeStruct_ImageSize_ImplicitCast_1) == 0x000B4C, "Member 'W_BaseSlot_C_GetSlotBrushes::K2Node_MakeStruct_ImageSize_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotBrushes, K2Node_MakeStruct_ImageSize_ImplicitCast_2) == 0x000B54, "Member 'W_BaseSlot_C_GetSlotBrushes::K2Node_MakeStruct_ImageSize_ImplicitCast_2' has a wrong offset!");

// Function W_BaseSlot.W_BaseSlot_C.GetSlotIndex
// 0x0004 (0x0004 - 0x0000)
struct W_BaseSlot_C_GetSlotIndex final
{
public:
	int32                                         Param_SlotIndex;                                   // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseSlot_C_GetSlotIndex) == 0x000004, "Wrong alignment on W_BaseSlot_C_GetSlotIndex");
static_assert(sizeof(W_BaseSlot_C_GetSlotIndex) == 0x000004, "Wrong size on W_BaseSlot_C_GetSlotIndex");
static_assert(offsetof(W_BaseSlot_C_GetSlotIndex, Param_SlotIndex) == 0x000000, "Member 'W_BaseSlot_C_GetSlotIndex::Param_SlotIndex' has a wrong offset!");

// Function W_BaseSlot.W_BaseSlot_C.GetSlotSize
// 0x00C0 (0x00C0 - 0x0000)
struct W_BaseSlot_C_GetSlotSize final
{
public:
	struct FVector2D                              SlotSize;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1;   // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2;   // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_3;   // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseSlot_C_GetSlotSize) == 0x000008, "Wrong alignment on W_BaseSlot_C_GetSlotSize");
static_assert(sizeof(W_BaseSlot_C_GetSlotSize) == 0x0000C0, "Wrong size on W_BaseSlot_C_GetSlotSize");
static_assert(offsetof(W_BaseSlot_C_GetSlotSize, SlotSize) == 0x000000, "Member 'W_BaseSlot_C_GetSlotSize::SlotSize' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotSize, CallFunc_BreakVector2D_X) == 0x000010, "Member 'W_BaseSlot_C_GetSlotSize::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotSize, CallFunc_BreakVector2D_Y) == 0x000018, "Member 'W_BaseSlot_C_GetSlotSize::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotSize, CallFunc_BreakVector2D_X_1) == 0x000020, "Member 'W_BaseSlot_C_GetSlotSize::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotSize, CallFunc_BreakVector2D_Y_1) == 0x000028, "Member 'W_BaseSlot_C_GetSlotSize::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotSize, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000030, "Member 'W_BaseSlot_C_GetSlotSize::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotSize, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'W_BaseSlot_C_GetSlotSize::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotSize, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'W_BaseSlot_C_GetSlotSize::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotSize, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000048, "Member 'W_BaseSlot_C_GetSlotSize::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotSize, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000050, "Member 'W_BaseSlot_C_GetSlotSize::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotSize, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000058, "Member 'W_BaseSlot_C_GetSlotSize::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotSize, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'W_BaseSlot_C_GetSlotSize::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotSize, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'W_BaseSlot_C_GetSlotSize::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotSize, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000070, "Member 'W_BaseSlot_C_GetSlotSize::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotSize, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000078, "Member 'W_BaseSlot_C_GetSlotSize::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotSize, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000080, "Member 'W_BaseSlot_C_GetSlotSize::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotSize, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000088, "Member 'W_BaseSlot_C_GetSlotSize::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotSize, CallFunc_MakeVector2D_ReturnValue) == 0x000090, "Member 'W_BaseSlot_C_GetSlotSize::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotSize, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x0000A0, "Member 'W_BaseSlot_C_GetSlotSize::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotSize, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1) == 0x0000A8, "Member 'W_BaseSlot_C_GetSlotSize::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotSize, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2) == 0x0000B0, "Member 'W_BaseSlot_C_GetSlotSize::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_GetSlotSize, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_3) == 0x0000B8, "Member 'W_BaseSlot_C_GetSlotSize::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_3' has a wrong offset!");

// Function W_BaseSlot.W_BaseSlot_C.GetStatus
// 0x0001 (0x0001 - 0x0000)
struct W_BaseSlot_C_GetStatus final
{
public:
	E_SlotStatus                                  Param_Status;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseSlot_C_GetStatus) == 0x000001, "Wrong alignment on W_BaseSlot_C_GetStatus");
static_assert(sizeof(W_BaseSlot_C_GetStatus) == 0x000001, "Wrong size on W_BaseSlot_C_GetStatus");
static_assert(offsetof(W_BaseSlot_C_GetStatus, Param_Status) == 0x000000, "Member 'W_BaseSlot_C_GetStatus::Param_Status' has a wrong offset!");

// Function W_BaseSlot.W_BaseSlot_C.HasItem
// 0x0002 (0x0002 - 0x0000)
struct W_BaseSlot_C_HasItem final
{
public:
	bool                                          Has;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseSlot_C_HasItem) == 0x000001, "Wrong alignment on W_BaseSlot_C_HasItem");
static_assert(sizeof(W_BaseSlot_C_HasItem) == 0x000002, "Wrong size on W_BaseSlot_C_HasItem");
static_assert(offsetof(W_BaseSlot_C_HasItem, Has) == 0x000000, "Member 'W_BaseSlot_C_HasItem::Has' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_HasItem, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'W_BaseSlot_C_HasItem::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function W_BaseSlot.W_BaseSlot_C.IsEmpty?
// 0x0002 (0x0002 - 0x0000)
struct W_BaseSlot_C_IsEmpty_ final
{
public:
	bool                                          bIsEmpty;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseSlot_C_IsEmpty_) == 0x000001, "Wrong alignment on W_BaseSlot_C_IsEmpty_");
static_assert(sizeof(W_BaseSlot_C_IsEmpty_) == 0x000002, "Wrong size on W_BaseSlot_C_IsEmpty_");
static_assert(offsetof(W_BaseSlot_C_IsEmpty_, bIsEmpty) == 0x000000, "Member 'W_BaseSlot_C_IsEmpty_::bIsEmpty' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_IsEmpty_, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'W_BaseSlot_C_IsEmpty_::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function W_BaseSlot.W_BaseSlot_C.isRotated?
// 0x0001 (0x0001 - 0x0000)
struct W_BaseSlot_C_IsRotated_ final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseSlot_C_IsRotated_) == 0x000001, "Wrong alignment on W_BaseSlot_C_IsRotated_");
static_assert(sizeof(W_BaseSlot_C_IsRotated_) == 0x000001, "Wrong size on W_BaseSlot_C_IsRotated_");
static_assert(offsetof(W_BaseSlot_C_IsRotated_, Result) == 0x000000, "Member 'W_BaseSlot_C_IsRotated_::Result' has a wrong offset!");

// Function W_BaseSlot.W_BaseSlot_C.SwapVector
// 0x0050 (0x0050 - 0x0000)
struct W_BaseSlot_C_SwapVector final
{
public:
	struct FVector2D                              Vector;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseSlot_C_SwapVector) == 0x000008, "Wrong alignment on W_BaseSlot_C_SwapVector");
static_assert(sizeof(W_BaseSlot_C_SwapVector) == 0x000050, "Wrong size on W_BaseSlot_C_SwapVector");
static_assert(offsetof(W_BaseSlot_C_SwapVector, Vector) == 0x000000, "Member 'W_BaseSlot_C_SwapVector::Vector' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_SwapVector, ReturnValue) == 0x000010, "Member 'W_BaseSlot_C_SwapVector::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_SwapVector, CallFunc_BreakVector2D_X) == 0x000020, "Member 'W_BaseSlot_C_SwapVector::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_SwapVector, CallFunc_BreakVector2D_Y) == 0x000028, "Member 'W_BaseSlot_C_SwapVector::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_SwapVector, CallFunc_SelectFloat_ReturnValue) == 0x000030, "Member 'W_BaseSlot_C_SwapVector::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_SwapVector, CallFunc_SelectFloat_ReturnValue_1) == 0x000038, "Member 'W_BaseSlot_C_SwapVector::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseSlot_C_SwapVector, CallFunc_MakeVector2D_ReturnValue) == 0x000040, "Member 'W_BaseSlot_C_SwapVector::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

}

