#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_BaseItemInfo

#include "Basic.hpp"

#include "W_BaseItemInfo_classes.hpp"
#include "W_BaseItemInfo_parameters.hpp"


namespace SDK
{

// Function W_BaseItemInfo.W_BaseItemInfo_C.AddAttachmentEffects
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Power                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  EffectiveRange                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Stability                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  FIring_Rate                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  PowerModdifu                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  EffectiveRangeModdifu                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  StabilityModdifu                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  FIring_RateModdifu                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_BaseItemInfo_C::AddAttachmentEffects(double Power, double EffectiveRange, double Stability, double FIring_Rate, double PowerModdifu, double EffectiveRangeModdifu, double StabilityModdifu, double FIring_RateModdifu)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_BaseItemInfo_C", "AddAttachmentEffects");

	Params::W_BaseItemInfo_C_AddAttachmentEffects Parms{};

	Parms.Power = Power;
	Parms.EffectiveRange = EffectiveRange;
	Parms.Stability = Stability;
	Parms.FIring_Rate = FIring_Rate;
	Parms.PowerModdifu = PowerModdifu;
	Parms.EffectiveRangeModdifu = EffectiveRangeModdifu;
	Parms.StabilityModdifu = StabilityModdifu;
	Parms.FIring_RateModdifu = FIring_RateModdifu;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_BaseItemInfo.W_BaseItemInfo_C.AddAttacmentsToGridPanel
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPickupAttachments               PickupAttachments                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class FName                             WeaponName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_BaseItemInfo_C::AddAttacmentsToGridPanel(const struct FPickupAttachments& PickupAttachments, class FName WeaponName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_BaseItemInfo_C", "AddAttacmentsToGridPanel");

	Params::W_BaseItemInfo_C_AddAttacmentsToGridPanel Parms{};

	Parms.PickupAttachments = std::move(PickupAttachments);
	Parms.WeaponName = WeaponName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_BaseItemInfo.W_BaseItemInfo_C.AddItemEffects
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_BaseItemInfo_C::AddItemEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_BaseItemInfo_C", "AddItemEffects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_BaseItemInfo.W_BaseItemInfo_C.CalculateIndex
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Row                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Column                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_BaseItemInfo_C::CalculateIndex(int32& Param_Index, int32* Row, int32* Column)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_BaseItemInfo_C", "CalculateIndex");

	Params::W_BaseItemInfo_C_CalculateIndex Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	Param_Index = Parms.Param_Index;

	if (Row != nullptr)
		*Row = Parms.Row;

	if (Column != nullptr)
		*Column = Parms.Column;
}


// Function W_BaseItemInfo.W_BaseItemInfo_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_BaseItemInfo_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_BaseItemInfo_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_BaseItemInfo.W_BaseItemInfo_C.ExecuteUbergraph_W_BaseItemInfo
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_BaseItemInfo_C::ExecuteUbergraph_W_BaseItemInfo(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_BaseItemInfo_C", "ExecuteUbergraph_W_BaseItemInfo");

	Params::W_BaseItemInfo_C_ExecuteUbergraph_W_BaseItemInfo Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_BaseItemInfo.W_BaseItemInfo_C.FIndBaseStatsWepaon
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Param_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Power                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Effective_Range                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Stability                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_BaseItemInfo_C::FIndBaseStatsWepaon(class FName Param_Name, double* Power, double* Effective_Range, double* Stability)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_BaseItemInfo_C", "FIndBaseStatsWepaon");

	Params::W_BaseItemInfo_C_FIndBaseStatsWepaon Parms{};

	Parms.Param_Name = Param_Name;

	UObject::ProcessEvent(Func, &Parms);

	if (Power != nullptr)
		*Power = Parms.Power;

	if (Effective_Range != nullptr)
		*Effective_Range = Parms.Effective_Range;

	if (Stability != nullptr)
		*Stability = Parms.Stability;
}


// Function W_BaseItemInfo.W_BaseItemInfo_C.HideItemDescription
// (BlueprintCallable, BlueprintEvent)

void UW_BaseItemInfo_C::HideItemDescription()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_BaseItemInfo_C", "HideItemDescription");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_BaseItemInfo.W_BaseItemInfo_C.HideItemDiscriptionImmediately
// (BlueprintCallable, BlueprintEvent)

void UW_BaseItemInfo_C::HideItemDiscriptionImmediately()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_BaseItemInfo_C", "HideItemDiscriptionImmediately");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_BaseItemInfo.W_BaseItemInfo_C.ResetImageAttachments
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_BaseItemInfo_C::ResetImageAttachments()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_BaseItemInfo_C", "ResetImageAttachments");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_BaseItemInfo.W_BaseItemInfo_C.SetEquipmentMark
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsVisible                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_BaseItemInfo_C::SetEquipmentMark(bool Param_IsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_BaseItemInfo_C", "SetEquipmentMark");

	Params::W_BaseItemInfo_C_SetEquipmentMark Parms{};

	Parms.Param_IsVisible = Param_IsVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_BaseItemInfo.W_BaseItemInfo_C.ShowInfo
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_BaseSlot_C*                    ItemSlot                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class FText                             Param_Text                                             (BlueprintVisible, BlueprintReadOnly, Parm)

void UW_BaseItemInfo_C::ShowInfo(class UW_BaseSlot_C* ItemSlot, const class FText& Param_Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_BaseItemInfo_C", "ShowInfo");

	Params::W_BaseItemInfo_C_ShowInfo Parms{};

	Parms.ItemSlot = ItemSlot;
	Parms.Param_Text = std::move(Param_Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_BaseItemInfo.W_BaseItemInfo_C.SlotEvent_DragStarted_Binding
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_BaseSlot_C*                    Param_SlotRef                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UW_BaseDragWidget_C*              DragWidget                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_BaseItemInfo_C::SlotEvent_DragStarted_Binding(class UW_BaseSlot_C* Param_SlotRef, class UW_BaseDragWidget_C* DragWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_BaseItemInfo_C", "SlotEvent_DragStarted_Binding");

	Params::W_BaseItemInfo_C_SlotEvent_DragStarted_Binding Parms{};

	Parms.Param_SlotRef = Param_SlotRef;
	Parms.DragWidget = DragWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_BaseItemInfo.W_BaseItemInfo_C.UpdateWidgetPosition
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_BaseItemInfo_C::UpdateWidgetPosition(class UWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_BaseItemInfo_C", "UpdateWidgetPosition");

	Params::W_BaseItemInfo_C_UpdateWidgetPosition Parms{};

	Parms.Widget = Widget;

	UObject::ProcessEvent(Func, &Parms);
}

}

