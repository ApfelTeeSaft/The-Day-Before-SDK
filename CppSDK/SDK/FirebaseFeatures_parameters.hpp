#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FirebaseFeatures

#include "Basic.hpp"

#include "FirebaseFeatures_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function FirebaseFeatures.AuthMiscLibrary.CreateOAuthProvider
// 0x0080 (0x0080 - 0x0000)
struct AuthMiscLibrary_CreateOAuthProvider final
{
public:
	struct FFederatedOAuthProviderData            ProviderData;                                      // 0x0000(0x0070)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FFederatedAuthProvider                 ReturnValue;                                       // 0x0070(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AuthMiscLibrary_CreateOAuthProvider) == 0x000008, "Wrong alignment on AuthMiscLibrary_CreateOAuthProvider");
static_assert(sizeof(AuthMiscLibrary_CreateOAuthProvider) == 0x000080, "Wrong size on AuthMiscLibrary_CreateOAuthProvider");
static_assert(offsetof(AuthMiscLibrary_CreateOAuthProvider, ProviderData) == 0x000000, "Member 'AuthMiscLibrary_CreateOAuthProvider::ProviderData' has a wrong offset!");
static_assert(offsetof(AuthMiscLibrary_CreateOAuthProvider, ReturnValue) == 0x000070, "Member 'AuthMiscLibrary_CreateOAuthProvider::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.AuthMiscLibrary.CurrentUser
// 0x0008 (0x0008 - 0x0000)
struct AuthMiscLibrary_CurrentUser final
{
public:
	class UUser*                                  ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AuthMiscLibrary_CurrentUser) == 0x000008, "Wrong alignment on AuthMiscLibrary_CurrentUser");
static_assert(sizeof(AuthMiscLibrary_CurrentUser) == 0x000008, "Wrong size on AuthMiscLibrary_CurrentUser");
static_assert(offsetof(AuthMiscLibrary_CurrentUser, ReturnValue) == 0x000000, "Member 'AuthMiscLibrary_CurrentUser::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.AuthMiscLibrary.FromAppleSignCredential
// 0x0088 (0x0088 - 0x0000)
struct AuthMiscLibrary_FromAppleSignCredential final
{
public:
	struct FAppleSignInCredential                 Credential;                                        // 0x0000(0x0080)(Parm, NativeAccessSpecifierPublic)
	struct FCredential                            ReturnValue;                                       // 0x0080(0x0008)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AuthMiscLibrary_FromAppleSignCredential) == 0x000008, "Wrong alignment on AuthMiscLibrary_FromAppleSignCredential");
static_assert(sizeof(AuthMiscLibrary_FromAppleSignCredential) == 0x000088, "Wrong size on AuthMiscLibrary_FromAppleSignCredential");
static_assert(offsetof(AuthMiscLibrary_FromAppleSignCredential, Credential) == 0x000000, "Member 'AuthMiscLibrary_FromAppleSignCredential::Credential' has a wrong offset!");
static_assert(offsetof(AuthMiscLibrary_FromAppleSignCredential, ReturnValue) == 0x000080, "Member 'AuthMiscLibrary_FromAppleSignCredential::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.AuthMiscLibrary.IsValid
// 0x0010 (0x0010 - 0x0000)
struct AuthMiscLibrary_IsValid final
{
public:
	struct FCredential                            Credential;                                        // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AuthMiscLibrary_IsValid) == 0x000008, "Wrong alignment on AuthMiscLibrary_IsValid");
static_assert(sizeof(AuthMiscLibrary_IsValid) == 0x000010, "Wrong size on AuthMiscLibrary_IsValid");
static_assert(offsetof(AuthMiscLibrary_IsValid, Credential) == 0x000000, "Member 'AuthMiscLibrary_IsValid::Credential' has a wrong offset!");
static_assert(offsetof(AuthMiscLibrary_IsValid, ReturnValue) == 0x000008, "Member 'AuthMiscLibrary_IsValid::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.AuthMiscLibrary.Provider
// 0x0018 (0x0018 - 0x0000)
struct AuthMiscLibrary_Provider final
{
public:
	struct FCredential                            Credential;                                        // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AuthMiscLibrary_Provider) == 0x000008, "Wrong alignment on AuthMiscLibrary_Provider");
static_assert(sizeof(AuthMiscLibrary_Provider) == 0x000018, "Wrong size on AuthMiscLibrary_Provider");
static_assert(offsetof(AuthMiscLibrary_Provider, Credential) == 0x000000, "Member 'AuthMiscLibrary_Provider::Credential' has a wrong offset!");
static_assert(offsetof(AuthMiscLibrary_Provider, ReturnValue) == 0x000008, "Member 'AuthMiscLibrary_Provider::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.ReauthenticateAndRetrieveDataProxy.ReauthenticateAndRetrieveData
// 0x0018 (0x0018 - 0x0000)
struct ReauthenticateAndRetrieveDataProxy_ReauthenticateAndRetrieveData final
{
public:
	const class UUser*                            User;                                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCredential                            Credential;                                        // 0x0008(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UReauthenticateAndRetrieveDataProxy*    ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ReauthenticateAndRetrieveDataProxy_ReauthenticateAndRetrieveData) == 0x000008, "Wrong alignment on ReauthenticateAndRetrieveDataProxy_ReauthenticateAndRetrieveData");
static_assert(sizeof(ReauthenticateAndRetrieveDataProxy_ReauthenticateAndRetrieveData) == 0x000018, "Wrong size on ReauthenticateAndRetrieveDataProxy_ReauthenticateAndRetrieveData");
static_assert(offsetof(ReauthenticateAndRetrieveDataProxy_ReauthenticateAndRetrieveData, User) == 0x000000, "Member 'ReauthenticateAndRetrieveDataProxy_ReauthenticateAndRetrieveData::User' has a wrong offset!");
static_assert(offsetof(ReauthenticateAndRetrieveDataProxy_ReauthenticateAndRetrieveData, Credential) == 0x000008, "Member 'ReauthenticateAndRetrieveDataProxy_ReauthenticateAndRetrieveData::Credential' has a wrong offset!");
static_assert(offsetof(ReauthenticateAndRetrieveDataProxy_ReauthenticateAndRetrieveData, ReturnValue) == 0x000010, "Member 'ReauthenticateAndRetrieveDataProxy_ReauthenticateAndRetrieveData::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FetchProvidersForEmailProxy.FetchProvidersForEmail
// 0x0018 (0x0018 - 0x0000)
struct FetchProvidersForEmailProxy_FetchProvidersForEmail final
{
public:
	class FString                                 Email;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFetchProvidersForEmailProxy*           ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FetchProvidersForEmailProxy_FetchProvidersForEmail) == 0x000008, "Wrong alignment on FetchProvidersForEmailProxy_FetchProvidersForEmail");
static_assert(sizeof(FetchProvidersForEmailProxy_FetchProvidersForEmail) == 0x000018, "Wrong size on FetchProvidersForEmailProxy_FetchProvidersForEmail");
static_assert(offsetof(FetchProvidersForEmailProxy_FetchProvidersForEmail, Email) == 0x000000, "Member 'FetchProvidersForEmailProxy_FetchProvidersForEmail::Email' has a wrong offset!");
static_assert(offsetof(FetchProvidersForEmailProxy_FetchProvidersForEmail, ReturnValue) == 0x000010, "Member 'FetchProvidersForEmailProxy_FetchProvidersForEmail::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.SignInWithCustomTokenProxy.SignInWithCustomToken
// 0x0018 (0x0018 - 0x0000)
struct SignInWithCustomTokenProxy_SignInWithCustomToken final
{
public:
	class FString                                 Token;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USignInWithCustomTokenProxy*            ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SignInWithCustomTokenProxy_SignInWithCustomToken) == 0x000008, "Wrong alignment on SignInWithCustomTokenProxy_SignInWithCustomToken");
static_assert(sizeof(SignInWithCustomTokenProxy_SignInWithCustomToken) == 0x000018, "Wrong size on SignInWithCustomTokenProxy_SignInWithCustomToken");
static_assert(offsetof(SignInWithCustomTokenProxy_SignInWithCustomToken, Token) == 0x000000, "Member 'SignInWithCustomTokenProxy_SignInWithCustomToken::Token' has a wrong offset!");
static_assert(offsetof(SignInWithCustomTokenProxy_SignInWithCustomToken, ReturnValue) == 0x000010, "Member 'SignInWithCustomTokenProxy_SignInWithCustomToken::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.GetAnalyticsInstanceIdProxy.GetAnalyticsInstanceId
// 0x0008 (0x0008 - 0x0000)
struct GetAnalyticsInstanceIdProxy_GetAnalyticsInstanceId final
{
public:
	class UGetAnalyticsInstanceIdProxy*           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GetAnalyticsInstanceIdProxy_GetAnalyticsInstanceId) == 0x000008, "Wrong alignment on GetAnalyticsInstanceIdProxy_GetAnalyticsInstanceId");
static_assert(sizeof(GetAnalyticsInstanceIdProxy_GetAnalyticsInstanceId) == 0x000008, "Wrong size on GetAnalyticsInstanceIdProxy_GetAnalyticsInstanceId");
static_assert(offsetof(GetAnalyticsInstanceIdProxy_GetAnalyticsInstanceId, ReturnValue) == 0x000000, "Member 'GetAnalyticsInstanceIdProxy_GetAnalyticsInstanceId::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.User.ProviderData
// 0x0010 (0x0010 - 0x0000)
struct User_ProviderData final
{
public:
	TArray<struct FUserInfoInterface>             ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(User_ProviderData) == 0x000008, "Wrong alignment on User_ProviderData");
static_assert(sizeof(User_ProviderData) == 0x000010, "Wrong size on User_ProviderData");
static_assert(offsetof(User_ProviderData, ReturnValue) == 0x000000, "Member 'User_ProviderData::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.User.DisplayName
// 0x0010 (0x0010 - 0x0000)
struct User_DisplayName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(User_DisplayName) == 0x000008, "Wrong alignment on User_DisplayName");
static_assert(sizeof(User_DisplayName) == 0x000010, "Wrong size on User_DisplayName");
static_assert(offsetof(User_DisplayName, ReturnValue) == 0x000000, "Member 'User_DisplayName::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.User.Email
// 0x0010 (0x0010 - 0x0000)
struct User_Email final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(User_Email) == 0x000008, "Wrong alignment on User_Email");
static_assert(sizeof(User_Email) == 0x000010, "Wrong size on User_Email");
static_assert(offsetof(User_Email, ReturnValue) == 0x000000, "Member 'User_Email::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.User.IsAnonymous
// 0x0001 (0x0001 - 0x0000)
struct User_IsAnonymous final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(User_IsAnonymous) == 0x000001, "Wrong alignment on User_IsAnonymous");
static_assert(sizeof(User_IsAnonymous) == 0x000001, "Wrong size on User_IsAnonymous");
static_assert(offsetof(User_IsAnonymous, ReturnValue) == 0x000000, "Member 'User_IsAnonymous::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.User.IsEmailVerified
// 0x0001 (0x0001 - 0x0000)
struct User_IsEmailVerified final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(User_IsEmailVerified) == 0x000001, "Wrong alignment on User_IsEmailVerified");
static_assert(sizeof(User_IsEmailVerified) == 0x000001, "Wrong size on User_IsEmailVerified");
static_assert(offsetof(User_IsEmailVerified, ReturnValue) == 0x000000, "Member 'User_IsEmailVerified::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.User.Metadata
// 0x0010 (0x0010 - 0x0000)
struct User_Metadata final
{
public:
	struct FUserMetadata                          ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(User_Metadata) == 0x000008, "Wrong alignment on User_Metadata");
static_assert(sizeof(User_Metadata) == 0x000010, "Wrong size on User_Metadata");
static_assert(offsetof(User_Metadata, ReturnValue) == 0x000000, "Member 'User_Metadata::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.User.PhoneNumber
// 0x0010 (0x0010 - 0x0000)
struct User_PhoneNumber final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(User_PhoneNumber) == 0x000008, "Wrong alignment on User_PhoneNumber");
static_assert(sizeof(User_PhoneNumber) == 0x000010, "Wrong size on User_PhoneNumber");
static_assert(offsetof(User_PhoneNumber, ReturnValue) == 0x000000, "Member 'User_PhoneNumber::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.User.PhotoUrl
// 0x0010 (0x0010 - 0x0000)
struct User_PhotoUrl final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(User_PhotoUrl) == 0x000008, "Wrong alignment on User_PhotoUrl");
static_assert(sizeof(User_PhotoUrl) == 0x000010, "Wrong size on User_PhotoUrl");
static_assert(offsetof(User_PhotoUrl, ReturnValue) == 0x000000, "Member 'User_PhotoUrl::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.User.ProviderId
// 0x0010 (0x0010 - 0x0000)
struct User_ProviderId final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(User_ProviderId) == 0x000008, "Wrong alignment on User_ProviderId");
static_assert(sizeof(User_ProviderId) == 0x000010, "Wrong size on User_ProviderId");
static_assert(offsetof(User_ProviderId, ReturnValue) == 0x000000, "Member 'User_ProviderId::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.User.Uid
// 0x0010 (0x0010 - 0x0000)
struct User_Uid final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(User_Uid) == 0x000008, "Wrong alignment on User_Uid");
static_assert(sizeof(User_Uid) == 0x000010, "Wrong size on User_Uid");
static_assert(offsetof(User_Uid, ReturnValue) == 0x000000, "Member 'User_Uid::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.SignInWithCredentialProxy.SignInWithCredential
// 0x0010 (0x0010 - 0x0000)
struct SignInWithCredentialProxy_SignInWithCredential final
{
public:
	struct FCredential                            Credential;                                        // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class USignInWithCredentialProxy*             ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SignInWithCredentialProxy_SignInWithCredential) == 0x000008, "Wrong alignment on SignInWithCredentialProxy_SignInWithCredential");
static_assert(sizeof(SignInWithCredentialProxy_SignInWithCredential) == 0x000010, "Wrong size on SignInWithCredentialProxy_SignInWithCredential");
static_assert(offsetof(SignInWithCredentialProxy_SignInWithCredential, Credential) == 0x000000, "Member 'SignInWithCredentialProxy_SignInWithCredential::Credential' has a wrong offset!");
static_assert(offsetof(SignInWithCredentialProxy_SignInWithCredential, ReturnValue) == 0x000008, "Member 'SignInWithCredentialProxy_SignInWithCredential::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.SignInWithProviderProxy.SignInWithProvider
// 0x0018 (0x0018 - 0x0000)
struct SignInWithProviderProxy_SignInWithProvider final
{
public:
	struct FFederatedAuthProvider                 AuthProvider;                                      // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class USignInWithProviderProxy*               ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SignInWithProviderProxy_SignInWithProvider) == 0x000008, "Wrong alignment on SignInWithProviderProxy_SignInWithProvider");
static_assert(sizeof(SignInWithProviderProxy_SignInWithProvider) == 0x000018, "Wrong size on SignInWithProviderProxy_SignInWithProvider");
static_assert(offsetof(SignInWithProviderProxy_SignInWithProvider, AuthProvider) == 0x000000, "Member 'SignInWithProviderProxy_SignInWithProvider::AuthProvider' has a wrong offset!");
static_assert(offsetof(SignInWithProviderProxy_SignInWithProvider, ReturnValue) == 0x000010, "Member 'SignInWithProviderProxy_SignInWithProvider::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.CreateInterstitialAd.CreateInterstitialAd
// 0x0018 (0x0018 - 0x0000)
struct CreateInterstitialAd_CreateInterstitialAd final
{
public:
	class FString                                 AdUnitId;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCreateInterstitialAd*                  ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CreateInterstitialAd_CreateInterstitialAd) == 0x000008, "Wrong alignment on CreateInterstitialAd_CreateInterstitialAd");
static_assert(sizeof(CreateInterstitialAd_CreateInterstitialAd) == 0x000018, "Wrong size on CreateInterstitialAd_CreateInterstitialAd");
static_assert(offsetof(CreateInterstitialAd_CreateInterstitialAd, AdUnitId) == 0x000000, "Member 'CreateInterstitialAd_CreateInterstitialAd::AdUnitId' has a wrong offset!");
static_assert(offsetof(CreateInterstitialAd_CreateInterstitialAd, ReturnValue) == 0x000010, "Member 'CreateInterstitialAd_CreateInterstitialAd::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.StorageUpdateMetadataProxy.UpdateMetadata
// 0x0018 (0x0018 - 0x0000)
struct StorageUpdateMetadataProxy_UpdateMetadata final
{
public:
	class UFirebaseStorageReference*              StorageReference;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFirebaseStorageMetadata               Metadata;                                          // 0x0008(0x0001)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStorageUpdateMetadataProxy*            ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StorageUpdateMetadataProxy_UpdateMetadata) == 0x000008, "Wrong alignment on StorageUpdateMetadataProxy_UpdateMetadata");
static_assert(sizeof(StorageUpdateMetadataProxy_UpdateMetadata) == 0x000018, "Wrong size on StorageUpdateMetadataProxy_UpdateMetadata");
static_assert(offsetof(StorageUpdateMetadataProxy_UpdateMetadata, StorageReference) == 0x000000, "Member 'StorageUpdateMetadataProxy_UpdateMetadata::StorageReference' has a wrong offset!");
static_assert(offsetof(StorageUpdateMetadataProxy_UpdateMetadata, Metadata) == 0x000008, "Member 'StorageUpdateMetadataProxy_UpdateMetadata::Metadata' has a wrong offset!");
static_assert(offsetof(StorageUpdateMetadataProxy_UpdateMetadata, ReturnValue) == 0x000010, "Member 'StorageUpdateMetadataProxy_UpdateMetadata::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.SignInAndRetrieveDataWithCredentialProxy.SignInAndRetrieveDataWithCredential
// 0x0010 (0x0010 - 0x0000)
struct SignInAndRetrieveDataWithCredentialProxy_SignInAndRetrieveDataWithCredential final
{
public:
	struct FCredential                            Credential;                                        // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class USignInAndRetrieveDataWithCredentialProxy* ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SignInAndRetrieveDataWithCredentialProxy_SignInAndRetrieveDataWithCredential) == 0x000008, "Wrong alignment on SignInAndRetrieveDataWithCredentialProxy_SignInAndRetrieveDataWithCredential");
static_assert(sizeof(SignInAndRetrieveDataWithCredentialProxy_SignInAndRetrieveDataWithCredential) == 0x000010, "Wrong size on SignInAndRetrieveDataWithCredentialProxy_SignInAndRetrieveDataWithCredential");
static_assert(offsetof(SignInAndRetrieveDataWithCredentialProxy_SignInAndRetrieveDataWithCredential, Credential) == 0x000000, "Member 'SignInAndRetrieveDataWithCredentialProxy_SignInAndRetrieveDataWithCredential::Credential' has a wrong offset!");
static_assert(offsetof(SignInAndRetrieveDataWithCredentialProxy_SignInAndRetrieveDataWithCredential, ReturnValue) == 0x000008, "Member 'SignInAndRetrieveDataWithCredentialProxy_SignInAndRetrieveDataWithCredential::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.SignInAnonymouslyProxy.SignInAnonymously
// 0x0008 (0x0008 - 0x0000)
struct SignInAnonymouslyProxy_SignInAnonymously final
{
public:
	class USignInAnonymouslyProxy*                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SignInAnonymouslyProxy_SignInAnonymously) == 0x000008, "Wrong alignment on SignInAnonymouslyProxy_SignInAnonymously");
static_assert(sizeof(SignInAnonymouslyProxy_SignInAnonymously) == 0x000008, "Wrong size on SignInAnonymouslyProxy_SignInAnonymously");
static_assert(offsetof(SignInAnonymouslyProxy_SignInAnonymously, ReturnValue) == 0x000000, "Member 'SignInAnonymouslyProxy_SignInAnonymously::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.UpdatePasswordProxy.UpdatePassword
// 0x0020 (0x0020 - 0x0000)
struct UpdatePasswordProxy_UpdatePassword final
{
public:
	const class UUser*                            User;                                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Password;                                          // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUpdatePasswordProxy*                   ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UpdatePasswordProxy_UpdatePassword) == 0x000008, "Wrong alignment on UpdatePasswordProxy_UpdatePassword");
static_assert(sizeof(UpdatePasswordProxy_UpdatePassword) == 0x000020, "Wrong size on UpdatePasswordProxy_UpdatePassword");
static_assert(offsetof(UpdatePasswordProxy_UpdatePassword, User) == 0x000000, "Member 'UpdatePasswordProxy_UpdatePassword::User' has a wrong offset!");
static_assert(offsetof(UpdatePasswordProxy_UpdatePassword, Password) == 0x000008, "Member 'UpdatePasswordProxy_UpdatePassword::Password' has a wrong offset!");
static_assert(offsetof(UpdatePasswordProxy_UpdatePassword, ReturnValue) == 0x000018, "Member 'UpdatePasswordProxy_UpdatePassword::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.SignInWithEmailAndPasswordProxy.SignInWithEmailAndPassword
// 0x0028 (0x0028 - 0x0000)
struct SignInWithEmailAndPasswordProxy_SignInWithEmailAndPassword final
{
public:
	class FString                                 Email;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Password;                                          // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USignInWithEmailAndPasswordProxy*       ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SignInWithEmailAndPasswordProxy_SignInWithEmailAndPassword) == 0x000008, "Wrong alignment on SignInWithEmailAndPasswordProxy_SignInWithEmailAndPassword");
static_assert(sizeof(SignInWithEmailAndPasswordProxy_SignInWithEmailAndPassword) == 0x000028, "Wrong size on SignInWithEmailAndPasswordProxy_SignInWithEmailAndPassword");
static_assert(offsetof(SignInWithEmailAndPasswordProxy_SignInWithEmailAndPassword, Email) == 0x000000, "Member 'SignInWithEmailAndPasswordProxy_SignInWithEmailAndPassword::Email' has a wrong offset!");
static_assert(offsetof(SignInWithEmailAndPasswordProxy_SignInWithEmailAndPassword, Password) == 0x000010, "Member 'SignInWithEmailAndPasswordProxy_SignInWithEmailAndPassword::Password' has a wrong offset!");
static_assert(offsetof(SignInWithEmailAndPasswordProxy_SignInWithEmailAndPassword, ReturnValue) == 0x000020, "Member 'SignInWithEmailAndPasswordProxy_SignInWithEmailAndPassword::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.CrashlyticsLibrary.DidCrashDuringPreviousExecution
// 0x0001 (0x0001 - 0x0000)
struct CrashlyticsLibrary_DidCrashDuringPreviousExecution final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CrashlyticsLibrary_DidCrashDuringPreviousExecution) == 0x000001, "Wrong alignment on CrashlyticsLibrary_DidCrashDuringPreviousExecution");
static_assert(sizeof(CrashlyticsLibrary_DidCrashDuringPreviousExecution) == 0x000001, "Wrong size on CrashlyticsLibrary_DidCrashDuringPreviousExecution");
static_assert(offsetof(CrashlyticsLibrary_DidCrashDuringPreviousExecution, ReturnValue) == 0x000000, "Member 'CrashlyticsLibrary_DidCrashDuringPreviousExecution::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.CrashlyticsLibrary.IsCrashlyticsCollectionEnabled
// 0x0001 (0x0001 - 0x0000)
struct CrashlyticsLibrary_IsCrashlyticsCollectionEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CrashlyticsLibrary_IsCrashlyticsCollectionEnabled) == 0x000001, "Wrong alignment on CrashlyticsLibrary_IsCrashlyticsCollectionEnabled");
static_assert(sizeof(CrashlyticsLibrary_IsCrashlyticsCollectionEnabled) == 0x000001, "Wrong size on CrashlyticsLibrary_IsCrashlyticsCollectionEnabled");
static_assert(offsetof(CrashlyticsLibrary_IsCrashlyticsCollectionEnabled, ReturnValue) == 0x000000, "Member 'CrashlyticsLibrary_IsCrashlyticsCollectionEnabled::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.CrashlyticsLibrary.Log
// 0x0010 (0x0010 - 0x0000)
struct CrashlyticsLibrary_Log final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CrashlyticsLibrary_Log) == 0x000008, "Wrong alignment on CrashlyticsLibrary_Log");
static_assert(sizeof(CrashlyticsLibrary_Log) == 0x000010, "Wrong size on CrashlyticsLibrary_Log");
static_assert(offsetof(CrashlyticsLibrary_Log, Message) == 0x000000, "Member 'CrashlyticsLibrary_Log::Message' has a wrong offset!");

// Function FirebaseFeatures.CrashlyticsLibrary.RecordError
// 0x0028 (0x0028 - 0x0000)
struct CrashlyticsLibrary_RecordError final
{
public:
	class FString                                 Domain;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Message;                                           // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         Code;                                              // 0x0020(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CrashlyticsLibrary_RecordError) == 0x000008, "Wrong alignment on CrashlyticsLibrary_RecordError");
static_assert(sizeof(CrashlyticsLibrary_RecordError) == 0x000028, "Wrong size on CrashlyticsLibrary_RecordError");
static_assert(offsetof(CrashlyticsLibrary_RecordError, Domain) == 0x000000, "Member 'CrashlyticsLibrary_RecordError::Domain' has a wrong offset!");
static_assert(offsetof(CrashlyticsLibrary_RecordError, Message) == 0x000010, "Member 'CrashlyticsLibrary_RecordError::Message' has a wrong offset!");
static_assert(offsetof(CrashlyticsLibrary_RecordError, Code) == 0x000020, "Member 'CrashlyticsLibrary_RecordError::Code' has a wrong offset!");

// Function FirebaseFeatures.CrashlyticsLibrary.SetCrashlyticsCollectionEnabled
// 0x0001 (0x0001 - 0x0000)
struct CrashlyticsLibrary_SetCrashlyticsCollectionEnabled final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CrashlyticsLibrary_SetCrashlyticsCollectionEnabled) == 0x000001, "Wrong alignment on CrashlyticsLibrary_SetCrashlyticsCollectionEnabled");
static_assert(sizeof(CrashlyticsLibrary_SetCrashlyticsCollectionEnabled) == 0x000001, "Wrong size on CrashlyticsLibrary_SetCrashlyticsCollectionEnabled");
static_assert(offsetof(CrashlyticsLibrary_SetCrashlyticsCollectionEnabled, bEnabled) == 0x000000, "Member 'CrashlyticsLibrary_SetCrashlyticsCollectionEnabled::bEnabled' has a wrong offset!");

// Function FirebaseFeatures.CrashlyticsLibrary.SetCustomBoolValue
// 0x0018 (0x0018 - 0x0000)
struct CrashlyticsLibrary_SetCustomBoolValue final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Value;                                             // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CrashlyticsLibrary_SetCustomBoolValue) == 0x000008, "Wrong alignment on CrashlyticsLibrary_SetCustomBoolValue");
static_assert(sizeof(CrashlyticsLibrary_SetCustomBoolValue) == 0x000018, "Wrong size on CrashlyticsLibrary_SetCustomBoolValue");
static_assert(offsetof(CrashlyticsLibrary_SetCustomBoolValue, Key) == 0x000000, "Member 'CrashlyticsLibrary_SetCustomBoolValue::Key' has a wrong offset!");
static_assert(offsetof(CrashlyticsLibrary_SetCustomBoolValue, Value) == 0x000010, "Member 'CrashlyticsLibrary_SetCustomBoolValue::Value' has a wrong offset!");

// Function FirebaseFeatures.CrashlyticsLibrary.SetCustomFloatValue
// 0x0018 (0x0018 - 0x0000)
struct CrashlyticsLibrary_SetCustomFloatValue final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CrashlyticsLibrary_SetCustomFloatValue) == 0x000008, "Wrong alignment on CrashlyticsLibrary_SetCustomFloatValue");
static_assert(sizeof(CrashlyticsLibrary_SetCustomFloatValue) == 0x000018, "Wrong size on CrashlyticsLibrary_SetCustomFloatValue");
static_assert(offsetof(CrashlyticsLibrary_SetCustomFloatValue, Key) == 0x000000, "Member 'CrashlyticsLibrary_SetCustomFloatValue::Key' has a wrong offset!");
static_assert(offsetof(CrashlyticsLibrary_SetCustomFloatValue, Value) == 0x000010, "Member 'CrashlyticsLibrary_SetCustomFloatValue::Value' has a wrong offset!");

// Function FirebaseFeatures.CrashlyticsLibrary.SetCustomInt32Value
// 0x0018 (0x0018 - 0x0000)
struct CrashlyticsLibrary_SetCustomInt32Value final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Value;                                             // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CrashlyticsLibrary_SetCustomInt32Value) == 0x000008, "Wrong alignment on CrashlyticsLibrary_SetCustomInt32Value");
static_assert(sizeof(CrashlyticsLibrary_SetCustomInt32Value) == 0x000018, "Wrong size on CrashlyticsLibrary_SetCustomInt32Value");
static_assert(offsetof(CrashlyticsLibrary_SetCustomInt32Value, Key) == 0x000000, "Member 'CrashlyticsLibrary_SetCustomInt32Value::Key' has a wrong offset!");
static_assert(offsetof(CrashlyticsLibrary_SetCustomInt32Value, Value) == 0x000010, "Member 'CrashlyticsLibrary_SetCustomInt32Value::Value' has a wrong offset!");

// Function FirebaseFeatures.CrashlyticsLibrary.SetCustomInt64Value
// 0x0018 (0x0018 - 0x0000)
struct CrashlyticsLibrary_SetCustomInt64Value final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         Value;                                             // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CrashlyticsLibrary_SetCustomInt64Value) == 0x000008, "Wrong alignment on CrashlyticsLibrary_SetCustomInt64Value");
static_assert(sizeof(CrashlyticsLibrary_SetCustomInt64Value) == 0x000018, "Wrong size on CrashlyticsLibrary_SetCustomInt64Value");
static_assert(offsetof(CrashlyticsLibrary_SetCustomInt64Value, Key) == 0x000000, "Member 'CrashlyticsLibrary_SetCustomInt64Value::Key' has a wrong offset!");
static_assert(offsetof(CrashlyticsLibrary_SetCustomInt64Value, Value) == 0x000010, "Member 'CrashlyticsLibrary_SetCustomInt64Value::Value' has a wrong offset!");

// Function FirebaseFeatures.CrashlyticsLibrary.SetCustomStringValue
// 0x0020 (0x0020 - 0x0000)
struct CrashlyticsLibrary_SetCustomStringValue final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Value;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CrashlyticsLibrary_SetCustomStringValue) == 0x000008, "Wrong alignment on CrashlyticsLibrary_SetCustomStringValue");
static_assert(sizeof(CrashlyticsLibrary_SetCustomStringValue) == 0x000020, "Wrong size on CrashlyticsLibrary_SetCustomStringValue");
static_assert(offsetof(CrashlyticsLibrary_SetCustomStringValue, Key) == 0x000000, "Member 'CrashlyticsLibrary_SetCustomStringValue::Key' has a wrong offset!");
static_assert(offsetof(CrashlyticsLibrary_SetCustomStringValue, Value) == 0x000010, "Member 'CrashlyticsLibrary_SetCustomStringValue::Value' has a wrong offset!");

// Function FirebaseFeatures.CrashlyticsLibrary.SetCustomVectorValue
// 0x0028 (0x0028 - 0x0000)
struct CrashlyticsLibrary_SetCustomVectorValue final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Value;                                             // 0x0010(0x0018)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CrashlyticsLibrary_SetCustomVectorValue) == 0x000008, "Wrong alignment on CrashlyticsLibrary_SetCustomVectorValue");
static_assert(sizeof(CrashlyticsLibrary_SetCustomVectorValue) == 0x000028, "Wrong size on CrashlyticsLibrary_SetCustomVectorValue");
static_assert(offsetof(CrashlyticsLibrary_SetCustomVectorValue, Key) == 0x000000, "Member 'CrashlyticsLibrary_SetCustomVectorValue::Key' has a wrong offset!");
static_assert(offsetof(CrashlyticsLibrary_SetCustomVectorValue, Value) == 0x000010, "Member 'CrashlyticsLibrary_SetCustomVectorValue::Value' has a wrong offset!");

// Function FirebaseFeatures.CrashlyticsLibrary.SetUserID
// 0x0010 (0x0010 - 0x0000)
struct CrashlyticsLibrary_SetUserID final
{
public:
	class FString                                 UserId;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CrashlyticsLibrary_SetUserID) == 0x000008, "Wrong alignment on CrashlyticsLibrary_SetUserID");
static_assert(sizeof(CrashlyticsLibrary_SetUserID) == 0x000010, "Wrong size on CrashlyticsLibrary_SetUserID");
static_assert(offsetof(CrashlyticsLibrary_SetUserID, UserId) == 0x000000, "Member 'CrashlyticsLibrary_SetUserID::UserId' has a wrong offset!");

// Function FirebaseFeatures.CreateUserWithEmailAndPasswordProxy.CreateUserWithEmailAndPassword
// 0x0028 (0x0028 - 0x0000)
struct CreateUserWithEmailAndPasswordProxy_CreateUserWithEmailAndPassword final
{
public:
	class FString                                 Email;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Password;                                          // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCreateUserWithEmailAndPasswordProxy*   ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CreateUserWithEmailAndPasswordProxy_CreateUserWithEmailAndPassword) == 0x000008, "Wrong alignment on CreateUserWithEmailAndPasswordProxy_CreateUserWithEmailAndPassword");
static_assert(sizeof(CreateUserWithEmailAndPasswordProxy_CreateUserWithEmailAndPassword) == 0x000028, "Wrong size on CreateUserWithEmailAndPasswordProxy_CreateUserWithEmailAndPassword");
static_assert(offsetof(CreateUserWithEmailAndPasswordProxy_CreateUserWithEmailAndPassword, Email) == 0x000000, "Member 'CreateUserWithEmailAndPasswordProxy_CreateUserWithEmailAndPassword::Email' has a wrong offset!");
static_assert(offsetof(CreateUserWithEmailAndPasswordProxy_CreateUserWithEmailAndPassword, Password) == 0x000010, "Member 'CreateUserWithEmailAndPasswordProxy_CreateUserWithEmailAndPassword::Password' has a wrong offset!");
static_assert(offsetof(CreateUserWithEmailAndPasswordProxy_CreateUserWithEmailAndPassword, ReturnValue) == 0x000020, "Member 'CreateUserWithEmailAndPasswordProxy_CreateUserWithEmailAndPassword::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.UpdatePhoneNumberCredentialProxy.UpdatePhoneNumberCredential
// 0x0018 (0x0018 - 0x0000)
struct UpdatePhoneNumberCredentialProxy_UpdatePhoneNumberCredential final
{
public:
	const class UUser*                            User;                                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCredential                            Credential;                                        // 0x0008(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UUpdatePhoneNumberCredentialProxy*      ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UpdatePhoneNumberCredentialProxy_UpdatePhoneNumberCredential) == 0x000008, "Wrong alignment on UpdatePhoneNumberCredentialProxy_UpdatePhoneNumberCredential");
static_assert(sizeof(UpdatePhoneNumberCredentialProxy_UpdatePhoneNumberCredential) == 0x000018, "Wrong size on UpdatePhoneNumberCredentialProxy_UpdatePhoneNumberCredential");
static_assert(offsetof(UpdatePhoneNumberCredentialProxy_UpdatePhoneNumberCredential, User) == 0x000000, "Member 'UpdatePhoneNumberCredentialProxy_UpdatePhoneNumberCredential::User' has a wrong offset!");
static_assert(offsetof(UpdatePhoneNumberCredentialProxy_UpdatePhoneNumberCredential, Credential) == 0x000008, "Member 'UpdatePhoneNumberCredentialProxy_UpdatePhoneNumberCredential::Credential' has a wrong offset!");
static_assert(offsetof(UpdatePhoneNumberCredentialProxy_UpdatePhoneNumberCredential, ReturnValue) == 0x000010, "Member 'UpdatePhoneNumberCredentialProxy_UpdatePhoneNumberCredential::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.SendPasswordResetEmailProxy.SendPasswordResetEmail
// 0x0018 (0x0018 - 0x0000)
struct SendPasswordResetEmailProxy_SendPasswordResetEmail final
{
public:
	class FString                                 Email;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USendPasswordResetEmailProxy*           ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SendPasswordResetEmailProxy_SendPasswordResetEmail) == 0x000008, "Wrong alignment on SendPasswordResetEmailProxy_SendPasswordResetEmail");
static_assert(sizeof(SendPasswordResetEmailProxy_SendPasswordResetEmail) == 0x000018, "Wrong size on SendPasswordResetEmailProxy_SendPasswordResetEmail");
static_assert(offsetof(SendPasswordResetEmailProxy_SendPasswordResetEmail, Email) == 0x000000, "Member 'SendPasswordResetEmailProxy_SendPasswordResetEmail::Email' has a wrong offset!");
static_assert(offsetof(SendPasswordResetEmailProxy_SendPasswordResetEmail, ReturnValue) == 0x000010, "Member 'SendPasswordResetEmailProxy_SendPasswordResetEmail::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.ListenAuthEventsProxy.ListenAuthEvents
// 0x0008 (0x0008 - 0x0000)
struct ListenAuthEventsProxy_ListenAuthEvents final
{
public:
	class UListenAuthEventsProxy*                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ListenAuthEventsProxy_ListenAuthEvents) == 0x000008, "Wrong alignment on ListenAuthEventsProxy_ListenAuthEvents");
static_assert(sizeof(ListenAuthEventsProxy_ListenAuthEvents) == 0x000008, "Wrong size on ListenAuthEventsProxy_ListenAuthEvents");
static_assert(offsetof(ListenAuthEventsProxy_ListenAuthEvents, ReturnValue) == 0x000000, "Member 'ListenAuthEventsProxy_ListenAuthEvents::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.SendEmailVerificationProxy.SendEmailVerification
// 0x0010 (0x0010 - 0x0000)
struct SendEmailVerificationProxy_SendEmailVerification final
{
public:
	const class UUser*                            User;                                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USendEmailVerificationProxy*            ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SendEmailVerificationProxy_SendEmailVerification) == 0x000008, "Wrong alignment on SendEmailVerificationProxy_SendEmailVerification");
static_assert(sizeof(SendEmailVerificationProxy_SendEmailVerification) == 0x000010, "Wrong size on SendEmailVerificationProxy_SendEmailVerification");
static_assert(offsetof(SendEmailVerificationProxy_SendEmailVerification, User) == 0x000000, "Member 'SendEmailVerificationProxy_SendEmailVerification::User' has a wrong offset!");
static_assert(offsetof(SendEmailVerificationProxy_SendEmailVerification, ReturnValue) == 0x000008, "Member 'SendEmailVerificationProxy_SendEmailVerification::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.AppleSignInGetCred.GetCredential
// 0x0018 (0x0018 - 0x0000)
struct AppleSignInGetCred_GetCredential final
{
public:
	class FString                                 Nonce;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAppleSignInGetCred*                    ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppleSignInGetCred_GetCredential) == 0x000008, "Wrong alignment on AppleSignInGetCred_GetCredential");
static_assert(sizeof(AppleSignInGetCred_GetCredential) == 0x000018, "Wrong size on AppleSignInGetCred_GetCredential");
static_assert(offsetof(AppleSignInGetCred_GetCredential, Nonce) == 0x000000, "Member 'AppleSignInGetCred_GetCredential::Nonce' has a wrong offset!");
static_assert(offsetof(AppleSignInGetCred_GetCredential, ReturnValue) == 0x000010, "Member 'AppleSignInGetCred_GetCredential::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.Database.GetInstance
// 0x0008 (0x0008 - 0x0000)
struct Database_GetInstance final
{
public:
	class UDatabase*                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Database_GetInstance) == 0x000008, "Wrong alignment on Database_GetInstance");
static_assert(sizeof(Database_GetInstance) == 0x000008, "Wrong size on Database_GetInstance");
static_assert(offsetof(Database_GetInstance, ReturnValue) == 0x000000, "Member 'Database_GetInstance::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.Database.GetInstanceFromUrl
// 0x0018 (0x0018 - 0x0000)
struct Database_GetInstanceFromUrl final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDatabase*                              ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Database_GetInstanceFromUrl) == 0x000008, "Wrong alignment on Database_GetInstanceFromUrl");
static_assert(sizeof(Database_GetInstanceFromUrl) == 0x000018, "Wrong size on Database_GetInstanceFromUrl");
static_assert(offsetof(Database_GetInstanceFromUrl, URL) == 0x000000, "Member 'Database_GetInstanceFromUrl::URL' has a wrong offset!");
static_assert(offsetof(Database_GetInstanceFromUrl, ReturnValue) == 0x000010, "Member 'Database_GetInstanceFromUrl::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.Database.GetInstanceReference
// 0x0008 (0x0008 - 0x0000)
struct Database_GetInstanceReference final
{
public:
	class UDatabaseReference*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Database_GetInstanceReference) == 0x000008, "Wrong alignment on Database_GetInstanceReference");
static_assert(sizeof(Database_GetInstanceReference) == 0x000008, "Wrong size on Database_GetInstanceReference");
static_assert(offsetof(Database_GetInstanceReference, ReturnValue) == 0x000000, "Member 'Database_GetInstanceReference::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.Database.GetUrl
// 0x0010 (0x0010 - 0x0000)
struct Database_GetUrl final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Database_GetUrl) == 0x000008, "Wrong alignment on Database_GetUrl");
static_assert(sizeof(Database_GetUrl) == 0x000010, "Wrong size on Database_GetUrl");
static_assert(offsetof(Database_GetUrl, ReturnValue) == 0x000000, "Member 'Database_GetUrl::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.Database.SetLogLevel
// 0x0001 (0x0001 - 0x0000)
struct Database_SetLogLevel final
{
public:
	EDatabaseLogLevel                             DatabaseLogLevel;                                  // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Database_SetLogLevel) == 0x000001, "Wrong alignment on Database_SetLogLevel");
static_assert(sizeof(Database_SetLogLevel) == 0x000001, "Wrong size on Database_SetLogLevel");
static_assert(offsetof(Database_SetLogLevel, DatabaseLogLevel) == 0x000000, "Member 'Database_SetLogLevel::DatabaseLogLevel' has a wrong offset!");

// Function FirebaseFeatures.Database.SetPersistenceEnabled
// 0x0001 (0x0001 - 0x0000)
struct Database_SetPersistenceEnabled final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Database_SetPersistenceEnabled) == 0x000001, "Wrong alignment on Database_SetPersistenceEnabled");
static_assert(sizeof(Database_SetPersistenceEnabled) == 0x000001, "Wrong size on Database_SetPersistenceEnabled");
static_assert(offsetof(Database_SetPersistenceEnabled, bEnabled) == 0x000000, "Member 'Database_SetPersistenceEnabled::bEnabled' has a wrong offset!");

// Function FirebaseFeatures.Database.GetReference
// 0x0008 (0x0008 - 0x0000)
struct Database_GetReference final
{
public:
	class UDatabaseReference*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Database_GetReference) == 0x000008, "Wrong alignment on Database_GetReference");
static_assert(sizeof(Database_GetReference) == 0x000008, "Wrong size on Database_GetReference");
static_assert(offsetof(Database_GetReference, ReturnValue) == 0x000000, "Member 'Database_GetReference::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.Database.GetReferenceFromPath
// 0x0018 (0x0018 - 0x0000)
struct Database_GetReferenceFromPath final
{
public:
	class FString                                 Path;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDatabaseReference*                     ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Database_GetReferenceFromPath) == 0x000008, "Wrong alignment on Database_GetReferenceFromPath");
static_assert(sizeof(Database_GetReferenceFromPath) == 0x000018, "Wrong size on Database_GetReferenceFromPath");
static_assert(offsetof(Database_GetReferenceFromPath, Path) == 0x000000, "Member 'Database_GetReferenceFromPath::Path' has a wrong offset!");
static_assert(offsetof(Database_GetReferenceFromPath, ReturnValue) == 0x000010, "Member 'Database_GetReferenceFromPath::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.Database.GetReferenceFromUrl
// 0x0018 (0x0018 - 0x0000)
struct Database_GetReferenceFromUrl final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDatabaseReference*                     ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Database_GetReferenceFromUrl) == 0x000008, "Wrong alignment on Database_GetReferenceFromUrl");
static_assert(sizeof(Database_GetReferenceFromUrl) == 0x000018, "Wrong size on Database_GetReferenceFromUrl");
static_assert(offsetof(Database_GetReferenceFromUrl, URL) == 0x000000, "Member 'Database_GetReferenceFromUrl::URL' has a wrong offset!");
static_assert(offsetof(Database_GetReferenceFromUrl, ReturnValue) == 0x000010, "Member 'Database_GetReferenceFromUrl::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.AppleSignInGetNativeCred.GetCredential
// 0x0018 (0x0018 - 0x0000)
struct AppleSignInGetNativeCred_GetCredential final
{
public:
	class FString                                 Nonce;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAppleSignInGetNativeCred*              ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AppleSignInGetNativeCred_GetCredential) == 0x000008, "Wrong alignment on AppleSignInGetNativeCred_GetCredential");
static_assert(sizeof(AppleSignInGetNativeCred_GetCredential) == 0x000018, "Wrong size on AppleSignInGetNativeCred_GetCredential");
static_assert(offsetof(AppleSignInGetNativeCred_GetCredential, Nonce) == 0x000000, "Member 'AppleSignInGetNativeCred_GetCredential::Nonce' has a wrong offset!");
static_assert(offsetof(AppleSignInGetNativeCred_GetCredential, ReturnValue) == 0x000010, "Member 'AppleSignInGetNativeCred_GetCredential::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.GetTokenProxy.GetToken
// 0x0018 (0x0018 - 0x0000)
struct GetTokenProxy_GetToken final
{
public:
	const class UUser*                            User;                                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceRefresh;                                     // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGetTokenProxy*                         ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GetTokenProxy_GetToken) == 0x000008, "Wrong alignment on GetTokenProxy_GetToken");
static_assert(sizeof(GetTokenProxy_GetToken) == 0x000018, "Wrong size on GetTokenProxy_GetToken");
static_assert(offsetof(GetTokenProxy_GetToken, User) == 0x000000, "Member 'GetTokenProxy_GetToken::User' has a wrong offset!");
static_assert(offsetof(GetTokenProxy_GetToken, bForceRefresh) == 0x000008, "Member 'GetTokenProxy_GetToken::bForceRefresh' has a wrong offset!");
static_assert(offsetof(GetTokenProxy_GetToken, ReturnValue) == 0x000010, "Member 'GetTokenProxy_GetToken::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreQuery.AddSnapshotListener
// 0x0028 (0x0028 - 0x0000)
struct FirestoreQuery_AddSnapshotListener final
{
public:
	TDelegate<void(EFirestoreError Error, TArray<struct FFirestoreDocumentSnapshot>& DocumentSnapshots, TArray<class UFirestoreDocumentChange*>& DocumentChanges)> Listener;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FQuerySnapshotListenerHandle           ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreQuery_AddSnapshotListener) == 0x000008, "Wrong alignment on FirestoreQuery_AddSnapshotListener");
static_assert(sizeof(FirestoreQuery_AddSnapshotListener) == 0x000028, "Wrong size on FirestoreQuery_AddSnapshotListener");
static_assert(offsetof(FirestoreQuery_AddSnapshotListener, Listener) == 0x000000, "Member 'FirestoreQuery_AddSnapshotListener::Listener' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_AddSnapshotListener, ReturnValue) == 0x000010, "Member 'FirestoreQuery_AddSnapshotListener::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreQuery.EndAt
// 0x0018 (0x0018 - 0x0000)
struct FirestoreQuery_EndAt final
{
public:
	struct FFirestoreDocumentSnapshot             Snapshot;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UFirestoreQuery*                        ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreQuery_EndAt) == 0x000008, "Wrong alignment on FirestoreQuery_EndAt");
static_assert(sizeof(FirestoreQuery_EndAt) == 0x000018, "Wrong size on FirestoreQuery_EndAt");
static_assert(offsetof(FirestoreQuery_EndAt, Snapshot) == 0x000000, "Member 'FirestoreQuery_EndAt::Snapshot' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_EndAt, ReturnValue) == 0x000010, "Member 'FirestoreQuery_EndAt::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreQuery.EndAtValues
// 0x0018 (0x0018 - 0x0000)
struct FirestoreQuery_EndAtValues final
{
public:
	TArray<struct FFirestoreFieldValue>           Values;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class UFirestoreQuery*                        ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreQuery_EndAtValues) == 0x000008, "Wrong alignment on FirestoreQuery_EndAtValues");
static_assert(sizeof(FirestoreQuery_EndAtValues) == 0x000018, "Wrong size on FirestoreQuery_EndAtValues");
static_assert(offsetof(FirestoreQuery_EndAtValues, Values) == 0x000000, "Member 'FirestoreQuery_EndAtValues::Values' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_EndAtValues, ReturnValue) == 0x000010, "Member 'FirestoreQuery_EndAtValues::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreQuery.EndBefore
// 0x0018 (0x0018 - 0x0000)
struct FirestoreQuery_EndBefore final
{
public:
	struct FFirestoreDocumentSnapshot             Snapshot;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UFirestoreQuery*                        ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreQuery_EndBefore) == 0x000008, "Wrong alignment on FirestoreQuery_EndBefore");
static_assert(sizeof(FirestoreQuery_EndBefore) == 0x000018, "Wrong size on FirestoreQuery_EndBefore");
static_assert(offsetof(FirestoreQuery_EndBefore, Snapshot) == 0x000000, "Member 'FirestoreQuery_EndBefore::Snapshot' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_EndBefore, ReturnValue) == 0x000010, "Member 'FirestoreQuery_EndBefore::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreQuery.EndBeforeFieldValue
// 0x0018 (0x0018 - 0x0000)
struct FirestoreQuery_EndBeforeFieldValue final
{
public:
	TArray<struct FFirestoreFieldValue>           Values;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class UFirestoreQuery*                        ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreQuery_EndBeforeFieldValue) == 0x000008, "Wrong alignment on FirestoreQuery_EndBeforeFieldValue");
static_assert(sizeof(FirestoreQuery_EndBeforeFieldValue) == 0x000018, "Wrong size on FirestoreQuery_EndBeforeFieldValue");
static_assert(offsetof(FirestoreQuery_EndBeforeFieldValue, Values) == 0x000000, "Member 'FirestoreQuery_EndBeforeFieldValue::Values' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_EndBeforeFieldValue, ReturnValue) == 0x000010, "Member 'FirestoreQuery_EndBeforeFieldValue::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreQuery.Limit
// 0x0010 (0x0010 - 0x0000)
struct FirestoreQuery_Limit final
{
public:
	int32                                         Param_Limit;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFirestoreQuery*                        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreQuery_Limit) == 0x000008, "Wrong alignment on FirestoreQuery_Limit");
static_assert(sizeof(FirestoreQuery_Limit) == 0x000010, "Wrong size on FirestoreQuery_Limit");
static_assert(offsetof(FirestoreQuery_Limit, Param_Limit) == 0x000000, "Member 'FirestoreQuery_Limit::Param_Limit' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_Limit, ReturnValue) == 0x000008, "Member 'FirestoreQuery_Limit::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreQuery.LimitToLast
// 0x0010 (0x0010 - 0x0000)
struct FirestoreQuery_LimitToLast final
{
public:
	int32                                         Limit;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFirestoreQuery*                        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreQuery_LimitToLast) == 0x000008, "Wrong alignment on FirestoreQuery_LimitToLast");
static_assert(sizeof(FirestoreQuery_LimitToLast) == 0x000010, "Wrong size on FirestoreQuery_LimitToLast");
static_assert(offsetof(FirestoreQuery_LimitToLast, Limit) == 0x000000, "Member 'FirestoreQuery_LimitToLast::Limit' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_LimitToLast, ReturnValue) == 0x000008, "Member 'FirestoreQuery_LimitToLast::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreQuery.OrderBy
// 0x0020 (0x0020 - 0x0000)
struct FirestoreQuery_OrderBy final
{
public:
	class FString                                 Field;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFirestoreQueryDirection                      Direction;                                         // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFirestoreQuery*                        ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreQuery_OrderBy) == 0x000008, "Wrong alignment on FirestoreQuery_OrderBy");
static_assert(sizeof(FirestoreQuery_OrderBy) == 0x000020, "Wrong size on FirestoreQuery_OrderBy");
static_assert(offsetof(FirestoreQuery_OrderBy, Field) == 0x000000, "Member 'FirestoreQuery_OrderBy::Field' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_OrderBy, Direction) == 0x000010, "Member 'FirestoreQuery_OrderBy::Direction' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_OrderBy, ReturnValue) == 0x000018, "Member 'FirestoreQuery_OrderBy::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreQuery.OrderByFieldPath
// 0x0018 (0x0018 - 0x0000)
struct FirestoreQuery_OrderByFieldPath final
{
public:
	struct FFirestoreFieldPath                    Field;                                             // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFirestoreQueryDirection                      Direction;                                         // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFirestoreQuery*                        ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreQuery_OrderByFieldPath) == 0x000008, "Wrong alignment on FirestoreQuery_OrderByFieldPath");
static_assert(sizeof(FirestoreQuery_OrderByFieldPath) == 0x000018, "Wrong size on FirestoreQuery_OrderByFieldPath");
static_assert(offsetof(FirestoreQuery_OrderByFieldPath, Field) == 0x000000, "Member 'FirestoreQuery_OrderByFieldPath::Field' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_OrderByFieldPath, Direction) == 0x000008, "Member 'FirestoreQuery_OrderByFieldPath::Direction' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_OrderByFieldPath, ReturnValue) == 0x000010, "Member 'FirestoreQuery_OrderByFieldPath::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreQuery.StartAfter
// 0x0018 (0x0018 - 0x0000)
struct FirestoreQuery_StartAfter final
{
public:
	struct FFirestoreDocumentSnapshot             Snapshot;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UFirestoreQuery*                        ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreQuery_StartAfter) == 0x000008, "Wrong alignment on FirestoreQuery_StartAfter");
static_assert(sizeof(FirestoreQuery_StartAfter) == 0x000018, "Wrong size on FirestoreQuery_StartAfter");
static_assert(offsetof(FirestoreQuery_StartAfter, Snapshot) == 0x000000, "Member 'FirestoreQuery_StartAfter::Snapshot' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_StartAfter, ReturnValue) == 0x000010, "Member 'FirestoreQuery_StartAfter::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreQuery.StartAfterFieldValue
// 0x0018 (0x0018 - 0x0000)
struct FirestoreQuery_StartAfterFieldValue final
{
public:
	TArray<struct FFirestoreFieldValue>           Values;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class UFirestoreQuery*                        ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreQuery_StartAfterFieldValue) == 0x000008, "Wrong alignment on FirestoreQuery_StartAfterFieldValue");
static_assert(sizeof(FirestoreQuery_StartAfterFieldValue) == 0x000018, "Wrong size on FirestoreQuery_StartAfterFieldValue");
static_assert(offsetof(FirestoreQuery_StartAfterFieldValue, Values) == 0x000000, "Member 'FirestoreQuery_StartAfterFieldValue::Values' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_StartAfterFieldValue, ReturnValue) == 0x000010, "Member 'FirestoreQuery_StartAfterFieldValue::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreQuery.StartAt
// 0x0018 (0x0018 - 0x0000)
struct FirestoreQuery_StartAt final
{
public:
	struct FFirestoreDocumentSnapshot             Snapshot;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UFirestoreQuery*                        ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreQuery_StartAt) == 0x000008, "Wrong alignment on FirestoreQuery_StartAt");
static_assert(sizeof(FirestoreQuery_StartAt) == 0x000018, "Wrong size on FirestoreQuery_StartAt");
static_assert(offsetof(FirestoreQuery_StartAt, Snapshot) == 0x000000, "Member 'FirestoreQuery_StartAt::Snapshot' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_StartAt, ReturnValue) == 0x000010, "Member 'FirestoreQuery_StartAt::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreQuery.StartAtFieldValue
// 0x0018 (0x0018 - 0x0000)
struct FirestoreQuery_StartAtFieldValue final
{
public:
	TArray<struct FFirestoreFieldValue>           Values;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class UFirestoreQuery*                        ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreQuery_StartAtFieldValue) == 0x000008, "Wrong alignment on FirestoreQuery_StartAtFieldValue");
static_assert(sizeof(FirestoreQuery_StartAtFieldValue) == 0x000018, "Wrong size on FirestoreQuery_StartAtFieldValue");
static_assert(offsetof(FirestoreQuery_StartAtFieldValue, Values) == 0x000000, "Member 'FirestoreQuery_StartAtFieldValue::Values' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_StartAtFieldValue, ReturnValue) == 0x000010, "Member 'FirestoreQuery_StartAtFieldValue::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreQuery.WhereArrayContains
// 0x0020 (0x0020 - 0x0000)
struct FirestoreQuery_WhereArrayContains final
{
public:
	class FString                                 Field;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFirestoreFieldValue                   Value;                                             // 0x0010(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UFirestoreQuery*                        ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreQuery_WhereArrayContains) == 0x000008, "Wrong alignment on FirestoreQuery_WhereArrayContains");
static_assert(sizeof(FirestoreQuery_WhereArrayContains) == 0x000020, "Wrong size on FirestoreQuery_WhereArrayContains");
static_assert(offsetof(FirestoreQuery_WhereArrayContains, Field) == 0x000000, "Member 'FirestoreQuery_WhereArrayContains::Field' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_WhereArrayContains, Value) == 0x000010, "Member 'FirestoreQuery_WhereArrayContains::Value' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_WhereArrayContains, ReturnValue) == 0x000018, "Member 'FirestoreQuery_WhereArrayContains::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreQuery.WhereArrayContainsAny
// 0x0028 (0x0028 - 0x0000)
struct FirestoreQuery_WhereArrayContainsAny final
{
public:
	class FString                                 Field;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFirestoreFieldValue>           Values;                                            // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class UFirestoreQuery*                        ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreQuery_WhereArrayContainsAny) == 0x000008, "Wrong alignment on FirestoreQuery_WhereArrayContainsAny");
static_assert(sizeof(FirestoreQuery_WhereArrayContainsAny) == 0x000028, "Wrong size on FirestoreQuery_WhereArrayContainsAny");
static_assert(offsetof(FirestoreQuery_WhereArrayContainsAny, Field) == 0x000000, "Member 'FirestoreQuery_WhereArrayContainsAny::Field' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_WhereArrayContainsAny, Values) == 0x000010, "Member 'FirestoreQuery_WhereArrayContainsAny::Values' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_WhereArrayContainsAny, ReturnValue) == 0x000020, "Member 'FirestoreQuery_WhereArrayContainsAny::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreQuery.WhereArrayContainsAnyFielPath
// 0x0020 (0x0020 - 0x0000)
struct FirestoreQuery_WhereArrayContainsAnyFielPath final
{
public:
	struct FFirestoreFieldPath                    Field;                                             // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFirestoreFieldValue>           Values;                                            // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class UFirestoreQuery*                        ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreQuery_WhereArrayContainsAnyFielPath) == 0x000008, "Wrong alignment on FirestoreQuery_WhereArrayContainsAnyFielPath");
static_assert(sizeof(FirestoreQuery_WhereArrayContainsAnyFielPath) == 0x000020, "Wrong size on FirestoreQuery_WhereArrayContainsAnyFielPath");
static_assert(offsetof(FirestoreQuery_WhereArrayContainsAnyFielPath, Field) == 0x000000, "Member 'FirestoreQuery_WhereArrayContainsAnyFielPath::Field' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_WhereArrayContainsAnyFielPath, Values) == 0x000008, "Member 'FirestoreQuery_WhereArrayContainsAnyFielPath::Values' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_WhereArrayContainsAnyFielPath, ReturnValue) == 0x000018, "Member 'FirestoreQuery_WhereArrayContainsAnyFielPath::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreQuery.WhereArrayContainsFieldPath
// 0x0018 (0x0018 - 0x0000)
struct FirestoreQuery_WhereArrayContainsFieldPath final
{
public:
	struct FFirestoreFieldPath                    Field;                                             // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFirestoreFieldValue                   Value;                                             // 0x0008(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UFirestoreQuery*                        ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreQuery_WhereArrayContainsFieldPath) == 0x000008, "Wrong alignment on FirestoreQuery_WhereArrayContainsFieldPath");
static_assert(sizeof(FirestoreQuery_WhereArrayContainsFieldPath) == 0x000018, "Wrong size on FirestoreQuery_WhereArrayContainsFieldPath");
static_assert(offsetof(FirestoreQuery_WhereArrayContainsFieldPath, Field) == 0x000000, "Member 'FirestoreQuery_WhereArrayContainsFieldPath::Field' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_WhereArrayContainsFieldPath, Value) == 0x000008, "Member 'FirestoreQuery_WhereArrayContainsFieldPath::Value' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_WhereArrayContainsFieldPath, ReturnValue) == 0x000010, "Member 'FirestoreQuery_WhereArrayContainsFieldPath::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreQuery.WhereEqualTo
// 0x0020 (0x0020 - 0x0000)
struct FirestoreQuery_WhereEqualTo final
{
public:
	class FString                                 Field;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFirestoreFieldValue                   Value;                                             // 0x0010(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UFirestoreQuery*                        ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreQuery_WhereEqualTo) == 0x000008, "Wrong alignment on FirestoreQuery_WhereEqualTo");
static_assert(sizeof(FirestoreQuery_WhereEqualTo) == 0x000020, "Wrong size on FirestoreQuery_WhereEqualTo");
static_assert(offsetof(FirestoreQuery_WhereEqualTo, Field) == 0x000000, "Member 'FirestoreQuery_WhereEqualTo::Field' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_WhereEqualTo, Value) == 0x000010, "Member 'FirestoreQuery_WhereEqualTo::Value' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_WhereEqualTo, ReturnValue) == 0x000018, "Member 'FirestoreQuery_WhereEqualTo::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreQuery.WhereEqualToFieldPath
// 0x0018 (0x0018 - 0x0000)
struct FirestoreQuery_WhereEqualToFieldPath final
{
public:
	struct FFirestoreFieldPath                    Field;                                             // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFirestoreFieldValue                   Value;                                             // 0x0008(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UFirestoreQuery*                        ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreQuery_WhereEqualToFieldPath) == 0x000008, "Wrong alignment on FirestoreQuery_WhereEqualToFieldPath");
static_assert(sizeof(FirestoreQuery_WhereEqualToFieldPath) == 0x000018, "Wrong size on FirestoreQuery_WhereEqualToFieldPath");
static_assert(offsetof(FirestoreQuery_WhereEqualToFieldPath, Field) == 0x000000, "Member 'FirestoreQuery_WhereEqualToFieldPath::Field' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_WhereEqualToFieldPath, Value) == 0x000008, "Member 'FirestoreQuery_WhereEqualToFieldPath::Value' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_WhereEqualToFieldPath, ReturnValue) == 0x000010, "Member 'FirestoreQuery_WhereEqualToFieldPath::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreQuery.WhereGreaterThan
// 0x0020 (0x0020 - 0x0000)
struct FirestoreQuery_WhereGreaterThan final
{
public:
	class FString                                 Field;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFirestoreFieldValue                   Value;                                             // 0x0010(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UFirestoreQuery*                        ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreQuery_WhereGreaterThan) == 0x000008, "Wrong alignment on FirestoreQuery_WhereGreaterThan");
static_assert(sizeof(FirestoreQuery_WhereGreaterThan) == 0x000020, "Wrong size on FirestoreQuery_WhereGreaterThan");
static_assert(offsetof(FirestoreQuery_WhereGreaterThan, Field) == 0x000000, "Member 'FirestoreQuery_WhereGreaterThan::Field' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_WhereGreaterThan, Value) == 0x000010, "Member 'FirestoreQuery_WhereGreaterThan::Value' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_WhereGreaterThan, ReturnValue) == 0x000018, "Member 'FirestoreQuery_WhereGreaterThan::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreQuery.WhereGreaterThanFieldPath
// 0x0018 (0x0018 - 0x0000)
struct FirestoreQuery_WhereGreaterThanFieldPath final
{
public:
	struct FFirestoreFieldPath                    Field;                                             // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFirestoreFieldValue                   Value;                                             // 0x0008(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UFirestoreQuery*                        ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreQuery_WhereGreaterThanFieldPath) == 0x000008, "Wrong alignment on FirestoreQuery_WhereGreaterThanFieldPath");
static_assert(sizeof(FirestoreQuery_WhereGreaterThanFieldPath) == 0x000018, "Wrong size on FirestoreQuery_WhereGreaterThanFieldPath");
static_assert(offsetof(FirestoreQuery_WhereGreaterThanFieldPath, Field) == 0x000000, "Member 'FirestoreQuery_WhereGreaterThanFieldPath::Field' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_WhereGreaterThanFieldPath, Value) == 0x000008, "Member 'FirestoreQuery_WhereGreaterThanFieldPath::Value' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_WhereGreaterThanFieldPath, ReturnValue) == 0x000010, "Member 'FirestoreQuery_WhereGreaterThanFieldPath::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreQuery.WhereGreaterThanOrEqualTo
// 0x0020 (0x0020 - 0x0000)
struct FirestoreQuery_WhereGreaterThanOrEqualTo final
{
public:
	class FString                                 Field;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFirestoreFieldValue                   Value;                                             // 0x0010(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UFirestoreQuery*                        ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreQuery_WhereGreaterThanOrEqualTo) == 0x000008, "Wrong alignment on FirestoreQuery_WhereGreaterThanOrEqualTo");
static_assert(sizeof(FirestoreQuery_WhereGreaterThanOrEqualTo) == 0x000020, "Wrong size on FirestoreQuery_WhereGreaterThanOrEqualTo");
static_assert(offsetof(FirestoreQuery_WhereGreaterThanOrEqualTo, Field) == 0x000000, "Member 'FirestoreQuery_WhereGreaterThanOrEqualTo::Field' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_WhereGreaterThanOrEqualTo, Value) == 0x000010, "Member 'FirestoreQuery_WhereGreaterThanOrEqualTo::Value' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_WhereGreaterThanOrEqualTo, ReturnValue) == 0x000018, "Member 'FirestoreQuery_WhereGreaterThanOrEqualTo::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreQuery.WhereGreaterThanOrEqualToFielPath
// 0x0018 (0x0018 - 0x0000)
struct FirestoreQuery_WhereGreaterThanOrEqualToFielPath final
{
public:
	struct FFirestoreFieldPath                    Field;                                             // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFirestoreFieldValue                   Value;                                             // 0x0008(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UFirestoreQuery*                        ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreQuery_WhereGreaterThanOrEqualToFielPath) == 0x000008, "Wrong alignment on FirestoreQuery_WhereGreaterThanOrEqualToFielPath");
static_assert(sizeof(FirestoreQuery_WhereGreaterThanOrEqualToFielPath) == 0x000018, "Wrong size on FirestoreQuery_WhereGreaterThanOrEqualToFielPath");
static_assert(offsetof(FirestoreQuery_WhereGreaterThanOrEqualToFielPath, Field) == 0x000000, "Member 'FirestoreQuery_WhereGreaterThanOrEqualToFielPath::Field' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_WhereGreaterThanOrEqualToFielPath, Value) == 0x000008, "Member 'FirestoreQuery_WhereGreaterThanOrEqualToFielPath::Value' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_WhereGreaterThanOrEqualToFielPath, ReturnValue) == 0x000010, "Member 'FirestoreQuery_WhereGreaterThanOrEqualToFielPath::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreQuery.WhereIn
// 0x0028 (0x0028 - 0x0000)
struct FirestoreQuery_WhereIn final
{
public:
	class FString                                 Field;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFirestoreFieldValue>           Values;                                            // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class UFirestoreQuery*                        ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreQuery_WhereIn) == 0x000008, "Wrong alignment on FirestoreQuery_WhereIn");
static_assert(sizeof(FirestoreQuery_WhereIn) == 0x000028, "Wrong size on FirestoreQuery_WhereIn");
static_assert(offsetof(FirestoreQuery_WhereIn, Field) == 0x000000, "Member 'FirestoreQuery_WhereIn::Field' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_WhereIn, Values) == 0x000010, "Member 'FirestoreQuery_WhereIn::Values' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_WhereIn, ReturnValue) == 0x000020, "Member 'FirestoreQuery_WhereIn::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreQuery.WhereInFieldPath
// 0x0020 (0x0020 - 0x0000)
struct FirestoreQuery_WhereInFieldPath final
{
public:
	struct FFirestoreFieldPath                    Field;                                             // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFirestoreFieldValue>           Values;                                            // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class UFirestoreQuery*                        ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreQuery_WhereInFieldPath) == 0x000008, "Wrong alignment on FirestoreQuery_WhereInFieldPath");
static_assert(sizeof(FirestoreQuery_WhereInFieldPath) == 0x000020, "Wrong size on FirestoreQuery_WhereInFieldPath");
static_assert(offsetof(FirestoreQuery_WhereInFieldPath, Field) == 0x000000, "Member 'FirestoreQuery_WhereInFieldPath::Field' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_WhereInFieldPath, Values) == 0x000008, "Member 'FirestoreQuery_WhereInFieldPath::Values' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_WhereInFieldPath, ReturnValue) == 0x000018, "Member 'FirestoreQuery_WhereInFieldPath::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreQuery.WhereLessThan
// 0x0020 (0x0020 - 0x0000)
struct FirestoreQuery_WhereLessThan final
{
public:
	class FString                                 Field;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFirestoreFieldValue                   Value;                                             // 0x0010(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UFirestoreQuery*                        ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreQuery_WhereLessThan) == 0x000008, "Wrong alignment on FirestoreQuery_WhereLessThan");
static_assert(sizeof(FirestoreQuery_WhereLessThan) == 0x000020, "Wrong size on FirestoreQuery_WhereLessThan");
static_assert(offsetof(FirestoreQuery_WhereLessThan, Field) == 0x000000, "Member 'FirestoreQuery_WhereLessThan::Field' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_WhereLessThan, Value) == 0x000010, "Member 'FirestoreQuery_WhereLessThan::Value' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_WhereLessThan, ReturnValue) == 0x000018, "Member 'FirestoreQuery_WhereLessThan::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreQuery.WhereLessThanFieldPath
// 0x0018 (0x0018 - 0x0000)
struct FirestoreQuery_WhereLessThanFieldPath final
{
public:
	struct FFirestoreFieldPath                    Field;                                             // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFirestoreFieldValue                   Value;                                             // 0x0008(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UFirestoreQuery*                        ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreQuery_WhereLessThanFieldPath) == 0x000008, "Wrong alignment on FirestoreQuery_WhereLessThanFieldPath");
static_assert(sizeof(FirestoreQuery_WhereLessThanFieldPath) == 0x000018, "Wrong size on FirestoreQuery_WhereLessThanFieldPath");
static_assert(offsetof(FirestoreQuery_WhereLessThanFieldPath, Field) == 0x000000, "Member 'FirestoreQuery_WhereLessThanFieldPath::Field' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_WhereLessThanFieldPath, Value) == 0x000008, "Member 'FirestoreQuery_WhereLessThanFieldPath::Value' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_WhereLessThanFieldPath, ReturnValue) == 0x000010, "Member 'FirestoreQuery_WhereLessThanFieldPath::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreQuery.WhereLessThanOrEqualTo
// 0x0020 (0x0020 - 0x0000)
struct FirestoreQuery_WhereLessThanOrEqualTo final
{
public:
	class FString                                 Field;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFirestoreFieldValue                   Value;                                             // 0x0010(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UFirestoreQuery*                        ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreQuery_WhereLessThanOrEqualTo) == 0x000008, "Wrong alignment on FirestoreQuery_WhereLessThanOrEqualTo");
static_assert(sizeof(FirestoreQuery_WhereLessThanOrEqualTo) == 0x000020, "Wrong size on FirestoreQuery_WhereLessThanOrEqualTo");
static_assert(offsetof(FirestoreQuery_WhereLessThanOrEqualTo, Field) == 0x000000, "Member 'FirestoreQuery_WhereLessThanOrEqualTo::Field' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_WhereLessThanOrEqualTo, Value) == 0x000010, "Member 'FirestoreQuery_WhereLessThanOrEqualTo::Value' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_WhereLessThanOrEqualTo, ReturnValue) == 0x000018, "Member 'FirestoreQuery_WhereLessThanOrEqualTo::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreQuery.WhereLessThanOrEqualToFieldPath
// 0x0018 (0x0018 - 0x0000)
struct FirestoreQuery_WhereLessThanOrEqualToFieldPath final
{
public:
	struct FFirestoreFieldPath                    Field;                                             // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFirestoreFieldValue                   Value;                                             // 0x0008(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UFirestoreQuery*                        ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreQuery_WhereLessThanOrEqualToFieldPath) == 0x000008, "Wrong alignment on FirestoreQuery_WhereLessThanOrEqualToFieldPath");
static_assert(sizeof(FirestoreQuery_WhereLessThanOrEqualToFieldPath) == 0x000018, "Wrong size on FirestoreQuery_WhereLessThanOrEqualToFieldPath");
static_assert(offsetof(FirestoreQuery_WhereLessThanOrEqualToFieldPath, Field) == 0x000000, "Member 'FirestoreQuery_WhereLessThanOrEqualToFieldPath::Field' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_WhereLessThanOrEqualToFieldPath, Value) == 0x000008, "Member 'FirestoreQuery_WhereLessThanOrEqualToFieldPath::Value' has a wrong offset!");
static_assert(offsetof(FirestoreQuery_WhereLessThanOrEqualToFieldPath, ReturnValue) == 0x000010, "Member 'FirestoreQuery_WhereLessThanOrEqualToFieldPath::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreQuery.IsValid
// 0x0001 (0x0001 - 0x0000)
struct FirestoreQuery_IsValid final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreQuery_IsValid) == 0x000001, "Wrong alignment on FirestoreQuery_IsValid");
static_assert(sizeof(FirestoreQuery_IsValid) == 0x000001, "Wrong size on FirestoreQuery_IsValid");
static_assert(offsetof(FirestoreQuery_IsValid, ReturnValue) == 0x000000, "Member 'FirestoreQuery_IsValid::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreCollectionReference.GetDocument
// 0x0008 (0x0008 - 0x0000)
struct FirestoreCollectionReference_GetDocument final
{
public:
	class UFirestoreDocumentReference*            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreCollectionReference_GetDocument) == 0x000008, "Wrong alignment on FirestoreCollectionReference_GetDocument");
static_assert(sizeof(FirestoreCollectionReference_GetDocument) == 0x000008, "Wrong size on FirestoreCollectionReference_GetDocument");
static_assert(offsetof(FirestoreCollectionReference_GetDocument, ReturnValue) == 0x000000, "Member 'FirestoreCollectionReference_GetDocument::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreCollectionReference.GetDocumentFromPath
// 0x0018 (0x0018 - 0x0000)
struct FirestoreCollectionReference_GetDocumentFromPath final
{
public:
	class FString                                 DocumentPath;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirestoreDocumentReference*            ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreCollectionReference_GetDocumentFromPath) == 0x000008, "Wrong alignment on FirestoreCollectionReference_GetDocumentFromPath");
static_assert(sizeof(FirestoreCollectionReference_GetDocumentFromPath) == 0x000018, "Wrong size on FirestoreCollectionReference_GetDocumentFromPath");
static_assert(offsetof(FirestoreCollectionReference_GetDocumentFromPath, DocumentPath) == 0x000000, "Member 'FirestoreCollectionReference_GetDocumentFromPath::DocumentPath' has a wrong offset!");
static_assert(offsetof(FirestoreCollectionReference_GetDocumentFromPath, ReturnValue) == 0x000010, "Member 'FirestoreCollectionReference_GetDocumentFromPath::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreCollectionReference.GetId
// 0x0010 (0x0010 - 0x0000)
struct FirestoreCollectionReference_GetId final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreCollectionReference_GetId) == 0x000008, "Wrong alignment on FirestoreCollectionReference_GetId");
static_assert(sizeof(FirestoreCollectionReference_GetId) == 0x000010, "Wrong size on FirestoreCollectionReference_GetId");
static_assert(offsetof(FirestoreCollectionReference_GetId, ReturnValue) == 0x000000, "Member 'FirestoreCollectionReference_GetId::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreCollectionReference.GetParent
// 0x0008 (0x0008 - 0x0000)
struct FirestoreCollectionReference_GetParent final
{
public:
	class UFirestoreDocumentReference*            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreCollectionReference_GetParent) == 0x000008, "Wrong alignment on FirestoreCollectionReference_GetParent");
static_assert(sizeof(FirestoreCollectionReference_GetParent) == 0x000008, "Wrong size on FirestoreCollectionReference_GetParent");
static_assert(offsetof(FirestoreCollectionReference_GetParent, ReturnValue) == 0x000000, "Member 'FirestoreCollectionReference_GetParent::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreCollectionReference.GetPath
// 0x0010 (0x0010 - 0x0000)
struct FirestoreCollectionReference_GetPath final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreCollectionReference_GetPath) == 0x000008, "Wrong alignment on FirestoreCollectionReference_GetPath");
static_assert(sizeof(FirestoreCollectionReference_GetPath) == 0x000010, "Wrong size on FirestoreCollectionReference_GetPath");
static_assert(offsetof(FirestoreCollectionReference_GetPath, ReturnValue) == 0x000000, "Member 'FirestoreCollectionReference_GetPath::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.CredentialLibrary.GetCredential
// 0x0028 (0x0028 - 0x0000)
struct CredentialLibrary_GetCredential final
{
public:
	class FString                                 VerificationId;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 VerificationCode;                                  // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCredential                            ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CredentialLibrary_GetCredential) == 0x000008, "Wrong alignment on CredentialLibrary_GetCredential");
static_assert(sizeof(CredentialLibrary_GetCredential) == 0x000028, "Wrong size on CredentialLibrary_GetCredential");
static_assert(offsetof(CredentialLibrary_GetCredential, VerificationId) == 0x000000, "Member 'CredentialLibrary_GetCredential::VerificationId' has a wrong offset!");
static_assert(offsetof(CredentialLibrary_GetCredential, VerificationCode) == 0x000010, "Member 'CredentialLibrary_GetCredential::VerificationCode' has a wrong offset!");
static_assert(offsetof(CredentialLibrary_GetCredential, ReturnValue) == 0x000020, "Member 'CredentialLibrary_GetCredential::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.CredentialLibrary.GetCredentialFromEmail
// 0x0028 (0x0028 - 0x0000)
struct CredentialLibrary_GetCredentialFromEmail final
{
public:
	class FString                                 Email;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Password;                                          // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCredential                            ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CredentialLibrary_GetCredentialFromEmail) == 0x000008, "Wrong alignment on CredentialLibrary_GetCredentialFromEmail");
static_assert(sizeof(CredentialLibrary_GetCredentialFromEmail) == 0x000028, "Wrong size on CredentialLibrary_GetCredentialFromEmail");
static_assert(offsetof(CredentialLibrary_GetCredentialFromEmail, Email) == 0x000000, "Member 'CredentialLibrary_GetCredentialFromEmail::Email' has a wrong offset!");
static_assert(offsetof(CredentialLibrary_GetCredentialFromEmail, Password) == 0x000010, "Member 'CredentialLibrary_GetCredentialFromEmail::Password' has a wrong offset!");
static_assert(offsetof(CredentialLibrary_GetCredentialFromEmail, ReturnValue) == 0x000020, "Member 'CredentialLibrary_GetCredentialFromEmail::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.CredentialLibrary.GetCredentialFromFacebook
// 0x0018 (0x0018 - 0x0000)
struct CredentialLibrary_GetCredentialFromFacebook final
{
public:
	class FString                                 AccessToken;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCredential                            ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CredentialLibrary_GetCredentialFromFacebook) == 0x000008, "Wrong alignment on CredentialLibrary_GetCredentialFromFacebook");
static_assert(sizeof(CredentialLibrary_GetCredentialFromFacebook) == 0x000018, "Wrong size on CredentialLibrary_GetCredentialFromFacebook");
static_assert(offsetof(CredentialLibrary_GetCredentialFromFacebook, AccessToken) == 0x000000, "Member 'CredentialLibrary_GetCredentialFromFacebook::AccessToken' has a wrong offset!");
static_assert(offsetof(CredentialLibrary_GetCredentialFromFacebook, ReturnValue) == 0x000010, "Member 'CredentialLibrary_GetCredentialFromFacebook::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.CredentialLibrary.GetCredentialFromGitHub
// 0x0018 (0x0018 - 0x0000)
struct CredentialLibrary_GetCredentialFromGitHub final
{
public:
	class FString                                 Token;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCredential                            ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CredentialLibrary_GetCredentialFromGitHub) == 0x000008, "Wrong alignment on CredentialLibrary_GetCredentialFromGitHub");
static_assert(sizeof(CredentialLibrary_GetCredentialFromGitHub) == 0x000018, "Wrong size on CredentialLibrary_GetCredentialFromGitHub");
static_assert(offsetof(CredentialLibrary_GetCredentialFromGitHub, Token) == 0x000000, "Member 'CredentialLibrary_GetCredentialFromGitHub::Token' has a wrong offset!");
static_assert(offsetof(CredentialLibrary_GetCredentialFromGitHub, ReturnValue) == 0x000010, "Member 'CredentialLibrary_GetCredentialFromGitHub::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.CredentialLibrary.GetCredentialFromGoogle
// 0x0028 (0x0028 - 0x0000)
struct CredentialLibrary_GetCredentialFromGoogle final
{
public:
	class FString                                 Token;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AccessToken;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCredential                            ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CredentialLibrary_GetCredentialFromGoogle) == 0x000008, "Wrong alignment on CredentialLibrary_GetCredentialFromGoogle");
static_assert(sizeof(CredentialLibrary_GetCredentialFromGoogle) == 0x000028, "Wrong size on CredentialLibrary_GetCredentialFromGoogle");
static_assert(offsetof(CredentialLibrary_GetCredentialFromGoogle, Token) == 0x000000, "Member 'CredentialLibrary_GetCredentialFromGoogle::Token' has a wrong offset!");
static_assert(offsetof(CredentialLibrary_GetCredentialFromGoogle, AccessToken) == 0x000010, "Member 'CredentialLibrary_GetCredentialFromGoogle::AccessToken' has a wrong offset!");
static_assert(offsetof(CredentialLibrary_GetCredentialFromGoogle, ReturnValue) == 0x000020, "Member 'CredentialLibrary_GetCredentialFromGoogle::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.CredentialLibrary.GetCredentialFromOAuth
// 0x0038 (0x0038 - 0x0000)
struct CredentialLibrary_GetCredentialFromOAuth final
{
public:
	class FString                                 ProviderId;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 IdToken;                                           // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AccessToken;                                       // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCredential                            ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CredentialLibrary_GetCredentialFromOAuth) == 0x000008, "Wrong alignment on CredentialLibrary_GetCredentialFromOAuth");
static_assert(sizeof(CredentialLibrary_GetCredentialFromOAuth) == 0x000038, "Wrong size on CredentialLibrary_GetCredentialFromOAuth");
static_assert(offsetof(CredentialLibrary_GetCredentialFromOAuth, ProviderId) == 0x000000, "Member 'CredentialLibrary_GetCredentialFromOAuth::ProviderId' has a wrong offset!");
static_assert(offsetof(CredentialLibrary_GetCredentialFromOAuth, IdToken) == 0x000010, "Member 'CredentialLibrary_GetCredentialFromOAuth::IdToken' has a wrong offset!");
static_assert(offsetof(CredentialLibrary_GetCredentialFromOAuth, AccessToken) == 0x000020, "Member 'CredentialLibrary_GetCredentialFromOAuth::AccessToken' has a wrong offset!");
static_assert(offsetof(CredentialLibrary_GetCredentialFromOAuth, ReturnValue) == 0x000030, "Member 'CredentialLibrary_GetCredentialFromOAuth::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.CredentialLibrary.GetCredentialFromOAuthWithOnce
// 0x0048 (0x0048 - 0x0000)
struct CredentialLibrary_GetCredentialFromOAuthWithOnce final
{
public:
	class FString                                 ProviderId;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 IdToken;                                           // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Nonce;                                             // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AccessToken;                                       // 0x0030(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCredential                            ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CredentialLibrary_GetCredentialFromOAuthWithOnce) == 0x000008, "Wrong alignment on CredentialLibrary_GetCredentialFromOAuthWithOnce");
static_assert(sizeof(CredentialLibrary_GetCredentialFromOAuthWithOnce) == 0x000048, "Wrong size on CredentialLibrary_GetCredentialFromOAuthWithOnce");
static_assert(offsetof(CredentialLibrary_GetCredentialFromOAuthWithOnce, ProviderId) == 0x000000, "Member 'CredentialLibrary_GetCredentialFromOAuthWithOnce::ProviderId' has a wrong offset!");
static_assert(offsetof(CredentialLibrary_GetCredentialFromOAuthWithOnce, IdToken) == 0x000010, "Member 'CredentialLibrary_GetCredentialFromOAuthWithOnce::IdToken' has a wrong offset!");
static_assert(offsetof(CredentialLibrary_GetCredentialFromOAuthWithOnce, Nonce) == 0x000020, "Member 'CredentialLibrary_GetCredentialFromOAuthWithOnce::Nonce' has a wrong offset!");
static_assert(offsetof(CredentialLibrary_GetCredentialFromOAuthWithOnce, AccessToken) == 0x000030, "Member 'CredentialLibrary_GetCredentialFromOAuthWithOnce::AccessToken' has a wrong offset!");
static_assert(offsetof(CredentialLibrary_GetCredentialFromOAuthWithOnce, ReturnValue) == 0x000040, "Member 'CredentialLibrary_GetCredentialFromOAuthWithOnce::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.CredentialLibrary.GetCredentialFromPlayGames
// 0x0018 (0x0018 - 0x0000)
struct CredentialLibrary_GetCredentialFromPlayGames final
{
public:
	class FString                                 ServerAuthCode;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCredential                            ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CredentialLibrary_GetCredentialFromPlayGames) == 0x000008, "Wrong alignment on CredentialLibrary_GetCredentialFromPlayGames");
static_assert(sizeof(CredentialLibrary_GetCredentialFromPlayGames) == 0x000018, "Wrong size on CredentialLibrary_GetCredentialFromPlayGames");
static_assert(offsetof(CredentialLibrary_GetCredentialFromPlayGames, ServerAuthCode) == 0x000000, "Member 'CredentialLibrary_GetCredentialFromPlayGames::ServerAuthCode' has a wrong offset!");
static_assert(offsetof(CredentialLibrary_GetCredentialFromPlayGames, ReturnValue) == 0x000010, "Member 'CredentialLibrary_GetCredentialFromPlayGames::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.CredentialLibrary.GetCredentialFromTwitter
// 0x0028 (0x0028 - 0x0000)
struct CredentialLibrary_GetCredentialFromTwitter final
{
public:
	class FString                                 Token;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Secret;                                            // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCredential                            ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CredentialLibrary_GetCredentialFromTwitter) == 0x000008, "Wrong alignment on CredentialLibrary_GetCredentialFromTwitter");
static_assert(sizeof(CredentialLibrary_GetCredentialFromTwitter) == 0x000028, "Wrong size on CredentialLibrary_GetCredentialFromTwitter");
static_assert(offsetof(CredentialLibrary_GetCredentialFromTwitter, Token) == 0x000000, "Member 'CredentialLibrary_GetCredentialFromTwitter::Token' has a wrong offset!");
static_assert(offsetof(CredentialLibrary_GetCredentialFromTwitter, Secret) == 0x000010, "Member 'CredentialLibrary_GetCredentialFromTwitter::Secret' has a wrong offset!");
static_assert(offsetof(CredentialLibrary_GetCredentialFromTwitter, ReturnValue) == 0x000020, "Member 'CredentialLibrary_GetCredentialFromTwitter::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.CredentialLibrary.IsAuthenticatedWithGameCenter
// 0x0001 (0x0001 - 0x0000)
struct CredentialLibrary_IsAuthenticatedWithGameCenter final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CredentialLibrary_IsAuthenticatedWithGameCenter) == 0x000001, "Wrong alignment on CredentialLibrary_IsAuthenticatedWithGameCenter");
static_assert(sizeof(CredentialLibrary_IsAuthenticatedWithGameCenter) == 0x000001, "Wrong size on CredentialLibrary_IsAuthenticatedWithGameCenter");
static_assert(offsetof(CredentialLibrary_IsAuthenticatedWithGameCenter, ReturnValue) == 0x000000, "Member 'CredentialLibrary_IsAuthenticatedWithGameCenter::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.GetCredentialFromGameCenterProxy.GetCredentialFromGameCenter
// 0x0008 (0x0008 - 0x0000)
struct GetCredentialFromGameCenterProxy_GetCredentialFromGameCenter final
{
public:
	class UGetCredentialFromGameCenterProxy*      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GetCredentialFromGameCenterProxy_GetCredentialFromGameCenter) == 0x000008, "Wrong alignment on GetCredentialFromGameCenterProxy_GetCredentialFromGameCenter");
static_assert(sizeof(GetCredentialFromGameCenterProxy_GetCredentialFromGameCenter) == 0x000008, "Wrong size on GetCredentialFromGameCenterProxy_GetCredentialFromGameCenter");
static_assert(offsetof(GetCredentialFromGameCenterProxy_GetCredentialFromGameCenter, ReturnValue) == 0x000000, "Member 'GetCredentialFromGameCenterProxy_GetCredentialFromGameCenter::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.VerifyPhoneNumberProxy.VerifyPhoneNumber
// 0x0028 (0x0028 - 0x0000)
struct VerifyPhoneNumberProxy_VerifyPhoneNumber final
{
public:
	class FString                                 PhoneNumber;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         AutoVerifyTimeoutInMilliseconds;                   // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FForceResendingToken                   ForceResendingToken;                               // 0x0018(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UVerifyPhoneNumberProxy*                ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VerifyPhoneNumberProxy_VerifyPhoneNumber) == 0x000008, "Wrong alignment on VerifyPhoneNumberProxy_VerifyPhoneNumber");
static_assert(sizeof(VerifyPhoneNumberProxy_VerifyPhoneNumber) == 0x000028, "Wrong size on VerifyPhoneNumberProxy_VerifyPhoneNumber");
static_assert(offsetof(VerifyPhoneNumberProxy_VerifyPhoneNumber, PhoneNumber) == 0x000000, "Member 'VerifyPhoneNumberProxy_VerifyPhoneNumber::PhoneNumber' has a wrong offset!");
static_assert(offsetof(VerifyPhoneNumberProxy_VerifyPhoneNumber, AutoVerifyTimeoutInMilliseconds) == 0x000010, "Member 'VerifyPhoneNumberProxy_VerifyPhoneNumber::AutoVerifyTimeoutInMilliseconds' has a wrong offset!");
static_assert(offsetof(VerifyPhoneNumberProxy_VerifyPhoneNumber, ForceResendingToken) == 0x000018, "Member 'VerifyPhoneNumberProxy_VerifyPhoneNumber::ForceResendingToken' has a wrong offset!");
static_assert(offsetof(VerifyPhoneNumberProxy_VerifyPhoneNumber, ReturnValue) == 0x000020, "Member 'VerifyPhoneNumberProxy_VerifyPhoneNumber::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseDatabaseLibrary.Mutable_GetChild
// 0x0020 (0x0020 - 0x0000)
struct FirebaseDatabaseLibrary_Mutable_GetChild final
{
public:
	struct FMutableData                           MutableData;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Path;                                              // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMutableData                           ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FirebaseDatabaseLibrary_Mutable_GetChild) == 0x000008, "Wrong alignment on FirebaseDatabaseLibrary_Mutable_GetChild");
static_assert(sizeof(FirebaseDatabaseLibrary_Mutable_GetChild) == 0x000020, "Wrong size on FirebaseDatabaseLibrary_Mutable_GetChild");
static_assert(offsetof(FirebaseDatabaseLibrary_Mutable_GetChild, MutableData) == 0x000000, "Member 'FirebaseDatabaseLibrary_Mutable_GetChild::MutableData' has a wrong offset!");
static_assert(offsetof(FirebaseDatabaseLibrary_Mutable_GetChild, Path) == 0x000008, "Member 'FirebaseDatabaseLibrary_Mutable_GetChild::Path' has a wrong offset!");
static_assert(offsetof(FirebaseDatabaseLibrary_Mutable_GetChild, ReturnValue) == 0x000018, "Member 'FirebaseDatabaseLibrary_Mutable_GetChild::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseDatabaseLibrary.Mutable_GetChildren
// 0x0018 (0x0018 - 0x0000)
struct FirebaseDatabaseLibrary_Mutable_GetChildren final
{
public:
	struct FMutableData                           MutableData;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMutableData>                   ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseDatabaseLibrary_Mutable_GetChildren) == 0x000008, "Wrong alignment on FirebaseDatabaseLibrary_Mutable_GetChildren");
static_assert(sizeof(FirebaseDatabaseLibrary_Mutable_GetChildren) == 0x000018, "Wrong size on FirebaseDatabaseLibrary_Mutable_GetChildren");
static_assert(offsetof(FirebaseDatabaseLibrary_Mutable_GetChildren, MutableData) == 0x000000, "Member 'FirebaseDatabaseLibrary_Mutable_GetChildren::MutableData' has a wrong offset!");
static_assert(offsetof(FirebaseDatabaseLibrary_Mutable_GetChildren, ReturnValue) == 0x000008, "Member 'FirebaseDatabaseLibrary_Mutable_GetChildren::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseDatabaseLibrary.Mutable_GetChildrenCount
// 0x0010 (0x0010 - 0x0000)
struct FirebaseDatabaseLibrary_Mutable_GetChildrenCount final
{
public:
	struct FMutableData                           MutableData;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseDatabaseLibrary_Mutable_GetChildrenCount) == 0x000008, "Wrong alignment on FirebaseDatabaseLibrary_Mutable_GetChildrenCount");
static_assert(sizeof(FirebaseDatabaseLibrary_Mutable_GetChildrenCount) == 0x000010, "Wrong size on FirebaseDatabaseLibrary_Mutable_GetChildrenCount");
static_assert(offsetof(FirebaseDatabaseLibrary_Mutable_GetChildrenCount, MutableData) == 0x000000, "Member 'FirebaseDatabaseLibrary_Mutable_GetChildrenCount::MutableData' has a wrong offset!");
static_assert(offsetof(FirebaseDatabaseLibrary_Mutable_GetChildrenCount, ReturnValue) == 0x000008, "Member 'FirebaseDatabaseLibrary_Mutable_GetChildrenCount::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseDatabaseLibrary.Mutable_GetKey
// 0x0018 (0x0018 - 0x0000)
struct FirebaseDatabaseLibrary_Mutable_GetKey final
{
public:
	struct FMutableData                           MutableData;                                       // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseDatabaseLibrary_Mutable_GetKey) == 0x000008, "Wrong alignment on FirebaseDatabaseLibrary_Mutable_GetKey");
static_assert(sizeof(FirebaseDatabaseLibrary_Mutable_GetKey) == 0x000018, "Wrong size on FirebaseDatabaseLibrary_Mutable_GetKey");
static_assert(offsetof(FirebaseDatabaseLibrary_Mutable_GetKey, MutableData) == 0x000000, "Member 'FirebaseDatabaseLibrary_Mutable_GetKey::MutableData' has a wrong offset!");
static_assert(offsetof(FirebaseDatabaseLibrary_Mutable_GetKey, ReturnValue) == 0x000008, "Member 'FirebaseDatabaseLibrary_Mutable_GetKey::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseDatabaseLibrary.Mutable_GetPriority
// 0x0020 (0x0020 - 0x0000)
struct FirebaseDatabaseLibrary_Mutable_GetPriority final
{
public:
	struct FMutableData                           MutableData;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFirebaseVariant                       ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseDatabaseLibrary_Mutable_GetPriority) == 0x000008, "Wrong alignment on FirebaseDatabaseLibrary_Mutable_GetPriority");
static_assert(sizeof(FirebaseDatabaseLibrary_Mutable_GetPriority) == 0x000020, "Wrong size on FirebaseDatabaseLibrary_Mutable_GetPriority");
static_assert(offsetof(FirebaseDatabaseLibrary_Mutable_GetPriority, MutableData) == 0x000000, "Member 'FirebaseDatabaseLibrary_Mutable_GetPriority::MutableData' has a wrong offset!");
static_assert(offsetof(FirebaseDatabaseLibrary_Mutable_GetPriority, ReturnValue) == 0x000008, "Member 'FirebaseDatabaseLibrary_Mutable_GetPriority::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseDatabaseLibrary.Mutable_GetValue
// 0x0020 (0x0020 - 0x0000)
struct FirebaseDatabaseLibrary_Mutable_GetValue final
{
public:
	struct FMutableData                           MutableData;                                       // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFirebaseVariant                       ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseDatabaseLibrary_Mutable_GetValue) == 0x000008, "Wrong alignment on FirebaseDatabaseLibrary_Mutable_GetValue");
static_assert(sizeof(FirebaseDatabaseLibrary_Mutable_GetValue) == 0x000020, "Wrong size on FirebaseDatabaseLibrary_Mutable_GetValue");
static_assert(offsetof(FirebaseDatabaseLibrary_Mutable_GetValue, MutableData) == 0x000000, "Member 'FirebaseDatabaseLibrary_Mutable_GetValue::MutableData' has a wrong offset!");
static_assert(offsetof(FirebaseDatabaseLibrary_Mutable_GetValue, ReturnValue) == 0x000008, "Member 'FirebaseDatabaseLibrary_Mutable_GetValue::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseDatabaseLibrary.Mutable_HasChild
// 0x0020 (0x0020 - 0x0000)
struct FirebaseDatabaseLibrary_Mutable_HasChild final
{
public:
	struct FMutableData                           MutableData;                                       // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Path;                                              // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FirebaseDatabaseLibrary_Mutable_HasChild) == 0x000008, "Wrong alignment on FirebaseDatabaseLibrary_Mutable_HasChild");
static_assert(sizeof(FirebaseDatabaseLibrary_Mutable_HasChild) == 0x000020, "Wrong size on FirebaseDatabaseLibrary_Mutable_HasChild");
static_assert(offsetof(FirebaseDatabaseLibrary_Mutable_HasChild, MutableData) == 0x000000, "Member 'FirebaseDatabaseLibrary_Mutable_HasChild::MutableData' has a wrong offset!");
static_assert(offsetof(FirebaseDatabaseLibrary_Mutable_HasChild, Path) == 0x000008, "Member 'FirebaseDatabaseLibrary_Mutable_HasChild::Path' has a wrong offset!");
static_assert(offsetof(FirebaseDatabaseLibrary_Mutable_HasChild, ReturnValue) == 0x000018, "Member 'FirebaseDatabaseLibrary_Mutable_HasChild::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseDatabaseLibrary.Mutable_SetPriority
// 0x0020 (0x0020 - 0x0000)
struct FirebaseDatabaseLibrary_Mutable_SetPriority final
{
public:
	struct FMutableData                           MutableData;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFirebaseVariant                       Priority;                                          // 0x0008(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseDatabaseLibrary_Mutable_SetPriority) == 0x000008, "Wrong alignment on FirebaseDatabaseLibrary_Mutable_SetPriority");
static_assert(sizeof(FirebaseDatabaseLibrary_Mutable_SetPriority) == 0x000020, "Wrong size on FirebaseDatabaseLibrary_Mutable_SetPriority");
static_assert(offsetof(FirebaseDatabaseLibrary_Mutable_SetPriority, MutableData) == 0x000000, "Member 'FirebaseDatabaseLibrary_Mutable_SetPriority::MutableData' has a wrong offset!");
static_assert(offsetof(FirebaseDatabaseLibrary_Mutable_SetPriority, Priority) == 0x000008, "Member 'FirebaseDatabaseLibrary_Mutable_SetPriority::Priority' has a wrong offset!");

// Function FirebaseFeatures.FirebaseDatabaseLibrary.Mutable_SetValue
// 0x0020 (0x0020 - 0x0000)
struct FirebaseDatabaseLibrary_Mutable_SetValue final
{
public:
	struct FMutableData                           MutableData;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFirebaseVariant                       Value;                                             // 0x0008(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseDatabaseLibrary_Mutable_SetValue) == 0x000008, "Wrong alignment on FirebaseDatabaseLibrary_Mutable_SetValue");
static_assert(sizeof(FirebaseDatabaseLibrary_Mutable_SetValue) == 0x000020, "Wrong size on FirebaseDatabaseLibrary_Mutable_SetValue");
static_assert(offsetof(FirebaseDatabaseLibrary_Mutable_SetValue, MutableData) == 0x000000, "Member 'FirebaseDatabaseLibrary_Mutable_SetValue::MutableData' has a wrong offset!");
static_assert(offsetof(FirebaseDatabaseLibrary_Mutable_SetValue, Value) == 0x000008, "Member 'FirebaseDatabaseLibrary_Mutable_SetValue::Value' has a wrong offset!");

// Function FirebaseFeatures.DisconnectionCancelProxy.Cancel
// 0x0010 (0x0010 - 0x0000)
struct DisconnectionCancelProxy_Cancel final
{
public:
	const class UDisconnectionHandler*            DisconnectionHandler;                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDisconnectionCancelProxy*              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DisconnectionCancelProxy_Cancel) == 0x000008, "Wrong alignment on DisconnectionCancelProxy_Cancel");
static_assert(sizeof(DisconnectionCancelProxy_Cancel) == 0x000010, "Wrong size on DisconnectionCancelProxy_Cancel");
static_assert(offsetof(DisconnectionCancelProxy_Cancel, DisconnectionHandler) == 0x000000, "Member 'DisconnectionCancelProxy_Cancel::DisconnectionHandler' has a wrong offset!");
static_assert(offsetof(DisconnectionCancelProxy_Cancel, ReturnValue) == 0x000008, "Member 'DisconnectionCancelProxy_Cancel::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DisconnectionRemoveValueProxy.RemoveValue
// 0x0010 (0x0010 - 0x0000)
struct DisconnectionRemoveValueProxy_RemoveValue final
{
public:
	const class UDisconnectionHandler*            DisconnectionHandler;                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDisconnectionRemoveValueProxy*         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DisconnectionRemoveValueProxy_RemoveValue) == 0x000008, "Wrong alignment on DisconnectionRemoveValueProxy_RemoveValue");
static_assert(sizeof(DisconnectionRemoveValueProxy_RemoveValue) == 0x000010, "Wrong size on DisconnectionRemoveValueProxy_RemoveValue");
static_assert(offsetof(DisconnectionRemoveValueProxy_RemoveValue, DisconnectionHandler) == 0x000000, "Member 'DisconnectionRemoveValueProxy_RemoveValue::DisconnectionHandler' has a wrong offset!");
static_assert(offsetof(DisconnectionRemoveValueProxy_RemoveValue, ReturnValue) == 0x000008, "Member 'DisconnectionRemoveValueProxy_RemoveValue::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DisconnectionSetValueProxy.SetValue
// 0x0028 (0x0028 - 0x0000)
struct DisconnectionSetValueProxy_SetValue final
{
public:
	const class UDisconnectionHandler*            DisconnectionHandler;                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFirebaseVariant                       Value;                                             // 0x0008(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDisconnectionSetValueProxy*            ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DisconnectionSetValueProxy_SetValue) == 0x000008, "Wrong alignment on DisconnectionSetValueProxy_SetValue");
static_assert(sizeof(DisconnectionSetValueProxy_SetValue) == 0x000028, "Wrong size on DisconnectionSetValueProxy_SetValue");
static_assert(offsetof(DisconnectionSetValueProxy_SetValue, DisconnectionHandler) == 0x000000, "Member 'DisconnectionSetValueProxy_SetValue::DisconnectionHandler' has a wrong offset!");
static_assert(offsetof(DisconnectionSetValueProxy_SetValue, Value) == 0x000008, "Member 'DisconnectionSetValueProxy_SetValue::Value' has a wrong offset!");
static_assert(offsetof(DisconnectionSetValueProxy_SetValue, ReturnValue) == 0x000020, "Member 'DisconnectionSetValueProxy_SetValue::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DisconnectionSetValueAndPriorityProxy.SetValueAndPriority
// 0x0040 (0x0040 - 0x0000)
struct DisconnectionSetValueAndPriorityProxy_SetValueAndPriority final
{
public:
	const class UDisconnectionHandler*            DisconnectionHandler;                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFirebaseVariant                       Value;                                             // 0x0008(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFirebaseVariant                       Priority;                                          // 0x0020(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDisconnectionSetValueAndPriorityProxy* ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DisconnectionSetValueAndPriorityProxy_SetValueAndPriority) == 0x000008, "Wrong alignment on DisconnectionSetValueAndPriorityProxy_SetValueAndPriority");
static_assert(sizeof(DisconnectionSetValueAndPriorityProxy_SetValueAndPriority) == 0x000040, "Wrong size on DisconnectionSetValueAndPriorityProxy_SetValueAndPriority");
static_assert(offsetof(DisconnectionSetValueAndPriorityProxy_SetValueAndPriority, DisconnectionHandler) == 0x000000, "Member 'DisconnectionSetValueAndPriorityProxy_SetValueAndPriority::DisconnectionHandler' has a wrong offset!");
static_assert(offsetof(DisconnectionSetValueAndPriorityProxy_SetValueAndPriority, Value) == 0x000008, "Member 'DisconnectionSetValueAndPriorityProxy_SetValueAndPriority::Value' has a wrong offset!");
static_assert(offsetof(DisconnectionSetValueAndPriorityProxy_SetValueAndPriority, Priority) == 0x000020, "Member 'DisconnectionSetValueAndPriorityProxy_SetValueAndPriority::Priority' has a wrong offset!");
static_assert(offsetof(DisconnectionSetValueAndPriorityProxy_SetValueAndPriority, ReturnValue) == 0x000038, "Member 'DisconnectionSetValueAndPriorityProxy_SetValueAndPriority::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DisconnectionUpdateChildrenProxy.UpdateChildren
// 0x0028 (0x0028 - 0x0000)
struct DisconnectionUpdateChildrenProxy_UpdateChildren final
{
public:
	const class UDisconnectionHandler*            DisconnectionHandler;                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFirebaseVariant                       Value;                                             // 0x0008(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDisconnectionUpdateChildrenProxy*      ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DisconnectionUpdateChildrenProxy_UpdateChildren) == 0x000008, "Wrong alignment on DisconnectionUpdateChildrenProxy_UpdateChildren");
static_assert(sizeof(DisconnectionUpdateChildrenProxy_UpdateChildren) == 0x000028, "Wrong size on DisconnectionUpdateChildrenProxy_UpdateChildren");
static_assert(offsetof(DisconnectionUpdateChildrenProxy_UpdateChildren, DisconnectionHandler) == 0x000000, "Member 'DisconnectionUpdateChildrenProxy_UpdateChildren::DisconnectionHandler' has a wrong offset!");
static_assert(offsetof(DisconnectionUpdateChildrenProxy_UpdateChildren, Value) == 0x000008, "Member 'DisconnectionUpdateChildrenProxy_UpdateChildren::Value' has a wrong offset!");
static_assert(offsetof(DisconnectionUpdateChildrenProxy_UpdateChildren, ReturnValue) == 0x000020, "Member 'DisconnectionUpdateChildrenProxy_UpdateChildren::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DatabaseQueryGetValue.GetValue
// 0x0010 (0x0010 - 0x0000)
struct DatabaseQueryGetValue_GetValue final
{
public:
	const class UDatabaseQuery*                   DatabaseQuery;                                     // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDatabaseQueryGetValue*                 ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DatabaseQueryGetValue_GetValue) == 0x000008, "Wrong alignment on DatabaseQueryGetValue_GetValue");
static_assert(sizeof(DatabaseQueryGetValue_GetValue) == 0x000010, "Wrong size on DatabaseQueryGetValue_GetValue");
static_assert(offsetof(DatabaseQueryGetValue_GetValue, DatabaseQuery) == 0x000000, "Member 'DatabaseQueryGetValue_GetValue::DatabaseQuery' has a wrong offset!");
static_assert(offsetof(DatabaseQueryGetValue_GetValue, ReturnValue) == 0x000008, "Member 'DatabaseQueryGetValue_GetValue::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.RemoveValueProxy.RemoveValue
// 0x0010 (0x0010 - 0x0000)
struct RemoveValueProxy_RemoveValue final
{
public:
	const class UDatabaseReference*               DatabaseReference;                                 // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URemoveValueProxy*                      ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RemoveValueProxy_RemoveValue) == 0x000008, "Wrong alignment on RemoveValueProxy_RemoveValue");
static_assert(sizeof(RemoveValueProxy_RemoveValue) == 0x000010, "Wrong size on RemoveValueProxy_RemoveValue");
static_assert(offsetof(RemoveValueProxy_RemoveValue, DatabaseReference) == 0x000000, "Member 'RemoveValueProxy_RemoveValue::DatabaseReference' has a wrong offset!");
static_assert(offsetof(RemoveValueProxy_RemoveValue, ReturnValue) == 0x000008, "Member 'RemoveValueProxy_RemoveValue::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.RunTransactionProxy.RunTransaction
// 0x0028 (0x0028 - 0x0000)
struct RunTransactionProxy_RunTransaction final
{
public:
	const class UDatabaseReference*               DatabaseReference;                                 // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTriggerLocalEvents;                               // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FMutableData& Data)>    TransactionFunction;                               // 0x000C(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URunTransactionProxy*                   ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RunTransactionProxy_RunTransaction) == 0x000008, "Wrong alignment on RunTransactionProxy_RunTransaction");
static_assert(sizeof(RunTransactionProxy_RunTransaction) == 0x000028, "Wrong size on RunTransactionProxy_RunTransaction");
static_assert(offsetof(RunTransactionProxy_RunTransaction, DatabaseReference) == 0x000000, "Member 'RunTransactionProxy_RunTransaction::DatabaseReference' has a wrong offset!");
static_assert(offsetof(RunTransactionProxy_RunTransaction, bTriggerLocalEvents) == 0x000008, "Member 'RunTransactionProxy_RunTransaction::bTriggerLocalEvents' has a wrong offset!");
static_assert(offsetof(RunTransactionProxy_RunTransaction, TransactionFunction) == 0x00000C, "Member 'RunTransactionProxy_RunTransaction::TransactionFunction' has a wrong offset!");
static_assert(offsetof(RunTransactionProxy_RunTransaction, ReturnValue) == 0x000020, "Member 'RunTransactionProxy_RunTransaction::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.SetPriorityProxy.SetPriority
// 0x0028 (0x0028 - 0x0000)
struct SetPriorityProxy_SetPriority final
{
public:
	const class UDatabaseReference*               DatabaseReference;                                 // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFirebaseVariant                       Priority;                                          // 0x0008(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USetPriorityProxy*                      ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SetPriorityProxy_SetPriority) == 0x000008, "Wrong alignment on SetPriorityProxy_SetPriority");
static_assert(sizeof(SetPriorityProxy_SetPriority) == 0x000028, "Wrong size on SetPriorityProxy_SetPriority");
static_assert(offsetof(SetPriorityProxy_SetPriority, DatabaseReference) == 0x000000, "Member 'SetPriorityProxy_SetPriority::DatabaseReference' has a wrong offset!");
static_assert(offsetof(SetPriorityProxy_SetPriority, Priority) == 0x000008, "Member 'SetPriorityProxy_SetPriority::Priority' has a wrong offset!");
static_assert(offsetof(SetPriorityProxy_SetPriority, ReturnValue) == 0x000020, "Member 'SetPriorityProxy_SetPriority::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.SetValueProxy.SetValue
// 0x0028 (0x0028 - 0x0000)
struct SetValueProxy_SetValue final
{
public:
	const class UDatabaseReference*               DatabaseReference;                                 // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFirebaseVariant                       Value;                                             // 0x0008(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USetValueProxy*                         ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SetValueProxy_SetValue) == 0x000008, "Wrong alignment on SetValueProxy_SetValue");
static_assert(sizeof(SetValueProxy_SetValue) == 0x000028, "Wrong size on SetValueProxy_SetValue");
static_assert(offsetof(SetValueProxy_SetValue, DatabaseReference) == 0x000000, "Member 'SetValueProxy_SetValue::DatabaseReference' has a wrong offset!");
static_assert(offsetof(SetValueProxy_SetValue, Value) == 0x000008, "Member 'SetValueProxy_SetValue::Value' has a wrong offset!");
static_assert(offsetof(SetValueProxy_SetValue, ReturnValue) == 0x000020, "Member 'SetValueProxy_SetValue::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.SetValueAndPriorityProxy.SetValueAndPriority
// 0x0040 (0x0040 - 0x0000)
struct SetValueAndPriorityProxy_SetValueAndPriority final
{
public:
	const class UDatabaseReference*               DatabaseReference;                                 // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFirebaseVariant                       Priority;                                          // 0x0008(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFirebaseVariant                       Value;                                             // 0x0020(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USetValueAndPriorityProxy*              ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SetValueAndPriorityProxy_SetValueAndPriority) == 0x000008, "Wrong alignment on SetValueAndPriorityProxy_SetValueAndPriority");
static_assert(sizeof(SetValueAndPriorityProxy_SetValueAndPriority) == 0x000040, "Wrong size on SetValueAndPriorityProxy_SetValueAndPriority");
static_assert(offsetof(SetValueAndPriorityProxy_SetValueAndPriority, DatabaseReference) == 0x000000, "Member 'SetValueAndPriorityProxy_SetValueAndPriority::DatabaseReference' has a wrong offset!");
static_assert(offsetof(SetValueAndPriorityProxy_SetValueAndPriority, Priority) == 0x000008, "Member 'SetValueAndPriorityProxy_SetValueAndPriority::Priority' has a wrong offset!");
static_assert(offsetof(SetValueAndPriorityProxy_SetValueAndPriority, Value) == 0x000020, "Member 'SetValueAndPriorityProxy_SetValueAndPriority::Value' has a wrong offset!");
static_assert(offsetof(SetValueAndPriorityProxy_SetValueAndPriority, ReturnValue) == 0x000038, "Member 'SetValueAndPriorityProxy_SetValueAndPriority::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.UpdateChildrenProxy.UpdateChildren
// 0x0028 (0x0028 - 0x0000)
struct UpdateChildrenProxy_UpdateChildren final
{
public:
	const class UDatabaseReference*               DatabaseReference;                                 // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFirebaseVariant                       Value;                                             // 0x0008(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUpdateChildrenProxy*                   ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UpdateChildrenProxy_UpdateChildren) == 0x000008, "Wrong alignment on UpdateChildrenProxy_UpdateChildren");
static_assert(sizeof(UpdateChildrenProxy_UpdateChildren) == 0x000028, "Wrong size on UpdateChildrenProxy_UpdateChildren");
static_assert(offsetof(UpdateChildrenProxy_UpdateChildren, DatabaseReference) == 0x000000, "Member 'UpdateChildrenProxy_UpdateChildren::DatabaseReference' has a wrong offset!");
static_assert(offsetof(UpdateChildrenProxy_UpdateChildren, Value) == 0x000008, "Member 'UpdateChildrenProxy_UpdateChildren::Value' has a wrong offset!");
static_assert(offsetof(UpdateChildrenProxy_UpdateChildren, ReturnValue) == 0x000020, "Member 'UpdateChildrenProxy_UpdateChildren::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DataSnapshot.ChildrenCount
// 0x0008 (0x0008 - 0x0000)
struct DataSnapshot_ChildrenCount final
{
public:
	int64                                         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DataSnapshot_ChildrenCount) == 0x000008, "Wrong alignment on DataSnapshot_ChildrenCount");
static_assert(sizeof(DataSnapshot_ChildrenCount) == 0x000008, "Wrong size on DataSnapshot_ChildrenCount");
static_assert(offsetof(DataSnapshot_ChildrenCount, ReturnValue) == 0x000000, "Member 'DataSnapshot_ChildrenCount::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DataSnapshot.Exists
// 0x0001 (0x0001 - 0x0000)
struct DataSnapshot_Exists final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DataSnapshot_Exists) == 0x000001, "Wrong alignment on DataSnapshot_Exists");
static_assert(sizeof(DataSnapshot_Exists) == 0x000001, "Wrong size on DataSnapshot_Exists");
static_assert(offsetof(DataSnapshot_Exists, ReturnValue) == 0x000000, "Member 'DataSnapshot_Exists::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DataSnapshot.GetChild
// 0x0018 (0x0018 - 0x0000)
struct DataSnapshot_GetChild final
{
public:
	class FString                                 Path;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataSnapshot*                          ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DataSnapshot_GetChild) == 0x000008, "Wrong alignment on DataSnapshot_GetChild");
static_assert(sizeof(DataSnapshot_GetChild) == 0x000018, "Wrong size on DataSnapshot_GetChild");
static_assert(offsetof(DataSnapshot_GetChild, Path) == 0x000000, "Member 'DataSnapshot_GetChild::Path' has a wrong offset!");
static_assert(offsetof(DataSnapshot_GetChild, ReturnValue) == 0x000010, "Member 'DataSnapshot_GetChild::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DataSnapshot.GetChildren
// 0x0010 (0x0010 - 0x0000)
struct DataSnapshot_GetChildren final
{
public:
	TArray<class UDataSnapshot*>                  ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(DataSnapshot_GetChildren) == 0x000008, "Wrong alignment on DataSnapshot_GetChildren");
static_assert(sizeof(DataSnapshot_GetChildren) == 0x000010, "Wrong size on DataSnapshot_GetChildren");
static_assert(offsetof(DataSnapshot_GetChildren, ReturnValue) == 0x000000, "Member 'DataSnapshot_GetChildren::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DataSnapshot.GetKey
// 0x0010 (0x0010 - 0x0000)
struct DataSnapshot_GetKey final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DataSnapshot_GetKey) == 0x000008, "Wrong alignment on DataSnapshot_GetKey");
static_assert(sizeof(DataSnapshot_GetKey) == 0x000010, "Wrong size on DataSnapshot_GetKey");
static_assert(offsetof(DataSnapshot_GetKey, ReturnValue) == 0x000000, "Member 'DataSnapshot_GetKey::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DataSnapshot.GetPriority
// 0x0018 (0x0018 - 0x0000)
struct DataSnapshot_GetPriority final
{
public:
	struct FFirebaseVariant                       ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DataSnapshot_GetPriority) == 0x000008, "Wrong alignment on DataSnapshot_GetPriority");
static_assert(sizeof(DataSnapshot_GetPriority) == 0x000018, "Wrong size on DataSnapshot_GetPriority");
static_assert(offsetof(DataSnapshot_GetPriority, ReturnValue) == 0x000000, "Member 'DataSnapshot_GetPriority::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DataSnapshot.GetReference
// 0x0008 (0x0008 - 0x0000)
struct DataSnapshot_GetReference final
{
public:
	class UDatabaseReference*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DataSnapshot_GetReference) == 0x000008, "Wrong alignment on DataSnapshot_GetReference");
static_assert(sizeof(DataSnapshot_GetReference) == 0x000008, "Wrong size on DataSnapshot_GetReference");
static_assert(offsetof(DataSnapshot_GetReference, ReturnValue) == 0x000000, "Member 'DataSnapshot_GetReference::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DataSnapshot.GetValue
// 0x0018 (0x0018 - 0x0000)
struct DataSnapshot_GetValue final
{
public:
	struct FFirebaseVariant                       ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DataSnapshot_GetValue) == 0x000008, "Wrong alignment on DataSnapshot_GetValue");
static_assert(sizeof(DataSnapshot_GetValue) == 0x000018, "Wrong size on DataSnapshot_GetValue");
static_assert(offsetof(DataSnapshot_GetValue, ReturnValue) == 0x000000, "Member 'DataSnapshot_GetValue::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DataSnapshot.HasChild
// 0x0018 (0x0018 - 0x0000)
struct DataSnapshot_HasChild final
{
public:
	class FString                                 Path;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DataSnapshot_HasChild) == 0x000008, "Wrong alignment on DataSnapshot_HasChild");
static_assert(sizeof(DataSnapshot_HasChild) == 0x000018, "Wrong size on DataSnapshot_HasChild");
static_assert(offsetof(DataSnapshot_HasChild, Path) == 0x000000, "Member 'DataSnapshot_HasChild::Path' has a wrong offset!");
static_assert(offsetof(DataSnapshot_HasChild, ReturnValue) == 0x000010, "Member 'DataSnapshot_HasChild::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DataSnapshot.HasChildren
// 0x0001 (0x0001 - 0x0000)
struct DataSnapshot_HasChildren final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DataSnapshot_HasChildren) == 0x000001, "Wrong alignment on DataSnapshot_HasChildren");
static_assert(sizeof(DataSnapshot_HasChildren) == 0x000001, "Wrong size on DataSnapshot_HasChildren");
static_assert(offsetof(DataSnapshot_HasChildren, ReturnValue) == 0x000000, "Member 'DataSnapshot_HasChildren::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DataSnapshot.IsValid
// 0x0001 (0x0001 - 0x0000)
struct DataSnapshot_IsValid final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DataSnapshot_IsValid) == 0x000001, "Wrong alignment on DataSnapshot_IsValid");
static_assert(sizeof(DataSnapshot_IsValid) == 0x000001, "Wrong size on DataSnapshot_IsValid");
static_assert(offsetof(DataSnapshot_IsValid, ReturnValue) == 0x000000, "Member 'DataSnapshot_IsValid::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DataSnapshot.ToJson
// 0x0010 (0x0010 - 0x0000)
struct DataSnapshot_ToJson final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DataSnapshot_ToJson) == 0x000008, "Wrong alignment on DataSnapshot_ToJson");
static_assert(sizeof(DataSnapshot_ToJson) == 0x000010, "Wrong size on DataSnapshot_ToJson");
static_assert(offsetof(DataSnapshot_ToJson, ReturnValue) == 0x000000, "Member 'DataSnapshot_ToJson::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DatabaseQuery.EndAt
// 0x0020 (0x0020 - 0x0000)
struct DatabaseQuery_EndAt final
{
public:
	struct FFirebaseVariant                       OrderValue;                                        // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDatabaseQuery*                         ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DatabaseQuery_EndAt) == 0x000008, "Wrong alignment on DatabaseQuery_EndAt");
static_assert(sizeof(DatabaseQuery_EndAt) == 0x000020, "Wrong size on DatabaseQuery_EndAt");
static_assert(offsetof(DatabaseQuery_EndAt, OrderValue) == 0x000000, "Member 'DatabaseQuery_EndAt::OrderValue' has a wrong offset!");
static_assert(offsetof(DatabaseQuery_EndAt, ReturnValue) == 0x000018, "Member 'DatabaseQuery_EndAt::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DatabaseQuery.EndAtKey
// 0x0030 (0x0030 - 0x0000)
struct DatabaseQuery_EndAtKey final
{
public:
	struct FFirebaseVariant                       OrderValue;                                        // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ChildKey;                                          // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDatabaseQuery*                         ReturnValue;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DatabaseQuery_EndAtKey) == 0x000008, "Wrong alignment on DatabaseQuery_EndAtKey");
static_assert(sizeof(DatabaseQuery_EndAtKey) == 0x000030, "Wrong size on DatabaseQuery_EndAtKey");
static_assert(offsetof(DatabaseQuery_EndAtKey, OrderValue) == 0x000000, "Member 'DatabaseQuery_EndAtKey::OrderValue' has a wrong offset!");
static_assert(offsetof(DatabaseQuery_EndAtKey, ChildKey) == 0x000018, "Member 'DatabaseQuery_EndAtKey::ChildKey' has a wrong offset!");
static_assert(offsetof(DatabaseQuery_EndAtKey, ReturnValue) == 0x000028, "Member 'DatabaseQuery_EndAtKey::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DatabaseQuery.EqualTo
// 0x0020 (0x0020 - 0x0000)
struct DatabaseQuery_EqualTo final
{
public:
	struct FFirebaseVariant                       OrderValue;                                        // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDatabaseQuery*                         ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DatabaseQuery_EqualTo) == 0x000008, "Wrong alignment on DatabaseQuery_EqualTo");
static_assert(sizeof(DatabaseQuery_EqualTo) == 0x000020, "Wrong size on DatabaseQuery_EqualTo");
static_assert(offsetof(DatabaseQuery_EqualTo, OrderValue) == 0x000000, "Member 'DatabaseQuery_EqualTo::OrderValue' has a wrong offset!");
static_assert(offsetof(DatabaseQuery_EqualTo, ReturnValue) == 0x000018, "Member 'DatabaseQuery_EqualTo::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DatabaseQuery.EqualToKey
// 0x0030 (0x0030 - 0x0000)
struct DatabaseQuery_EqualToKey final
{
public:
	struct FFirebaseVariant                       OrderValue;                                        // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ChildKey;                                          // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDatabaseQuery*                         ReturnValue;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DatabaseQuery_EqualToKey) == 0x000008, "Wrong alignment on DatabaseQuery_EqualToKey");
static_assert(sizeof(DatabaseQuery_EqualToKey) == 0x000030, "Wrong size on DatabaseQuery_EqualToKey");
static_assert(offsetof(DatabaseQuery_EqualToKey, OrderValue) == 0x000000, "Member 'DatabaseQuery_EqualToKey::OrderValue' has a wrong offset!");
static_assert(offsetof(DatabaseQuery_EqualToKey, ChildKey) == 0x000018, "Member 'DatabaseQuery_EqualToKey::ChildKey' has a wrong offset!");
static_assert(offsetof(DatabaseQuery_EqualToKey, ReturnValue) == 0x000028, "Member 'DatabaseQuery_EqualToKey::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DatabaseQuery.LimitToFirst
// 0x0010 (0x0010 - 0x0000)
struct DatabaseQuery_LimitToFirst final
{
public:
	int64                                         Limit;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDatabaseQuery*                         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DatabaseQuery_LimitToFirst) == 0x000008, "Wrong alignment on DatabaseQuery_LimitToFirst");
static_assert(sizeof(DatabaseQuery_LimitToFirst) == 0x000010, "Wrong size on DatabaseQuery_LimitToFirst");
static_assert(offsetof(DatabaseQuery_LimitToFirst, Limit) == 0x000000, "Member 'DatabaseQuery_LimitToFirst::Limit' has a wrong offset!");
static_assert(offsetof(DatabaseQuery_LimitToFirst, ReturnValue) == 0x000008, "Member 'DatabaseQuery_LimitToFirst::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DatabaseQuery.LimitToLast
// 0x0010 (0x0010 - 0x0000)
struct DatabaseQuery_LimitToLast final
{
public:
	int64                                         Limit;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDatabaseQuery*                         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DatabaseQuery_LimitToLast) == 0x000008, "Wrong alignment on DatabaseQuery_LimitToLast");
static_assert(sizeof(DatabaseQuery_LimitToLast) == 0x000010, "Wrong size on DatabaseQuery_LimitToLast");
static_assert(offsetof(DatabaseQuery_LimitToLast, Limit) == 0x000000, "Member 'DatabaseQuery_LimitToLast::Limit' has a wrong offset!");
static_assert(offsetof(DatabaseQuery_LimitToLast, ReturnValue) == 0x000008, "Member 'DatabaseQuery_LimitToLast::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DatabaseQuery.OrderByChild
// 0x0018 (0x0018 - 0x0000)
struct DatabaseQuery_OrderByChild final
{
public:
	class FString                                 Path;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDatabaseQuery*                         ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DatabaseQuery_OrderByChild) == 0x000008, "Wrong alignment on DatabaseQuery_OrderByChild");
static_assert(sizeof(DatabaseQuery_OrderByChild) == 0x000018, "Wrong size on DatabaseQuery_OrderByChild");
static_assert(offsetof(DatabaseQuery_OrderByChild, Path) == 0x000000, "Member 'DatabaseQuery_OrderByChild::Path' has a wrong offset!");
static_assert(offsetof(DatabaseQuery_OrderByChild, ReturnValue) == 0x000010, "Member 'DatabaseQuery_OrderByChild::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DatabaseQuery.OrderByKey
// 0x0008 (0x0008 - 0x0000)
struct DatabaseQuery_OrderByKey final
{
public:
	class UDatabaseQuery*                         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DatabaseQuery_OrderByKey) == 0x000008, "Wrong alignment on DatabaseQuery_OrderByKey");
static_assert(sizeof(DatabaseQuery_OrderByKey) == 0x000008, "Wrong size on DatabaseQuery_OrderByKey");
static_assert(offsetof(DatabaseQuery_OrderByKey, ReturnValue) == 0x000000, "Member 'DatabaseQuery_OrderByKey::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DatabaseQuery.OrderByPriority
// 0x0008 (0x0008 - 0x0000)
struct DatabaseQuery_OrderByPriority final
{
public:
	class UDatabaseQuery*                         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DatabaseQuery_OrderByPriority) == 0x000008, "Wrong alignment on DatabaseQuery_OrderByPriority");
static_assert(sizeof(DatabaseQuery_OrderByPriority) == 0x000008, "Wrong size on DatabaseQuery_OrderByPriority");
static_assert(offsetof(DatabaseQuery_OrderByPriority, ReturnValue) == 0x000000, "Member 'DatabaseQuery_OrderByPriority::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DatabaseQuery.OrderByValue
// 0x0008 (0x0008 - 0x0000)
struct DatabaseQuery_OrderByValue final
{
public:
	class UDatabaseQuery*                         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DatabaseQuery_OrderByValue) == 0x000008, "Wrong alignment on DatabaseQuery_OrderByValue");
static_assert(sizeof(DatabaseQuery_OrderByValue) == 0x000008, "Wrong size on DatabaseQuery_OrderByValue");
static_assert(offsetof(DatabaseQuery_OrderByValue, ReturnValue) == 0x000000, "Member 'DatabaseQuery_OrderByValue::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DatabaseQuery.SetKeepSynchronized
// 0x0001 (0x0001 - 0x0000)
struct DatabaseQuery_SetKeepSynchronized final
{
public:
	bool                                          bKeepSync;                                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DatabaseQuery_SetKeepSynchronized) == 0x000001, "Wrong alignment on DatabaseQuery_SetKeepSynchronized");
static_assert(sizeof(DatabaseQuery_SetKeepSynchronized) == 0x000001, "Wrong size on DatabaseQuery_SetKeepSynchronized");
static_assert(offsetof(DatabaseQuery_SetKeepSynchronized, bKeepSync) == 0x000000, "Member 'DatabaseQuery_SetKeepSynchronized::bKeepSync' has a wrong offset!");

// Function FirebaseFeatures.DatabaseQuery.StartAt
// 0x0020 (0x0020 - 0x0000)
struct DatabaseQuery_StartAt final
{
public:
	struct FFirebaseVariant                       OrderValue;                                        // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDatabaseQuery*                         ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DatabaseQuery_StartAt) == 0x000008, "Wrong alignment on DatabaseQuery_StartAt");
static_assert(sizeof(DatabaseQuery_StartAt) == 0x000020, "Wrong size on DatabaseQuery_StartAt");
static_assert(offsetof(DatabaseQuery_StartAt, OrderValue) == 0x000000, "Member 'DatabaseQuery_StartAt::OrderValue' has a wrong offset!");
static_assert(offsetof(DatabaseQuery_StartAt, ReturnValue) == 0x000018, "Member 'DatabaseQuery_StartAt::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DatabaseQuery.StartAtKey
// 0x0030 (0x0030 - 0x0000)
struct DatabaseQuery_StartAtKey final
{
public:
	struct FFirebaseVariant                       OrderValue;                                        // 0x0000(0x0018)(Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ChildKey;                                          // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDatabaseQuery*                         ReturnValue;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DatabaseQuery_StartAtKey) == 0x000008, "Wrong alignment on DatabaseQuery_StartAtKey");
static_assert(sizeof(DatabaseQuery_StartAtKey) == 0x000030, "Wrong size on DatabaseQuery_StartAtKey");
static_assert(offsetof(DatabaseQuery_StartAtKey, OrderValue) == 0x000000, "Member 'DatabaseQuery_StartAtKey::OrderValue' has a wrong offset!");
static_assert(offsetof(DatabaseQuery_StartAtKey, ChildKey) == 0x000018, "Member 'DatabaseQuery_StartAtKey::ChildKey' has a wrong offset!");
static_assert(offsetof(DatabaseQuery_StartAtKey, ReturnValue) == 0x000028, "Member 'DatabaseQuery_StartAtKey::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DatabaseQuery.GetReference
// 0x0008 (0x0008 - 0x0000)
struct DatabaseQuery_GetReference final
{
public:
	class UDatabaseReference*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DatabaseQuery_GetReference) == 0x000008, "Wrong alignment on DatabaseQuery_GetReference");
static_assert(sizeof(DatabaseQuery_GetReference) == 0x000008, "Wrong size on DatabaseQuery_GetReference");
static_assert(offsetof(DatabaseQuery_GetReference, ReturnValue) == 0x000000, "Member 'DatabaseQuery_GetReference::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DatabaseQuery.IsValid
// 0x0001 (0x0001 - 0x0000)
struct DatabaseQuery_IsValid final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DatabaseQuery_IsValid) == 0x000001, "Wrong alignment on DatabaseQuery_IsValid");
static_assert(sizeof(DatabaseQuery_IsValid) == 0x000001, "Wrong size on DatabaseQuery_IsValid");
static_assert(offsetof(DatabaseQuery_IsValid, ReturnValue) == 0x000000, "Member 'DatabaseQuery_IsValid::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DatabaseReference.GetDisconnectionHandler
// 0x0008 (0x0008 - 0x0000)
struct DatabaseReference_GetDisconnectionHandler final
{
public:
	class UDisconnectionHandler*                  ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DatabaseReference_GetDisconnectionHandler) == 0x000008, "Wrong alignment on DatabaseReference_GetDisconnectionHandler");
static_assert(sizeof(DatabaseReference_GetDisconnectionHandler) == 0x000008, "Wrong size on DatabaseReference_GetDisconnectionHandler");
static_assert(offsetof(DatabaseReference_GetDisconnectionHandler, ReturnValue) == 0x000000, "Member 'DatabaseReference_GetDisconnectionHandler::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DatabaseReference.Child
// 0x0018 (0x0018 - 0x0000)
struct DatabaseReference_Child final
{
public:
	class FString                                 Path;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDatabaseReference*                     ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DatabaseReference_Child) == 0x000008, "Wrong alignment on DatabaseReference_Child");
static_assert(sizeof(DatabaseReference_Child) == 0x000018, "Wrong size on DatabaseReference_Child");
static_assert(offsetof(DatabaseReference_Child, Path) == 0x000000, "Member 'DatabaseReference_Child::Path' has a wrong offset!");
static_assert(offsetof(DatabaseReference_Child, ReturnValue) == 0x000010, "Member 'DatabaseReference_Child::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DatabaseReference.ChildFromPaths
// 0x0018 (0x0018 - 0x0000)
struct DatabaseReference_ChildFromPaths final
{
public:
	TArray<class FString>                         Paths;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class UDatabaseReference*                     ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DatabaseReference_ChildFromPaths) == 0x000008, "Wrong alignment on DatabaseReference_ChildFromPaths");
static_assert(sizeof(DatabaseReference_ChildFromPaths) == 0x000018, "Wrong size on DatabaseReference_ChildFromPaths");
static_assert(offsetof(DatabaseReference_ChildFromPaths, Paths) == 0x000000, "Member 'DatabaseReference_ChildFromPaths::Paths' has a wrong offset!");
static_assert(offsetof(DatabaseReference_ChildFromPaths, ReturnValue) == 0x000010, "Member 'DatabaseReference_ChildFromPaths::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DatabaseReference.GetDatabase
// 0x0008 (0x0008 - 0x0000)
struct DatabaseReference_GetDatabase final
{
public:
	class UDatabase*                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DatabaseReference_GetDatabase) == 0x000008, "Wrong alignment on DatabaseReference_GetDatabase");
static_assert(sizeof(DatabaseReference_GetDatabase) == 0x000008, "Wrong size on DatabaseReference_GetDatabase");
static_assert(offsetof(DatabaseReference_GetDatabase, ReturnValue) == 0x000000, "Member 'DatabaseReference_GetDatabase::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DatabaseReference.GetKey
// 0x0010 (0x0010 - 0x0000)
struct DatabaseReference_GetKey final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DatabaseReference_GetKey) == 0x000008, "Wrong alignment on DatabaseReference_GetKey");
static_assert(sizeof(DatabaseReference_GetKey) == 0x000010, "Wrong size on DatabaseReference_GetKey");
static_assert(offsetof(DatabaseReference_GetKey, ReturnValue) == 0x000000, "Member 'DatabaseReference_GetKey::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DatabaseReference.GetParent
// 0x0008 (0x0008 - 0x0000)
struct DatabaseReference_GetParent final
{
public:
	class UDatabaseReference*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DatabaseReference_GetParent) == 0x000008, "Wrong alignment on DatabaseReference_GetParent");
static_assert(sizeof(DatabaseReference_GetParent) == 0x000008, "Wrong size on DatabaseReference_GetParent");
static_assert(offsetof(DatabaseReference_GetParent, ReturnValue) == 0x000000, "Member 'DatabaseReference_GetParent::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DatabaseReference.GetRoot
// 0x0008 (0x0008 - 0x0000)
struct DatabaseReference_GetRoot final
{
public:
	class UDatabaseReference*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DatabaseReference_GetRoot) == 0x000008, "Wrong alignment on DatabaseReference_GetRoot");
static_assert(sizeof(DatabaseReference_GetRoot) == 0x000008, "Wrong size on DatabaseReference_GetRoot");
static_assert(offsetof(DatabaseReference_GetRoot, ReturnValue) == 0x000000, "Member 'DatabaseReference_GetRoot::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DatabaseReference.GetUrl
// 0x0010 (0x0010 - 0x0000)
struct DatabaseReference_GetUrl final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DatabaseReference_GetUrl) == 0x000008, "Wrong alignment on DatabaseReference_GetUrl");
static_assert(sizeof(DatabaseReference_GetUrl) == 0x000010, "Wrong size on DatabaseReference_GetUrl");
static_assert(offsetof(DatabaseReference_GetUrl, ReturnValue) == 0x000000, "Member 'DatabaseReference_GetUrl::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DatabaseReference.IsRoot
// 0x0001 (0x0001 - 0x0000)
struct DatabaseReference_IsRoot final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DatabaseReference_IsRoot) == 0x000001, "Wrong alignment on DatabaseReference_IsRoot");
static_assert(sizeof(DatabaseReference_IsRoot) == 0x000001, "Wrong size on DatabaseReference_IsRoot");
static_assert(offsetof(DatabaseReference_IsRoot, ReturnValue) == 0x000000, "Member 'DatabaseReference_IsRoot::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DatabaseReference.PushChild
// 0x0008 (0x0008 - 0x0000)
struct DatabaseReference_PushChild final
{
public:
	class UDatabaseReference*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DatabaseReference_PushChild) == 0x000008, "Wrong alignment on DatabaseReference_PushChild");
static_assert(sizeof(DatabaseReference_PushChild) == 0x000008, "Wrong size on DatabaseReference_PushChild");
static_assert(offsetof(DatabaseReference_PushChild, ReturnValue) == 0x000000, "Member 'DatabaseReference_PushChild::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreDocumentChange.GetDocument
// 0x0010 (0x0010 - 0x0000)
struct FirestoreDocumentChange_GetDocument final
{
public:
	struct FFirestoreDocumentSnapshot             ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreDocumentChange_GetDocument) == 0x000008, "Wrong alignment on FirestoreDocumentChange_GetDocument");
static_assert(sizeof(FirestoreDocumentChange_GetDocument) == 0x000010, "Wrong size on FirestoreDocumentChange_GetDocument");
static_assert(offsetof(FirestoreDocumentChange_GetDocument, ReturnValue) == 0x000000, "Member 'FirestoreDocumentChange_GetDocument::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreDocumentChange.GetNewIndex
// 0x0008 (0x0008 - 0x0000)
struct FirestoreDocumentChange_GetNewIndex final
{
public:
	int64                                         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreDocumentChange_GetNewIndex) == 0x000008, "Wrong alignment on FirestoreDocumentChange_GetNewIndex");
static_assert(sizeof(FirestoreDocumentChange_GetNewIndex) == 0x000008, "Wrong size on FirestoreDocumentChange_GetNewIndex");
static_assert(offsetof(FirestoreDocumentChange_GetNewIndex, ReturnValue) == 0x000000, "Member 'FirestoreDocumentChange_GetNewIndex::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreDocumentChange.GetOldIndex
// 0x0008 (0x0008 - 0x0000)
struct FirestoreDocumentChange_GetOldIndex final
{
public:
	int64                                         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreDocumentChange_GetOldIndex) == 0x000008, "Wrong alignment on FirestoreDocumentChange_GetOldIndex");
static_assert(sizeof(FirestoreDocumentChange_GetOldIndex) == 0x000008, "Wrong size on FirestoreDocumentChange_GetOldIndex");
static_assert(offsetof(FirestoreDocumentChange_GetOldIndex, ReturnValue) == 0x000000, "Member 'FirestoreDocumentChange_GetOldIndex::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreDocumentChange.GetType
// 0x0001 (0x0001 - 0x0000)
struct FirestoreDocumentChange_GetType final
{
public:
	EDocumentChangeType                           ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreDocumentChange_GetType) == 0x000001, "Wrong alignment on FirestoreDocumentChange_GetType");
static_assert(sizeof(FirestoreDocumentChange_GetType) == 0x000001, "Wrong size on FirestoreDocumentChange_GetType");
static_assert(offsetof(FirestoreDocumentChange_GetType, ReturnValue) == 0x000000, "Member 'FirestoreDocumentChange_GetType::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreDocumentReference.AddSnapshotListener
// 0x0010 (0x0010 - 0x0000)
struct FirestoreDocumentReference_AddSnapshotListener final
{
public:
	TDelegate<void(EFirestoreError Error, struct FFirestoreDocumentSnapshot& DocumentSnapshot)> Callback;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreDocumentReference_AddSnapshotListener) == 0x000004, "Wrong alignment on FirestoreDocumentReference_AddSnapshotListener");
static_assert(sizeof(FirestoreDocumentReference_AddSnapshotListener) == 0x000010, "Wrong size on FirestoreDocumentReference_AddSnapshotListener");
static_assert(offsetof(FirestoreDocumentReference_AddSnapshotListener, Callback) == 0x000000, "Member 'FirestoreDocumentReference_AddSnapshotListener::Callback' has a wrong offset!");

// Function FirebaseFeatures.FirestoreDocumentReference.GetCollection
// 0x0018 (0x0018 - 0x0000)
struct FirestoreDocumentReference_GetCollection final
{
public:
	class FString                                 CollectionPath;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirestoreCollectionReference*          ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreDocumentReference_GetCollection) == 0x000008, "Wrong alignment on FirestoreDocumentReference_GetCollection");
static_assert(sizeof(FirestoreDocumentReference_GetCollection) == 0x000018, "Wrong size on FirestoreDocumentReference_GetCollection");
static_assert(offsetof(FirestoreDocumentReference_GetCollection, CollectionPath) == 0x000000, "Member 'FirestoreDocumentReference_GetCollection::CollectionPath' has a wrong offset!");
static_assert(offsetof(FirestoreDocumentReference_GetCollection, ReturnValue) == 0x000010, "Member 'FirestoreDocumentReference_GetCollection::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreDocumentReference.GetId
// 0x0010 (0x0010 - 0x0000)
struct FirestoreDocumentReference_GetId final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreDocumentReference_GetId) == 0x000008, "Wrong alignment on FirestoreDocumentReference_GetId");
static_assert(sizeof(FirestoreDocumentReference_GetId) == 0x000010, "Wrong size on FirestoreDocumentReference_GetId");
static_assert(offsetof(FirestoreDocumentReference_GetId, ReturnValue) == 0x000000, "Member 'FirestoreDocumentReference_GetId::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreDocumentReference.GetParent
// 0x0008 (0x0008 - 0x0000)
struct FirestoreDocumentReference_GetParent final
{
public:
	class UFirestoreCollectionReference*          ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreDocumentReference_GetParent) == 0x000008, "Wrong alignment on FirestoreDocumentReference_GetParent");
static_assert(sizeof(FirestoreDocumentReference_GetParent) == 0x000008, "Wrong size on FirestoreDocumentReference_GetParent");
static_assert(offsetof(FirestoreDocumentReference_GetParent, ReturnValue) == 0x000000, "Member 'FirestoreDocumentReference_GetParent::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreDocumentReference.GetPath
// 0x0010 (0x0010 - 0x0000)
struct FirestoreDocumentReference_GetPath final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreDocumentReference_GetPath) == 0x000008, "Wrong alignment on FirestoreDocumentReference_GetPath");
static_assert(sizeof(FirestoreDocumentReference_GetPath) == 0x000010, "Wrong size on FirestoreDocumentReference_GetPath");
static_assert(offsetof(FirestoreDocumentReference_GetPath, ReturnValue) == 0x000000, "Member 'FirestoreDocumentReference_GetPath::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreDocumentReference.IsValid
// 0x0001 (0x0001 - 0x0000)
struct FirestoreDocumentReference_IsValid final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreDocumentReference_IsValid) == 0x000001, "Wrong alignment on FirestoreDocumentReference_IsValid");
static_assert(sizeof(FirestoreDocumentReference_IsValid) == 0x000001, "Wrong size on FirestoreDocumentReference_IsValid");
static_assert(offsetof(FirestoreDocumentReference_IsValid, ReturnValue) == 0x000000, "Member 'FirestoreDocumentReference_IsValid::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreDocumentReference.ToString
// 0x0010 (0x0010 - 0x0000)
struct FirestoreDocumentReference_ToString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreDocumentReference_ToString) == 0x000008, "Wrong alignment on FirestoreDocumentReference_ToString");
static_assert(sizeof(FirestoreDocumentReference_ToString) == 0x000010, "Wrong size on FirestoreDocumentReference_ToString");
static_assert(offsetof(FirestoreDocumentReference_ToString, ReturnValue) == 0x000000, "Member 'FirestoreDocumentReference_ToString::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseAdMobLibrary.Blueprint_RewardedVideoEvents
// 0x0020 (0x0020 - 0x0000)
struct FirebaseAdMobLibrary_Blueprint_RewardedVideoEvents final
{
public:
	TDelegate<void(const class FString& RewardType, float RewardAmount)> OnReward;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(EAdMobPresentationState PresentationState)> OnPresentationStateChanged;                        // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseAdMobLibrary_Blueprint_RewardedVideoEvents) == 0x000004, "Wrong alignment on FirebaseAdMobLibrary_Blueprint_RewardedVideoEvents");
static_assert(sizeof(FirebaseAdMobLibrary_Blueprint_RewardedVideoEvents) == 0x000020, "Wrong size on FirebaseAdMobLibrary_Blueprint_RewardedVideoEvents");
static_assert(offsetof(FirebaseAdMobLibrary_Blueprint_RewardedVideoEvents, OnReward) == 0x000000, "Member 'FirebaseAdMobLibrary_Blueprint_RewardedVideoEvents::OnReward' has a wrong offset!");
static_assert(offsetof(FirebaseAdMobLibrary_Blueprint_RewardedVideoEvents, OnPresentationStateChanged) == 0x000010, "Member 'FirebaseAdMobLibrary_Blueprint_RewardedVideoEvents::OnPresentationStateChanged' has a wrong offset!");

// Function FirebaseFeatures.ShowRewardedVideo.ShowRewardedVideo
// 0x0008 (0x0008 - 0x0000)
struct ShowRewardedVideo_ShowRewardedVideo final
{
public:
	class UShowRewardedVideo*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ShowRewardedVideo_ShowRewardedVideo) == 0x000008, "Wrong alignment on ShowRewardedVideo_ShowRewardedVideo");
static_assert(sizeof(ShowRewardedVideo_ShowRewardedVideo) == 0x000008, "Wrong size on ShowRewardedVideo_ShowRewardedVideo");
static_assert(offsetof(ShowRewardedVideo_ShowRewardedVideo, ReturnValue) == 0x000000, "Member 'ShowRewardedVideo_ShowRewardedVideo::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.LoadRewardedVideoAd.LoadRewardedVideoAd
// 0x0098 (0x0098 - 0x0000)
struct LoadRewardedVideoAd_LoadRewardedVideoAd final
{
public:
	class FString                                 AdUnitId;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdMobAdRequest                        AdRequest;                                         // 0x0010(0x0080)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class ULoadRewardedVideoAd*                   ReturnValue;                                       // 0x0090(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LoadRewardedVideoAd_LoadRewardedVideoAd) == 0x000008, "Wrong alignment on LoadRewardedVideoAd_LoadRewardedVideoAd");
static_assert(sizeof(LoadRewardedVideoAd_LoadRewardedVideoAd) == 0x000098, "Wrong size on LoadRewardedVideoAd_LoadRewardedVideoAd");
static_assert(offsetof(LoadRewardedVideoAd_LoadRewardedVideoAd, AdUnitId) == 0x000000, "Member 'LoadRewardedVideoAd_LoadRewardedVideoAd::AdUnitId' has a wrong offset!");
static_assert(offsetof(LoadRewardedVideoAd_LoadRewardedVideoAd, AdRequest) == 0x000010, "Member 'LoadRewardedVideoAd_LoadRewardedVideoAd::AdRequest' has a wrong offset!");
static_assert(offsetof(LoadRewardedVideoAd_LoadRewardedVideoAd, ReturnValue) == 0x000090, "Member 'LoadRewardedVideoAd_LoadRewardedVideoAd::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.PauseRewardedVideo.PauseRewardedVideo
// 0x0008 (0x0008 - 0x0000)
struct PauseRewardedVideo_PauseRewardedVideo final
{
public:
	class UPauseRewardedVideo*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PauseRewardedVideo_PauseRewardedVideo) == 0x000008, "Wrong alignment on PauseRewardedVideo_PauseRewardedVideo");
static_assert(sizeof(PauseRewardedVideo_PauseRewardedVideo) == 0x000008, "Wrong size on PauseRewardedVideo_PauseRewardedVideo");
static_assert(offsetof(PauseRewardedVideo_PauseRewardedVideo, ReturnValue) == 0x000000, "Member 'PauseRewardedVideo_PauseRewardedVideo::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.ResumeRewardedVideo.ResumeRewardedVideo
// 0x0008 (0x0008 - 0x0000)
struct ResumeRewardedVideo_ResumeRewardedVideo final
{
public:
	class UResumeRewardedVideo*                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ResumeRewardedVideo_ResumeRewardedVideo) == 0x000008, "Wrong alignment on ResumeRewardedVideo_ResumeRewardedVideo");
static_assert(sizeof(ResumeRewardedVideo_ResumeRewardedVideo) == 0x000008, "Wrong size on ResumeRewardedVideo_ResumeRewardedVideo");
static_assert(offsetof(ResumeRewardedVideo_ResumeRewardedVideo, ReturnValue) == 0x000000, "Member 'ResumeRewardedVideo_ResumeRewardedVideo::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.CreateBannerView.CreateBannerView
// 0x0020 (0x0020 - 0x0000)
struct CreateBannerView_CreateBannerView final
{
public:
	class FString                                 AdUnitId;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdSize                                AdSize;                                            // 0x0010(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	class UCreateBannerView*                      ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CreateBannerView_CreateBannerView) == 0x000008, "Wrong alignment on CreateBannerView_CreateBannerView");
static_assert(sizeof(CreateBannerView_CreateBannerView) == 0x000020, "Wrong size on CreateBannerView_CreateBannerView");
static_assert(offsetof(CreateBannerView_CreateBannerView, AdUnitId) == 0x000000, "Member 'CreateBannerView_CreateBannerView::AdUnitId' has a wrong offset!");
static_assert(offsetof(CreateBannerView_CreateBannerView, AdSize) == 0x000010, "Member 'CreateBannerView_CreateBannerView::AdSize' has a wrong offset!");
static_assert(offsetof(CreateBannerView_CreateBannerView, ReturnValue) == 0x000018, "Member 'CreateBannerView_CreateBannerView::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.LoadAdBannerView.LoadAd
// 0x0090 (0x0090 - 0x0000)
struct LoadAdBannerView_LoadAd final
{
public:
	const class UBannerView*                      BannerView;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdMobAdRequest                        AdRequest;                                         // 0x0008(0x0080)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class ULoadAdBannerView*                      ReturnValue;                                       // 0x0088(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LoadAdBannerView_LoadAd) == 0x000008, "Wrong alignment on LoadAdBannerView_LoadAd");
static_assert(sizeof(LoadAdBannerView_LoadAd) == 0x000090, "Wrong size on LoadAdBannerView_LoadAd");
static_assert(offsetof(LoadAdBannerView_LoadAd, BannerView) == 0x000000, "Member 'LoadAdBannerView_LoadAd::BannerView' has a wrong offset!");
static_assert(offsetof(LoadAdBannerView_LoadAd, AdRequest) == 0x000008, "Member 'LoadAdBannerView_LoadAd::AdRequest' has a wrong offset!");
static_assert(offsetof(LoadAdBannerView_LoadAd, ReturnValue) == 0x000088, "Member 'LoadAdBannerView_LoadAd::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.HideAdBannerView.Hide
// 0x0010 (0x0010 - 0x0000)
struct HideAdBannerView_Hide final
{
public:
	const class UBannerView*                      BannerView;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHideAdBannerView*                      ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HideAdBannerView_Hide) == 0x000008, "Wrong alignment on HideAdBannerView_Hide");
static_assert(sizeof(HideAdBannerView_Hide) == 0x000010, "Wrong size on HideAdBannerView_Hide");
static_assert(offsetof(HideAdBannerView_Hide, BannerView) == 0x000000, "Member 'HideAdBannerView_Hide::BannerView' has a wrong offset!");
static_assert(offsetof(HideAdBannerView_Hide, ReturnValue) == 0x000008, "Member 'HideAdBannerView_Hide::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.ShowBannerView.Show
// 0x0010 (0x0010 - 0x0000)
struct ShowBannerView_Show final
{
public:
	const class UBannerView*                      BannerView;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UShowBannerView*                        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ShowBannerView_Show) == 0x000008, "Wrong alignment on ShowBannerView_Show");
static_assert(sizeof(ShowBannerView_Show) == 0x000010, "Wrong size on ShowBannerView_Show");
static_assert(offsetof(ShowBannerView_Show, BannerView) == 0x000000, "Member 'ShowBannerView_Show::BannerView' has a wrong offset!");
static_assert(offsetof(ShowBannerView_Show, ReturnValue) == 0x000008, "Member 'ShowBannerView_Show::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.PauseBannerView.Pause
// 0x0010 (0x0010 - 0x0000)
struct PauseBannerView_Pause final
{
public:
	const class UBannerView*                      BannerView;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPauseBannerView*                       ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PauseBannerView_Pause) == 0x000008, "Wrong alignment on PauseBannerView_Pause");
static_assert(sizeof(PauseBannerView_Pause) == 0x000010, "Wrong size on PauseBannerView_Pause");
static_assert(offsetof(PauseBannerView_Pause, BannerView) == 0x000000, "Member 'PauseBannerView_Pause::BannerView' has a wrong offset!");
static_assert(offsetof(PauseBannerView_Pause, ReturnValue) == 0x000008, "Member 'PauseBannerView_Pause::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.ResumeBannerView.Resume
// 0x0010 (0x0010 - 0x0000)
struct ResumeBannerView_Resume final
{
public:
	const class UBannerView*                      BannerView;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UResumeBannerView*                      ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ResumeBannerView_Resume) == 0x000008, "Wrong alignment on ResumeBannerView_Resume");
static_assert(sizeof(ResumeBannerView_Resume) == 0x000010, "Wrong size on ResumeBannerView_Resume");
static_assert(offsetof(ResumeBannerView_Resume, BannerView) == 0x000000, "Member 'ResumeBannerView_Resume::BannerView' has a wrong offset!");
static_assert(offsetof(ResumeBannerView_Resume, ReturnValue) == 0x000008, "Member 'ResumeBannerView_Resume::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.MoveToPositionBannerView.MoveTo
// 0x0018 (0x0018 - 0x0000)
struct MoveToPositionBannerView_MoveTo final
{
public:
	const class UBannerView*                      BannerView;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAdMobBannerViewPosition                      Position;                                          // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMoveToPositionBannerView*              ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoveToPositionBannerView_MoveTo) == 0x000008, "Wrong alignment on MoveToPositionBannerView_MoveTo");
static_assert(sizeof(MoveToPositionBannerView_MoveTo) == 0x000018, "Wrong size on MoveToPositionBannerView_MoveTo");
static_assert(offsetof(MoveToPositionBannerView_MoveTo, BannerView) == 0x000000, "Member 'MoveToPositionBannerView_MoveTo::BannerView' has a wrong offset!");
static_assert(offsetof(MoveToPositionBannerView_MoveTo, Position) == 0x000008, "Member 'MoveToPositionBannerView_MoveTo::Position' has a wrong offset!");
static_assert(offsetof(MoveToPositionBannerView_MoveTo, ReturnValue) == 0x000010, "Member 'MoveToPositionBannerView_MoveTo::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.MoveToBannerView.MoveTo
// 0x0018 (0x0018 - 0x0000)
struct MoveToBannerView_MoveTo final
{
public:
	const class UBannerView*                      BannerView;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         X;                                                 // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Y;                                                 // 0x000C(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMoveToBannerView*                      ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoveToBannerView_MoveTo) == 0x000008, "Wrong alignment on MoveToBannerView_MoveTo");
static_assert(sizeof(MoveToBannerView_MoveTo) == 0x000018, "Wrong size on MoveToBannerView_MoveTo");
static_assert(offsetof(MoveToBannerView_MoveTo, BannerView) == 0x000000, "Member 'MoveToBannerView_MoveTo::BannerView' has a wrong offset!");
static_assert(offsetof(MoveToBannerView_MoveTo, X) == 0x000008, "Member 'MoveToBannerView_MoveTo::X' has a wrong offset!");
static_assert(offsetof(MoveToBannerView_MoveTo, Y) == 0x00000C, "Member 'MoveToBannerView_MoveTo::Y' has a wrong offset!");
static_assert(offsetof(MoveToBannerView_MoveTo, ReturnValue) == 0x000010, "Member 'MoveToBannerView_MoveTo::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.LoadAdInterstitial.LoadAd
// 0x0090 (0x0090 - 0x0000)
struct LoadAdInterstitial_LoadAd final
{
public:
	const class UInterstitialAd*                  InterstitialAd;                                    // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdMobAdRequest                        AdRequest;                                         // 0x0008(0x0080)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class ULoadAdInterstitial*                    ReturnValue;                                       // 0x0088(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LoadAdInterstitial_LoadAd) == 0x000008, "Wrong alignment on LoadAdInterstitial_LoadAd");
static_assert(sizeof(LoadAdInterstitial_LoadAd) == 0x000090, "Wrong size on LoadAdInterstitial_LoadAd");
static_assert(offsetof(LoadAdInterstitial_LoadAd, InterstitialAd) == 0x000000, "Member 'LoadAdInterstitial_LoadAd::InterstitialAd' has a wrong offset!");
static_assert(offsetof(LoadAdInterstitial_LoadAd, AdRequest) == 0x000008, "Member 'LoadAdInterstitial_LoadAd::AdRequest' has a wrong offset!");
static_assert(offsetof(LoadAdInterstitial_LoadAd, ReturnValue) == 0x000088, "Member 'LoadAdInterstitial_LoadAd::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.ShowInterstitial.Show
// 0x0010 (0x0010 - 0x0000)
struct ShowInterstitial_Show final
{
public:
	const class UInterstitialAd*                  InterstitialAd;                                    // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UShowInterstitial*                      ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ShowInterstitial_Show) == 0x000008, "Wrong alignment on ShowInterstitial_Show");
static_assert(sizeof(ShowInterstitial_Show) == 0x000010, "Wrong size on ShowInterstitial_Show");
static_assert(offsetof(ShowInterstitial_Show, InterstitialAd) == 0x000000, "Member 'ShowInterstitial_Show::InterstitialAd' has a wrong offset!");
static_assert(offsetof(ShowInterstitial_Show, ReturnValue) == 0x000008, "Member 'ShowInterstitial_Show::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.BannerView.GetBoundingBox
// 0x0010 (0x0010 - 0x0000)
struct BannerView_GetBoundingBox final
{
public:
	struct FAdMobBoundingBox                      ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(BannerView_GetBoundingBox) == 0x000004, "Wrong alignment on BannerView_GetBoundingBox");
static_assert(sizeof(BannerView_GetBoundingBox) == 0x000010, "Wrong size on BannerView_GetBoundingBox");
static_assert(offsetof(BannerView_GetBoundingBox, ReturnValue) == 0x000000, "Member 'BannerView_GetBoundingBox::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.InterstitialAd.GetPresentationState
// 0x0001 (0x0001 - 0x0000)
struct InterstitialAd_GetPresentationState final
{
public:
	EAdMobInterstitialAdPresentationState         ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InterstitialAd_GetPresentationState) == 0x000001, "Wrong alignment on InterstitialAd_GetPresentationState");
static_assert(sizeof(InterstitialAd_GetPresentationState) == 0x000001, "Wrong size on InterstitialAd_GetPresentationState");
static_assert(offsetof(InterstitialAd_GetPresentationState, ReturnValue) == 0x000000, "Member 'InterstitialAd_GetPresentationState::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseAnalyticsLibrary.LogEvent
// 0x0010 (0x0010 - 0x0000)
struct FirebaseAnalyticsLibrary_LogEvent final
{
public:
	class FString                                 EventName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseAnalyticsLibrary_LogEvent) == 0x000008, "Wrong alignment on FirebaseAnalyticsLibrary_LogEvent");
static_assert(sizeof(FirebaseAnalyticsLibrary_LogEvent) == 0x000010, "Wrong size on FirebaseAnalyticsLibrary_LogEvent");
static_assert(offsetof(FirebaseAnalyticsLibrary_LogEvent, EventName) == 0x000000, "Member 'FirebaseAnalyticsLibrary_LogEvent::EventName' has a wrong offset!");

// Function FirebaseFeatures.FirebaseAnalyticsLibrary.LogEventDouble
// 0x0028 (0x0028 - 0x0000)
struct FirebaseAnalyticsLibrary_LogEventDouble final
{
public:
	class FString                                 EventName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ParameterName;                                     // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        ParameterValue;                                    // 0x0020(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseAnalyticsLibrary_LogEventDouble) == 0x000008, "Wrong alignment on FirebaseAnalyticsLibrary_LogEventDouble");
static_assert(sizeof(FirebaseAnalyticsLibrary_LogEventDouble) == 0x000028, "Wrong size on FirebaseAnalyticsLibrary_LogEventDouble");
static_assert(offsetof(FirebaseAnalyticsLibrary_LogEventDouble, EventName) == 0x000000, "Member 'FirebaseAnalyticsLibrary_LogEventDouble::EventName' has a wrong offset!");
static_assert(offsetof(FirebaseAnalyticsLibrary_LogEventDouble, ParameterName) == 0x000010, "Member 'FirebaseAnalyticsLibrary_LogEventDouble::ParameterName' has a wrong offset!");
static_assert(offsetof(FirebaseAnalyticsLibrary_LogEventDouble, ParameterValue) == 0x000020, "Member 'FirebaseAnalyticsLibrary_LogEventDouble::ParameterValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseAnalyticsLibrary.LogEventFloat
// 0x0028 (0x0028 - 0x0000)
struct FirebaseAnalyticsLibrary_LogEventFloat final
{
public:
	class FString                                 EventName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ParameterName;                                     // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ParameterValue;                                    // 0x0020(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FirebaseAnalyticsLibrary_LogEventFloat) == 0x000008, "Wrong alignment on FirebaseAnalyticsLibrary_LogEventFloat");
static_assert(sizeof(FirebaseAnalyticsLibrary_LogEventFloat) == 0x000028, "Wrong size on FirebaseAnalyticsLibrary_LogEventFloat");
static_assert(offsetof(FirebaseAnalyticsLibrary_LogEventFloat, EventName) == 0x000000, "Member 'FirebaseAnalyticsLibrary_LogEventFloat::EventName' has a wrong offset!");
static_assert(offsetof(FirebaseAnalyticsLibrary_LogEventFloat, ParameterName) == 0x000010, "Member 'FirebaseAnalyticsLibrary_LogEventFloat::ParameterName' has a wrong offset!");
static_assert(offsetof(FirebaseAnalyticsLibrary_LogEventFloat, ParameterValue) == 0x000020, "Member 'FirebaseAnalyticsLibrary_LogEventFloat::ParameterValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseAnalyticsLibrary.LogEventInt32
// 0x0028 (0x0028 - 0x0000)
struct FirebaseAnalyticsLibrary_LogEventInt32 final
{
public:
	class FString                                 EventName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ParameterName;                                     // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ParameterValue;                                    // 0x0020(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FirebaseAnalyticsLibrary_LogEventInt32) == 0x000008, "Wrong alignment on FirebaseAnalyticsLibrary_LogEventInt32");
static_assert(sizeof(FirebaseAnalyticsLibrary_LogEventInt32) == 0x000028, "Wrong size on FirebaseAnalyticsLibrary_LogEventInt32");
static_assert(offsetof(FirebaseAnalyticsLibrary_LogEventInt32, EventName) == 0x000000, "Member 'FirebaseAnalyticsLibrary_LogEventInt32::EventName' has a wrong offset!");
static_assert(offsetof(FirebaseAnalyticsLibrary_LogEventInt32, ParameterName) == 0x000010, "Member 'FirebaseAnalyticsLibrary_LogEventInt32::ParameterName' has a wrong offset!");
static_assert(offsetof(FirebaseAnalyticsLibrary_LogEventInt32, ParameterValue) == 0x000020, "Member 'FirebaseAnalyticsLibrary_LogEventInt32::ParameterValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseAnalyticsLibrary.LogEventInt64
// 0x0028 (0x0028 - 0x0000)
struct FirebaseAnalyticsLibrary_LogEventInt64 final
{
public:
	class FString                                 EventName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ParameterName;                                     // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         ParameterValue;                                    // 0x0020(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseAnalyticsLibrary_LogEventInt64) == 0x000008, "Wrong alignment on FirebaseAnalyticsLibrary_LogEventInt64");
static_assert(sizeof(FirebaseAnalyticsLibrary_LogEventInt64) == 0x000028, "Wrong size on FirebaseAnalyticsLibrary_LogEventInt64");
static_assert(offsetof(FirebaseAnalyticsLibrary_LogEventInt64, EventName) == 0x000000, "Member 'FirebaseAnalyticsLibrary_LogEventInt64::EventName' has a wrong offset!");
static_assert(offsetof(FirebaseAnalyticsLibrary_LogEventInt64, ParameterName) == 0x000010, "Member 'FirebaseAnalyticsLibrary_LogEventInt64::ParameterName' has a wrong offset!");
static_assert(offsetof(FirebaseAnalyticsLibrary_LogEventInt64, ParameterValue) == 0x000020, "Member 'FirebaseAnalyticsLibrary_LogEventInt64::ParameterValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseAnalyticsLibrary.LogEventString
// 0x0030 (0x0030 - 0x0000)
struct FirebaseAnalyticsLibrary_LogEventString final
{
public:
	class FString                                 EventName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ParameterName;                                     // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ParameterValue;                                    // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseAnalyticsLibrary_LogEventString) == 0x000008, "Wrong alignment on FirebaseAnalyticsLibrary_LogEventString");
static_assert(sizeof(FirebaseAnalyticsLibrary_LogEventString) == 0x000030, "Wrong size on FirebaseAnalyticsLibrary_LogEventString");
static_assert(offsetof(FirebaseAnalyticsLibrary_LogEventString, EventName) == 0x000000, "Member 'FirebaseAnalyticsLibrary_LogEventString::EventName' has a wrong offset!");
static_assert(offsetof(FirebaseAnalyticsLibrary_LogEventString, ParameterName) == 0x000010, "Member 'FirebaseAnalyticsLibrary_LogEventString::ParameterName' has a wrong offset!");
static_assert(offsetof(FirebaseAnalyticsLibrary_LogEventString, ParameterValue) == 0x000020, "Member 'FirebaseAnalyticsLibrary_LogEventString::ParameterValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseAnalyticsLibrary.LogEventWithParameter
// 0x0060 (0x0060 - 0x0000)
struct FirebaseAnalyticsLibrary_LogEventWithParameter final
{
public:
	class FString                                 EventName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>            Parameters;                                        // 0x0010(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseAnalyticsLibrary_LogEventWithParameter) == 0x000008, "Wrong alignment on FirebaseAnalyticsLibrary_LogEventWithParameter");
static_assert(sizeof(FirebaseAnalyticsLibrary_LogEventWithParameter) == 0x000060, "Wrong size on FirebaseAnalyticsLibrary_LogEventWithParameter");
static_assert(offsetof(FirebaseAnalyticsLibrary_LogEventWithParameter, EventName) == 0x000000, "Member 'FirebaseAnalyticsLibrary_LogEventWithParameter::EventName' has a wrong offset!");
static_assert(offsetof(FirebaseAnalyticsLibrary_LogEventWithParameter, Parameters) == 0x000010, "Member 'FirebaseAnalyticsLibrary_LogEventWithParameter::Parameters' has a wrong offset!");

// Function FirebaseFeatures.FirebaseAnalyticsLibrary.LogEventWithParameters
// 0x0060 (0x0060 - 0x0000)
struct FirebaseAnalyticsLibrary_LogEventWithParameters final
{
public:
	class FString                                 EventName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, struct FFirebaseVariant>  Parameters;                                        // 0x0010(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseAnalyticsLibrary_LogEventWithParameters) == 0x000008, "Wrong alignment on FirebaseAnalyticsLibrary_LogEventWithParameters");
static_assert(sizeof(FirebaseAnalyticsLibrary_LogEventWithParameters) == 0x000060, "Wrong size on FirebaseAnalyticsLibrary_LogEventWithParameters");
static_assert(offsetof(FirebaseAnalyticsLibrary_LogEventWithParameters, EventName) == 0x000000, "Member 'FirebaseAnalyticsLibrary_LogEventWithParameters::EventName' has a wrong offset!");
static_assert(offsetof(FirebaseAnalyticsLibrary_LogEventWithParameters, Parameters) == 0x000010, "Member 'FirebaseAnalyticsLibrary_LogEventWithParameters::Parameters' has a wrong offset!");

// Function FirebaseFeatures.FirebaseAnalyticsLibrary.SetAnalyticsCollectionEnabled
// 0x0001 (0x0001 - 0x0000)
struct FirebaseAnalyticsLibrary_SetAnalyticsCollectionEnabled final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseAnalyticsLibrary_SetAnalyticsCollectionEnabled) == 0x000001, "Wrong alignment on FirebaseAnalyticsLibrary_SetAnalyticsCollectionEnabled");
static_assert(sizeof(FirebaseAnalyticsLibrary_SetAnalyticsCollectionEnabled) == 0x000001, "Wrong size on FirebaseAnalyticsLibrary_SetAnalyticsCollectionEnabled");
static_assert(offsetof(FirebaseAnalyticsLibrary_SetAnalyticsCollectionEnabled, bEnabled) == 0x000000, "Member 'FirebaseAnalyticsLibrary_SetAnalyticsCollectionEnabled::bEnabled' has a wrong offset!");

// Function FirebaseFeatures.FirebaseAnalyticsLibrary.SetCurrentScreen
// 0x0020 (0x0020 - 0x0000)
struct FirebaseAnalyticsLibrary_SetCurrentScreen final
{
public:
	class FString                                 ScreenName;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ScreenClass;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseAnalyticsLibrary_SetCurrentScreen) == 0x000008, "Wrong alignment on FirebaseAnalyticsLibrary_SetCurrentScreen");
static_assert(sizeof(FirebaseAnalyticsLibrary_SetCurrentScreen) == 0x000020, "Wrong size on FirebaseAnalyticsLibrary_SetCurrentScreen");
static_assert(offsetof(FirebaseAnalyticsLibrary_SetCurrentScreen, ScreenName) == 0x000000, "Member 'FirebaseAnalyticsLibrary_SetCurrentScreen::ScreenName' has a wrong offset!");
static_assert(offsetof(FirebaseAnalyticsLibrary_SetCurrentScreen, ScreenClass) == 0x000010, "Member 'FirebaseAnalyticsLibrary_SetCurrentScreen::ScreenClass' has a wrong offset!");

// Function FirebaseFeatures.FirebaseAnalyticsLibrary.SetSessionTimeoutDuration
// 0x0008 (0x0008 - 0x0000)
struct FirebaseAnalyticsLibrary_SetSessionTimeoutDuration final
{
public:
	int64                                         Milliseconds;                                      // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseAnalyticsLibrary_SetSessionTimeoutDuration) == 0x000008, "Wrong alignment on FirebaseAnalyticsLibrary_SetSessionTimeoutDuration");
static_assert(sizeof(FirebaseAnalyticsLibrary_SetSessionTimeoutDuration) == 0x000008, "Wrong size on FirebaseAnalyticsLibrary_SetSessionTimeoutDuration");
static_assert(offsetof(FirebaseAnalyticsLibrary_SetSessionTimeoutDuration, Milliseconds) == 0x000000, "Member 'FirebaseAnalyticsLibrary_SetSessionTimeoutDuration::Milliseconds' has a wrong offset!");

// Function FirebaseFeatures.FirebaseAnalyticsLibrary.SetUserID
// 0x0010 (0x0010 - 0x0000)
struct FirebaseAnalyticsLibrary_SetUserID final
{
public:
	class FString                                 UserId;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseAnalyticsLibrary_SetUserID) == 0x000008, "Wrong alignment on FirebaseAnalyticsLibrary_SetUserID");
static_assert(sizeof(FirebaseAnalyticsLibrary_SetUserID) == 0x000010, "Wrong size on FirebaseAnalyticsLibrary_SetUserID");
static_assert(offsetof(FirebaseAnalyticsLibrary_SetUserID, UserId) == 0x000000, "Member 'FirebaseAnalyticsLibrary_SetUserID::UserId' has a wrong offset!");

// Function FirebaseFeatures.FirebaseAnalyticsLibrary.SetUserProperty
// 0x0020 (0x0020 - 0x0000)
struct FirebaseAnalyticsLibrary_SetUserProperty final
{
public:
	class FString                                 Param_Name;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Property;                                          // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseAnalyticsLibrary_SetUserProperty) == 0x000008, "Wrong alignment on FirebaseAnalyticsLibrary_SetUserProperty");
static_assert(sizeof(FirebaseAnalyticsLibrary_SetUserProperty) == 0x000020, "Wrong size on FirebaseAnalyticsLibrary_SetUserProperty");
static_assert(offsetof(FirebaseAnalyticsLibrary_SetUserProperty, Param_Name) == 0x000000, "Member 'FirebaseAnalyticsLibrary_SetUserProperty::Param_Name' has a wrong offset!");
static_assert(offsetof(FirebaseAnalyticsLibrary_SetUserProperty, Property) == 0x000010, "Member 'FirebaseAnalyticsLibrary_SetUserProperty::Property' has a wrong offset!");

// Function FirebaseFeatures.FirebaseAnalyticsLibrary.StartSession
// 0x0001 (0x0001 - 0x0000)
struct FirebaseAnalyticsLibrary_StartSession final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseAnalyticsLibrary_StartSession) == 0x000001, "Wrong alignment on FirebaseAnalyticsLibrary_StartSession");
static_assert(sizeof(FirebaseAnalyticsLibrary_StartSession) == 0x000001, "Wrong size on FirebaseAnalyticsLibrary_StartSession");
static_assert(offsetof(FirebaseAnalyticsLibrary_StartSession, ReturnValue) == 0x000000, "Member 'FirebaseAnalyticsLibrary_StartSession::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseDynamicLinksBlueprintLibrary.GetLastDynamicLinkMatchStrength
// 0x0001 (0x0001 - 0x0000)
struct FirebaseDynamicLinksBlueprintLibrary_GetLastDynamicLinkMatchStrength final
{
public:
	ELinkMatchStrength                            ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseDynamicLinksBlueprintLibrary_GetLastDynamicLinkMatchStrength) == 0x000001, "Wrong alignment on FirebaseDynamicLinksBlueprintLibrary_GetLastDynamicLinkMatchStrength");
static_assert(sizeof(FirebaseDynamicLinksBlueprintLibrary_GetLastDynamicLinkMatchStrength) == 0x000001, "Wrong size on FirebaseDynamicLinksBlueprintLibrary_GetLastDynamicLinkMatchStrength");
static_assert(offsetof(FirebaseDynamicLinksBlueprintLibrary_GetLastDynamicLinkMatchStrength, ReturnValue) == 0x000000, "Member 'FirebaseDynamicLinksBlueprintLibrary_GetLastDynamicLinkMatchStrength::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseDynamicLinksBlueprintLibrary.GetLastDynamicLinkURL
// 0x0010 (0x0010 - 0x0000)
struct FirebaseDynamicLinksBlueprintLibrary_GetLastDynamicLinkURL final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseDynamicLinksBlueprintLibrary_GetLastDynamicLinkURL) == 0x000008, "Wrong alignment on FirebaseDynamicLinksBlueprintLibrary_GetLastDynamicLinkURL");
static_assert(sizeof(FirebaseDynamicLinksBlueprintLibrary_GetLastDynamicLinkURL) == 0x000010, "Wrong size on FirebaseDynamicLinksBlueprintLibrary_GetLastDynamicLinkURL");
static_assert(offsetof(FirebaseDynamicLinksBlueprintLibrary_GetLastDynamicLinkURL, ReturnValue) == 0x000000, "Member 'FirebaseDynamicLinksBlueprintLibrary_GetLastDynamicLinkURL::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseDynamicLinksBlueprintLibrary.DidReceiveUnhandledDynamicLink
// 0x0001 (0x0001 - 0x0000)
struct FirebaseDynamicLinksBlueprintLibrary_DidReceiveUnhandledDynamicLink final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseDynamicLinksBlueprintLibrary_DidReceiveUnhandledDynamicLink) == 0x000001, "Wrong alignment on FirebaseDynamicLinksBlueprintLibrary_DidReceiveUnhandledDynamicLink");
static_assert(sizeof(FirebaseDynamicLinksBlueprintLibrary_DidReceiveUnhandledDynamicLink) == 0x000001, "Wrong size on FirebaseDynamicLinksBlueprintLibrary_DidReceiveUnhandledDynamicLink");
static_assert(offsetof(FirebaseDynamicLinksBlueprintLibrary_DidReceiveUnhandledDynamicLink, ReturnValue) == 0x000000, "Member 'FirebaseDynamicLinksBlueprintLibrary_DidReceiveUnhandledDynamicLink::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseDynamicLinksBlueprintLibrary.GetLongLink
// 0x0198 (0x0198 - 0x0000)
struct FirebaseDynamicLinksBlueprintLibrary_GetLongLink final
{
public:
	struct FDynamicLinkComponents                 Components;                                        // 0x0000(0x0168)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FGeneratedDynamicLink                  ReturnValue;                                       // 0x0168(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseDynamicLinksBlueprintLibrary_GetLongLink) == 0x000008, "Wrong alignment on FirebaseDynamicLinksBlueprintLibrary_GetLongLink");
static_assert(sizeof(FirebaseDynamicLinksBlueprintLibrary_GetLongLink) == 0x000198, "Wrong size on FirebaseDynamicLinksBlueprintLibrary_GetLongLink");
static_assert(offsetof(FirebaseDynamicLinksBlueprintLibrary_GetLongLink, Components) == 0x000000, "Member 'FirebaseDynamicLinksBlueprintLibrary_GetLongLink::Components' has a wrong offset!");
static_assert(offsetof(FirebaseDynamicLinksBlueprintLibrary_GetLongLink, ReturnValue) == 0x000168, "Member 'FirebaseDynamicLinksBlueprintLibrary_GetLongLink::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.BlueprintFirebaseDynamicLinksProxy.ListenOnDynamicLinkReceived
// 0x0008 (0x0008 - 0x0000)
struct BlueprintFirebaseDynamicLinksProxy_ListenOnDynamicLinkReceived final
{
public:
	class UBlueprintFirebaseDynamicLinksProxy*    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BlueprintFirebaseDynamicLinksProxy_ListenOnDynamicLinkReceived) == 0x000008, "Wrong alignment on BlueprintFirebaseDynamicLinksProxy_ListenOnDynamicLinkReceived");
static_assert(sizeof(BlueprintFirebaseDynamicLinksProxy_ListenOnDynamicLinkReceived) == 0x000008, "Wrong size on BlueprintFirebaseDynamicLinksProxy_ListenOnDynamicLinkReceived");
static_assert(offsetof(BlueprintFirebaseDynamicLinksProxy_ListenOnDynamicLinkReceived, ReturnValue) == 0x000000, "Member 'BlueprintFirebaseDynamicLinksProxy_ListenOnDynamicLinkReceived::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.BlueprintFirebaseDynamicLinksProxy.OnLink
// 0x0018 (0x0018 - 0x0000)
struct BlueprintFirebaseDynamicLinksProxy_OnLink final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELinkMatchStrength                            MatchStrength;                                     // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(BlueprintFirebaseDynamicLinksProxy_OnLink) == 0x000008, "Wrong alignment on BlueprintFirebaseDynamicLinksProxy_OnLink");
static_assert(sizeof(BlueprintFirebaseDynamicLinksProxy_OnLink) == 0x000018, "Wrong size on BlueprintFirebaseDynamicLinksProxy_OnLink");
static_assert(offsetof(BlueprintFirebaseDynamicLinksProxy_OnLink, URL) == 0x000000, "Member 'BlueprintFirebaseDynamicLinksProxy_OnLink::URL' has a wrong offset!");
static_assert(offsetof(BlueprintFirebaseDynamicLinksProxy_OnLink, MatchStrength) == 0x000010, "Member 'BlueprintFirebaseDynamicLinksProxy_OnLink::MatchStrength' has a wrong offset!");

// Function FirebaseFeatures.DynamicLinksGetShortLinkWithComponents.GetShortLink
// 0x0170 (0x0170 - 0x0000)
struct DynamicLinksGetShortLinkWithComponents_GetShortLink final
{
public:
	struct FDynamicLinkComponents                 Components;                                        // 0x0000(0x0168)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UDynamicLinksGetShortLinkWithComponents* ReturnValue;                                       // 0x0168(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DynamicLinksGetShortLinkWithComponents_GetShortLink) == 0x000008, "Wrong alignment on DynamicLinksGetShortLinkWithComponents_GetShortLink");
static_assert(sizeof(DynamicLinksGetShortLinkWithComponents_GetShortLink) == 0x000170, "Wrong size on DynamicLinksGetShortLinkWithComponents_GetShortLink");
static_assert(offsetof(DynamicLinksGetShortLinkWithComponents_GetShortLink, Components) == 0x000000, "Member 'DynamicLinksGetShortLinkWithComponents_GetShortLink::Components' has a wrong offset!");
static_assert(offsetof(DynamicLinksGetShortLinkWithComponents_GetShortLink, ReturnValue) == 0x000168, "Member 'DynamicLinksGetShortLinkWithComponents_GetShortLink::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DynamicLinksGetShortLinkWithComponentsAndOptions.GetShortLink
// 0x0178 (0x0178 - 0x0000)
struct DynamicLinksGetShortLinkWithComponentsAndOptions_GetShortLink final
{
public:
	struct FDynamicLinkComponents                 Components;                                        // 0x0000(0x0168)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FDynamicLinkOptions                    Options;                                           // 0x0168(0x0001)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDynamicLinksGetShortLinkWithComponentsAndOptions* ReturnValue;                                       // 0x0170(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DynamicLinksGetShortLinkWithComponentsAndOptions_GetShortLink) == 0x000008, "Wrong alignment on DynamicLinksGetShortLinkWithComponentsAndOptions_GetShortLink");
static_assert(sizeof(DynamicLinksGetShortLinkWithComponentsAndOptions_GetShortLink) == 0x000178, "Wrong size on DynamicLinksGetShortLinkWithComponentsAndOptions_GetShortLink");
static_assert(offsetof(DynamicLinksGetShortLinkWithComponentsAndOptions_GetShortLink, Components) == 0x000000, "Member 'DynamicLinksGetShortLinkWithComponentsAndOptions_GetShortLink::Components' has a wrong offset!");
static_assert(offsetof(DynamicLinksGetShortLinkWithComponentsAndOptions_GetShortLink, Options) == 0x000168, "Member 'DynamicLinksGetShortLinkWithComponentsAndOptions_GetShortLink::Options' has a wrong offset!");
static_assert(offsetof(DynamicLinksGetShortLinkWithComponentsAndOptions_GetShortLink, ReturnValue) == 0x000170, "Member 'DynamicLinksGetShortLinkWithComponentsAndOptions_GetShortLink::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DynamicLinksGetShortLinkWithString.GetShortLink
// 0x0018 (0x0018 - 0x0000)
struct DynamicLinksGetShortLinkWithString_GetShortLink final
{
public:
	class FString                                 LongDynamicLink;                                   // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDynamicLinksGetShortLinkWithString*    ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DynamicLinksGetShortLinkWithString_GetShortLink) == 0x000008, "Wrong alignment on DynamicLinksGetShortLinkWithString_GetShortLink");
static_assert(sizeof(DynamicLinksGetShortLinkWithString_GetShortLink) == 0x000018, "Wrong size on DynamicLinksGetShortLinkWithString_GetShortLink");
static_assert(offsetof(DynamicLinksGetShortLinkWithString_GetShortLink, LongDynamicLink) == 0x000000, "Member 'DynamicLinksGetShortLinkWithString_GetShortLink::LongDynamicLink' has a wrong offset!");
static_assert(offsetof(DynamicLinksGetShortLinkWithString_GetShortLink, ReturnValue) == 0x000010, "Member 'DynamicLinksGetShortLinkWithString_GetShortLink::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DynamicLinksGetShortLinkWithStringAndOptions.GetShortLink
// 0x0020 (0x0020 - 0x0000)
struct DynamicLinksGetShortLinkWithStringAndOptions_GetShortLink final
{
public:
	class FString                                 LongDynamicLink;                                   // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDynamicLinkOptions                    Options;                                           // 0x0010(0x0001)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDynamicLinksGetShortLinkWithStringAndOptions* ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DynamicLinksGetShortLinkWithStringAndOptions_GetShortLink) == 0x000008, "Wrong alignment on DynamicLinksGetShortLinkWithStringAndOptions_GetShortLink");
static_assert(sizeof(DynamicLinksGetShortLinkWithStringAndOptions_GetShortLink) == 0x000020, "Wrong size on DynamicLinksGetShortLinkWithStringAndOptions_GetShortLink");
static_assert(offsetof(DynamicLinksGetShortLinkWithStringAndOptions_GetShortLink, LongDynamicLink) == 0x000000, "Member 'DynamicLinksGetShortLinkWithStringAndOptions_GetShortLink::LongDynamicLink' has a wrong offset!");
static_assert(offsetof(DynamicLinksGetShortLinkWithStringAndOptions_GetShortLink, Options) == 0x000010, "Member 'DynamicLinksGetShortLinkWithStringAndOptions_GetShortLink::Options' has a wrong offset!");
static_assert(offsetof(DynamicLinksGetShortLinkWithStringAndOptions_GetShortLink, ReturnValue) == 0x000018, "Member 'DynamicLinksGetShortLinkWithStringAndOptions_GetShortLink::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseGetInstallationIDProxy.GetInstallationID
// 0x0008 (0x0008 - 0x0000)
struct FirebaseGetInstallationIDProxy_GetInstallationID final
{
public:
	class UFirebaseGetInstallationIDProxy*        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseGetInstallationIDProxy_GetInstallationID) == 0x000008, "Wrong alignment on FirebaseGetInstallationIDProxy_GetInstallationID");
static_assert(sizeof(FirebaseGetInstallationIDProxy_GetInstallationID) == 0x000008, "Wrong size on FirebaseGetInstallationIDProxy_GetInstallationID");
static_assert(offsetof(FirebaseGetInstallationIDProxy_GetInstallationID, ReturnValue) == 0x000000, "Member 'FirebaseGetInstallationIDProxy_GetInstallationID::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseGetInstallationAuthTokenProxy.GetInstallationAuthToken
// 0x0010 (0x0010 - 0x0000)
struct FirebaseGetInstallationAuthTokenProxy_GetInstallationAuthToken final
{
public:
	bool                                          bForceRefresh;                                     // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFirebaseGetInstallationAuthTokenProxy* ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseGetInstallationAuthTokenProxy_GetInstallationAuthToken) == 0x000008, "Wrong alignment on FirebaseGetInstallationAuthTokenProxy_GetInstallationAuthToken");
static_assert(sizeof(FirebaseGetInstallationAuthTokenProxy_GetInstallationAuthToken) == 0x000010, "Wrong size on FirebaseGetInstallationAuthTokenProxy_GetInstallationAuthToken");
static_assert(offsetof(FirebaseGetInstallationAuthTokenProxy_GetInstallationAuthToken, bForceRefresh) == 0x000000, "Member 'FirebaseGetInstallationAuthTokenProxy_GetInstallationAuthToken::bForceRefresh' has a wrong offset!");
static_assert(offsetof(FirebaseGetInstallationAuthTokenProxy_GetInstallationAuthToken, ReturnValue) == 0x000008, "Member 'FirebaseGetInstallationAuthTokenProxy_GetInstallationAuthToken::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseDeleteInstallationProxy.DeleteInstallation
// 0x0008 (0x0008 - 0x0000)
struct FirebaseDeleteInstallationProxy_DeleteInstallation final
{
public:
	class UFirebaseDeleteInstallationProxy*       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseDeleteInstallationProxy_DeleteInstallation) == 0x000008, "Wrong alignment on FirebaseDeleteInstallationProxy_DeleteInstallation");
static_assert(sizeof(FirebaseDeleteInstallationProxy_DeleteInstallation) == 0x000008, "Wrong size on FirebaseDeleteInstallationProxy_DeleteInstallation");
static_assert(offsetof(FirebaseDeleteInstallationProxy_DeleteInstallation, ReturnValue) == 0x000000, "Member 'FirebaseDeleteInstallationProxy_DeleteInstallation::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebasePerformanceLibrary.Blueprint_GetMetricValue
// 0x0078 (0x0078 - 0x0000)
struct FirebasePerformanceLibrary_Blueprint_GetMetricValue final
{
public:
	struct FFirebaseTrace                         Trace;                                             // 0x0000(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 MetricName;                                        // 0x0060(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebasePerformanceLibrary_Blueprint_GetMetricValue) == 0x000008, "Wrong alignment on FirebasePerformanceLibrary_Blueprint_GetMetricValue");
static_assert(sizeof(FirebasePerformanceLibrary_Blueprint_GetMetricValue) == 0x000078, "Wrong size on FirebasePerformanceLibrary_Blueprint_GetMetricValue");
static_assert(offsetof(FirebasePerformanceLibrary_Blueprint_GetMetricValue, Trace) == 0x000000, "Member 'FirebasePerformanceLibrary_Blueprint_GetMetricValue::Trace' has a wrong offset!");
static_assert(offsetof(FirebasePerformanceLibrary_Blueprint_GetMetricValue, MetricName) == 0x000060, "Member 'FirebasePerformanceLibrary_Blueprint_GetMetricValue::MetricName' has a wrong offset!");
static_assert(offsetof(FirebasePerformanceLibrary_Blueprint_GetMetricValue, ReturnValue) == 0x000070, "Member 'FirebasePerformanceLibrary_Blueprint_GetMetricValue::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebasePerformanceLibrary.Blueprint_GetName
// 0x0070 (0x0070 - 0x0000)
struct FirebasePerformanceLibrary_Blueprint_GetName final
{
public:
	struct FFirebaseTrace                         Trace;                                             // 0x0000(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0060(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebasePerformanceLibrary_Blueprint_GetName) == 0x000008, "Wrong alignment on FirebasePerformanceLibrary_Blueprint_GetName");
static_assert(sizeof(FirebasePerformanceLibrary_Blueprint_GetName) == 0x000070, "Wrong size on FirebasePerformanceLibrary_Blueprint_GetName");
static_assert(offsetof(FirebasePerformanceLibrary_Blueprint_GetName, Trace) == 0x000000, "Member 'FirebasePerformanceLibrary_Blueprint_GetName::Trace' has a wrong offset!");
static_assert(offsetof(FirebasePerformanceLibrary_Blueprint_GetName, ReturnValue) == 0x000060, "Member 'FirebasePerformanceLibrary_Blueprint_GetName::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebasePerformanceLibrary.Blueprint_IncrementMetric
// 0x0078 (0x0078 - 0x0000)
struct FirebasePerformanceLibrary_Blueprint_IncrementMetric final
{
public:
	struct FFirebaseTrace                         Trace;                                             // 0x0000(0x0060)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 MetricName;                                        // 0x0060(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         ByValue;                                           // 0x0070(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebasePerformanceLibrary_Blueprint_IncrementMetric) == 0x000008, "Wrong alignment on FirebasePerformanceLibrary_Blueprint_IncrementMetric");
static_assert(sizeof(FirebasePerformanceLibrary_Blueprint_IncrementMetric) == 0x000078, "Wrong size on FirebasePerformanceLibrary_Blueprint_IncrementMetric");
static_assert(offsetof(FirebasePerformanceLibrary_Blueprint_IncrementMetric, Trace) == 0x000000, "Member 'FirebasePerformanceLibrary_Blueprint_IncrementMetric::Trace' has a wrong offset!");
static_assert(offsetof(FirebasePerformanceLibrary_Blueprint_IncrementMetric, MetricName) == 0x000060, "Member 'FirebasePerformanceLibrary_Blueprint_IncrementMetric::MetricName' has a wrong offset!");
static_assert(offsetof(FirebasePerformanceLibrary_Blueprint_IncrementMetric, ByValue) == 0x000070, "Member 'FirebasePerformanceLibrary_Blueprint_IncrementMetric::ByValue' has a wrong offset!");

// Function FirebaseFeatures.FirebasePerformanceLibrary.Blueprint_SetMetricValue
// 0x0078 (0x0078 - 0x0000)
struct FirebasePerformanceLibrary_Blueprint_SetMetricValue final
{
public:
	struct FFirebaseTrace                         Trace;                                             // 0x0000(0x0060)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 MetricName;                                        // 0x0060(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         Value;                                             // 0x0070(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebasePerformanceLibrary_Blueprint_SetMetricValue) == 0x000008, "Wrong alignment on FirebasePerformanceLibrary_Blueprint_SetMetricValue");
static_assert(sizeof(FirebasePerformanceLibrary_Blueprint_SetMetricValue) == 0x000078, "Wrong size on FirebasePerformanceLibrary_Blueprint_SetMetricValue");
static_assert(offsetof(FirebasePerformanceLibrary_Blueprint_SetMetricValue, Trace) == 0x000000, "Member 'FirebasePerformanceLibrary_Blueprint_SetMetricValue::Trace' has a wrong offset!");
static_assert(offsetof(FirebasePerformanceLibrary_Blueprint_SetMetricValue, MetricName) == 0x000060, "Member 'FirebasePerformanceLibrary_Blueprint_SetMetricValue::MetricName' has a wrong offset!");
static_assert(offsetof(FirebasePerformanceLibrary_Blueprint_SetMetricValue, Value) == 0x000070, "Member 'FirebasePerformanceLibrary_Blueprint_SetMetricValue::Value' has a wrong offset!");

// Function FirebaseFeatures.FirebasePerformanceLibrary.Blueprint_Start
// 0x0060 (0x0060 - 0x0000)
struct FirebasePerformanceLibrary_Blueprint_Start final
{
public:
	struct FFirebaseTrace                         Trace;                                             // 0x0000(0x0060)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebasePerformanceLibrary_Blueprint_Start) == 0x000008, "Wrong alignment on FirebasePerformanceLibrary_Blueprint_Start");
static_assert(sizeof(FirebasePerformanceLibrary_Blueprint_Start) == 0x000060, "Wrong size on FirebasePerformanceLibrary_Blueprint_Start");
static_assert(offsetof(FirebasePerformanceLibrary_Blueprint_Start, Trace) == 0x000000, "Member 'FirebasePerformanceLibrary_Blueprint_Start::Trace' has a wrong offset!");

// Function FirebaseFeatures.FirebasePerformanceLibrary.Blueprint_Stop
// 0x0060 (0x0060 - 0x0000)
struct FirebasePerformanceLibrary_Blueprint_Stop final
{
public:
	struct FFirebaseTrace                         Trace;                                             // 0x0000(0x0060)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebasePerformanceLibrary_Blueprint_Stop) == 0x000008, "Wrong alignment on FirebasePerformanceLibrary_Blueprint_Stop");
static_assert(sizeof(FirebasePerformanceLibrary_Blueprint_Stop) == 0x000060, "Wrong size on FirebasePerformanceLibrary_Blueprint_Stop");
static_assert(offsetof(FirebasePerformanceLibrary_Blueprint_Stop, Trace) == 0x000000, "Member 'FirebasePerformanceLibrary_Blueprint_Stop::Trace' has a wrong offset!");

// Function FirebaseFeatures.FirebasePerformanceLibrary.CreateAndStartTrace
// 0x0070 (0x0070 - 0x0000)
struct FirebasePerformanceLibrary_CreateAndStartTrace final
{
public:
	class FString                                 TraceName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFirebaseTrace                         ReturnValue;                                       // 0x0010(0x0060)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebasePerformanceLibrary_CreateAndStartTrace) == 0x000008, "Wrong alignment on FirebasePerformanceLibrary_CreateAndStartTrace");
static_assert(sizeof(FirebasePerformanceLibrary_CreateAndStartTrace) == 0x000070, "Wrong size on FirebasePerformanceLibrary_CreateAndStartTrace");
static_assert(offsetof(FirebasePerformanceLibrary_CreateAndStartTrace, TraceName) == 0x000000, "Member 'FirebasePerformanceLibrary_CreateAndStartTrace::TraceName' has a wrong offset!");
static_assert(offsetof(FirebasePerformanceLibrary_CreateAndStartTrace, ReturnValue) == 0x000010, "Member 'FirebasePerformanceLibrary_CreateAndStartTrace::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebasePerformanceLibrary.CreateTrace
// 0x0070 (0x0070 - 0x0000)
struct FirebasePerformanceLibrary_CreateTrace final
{
public:
	class FString                                 TraceName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFirebaseTrace                         ReturnValue;                                       // 0x0010(0x0060)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebasePerformanceLibrary_CreateTrace) == 0x000008, "Wrong alignment on FirebasePerformanceLibrary_CreateTrace");
static_assert(sizeof(FirebasePerformanceLibrary_CreateTrace) == 0x000070, "Wrong size on FirebasePerformanceLibrary_CreateTrace");
static_assert(offsetof(FirebasePerformanceLibrary_CreateTrace, TraceName) == 0x000000, "Member 'FirebasePerformanceLibrary_CreateTrace::TraceName' has a wrong offset!");
static_assert(offsetof(FirebasePerformanceLibrary_CreateTrace, ReturnValue) == 0x000010, "Member 'FirebasePerformanceLibrary_CreateTrace::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebasePerformanceLibrary.SetDataCollectionEnabled
// 0x0001 (0x0001 - 0x0000)
struct FirebasePerformanceLibrary_SetDataCollectionEnabled final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebasePerformanceLibrary_SetDataCollectionEnabled) == 0x000001, "Wrong alignment on FirebasePerformanceLibrary_SetDataCollectionEnabled");
static_assert(sizeof(FirebasePerformanceLibrary_SetDataCollectionEnabled) == 0x000001, "Wrong size on FirebasePerformanceLibrary_SetDataCollectionEnabled");
static_assert(offsetof(FirebasePerformanceLibrary_SetDataCollectionEnabled, bEnabled) == 0x000000, "Member 'FirebasePerformanceLibrary_SetDataCollectionEnabled::bEnabled' has a wrong offset!");

// Function FirebaseFeatures.FirebasePerformanceLibrary.SetInstrumentationEnabled
// 0x0001 (0x0001 - 0x0000)
struct FirebasePerformanceLibrary_SetInstrumentationEnabled final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebasePerformanceLibrary_SetInstrumentationEnabled) == 0x000001, "Wrong alignment on FirebasePerformanceLibrary_SetInstrumentationEnabled");
static_assert(sizeof(FirebasePerformanceLibrary_SetInstrumentationEnabled) == 0x000001, "Wrong size on FirebasePerformanceLibrary_SetInstrumentationEnabled");
static_assert(offsetof(FirebasePerformanceLibrary_SetInstrumentationEnabled, bEnabled) == 0x000000, "Member 'FirebasePerformanceLibrary_SetInstrumentationEnabled::bEnabled' has a wrong offset!");

// Function FirebaseFeatures.FirebaseSDKLibrary.CreateFirebaseApp
// 0x0088 (0x0088 - 0x0000)
struct FirebaseSDKLibrary_CreateFirebaseApp final
{
public:
	class FString                                 AppName;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFirebaseAppOptions                    Options;                                           // 0x0010(0x0070)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	EFirebaseSDKCreateApp                         Branches;                                          // 0x0080(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FirebaseSDKLibrary_CreateFirebaseApp) == 0x000008, "Wrong alignment on FirebaseSDKLibrary_CreateFirebaseApp");
static_assert(sizeof(FirebaseSDKLibrary_CreateFirebaseApp) == 0x000088, "Wrong size on FirebaseSDKLibrary_CreateFirebaseApp");
static_assert(offsetof(FirebaseSDKLibrary_CreateFirebaseApp, AppName) == 0x000000, "Member 'FirebaseSDKLibrary_CreateFirebaseApp::AppName' has a wrong offset!");
static_assert(offsetof(FirebaseSDKLibrary_CreateFirebaseApp, Options) == 0x000010, "Member 'FirebaseSDKLibrary_CreateFirebaseApp::Options' has a wrong offset!");
static_assert(offsetof(FirebaseSDKLibrary_CreateFirebaseApp, Branches) == 0x000080, "Member 'FirebaseSDKLibrary_CreateFirebaseApp::Branches' has a wrong offset!");

// Function FirebaseFeatures.FirebaseSDKLibrary.SwitchFirebaseApp
// 0x0018 (0x0018 - 0x0000)
struct FirebaseSDKLibrary_SwitchFirebaseApp final
{
public:
	class FString                                 AppName;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFirebaseSDKCreateApp                         Branches;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FirebaseSDKLibrary_SwitchFirebaseApp) == 0x000008, "Wrong alignment on FirebaseSDKLibrary_SwitchFirebaseApp");
static_assert(sizeof(FirebaseSDKLibrary_SwitchFirebaseApp) == 0x000018, "Wrong size on FirebaseSDKLibrary_SwitchFirebaseApp");
static_assert(offsetof(FirebaseSDKLibrary_SwitchFirebaseApp, AppName) == 0x000000, "Member 'FirebaseSDKLibrary_SwitchFirebaseApp::AppName' has a wrong offset!");
static_assert(offsetof(FirebaseSDKLibrary_SwitchFirebaseApp, Branches) == 0x000010, "Member 'FirebaseSDKLibrary_SwitchFirebaseApp::Branches' has a wrong offset!");

// Function FirebaseFeatures.FirebaseInitializationProxy.WaitForInitialization
// 0x0008 (0x0008 - 0x0000)
struct FirebaseInitializationProxy_WaitForInitialization final
{
public:
	class UFirebaseInitializationProxy*           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseInitializationProxy_WaitForInitialization) == 0x000008, "Wrong alignment on FirebaseInitializationProxy_WaitForInitialization");
static_assert(sizeof(FirebaseInitializationProxy_WaitForInitialization) == 0x000008, "Wrong size on FirebaseInitializationProxy_WaitForInitialization");
static_assert(offsetof(FirebaseInitializationProxy_WaitForInitialization, ReturnValue) == 0x000000, "Member 'FirebaseInitializationProxy_WaitForInitialization::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.VariantLibrary.FromArray
// 0x0028 (0x0028 - 0x0000)
struct VariantLibrary_FromArray final
{
public:
	TArray<struct FFirebaseVariant>               Value;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FFirebaseVariant                       ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VariantLibrary_FromArray) == 0x000008, "Wrong alignment on VariantLibrary_FromArray");
static_assert(sizeof(VariantLibrary_FromArray) == 0x000028, "Wrong size on VariantLibrary_FromArray");
static_assert(offsetof(VariantLibrary_FromArray, Value) == 0x000000, "Member 'VariantLibrary_FromArray::Value' has a wrong offset!");
static_assert(offsetof(VariantLibrary_FromArray, ReturnValue) == 0x000010, "Member 'VariantLibrary_FromArray::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.VariantLibrary.FromBool
// 0x0020 (0x0020 - 0x0000)
struct VariantLibrary_FromBool final
{
public:
	bool                                          bValue;                                            // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFirebaseVariant                       ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VariantLibrary_FromBool) == 0x000008, "Wrong alignment on VariantLibrary_FromBool");
static_assert(sizeof(VariantLibrary_FromBool) == 0x000020, "Wrong size on VariantLibrary_FromBool");
static_assert(offsetof(VariantLibrary_FromBool, bValue) == 0x000000, "Member 'VariantLibrary_FromBool::bValue' has a wrong offset!");
static_assert(offsetof(VariantLibrary_FromBool, ReturnValue) == 0x000008, "Member 'VariantLibrary_FromBool::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.VariantLibrary.FromFloat
// 0x0020 (0x0020 - 0x0000)
struct VariantLibrary_FromFloat final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFirebaseVariant                       ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VariantLibrary_FromFloat) == 0x000008, "Wrong alignment on VariantLibrary_FromFloat");
static_assert(sizeof(VariantLibrary_FromFloat) == 0x000020, "Wrong size on VariantLibrary_FromFloat");
static_assert(offsetof(VariantLibrary_FromFloat, Value) == 0x000000, "Member 'VariantLibrary_FromFloat::Value' has a wrong offset!");
static_assert(offsetof(VariantLibrary_FromFloat, ReturnValue) == 0x000008, "Member 'VariantLibrary_FromFloat::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.VariantLibrary.FromInt32
// 0x0020 (0x0020 - 0x0000)
struct VariantLibrary_FromInt32 final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFirebaseVariant                       ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VariantLibrary_FromInt32) == 0x000008, "Wrong alignment on VariantLibrary_FromInt32");
static_assert(sizeof(VariantLibrary_FromInt32) == 0x000020, "Wrong size on VariantLibrary_FromInt32");
static_assert(offsetof(VariantLibrary_FromInt32, Value) == 0x000000, "Member 'VariantLibrary_FromInt32::Value' has a wrong offset!");
static_assert(offsetof(VariantLibrary_FromInt32, ReturnValue) == 0x000008, "Member 'VariantLibrary_FromInt32::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.VariantLibrary.FromInt64
// 0x0020 (0x0020 - 0x0000)
struct VariantLibrary_FromInt64 final
{
public:
	int64                                         Value;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFirebaseVariant                       ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VariantLibrary_FromInt64) == 0x000008, "Wrong alignment on VariantLibrary_FromInt64");
static_assert(sizeof(VariantLibrary_FromInt64) == 0x000020, "Wrong size on VariantLibrary_FromInt64");
static_assert(offsetof(VariantLibrary_FromInt64, Value) == 0x000000, "Member 'VariantLibrary_FromInt64::Value' has a wrong offset!");
static_assert(offsetof(VariantLibrary_FromInt64, ReturnValue) == 0x000008, "Member 'VariantLibrary_FromInt64::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.VariantLibrary.FromMap
// 0x0068 (0x0068 - 0x0000)
struct VariantLibrary_FromMap final
{
public:
	TMap<struct FFirebaseVariant, struct FFirebaseVariant> Value;                                             // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FFirebaseVariant                       ReturnValue;                                       // 0x0050(0x0018)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VariantLibrary_FromMap) == 0x000008, "Wrong alignment on VariantLibrary_FromMap");
static_assert(sizeof(VariantLibrary_FromMap) == 0x000068, "Wrong size on VariantLibrary_FromMap");
static_assert(offsetof(VariantLibrary_FromMap, Value) == 0x000000, "Member 'VariantLibrary_FromMap::Value' has a wrong offset!");
static_assert(offsetof(VariantLibrary_FromMap, ReturnValue) == 0x000050, "Member 'VariantLibrary_FromMap::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.VariantLibrary.FromNull
// 0x0018 (0x0018 - 0x0000)
struct VariantLibrary_FromNull final
{
public:
	struct FFirebaseVariant                       ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VariantLibrary_FromNull) == 0x000008, "Wrong alignment on VariantLibrary_FromNull");
static_assert(sizeof(VariantLibrary_FromNull) == 0x000018, "Wrong size on VariantLibrary_FromNull");
static_assert(offsetof(VariantLibrary_FromNull, ReturnValue) == 0x000000, "Member 'VariantLibrary_FromNull::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.VariantLibrary.FromString
// 0x0028 (0x0028 - 0x0000)
struct VariantLibrary_FromString final
{
public:
	class FString                                 Value;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFirebaseVariant                       ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VariantLibrary_FromString) == 0x000008, "Wrong alignment on VariantLibrary_FromString");
static_assert(sizeof(VariantLibrary_FromString) == 0x000028, "Wrong size on VariantLibrary_FromString");
static_assert(offsetof(VariantLibrary_FromString, Value) == 0x000000, "Member 'VariantLibrary_FromString::Value' has a wrong offset!");
static_assert(offsetof(VariantLibrary_FromString, ReturnValue) == 0x000010, "Member 'VariantLibrary_FromString::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.VariantLibrary.FromStringMap
// 0x0068 (0x0068 - 0x0000)
struct VariantLibrary_FromStringMap final
{
public:
	TMap<class FString, struct FFirebaseVariant>  Value;                                             // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FFirebaseVariant                       ReturnValue;                                       // 0x0050(0x0018)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VariantLibrary_FromStringMap) == 0x000008, "Wrong alignment on VariantLibrary_FromStringMap");
static_assert(sizeof(VariantLibrary_FromStringMap) == 0x000068, "Wrong size on VariantLibrary_FromStringMap");
static_assert(offsetof(VariantLibrary_FromStringMap, Value) == 0x000000, "Member 'VariantLibrary_FromStringMap::Value' has a wrong offset!");
static_assert(offsetof(VariantLibrary_FromStringMap, ReturnValue) == 0x000050, "Member 'VariantLibrary_FromStringMap::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.VariantLibrary.MakeVariantMap
// 0x0050 (0x0050 - 0x0000)
struct VariantLibrary_MakeVariantMap final
{
public:
	TMap<struct FFirebaseVariant, struct FFirebaseVariant> ReturnValue;                                       // 0x0000(0x0050)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VariantLibrary_MakeVariantMap) == 0x000008, "Wrong alignment on VariantLibrary_MakeVariantMap");
static_assert(sizeof(VariantLibrary_MakeVariantMap) == 0x000050, "Wrong size on VariantLibrary_MakeVariantMap");
static_assert(offsetof(VariantLibrary_MakeVariantMap, ReturnValue) == 0x000000, "Member 'VariantLibrary_MakeVariantMap::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.VariantLibrary.ServerTimestamp
// 0x0018 (0x0018 - 0x0000)
struct VariantLibrary_ServerTimestamp final
{
public:
	struct FFirebaseVariant                       ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VariantLibrary_ServerTimestamp) == 0x000008, "Wrong alignment on VariantLibrary_ServerTimestamp");
static_assert(sizeof(VariantLibrary_ServerTimestamp) == 0x000018, "Wrong size on VariantLibrary_ServerTimestamp");
static_assert(offsetof(VariantLibrary_ServerTimestamp, ReturnValue) == 0x000000, "Member 'VariantLibrary_ServerTimestamp::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.VariantLibrary.ToArray
// 0x0028 (0x0028 - 0x0000)
struct VariantLibrary_ToArray final
{
public:
	struct FFirebaseVariant                       Value;                                             // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFirebaseVariant>               ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VariantLibrary_ToArray) == 0x000008, "Wrong alignment on VariantLibrary_ToArray");
static_assert(sizeof(VariantLibrary_ToArray) == 0x000028, "Wrong size on VariantLibrary_ToArray");
static_assert(offsetof(VariantLibrary_ToArray, Value) == 0x000000, "Member 'VariantLibrary_ToArray::Value' has a wrong offset!");
static_assert(offsetof(VariantLibrary_ToArray, ReturnValue) == 0x000018, "Member 'VariantLibrary_ToArray::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.VariantLibrary.ToBinary
// 0x0028 (0x0028 - 0x0000)
struct VariantLibrary_ToBinary final
{
public:
	struct FFirebaseVariant                       Value;                                             // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VariantLibrary_ToBinary) == 0x000008, "Wrong alignment on VariantLibrary_ToBinary");
static_assert(sizeof(VariantLibrary_ToBinary) == 0x000028, "Wrong size on VariantLibrary_ToBinary");
static_assert(offsetof(VariantLibrary_ToBinary, Value) == 0x000000, "Member 'VariantLibrary_ToBinary::Value' has a wrong offset!");
static_assert(offsetof(VariantLibrary_ToBinary, ReturnValue) == 0x000018, "Member 'VariantLibrary_ToBinary::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.VariantLibrary.ToBool
// 0x0020 (0x0020 - 0x0000)
struct VariantLibrary_ToBool final
{
public:
	struct FFirebaseVariant                       Value;                                             // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VariantLibrary_ToBool) == 0x000008, "Wrong alignment on VariantLibrary_ToBool");
static_assert(sizeof(VariantLibrary_ToBool) == 0x000020, "Wrong size on VariantLibrary_ToBool");
static_assert(offsetof(VariantLibrary_ToBool, Value) == 0x000000, "Member 'VariantLibrary_ToBool::Value' has a wrong offset!");
static_assert(offsetof(VariantLibrary_ToBool, ReturnValue) == 0x000018, "Member 'VariantLibrary_ToBool::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.VariantLibrary.ToFloat
// 0x0020 (0x0020 - 0x0000)
struct VariantLibrary_ToFloat final
{
public:
	struct FFirebaseVariant                       Value;                                             // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VariantLibrary_ToFloat) == 0x000008, "Wrong alignment on VariantLibrary_ToFloat");
static_assert(sizeof(VariantLibrary_ToFloat) == 0x000020, "Wrong size on VariantLibrary_ToFloat");
static_assert(offsetof(VariantLibrary_ToFloat, Value) == 0x000000, "Member 'VariantLibrary_ToFloat::Value' has a wrong offset!");
static_assert(offsetof(VariantLibrary_ToFloat, ReturnValue) == 0x000018, "Member 'VariantLibrary_ToFloat::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.VariantLibrary.ToInt32
// 0x0020 (0x0020 - 0x0000)
struct VariantLibrary_ToInt32 final
{
public:
	struct FFirebaseVariant                       Value;                                             // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VariantLibrary_ToInt32) == 0x000008, "Wrong alignment on VariantLibrary_ToInt32");
static_assert(sizeof(VariantLibrary_ToInt32) == 0x000020, "Wrong size on VariantLibrary_ToInt32");
static_assert(offsetof(VariantLibrary_ToInt32, Value) == 0x000000, "Member 'VariantLibrary_ToInt32::Value' has a wrong offset!");
static_assert(offsetof(VariantLibrary_ToInt32, ReturnValue) == 0x000018, "Member 'VariantLibrary_ToInt32::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.VariantLibrary.ToInt64
// 0x0020 (0x0020 - 0x0000)
struct VariantLibrary_ToInt64 final
{
public:
	struct FFirebaseVariant                       Value;                                             // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VariantLibrary_ToInt64) == 0x000008, "Wrong alignment on VariantLibrary_ToInt64");
static_assert(sizeof(VariantLibrary_ToInt64) == 0x000020, "Wrong size on VariantLibrary_ToInt64");
static_assert(offsetof(VariantLibrary_ToInt64, Value) == 0x000000, "Member 'VariantLibrary_ToInt64::Value' has a wrong offset!");
static_assert(offsetof(VariantLibrary_ToInt64, ReturnValue) == 0x000018, "Member 'VariantLibrary_ToInt64::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.VariantLibrary.ToJson
// 0x0028 (0x0028 - 0x0000)
struct VariantLibrary_ToJson final
{
public:
	struct FFirebaseVariant                       Value;                                             // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VariantLibrary_ToJson) == 0x000008, "Wrong alignment on VariantLibrary_ToJson");
static_assert(sizeof(VariantLibrary_ToJson) == 0x000028, "Wrong size on VariantLibrary_ToJson");
static_assert(offsetof(VariantLibrary_ToJson, Value) == 0x000000, "Member 'VariantLibrary_ToJson::Value' has a wrong offset!");
static_assert(offsetof(VariantLibrary_ToJson, ReturnValue) == 0x000018, "Member 'VariantLibrary_ToJson::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.VariantLibrary.ToMap
// 0x0068 (0x0068 - 0x0000)
struct VariantLibrary_ToMap final
{
public:
	struct FFirebaseVariant                       Value;                                             // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FFirebaseVariant, struct FFirebaseVariant> ReturnValue;                                       // 0x0018(0x0050)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VariantLibrary_ToMap) == 0x000008, "Wrong alignment on VariantLibrary_ToMap");
static_assert(sizeof(VariantLibrary_ToMap) == 0x000068, "Wrong size on VariantLibrary_ToMap");
static_assert(offsetof(VariantLibrary_ToMap, Value) == 0x000000, "Member 'VariantLibrary_ToMap::Value' has a wrong offset!");
static_assert(offsetof(VariantLibrary_ToMap, ReturnValue) == 0x000018, "Member 'VariantLibrary_ToMap::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.VariantLibrary.ToString
// 0x0028 (0x0028 - 0x0000)
struct VariantLibrary_ToString final
{
public:
	struct FFirebaseVariant                       Value;                                             // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VariantLibrary_ToString) == 0x000008, "Wrong alignment on VariantLibrary_ToString");
static_assert(sizeof(VariantLibrary_ToString) == 0x000028, "Wrong size on VariantLibrary_ToString");
static_assert(offsetof(VariantLibrary_ToString, Value) == 0x000000, "Member 'VariantLibrary_ToString::Value' has a wrong offset!");
static_assert(offsetof(VariantLibrary_ToString, ReturnValue) == 0x000018, "Member 'VariantLibrary_ToString::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.Firestore.CollectionGroup
// 0x0018 (0x0018 - 0x0000)
struct Firestore_CollectionGroup final
{
public:
	class FString                                 CollectionId;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirestoreQuery*                        ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Firestore_CollectionGroup) == 0x000008, "Wrong alignment on Firestore_CollectionGroup");
static_assert(sizeof(Firestore_CollectionGroup) == 0x000018, "Wrong size on Firestore_CollectionGroup");
static_assert(offsetof(Firestore_CollectionGroup, CollectionId) == 0x000000, "Member 'Firestore_CollectionGroup::CollectionId' has a wrong offset!");
static_assert(offsetof(Firestore_CollectionGroup, ReturnValue) == 0x000010, "Member 'Firestore_CollectionGroup::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.Firestore.CreateBatch
// 0x0008 (0x0008 - 0x0000)
struct Firestore_CreateBatch final
{
public:
	struct FWriteBatch                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(Firestore_CreateBatch) == 0x000008, "Wrong alignment on Firestore_CreateBatch");
static_assert(sizeof(Firestore_CreateBatch) == 0x000008, "Wrong size on Firestore_CreateBatch");
static_assert(offsetof(Firestore_CreateBatch, ReturnValue) == 0x000000, "Member 'Firestore_CreateBatch::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.Firestore.GetCollection
// 0x0018 (0x0018 - 0x0000)
struct Firestore_GetCollection final
{
public:
	class FString                                 CollectionPath;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirestoreCollectionReference*          ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Firestore_GetCollection) == 0x000008, "Wrong alignment on Firestore_GetCollection");
static_assert(sizeof(Firestore_GetCollection) == 0x000018, "Wrong size on Firestore_GetCollection");
static_assert(offsetof(Firestore_GetCollection, CollectionPath) == 0x000000, "Member 'Firestore_GetCollection::CollectionPath' has a wrong offset!");
static_assert(offsetof(Firestore_GetCollection, ReturnValue) == 0x000010, "Member 'Firestore_GetCollection::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.Firestore.GetDocument
// 0x0018 (0x0018 - 0x0000)
struct Firestore_GetDocument final
{
public:
	class FString                                 DocumentPath;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirestoreDocumentReference*            ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Firestore_GetDocument) == 0x000008, "Wrong alignment on Firestore_GetDocument");
static_assert(sizeof(Firestore_GetDocument) == 0x000018, "Wrong size on Firestore_GetDocument");
static_assert(offsetof(Firestore_GetDocument, DocumentPath) == 0x000000, "Member 'Firestore_GetDocument::DocumentPath' has a wrong offset!");
static_assert(offsetof(Firestore_GetDocument, ReturnValue) == 0x000010, "Member 'Firestore_GetDocument::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.Firestore.GetSettings
// 0x0018 (0x0018 - 0x0000)
struct Firestore_GetSettings final
{
public:
	struct FFirestoreSettings                     ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(Firestore_GetSettings) == 0x000008, "Wrong alignment on Firestore_GetSettings");
static_assert(sizeof(Firestore_GetSettings) == 0x000018, "Wrong size on Firestore_GetSettings");
static_assert(offsetof(Firestore_GetSettings, ReturnValue) == 0x000000, "Member 'Firestore_GetSettings::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.Firestore.SetPersistenceEnabled
// 0x0001 (0x0001 - 0x0000)
struct Firestore_SetPersistenceEnabled final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Firestore_SetPersistenceEnabled) == 0x000001, "Wrong alignment on Firestore_SetPersistenceEnabled");
static_assert(sizeof(Firestore_SetPersistenceEnabled) == 0x000001, "Wrong size on Firestore_SetPersistenceEnabled");
static_assert(offsetof(Firestore_SetPersistenceEnabled, bEnabled) == 0x000000, "Member 'Firestore_SetPersistenceEnabled::bEnabled' has a wrong offset!");

// Function FirebaseFeatures.Firestore.SetSettings
// 0x0018 (0x0018 - 0x0000)
struct Firestore_SetSettings final
{
public:
	struct FFirestoreSettings                     Settings;                                          // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(Firestore_SetSettings) == 0x000008, "Wrong alignment on Firestore_SetSettings");
static_assert(sizeof(Firestore_SetSettings) == 0x000018, "Wrong size on Firestore_SetSettings");
static_assert(offsetof(Firestore_SetSettings, Settings) == 0x000000, "Member 'Firestore_SetSettings::Settings' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.ArrayRemove
// 0x0018 (0x0018 - 0x0000)
struct FirestoreLibrary_ArrayRemove final
{
public:
	TArray<struct FFirestoreFieldValue>           Elements;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FFirestoreFieldValue                   ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_ArrayRemove) == 0x000008, "Wrong alignment on FirestoreLibrary_ArrayRemove");
static_assert(sizeof(FirestoreLibrary_ArrayRemove) == 0x000018, "Wrong size on FirestoreLibrary_ArrayRemove");
static_assert(offsetof(FirestoreLibrary_ArrayRemove, Elements) == 0x000000, "Member 'FirestoreLibrary_ArrayRemove::Elements' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_ArrayRemove, ReturnValue) == 0x000010, "Member 'FirestoreLibrary_ArrayRemove::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.ArrayUnion
// 0x0018 (0x0018 - 0x0000)
struct FirestoreLibrary_ArrayUnion final
{
public:
	TArray<struct FFirestoreFieldValue>           Elements;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FFirestoreFieldValue                   ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_ArrayUnion) == 0x000008, "Wrong alignment on FirestoreLibrary_ArrayUnion");
static_assert(sizeof(FirestoreLibrary_ArrayUnion) == 0x000018, "Wrong size on FirestoreLibrary_ArrayUnion");
static_assert(offsetof(FirestoreLibrary_ArrayUnion, Elements) == 0x000000, "Member 'FirestoreLibrary_ArrayUnion::Elements' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_ArrayUnion, ReturnValue) == 0x000010, "Member 'FirestoreLibrary_ArrayUnion::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.Delete
// 0x0010 (0x0010 - 0x0000)
struct FirestoreLibrary_Delete final
{
public:
	struct FFirestoreTransaction                  Transaction;                                       // 0x0000(0x0008)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	const class UFirestoreDocumentReference*      Document;                                          // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_Delete) == 0x000008, "Wrong alignment on FirestoreLibrary_Delete");
static_assert(sizeof(FirestoreLibrary_Delete) == 0x000010, "Wrong size on FirestoreLibrary_Delete");
static_assert(offsetof(FirestoreLibrary_Delete, Transaction) == 0x000000, "Member 'FirestoreLibrary_Delete::Transaction' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_Delete, Document) == 0x000008, "Member 'FirestoreLibrary_Delete::Document' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.DocumentId
// 0x0008 (0x0008 - 0x0000)
struct FirestoreLibrary_DocumentId final
{
public:
	struct FFirestoreFieldPath                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_DocumentId) == 0x000008, "Wrong alignment on FirestoreLibrary_DocumentId");
static_assert(sizeof(FirestoreLibrary_DocumentId) == 0x000008, "Wrong size on FirestoreLibrary_DocumentId");
static_assert(offsetof(FirestoreLibrary_DocumentId, ReturnValue) == 0x000000, "Member 'FirestoreLibrary_DocumentId::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.Exists
// 0x0018 (0x0018 - 0x0000)
struct FirestoreLibrary_Exists final
{
public:
	struct FFirestoreDocumentSnapshot             DocumentSnapshot;                                  // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FirestoreLibrary_Exists) == 0x000008, "Wrong alignment on FirestoreLibrary_Exists");
static_assert(sizeof(FirestoreLibrary_Exists) == 0x000018, "Wrong size on FirestoreLibrary_Exists");
static_assert(offsetof(FirestoreLibrary_Exists, DocumentSnapshot) == 0x000000, "Member 'FirestoreLibrary_Exists::DocumentSnapshot' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_Exists, ReturnValue) == 0x000010, "Member 'FirestoreLibrary_Exists::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.FieldValue_Delete
// 0x0008 (0x0008 - 0x0000)
struct FirestoreLibrary_FieldValue_Delete final
{
public:
	struct FFirestoreFieldValue                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_FieldValue_Delete) == 0x000008, "Wrong alignment on FirestoreLibrary_FieldValue_Delete");
static_assert(sizeof(FirestoreLibrary_FieldValue_Delete) == 0x000008, "Wrong size on FirestoreLibrary_FieldValue_Delete");
static_assert(offsetof(FirestoreLibrary_FieldValue_Delete, ReturnValue) == 0x000000, "Member 'FirestoreLibrary_FieldValue_Delete::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.FieldValue_FromArray
// 0x0018 (0x0018 - 0x0000)
struct FirestoreLibrary_FieldValue_FromArray final
{
public:
	TArray<struct FFirestoreFieldValue>           Value;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FFirestoreFieldValue                   ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_FieldValue_FromArray) == 0x000008, "Wrong alignment on FirestoreLibrary_FieldValue_FromArray");
static_assert(sizeof(FirestoreLibrary_FieldValue_FromArray) == 0x000018, "Wrong size on FirestoreLibrary_FieldValue_FromArray");
static_assert(offsetof(FirestoreLibrary_FieldValue_FromArray, Value) == 0x000000, "Member 'FirestoreLibrary_FieldValue_FromArray::Value' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_FieldValue_FromArray, ReturnValue) == 0x000010, "Member 'FirestoreLibrary_FieldValue_FromArray::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.FieldValue_FromBinary
// 0x0018 (0x0018 - 0x0000)
struct FirestoreLibrary_FieldValue_FromBinary final
{
public:
	TArray<uint8>                                 Value;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FFirestoreFieldValue                   ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_FieldValue_FromBinary) == 0x000008, "Wrong alignment on FirestoreLibrary_FieldValue_FromBinary");
static_assert(sizeof(FirestoreLibrary_FieldValue_FromBinary) == 0x000018, "Wrong size on FirestoreLibrary_FieldValue_FromBinary");
static_assert(offsetof(FirestoreLibrary_FieldValue_FromBinary, Value) == 0x000000, "Member 'FirestoreLibrary_FieldValue_FromBinary::Value' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_FieldValue_FromBinary, ReturnValue) == 0x000010, "Member 'FirestoreLibrary_FieldValue_FromBinary::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.FieldValue_FromBool
// 0x0010 (0x0010 - 0x0000)
struct FirestoreLibrary_FieldValue_FromBool final
{
public:
	bool                                          bValue;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFirestoreFieldValue                   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_FieldValue_FromBool) == 0x000008, "Wrong alignment on FirestoreLibrary_FieldValue_FromBool");
static_assert(sizeof(FirestoreLibrary_FieldValue_FromBool) == 0x000010, "Wrong size on FirestoreLibrary_FieldValue_FromBool");
static_assert(offsetof(FirestoreLibrary_FieldValue_FromBool, bValue) == 0x000000, "Member 'FirestoreLibrary_FieldValue_FromBool::bValue' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_FieldValue_FromBool, ReturnValue) == 0x000008, "Member 'FirestoreLibrary_FieldValue_FromBool::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.FieldValue_FromFloat
// 0x0010 (0x0010 - 0x0000)
struct FirestoreLibrary_FieldValue_FromFloat final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFirestoreFieldValue                   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_FieldValue_FromFloat) == 0x000008, "Wrong alignment on FirestoreLibrary_FieldValue_FromFloat");
static_assert(sizeof(FirestoreLibrary_FieldValue_FromFloat) == 0x000010, "Wrong size on FirestoreLibrary_FieldValue_FromFloat");
static_assert(offsetof(FirestoreLibrary_FieldValue_FromFloat, Value) == 0x000000, "Member 'FirestoreLibrary_FieldValue_FromFloat::Value' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_FieldValue_FromFloat, ReturnValue) == 0x000008, "Member 'FirestoreLibrary_FieldValue_FromFloat::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.FieldValue_FromGeoPoint
// 0x0010 (0x0010 - 0x0000)
struct FirestoreLibrary_FieldValue_FromGeoPoint final
{
public:
	struct FFirestoreGeoPoint                     Value;                                             // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FFirestoreFieldValue                   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_FieldValue_FromGeoPoint) == 0x000008, "Wrong alignment on FirestoreLibrary_FieldValue_FromGeoPoint");
static_assert(sizeof(FirestoreLibrary_FieldValue_FromGeoPoint) == 0x000010, "Wrong size on FirestoreLibrary_FieldValue_FromGeoPoint");
static_assert(offsetof(FirestoreLibrary_FieldValue_FromGeoPoint, Value) == 0x000000, "Member 'FirestoreLibrary_FieldValue_FromGeoPoint::Value' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_FieldValue_FromGeoPoint, ReturnValue) == 0x000008, "Member 'FirestoreLibrary_FieldValue_FromGeoPoint::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.FieldValue_FromInt32
// 0x0010 (0x0010 - 0x0000)
struct FirestoreLibrary_FieldValue_FromInt32 final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFirestoreFieldValue                   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_FieldValue_FromInt32) == 0x000008, "Wrong alignment on FirestoreLibrary_FieldValue_FromInt32");
static_assert(sizeof(FirestoreLibrary_FieldValue_FromInt32) == 0x000010, "Wrong size on FirestoreLibrary_FieldValue_FromInt32");
static_assert(offsetof(FirestoreLibrary_FieldValue_FromInt32, Value) == 0x000000, "Member 'FirestoreLibrary_FieldValue_FromInt32::Value' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_FieldValue_FromInt32, ReturnValue) == 0x000008, "Member 'FirestoreLibrary_FieldValue_FromInt32::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.FieldValue_FromInt64
// 0x0010 (0x0010 - 0x0000)
struct FirestoreLibrary_FieldValue_FromInt64 final
{
public:
	int64                                         Value;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFirestoreFieldValue                   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_FieldValue_FromInt64) == 0x000008, "Wrong alignment on FirestoreLibrary_FieldValue_FromInt64");
static_assert(sizeof(FirestoreLibrary_FieldValue_FromInt64) == 0x000010, "Wrong size on FirestoreLibrary_FieldValue_FromInt64");
static_assert(offsetof(FirestoreLibrary_FieldValue_FromInt64, Value) == 0x000000, "Member 'FirestoreLibrary_FieldValue_FromInt64::Value' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_FieldValue_FromInt64, ReturnValue) == 0x000008, "Member 'FirestoreLibrary_FieldValue_FromInt64::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.FieldValue_FromJSON
// 0x0018 (0x0018 - 0x0000)
struct FirestoreLibrary_FieldValue_FromJSON final
{
public:
	class FString                                 Value;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFirestoreFieldValue                   ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_FieldValue_FromJSON) == 0x000008, "Wrong alignment on FirestoreLibrary_FieldValue_FromJSON");
static_assert(sizeof(FirestoreLibrary_FieldValue_FromJSON) == 0x000018, "Wrong size on FirestoreLibrary_FieldValue_FromJSON");
static_assert(offsetof(FirestoreLibrary_FieldValue_FromJSON, Value) == 0x000000, "Member 'FirestoreLibrary_FieldValue_FromJSON::Value' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_FieldValue_FromJSON, ReturnValue) == 0x000010, "Member 'FirestoreLibrary_FieldValue_FromJSON::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.FieldValue_FromMap
// 0x0058 (0x0058 - 0x0000)
struct FirestoreLibrary_FieldValue_FromMap final
{
public:
	TMap<class FString, struct FFirestoreFieldValue> Value;                                             // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FFirestoreFieldValue                   ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_FieldValue_FromMap) == 0x000008, "Wrong alignment on FirestoreLibrary_FieldValue_FromMap");
static_assert(sizeof(FirestoreLibrary_FieldValue_FromMap) == 0x000058, "Wrong size on FirestoreLibrary_FieldValue_FromMap");
static_assert(offsetof(FirestoreLibrary_FieldValue_FromMap, Value) == 0x000000, "Member 'FirestoreLibrary_FieldValue_FromMap::Value' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_FieldValue_FromMap, ReturnValue) == 0x000050, "Member 'FirestoreLibrary_FieldValue_FromMap::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.FieldValue_FromReference
// 0x0010 (0x0010 - 0x0000)
struct FirestoreLibrary_FieldValue_FromReference final
{
public:
	class UFirestoreDocumentReference*            Value;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFirestoreFieldValue                   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_FieldValue_FromReference) == 0x000008, "Wrong alignment on FirestoreLibrary_FieldValue_FromReference");
static_assert(sizeof(FirestoreLibrary_FieldValue_FromReference) == 0x000010, "Wrong size on FirestoreLibrary_FieldValue_FromReference");
static_assert(offsetof(FirestoreLibrary_FieldValue_FromReference, Value) == 0x000000, "Member 'FirestoreLibrary_FieldValue_FromReference::Value' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_FieldValue_FromReference, ReturnValue) == 0x000008, "Member 'FirestoreLibrary_FieldValue_FromReference::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.FieldValue_FromString
// 0x0018 (0x0018 - 0x0000)
struct FirestoreLibrary_FieldValue_FromString final
{
public:
	class FString                                 Value;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFirestoreFieldValue                   ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_FieldValue_FromString) == 0x000008, "Wrong alignment on FirestoreLibrary_FieldValue_FromString");
static_assert(sizeof(FirestoreLibrary_FieldValue_FromString) == 0x000018, "Wrong size on FirestoreLibrary_FieldValue_FromString");
static_assert(offsetof(FirestoreLibrary_FieldValue_FromString, Value) == 0x000000, "Member 'FirestoreLibrary_FieldValue_FromString::Value' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_FieldValue_FromString, ReturnValue) == 0x000010, "Member 'FirestoreLibrary_FieldValue_FromString::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.FieldValue_FromTimestamp
// 0x0018 (0x0018 - 0x0000)
struct FirestoreLibrary_FieldValue_FromTimestamp final
{
public:
	struct FFirestoreTimestamp                    Value;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FFirestoreFieldValue                   ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_FieldValue_FromTimestamp) == 0x000008, "Wrong alignment on FirestoreLibrary_FieldValue_FromTimestamp");
static_assert(sizeof(FirestoreLibrary_FieldValue_FromTimestamp) == 0x000018, "Wrong size on FirestoreLibrary_FieldValue_FromTimestamp");
static_assert(offsetof(FirestoreLibrary_FieldValue_FromTimestamp, Value) == 0x000000, "Member 'FirestoreLibrary_FieldValue_FromTimestamp::Value' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_FieldValue_FromTimestamp, ReturnValue) == 0x000010, "Member 'FirestoreLibrary_FieldValue_FromTimestamp::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.FieldValue_ToArray
// 0x0018 (0x0018 - 0x0000)
struct FirestoreLibrary_FieldValue_ToArray final
{
public:
	struct FFirestoreFieldValue                   Value;                                             // 0x0000(0x0008)(Parm, NativeAccessSpecifierPublic)
	TArray<struct FFirestoreFieldValue>           ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_FieldValue_ToArray) == 0x000008, "Wrong alignment on FirestoreLibrary_FieldValue_ToArray");
static_assert(sizeof(FirestoreLibrary_FieldValue_ToArray) == 0x000018, "Wrong size on FirestoreLibrary_FieldValue_ToArray");
static_assert(offsetof(FirestoreLibrary_FieldValue_ToArray, Value) == 0x000000, "Member 'FirestoreLibrary_FieldValue_ToArray::Value' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_FieldValue_ToArray, ReturnValue) == 0x000008, "Member 'FirestoreLibrary_FieldValue_ToArray::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.FieldValue_ToBinary
// 0x0018 (0x0018 - 0x0000)
struct FirestoreLibrary_FieldValue_ToBinary final
{
public:
	struct FFirestoreFieldValue                   Value;                                             // 0x0000(0x0008)(Parm, NativeAccessSpecifierPublic)
	TArray<uint8>                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_FieldValue_ToBinary) == 0x000008, "Wrong alignment on FirestoreLibrary_FieldValue_ToBinary");
static_assert(sizeof(FirestoreLibrary_FieldValue_ToBinary) == 0x000018, "Wrong size on FirestoreLibrary_FieldValue_ToBinary");
static_assert(offsetof(FirestoreLibrary_FieldValue_ToBinary, Value) == 0x000000, "Member 'FirestoreLibrary_FieldValue_ToBinary::Value' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_FieldValue_ToBinary, ReturnValue) == 0x000008, "Member 'FirestoreLibrary_FieldValue_ToBinary::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.FieldValue_ToBool
// 0x0010 (0x0010 - 0x0000)
struct FirestoreLibrary_FieldValue_ToBool final
{
public:
	struct FFirestoreFieldValue                   Value;                                             // 0x0000(0x0008)(Parm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FirestoreLibrary_FieldValue_ToBool) == 0x000008, "Wrong alignment on FirestoreLibrary_FieldValue_ToBool");
static_assert(sizeof(FirestoreLibrary_FieldValue_ToBool) == 0x000010, "Wrong size on FirestoreLibrary_FieldValue_ToBool");
static_assert(offsetof(FirestoreLibrary_FieldValue_ToBool, Value) == 0x000000, "Member 'FirestoreLibrary_FieldValue_ToBool::Value' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_FieldValue_ToBool, ReturnValue) == 0x000008, "Member 'FirestoreLibrary_FieldValue_ToBool::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.FieldValue_ToFloat
// 0x0010 (0x0010 - 0x0000)
struct FirestoreLibrary_FieldValue_ToFloat final
{
public:
	struct FFirestoreFieldValue                   Value;                                             // 0x0000(0x0008)(Parm, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FirestoreLibrary_FieldValue_ToFloat) == 0x000008, "Wrong alignment on FirestoreLibrary_FieldValue_ToFloat");
static_assert(sizeof(FirestoreLibrary_FieldValue_ToFloat) == 0x000010, "Wrong size on FirestoreLibrary_FieldValue_ToFloat");
static_assert(offsetof(FirestoreLibrary_FieldValue_ToFloat, Value) == 0x000000, "Member 'FirestoreLibrary_FieldValue_ToFloat::Value' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_FieldValue_ToFloat, ReturnValue) == 0x000008, "Member 'FirestoreLibrary_FieldValue_ToFloat::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.FieldValue_ToGeoPoint
// 0x0010 (0x0010 - 0x0000)
struct FirestoreLibrary_FieldValue_ToGeoPoint final
{
public:
	struct FFirestoreFieldValue                   Value;                                             // 0x0000(0x0008)(Parm, NativeAccessSpecifierPublic)
	struct FFirestoreGeoPoint                     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_FieldValue_ToGeoPoint) == 0x000008, "Wrong alignment on FirestoreLibrary_FieldValue_ToGeoPoint");
static_assert(sizeof(FirestoreLibrary_FieldValue_ToGeoPoint) == 0x000010, "Wrong size on FirestoreLibrary_FieldValue_ToGeoPoint");
static_assert(offsetof(FirestoreLibrary_FieldValue_ToGeoPoint, Value) == 0x000000, "Member 'FirestoreLibrary_FieldValue_ToGeoPoint::Value' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_FieldValue_ToGeoPoint, ReturnValue) == 0x000008, "Member 'FirestoreLibrary_FieldValue_ToGeoPoint::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.FieldValue_ToInt32
// 0x0010 (0x0010 - 0x0000)
struct FirestoreLibrary_FieldValue_ToInt32 final
{
public:
	struct FFirestoreFieldValue                   Value;                                             // 0x0000(0x0008)(Parm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FirestoreLibrary_FieldValue_ToInt32) == 0x000008, "Wrong alignment on FirestoreLibrary_FieldValue_ToInt32");
static_assert(sizeof(FirestoreLibrary_FieldValue_ToInt32) == 0x000010, "Wrong size on FirestoreLibrary_FieldValue_ToInt32");
static_assert(offsetof(FirestoreLibrary_FieldValue_ToInt32, Value) == 0x000000, "Member 'FirestoreLibrary_FieldValue_ToInt32::Value' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_FieldValue_ToInt32, ReturnValue) == 0x000008, "Member 'FirestoreLibrary_FieldValue_ToInt32::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.FieldValue_ToInt64
// 0x0010 (0x0010 - 0x0000)
struct FirestoreLibrary_FieldValue_ToInt64 final
{
public:
	struct FFirestoreFieldValue                   Value;                                             // 0x0000(0x0008)(Parm, NativeAccessSpecifierPublic)
	int64                                         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_FieldValue_ToInt64) == 0x000008, "Wrong alignment on FirestoreLibrary_FieldValue_ToInt64");
static_assert(sizeof(FirestoreLibrary_FieldValue_ToInt64) == 0x000010, "Wrong size on FirestoreLibrary_FieldValue_ToInt64");
static_assert(offsetof(FirestoreLibrary_FieldValue_ToInt64, Value) == 0x000000, "Member 'FirestoreLibrary_FieldValue_ToInt64::Value' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_FieldValue_ToInt64, ReturnValue) == 0x000008, "Member 'FirestoreLibrary_FieldValue_ToInt64::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.FieldValue_ToJSON
// 0x0018 (0x0018 - 0x0000)
struct FirestoreLibrary_FieldValue_ToJSON final
{
public:
	struct FFirestoreFieldValue                   Value;                                             // 0x0000(0x0008)(Parm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_FieldValue_ToJSON) == 0x000008, "Wrong alignment on FirestoreLibrary_FieldValue_ToJSON");
static_assert(sizeof(FirestoreLibrary_FieldValue_ToJSON) == 0x000018, "Wrong size on FirestoreLibrary_FieldValue_ToJSON");
static_assert(offsetof(FirestoreLibrary_FieldValue_ToJSON, Value) == 0x000000, "Member 'FirestoreLibrary_FieldValue_ToJSON::Value' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_FieldValue_ToJSON, ReturnValue) == 0x000008, "Member 'FirestoreLibrary_FieldValue_ToJSON::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.FieldValue_ToMap
// 0x0058 (0x0058 - 0x0000)
struct FirestoreLibrary_FieldValue_ToMap final
{
public:
	struct FFirestoreFieldValue                   Value;                                             // 0x0000(0x0008)(Parm, NativeAccessSpecifierPublic)
	TMap<class FString, struct FFirestoreFieldValue> ReturnValue;                                       // 0x0008(0x0050)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_FieldValue_ToMap) == 0x000008, "Wrong alignment on FirestoreLibrary_FieldValue_ToMap");
static_assert(sizeof(FirestoreLibrary_FieldValue_ToMap) == 0x000058, "Wrong size on FirestoreLibrary_FieldValue_ToMap");
static_assert(offsetof(FirestoreLibrary_FieldValue_ToMap, Value) == 0x000000, "Member 'FirestoreLibrary_FieldValue_ToMap::Value' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_FieldValue_ToMap, ReturnValue) == 0x000008, "Member 'FirestoreLibrary_FieldValue_ToMap::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.FieldValue_ToReference
// 0x0010 (0x0010 - 0x0000)
struct FirestoreLibrary_FieldValue_ToReference final
{
public:
	struct FFirestoreFieldValue                   Value;                                             // 0x0000(0x0008)(Parm, NativeAccessSpecifierPublic)
	class UFirestoreDocumentReference*            ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_FieldValue_ToReference) == 0x000008, "Wrong alignment on FirestoreLibrary_FieldValue_ToReference");
static_assert(sizeof(FirestoreLibrary_FieldValue_ToReference) == 0x000010, "Wrong size on FirestoreLibrary_FieldValue_ToReference");
static_assert(offsetof(FirestoreLibrary_FieldValue_ToReference, Value) == 0x000000, "Member 'FirestoreLibrary_FieldValue_ToReference::Value' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_FieldValue_ToReference, ReturnValue) == 0x000008, "Member 'FirestoreLibrary_FieldValue_ToReference::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.FieldValue_ToString
// 0x0018 (0x0018 - 0x0000)
struct FirestoreLibrary_FieldValue_ToString final
{
public:
	struct FFirestoreFieldValue                   Value;                                             // 0x0000(0x0008)(Parm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_FieldValue_ToString) == 0x000008, "Wrong alignment on FirestoreLibrary_FieldValue_ToString");
static_assert(sizeof(FirestoreLibrary_FieldValue_ToString) == 0x000018, "Wrong size on FirestoreLibrary_FieldValue_ToString");
static_assert(offsetof(FirestoreLibrary_FieldValue_ToString, Value) == 0x000000, "Member 'FirestoreLibrary_FieldValue_ToString::Value' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_FieldValue_ToString, ReturnValue) == 0x000008, "Member 'FirestoreLibrary_FieldValue_ToString::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.FieldValue_ToTimestamp
// 0x0018 (0x0018 - 0x0000)
struct FirestoreLibrary_FieldValue_ToTimestamp final
{
public:
	struct FFirestoreFieldValue                   Value;                                             // 0x0000(0x0008)(Parm, NativeAccessSpecifierPublic)
	struct FFirestoreTimestamp                    ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_FieldValue_ToTimestamp) == 0x000008, "Wrong alignment on FirestoreLibrary_FieldValue_ToTimestamp");
static_assert(sizeof(FirestoreLibrary_FieldValue_ToTimestamp) == 0x000018, "Wrong size on FirestoreLibrary_FieldValue_ToTimestamp");
static_assert(offsetof(FirestoreLibrary_FieldValue_ToTimestamp, Value) == 0x000000, "Member 'FirestoreLibrary_FieldValue_ToTimestamp::Value' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_FieldValue_ToTimestamp, ReturnValue) == 0x000008, "Member 'FirestoreLibrary_FieldValue_ToTimestamp::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.FirestoreTimestamp_ToString
// 0x0020 (0x0020 - 0x0000)
struct FirestoreLibrary_FirestoreTimestamp_ToString final
{
public:
	struct FFirestoreTimestamp                    Timestamp;                                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_FirestoreTimestamp_ToString) == 0x000008, "Wrong alignment on FirestoreLibrary_FirestoreTimestamp_ToString");
static_assert(sizeof(FirestoreLibrary_FirestoreTimestamp_ToString) == 0x000020, "Wrong size on FirestoreLibrary_FirestoreTimestamp_ToString");
static_assert(offsetof(FirestoreLibrary_FirestoreTimestamp_ToString, Timestamp) == 0x000000, "Member 'FirestoreLibrary_FirestoreTimestamp_ToString::Timestamp' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_FirestoreTimestamp_ToString, ReturnValue) == 0x000010, "Member 'FirestoreLibrary_FirestoreTimestamp_ToString::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.Get
// 0x0038 (0x0038 - 0x0000)
struct FirestoreLibrary_Get final
{
public:
	struct FFirestoreTransaction                  Transaction;                                       // 0x0000(0x0008)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	const class UFirestoreDocumentReference*      Document;                                          // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFirestoreError                               ErrorCode;                                         // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ErrorMessage;                                      // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFirestoreDocumentSnapshot             ReturnValue;                                       // 0x0028(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_Get) == 0x000008, "Wrong alignment on FirestoreLibrary_Get");
static_assert(sizeof(FirestoreLibrary_Get) == 0x000038, "Wrong size on FirestoreLibrary_Get");
static_assert(offsetof(FirestoreLibrary_Get, Transaction) == 0x000000, "Member 'FirestoreLibrary_Get::Transaction' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_Get, Document) == 0x000008, "Member 'FirestoreLibrary_Get::Document' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_Get, ErrorCode) == 0x000010, "Member 'FirestoreLibrary_Get::ErrorCode' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_Get, ErrorMessage) == 0x000018, "Member 'FirestoreLibrary_Get::ErrorMessage' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_Get, ReturnValue) == 0x000028, "Member 'FirestoreLibrary_Get::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.Get_Snapshot
// 0x0030 (0x0030 - 0x0000)
struct FirestoreLibrary_Get_Snapshot final
{
public:
	struct FFirestoreDocumentSnapshot             DocumentSnapshot;                                  // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Field;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFirestoreServerTimestampBehavior             ServerTimestampBehavior;                           // 0x0020(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFirestoreFieldValue                   ReturnValue;                                       // 0x0028(0x0008)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_Get_Snapshot) == 0x000008, "Wrong alignment on FirestoreLibrary_Get_Snapshot");
static_assert(sizeof(FirestoreLibrary_Get_Snapshot) == 0x000030, "Wrong size on FirestoreLibrary_Get_Snapshot");
static_assert(offsetof(FirestoreLibrary_Get_Snapshot, DocumentSnapshot) == 0x000000, "Member 'FirestoreLibrary_Get_Snapshot::DocumentSnapshot' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_Get_Snapshot, Field) == 0x000010, "Member 'FirestoreLibrary_Get_Snapshot::Field' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_Get_Snapshot, ServerTimestampBehavior) == 0x000020, "Member 'FirestoreLibrary_Get_Snapshot::ServerTimestampBehavior' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_Get_Snapshot, ReturnValue) == 0x000028, "Member 'FirestoreLibrary_Get_Snapshot::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.GetData
// 0x0068 (0x0068 - 0x0000)
struct FirestoreLibrary_GetData final
{
public:
	struct FFirestoreDocumentSnapshot             DocumentSnapshot;                                  // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	EFirestoreServerTimestampBehavior             ServerTimestampBehavior;                           // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, struct FFirestoreFieldValue> ReturnValue;                                       // 0x0018(0x0050)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_GetData) == 0x000008, "Wrong alignment on FirestoreLibrary_GetData");
static_assert(sizeof(FirestoreLibrary_GetData) == 0x000068, "Wrong size on FirestoreLibrary_GetData");
static_assert(offsetof(FirestoreLibrary_GetData, DocumentSnapshot) == 0x000000, "Member 'FirestoreLibrary_GetData::DocumentSnapshot' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_GetData, ServerTimestampBehavior) == 0x000010, "Member 'FirestoreLibrary_GetData::ServerTimestampBehavior' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_GetData, ReturnValue) == 0x000018, "Member 'FirestoreLibrary_GetData::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.GetId
// 0x0020 (0x0020 - 0x0000)
struct FirestoreLibrary_GetId final
{
public:
	struct FFirestoreDocumentSnapshot             DocumentSnapshot;                                  // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_GetId) == 0x000008, "Wrong alignment on FirestoreLibrary_GetId");
static_assert(sizeof(FirestoreLibrary_GetId) == 0x000020, "Wrong size on FirestoreLibrary_GetId");
static_assert(offsetof(FirestoreLibrary_GetId, DocumentSnapshot) == 0x000000, "Member 'FirestoreLibrary_GetId::DocumentSnapshot' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_GetId, ReturnValue) == 0x000010, "Member 'FirestoreLibrary_GetId::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.GetMetadata
// 0x0018 (0x0018 - 0x0000)
struct FirestoreLibrary_GetMetadata final
{
public:
	struct FFirestoreDocumentSnapshot             DocumentSnapshot;                                  // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FFirestoreSnapshotMetadata             ReturnValue;                                       // 0x0010(0x0002)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FirestoreLibrary_GetMetadata) == 0x000008, "Wrong alignment on FirestoreLibrary_GetMetadata");
static_assert(sizeof(FirestoreLibrary_GetMetadata) == 0x000018, "Wrong size on FirestoreLibrary_GetMetadata");
static_assert(offsetof(FirestoreLibrary_GetMetadata, DocumentSnapshot) == 0x000000, "Member 'FirestoreLibrary_GetMetadata::DocumentSnapshot' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_GetMetadata, ReturnValue) == 0x000010, "Member 'FirestoreLibrary_GetMetadata::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.GetReference
// 0x0018 (0x0018 - 0x0000)
struct FirestoreLibrary_GetReference final
{
public:
	struct FFirestoreDocumentSnapshot             DocumentSnapshot;                                  // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UFirestoreDocumentReference*            ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_GetReference) == 0x000008, "Wrong alignment on FirestoreLibrary_GetReference");
static_assert(sizeof(FirestoreLibrary_GetReference) == 0x000018, "Wrong size on FirestoreLibrary_GetReference");
static_assert(offsetof(FirestoreLibrary_GetReference, DocumentSnapshot) == 0x000000, "Member 'FirestoreLibrary_GetReference::DocumentSnapshot' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_GetReference, ReturnValue) == 0x000010, "Member 'FirestoreLibrary_GetReference::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.GetType
// 0x0010 (0x0010 - 0x0000)
struct FirestoreLibrary_GetType final
{
public:
	struct FFirestoreFieldValue                   FieldValue;                                        // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	EFirestoreFieldValueType                      ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FirestoreLibrary_GetType) == 0x000008, "Wrong alignment on FirestoreLibrary_GetType");
static_assert(sizeof(FirestoreLibrary_GetType) == 0x000010, "Wrong size on FirestoreLibrary_GetType");
static_assert(offsetof(FirestoreLibrary_GetType, FieldValue) == 0x000000, "Member 'FirestoreLibrary_GetType::FieldValue' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_GetType, ReturnValue) == 0x000008, "Member 'FirestoreLibrary_GetType::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.GetWithFieldPath
// 0x0028 (0x0028 - 0x0000)
struct FirestoreLibrary_GetWithFieldPath final
{
public:
	struct FFirestoreDocumentSnapshot             DocumentSnapshot;                                  // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FFirestoreFieldPath                    Field;                                             // 0x0010(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFirestoreServerTimestampBehavior             ServerTimestampBehavior;                           // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFirestoreFieldValue                   ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_GetWithFieldPath) == 0x000008, "Wrong alignment on FirestoreLibrary_GetWithFieldPath");
static_assert(sizeof(FirestoreLibrary_GetWithFieldPath) == 0x000028, "Wrong size on FirestoreLibrary_GetWithFieldPath");
static_assert(offsetof(FirestoreLibrary_GetWithFieldPath, DocumentSnapshot) == 0x000000, "Member 'FirestoreLibrary_GetWithFieldPath::DocumentSnapshot' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_GetWithFieldPath, Field) == 0x000010, "Member 'FirestoreLibrary_GetWithFieldPath::Field' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_GetWithFieldPath, ServerTimestampBehavior) == 0x000018, "Member 'FirestoreLibrary_GetWithFieldPath::ServerTimestampBehavior' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_GetWithFieldPath, ReturnValue) == 0x000020, "Member 'FirestoreLibrary_GetWithFieldPath::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.HasDocumentPendingChanges
// 0x0018 (0x0018 - 0x0000)
struct FirestoreLibrary_HasDocumentPendingChanges final
{
public:
	struct FFirestoreDocumentSnapshot             Document;                                          // 0x0000(0x0010)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FirestoreLibrary_HasDocumentPendingChanges) == 0x000008, "Wrong alignment on FirestoreLibrary_HasDocumentPendingChanges");
static_assert(sizeof(FirestoreLibrary_HasDocumentPendingChanges) == 0x000018, "Wrong size on FirestoreLibrary_HasDocumentPendingChanges");
static_assert(offsetof(FirestoreLibrary_HasDocumentPendingChanges, Document) == 0x000000, "Member 'FirestoreLibrary_HasDocumentPendingChanges::Document' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_HasDocumentPendingChanges, ReturnValue) == 0x000010, "Member 'FirestoreLibrary_HasDocumentPendingChanges::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.HasPendingChanges
// 0x0003 (0x0003 - 0x0000)
struct FirestoreLibrary_HasPendingChanges final
{
public:
	struct FFirestoreSnapshotMetadata             Metadata;                                          // 0x0000(0x0002)(Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_HasPendingChanges) == 0x000001, "Wrong alignment on FirestoreLibrary_HasPendingChanges");
static_assert(sizeof(FirestoreLibrary_HasPendingChanges) == 0x000003, "Wrong size on FirestoreLibrary_HasPendingChanges");
static_assert(offsetof(FirestoreLibrary_HasPendingChanges, Metadata) == 0x000000, "Member 'FirestoreLibrary_HasPendingChanges::Metadata' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_HasPendingChanges, ReturnValue) == 0x000002, "Member 'FirestoreLibrary_HasPendingChanges::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.IsDocumentFromCache
// 0x0018 (0x0018 - 0x0000)
struct FirestoreLibrary_IsDocumentFromCache final
{
public:
	struct FFirestoreDocumentSnapshot             Document;                                          // 0x0000(0x0010)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FirestoreLibrary_IsDocumentFromCache) == 0x000008, "Wrong alignment on FirestoreLibrary_IsDocumentFromCache");
static_assert(sizeof(FirestoreLibrary_IsDocumentFromCache) == 0x000018, "Wrong size on FirestoreLibrary_IsDocumentFromCache");
static_assert(offsetof(FirestoreLibrary_IsDocumentFromCache, Document) == 0x000000, "Member 'FirestoreLibrary_IsDocumentFromCache::Document' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_IsDocumentFromCache, ReturnValue) == 0x000010, "Member 'FirestoreLibrary_IsDocumentFromCache::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.IsFromCache
// 0x0003 (0x0003 - 0x0000)
struct FirestoreLibrary_IsFromCache final
{
public:
	struct FFirestoreSnapshotMetadata             Metadata;                                          // 0x0000(0x0002)(Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_IsFromCache) == 0x000001, "Wrong alignment on FirestoreLibrary_IsFromCache");
static_assert(sizeof(FirestoreLibrary_IsFromCache) == 0x000003, "Wrong size on FirestoreLibrary_IsFromCache");
static_assert(offsetof(FirestoreLibrary_IsFromCache, Metadata) == 0x000000, "Member 'FirestoreLibrary_IsFromCache::Metadata' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_IsFromCache, ReturnValue) == 0x000002, "Member 'FirestoreLibrary_IsFromCache::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.MakeFirestoreFieldPath
// 0x0018 (0x0018 - 0x0000)
struct FirestoreLibrary_MakeFirestoreFieldPath final
{
public:
	TArray<class FString>                         FieldNames;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FFirestoreFieldPath                    ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_MakeFirestoreFieldPath) == 0x000008, "Wrong alignment on FirestoreLibrary_MakeFirestoreFieldPath");
static_assert(sizeof(FirestoreLibrary_MakeFirestoreFieldPath) == 0x000018, "Wrong size on FirestoreLibrary_MakeFirestoreFieldPath");
static_assert(offsetof(FirestoreLibrary_MakeFirestoreFieldPath, FieldNames) == 0x000000, "Member 'FirestoreLibrary_MakeFirestoreFieldPath::FieldNames' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_MakeFirestoreFieldPath, ReturnValue) == 0x000010, "Member 'FirestoreLibrary_MakeFirestoreFieldPath::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.Merge
// 0x0008 (0x0008 - 0x0000)
struct FirestoreLibrary_Merge final
{
public:
	struct FFirestoreSetOptions                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_Merge) == 0x000008, "Wrong alignment on FirestoreLibrary_Merge");
static_assert(sizeof(FirestoreLibrary_Merge) == 0x000008, "Wrong size on FirestoreLibrary_Merge");
static_assert(offsetof(FirestoreLibrary_Merge, ReturnValue) == 0x000000, "Member 'FirestoreLibrary_Merge::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.MergeFieldPaths
// 0x0018 (0x0018 - 0x0000)
struct FirestoreLibrary_MergeFieldPaths final
{
public:
	TArray<struct FFirestoreFieldPath>            Fields;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FFirestoreSetOptions                   ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_MergeFieldPaths) == 0x000008, "Wrong alignment on FirestoreLibrary_MergeFieldPaths");
static_assert(sizeof(FirestoreLibrary_MergeFieldPaths) == 0x000018, "Wrong size on FirestoreLibrary_MergeFieldPaths");
static_assert(offsetof(FirestoreLibrary_MergeFieldPaths, Fields) == 0x000000, "Member 'FirestoreLibrary_MergeFieldPaths::Fields' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_MergeFieldPaths, ReturnValue) == 0x000010, "Member 'FirestoreLibrary_MergeFieldPaths::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.MergeFields
// 0x0018 (0x0018 - 0x0000)
struct FirestoreLibrary_MergeFields final
{
public:
	TArray<class FString>                         Fields;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FFirestoreSetOptions                   ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_MergeFields) == 0x000008, "Wrong alignment on FirestoreLibrary_MergeFields");
static_assert(sizeof(FirestoreLibrary_MergeFields) == 0x000018, "Wrong size on FirestoreLibrary_MergeFields");
static_assert(offsetof(FirestoreLibrary_MergeFields, Fields) == 0x000000, "Member 'FirestoreLibrary_MergeFields::Fields' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_MergeFields, ReturnValue) == 0x000010, "Member 'FirestoreLibrary_MergeFields::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.Now
// 0x0010 (0x0010 - 0x0000)
struct FirestoreLibrary_Now final
{
public:
	struct FFirestoreTimestamp                    ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_Now) == 0x000008, "Wrong alignment on FirestoreLibrary_Now");
static_assert(sizeof(FirestoreLibrary_Now) == 0x000010, "Wrong size on FirestoreLibrary_Now");
static_assert(offsetof(FirestoreLibrary_Now, ReturnValue) == 0x000000, "Member 'FirestoreLibrary_Now::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.Null
// 0x0008 (0x0008 - 0x0000)
struct FirestoreLibrary_Null final
{
public:
	struct FFirestoreFieldValue                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_Null) == 0x000008, "Wrong alignment on FirestoreLibrary_Null");
static_assert(sizeof(FirestoreLibrary_Null) == 0x000008, "Wrong size on FirestoreLibrary_Null");
static_assert(offsetof(FirestoreLibrary_Null, ReturnValue) == 0x000000, "Member 'FirestoreLibrary_Null::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.Remove
// 0x0018 (0x0018 - 0x0000)
struct FirestoreLibrary_Remove final
{
public:
	struct FQuerySnapshotListenerHandle           ListenerHandle;                                    // 0x0000(0x0018)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_Remove) == 0x000008, "Wrong alignment on FirestoreLibrary_Remove");
static_assert(sizeof(FirestoreLibrary_Remove) == 0x000018, "Wrong size on FirestoreLibrary_Remove");
static_assert(offsetof(FirestoreLibrary_Remove, ListenerHandle) == 0x000000, "Member 'FirestoreLibrary_Remove::ListenerHandle' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.ServerTimestamp
// 0x0008 (0x0008 - 0x0000)
struct FirestoreLibrary_ServerTimestamp final
{
public:
	struct FFirestoreFieldValue                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_ServerTimestamp) == 0x000008, "Wrong alignment on FirestoreLibrary_ServerTimestamp");
static_assert(sizeof(FirestoreLibrary_ServerTimestamp) == 0x000008, "Wrong size on FirestoreLibrary_ServerTimestamp");
static_assert(offsetof(FirestoreLibrary_ServerTimestamp, ReturnValue) == 0x000000, "Member 'FirestoreLibrary_ServerTimestamp::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.Set
// 0x0068 (0x0068 - 0x0000)
struct FirestoreLibrary_Set final
{
public:
	struct FFirestoreTransaction                  Transaction;                                       // 0x0000(0x0008)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	const class UFirestoreDocumentReference*      Document;                                          // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, struct FFirestoreFieldValue> Data;                                              // 0x0010(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FFirestoreSetOptions                   Options;                                           // 0x0060(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_Set) == 0x000008, "Wrong alignment on FirestoreLibrary_Set");
static_assert(sizeof(FirestoreLibrary_Set) == 0x000068, "Wrong size on FirestoreLibrary_Set");
static_assert(offsetof(FirestoreLibrary_Set, Transaction) == 0x000000, "Member 'FirestoreLibrary_Set::Transaction' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_Set, Document) == 0x000008, "Member 'FirestoreLibrary_Set::Document' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_Set, Data) == 0x000010, "Member 'FirestoreLibrary_Set::Data' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_Set, Options) == 0x000060, "Member 'FirestoreLibrary_Set::Options' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.ToDateTime
// 0x0018 (0x0018 - 0x0000)
struct FirestoreLibrary_ToDateTime final
{
public:
	struct FFirestoreTimestamp                    Timestamp;                                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FDateTime                              ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_ToDateTime) == 0x000008, "Wrong alignment on FirestoreLibrary_ToDateTime");
static_assert(sizeof(FirestoreLibrary_ToDateTime) == 0x000018, "Wrong size on FirestoreLibrary_ToDateTime");
static_assert(offsetof(FirestoreLibrary_ToDateTime, Timestamp) == 0x000000, "Member 'FirestoreLibrary_ToDateTime::Timestamp' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_ToDateTime, ReturnValue) == 0x000010, "Member 'FirestoreLibrary_ToDateTime::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.ToString
// 0x0018 (0x0018 - 0x0000)
struct FirestoreLibrary_ToString final
{
public:
	struct FFirestoreFieldPath                    FieldPath;                                         // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_ToString) == 0x000008, "Wrong alignment on FirestoreLibrary_ToString");
static_assert(sizeof(FirestoreLibrary_ToString) == 0x000018, "Wrong size on FirestoreLibrary_ToString");
static_assert(offsetof(FirestoreLibrary_ToString, FieldPath) == 0x000000, "Member 'FirestoreLibrary_ToString::FieldPath' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_ToString, ReturnValue) == 0x000008, "Member 'FirestoreLibrary_ToString::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.ToString_Snapshot
// 0x0020 (0x0020 - 0x0000)
struct FirestoreLibrary_ToString_Snapshot final
{
public:
	struct FFirestoreDocumentSnapshot             DocumentSnapshot;                                  // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_ToString_Snapshot) == 0x000008, "Wrong alignment on FirestoreLibrary_ToString_Snapshot");
static_assert(sizeof(FirestoreLibrary_ToString_Snapshot) == 0x000020, "Wrong size on FirestoreLibrary_ToString_Snapshot");
static_assert(offsetof(FirestoreLibrary_ToString_Snapshot, DocumentSnapshot) == 0x000000, "Member 'FirestoreLibrary_ToString_Snapshot::DocumentSnapshot' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_ToString_Snapshot, ReturnValue) == 0x000010, "Member 'FirestoreLibrary_ToString_Snapshot::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.Update
// 0x0060 (0x0060 - 0x0000)
struct FirestoreLibrary_Update final
{
public:
	struct FFirestoreTransaction                  Transaction;                                       // 0x0000(0x0008)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	const class UFirestoreDocumentReference*      Document;                                          // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, struct FFirestoreFieldValue> Data;                                              // 0x0010(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_Update) == 0x000008, "Wrong alignment on FirestoreLibrary_Update");
static_assert(sizeof(FirestoreLibrary_Update) == 0x000060, "Wrong size on FirestoreLibrary_Update");
static_assert(offsetof(FirestoreLibrary_Update, Transaction) == 0x000000, "Member 'FirestoreLibrary_Update::Transaction' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_Update, Document) == 0x000008, "Member 'FirestoreLibrary_Update::Document' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_Update, Data) == 0x000010, "Member 'FirestoreLibrary_Update::Data' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.UpdateFieldPath
// 0x0060 (0x0060 - 0x0000)
struct FirestoreLibrary_UpdateFieldPath final
{
public:
	struct FFirestoreTransaction                  Transaction;                                       // 0x0000(0x0008)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	const class UFirestoreDocumentReference*      Document;                                          // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FFirestoreFieldPath, struct FFirestoreFieldValue> Data;                                              // 0x0010(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_UpdateFieldPath) == 0x000008, "Wrong alignment on FirestoreLibrary_UpdateFieldPath");
static_assert(sizeof(FirestoreLibrary_UpdateFieldPath) == 0x000060, "Wrong size on FirestoreLibrary_UpdateFieldPath");
static_assert(offsetof(FirestoreLibrary_UpdateFieldPath, Transaction) == 0x000000, "Member 'FirestoreLibrary_UpdateFieldPath::Transaction' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_UpdateFieldPath, Document) == 0x000008, "Member 'FirestoreLibrary_UpdateFieldPath::Document' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_UpdateFieldPath, Data) == 0x000010, "Member 'FirestoreLibrary_UpdateFieldPath::Data' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.WriteBatch_Delete
// 0x0018 (0x0018 - 0x0000)
struct FirestoreLibrary_WriteBatch_Delete final
{
public:
	struct FWriteBatch                            WriteBatch;                                        // 0x0000(0x0008)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	const class UFirestoreDocumentReference*      Document;                                          // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWriteBatch                            ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_WriteBatch_Delete) == 0x000008, "Wrong alignment on FirestoreLibrary_WriteBatch_Delete");
static_assert(sizeof(FirestoreLibrary_WriteBatch_Delete) == 0x000018, "Wrong size on FirestoreLibrary_WriteBatch_Delete");
static_assert(offsetof(FirestoreLibrary_WriteBatch_Delete, WriteBatch) == 0x000000, "Member 'FirestoreLibrary_WriteBatch_Delete::WriteBatch' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_WriteBatch_Delete, Document) == 0x000008, "Member 'FirestoreLibrary_WriteBatch_Delete::Document' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_WriteBatch_Delete, ReturnValue) == 0x000010, "Member 'FirestoreLibrary_WriteBatch_Delete::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.WriteBatch_Set
// 0x0070 (0x0070 - 0x0000)
struct FirestoreLibrary_WriteBatch_Set final
{
public:
	struct FWriteBatch                            WriteBatch;                                        // 0x0000(0x0008)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	const class UFirestoreDocumentReference*      Document;                                          // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, struct FFirestoreFieldValue> Data;                                              // 0x0010(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FFirestoreSetOptions                   Options;                                           // 0x0060(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FWriteBatch                            ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_WriteBatch_Set) == 0x000008, "Wrong alignment on FirestoreLibrary_WriteBatch_Set");
static_assert(sizeof(FirestoreLibrary_WriteBatch_Set) == 0x000070, "Wrong size on FirestoreLibrary_WriteBatch_Set");
static_assert(offsetof(FirestoreLibrary_WriteBatch_Set, WriteBatch) == 0x000000, "Member 'FirestoreLibrary_WriteBatch_Set::WriteBatch' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_WriteBatch_Set, Document) == 0x000008, "Member 'FirestoreLibrary_WriteBatch_Set::Document' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_WriteBatch_Set, Data) == 0x000010, "Member 'FirestoreLibrary_WriteBatch_Set::Data' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_WriteBatch_Set, Options) == 0x000060, "Member 'FirestoreLibrary_WriteBatch_Set::Options' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_WriteBatch_Set, ReturnValue) == 0x000068, "Member 'FirestoreLibrary_WriteBatch_Set::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.WriteBatch_Update
// 0x0068 (0x0068 - 0x0000)
struct FirestoreLibrary_WriteBatch_Update final
{
public:
	struct FWriteBatch                            WriteBatch;                                        // 0x0000(0x0008)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	const class UFirestoreDocumentReference*      Document;                                          // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, struct FFirestoreFieldValue> Data;                                              // 0x0010(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FWriteBatch                            ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_WriteBatch_Update) == 0x000008, "Wrong alignment on FirestoreLibrary_WriteBatch_Update");
static_assert(sizeof(FirestoreLibrary_WriteBatch_Update) == 0x000068, "Wrong size on FirestoreLibrary_WriteBatch_Update");
static_assert(offsetof(FirestoreLibrary_WriteBatch_Update, WriteBatch) == 0x000000, "Member 'FirestoreLibrary_WriteBatch_Update::WriteBatch' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_WriteBatch_Update, Document) == 0x000008, "Member 'FirestoreLibrary_WriteBatch_Update::Document' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_WriteBatch_Update, Data) == 0x000010, "Member 'FirestoreLibrary_WriteBatch_Update::Data' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_WriteBatch_Update, ReturnValue) == 0x000060, "Member 'FirestoreLibrary_WriteBatch_Update::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreLibrary.WriteBatch_UpdateFieldPath
// 0x0068 (0x0068 - 0x0000)
struct FirestoreLibrary_WriteBatch_UpdateFieldPath final
{
public:
	struct FWriteBatch                            WriteBatch;                                        // 0x0000(0x0008)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	const class UFirestoreDocumentReference*      Document;                                          // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FFirestoreFieldPath, struct FFirestoreFieldValue> Data;                                              // 0x0010(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FWriteBatch                            ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreLibrary_WriteBatch_UpdateFieldPath) == 0x000008, "Wrong alignment on FirestoreLibrary_WriteBatch_UpdateFieldPath");
static_assert(sizeof(FirestoreLibrary_WriteBatch_UpdateFieldPath) == 0x000068, "Wrong size on FirestoreLibrary_WriteBatch_UpdateFieldPath");
static_assert(offsetof(FirestoreLibrary_WriteBatch_UpdateFieldPath, WriteBatch) == 0x000000, "Member 'FirestoreLibrary_WriteBatch_UpdateFieldPath::WriteBatch' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_WriteBatch_UpdateFieldPath, Document) == 0x000008, "Member 'FirestoreLibrary_WriteBatch_UpdateFieldPath::Document' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_WriteBatch_UpdateFieldPath, Data) == 0x000010, "Member 'FirestoreLibrary_WriteBatch_UpdateFieldPath::Data' has a wrong offset!");
static_assert(offsetof(FirestoreLibrary_WriteBatch_UpdateFieldPath, ReturnValue) == 0x000060, "Member 'FirestoreLibrary_WriteBatch_UpdateFieldPath::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.WriteBatchCommitProxy.Commit
// 0x0010 (0x0010 - 0x0000)
struct WriteBatchCommitProxy_Commit final
{
public:
	struct FWriteBatch                            WriteBatch;                                        // 0x0000(0x0008)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UWriteBatchCommitProxy*                 ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WriteBatchCommitProxy_Commit) == 0x000008, "Wrong alignment on WriteBatchCommitProxy_Commit");
static_assert(sizeof(WriteBatchCommitProxy_Commit) == 0x000010, "Wrong size on WriteBatchCommitProxy_Commit");
static_assert(offsetof(WriteBatchCommitProxy_Commit, WriteBatch) == 0x000000, "Member 'WriteBatchCommitProxy_Commit::WriteBatch' has a wrong offset!");
static_assert(offsetof(WriteBatchCommitProxy_Commit, ReturnValue) == 0x000008, "Member 'WriteBatchCommitProxy_Commit::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirestoreRunTransactionProxy.RunTransaction
// 0x0018 (0x0018 - 0x0000)
struct FirestoreRunTransactionProxy_RunTransaction final
{
public:
	TDelegate<void(struct FFirestoreTransaction& Transaction, class FString* ErrorMessage)> TransactionFunction;                               // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirestoreRunTransactionProxy*          ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirestoreRunTransactionProxy_RunTransaction) == 0x000008, "Wrong alignment on FirestoreRunTransactionProxy_RunTransaction");
static_assert(sizeof(FirestoreRunTransactionProxy_RunTransaction) == 0x000018, "Wrong size on FirestoreRunTransactionProxy_RunTransaction");
static_assert(offsetof(FirestoreRunTransactionProxy_RunTransaction, TransactionFunction) == 0x000000, "Member 'FirestoreRunTransactionProxy_RunTransaction::TransactionFunction' has a wrong offset!");
static_assert(offsetof(FirestoreRunTransactionProxy_RunTransaction, ReturnValue) == 0x000010, "Member 'FirestoreRunTransactionProxy_RunTransaction::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DisableNetworkProxy.DisableNetwork
// 0x0008 (0x0008 - 0x0000)
struct DisableNetworkProxy_DisableNetwork final
{
public:
	class UDisableNetworkProxy*                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DisableNetworkProxy_DisableNetwork) == 0x000008, "Wrong alignment on DisableNetworkProxy_DisableNetwork");
static_assert(sizeof(DisableNetworkProxy_DisableNetwork) == 0x000008, "Wrong size on DisableNetworkProxy_DisableNetwork");
static_assert(offsetof(DisableNetworkProxy_DisableNetwork, ReturnValue) == 0x000000, "Member 'DisableNetworkProxy_DisableNetwork::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.EnableNetworkProxy.DisableNetwork
// 0x0008 (0x0008 - 0x0000)
struct EnableNetworkProxy_DisableNetwork final
{
public:
	class UEnableNetworkProxy*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EnableNetworkProxy_DisableNetwork) == 0x000008, "Wrong alignment on EnableNetworkProxy_DisableNetwork");
static_assert(sizeof(EnableNetworkProxy_DisableNetwork) == 0x000008, "Wrong size on EnableNetworkProxy_DisableNetwork");
static_assert(offsetof(EnableNetworkProxy_DisableNetwork, ReturnValue) == 0x000000, "Member 'EnableNetworkProxy_DisableNetwork::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.WaitForPendingWritesProxy.DisableNetwork
// 0x0008 (0x0008 - 0x0000)
struct WaitForPendingWritesProxy_DisableNetwork final
{
public:
	class UWaitForPendingWritesProxy*             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaitForPendingWritesProxy_DisableNetwork) == 0x000008, "Wrong alignment on WaitForPendingWritesProxy_DisableNetwork");
static_assert(sizeof(WaitForPendingWritesProxy_DisableNetwork) == 0x000008, "Wrong size on WaitForPendingWritesProxy_DisableNetwork");
static_assert(offsetof(WaitForPendingWritesProxy_DisableNetwork, ReturnValue) == 0x000000, "Member 'WaitForPendingWritesProxy_DisableNetwork::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DocumentReferenceGetProxy.Get
// 0x0018 (0x0018 - 0x0000)
struct DocumentReferenceGetProxy_Get final
{
public:
	const class UFirestoreDocumentReference*      DocumentReference;                                 // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFirestoreSource                              Source;                                            // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDocumentReferenceGetProxy*             ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DocumentReferenceGetProxy_Get) == 0x000008, "Wrong alignment on DocumentReferenceGetProxy_Get");
static_assert(sizeof(DocumentReferenceGetProxy_Get) == 0x000018, "Wrong size on DocumentReferenceGetProxy_Get");
static_assert(offsetof(DocumentReferenceGetProxy_Get, DocumentReference) == 0x000000, "Member 'DocumentReferenceGetProxy_Get::DocumentReference' has a wrong offset!");
static_assert(offsetof(DocumentReferenceGetProxy_Get, Source) == 0x000008, "Member 'DocumentReferenceGetProxy_Get::Source' has a wrong offset!");
static_assert(offsetof(DocumentReferenceGetProxy_Get, ReturnValue) == 0x000010, "Member 'DocumentReferenceGetProxy_Get::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DocumentReferenceSetProxy.Set
// 0x0068 (0x0068 - 0x0000)
struct DocumentReferenceSetProxy_Set final
{
public:
	const class UFirestoreDocumentReference*      DocumentReference;                                 // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, struct FFirestoreFieldValue> Data;                                              // 0x0008(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FFirestoreSetOptions                   Options;                                           // 0x0058(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UDocumentReferenceSetProxy*             ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DocumentReferenceSetProxy_Set) == 0x000008, "Wrong alignment on DocumentReferenceSetProxy_Set");
static_assert(sizeof(DocumentReferenceSetProxy_Set) == 0x000068, "Wrong size on DocumentReferenceSetProxy_Set");
static_assert(offsetof(DocumentReferenceSetProxy_Set, DocumentReference) == 0x000000, "Member 'DocumentReferenceSetProxy_Set::DocumentReference' has a wrong offset!");
static_assert(offsetof(DocumentReferenceSetProxy_Set, Data) == 0x000008, "Member 'DocumentReferenceSetProxy_Set::Data' has a wrong offset!");
static_assert(offsetof(DocumentReferenceSetProxy_Set, Options) == 0x000058, "Member 'DocumentReferenceSetProxy_Set::Options' has a wrong offset!");
static_assert(offsetof(DocumentReferenceSetProxy_Set, ReturnValue) == 0x000060, "Member 'DocumentReferenceSetProxy_Set::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DocumentReferenceUpdateProxy.Update
// 0x0060 (0x0060 - 0x0000)
struct DocumentReferenceUpdateProxy_Update final
{
public:
	const class UFirestoreDocumentReference*      DocumentReference;                                 // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, struct FFirestoreFieldValue> Data;                                              // 0x0008(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UDocumentReferenceUpdateProxy*          ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DocumentReferenceUpdateProxy_Update) == 0x000008, "Wrong alignment on DocumentReferenceUpdateProxy_Update");
static_assert(sizeof(DocumentReferenceUpdateProxy_Update) == 0x000060, "Wrong size on DocumentReferenceUpdateProxy_Update");
static_assert(offsetof(DocumentReferenceUpdateProxy_Update, DocumentReference) == 0x000000, "Member 'DocumentReferenceUpdateProxy_Update::DocumentReference' has a wrong offset!");
static_assert(offsetof(DocumentReferenceUpdateProxy_Update, Data) == 0x000008, "Member 'DocumentReferenceUpdateProxy_Update::Data' has a wrong offset!");
static_assert(offsetof(DocumentReferenceUpdateProxy_Update, ReturnValue) == 0x000058, "Member 'DocumentReferenceUpdateProxy_Update::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DocumentReferenceUpdateWithPathProxy.UpdateWithPath
// 0x0060 (0x0060 - 0x0000)
struct DocumentReferenceUpdateWithPathProxy_UpdateWithPath final
{
public:
	const class UFirestoreDocumentReference*      DocumentReference;                                 // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FFirestoreFieldPath, struct FFirestoreFieldValue> Data;                                              // 0x0008(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UDocumentReferenceUpdateWithPathProxy*  ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DocumentReferenceUpdateWithPathProxy_UpdateWithPath) == 0x000008, "Wrong alignment on DocumentReferenceUpdateWithPathProxy_UpdateWithPath");
static_assert(sizeof(DocumentReferenceUpdateWithPathProxy_UpdateWithPath) == 0x000060, "Wrong size on DocumentReferenceUpdateWithPathProxy_UpdateWithPath");
static_assert(offsetof(DocumentReferenceUpdateWithPathProxy_UpdateWithPath, DocumentReference) == 0x000000, "Member 'DocumentReferenceUpdateWithPathProxy_UpdateWithPath::DocumentReference' has a wrong offset!");
static_assert(offsetof(DocumentReferenceUpdateWithPathProxy_UpdateWithPath, Data) == 0x000008, "Member 'DocumentReferenceUpdateWithPathProxy_UpdateWithPath::Data' has a wrong offset!");
static_assert(offsetof(DocumentReferenceUpdateWithPathProxy_UpdateWithPath, ReturnValue) == 0x000058, "Member 'DocumentReferenceUpdateWithPathProxy_UpdateWithPath::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DocumentReferenceDeleteProxy.Delete
// 0x0010 (0x0010 - 0x0000)
struct DocumentReferenceDeleteProxy_Delete final
{
public:
	const class UFirestoreDocumentReference*      DocumentReference;                                 // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDocumentReferenceDeleteProxy*          ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DocumentReferenceDeleteProxy_Delete) == 0x000008, "Wrong alignment on DocumentReferenceDeleteProxy_Delete");
static_assert(sizeof(DocumentReferenceDeleteProxy_Delete) == 0x000010, "Wrong size on DocumentReferenceDeleteProxy_Delete");
static_assert(offsetof(DocumentReferenceDeleteProxy_Delete, DocumentReference) == 0x000000, "Member 'DocumentReferenceDeleteProxy_Delete::DocumentReference' has a wrong offset!");
static_assert(offsetof(DocumentReferenceDeleteProxy_Delete, ReturnValue) == 0x000008, "Member 'DocumentReferenceDeleteProxy_Delete::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.CollectionReferenceAddProxy.Add
// 0x0060 (0x0060 - 0x0000)
struct CollectionReferenceAddProxy_Add final
{
public:
	const class UFirestoreCollectionReference*    DocumentReference;                                 // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, struct FFirestoreFieldValue> Data;                                              // 0x0008(0x0050)(Parm, NativeAccessSpecifierPublic)
	class UCollectionReferenceAddProxy*           ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CollectionReferenceAddProxy_Add) == 0x000008, "Wrong alignment on CollectionReferenceAddProxy_Add");
static_assert(sizeof(CollectionReferenceAddProxy_Add) == 0x000060, "Wrong size on CollectionReferenceAddProxy_Add");
static_assert(offsetof(CollectionReferenceAddProxy_Add, DocumentReference) == 0x000000, "Member 'CollectionReferenceAddProxy_Add::DocumentReference' has a wrong offset!");
static_assert(offsetof(CollectionReferenceAddProxy_Add, Data) == 0x000008, "Member 'CollectionReferenceAddProxy_Add::Data' has a wrong offset!");
static_assert(offsetof(CollectionReferenceAddProxy_Add, ReturnValue) == 0x000058, "Member 'CollectionReferenceAddProxy_Add::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.QueryGetProxy.Get
// 0x0018 (0x0018 - 0x0000)
struct QueryGetProxy_Get final
{
public:
	class UFirestoreQuery*                        Param_Query;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFirestoreSource                              Source;                                            // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UQueryGetProxy*                         ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QueryGetProxy_Get) == 0x000008, "Wrong alignment on QueryGetProxy_Get");
static_assert(sizeof(QueryGetProxy_Get) == 0x000018, "Wrong size on QueryGetProxy_Get");
static_assert(offsetof(QueryGetProxy_Get, Param_Query) == 0x000000, "Member 'QueryGetProxy_Get::Param_Query' has a wrong offset!");
static_assert(offsetof(QueryGetProxy_Get, Source) == 0x000008, "Member 'QueryGetProxy_Get::Source' has a wrong offset!");
static_assert(offsetof(QueryGetProxy_Get, ReturnValue) == 0x000010, "Member 'QueryGetProxy_Get::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseFunctionsLibrary.GetHttpsCallable
// 0x0018 (0x0018 - 0x0000)
struct FirebaseFunctionsLibrary_GetHttpsCallable final
{
public:
	class FString                                 Param_Name;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFirebaseHttpsCallableReference        ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseFunctionsLibrary_GetHttpsCallable) == 0x000008, "Wrong alignment on FirebaseFunctionsLibrary_GetHttpsCallable");
static_assert(sizeof(FirebaseFunctionsLibrary_GetHttpsCallable) == 0x000018, "Wrong size on FirebaseFunctionsLibrary_GetHttpsCallable");
static_assert(offsetof(FirebaseFunctionsLibrary_GetHttpsCallable, Param_Name) == 0x000000, "Member 'FirebaseFunctionsLibrary_GetHttpsCallable::Param_Name' has a wrong offset!");
static_assert(offsetof(FirebaseFunctionsLibrary_GetHttpsCallable, ReturnValue) == 0x000010, "Member 'FirebaseFunctionsLibrary_GetHttpsCallable::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseFunctionsLibrary.GetHttpsCallableWithRegion
// 0x0028 (0x0028 - 0x0000)
struct FirebaseFunctionsLibrary_GetHttpsCallableWithRegion final
{
public:
	class FString                                 Param_Name;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Region;                                            // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFirebaseHttpsCallableReference        ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseFunctionsLibrary_GetHttpsCallableWithRegion) == 0x000008, "Wrong alignment on FirebaseFunctionsLibrary_GetHttpsCallableWithRegion");
static_assert(sizeof(FirebaseFunctionsLibrary_GetHttpsCallableWithRegion) == 0x000028, "Wrong size on FirebaseFunctionsLibrary_GetHttpsCallableWithRegion");
static_assert(offsetof(FirebaseFunctionsLibrary_GetHttpsCallableWithRegion, Param_Name) == 0x000000, "Member 'FirebaseFunctionsLibrary_GetHttpsCallableWithRegion::Param_Name' has a wrong offset!");
static_assert(offsetof(FirebaseFunctionsLibrary_GetHttpsCallableWithRegion, Region) == 0x000010, "Member 'FirebaseFunctionsLibrary_GetHttpsCallableWithRegion::Region' has a wrong offset!");
static_assert(offsetof(FirebaseFunctionsLibrary_GetHttpsCallableWithRegion, ReturnValue) == 0x000020, "Member 'FirebaseFunctionsLibrary_GetHttpsCallableWithRegion::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseFunctionsLibrary.UseFunctionsEmulator
// 0x0010 (0x0010 - 0x0000)
struct FirebaseFunctionsLibrary_UseFunctionsEmulator final
{
public:
	class FString                                 Origin;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseFunctionsLibrary_UseFunctionsEmulator) == 0x000008, "Wrong alignment on FirebaseFunctionsLibrary_UseFunctionsEmulator");
static_assert(sizeof(FirebaseFunctionsLibrary_UseFunctionsEmulator) == 0x000010, "Wrong size on FirebaseFunctionsLibrary_UseFunctionsEmulator");
static_assert(offsetof(FirebaseFunctionsLibrary_UseFunctionsEmulator, Origin) == 0x000000, "Member 'FirebaseFunctionsLibrary_UseFunctionsEmulator::Origin' has a wrong offset!");

// Function FirebaseFeatures.FirebaseFunctionsBlueprintLibrary.IsValid
// 0x0010 (0x0010 - 0x0000)
struct FirebaseFunctionsBlueprintLibrary_IsValid final
{
public:
	struct FFirebaseHttpsCallableReference        HttpsCallable;                                     // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FirebaseFunctionsBlueprintLibrary_IsValid) == 0x000008, "Wrong alignment on FirebaseFunctionsBlueprintLibrary_IsValid");
static_assert(sizeof(FirebaseFunctionsBlueprintLibrary_IsValid) == 0x000010, "Wrong size on FirebaseFunctionsBlueprintLibrary_IsValid");
static_assert(offsetof(FirebaseFunctionsBlueprintLibrary_IsValid, HttpsCallable) == 0x000000, "Member 'FirebaseFunctionsBlueprintLibrary_IsValid::HttpsCallable' has a wrong offset!");
static_assert(offsetof(FirebaseFunctionsBlueprintLibrary_IsValid, ReturnValue) == 0x000008, "Member 'FirebaseFunctionsBlueprintLibrary_IsValid::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.CallHttpsFunctionsProxy.Call
// 0x0010 (0x0010 - 0x0000)
struct CallHttpsFunctionsProxy_Call final
{
public:
	struct FFirebaseHttpsCallableReference        HttpsCallable;                                     // 0x0000(0x0008)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UCallHttpsFunctionsProxy*               ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CallHttpsFunctionsProxy_Call) == 0x000008, "Wrong alignment on CallHttpsFunctionsProxy_Call");
static_assert(sizeof(CallHttpsFunctionsProxy_Call) == 0x000010, "Wrong size on CallHttpsFunctionsProxy_Call");
static_assert(offsetof(CallHttpsFunctionsProxy_Call, HttpsCallable) == 0x000000, "Member 'CallHttpsFunctionsProxy_Call::HttpsCallable' has a wrong offset!");
static_assert(offsetof(CallHttpsFunctionsProxy_Call, ReturnValue) == 0x000008, "Member 'CallHttpsFunctionsProxy_Call::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.CallHttpsFunctionsWithDataProxy.CallWithData
// 0x0028 (0x0028 - 0x0000)
struct CallHttpsFunctionsWithDataProxy_CallWithData final
{
public:
	struct FFirebaseHttpsCallableReference        HttpsCallable;                                     // 0x0000(0x0008)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FFirebaseVariant                       Data;                                              // 0x0008(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCallHttpsFunctionsWithDataProxy*       ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CallHttpsFunctionsWithDataProxy_CallWithData) == 0x000008, "Wrong alignment on CallHttpsFunctionsWithDataProxy_CallWithData");
static_assert(sizeof(CallHttpsFunctionsWithDataProxy_CallWithData) == 0x000028, "Wrong size on CallHttpsFunctionsWithDataProxy_CallWithData");
static_assert(offsetof(CallHttpsFunctionsWithDataProxy_CallWithData, HttpsCallable) == 0x000000, "Member 'CallHttpsFunctionsWithDataProxy_CallWithData::HttpsCallable' has a wrong offset!");
static_assert(offsetof(CallHttpsFunctionsWithDataProxy_CallWithData, Data) == 0x000008, "Member 'CallHttpsFunctionsWithDataProxy_CallWithData::Data' has a wrong offset!");
static_assert(offsetof(CallHttpsFunctionsWithDataProxy_CallWithData, ReturnValue) == 0x000020, "Member 'CallHttpsFunctionsWithDataProxy_CallWithData::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FbGoogleSignInProxy.SignIn
// 0x0020 (0x0020 - 0x0000)
struct FbGoogleSignInProxy_SignIn final
{
public:
	class FString                                 ServerClientID;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSkipIfSigned;                                     // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseSilentSignIn;                                  // 0x0011(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFbGoogleSignInProxy*                   ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FbGoogleSignInProxy_SignIn) == 0x000008, "Wrong alignment on FbGoogleSignInProxy_SignIn");
static_assert(sizeof(FbGoogleSignInProxy_SignIn) == 0x000020, "Wrong size on FbGoogleSignInProxy_SignIn");
static_assert(offsetof(FbGoogleSignInProxy_SignIn, ServerClientID) == 0x000000, "Member 'FbGoogleSignInProxy_SignIn::ServerClientID' has a wrong offset!");
static_assert(offsetof(FbGoogleSignInProxy_SignIn, bSkipIfSigned) == 0x000010, "Member 'FbGoogleSignInProxy_SignIn::bSkipIfSigned' has a wrong offset!");
static_assert(offsetof(FbGoogleSignInProxy_SignIn, bUseSilentSignIn) == 0x000011, "Member 'FbGoogleSignInProxy_SignIn::bUseSilentSignIn' has a wrong offset!");
static_assert(offsetof(FbGoogleSignInProxy_SignIn, ReturnValue) == 0x000018, "Member 'FbGoogleSignInProxy_SignIn::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.GetLeaderboardScoreProxy.GetScore
// 0x0018 (0x0018 - 0x0000)
struct GetLeaderboardScoreProxy_GetScore final
{
public:
	class FString                                 LeaderboardID;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGetLeaderboardScoreProxy*              ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GetLeaderboardScoreProxy_GetScore) == 0x000008, "Wrong alignment on GetLeaderboardScoreProxy_GetScore");
static_assert(sizeof(GetLeaderboardScoreProxy_GetScore) == 0x000018, "Wrong size on GetLeaderboardScoreProxy_GetScore");
static_assert(offsetof(GetLeaderboardScoreProxy_GetScore, LeaderboardID) == 0x000000, "Member 'GetLeaderboardScoreProxy_GetScore::LeaderboardID' has a wrong offset!");
static_assert(offsetof(GetLeaderboardScoreProxy_GetScore, ReturnValue) == 0x000010, "Member 'GetLeaderboardScoreProxy_GetScore::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.GoogleSignInCredentialProxy.GetCredential
// 0x0020 (0x0020 - 0x0000)
struct GoogleSignInCredentialProxy_GetCredential final
{
public:
	class FString                                 ServerClientID;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseSilentSignIn;                                  // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSkipIfSigned;                                     // 0x0011(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGoogleSignInCredentialProxy*           ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GoogleSignInCredentialProxy_GetCredential) == 0x000008, "Wrong alignment on GoogleSignInCredentialProxy_GetCredential");
static_assert(sizeof(GoogleSignInCredentialProxy_GetCredential) == 0x000020, "Wrong size on GoogleSignInCredentialProxy_GetCredential");
static_assert(offsetof(GoogleSignInCredentialProxy_GetCredential, ServerClientID) == 0x000000, "Member 'GoogleSignInCredentialProxy_GetCredential::ServerClientID' has a wrong offset!");
static_assert(offsetof(GoogleSignInCredentialProxy_GetCredential, bUseSilentSignIn) == 0x000010, "Member 'GoogleSignInCredentialProxy_GetCredential::bUseSilentSignIn' has a wrong offset!");
static_assert(offsetof(GoogleSignInCredentialProxy_GetCredential, bSkipIfSigned) == 0x000011, "Member 'GoogleSignInCredentialProxy_GetCredential::bSkipIfSigned' has a wrong offset!");
static_assert(offsetof(GoogleSignInCredentialProxy_GetCredential, ReturnValue) == 0x000018, "Member 'GoogleSignInCredentialProxy_GetCredential::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.GoogleSignInCredentialProxy.GetCredentialFromPlayGames
// 0x0020 (0x0020 - 0x0000)
struct GoogleSignInCredentialProxy_GetCredentialFromPlayGames final
{
public:
	class FString                                 ServerClientID;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseSilentSignIn;                                  // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSkipIfSigned;                                     // 0x0011(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGoogleSignInCredentialProxy*           ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GoogleSignInCredentialProxy_GetCredentialFromPlayGames) == 0x000008, "Wrong alignment on GoogleSignInCredentialProxy_GetCredentialFromPlayGames");
static_assert(sizeof(GoogleSignInCredentialProxy_GetCredentialFromPlayGames) == 0x000020, "Wrong size on GoogleSignInCredentialProxy_GetCredentialFromPlayGames");
static_assert(offsetof(GoogleSignInCredentialProxy_GetCredentialFromPlayGames, ServerClientID) == 0x000000, "Member 'GoogleSignInCredentialProxy_GetCredentialFromPlayGames::ServerClientID' has a wrong offset!");
static_assert(offsetof(GoogleSignInCredentialProxy_GetCredentialFromPlayGames, bUseSilentSignIn) == 0x000010, "Member 'GoogleSignInCredentialProxy_GetCredentialFromPlayGames::bUseSilentSignIn' has a wrong offset!");
static_assert(offsetof(GoogleSignInCredentialProxy_GetCredentialFromPlayGames, bSkipIfSigned) == 0x000011, "Member 'GoogleSignInCredentialProxy_GetCredentialFromPlayGames::bSkipIfSigned' has a wrong offset!");
static_assert(offsetof(GoogleSignInCredentialProxy_GetCredentialFromPlayGames, ReturnValue) == 0x000018, "Member 'GoogleSignInCredentialProxy_GetCredentialFromPlayGames::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.GoogleServicesLibrary.GetAccessToken
// 0x0010 (0x0010 - 0x0000)
struct GoogleServicesLibrary_GetAccessToken final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GoogleServicesLibrary_GetAccessToken) == 0x000008, "Wrong alignment on GoogleServicesLibrary_GetAccessToken");
static_assert(sizeof(GoogleServicesLibrary_GetAccessToken) == 0x000010, "Wrong size on GoogleServicesLibrary_GetAccessToken");
static_assert(offsetof(GoogleServicesLibrary_GetAccessToken, ReturnValue) == 0x000000, "Member 'GoogleServicesLibrary_GetAccessToken::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.GoogleServicesLibrary.GetIdToken
// 0x0010 (0x0010 - 0x0000)
struct GoogleServicesLibrary_GetIdToken final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GoogleServicesLibrary_GetIdToken) == 0x000008, "Wrong alignment on GoogleServicesLibrary_GetIdToken");
static_assert(sizeof(GoogleServicesLibrary_GetIdToken) == 0x000010, "Wrong size on GoogleServicesLibrary_GetIdToken");
static_assert(offsetof(GoogleServicesLibrary_GetIdToken, ReturnValue) == 0x000000, "Member 'GoogleServicesLibrary_GetIdToken::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.GoogleServicesLibrary.GetServerAuthCode
// 0x0010 (0x0010 - 0x0000)
struct GoogleServicesLibrary_GetServerAuthCode final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GoogleServicesLibrary_GetServerAuthCode) == 0x000008, "Wrong alignment on GoogleServicesLibrary_GetServerAuthCode");
static_assert(sizeof(GoogleServicesLibrary_GetServerAuthCode) == 0x000010, "Wrong size on GoogleServicesLibrary_GetServerAuthCode");
static_assert(offsetof(GoogleServicesLibrary_GetServerAuthCode, ReturnValue) == 0x000000, "Member 'GoogleServicesLibrary_GetServerAuthCode::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.GoogleServicesLibrary.IsSignedIn
// 0x0001 (0x0001 - 0x0000)
struct GoogleServicesLibrary_IsSignedIn final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GoogleServicesLibrary_IsSignedIn) == 0x000001, "Wrong alignment on GoogleServicesLibrary_IsSignedIn");
static_assert(sizeof(GoogleServicesLibrary_IsSignedIn) == 0x000001, "Wrong size on GoogleServicesLibrary_IsSignedIn");
static_assert(offsetof(GoogleServicesLibrary_IsSignedIn, ReturnValue) == 0x000000, "Member 'GoogleServicesLibrary_IsSignedIn::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.GoogleServicesLibrary.ShowLeaderboard
// 0x0010 (0x0010 - 0x0000)
struct GoogleServicesLibrary_ShowLeaderboard final
{
public:
	class FString                                 LeaderboardID;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GoogleServicesLibrary_ShowLeaderboard) == 0x000008, "Wrong alignment on GoogleServicesLibrary_ShowLeaderboard");
static_assert(sizeof(GoogleServicesLibrary_ShowLeaderboard) == 0x000010, "Wrong size on GoogleServicesLibrary_ShowLeaderboard");
static_assert(offsetof(GoogleServicesLibrary_ShowLeaderboard, LeaderboardID) == 0x000000, "Member 'GoogleServicesLibrary_ShowLeaderboard::LeaderboardID' has a wrong offset!");

// Function FirebaseFeatures.GoogleServicesLibrary.SubmitScore
// 0x0018 (0x0018 - 0x0000)
struct GoogleServicesLibrary_SubmitScore final
{
public:
	class FString                                 LeaderboardID;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         Score;                                             // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GoogleServicesLibrary_SubmitScore) == 0x000008, "Wrong alignment on GoogleServicesLibrary_SubmitScore");
static_assert(sizeof(GoogleServicesLibrary_SubmitScore) == 0x000018, "Wrong size on GoogleServicesLibrary_SubmitScore");
static_assert(offsetof(GoogleServicesLibrary_SubmitScore, LeaderboardID) == 0x000000, "Member 'GoogleServicesLibrary_SubmitScore::LeaderboardID' has a wrong offset!");
static_assert(offsetof(GoogleServicesLibrary_SubmitScore, Score) == 0x000010, "Member 'GoogleServicesLibrary_SubmitScore::Score' has a wrong offset!");

// Function FirebaseFeatures.FirebaseMesssagingBlueprintLibrary.GetCachedCloudMessagingToken
// 0x0010 (0x0010 - 0x0000)
struct FirebaseMesssagingBlueprintLibrary_GetCachedCloudMessagingToken final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseMesssagingBlueprintLibrary_GetCachedCloudMessagingToken) == 0x000008, "Wrong alignment on FirebaseMesssagingBlueprintLibrary_GetCachedCloudMessagingToken");
static_assert(sizeof(FirebaseMesssagingBlueprintLibrary_GetCachedCloudMessagingToken) == 0x000010, "Wrong size on FirebaseMesssagingBlueprintLibrary_GetCachedCloudMessagingToken");
static_assert(offsetof(FirebaseMesssagingBlueprintLibrary_GetCachedCloudMessagingToken, ReturnValue) == 0x000000, "Member 'FirebaseMesssagingBlueprintLibrary_GetCachedCloudMessagingToken::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseMesssagingBlueprintLibrary.GetLastMessage
// 0x01F0 (0x01F0 - 0x0000)
struct FirebaseMesssagingBlueprintLibrary_GetLastMessage final
{
public:
	struct FFirebaseMessage                       ReturnValue;                                       // 0x0000(0x01F0)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseMesssagingBlueprintLibrary_GetLastMessage) == 0x000008, "Wrong alignment on FirebaseMesssagingBlueprintLibrary_GetLastMessage");
static_assert(sizeof(FirebaseMesssagingBlueprintLibrary_GetLastMessage) == 0x0001F0, "Wrong size on FirebaseMesssagingBlueprintLibrary_GetLastMessage");
static_assert(offsetof(FirebaseMesssagingBlueprintLibrary_GetLastMessage, ReturnValue) == 0x000000, "Member 'FirebaseMesssagingBlueprintLibrary_GetLastMessage::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseMesssagingBlueprintLibrary.IsDeliveryMetricsExportToBigQueryEnabled
// 0x0001 (0x0001 - 0x0000)
struct FirebaseMesssagingBlueprintLibrary_IsDeliveryMetricsExportToBigQueryEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseMesssagingBlueprintLibrary_IsDeliveryMetricsExportToBigQueryEnabled) == 0x000001, "Wrong alignment on FirebaseMesssagingBlueprintLibrary_IsDeliveryMetricsExportToBigQueryEnabled");
static_assert(sizeof(FirebaseMesssagingBlueprintLibrary_IsDeliveryMetricsExportToBigQueryEnabled) == 0x000001, "Wrong size on FirebaseMesssagingBlueprintLibrary_IsDeliveryMetricsExportToBigQueryEnabled");
static_assert(offsetof(FirebaseMesssagingBlueprintLibrary_IsDeliveryMetricsExportToBigQueryEnabled, ReturnValue) == 0x000000, "Member 'FirebaseMesssagingBlueprintLibrary_IsDeliveryMetricsExportToBigQueryEnabled::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseMesssagingBlueprintLibrary.IsTokenRegistrationOnInitEnabled
// 0x0001 (0x0001 - 0x0000)
struct FirebaseMesssagingBlueprintLibrary_IsTokenRegistrationOnInitEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseMesssagingBlueprintLibrary_IsTokenRegistrationOnInitEnabled) == 0x000001, "Wrong alignment on FirebaseMesssagingBlueprintLibrary_IsTokenRegistrationOnInitEnabled");
static_assert(sizeof(FirebaseMesssagingBlueprintLibrary_IsTokenRegistrationOnInitEnabled) == 0x000001, "Wrong size on FirebaseMesssagingBlueprintLibrary_IsTokenRegistrationOnInitEnabled");
static_assert(offsetof(FirebaseMesssagingBlueprintLibrary_IsTokenRegistrationOnInitEnabled, ReturnValue) == 0x000000, "Member 'FirebaseMesssagingBlueprintLibrary_IsTokenRegistrationOnInitEnabled::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseMesssagingBlueprintLibrary.Send
// 0x01F0 (0x01F0 - 0x0000)
struct FirebaseMesssagingBlueprintLibrary_Send final
{
public:
	struct FFirebaseMessage                       Message;                                           // 0x0000(0x01F0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseMesssagingBlueprintLibrary_Send) == 0x000008, "Wrong alignment on FirebaseMesssagingBlueprintLibrary_Send");
static_assert(sizeof(FirebaseMesssagingBlueprintLibrary_Send) == 0x0001F0, "Wrong size on FirebaseMesssagingBlueprintLibrary_Send");
static_assert(offsetof(FirebaseMesssagingBlueprintLibrary_Send, Message) == 0x000000, "Member 'FirebaseMesssagingBlueprintLibrary_Send::Message' has a wrong offset!");

// Function FirebaseFeatures.FirebaseMesssagingBlueprintLibrary.SetDeliveryMetricsExportToBigQuery
// 0x0001 (0x0001 - 0x0000)
struct FirebaseMesssagingBlueprintLibrary_SetDeliveryMetricsExportToBigQuery final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseMesssagingBlueprintLibrary_SetDeliveryMetricsExportToBigQuery) == 0x000001, "Wrong alignment on FirebaseMesssagingBlueprintLibrary_SetDeliveryMetricsExportToBigQuery");
static_assert(sizeof(FirebaseMesssagingBlueprintLibrary_SetDeliveryMetricsExportToBigQuery) == 0x000001, "Wrong size on FirebaseMesssagingBlueprintLibrary_SetDeliveryMetricsExportToBigQuery");
static_assert(offsetof(FirebaseMesssagingBlueprintLibrary_SetDeliveryMetricsExportToBigQuery, bEnable) == 0x000000, "Member 'FirebaseMesssagingBlueprintLibrary_SetDeliveryMetricsExportToBigQuery::bEnable' has a wrong offset!");

// Function FirebaseFeatures.FirebaseMesssagingBlueprintLibrary.SetTokenRegistrationOnInitEnabled
// 0x0001 (0x0001 - 0x0000)
struct FirebaseMesssagingBlueprintLibrary_SetTokenRegistrationOnInitEnabled final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseMesssagingBlueprintLibrary_SetTokenRegistrationOnInitEnabled) == 0x000001, "Wrong alignment on FirebaseMesssagingBlueprintLibrary_SetTokenRegistrationOnInitEnabled");
static_assert(sizeof(FirebaseMesssagingBlueprintLibrary_SetTokenRegistrationOnInitEnabled) == 0x000001, "Wrong size on FirebaseMesssagingBlueprintLibrary_SetTokenRegistrationOnInitEnabled");
static_assert(offsetof(FirebaseMesssagingBlueprintLibrary_SetTokenRegistrationOnInitEnabled, bEnable) == 0x000000, "Member 'FirebaseMesssagingBlueprintLibrary_SetTokenRegistrationOnInitEnabled::bEnable' has a wrong offset!");

// Function FirebaseFeatures.RequestPermissionProxy.RequestPermission
// 0x0008 (0x0008 - 0x0000)
struct RequestPermissionProxy_RequestPermission final
{
public:
	class URequestPermissionProxy*                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RequestPermissionProxy_RequestPermission) == 0x000008, "Wrong alignment on RequestPermissionProxy_RequestPermission");
static_assert(sizeof(RequestPermissionProxy_RequestPermission) == 0x000008, "Wrong size on RequestPermissionProxy_RequestPermission");
static_assert(offsetof(RequestPermissionProxy_RequestPermission, ReturnValue) == 0x000000, "Member 'RequestPermissionProxy_RequestPermission::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.SubscribeProxy.Subscribe
// 0x0018 (0x0018 - 0x0000)
struct SubscribeProxy_Subscribe final
{
public:
	class FString                                 Topic;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USubscribeProxy*                        ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SubscribeProxy_Subscribe) == 0x000008, "Wrong alignment on SubscribeProxy_Subscribe");
static_assert(sizeof(SubscribeProxy_Subscribe) == 0x000018, "Wrong size on SubscribeProxy_Subscribe");
static_assert(offsetof(SubscribeProxy_Subscribe, Topic) == 0x000000, "Member 'SubscribeProxy_Subscribe::Topic' has a wrong offset!");
static_assert(offsetof(SubscribeProxy_Subscribe, ReturnValue) == 0x000010, "Member 'SubscribeProxy_Subscribe::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.UnsubscribeProxy.Unsubscribe
// 0x0018 (0x0018 - 0x0000)
struct UnsubscribeProxy_Unsubscribe final
{
public:
	class FString                                 Topic;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUnsubscribeProxy*                      ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnsubscribeProxy_Unsubscribe) == 0x000008, "Wrong alignment on UnsubscribeProxy_Unsubscribe");
static_assert(sizeof(UnsubscribeProxy_Unsubscribe) == 0x000018, "Wrong size on UnsubscribeProxy_Unsubscribe");
static_assert(offsetof(UnsubscribeProxy_Unsubscribe, Topic) == 0x000000, "Member 'UnsubscribeProxy_Unsubscribe::Topic' has a wrong offset!");
static_assert(offsetof(UnsubscribeProxy_Unsubscribe, ReturnValue) == 0x000010, "Member 'UnsubscribeProxy_Unsubscribe::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.MessagingEventsProxy.ListenForMessagingEvents
// 0x0008 (0x0008 - 0x0000)
struct MessagingEventsProxy_ListenForMessagingEvents final
{
public:
	class UMessagingEventsProxy*                  ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MessagingEventsProxy_ListenForMessagingEvents) == 0x000008, "Wrong alignment on MessagingEventsProxy_ListenForMessagingEvents");
static_assert(sizeof(MessagingEventsProxy_ListenForMessagingEvents) == 0x000008, "Wrong size on MessagingEventsProxy_ListenForMessagingEvents");
static_assert(offsetof(MessagingEventsProxy_ListenForMessagingEvents, ReturnValue) == 0x000000, "Member 'MessagingEventsProxy_ListenForMessagingEvents::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseRemoteConfig.ActivateFetched
// 0x0001 (0x0001 - 0x0000)
struct FirebaseRemoteConfig_ActivateFetched final
{
public:
	EFirebaseConfigFetchActivationBranch          branch;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseRemoteConfig_ActivateFetched) == 0x000001, "Wrong alignment on FirebaseRemoteConfig_ActivateFetched");
static_assert(sizeof(FirebaseRemoteConfig_ActivateFetched) == 0x000001, "Wrong size on FirebaseRemoteConfig_ActivateFetched");
static_assert(offsetof(FirebaseRemoteConfig_ActivateFetched, branch) == 0x000000, "Member 'FirebaseRemoteConfig_ActivateFetched::branch' has a wrong offset!");

// Function FirebaseFeatures.FirebaseRemoteConfig.GetBoolean
// 0x0018 (0x0018 - 0x0000)
struct FirebaseRemoteConfig_GetBoolean final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FirebaseRemoteConfig_GetBoolean) == 0x000008, "Wrong alignment on FirebaseRemoteConfig_GetBoolean");
static_assert(sizeof(FirebaseRemoteConfig_GetBoolean) == 0x000018, "Wrong size on FirebaseRemoteConfig_GetBoolean");
static_assert(offsetof(FirebaseRemoteConfig_GetBoolean, Key) == 0x000000, "Member 'FirebaseRemoteConfig_GetBoolean::Key' has a wrong offset!");
static_assert(offsetof(FirebaseRemoteConfig_GetBoolean, ReturnValue) == 0x000010, "Member 'FirebaseRemoteConfig_GetBoolean::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseRemoteConfig.GetBooleanWithInfo
// 0x0018 (0x0018 - 0x0000)
struct FirebaseRemoteConfig_GetBooleanWithInfo final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFirebaseValueInfo                     Info;                                              // 0x0010(0x0002)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0012(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FirebaseRemoteConfig_GetBooleanWithInfo) == 0x000008, "Wrong alignment on FirebaseRemoteConfig_GetBooleanWithInfo");
static_assert(sizeof(FirebaseRemoteConfig_GetBooleanWithInfo) == 0x000018, "Wrong size on FirebaseRemoteConfig_GetBooleanWithInfo");
static_assert(offsetof(FirebaseRemoteConfig_GetBooleanWithInfo, Key) == 0x000000, "Member 'FirebaseRemoteConfig_GetBooleanWithInfo::Key' has a wrong offset!");
static_assert(offsetof(FirebaseRemoteConfig_GetBooleanWithInfo, Info) == 0x000010, "Member 'FirebaseRemoteConfig_GetBooleanWithInfo::Info' has a wrong offset!");
static_assert(offsetof(FirebaseRemoteConfig_GetBooleanWithInfo, ReturnValue) == 0x000012, "Member 'FirebaseRemoteConfig_GetBooleanWithInfo::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseRemoteConfig.GetByte
// 0x0018 (0x0018 - 0x0000)
struct FirebaseRemoteConfig_GetByte final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FirebaseRemoteConfig_GetByte) == 0x000008, "Wrong alignment on FirebaseRemoteConfig_GetByte");
static_assert(sizeof(FirebaseRemoteConfig_GetByte) == 0x000018, "Wrong size on FirebaseRemoteConfig_GetByte");
static_assert(offsetof(FirebaseRemoteConfig_GetByte, Key) == 0x000000, "Member 'FirebaseRemoteConfig_GetByte::Key' has a wrong offset!");
static_assert(offsetof(FirebaseRemoteConfig_GetByte, ReturnValue) == 0x000010, "Member 'FirebaseRemoteConfig_GetByte::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseRemoteConfig.GetConfigSetting
// 0x0018 (0x0018 - 0x0000)
struct FirebaseRemoteConfig_GetConfigSetting final
{
public:
	EFirebaseConfigSetting                        Defaults;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseRemoteConfig_GetConfigSetting) == 0x000008, "Wrong alignment on FirebaseRemoteConfig_GetConfigSetting");
static_assert(sizeof(FirebaseRemoteConfig_GetConfigSetting) == 0x000018, "Wrong size on FirebaseRemoteConfig_GetConfigSetting");
static_assert(offsetof(FirebaseRemoteConfig_GetConfigSetting, Defaults) == 0x000000, "Member 'FirebaseRemoteConfig_GetConfigSetting::Defaults' has a wrong offset!");
static_assert(offsetof(FirebaseRemoteConfig_GetConfigSetting, ReturnValue) == 0x000008, "Member 'FirebaseRemoteConfig_GetConfigSetting::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseRemoteConfig.GetData
// 0x0020 (0x0020 - 0x0000)
struct FirebaseRemoteConfig_GetData final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseRemoteConfig_GetData) == 0x000008, "Wrong alignment on FirebaseRemoteConfig_GetData");
static_assert(sizeof(FirebaseRemoteConfig_GetData) == 0x000020, "Wrong size on FirebaseRemoteConfig_GetData");
static_assert(offsetof(FirebaseRemoteConfig_GetData, Key) == 0x000000, "Member 'FirebaseRemoteConfig_GetData::Key' has a wrong offset!");
static_assert(offsetof(FirebaseRemoteConfig_GetData, ReturnValue) == 0x000010, "Member 'FirebaseRemoteConfig_GetData::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseRemoteConfig.GetDataWithInfo
// 0x0028 (0x0028 - 0x0000)
struct FirebaseRemoteConfig_GetDataWithInfo final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFirebaseValueInfo                     Info;                                              // 0x0010(0x0002)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<uint8>                                 ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseRemoteConfig_GetDataWithInfo) == 0x000008, "Wrong alignment on FirebaseRemoteConfig_GetDataWithInfo");
static_assert(sizeof(FirebaseRemoteConfig_GetDataWithInfo) == 0x000028, "Wrong size on FirebaseRemoteConfig_GetDataWithInfo");
static_assert(offsetof(FirebaseRemoteConfig_GetDataWithInfo, Key) == 0x000000, "Member 'FirebaseRemoteConfig_GetDataWithInfo::Key' has a wrong offset!");
static_assert(offsetof(FirebaseRemoteConfig_GetDataWithInfo, Info) == 0x000010, "Member 'FirebaseRemoteConfig_GetDataWithInfo::Info' has a wrong offset!");
static_assert(offsetof(FirebaseRemoteConfig_GetDataWithInfo, ReturnValue) == 0x000018, "Member 'FirebaseRemoteConfig_GetDataWithInfo::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseRemoteConfig.GetFloat
// 0x0018 (0x0018 - 0x0000)
struct FirebaseRemoteConfig_GetFloat final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FirebaseRemoteConfig_GetFloat) == 0x000008, "Wrong alignment on FirebaseRemoteConfig_GetFloat");
static_assert(sizeof(FirebaseRemoteConfig_GetFloat) == 0x000018, "Wrong size on FirebaseRemoteConfig_GetFloat");
static_assert(offsetof(FirebaseRemoteConfig_GetFloat, Key) == 0x000000, "Member 'FirebaseRemoteConfig_GetFloat::Key' has a wrong offset!");
static_assert(offsetof(FirebaseRemoteConfig_GetFloat, ReturnValue) == 0x000010, "Member 'FirebaseRemoteConfig_GetFloat::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseRemoteConfig.GetFloatWithInfo
// 0x0018 (0x0018 - 0x0000)
struct FirebaseRemoteConfig_GetFloatWithInfo final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFirebaseValueInfo                     Info;                                              // 0x0010(0x0002)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReturnValue;                                       // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseRemoteConfig_GetFloatWithInfo) == 0x000008, "Wrong alignment on FirebaseRemoteConfig_GetFloatWithInfo");
static_assert(sizeof(FirebaseRemoteConfig_GetFloatWithInfo) == 0x000018, "Wrong size on FirebaseRemoteConfig_GetFloatWithInfo");
static_assert(offsetof(FirebaseRemoteConfig_GetFloatWithInfo, Key) == 0x000000, "Member 'FirebaseRemoteConfig_GetFloatWithInfo::Key' has a wrong offset!");
static_assert(offsetof(FirebaseRemoteConfig_GetFloatWithInfo, Info) == 0x000010, "Member 'FirebaseRemoteConfig_GetFloatWithInfo::Info' has a wrong offset!");
static_assert(offsetof(FirebaseRemoteConfig_GetFloatWithInfo, ReturnValue) == 0x000014, "Member 'FirebaseRemoteConfig_GetFloatWithInfo::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseRemoteConfig.GetInfo
// 0x0018 (0x0018 - 0x0000)
struct FirebaseRemoteConfig_GetInfo final
{
public:
	struct FFirebaseConfigInfo                    ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseRemoteConfig_GetInfo) == 0x000008, "Wrong alignment on FirebaseRemoteConfig_GetInfo");
static_assert(sizeof(FirebaseRemoteConfig_GetInfo) == 0x000018, "Wrong size on FirebaseRemoteConfig_GetInfo");
static_assert(offsetof(FirebaseRemoteConfig_GetInfo, ReturnValue) == 0x000000, "Member 'FirebaseRemoteConfig_GetInfo::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseRemoteConfig.GetInt32
// 0x0018 (0x0018 - 0x0000)
struct FirebaseRemoteConfig_GetInt32 final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FirebaseRemoteConfig_GetInt32) == 0x000008, "Wrong alignment on FirebaseRemoteConfig_GetInt32");
static_assert(sizeof(FirebaseRemoteConfig_GetInt32) == 0x000018, "Wrong size on FirebaseRemoteConfig_GetInt32");
static_assert(offsetof(FirebaseRemoteConfig_GetInt32, Key) == 0x000000, "Member 'FirebaseRemoteConfig_GetInt32::Key' has a wrong offset!");
static_assert(offsetof(FirebaseRemoteConfig_GetInt32, ReturnValue) == 0x000010, "Member 'FirebaseRemoteConfig_GetInt32::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseRemoteConfig.GetInt64
// 0x0018 (0x0018 - 0x0000)
struct FirebaseRemoteConfig_GetInt64 final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseRemoteConfig_GetInt64) == 0x000008, "Wrong alignment on FirebaseRemoteConfig_GetInt64");
static_assert(sizeof(FirebaseRemoteConfig_GetInt64) == 0x000018, "Wrong size on FirebaseRemoteConfig_GetInt64");
static_assert(offsetof(FirebaseRemoteConfig_GetInt64, Key) == 0x000000, "Member 'FirebaseRemoteConfig_GetInt64::Key' has a wrong offset!");
static_assert(offsetof(FirebaseRemoteConfig_GetInt64, ReturnValue) == 0x000010, "Member 'FirebaseRemoteConfig_GetInt64::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseRemoteConfig.GetInt64WithInfo
// 0x0020 (0x0020 - 0x0000)
struct FirebaseRemoteConfig_GetInt64WithInfo final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFirebaseValueInfo                     Info;                                              // 0x0010(0x0002)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseRemoteConfig_GetInt64WithInfo) == 0x000008, "Wrong alignment on FirebaseRemoteConfig_GetInt64WithInfo");
static_assert(sizeof(FirebaseRemoteConfig_GetInt64WithInfo) == 0x000020, "Wrong size on FirebaseRemoteConfig_GetInt64WithInfo");
static_assert(offsetof(FirebaseRemoteConfig_GetInt64WithInfo, Key) == 0x000000, "Member 'FirebaseRemoteConfig_GetInt64WithInfo::Key' has a wrong offset!");
static_assert(offsetof(FirebaseRemoteConfig_GetInt64WithInfo, Info) == 0x000010, "Member 'FirebaseRemoteConfig_GetInt64WithInfo::Info' has a wrong offset!");
static_assert(offsetof(FirebaseRemoteConfig_GetInt64WithInfo, ReturnValue) == 0x000018, "Member 'FirebaseRemoteConfig_GetInt64WithInfo::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseRemoteConfig.GetKeys
// 0x0010 (0x0010 - 0x0000)
struct FirebaseRemoteConfig_GetKeys final
{
public:
	TArray<class FString>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseRemoteConfig_GetKeys) == 0x000008, "Wrong alignment on FirebaseRemoteConfig_GetKeys");
static_assert(sizeof(FirebaseRemoteConfig_GetKeys) == 0x000010, "Wrong size on FirebaseRemoteConfig_GetKeys");
static_assert(offsetof(FirebaseRemoteConfig_GetKeys, ReturnValue) == 0x000000, "Member 'FirebaseRemoteConfig_GetKeys::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseRemoteConfig.GetKeysByPrefix
// 0x0020 (0x0020 - 0x0000)
struct FirebaseRemoteConfig_GetKeysByPrefix final
{
public:
	class FString                                 Prefix;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseRemoteConfig_GetKeysByPrefix) == 0x000008, "Wrong alignment on FirebaseRemoteConfig_GetKeysByPrefix");
static_assert(sizeof(FirebaseRemoteConfig_GetKeysByPrefix) == 0x000020, "Wrong size on FirebaseRemoteConfig_GetKeysByPrefix");
static_assert(offsetof(FirebaseRemoteConfig_GetKeysByPrefix, Prefix) == 0x000000, "Member 'FirebaseRemoteConfig_GetKeysByPrefix::Prefix' has a wrong offset!");
static_assert(offsetof(FirebaseRemoteConfig_GetKeysByPrefix, ReturnValue) == 0x000010, "Member 'FirebaseRemoteConfig_GetKeysByPrefix::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseRemoteConfig.GetString
// 0x0020 (0x0020 - 0x0000)
struct FirebaseRemoteConfig_GetString final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseRemoteConfig_GetString) == 0x000008, "Wrong alignment on FirebaseRemoteConfig_GetString");
static_assert(sizeof(FirebaseRemoteConfig_GetString) == 0x000020, "Wrong size on FirebaseRemoteConfig_GetString");
static_assert(offsetof(FirebaseRemoteConfig_GetString, Key) == 0x000000, "Member 'FirebaseRemoteConfig_GetString::Key' has a wrong offset!");
static_assert(offsetof(FirebaseRemoteConfig_GetString, ReturnValue) == 0x000010, "Member 'FirebaseRemoteConfig_GetString::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseRemoteConfig.GetStringWithInfo
// 0x0028 (0x0028 - 0x0000)
struct FirebaseRemoteConfig_GetStringWithInfo final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFirebaseValueInfo                     Info;                                              // 0x0010(0x0002)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseRemoteConfig_GetStringWithInfo) == 0x000008, "Wrong alignment on FirebaseRemoteConfig_GetStringWithInfo");
static_assert(sizeof(FirebaseRemoteConfig_GetStringWithInfo) == 0x000028, "Wrong size on FirebaseRemoteConfig_GetStringWithInfo");
static_assert(offsetof(FirebaseRemoteConfig_GetStringWithInfo, Key) == 0x000000, "Member 'FirebaseRemoteConfig_GetStringWithInfo::Key' has a wrong offset!");
static_assert(offsetof(FirebaseRemoteConfig_GetStringWithInfo, Info) == 0x000010, "Member 'FirebaseRemoteConfig_GetStringWithInfo::Info' has a wrong offset!");
static_assert(offsetof(FirebaseRemoteConfig_GetStringWithInfo, ReturnValue) == 0x000018, "Member 'FirebaseRemoteConfig_GetStringWithInfo::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseRemoteConfig.SetConfigSetting
// 0x0018 (0x0018 - 0x0000)
struct FirebaseRemoteConfig_SetConfigSetting final
{
public:
	EFirebaseConfigSetting                        Setting;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Value;                                             // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseRemoteConfig_SetConfigSetting) == 0x000008, "Wrong alignment on FirebaseRemoteConfig_SetConfigSetting");
static_assert(sizeof(FirebaseRemoteConfig_SetConfigSetting) == 0x000018, "Wrong size on FirebaseRemoteConfig_SetConfigSetting");
static_assert(offsetof(FirebaseRemoteConfig_SetConfigSetting, Setting) == 0x000000, "Member 'FirebaseRemoteConfig_SetConfigSetting::Setting' has a wrong offset!");
static_assert(offsetof(FirebaseRemoteConfig_SetConfigSetting, Value) == 0x000008, "Member 'FirebaseRemoteConfig_SetConfigSetting::Value' has a wrong offset!");

// Function FirebaseFeatures.FirebaseRemoteConfig.SetDefaults
// 0x0010 (0x0010 - 0x0000)
struct FirebaseRemoteConfig_SetDefaults final
{
public:
	TArray<struct FFirebaseConfigKeyValue>        Defaults;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseRemoteConfig_SetDefaults) == 0x000008, "Wrong alignment on FirebaseRemoteConfig_SetDefaults");
static_assert(sizeof(FirebaseRemoteConfig_SetDefaults) == 0x000010, "Wrong size on FirebaseRemoteConfig_SetDefaults");
static_assert(offsetof(FirebaseRemoteConfig_SetDefaults, Defaults) == 0x000000, "Member 'FirebaseRemoteConfig_SetDefaults::Defaults' has a wrong offset!");

// Function FirebaseFeatures.FirebaseRemoteConfig.SetDefaultsWithVariant
// 0x0010 (0x0010 - 0x0000)
struct FirebaseRemoteConfig_SetDefaultsWithVariant final
{
public:
	TArray<struct FFirebaseConfigKeyValueVariant> Defaults;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseRemoteConfig_SetDefaultsWithVariant) == 0x000008, "Wrong alignment on FirebaseRemoteConfig_SetDefaultsWithVariant");
static_assert(sizeof(FirebaseRemoteConfig_SetDefaultsWithVariant) == 0x000010, "Wrong size on FirebaseRemoteConfig_SetDefaultsWithVariant");
static_assert(offsetof(FirebaseRemoteConfig_SetDefaultsWithVariant, Defaults) == 0x000000, "Member 'FirebaseRemoteConfig_SetDefaultsWithVariant::Defaults' has a wrong offset!");

// Function FirebaseFeatures.FetchProxy.Fetch
// 0x0008 (0x0008 - 0x0000)
struct FetchProxy_Fetch final
{
public:
	class UFetchProxy*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FetchProxy_Fetch) == 0x000008, "Wrong alignment on FetchProxy_Fetch");
static_assert(sizeof(FetchProxy_Fetch) == 0x000008, "Wrong size on FetchProxy_Fetch");
static_assert(offsetof(FetchProxy_Fetch, ReturnValue) == 0x000000, "Member 'FetchProxy_Fetch::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FetchWithCacheExpirationProxy.FetchWithCacheExpiration
// 0x0010 (0x0010 - 0x0000)
struct FetchWithCacheExpirationProxy_FetchWithCacheExpiration final
{
public:
	int32                                         CacheExpirationInSeconds;                          // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFetchWithCacheExpirationProxy*         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FetchWithCacheExpirationProxy_FetchWithCacheExpiration) == 0x000008, "Wrong alignment on FetchWithCacheExpirationProxy_FetchWithCacheExpiration");
static_assert(sizeof(FetchWithCacheExpirationProxy_FetchWithCacheExpiration) == 0x000010, "Wrong size on FetchWithCacheExpirationProxy_FetchWithCacheExpiration");
static_assert(offsetof(FetchWithCacheExpirationProxy_FetchWithCacheExpiration, CacheExpirationInSeconds) == 0x000000, "Member 'FetchWithCacheExpirationProxy_FetchWithCacheExpiration::CacheExpirationInSeconds' has a wrong offset!");
static_assert(offsetof(FetchWithCacheExpirationProxy_FetchWithCacheExpiration, ReturnValue) == 0x000008, "Member 'FetchWithCacheExpirationProxy_FetchWithCacheExpiration::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseStorage.GetMaxDownloadRetryTime
// 0x0004 (0x0004 - 0x0000)
struct FirebaseStorage_GetMaxDownloadRetryTime final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseStorage_GetMaxDownloadRetryTime) == 0x000004, "Wrong alignment on FirebaseStorage_GetMaxDownloadRetryTime");
static_assert(sizeof(FirebaseStorage_GetMaxDownloadRetryTime) == 0x000004, "Wrong size on FirebaseStorage_GetMaxDownloadRetryTime");
static_assert(offsetof(FirebaseStorage_GetMaxDownloadRetryTime, ReturnValue) == 0x000000, "Member 'FirebaseStorage_GetMaxDownloadRetryTime::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseStorage.GetMaxOperationRetryTime
// 0x0004 (0x0004 - 0x0000)
struct FirebaseStorage_GetMaxOperationRetryTime final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseStorage_GetMaxOperationRetryTime) == 0x000004, "Wrong alignment on FirebaseStorage_GetMaxOperationRetryTime");
static_assert(sizeof(FirebaseStorage_GetMaxOperationRetryTime) == 0x000004, "Wrong size on FirebaseStorage_GetMaxOperationRetryTime");
static_assert(offsetof(FirebaseStorage_GetMaxOperationRetryTime, ReturnValue) == 0x000000, "Member 'FirebaseStorage_GetMaxOperationRetryTime::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseStorage.GetMaxUploadRetryTime
// 0x0004 (0x0004 - 0x0000)
struct FirebaseStorage_GetMaxUploadRetryTime final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseStorage_GetMaxUploadRetryTime) == 0x000004, "Wrong alignment on FirebaseStorage_GetMaxUploadRetryTime");
static_assert(sizeof(FirebaseStorage_GetMaxUploadRetryTime) == 0x000004, "Wrong size on FirebaseStorage_GetMaxUploadRetryTime");
static_assert(offsetof(FirebaseStorage_GetMaxUploadRetryTime, ReturnValue) == 0x000000, "Member 'FirebaseStorage_GetMaxUploadRetryTime::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseStorage.GetReference
// 0x0008 (0x0008 - 0x0000)
struct FirebaseStorage_GetReference final
{
public:
	class UFirebaseStorageReference*              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseStorage_GetReference) == 0x000008, "Wrong alignment on FirebaseStorage_GetReference");
static_assert(sizeof(FirebaseStorage_GetReference) == 0x000008, "Wrong size on FirebaseStorage_GetReference");
static_assert(offsetof(FirebaseStorage_GetReference, ReturnValue) == 0x000000, "Member 'FirebaseStorage_GetReference::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseStorage.GetReferenceFromPath
// 0x0018 (0x0018 - 0x0000)
struct FirebaseStorage_GetReferenceFromPath final
{
public:
	class FString                                 Path;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseStorageReference*              ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseStorage_GetReferenceFromPath) == 0x000008, "Wrong alignment on FirebaseStorage_GetReferenceFromPath");
static_assert(sizeof(FirebaseStorage_GetReferenceFromPath) == 0x000018, "Wrong size on FirebaseStorage_GetReferenceFromPath");
static_assert(offsetof(FirebaseStorage_GetReferenceFromPath, Path) == 0x000000, "Member 'FirebaseStorage_GetReferenceFromPath::Path' has a wrong offset!");
static_assert(offsetof(FirebaseStorage_GetReferenceFromPath, ReturnValue) == 0x000010, "Member 'FirebaseStorage_GetReferenceFromPath::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseStorage.GetReferenceFromUrl
// 0x0018 (0x0018 - 0x0000)
struct FirebaseStorage_GetReferenceFromUrl final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseStorageReference*              ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseStorage_GetReferenceFromUrl) == 0x000008, "Wrong alignment on FirebaseStorage_GetReferenceFromUrl");
static_assert(sizeof(FirebaseStorage_GetReferenceFromUrl) == 0x000018, "Wrong size on FirebaseStorage_GetReferenceFromUrl");
static_assert(offsetof(FirebaseStorage_GetReferenceFromUrl, URL) == 0x000000, "Member 'FirebaseStorage_GetReferenceFromUrl::URL' has a wrong offset!");
static_assert(offsetof(FirebaseStorage_GetReferenceFromUrl, ReturnValue) == 0x000010, "Member 'FirebaseStorage_GetReferenceFromUrl::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseStorage.GetUrl
// 0x0010 (0x0010 - 0x0000)
struct FirebaseStorage_GetUrl final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseStorage_GetUrl) == 0x000008, "Wrong alignment on FirebaseStorage_GetUrl");
static_assert(sizeof(FirebaseStorage_GetUrl) == 0x000010, "Wrong size on FirebaseStorage_GetUrl");
static_assert(offsetof(FirebaseStorage_GetUrl, ReturnValue) == 0x000000, "Member 'FirebaseStorage_GetUrl::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseStorage.SetMaxDownloadRetryTime
// 0x0004 (0x0004 - 0x0000)
struct FirebaseStorage_SetMaxDownloadRetryTime final
{
public:
	float                                         MaxTransferRetrySeconds;                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseStorage_SetMaxDownloadRetryTime) == 0x000004, "Wrong alignment on FirebaseStorage_SetMaxDownloadRetryTime");
static_assert(sizeof(FirebaseStorage_SetMaxDownloadRetryTime) == 0x000004, "Wrong size on FirebaseStorage_SetMaxDownloadRetryTime");
static_assert(offsetof(FirebaseStorage_SetMaxDownloadRetryTime, MaxTransferRetrySeconds) == 0x000000, "Member 'FirebaseStorage_SetMaxDownloadRetryTime::MaxTransferRetrySeconds' has a wrong offset!");

// Function FirebaseFeatures.FirebaseStorage.SetMaxOperationRetryTime
// 0x0004 (0x0004 - 0x0000)
struct FirebaseStorage_SetMaxOperationRetryTime final
{
public:
	float                                         MaxTransferRetrySeconds;                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseStorage_SetMaxOperationRetryTime) == 0x000004, "Wrong alignment on FirebaseStorage_SetMaxOperationRetryTime");
static_assert(sizeof(FirebaseStorage_SetMaxOperationRetryTime) == 0x000004, "Wrong size on FirebaseStorage_SetMaxOperationRetryTime");
static_assert(offsetof(FirebaseStorage_SetMaxOperationRetryTime, MaxTransferRetrySeconds) == 0x000000, "Member 'FirebaseStorage_SetMaxOperationRetryTime::MaxTransferRetrySeconds' has a wrong offset!");

// Function FirebaseFeatures.FirebaseStorage.SetMaxUploadRetryTime
// 0x0004 (0x0004 - 0x0000)
struct FirebaseStorage_SetMaxUploadRetryTime final
{
public:
	float                                         MaxTransferRetrySeconds;                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseStorage_SetMaxUploadRetryTime) == 0x000004, "Wrong alignment on FirebaseStorage_SetMaxUploadRetryTime");
static_assert(sizeof(FirebaseStorage_SetMaxUploadRetryTime) == 0x000004, "Wrong size on FirebaseStorage_SetMaxUploadRetryTime");
static_assert(offsetof(FirebaseStorage_SetMaxUploadRetryTime, MaxTransferRetrySeconds) == 0x000000, "Member 'FirebaseStorage_SetMaxUploadRetryTime::MaxTransferRetrySeconds' has a wrong offset!");

// Function FirebaseFeatures.StorageBlueprintLibrary.BytesTransferred
// 0x0010 (0x0010 - 0x0000)
struct StorageBlueprintLibrary_BytesTransferred final
{
public:
	struct FFirebaseStorageController             Controller;                                        // 0x0000(0x0001)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StorageBlueprintLibrary_BytesTransferred) == 0x000008, "Wrong alignment on StorageBlueprintLibrary_BytesTransferred");
static_assert(sizeof(StorageBlueprintLibrary_BytesTransferred) == 0x000010, "Wrong size on StorageBlueprintLibrary_BytesTransferred");
static_assert(offsetof(StorageBlueprintLibrary_BytesTransferred, Controller) == 0x000000, "Member 'StorageBlueprintLibrary_BytesTransferred::Controller' has a wrong offset!");
static_assert(offsetof(StorageBlueprintLibrary_BytesTransferred, ReturnValue) == 0x000008, "Member 'StorageBlueprintLibrary_BytesTransferred::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.StorageBlueprintLibrary.Cancel
// 0x0002 (0x0002 - 0x0000)
struct StorageBlueprintLibrary_Cancel final
{
public:
	struct FFirebaseStorageController             Controller;                                        // 0x0000(0x0001)(Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	EFirebaseStorageBlueprintExecutionPin         Branches;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StorageBlueprintLibrary_Cancel) == 0x000001, "Wrong alignment on StorageBlueprintLibrary_Cancel");
static_assert(sizeof(StorageBlueprintLibrary_Cancel) == 0x000002, "Wrong size on StorageBlueprintLibrary_Cancel");
static_assert(offsetof(StorageBlueprintLibrary_Cancel, Controller) == 0x000000, "Member 'StorageBlueprintLibrary_Cancel::Controller' has a wrong offset!");
static_assert(offsetof(StorageBlueprintLibrary_Cancel, Branches) == 0x000001, "Member 'StorageBlueprintLibrary_Cancel::Branches' has a wrong offset!");

// Function FirebaseFeatures.StorageBlueprintLibrary.ContentType
// 0x0018 (0x0018 - 0x0000)
struct StorageBlueprintLibrary_ContentType final
{
public:
	struct FFirebaseStorageMetadata               Metadata;                                          // 0x0000(0x0001)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StorageBlueprintLibrary_ContentType) == 0x000008, "Wrong alignment on StorageBlueprintLibrary_ContentType");
static_assert(sizeof(StorageBlueprintLibrary_ContentType) == 0x000018, "Wrong size on StorageBlueprintLibrary_ContentType");
static_assert(offsetof(StorageBlueprintLibrary_ContentType, Metadata) == 0x000000, "Member 'StorageBlueprintLibrary_ContentType::Metadata' has a wrong offset!");
static_assert(offsetof(StorageBlueprintLibrary_ContentType, ReturnValue) == 0x000008, "Member 'StorageBlueprintLibrary_ContentType::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.StorageBlueprintLibrary.GetBucket
// 0x0018 (0x0018 - 0x0000)
struct StorageBlueprintLibrary_GetBucket final
{
public:
	struct FFirebaseStorageMetadata               Metadata;                                          // 0x0000(0x0001)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StorageBlueprintLibrary_GetBucket) == 0x000008, "Wrong alignment on StorageBlueprintLibrary_GetBucket");
static_assert(sizeof(StorageBlueprintLibrary_GetBucket) == 0x000018, "Wrong size on StorageBlueprintLibrary_GetBucket");
static_assert(offsetof(StorageBlueprintLibrary_GetBucket, Metadata) == 0x000000, "Member 'StorageBlueprintLibrary_GetBucket::Metadata' has a wrong offset!");
static_assert(offsetof(StorageBlueprintLibrary_GetBucket, ReturnValue) == 0x000008, "Member 'StorageBlueprintLibrary_GetBucket::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.StorageBlueprintLibrary.GetCacheControl
// 0x0018 (0x0018 - 0x0000)
struct StorageBlueprintLibrary_GetCacheControl final
{
public:
	struct FFirebaseStorageMetadata               Metadata;                                          // 0x0000(0x0001)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StorageBlueprintLibrary_GetCacheControl) == 0x000008, "Wrong alignment on StorageBlueprintLibrary_GetCacheControl");
static_assert(sizeof(StorageBlueprintLibrary_GetCacheControl) == 0x000018, "Wrong size on StorageBlueprintLibrary_GetCacheControl");
static_assert(offsetof(StorageBlueprintLibrary_GetCacheControl, Metadata) == 0x000000, "Member 'StorageBlueprintLibrary_GetCacheControl::Metadata' has a wrong offset!");
static_assert(offsetof(StorageBlueprintLibrary_GetCacheControl, ReturnValue) == 0x000008, "Member 'StorageBlueprintLibrary_GetCacheControl::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.StorageBlueprintLibrary.GetContentDisposition
// 0x0018 (0x0018 - 0x0000)
struct StorageBlueprintLibrary_GetContentDisposition final
{
public:
	struct FFirebaseStorageMetadata               Metadata;                                          // 0x0000(0x0001)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StorageBlueprintLibrary_GetContentDisposition) == 0x000008, "Wrong alignment on StorageBlueprintLibrary_GetContentDisposition");
static_assert(sizeof(StorageBlueprintLibrary_GetContentDisposition) == 0x000018, "Wrong size on StorageBlueprintLibrary_GetContentDisposition");
static_assert(offsetof(StorageBlueprintLibrary_GetContentDisposition, Metadata) == 0x000000, "Member 'StorageBlueprintLibrary_GetContentDisposition::Metadata' has a wrong offset!");
static_assert(offsetof(StorageBlueprintLibrary_GetContentDisposition, ReturnValue) == 0x000008, "Member 'StorageBlueprintLibrary_GetContentDisposition::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.StorageBlueprintLibrary.GetContentEncoding
// 0x0018 (0x0018 - 0x0000)
struct StorageBlueprintLibrary_GetContentEncoding final
{
public:
	struct FFirebaseStorageMetadata               Metadata;                                          // 0x0000(0x0001)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StorageBlueprintLibrary_GetContentEncoding) == 0x000008, "Wrong alignment on StorageBlueprintLibrary_GetContentEncoding");
static_assert(sizeof(StorageBlueprintLibrary_GetContentEncoding) == 0x000018, "Wrong size on StorageBlueprintLibrary_GetContentEncoding");
static_assert(offsetof(StorageBlueprintLibrary_GetContentEncoding, Metadata) == 0x000000, "Member 'StorageBlueprintLibrary_GetContentEncoding::Metadata' has a wrong offset!");
static_assert(offsetof(StorageBlueprintLibrary_GetContentEncoding, ReturnValue) == 0x000008, "Member 'StorageBlueprintLibrary_GetContentEncoding::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.StorageBlueprintLibrary.GetContentLanguage
// 0x0018 (0x0018 - 0x0000)
struct StorageBlueprintLibrary_GetContentLanguage final
{
public:
	struct FFirebaseStorageMetadata               Metadata;                                          // 0x0000(0x0001)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StorageBlueprintLibrary_GetContentLanguage) == 0x000008, "Wrong alignment on StorageBlueprintLibrary_GetContentLanguage");
static_assert(sizeof(StorageBlueprintLibrary_GetContentLanguage) == 0x000018, "Wrong size on StorageBlueprintLibrary_GetContentLanguage");
static_assert(offsetof(StorageBlueprintLibrary_GetContentLanguage, Metadata) == 0x000000, "Member 'StorageBlueprintLibrary_GetContentLanguage::Metadata' has a wrong offset!");
static_assert(offsetof(StorageBlueprintLibrary_GetContentLanguage, ReturnValue) == 0x000008, "Member 'StorageBlueprintLibrary_GetContentLanguage::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.StorageBlueprintLibrary.GetCreationTime
// 0x0010 (0x0010 - 0x0000)
struct StorageBlueprintLibrary_GetCreationTime final
{
public:
	struct FFirebaseStorageMetadata               Metadata;                                          // 0x0000(0x0001)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StorageBlueprintLibrary_GetCreationTime) == 0x000008, "Wrong alignment on StorageBlueprintLibrary_GetCreationTime");
static_assert(sizeof(StorageBlueprintLibrary_GetCreationTime) == 0x000010, "Wrong size on StorageBlueprintLibrary_GetCreationTime");
static_assert(offsetof(StorageBlueprintLibrary_GetCreationTime, Metadata) == 0x000000, "Member 'StorageBlueprintLibrary_GetCreationTime::Metadata' has a wrong offset!");
static_assert(offsetof(StorageBlueprintLibrary_GetCreationTime, ReturnValue) == 0x000008, "Member 'StorageBlueprintLibrary_GetCreationTime::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.StorageBlueprintLibrary.GetCustomMetadata
// 0x0058 (0x0058 - 0x0000)
struct StorageBlueprintLibrary_GetCustomMetadata final
{
public:
	struct FFirebaseStorageMetadata               Metadata;                                          // 0x0000(0x0001)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, class FString>            ReturnValue;                                       // 0x0008(0x0050)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(StorageBlueprintLibrary_GetCustomMetadata) == 0x000008, "Wrong alignment on StorageBlueprintLibrary_GetCustomMetadata");
static_assert(sizeof(StorageBlueprintLibrary_GetCustomMetadata) == 0x000058, "Wrong size on StorageBlueprintLibrary_GetCustomMetadata");
static_assert(offsetof(StorageBlueprintLibrary_GetCustomMetadata, Metadata) == 0x000000, "Member 'StorageBlueprintLibrary_GetCustomMetadata::Metadata' has a wrong offset!");
static_assert(offsetof(StorageBlueprintLibrary_GetCustomMetadata, ReturnValue) == 0x000008, "Member 'StorageBlueprintLibrary_GetCustomMetadata::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.StorageBlueprintLibrary.GetGeneration
// 0x0010 (0x0010 - 0x0000)
struct StorageBlueprintLibrary_GetGeneration final
{
public:
	struct FFirebaseStorageMetadata               Metadata;                                          // 0x0000(0x0001)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StorageBlueprintLibrary_GetGeneration) == 0x000008, "Wrong alignment on StorageBlueprintLibrary_GetGeneration");
static_assert(sizeof(StorageBlueprintLibrary_GetGeneration) == 0x000010, "Wrong size on StorageBlueprintLibrary_GetGeneration");
static_assert(offsetof(StorageBlueprintLibrary_GetGeneration, Metadata) == 0x000000, "Member 'StorageBlueprintLibrary_GetGeneration::Metadata' has a wrong offset!");
static_assert(offsetof(StorageBlueprintLibrary_GetGeneration, ReturnValue) == 0x000008, "Member 'StorageBlueprintLibrary_GetGeneration::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.StorageBlueprintLibrary.GetMd5Hash
// 0x0018 (0x0018 - 0x0000)
struct StorageBlueprintLibrary_GetMd5Hash final
{
public:
	struct FFirebaseStorageMetadata               Metadata;                                          // 0x0000(0x0001)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StorageBlueprintLibrary_GetMd5Hash) == 0x000008, "Wrong alignment on StorageBlueprintLibrary_GetMd5Hash");
static_assert(sizeof(StorageBlueprintLibrary_GetMd5Hash) == 0x000018, "Wrong size on StorageBlueprintLibrary_GetMd5Hash");
static_assert(offsetof(StorageBlueprintLibrary_GetMd5Hash, Metadata) == 0x000000, "Member 'StorageBlueprintLibrary_GetMd5Hash::Metadata' has a wrong offset!");
static_assert(offsetof(StorageBlueprintLibrary_GetMd5Hash, ReturnValue) == 0x000008, "Member 'StorageBlueprintLibrary_GetMd5Hash::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.StorageBlueprintLibrary.GetMetadataGeneration
// 0x0010 (0x0010 - 0x0000)
struct StorageBlueprintLibrary_GetMetadataGeneration final
{
public:
	struct FFirebaseStorageMetadata               Metadata;                                          // 0x0000(0x0001)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StorageBlueprintLibrary_GetMetadataGeneration) == 0x000008, "Wrong alignment on StorageBlueprintLibrary_GetMetadataGeneration");
static_assert(sizeof(StorageBlueprintLibrary_GetMetadataGeneration) == 0x000010, "Wrong size on StorageBlueprintLibrary_GetMetadataGeneration");
static_assert(offsetof(StorageBlueprintLibrary_GetMetadataGeneration, Metadata) == 0x000000, "Member 'StorageBlueprintLibrary_GetMetadataGeneration::Metadata' has a wrong offset!");
static_assert(offsetof(StorageBlueprintLibrary_GetMetadataGeneration, ReturnValue) == 0x000008, "Member 'StorageBlueprintLibrary_GetMetadataGeneration::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.StorageBlueprintLibrary.GetName
// 0x0018 (0x0018 - 0x0000)
struct StorageBlueprintLibrary_GetName final
{
public:
	struct FFirebaseStorageMetadata               Metadata;                                          // 0x0000(0x0001)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StorageBlueprintLibrary_GetName) == 0x000008, "Wrong alignment on StorageBlueprintLibrary_GetName");
static_assert(sizeof(StorageBlueprintLibrary_GetName) == 0x000018, "Wrong size on StorageBlueprintLibrary_GetName");
static_assert(offsetof(StorageBlueprintLibrary_GetName, Metadata) == 0x000000, "Member 'StorageBlueprintLibrary_GetName::Metadata' has a wrong offset!");
static_assert(offsetof(StorageBlueprintLibrary_GetName, ReturnValue) == 0x000008, "Member 'StorageBlueprintLibrary_GetName::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.StorageBlueprintLibrary.GetPath
// 0x0018 (0x0018 - 0x0000)
struct StorageBlueprintLibrary_GetPath final
{
public:
	struct FFirebaseStorageMetadata               Metadata;                                          // 0x0000(0x0001)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StorageBlueprintLibrary_GetPath) == 0x000008, "Wrong alignment on StorageBlueprintLibrary_GetPath");
static_assert(sizeof(StorageBlueprintLibrary_GetPath) == 0x000018, "Wrong size on StorageBlueprintLibrary_GetPath");
static_assert(offsetof(StorageBlueprintLibrary_GetPath, Metadata) == 0x000000, "Member 'StorageBlueprintLibrary_GetPath::Metadata' has a wrong offset!");
static_assert(offsetof(StorageBlueprintLibrary_GetPath, ReturnValue) == 0x000008, "Member 'StorageBlueprintLibrary_GetPath::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.StorageBlueprintLibrary.GetReference
// 0x0010 (0x0010 - 0x0000)
struct StorageBlueprintLibrary_GetReference final
{
public:
	struct FFirebaseStorageController             Controller;                                        // 0x0000(0x0001)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFirebaseStorageReference*              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StorageBlueprintLibrary_GetReference) == 0x000008, "Wrong alignment on StorageBlueprintLibrary_GetReference");
static_assert(sizeof(StorageBlueprintLibrary_GetReference) == 0x000010, "Wrong size on StorageBlueprintLibrary_GetReference");
static_assert(offsetof(StorageBlueprintLibrary_GetReference, Controller) == 0x000000, "Member 'StorageBlueprintLibrary_GetReference::Controller' has a wrong offset!");
static_assert(offsetof(StorageBlueprintLibrary_GetReference, ReturnValue) == 0x000008, "Member 'StorageBlueprintLibrary_GetReference::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.StorageBlueprintLibrary.GetReference_Metadata
// 0x0010 (0x0010 - 0x0000)
struct StorageBlueprintLibrary_GetReference_Metadata final
{
public:
	struct FFirebaseStorageMetadata               Metadata;                                          // 0x0000(0x0001)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFirebaseStorageReference*              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StorageBlueprintLibrary_GetReference_Metadata) == 0x000008, "Wrong alignment on StorageBlueprintLibrary_GetReference_Metadata");
static_assert(sizeof(StorageBlueprintLibrary_GetReference_Metadata) == 0x000010, "Wrong size on StorageBlueprintLibrary_GetReference_Metadata");
static_assert(offsetof(StorageBlueprintLibrary_GetReference_Metadata, Metadata) == 0x000000, "Member 'StorageBlueprintLibrary_GetReference_Metadata::Metadata' has a wrong offset!");
static_assert(offsetof(StorageBlueprintLibrary_GetReference_Metadata, ReturnValue) == 0x000008, "Member 'StorageBlueprintLibrary_GetReference_Metadata::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.StorageBlueprintLibrary.GetSizeBytes
// 0x0010 (0x0010 - 0x0000)
struct StorageBlueprintLibrary_GetSizeBytes final
{
public:
	struct FFirebaseStorageMetadata               Metadata;                                          // 0x0000(0x0001)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StorageBlueprintLibrary_GetSizeBytes) == 0x000008, "Wrong alignment on StorageBlueprintLibrary_GetSizeBytes");
static_assert(sizeof(StorageBlueprintLibrary_GetSizeBytes) == 0x000010, "Wrong size on StorageBlueprintLibrary_GetSizeBytes");
static_assert(offsetof(StorageBlueprintLibrary_GetSizeBytes, Metadata) == 0x000000, "Member 'StorageBlueprintLibrary_GetSizeBytes::Metadata' has a wrong offset!");
static_assert(offsetof(StorageBlueprintLibrary_GetSizeBytes, ReturnValue) == 0x000008, "Member 'StorageBlueprintLibrary_GetSizeBytes::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.StorageBlueprintLibrary.GetUpdatedTime
// 0x0010 (0x0010 - 0x0000)
struct StorageBlueprintLibrary_GetUpdatedTime final
{
public:
	struct FFirebaseStorageMetadata               Metadata;                                          // 0x0000(0x0001)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StorageBlueprintLibrary_GetUpdatedTime) == 0x000008, "Wrong alignment on StorageBlueprintLibrary_GetUpdatedTime");
static_assert(sizeof(StorageBlueprintLibrary_GetUpdatedTime) == 0x000010, "Wrong size on StorageBlueprintLibrary_GetUpdatedTime");
static_assert(offsetof(StorageBlueprintLibrary_GetUpdatedTime, Metadata) == 0x000000, "Member 'StorageBlueprintLibrary_GetUpdatedTime::Metadata' has a wrong offset!");
static_assert(offsetof(StorageBlueprintLibrary_GetUpdatedTime, ReturnValue) == 0x000008, "Member 'StorageBlueprintLibrary_GetUpdatedTime::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.StorageBlueprintLibrary.IsPaused
// 0x0002 (0x0002 - 0x0000)
struct StorageBlueprintLibrary_IsPaused final
{
public:
	struct FFirebaseStorageController             Controller;                                        // 0x0000(0x0001)(Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StorageBlueprintLibrary_IsPaused) == 0x000001, "Wrong alignment on StorageBlueprintLibrary_IsPaused");
static_assert(sizeof(StorageBlueprintLibrary_IsPaused) == 0x000002, "Wrong size on StorageBlueprintLibrary_IsPaused");
static_assert(offsetof(StorageBlueprintLibrary_IsPaused, Controller) == 0x000000, "Member 'StorageBlueprintLibrary_IsPaused::Controller' has a wrong offset!");
static_assert(offsetof(StorageBlueprintLibrary_IsPaused, ReturnValue) == 0x000001, "Member 'StorageBlueprintLibrary_IsPaused::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.StorageBlueprintLibrary.IsValid
// 0x0002 (0x0002 - 0x0000)
struct StorageBlueprintLibrary_IsValid final
{
public:
	struct FFirebaseStorageController             Controller;                                        // 0x0000(0x0001)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StorageBlueprintLibrary_IsValid) == 0x000001, "Wrong alignment on StorageBlueprintLibrary_IsValid");
static_assert(sizeof(StorageBlueprintLibrary_IsValid) == 0x000002, "Wrong size on StorageBlueprintLibrary_IsValid");
static_assert(offsetof(StorageBlueprintLibrary_IsValid, Controller) == 0x000000, "Member 'StorageBlueprintLibrary_IsValid::Controller' has a wrong offset!");
static_assert(offsetof(StorageBlueprintLibrary_IsValid, ReturnValue) == 0x000001, "Member 'StorageBlueprintLibrary_IsValid::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.StorageBlueprintLibrary.IsValid_Metadata
// 0x0002 (0x0002 - 0x0000)
struct StorageBlueprintLibrary_IsValid_Metadata final
{
public:
	struct FFirebaseStorageMetadata               Metadata;                                          // 0x0000(0x0001)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StorageBlueprintLibrary_IsValid_Metadata) == 0x000001, "Wrong alignment on StorageBlueprintLibrary_IsValid_Metadata");
static_assert(sizeof(StorageBlueprintLibrary_IsValid_Metadata) == 0x000002, "Wrong size on StorageBlueprintLibrary_IsValid_Metadata");
static_assert(offsetof(StorageBlueprintLibrary_IsValid_Metadata, Metadata) == 0x000000, "Member 'StorageBlueprintLibrary_IsValid_Metadata::Metadata' has a wrong offset!");
static_assert(offsetof(StorageBlueprintLibrary_IsValid_Metadata, ReturnValue) == 0x000001, "Member 'StorageBlueprintLibrary_IsValid_Metadata::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.StorageBlueprintLibrary.Pause
// 0x0002 (0x0002 - 0x0000)
struct StorageBlueprintLibrary_Pause final
{
public:
	struct FFirebaseStorageController             Controller;                                        // 0x0000(0x0001)(Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	EFirebaseStorageBlueprintExecutionPin         Branches;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StorageBlueprintLibrary_Pause) == 0x000001, "Wrong alignment on StorageBlueprintLibrary_Pause");
static_assert(sizeof(StorageBlueprintLibrary_Pause) == 0x000002, "Wrong size on StorageBlueprintLibrary_Pause");
static_assert(offsetof(StorageBlueprintLibrary_Pause, Controller) == 0x000000, "Member 'StorageBlueprintLibrary_Pause::Controller' has a wrong offset!");
static_assert(offsetof(StorageBlueprintLibrary_Pause, Branches) == 0x000001, "Member 'StorageBlueprintLibrary_Pause::Branches' has a wrong offset!");

// Function FirebaseFeatures.StorageBlueprintLibrary.Resume
// 0x0002 (0x0002 - 0x0000)
struct StorageBlueprintLibrary_Resume final
{
public:
	struct FFirebaseStorageController             Controller;                                        // 0x0000(0x0001)(Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	EFirebaseStorageBlueprintExecutionPin         Branches;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StorageBlueprintLibrary_Resume) == 0x000001, "Wrong alignment on StorageBlueprintLibrary_Resume");
static_assert(sizeof(StorageBlueprintLibrary_Resume) == 0x000002, "Wrong size on StorageBlueprintLibrary_Resume");
static_assert(offsetof(StorageBlueprintLibrary_Resume, Controller) == 0x000000, "Member 'StorageBlueprintLibrary_Resume::Controller' has a wrong offset!");
static_assert(offsetof(StorageBlueprintLibrary_Resume, Branches) == 0x000001, "Member 'StorageBlueprintLibrary_Resume::Branches' has a wrong offset!");

// Function FirebaseFeatures.StorageBlueprintLibrary.SetCachControl
// 0x0018 (0x0018 - 0x0000)
struct StorageBlueprintLibrary_SetCachControl final
{
public:
	struct FFirebaseStorageMetadata               Metadata;                                          // 0x0000(0x0001)(Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CacheControl;                                      // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StorageBlueprintLibrary_SetCachControl) == 0x000008, "Wrong alignment on StorageBlueprintLibrary_SetCachControl");
static_assert(sizeof(StorageBlueprintLibrary_SetCachControl) == 0x000018, "Wrong size on StorageBlueprintLibrary_SetCachControl");
static_assert(offsetof(StorageBlueprintLibrary_SetCachControl, Metadata) == 0x000000, "Member 'StorageBlueprintLibrary_SetCachControl::Metadata' has a wrong offset!");
static_assert(offsetof(StorageBlueprintLibrary_SetCachControl, CacheControl) == 0x000008, "Member 'StorageBlueprintLibrary_SetCachControl::CacheControl' has a wrong offset!");

// Function FirebaseFeatures.StorageBlueprintLibrary.SetContentDisposition
// 0x0018 (0x0018 - 0x0000)
struct StorageBlueprintLibrary_SetContentDisposition final
{
public:
	struct FFirebaseStorageMetadata               Metadata;                                          // 0x0000(0x0001)(Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Disposition;                                       // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StorageBlueprintLibrary_SetContentDisposition) == 0x000008, "Wrong alignment on StorageBlueprintLibrary_SetContentDisposition");
static_assert(sizeof(StorageBlueprintLibrary_SetContentDisposition) == 0x000018, "Wrong size on StorageBlueprintLibrary_SetContentDisposition");
static_assert(offsetof(StorageBlueprintLibrary_SetContentDisposition, Metadata) == 0x000000, "Member 'StorageBlueprintLibrary_SetContentDisposition::Metadata' has a wrong offset!");
static_assert(offsetof(StorageBlueprintLibrary_SetContentDisposition, Disposition) == 0x000008, "Member 'StorageBlueprintLibrary_SetContentDisposition::Disposition' has a wrong offset!");

// Function FirebaseFeatures.StorageBlueprintLibrary.SetContentEncoding
// 0x0018 (0x0018 - 0x0000)
struct StorageBlueprintLibrary_SetContentEncoding final
{
public:
	struct FFirebaseStorageMetadata               Metadata;                                          // 0x0000(0x0001)(Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Encoding;                                          // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StorageBlueprintLibrary_SetContentEncoding) == 0x000008, "Wrong alignment on StorageBlueprintLibrary_SetContentEncoding");
static_assert(sizeof(StorageBlueprintLibrary_SetContentEncoding) == 0x000018, "Wrong size on StorageBlueprintLibrary_SetContentEncoding");
static_assert(offsetof(StorageBlueprintLibrary_SetContentEncoding, Metadata) == 0x000000, "Member 'StorageBlueprintLibrary_SetContentEncoding::Metadata' has a wrong offset!");
static_assert(offsetof(StorageBlueprintLibrary_SetContentEncoding, Encoding) == 0x000008, "Member 'StorageBlueprintLibrary_SetContentEncoding::Encoding' has a wrong offset!");

// Function FirebaseFeatures.StorageBlueprintLibrary.SetContentLanguage
// 0x0018 (0x0018 - 0x0000)
struct StorageBlueprintLibrary_SetContentLanguage final
{
public:
	struct FFirebaseStorageMetadata               Metadata;                                          // 0x0000(0x0001)(Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Language;                                          // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StorageBlueprintLibrary_SetContentLanguage) == 0x000008, "Wrong alignment on StorageBlueprintLibrary_SetContentLanguage");
static_assert(sizeof(StorageBlueprintLibrary_SetContentLanguage) == 0x000018, "Wrong size on StorageBlueprintLibrary_SetContentLanguage");
static_assert(offsetof(StorageBlueprintLibrary_SetContentLanguage, Metadata) == 0x000000, "Member 'StorageBlueprintLibrary_SetContentLanguage::Metadata' has a wrong offset!");
static_assert(offsetof(StorageBlueprintLibrary_SetContentLanguage, Language) == 0x000008, "Member 'StorageBlueprintLibrary_SetContentLanguage::Language' has a wrong offset!");

// Function FirebaseFeatures.StorageBlueprintLibrary.SetContentType
// 0x0018 (0x0018 - 0x0000)
struct StorageBlueprintLibrary_SetContentType final
{
public:
	struct FFirebaseStorageMetadata               Metadata;                                          // 0x0000(0x0001)(Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Type;                                              // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StorageBlueprintLibrary_SetContentType) == 0x000008, "Wrong alignment on StorageBlueprintLibrary_SetContentType");
static_assert(sizeof(StorageBlueprintLibrary_SetContentType) == 0x000018, "Wrong size on StorageBlueprintLibrary_SetContentType");
static_assert(offsetof(StorageBlueprintLibrary_SetContentType, Metadata) == 0x000000, "Member 'StorageBlueprintLibrary_SetContentType::Metadata' has a wrong offset!");
static_assert(offsetof(StorageBlueprintLibrary_SetContentType, Type) == 0x000008, "Member 'StorageBlueprintLibrary_SetContentType::Type' has a wrong offset!");

// Function FirebaseFeatures.StorageBlueprintLibrary.TotalByteCount
// 0x0010 (0x0010 - 0x0000)
struct StorageBlueprintLibrary_TotalByteCount final
{
public:
	struct FFirebaseStorageController             Controller;                                        // 0x0000(0x0001)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StorageBlueprintLibrary_TotalByteCount) == 0x000008, "Wrong alignment on StorageBlueprintLibrary_TotalByteCount");
static_assert(sizeof(StorageBlueprintLibrary_TotalByteCount) == 0x000010, "Wrong size on StorageBlueprintLibrary_TotalByteCount");
static_assert(offsetof(StorageBlueprintLibrary_TotalByteCount, Controller) == 0x000000, "Member 'StorageBlueprintLibrary_TotalByteCount::Controller' has a wrong offset!");
static_assert(offsetof(StorageBlueprintLibrary_TotalByteCount, ReturnValue) == 0x000008, "Member 'StorageBlueprintLibrary_TotalByteCount::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.StorageDeleteProxy.Delete
// 0x0010 (0x0010 - 0x0000)
struct StorageDeleteProxy_Delete final
{
public:
	class UFirebaseStorageReference*              StorageReference;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStorageDeleteProxy*                    ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StorageDeleteProxy_Delete) == 0x000008, "Wrong alignment on StorageDeleteProxy_Delete");
static_assert(sizeof(StorageDeleteProxy_Delete) == 0x000010, "Wrong size on StorageDeleteProxy_Delete");
static_assert(offsetof(StorageDeleteProxy_Delete, StorageReference) == 0x000000, "Member 'StorageDeleteProxy_Delete::StorageReference' has a wrong offset!");
static_assert(offsetof(StorageDeleteProxy_Delete, ReturnValue) == 0x000008, "Member 'StorageDeleteProxy_Delete::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.StorageGetFileProxy.GetFile
// 0x0020 (0x0020 - 0x0000)
struct StorageGetFileProxy_GetFile final
{
public:
	class UFirebaseStorageReference*              StorageReference;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Path;                                              // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStorageGetFileProxy*                   ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StorageGetFileProxy_GetFile) == 0x000008, "Wrong alignment on StorageGetFileProxy_GetFile");
static_assert(sizeof(StorageGetFileProxy_GetFile) == 0x000020, "Wrong size on StorageGetFileProxy_GetFile");
static_assert(offsetof(StorageGetFileProxy_GetFile, StorageReference) == 0x000000, "Member 'StorageGetFileProxy_GetFile::StorageReference' has a wrong offset!");
static_assert(offsetof(StorageGetFileProxy_GetFile, Path) == 0x000008, "Member 'StorageGetFileProxy_GetFile::Path' has a wrong offset!");
static_assert(offsetof(StorageGetFileProxy_GetFile, ReturnValue) == 0x000018, "Member 'StorageGetFileProxy_GetFile::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.StorageGetBytesProxy.GetBytes
// 0x0018 (0x0018 - 0x0000)
struct StorageGetBytesProxy_GetBytes final
{
public:
	class UFirebaseStorageReference*              StorageReference;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         BufferSize;                                        // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStorageGetBytesProxy*                  ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StorageGetBytesProxy_GetBytes) == 0x000008, "Wrong alignment on StorageGetBytesProxy_GetBytes");
static_assert(sizeof(StorageGetBytesProxy_GetBytes) == 0x000018, "Wrong size on StorageGetBytesProxy_GetBytes");
static_assert(offsetof(StorageGetBytesProxy_GetBytes, StorageReference) == 0x000000, "Member 'StorageGetBytesProxy_GetBytes::StorageReference' has a wrong offset!");
static_assert(offsetof(StorageGetBytesProxy_GetBytes, BufferSize) == 0x000008, "Member 'StorageGetBytesProxy_GetBytes::BufferSize' has a wrong offset!");
static_assert(offsetof(StorageGetBytesProxy_GetBytes, ReturnValue) == 0x000010, "Member 'StorageGetBytesProxy_GetBytes::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.StorageGetDownloadUrlProxy.GetDownloadUrl
// 0x0010 (0x0010 - 0x0000)
struct StorageGetDownloadUrlProxy_GetDownloadUrl final
{
public:
	class UFirebaseStorageReference*              StorageReference;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStorageGetDownloadUrlProxy*            ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StorageGetDownloadUrlProxy_GetDownloadUrl) == 0x000008, "Wrong alignment on StorageGetDownloadUrlProxy_GetDownloadUrl");
static_assert(sizeof(StorageGetDownloadUrlProxy_GetDownloadUrl) == 0x000010, "Wrong size on StorageGetDownloadUrlProxy_GetDownloadUrl");
static_assert(offsetof(StorageGetDownloadUrlProxy_GetDownloadUrl, StorageReference) == 0x000000, "Member 'StorageGetDownloadUrlProxy_GetDownloadUrl::StorageReference' has a wrong offset!");
static_assert(offsetof(StorageGetDownloadUrlProxy_GetDownloadUrl, ReturnValue) == 0x000008, "Member 'StorageGetDownloadUrlProxy_GetDownloadUrl::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.StorageGetMetadataProxy.GetMetadata
// 0x0010 (0x0010 - 0x0000)
struct StorageGetMetadataProxy_GetMetadata final
{
public:
	class UFirebaseStorageReference*              StorageReference;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStorageGetMetadataProxy*               ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StorageGetMetadataProxy_GetMetadata) == 0x000008, "Wrong alignment on StorageGetMetadataProxy_GetMetadata");
static_assert(sizeof(StorageGetMetadataProxy_GetMetadata) == 0x000010, "Wrong size on StorageGetMetadataProxy_GetMetadata");
static_assert(offsetof(StorageGetMetadataProxy_GetMetadata, StorageReference) == 0x000000, "Member 'StorageGetMetadataProxy_GetMetadata::StorageReference' has a wrong offset!");
static_assert(offsetof(StorageGetMetadataProxy_GetMetadata, ReturnValue) == 0x000008, "Member 'StorageGetMetadataProxy_GetMetadata::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.StoragePutBytesProxy.PutBytes
// 0x0020 (0x0020 - 0x0000)
struct StoragePutBytesProxy_PutBytes final
{
public:
	class UFirebaseStorageReference*              StorageReference;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 Bytes;                                             // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class UStoragePutBytesProxy*                  ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StoragePutBytesProxy_PutBytes) == 0x000008, "Wrong alignment on StoragePutBytesProxy_PutBytes");
static_assert(sizeof(StoragePutBytesProxy_PutBytes) == 0x000020, "Wrong size on StoragePutBytesProxy_PutBytes");
static_assert(offsetof(StoragePutBytesProxy_PutBytes, StorageReference) == 0x000000, "Member 'StoragePutBytesProxy_PutBytes::StorageReference' has a wrong offset!");
static_assert(offsetof(StoragePutBytesProxy_PutBytes, Bytes) == 0x000008, "Member 'StoragePutBytesProxy_PutBytes::Bytes' has a wrong offset!");
static_assert(offsetof(StoragePutBytesProxy_PutBytes, ReturnValue) == 0x000018, "Member 'StoragePutBytesProxy_PutBytes::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.StoragePutBytesWithMetadataProxy.PutBytesWithMetadata
// 0x0028 (0x0028 - 0x0000)
struct StoragePutBytesWithMetadataProxy_PutBytesWithMetadata final
{
public:
	class UFirebaseStorageReference*              StorageReference;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 Bytes;                                             // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FFirebaseStorageMetadata               Metadata;                                          // 0x0018(0x0001)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStoragePutBytesWithMetadataProxy*      ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StoragePutBytesWithMetadataProxy_PutBytesWithMetadata) == 0x000008, "Wrong alignment on StoragePutBytesWithMetadataProxy_PutBytesWithMetadata");
static_assert(sizeof(StoragePutBytesWithMetadataProxy_PutBytesWithMetadata) == 0x000028, "Wrong size on StoragePutBytesWithMetadataProxy_PutBytesWithMetadata");
static_assert(offsetof(StoragePutBytesWithMetadataProxy_PutBytesWithMetadata, StorageReference) == 0x000000, "Member 'StoragePutBytesWithMetadataProxy_PutBytesWithMetadata::StorageReference' has a wrong offset!");
static_assert(offsetof(StoragePutBytesWithMetadataProxy_PutBytesWithMetadata, Bytes) == 0x000008, "Member 'StoragePutBytesWithMetadataProxy_PutBytesWithMetadata::Bytes' has a wrong offset!");
static_assert(offsetof(StoragePutBytesWithMetadataProxy_PutBytesWithMetadata, Metadata) == 0x000018, "Member 'StoragePutBytesWithMetadataProxy_PutBytesWithMetadata::Metadata' has a wrong offset!");
static_assert(offsetof(StoragePutBytesWithMetadataProxy_PutBytesWithMetadata, ReturnValue) == 0x000020, "Member 'StoragePutBytesWithMetadataProxy_PutBytesWithMetadata::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.StoragePutFileProxy.PutFile
// 0x0020 (0x0020 - 0x0000)
struct StoragePutFileProxy_PutFile final
{
public:
	class UFirebaseStorageReference*              StorageReference;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Path;                                              // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStoragePutFileProxy*                   ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StoragePutFileProxy_PutFile) == 0x000008, "Wrong alignment on StoragePutFileProxy_PutFile");
static_assert(sizeof(StoragePutFileProxy_PutFile) == 0x000020, "Wrong size on StoragePutFileProxy_PutFile");
static_assert(offsetof(StoragePutFileProxy_PutFile, StorageReference) == 0x000000, "Member 'StoragePutFileProxy_PutFile::StorageReference' has a wrong offset!");
static_assert(offsetof(StoragePutFileProxy_PutFile, Path) == 0x000008, "Member 'StoragePutFileProxy_PutFile::Path' has a wrong offset!");
static_assert(offsetof(StoragePutFileProxy_PutFile, ReturnValue) == 0x000018, "Member 'StoragePutFileProxy_PutFile::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.StoragePutFileWithMetadataProxy.PutFileUFS
// 0x0028 (0x0028 - 0x0000)
struct StoragePutFileWithMetadataProxy_PutFileUFS final
{
public:
	class UFirebaseStorageReference*              StorageReference;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Path;                                              // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFirebaseStorageMetadata               Metadata;                                          // 0x0018(0x0001)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStoragePutFileWithMetadataProxy*       ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StoragePutFileWithMetadataProxy_PutFileUFS) == 0x000008, "Wrong alignment on StoragePutFileWithMetadataProxy_PutFileUFS");
static_assert(sizeof(StoragePutFileWithMetadataProxy_PutFileUFS) == 0x000028, "Wrong size on StoragePutFileWithMetadataProxy_PutFileUFS");
static_assert(offsetof(StoragePutFileWithMetadataProxy_PutFileUFS, StorageReference) == 0x000000, "Member 'StoragePutFileWithMetadataProxy_PutFileUFS::StorageReference' has a wrong offset!");
static_assert(offsetof(StoragePutFileWithMetadataProxy_PutFileUFS, Path) == 0x000008, "Member 'StoragePutFileWithMetadataProxy_PutFileUFS::Path' has a wrong offset!");
static_assert(offsetof(StoragePutFileWithMetadataProxy_PutFileUFS, Metadata) == 0x000018, "Member 'StoragePutFileWithMetadataProxy_PutFileUFS::Metadata' has a wrong offset!");
static_assert(offsetof(StoragePutFileWithMetadataProxy_PutFileUFS, ReturnValue) == 0x000020, "Member 'StoragePutFileWithMetadataProxy_PutFileUFS::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.StoragePutFileWithMetadataProxy.PutFileWithMetadata
// 0x0028 (0x0028 - 0x0000)
struct StoragePutFileWithMetadataProxy_PutFileWithMetadata final
{
public:
	class UFirebaseStorageReference*              StorageReference;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Path;                                              // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFirebaseStorageMetadata               Metadata;                                          // 0x0018(0x0001)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStoragePutFileWithMetadataProxy*       ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StoragePutFileWithMetadataProxy_PutFileWithMetadata) == 0x000008, "Wrong alignment on StoragePutFileWithMetadataProxy_PutFileWithMetadata");
static_assert(sizeof(StoragePutFileWithMetadataProxy_PutFileWithMetadata) == 0x000028, "Wrong size on StoragePutFileWithMetadataProxy_PutFileWithMetadata");
static_assert(offsetof(StoragePutFileWithMetadataProxy_PutFileWithMetadata, StorageReference) == 0x000000, "Member 'StoragePutFileWithMetadataProxy_PutFileWithMetadata::StorageReference' has a wrong offset!");
static_assert(offsetof(StoragePutFileWithMetadataProxy_PutFileWithMetadata, Path) == 0x000008, "Member 'StoragePutFileWithMetadataProxy_PutFileWithMetadata::Path' has a wrong offset!");
static_assert(offsetof(StoragePutFileWithMetadataProxy_PutFileWithMetadata, Metadata) == 0x000018, "Member 'StoragePutFileWithMetadataProxy_PutFileWithMetadata::Metadata' has a wrong offset!");
static_assert(offsetof(StoragePutFileWithMetadataProxy_PutFileWithMetadata, ReturnValue) == 0x000020, "Member 'StoragePutFileWithMetadataProxy_PutFileWithMetadata::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseStorageReference.GetBucket
// 0x0010 (0x0010 - 0x0000)
struct FirebaseStorageReference_GetBucket final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseStorageReference_GetBucket) == 0x000008, "Wrong alignment on FirebaseStorageReference_GetBucket");
static_assert(sizeof(FirebaseStorageReference_GetBucket) == 0x000010, "Wrong size on FirebaseStorageReference_GetBucket");
static_assert(offsetof(FirebaseStorageReference_GetBucket, ReturnValue) == 0x000000, "Member 'FirebaseStorageReference_GetBucket::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseStorageReference.GetFullPath
// 0x0010 (0x0010 - 0x0000)
struct FirebaseStorageReference_GetFullPath final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseStorageReference_GetFullPath) == 0x000008, "Wrong alignment on FirebaseStorageReference_GetFullPath");
static_assert(sizeof(FirebaseStorageReference_GetFullPath) == 0x000010, "Wrong size on FirebaseStorageReference_GetFullPath");
static_assert(offsetof(FirebaseStorageReference_GetFullPath, ReturnValue) == 0x000000, "Member 'FirebaseStorageReference_GetFullPath::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseStorageReference.GetName
// 0x0010 (0x0010 - 0x0000)
struct FirebaseStorageReference_GetName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseStorageReference_GetName) == 0x000008, "Wrong alignment on FirebaseStorageReference_GetName");
static_assert(sizeof(FirebaseStorageReference_GetName) == 0x000010, "Wrong size on FirebaseStorageReference_GetName");
static_assert(offsetof(FirebaseStorageReference_GetName, ReturnValue) == 0x000000, "Member 'FirebaseStorageReference_GetName::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseStorageReference.GetParent
// 0x0008 (0x0008 - 0x0000)
struct FirebaseStorageReference_GetParent final
{
public:
	class UFirebaseStorageReference*              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseStorageReference_GetParent) == 0x000008, "Wrong alignment on FirebaseStorageReference_GetParent");
static_assert(sizeof(FirebaseStorageReference_GetParent) == 0x000008, "Wrong size on FirebaseStorageReference_GetParent");
static_assert(offsetof(FirebaseStorageReference_GetParent, ReturnValue) == 0x000000, "Member 'FirebaseStorageReference_GetParent::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseStorageReference.Child
// 0x0018 (0x0018 - 0x0000)
struct FirebaseStorageReference_Child final
{
public:
	class FString                                 Path;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFirebaseStorageReference*              ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseStorageReference_Child) == 0x000008, "Wrong alignment on FirebaseStorageReference_Child");
static_assert(sizeof(FirebaseStorageReference_Child) == 0x000018, "Wrong size on FirebaseStorageReference_Child");
static_assert(offsetof(FirebaseStorageReference_Child, Path) == 0x000000, "Member 'FirebaseStorageReference_Child::Path' has a wrong offset!");
static_assert(offsetof(FirebaseStorageReference_Child, ReturnValue) == 0x000010, "Member 'FirebaseStorageReference_Child::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.FirebaseStorageReference.IsValid
// 0x0001 (0x0001 - 0x0000)
struct FirebaseStorageReference_IsValid final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FirebaseStorageReference_IsValid) == 0x000001, "Wrong alignment on FirebaseStorageReference_IsValid");
static_assert(sizeof(FirebaseStorageReference_IsValid) == 0x000001, "Wrong size on FirebaseStorageReference_IsValid");
static_assert(offsetof(FirebaseStorageReference_IsValid, ReturnValue) == 0x000000, "Member 'FirebaseStorageReference_IsValid::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.UpdateEmailProxy.UpdateEmail
// 0x0020 (0x0020 - 0x0000)
struct UpdateEmailProxy_UpdateEmail final
{
public:
	const class UUser*                            User;                                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Email;                                             // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUpdateEmailProxy*                      ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UpdateEmailProxy_UpdateEmail) == 0x000008, "Wrong alignment on UpdateEmailProxy_UpdateEmail");
static_assert(sizeof(UpdateEmailProxy_UpdateEmail) == 0x000020, "Wrong size on UpdateEmailProxy_UpdateEmail");
static_assert(offsetof(UpdateEmailProxy_UpdateEmail, User) == 0x000000, "Member 'UpdateEmailProxy_UpdateEmail::User' has a wrong offset!");
static_assert(offsetof(UpdateEmailProxy_UpdateEmail, Email) == 0x000008, "Member 'UpdateEmailProxy_UpdateEmail::Email' has a wrong offset!");
static_assert(offsetof(UpdateEmailProxy_UpdateEmail, ReturnValue) == 0x000018, "Member 'UpdateEmailProxy_UpdateEmail::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.ReauthenticateProxy.Reauthenticate
// 0x0018 (0x0018 - 0x0000)
struct ReauthenticateProxy_Reauthenticate final
{
public:
	const class UUser*                            User;                                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCredential                            Credential;                                        // 0x0008(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UReauthenticateProxy*                   ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ReauthenticateProxy_Reauthenticate) == 0x000008, "Wrong alignment on ReauthenticateProxy_Reauthenticate");
static_assert(sizeof(ReauthenticateProxy_Reauthenticate) == 0x000018, "Wrong size on ReauthenticateProxy_Reauthenticate");
static_assert(offsetof(ReauthenticateProxy_Reauthenticate, User) == 0x000000, "Member 'ReauthenticateProxy_Reauthenticate::User' has a wrong offset!");
static_assert(offsetof(ReauthenticateProxy_Reauthenticate, Credential) == 0x000008, "Member 'ReauthenticateProxy_Reauthenticate::Credential' has a wrong offset!");
static_assert(offsetof(ReauthenticateProxy_Reauthenticate, ReturnValue) == 0x000010, "Member 'ReauthenticateProxy_Reauthenticate::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.ReauthenticateWithProviderProxy.ReauthenticateWithProvider
// 0x0020 (0x0020 - 0x0000)
struct ReauthenticateWithProviderProxy_ReauthenticateWithProvider final
{
public:
	const class UUser*                            User;                                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFederatedAuthProvider                 Provider;                                          // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UReauthenticateWithProviderProxy*       ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ReauthenticateWithProviderProxy_ReauthenticateWithProvider) == 0x000008, "Wrong alignment on ReauthenticateWithProviderProxy_ReauthenticateWithProvider");
static_assert(sizeof(ReauthenticateWithProviderProxy_ReauthenticateWithProvider) == 0x000020, "Wrong size on ReauthenticateWithProviderProxy_ReauthenticateWithProvider");
static_assert(offsetof(ReauthenticateWithProviderProxy_ReauthenticateWithProvider, User) == 0x000000, "Member 'ReauthenticateWithProviderProxy_ReauthenticateWithProvider::User' has a wrong offset!");
static_assert(offsetof(ReauthenticateWithProviderProxy_ReauthenticateWithProvider, Provider) == 0x000008, "Member 'ReauthenticateWithProviderProxy_ReauthenticateWithProvider::Provider' has a wrong offset!");
static_assert(offsetof(ReauthenticateWithProviderProxy_ReauthenticateWithProvider, ReturnValue) == 0x000018, "Member 'ReauthenticateWithProviderProxy_ReauthenticateWithProvider::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.UpdateUserProfileProxy.UpdateUserProfile
// 0x0040 (0x0040 - 0x0000)
struct UpdateUserProfileProxy_UpdateUserProfile final
{
public:
	const class UUser*                            User;                                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUserProfile                           Profile;                                           // 0x0008(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UUpdateUserProfileProxy*                ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UpdateUserProfileProxy_UpdateUserProfile) == 0x000008, "Wrong alignment on UpdateUserProfileProxy_UpdateUserProfile");
static_assert(sizeof(UpdateUserProfileProxy_UpdateUserProfile) == 0x000040, "Wrong size on UpdateUserProfileProxy_UpdateUserProfile");
static_assert(offsetof(UpdateUserProfileProxy_UpdateUserProfile, User) == 0x000000, "Member 'UpdateUserProfileProxy_UpdateUserProfile::User' has a wrong offset!");
static_assert(offsetof(UpdateUserProfileProxy_UpdateUserProfile, Profile) == 0x000008, "Member 'UpdateUserProfileProxy_UpdateUserProfile::Profile' has a wrong offset!");
static_assert(offsetof(UpdateUserProfileProxy_UpdateUserProfile, ReturnValue) == 0x000038, "Member 'UpdateUserProfileProxy_UpdateUserProfile::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.LinkWithCredentialProxy.LinkWithCredential
// 0x0018 (0x0018 - 0x0000)
struct LinkWithCredentialProxy_LinkWithCredential final
{
public:
	const class UUser*                            User;                                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCredential                            Credential;                                        // 0x0008(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class ULinkWithCredentialProxy*               ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LinkWithCredentialProxy_LinkWithCredential) == 0x000008, "Wrong alignment on LinkWithCredentialProxy_LinkWithCredential");
static_assert(sizeof(LinkWithCredentialProxy_LinkWithCredential) == 0x000018, "Wrong size on LinkWithCredentialProxy_LinkWithCredential");
static_assert(offsetof(LinkWithCredentialProxy_LinkWithCredential, User) == 0x000000, "Member 'LinkWithCredentialProxy_LinkWithCredential::User' has a wrong offset!");
static_assert(offsetof(LinkWithCredentialProxy_LinkWithCredential, Credential) == 0x000008, "Member 'LinkWithCredentialProxy_LinkWithCredential::Credential' has a wrong offset!");
static_assert(offsetof(LinkWithCredentialProxy_LinkWithCredential, ReturnValue) == 0x000010, "Member 'LinkWithCredentialProxy_LinkWithCredential::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.LinkAndRetrieveDataWithCredentialProxy.LinkAndRetrieveDataWithCredential
// 0x0018 (0x0018 - 0x0000)
struct LinkAndRetrieveDataWithCredentialProxy_LinkAndRetrieveDataWithCredential final
{
public:
	const class UUser*                            User;                                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCredential                            Credential;                                        // 0x0008(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class ULinkAndRetrieveDataWithCredentialProxy* ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LinkAndRetrieveDataWithCredentialProxy_LinkAndRetrieveDataWithCredential) == 0x000008, "Wrong alignment on LinkAndRetrieveDataWithCredentialProxy_LinkAndRetrieveDataWithCredential");
static_assert(sizeof(LinkAndRetrieveDataWithCredentialProxy_LinkAndRetrieveDataWithCredential) == 0x000018, "Wrong size on LinkAndRetrieveDataWithCredentialProxy_LinkAndRetrieveDataWithCredential");
static_assert(offsetof(LinkAndRetrieveDataWithCredentialProxy_LinkAndRetrieveDataWithCredential, User) == 0x000000, "Member 'LinkAndRetrieveDataWithCredentialProxy_LinkAndRetrieveDataWithCredential::User' has a wrong offset!");
static_assert(offsetof(LinkAndRetrieveDataWithCredentialProxy_LinkAndRetrieveDataWithCredential, Credential) == 0x000008, "Member 'LinkAndRetrieveDataWithCredentialProxy_LinkAndRetrieveDataWithCredential::Credential' has a wrong offset!");
static_assert(offsetof(LinkAndRetrieveDataWithCredentialProxy_LinkAndRetrieveDataWithCredential, ReturnValue) == 0x000010, "Member 'LinkAndRetrieveDataWithCredentialProxy_LinkAndRetrieveDataWithCredential::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.LinkWithProviderProxy.LinkWithProvider
// 0x0020 (0x0020 - 0x0000)
struct LinkWithProviderProxy_LinkWithProvider final
{
public:
	const class UUser*                            User;                                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFederatedAuthProvider                 Provider;                                          // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class ULinkWithProviderProxy*                 ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LinkWithProviderProxy_LinkWithProvider) == 0x000008, "Wrong alignment on LinkWithProviderProxy_LinkWithProvider");
static_assert(sizeof(LinkWithProviderProxy_LinkWithProvider) == 0x000020, "Wrong size on LinkWithProviderProxy_LinkWithProvider");
static_assert(offsetof(LinkWithProviderProxy_LinkWithProvider, User) == 0x000000, "Member 'LinkWithProviderProxy_LinkWithProvider::User' has a wrong offset!");
static_assert(offsetof(LinkWithProviderProxy_LinkWithProvider, Provider) == 0x000008, "Member 'LinkWithProviderProxy_LinkWithProvider::Provider' has a wrong offset!");
static_assert(offsetof(LinkWithProviderProxy_LinkWithProvider, ReturnValue) == 0x000018, "Member 'LinkWithProviderProxy_LinkWithProvider::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.UnlinkProxy.Unlink
// 0x0020 (0x0020 - 0x0000)
struct UnlinkProxy_Unlink final
{
public:
	const class UUser*                            User;                                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Provider;                                          // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUnlinkProxy*                           ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnlinkProxy_Unlink) == 0x000008, "Wrong alignment on UnlinkProxy_Unlink");
static_assert(sizeof(UnlinkProxy_Unlink) == 0x000020, "Wrong size on UnlinkProxy_Unlink");
static_assert(offsetof(UnlinkProxy_Unlink, User) == 0x000000, "Member 'UnlinkProxy_Unlink::User' has a wrong offset!");
static_assert(offsetof(UnlinkProxy_Unlink, Provider) == 0x000008, "Member 'UnlinkProxy_Unlink::Provider' has a wrong offset!");
static_assert(offsetof(UnlinkProxy_Unlink, ReturnValue) == 0x000018, "Member 'UnlinkProxy_Unlink::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.ReloadProxy.Reload
// 0x0010 (0x0010 - 0x0000)
struct ReloadProxy_Reload final
{
public:
	const class UUser*                            User;                                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReloadProxy*                           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ReloadProxy_Reload) == 0x000008, "Wrong alignment on ReloadProxy_Reload");
static_assert(sizeof(ReloadProxy_Reload) == 0x000010, "Wrong size on ReloadProxy_Reload");
static_assert(offsetof(ReloadProxy_Reload, User) == 0x000000, "Member 'ReloadProxy_Reload::User' has a wrong offset!");
static_assert(offsetof(ReloadProxy_Reload, ReturnValue) == 0x000008, "Member 'ReloadProxy_Reload::ReturnValue' has a wrong offset!");

// Function FirebaseFeatures.DeleteProxy.Delete
// 0x0010 (0x0010 - 0x0000)
struct DeleteProxy_Delete final
{
public:
	const class UUser*                            User;                                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDeleteProxy*                           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DeleteProxy_Delete) == 0x000008, "Wrong alignment on DeleteProxy_Delete");
static_assert(sizeof(DeleteProxy_Delete) == 0x000010, "Wrong size on DeleteProxy_Delete");
static_assert(offsetof(DeleteProxy_Delete, User) == 0x000000, "Member 'DeleteProxy_Delete::User' has a wrong offset!");
static_assert(offsetof(DeleteProxy_Delete, ReturnValue) == 0x000008, "Member 'DeleteProxy_Delete::ReturnValue' has a wrong offset!");

}

