#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Explosive_Item_InHand

#include "Basic.hpp"

#include "Explosive_Item_InHand_classes.hpp"
#include "Explosive_Item_InHand_parameters.hpp"


namespace SDK
{

// Function Explosive_Item_InHand.Explosive_Item_InHand_C.BndEvt__Explosive_Item_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AExplosive_Item_InHand_C::BndEvt__Explosive_Item_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Explosive_Item_InHand_C", "BndEvt__Explosive_Item_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");

	Params::Explosive_Item_InHand_C_BndEvt__Explosive_Item_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Explosive_Item_InHand.Explosive_Item_InHand_C.CollisionThrow
// (BlueprintCallable, BlueprintEvent)

void AExplosive_Item_InHand_C::CollisionThrow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Explosive_Item_InHand_C", "CollisionThrow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Explosive_Item_InHand.Explosive_Item_InHand_C.CreateDecalLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Start                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Decal                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AExplosive_Item_InHand_C::CreateDecalLocation(const struct FVector& Start, class AActor** Param_Decal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Explosive_Item_InHand_C", "CreateDecalLocation");

	Params::Explosive_Item_InHand_C_CreateDecalLocation Parms{};

	Parms.Start = std::move(Start);

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Decal != nullptr)
		*Param_Decal = Parms.Param_Decal;
}


// Function Explosive_Item_InHand.Explosive_Item_InHand_C.DestroyEvent
// (BlueprintCallable, BlueprintEvent)

void AExplosive_Item_InHand_C::DestroyEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Explosive_Item_InHand_C", "DestroyEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Explosive_Item_InHand.Explosive_Item_InHand_C.DestroyLevers
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void AExplosive_Item_InHand_C::DestroyLevers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Explosive_Item_InHand_C", "DestroyLevers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Explosive_Item_InHand.Explosive_Item_InHand_C.DestroySmoke
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DestroyedActor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AExplosive_Item_InHand_C::DestroySmoke(class AActor* DestroyedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Explosive_Item_InHand_C", "DestroySmoke");

	Params::Explosive_Item_InHand_C_DestroySmoke Parms{};

	Parms.DestroyedActor = DestroyedActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Explosive_Item_InHand.Explosive_Item_InHand_C.Detonate
// (BlueprintCallable, BlueprintEvent)

void AExplosive_Item_InHand_C::Detonate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Explosive_Item_InHand_C", "Detonate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Explosive_Item_InHand.Explosive_Item_InHand_C.DetonateWithoutTimer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Timer                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AExplosive_Item_InHand_C::DetonateWithoutTimer(double Timer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Explosive_Item_InHand_C", "DetonateWithoutTimer");

	Params::Explosive_Item_InHand_C_DetonateWithoutTimer Parms{};

	Parms.Timer = Timer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Explosive_Item_InHand.Explosive_Item_InHand_C.ED_Detonate__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AExplosive_Item_InHand_C::ED_Detonate__DelegateSignature(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Explosive_Item_InHand_C", "ED_Detonate__DelegateSignature");

	Params::Explosive_Item_InHand_C_ED_Detonate__DelegateSignature Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Explosive_Item_InHand.Explosive_Item_InHand_C.ExecuteUbergraph_Explosive_Item_InHand
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AExplosive_Item_InHand_C::ExecuteUbergraph_Explosive_Item_InHand(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Explosive_Item_InHand_C", "ExecuteUbergraph_Explosive_Item_InHand");

	Params::Explosive_Item_InHand_C_ExecuteUbergraph_Explosive_Item_InHand Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Explosive_Item_InHand.Explosive_Item_InHand_C.ExplosionDecal_Multicast
// (BlueprintCallable, BlueprintEvent)

void AExplosive_Item_InHand_C::ExplosionDecal_Multicast()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Explosive_Item_InHand_C", "ExplosionDecal_Multicast");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Explosive_Item_InHand.Explosive_Item_InHand_C.ExplosionServer
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Spawn_Transform_Location                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Param_Class                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       SpawnTransform                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          VelocityGrenade                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AExplosive_Item_InHand_C::ExplosionServer(const struct FVector& Spawn_Transform_Location, class UClass* Param_Class, class AActor* Target, const struct FTransform& SpawnTransform, const struct FVector& VelocityGrenade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Explosive_Item_InHand_C", "ExplosionServer");

	Params::Explosive_Item_InHand_C_ExplosionServer Parms{};

	Parms.Spawn_Transform_Location = std::move(Spawn_Transform_Location);
	Parms.Param_Class = Param_Class;
	Parms.Target = Target;
	Parms.SpawnTransform = std::move(SpawnTransform);
	Parms.VelocityGrenade = std::move(VelocityGrenade);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Explosive_Item_InHand.Explosive_Item_InHand_C.ExplosionWaterServer
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Param_Class                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Spawn_Transform_Location                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Spawn_Transform_Rotation                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AExplosive_Item_InHand_C::ExplosionWaterServer(class UClass* Param_Class, const struct FVector& Spawn_Transform_Location, const struct FRotator& Spawn_Transform_Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Explosive_Item_InHand_C", "ExplosionWaterServer");

	Params::Explosive_Item_InHand_C_ExplosionWaterServer Parms{};

	Parms.Param_Class = Param_Class;
	Parms.Spawn_Transform_Location = std::move(Spawn_Transform_Location);
	Parms.Spawn_Transform_Rotation = std::move(Spawn_Transform_Rotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Explosive_Item_InHand.Explosive_Item_InHand_C.GrenadeThrowBeforeHand
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsActivate                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  NewTime                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AExplosive_Item_InHand_C::GrenadeThrowBeforeHand(bool IsActivate, double NewTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Explosive_Item_InHand_C", "GrenadeThrowBeforeHand");

	Params::Explosive_Item_InHand_C_GrenadeThrowBeforeHand Parms{};

	Parms.IsActivate = IsActivate;
	Parms.NewTime = NewTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Explosive_Item_InHand.Explosive_Item_InHand_C.Multicast_SimulatePhysics
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void AExplosive_Item_InHand_C::Multicast_SimulatePhysics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Explosive_Item_InHand_C", "Multicast_SimulatePhysics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Explosive_Item_InHand.Explosive_Item_InHand_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AExplosive_Item_InHand_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Explosive_Item_InHand_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Explosive_Item_InHand.Explosive_Item_InHand_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AExplosive_Item_InHand_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Explosive_Item_InHand_C", "ReceiveTick");

	Params::Explosive_Item_InHand_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Explosive_Item_InHand.Explosive_Item_InHand_C.ScaleDecal
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Param_Decal                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AExplosive_Item_InHand_C::ScaleDecal(class AActor* Param_Decal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Explosive_Item_InHand_C", "ScaleDecal");

	Params::Explosive_Item_InHand_C_ScaleDecal Parms{};

	Parms.Param_Decal = Param_Decal;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Explosive_Item_InHand.Explosive_Item_InHand_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AExplosive_Item_InHand_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Explosive_Item_InHand_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

