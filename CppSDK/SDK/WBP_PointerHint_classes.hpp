#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PointerHint

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "CardinalDirections_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_PointerHint.WBP_PointerHint_C
// 0x0110 (0x0390 - 0x0280)
class UWBP_PointerHint_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       PointLoop_Bottom;                                  // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PointLoop_Top;                                     // 0x0290(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PointLoop_Right;                                   // 0x0298(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PointLoop_Left;                                    // 0x02A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Show_Anim;                                         // 0x02A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox;                                     // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Left;                                        // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Right;                                       // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox;                                           // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_BottomPointer;                             // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_LeftPointer;                               // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_RightPointer;                              // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_TopPointer;                                // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_Hint;                                    // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          bOrientRight;                                      // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   HintText;                                          // 0x0300(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	bool                                          Showed;                                            // 0x0318(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_319[0x7];                                      // 0x0319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperSprite*                           Icon;                                              // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bImageValid;                                       // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_329[0x7];                                      // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                PointedWidget;                                     // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ECardinalDirections                           Arrow_Orientation;                                 // 0x0338(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<ECardinalDirections, class USizeBox*>    OrientationWidgets;                                // 0x0340(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

public:
	void ExecuteUbergraph_WBP_PointerHint(int32 EntryPoint);
	void Finished_13B85A9E48C9E52290F3249E5C4022F5();
	void Finished_4372C10B429BF486A81AA5856C9A6FAA();
	void GetPointedWidget(class UWidget** Param_PointedWidget);
	void GetShowed(bool* Param_Showed);
	void Init();
	void InstantHide();
	void OnInitialized();
	void PreConstruct(bool IsDesignTime);
	void ReInit(const struct FS_PointerHintInfo& PointerInfo);
	void SetDirectionMap();
	void SetImage();
	void SetOrientation();
	void SetPosition(class UWidget* WidgetRef, const struct FS_PointerHintInfo& Info, const struct FVector2D& Offeset);
	void Show(bool bShow, bool bWithAnim, class UWidget* WidgetRef, const struct FS_PointerHintInfo& Info, const struct FVector2D& Offeset);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_PointerHint_C">();
	}
	static class UWBP_PointerHint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_PointerHint_C>();
	}
};
static_assert(alignof(UWBP_PointerHint_C) == 0x000008, "Wrong alignment on UWBP_PointerHint_C");
static_assert(sizeof(UWBP_PointerHint_C) == 0x000390, "Wrong size on UWBP_PointerHint_C");
static_assert(offsetof(UWBP_PointerHint_C, UberGraphFrame) == 0x000280, "Member 'UWBP_PointerHint_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_PointerHint_C, PointLoop_Bottom) == 0x000288, "Member 'UWBP_PointerHint_C::PointLoop_Bottom' has a wrong offset!");
static_assert(offsetof(UWBP_PointerHint_C, PointLoop_Top) == 0x000290, "Member 'UWBP_PointerHint_C::PointLoop_Top' has a wrong offset!");
static_assert(offsetof(UWBP_PointerHint_C, PointLoop_Right) == 0x000298, "Member 'UWBP_PointerHint_C::PointLoop_Right' has a wrong offset!");
static_assert(offsetof(UWBP_PointerHint_C, PointLoop_Left) == 0x0002A0, "Member 'UWBP_PointerHint_C::PointLoop_Left' has a wrong offset!");
static_assert(offsetof(UWBP_PointerHint_C, Show_Anim) == 0x0002A8, "Member 'UWBP_PointerHint_C::Show_Anim' has a wrong offset!");
static_assert(offsetof(UWBP_PointerHint_C, HorizontalBox) == 0x0002B0, "Member 'UWBP_PointerHint_C::HorizontalBox' has a wrong offset!");
static_assert(offsetof(UWBP_PointerHint_C, Image_Left) == 0x0002B8, "Member 'UWBP_PointerHint_C::Image_Left' has a wrong offset!");
static_assert(offsetof(UWBP_PointerHint_C, Image_Right) == 0x0002C0, "Member 'UWBP_PointerHint_C::Image_Right' has a wrong offset!");
static_assert(offsetof(UWBP_PointerHint_C, SizeBox) == 0x0002C8, "Member 'UWBP_PointerHint_C::SizeBox' has a wrong offset!");
static_assert(offsetof(UWBP_PointerHint_C, SizeBox_BottomPointer) == 0x0002D0, "Member 'UWBP_PointerHint_C::SizeBox_BottomPointer' has a wrong offset!");
static_assert(offsetof(UWBP_PointerHint_C, SizeBox_LeftPointer) == 0x0002D8, "Member 'UWBP_PointerHint_C::SizeBox_LeftPointer' has a wrong offset!");
static_assert(offsetof(UWBP_PointerHint_C, SizeBox_RightPointer) == 0x0002E0, "Member 'UWBP_PointerHint_C::SizeBox_RightPointer' has a wrong offset!");
static_assert(offsetof(UWBP_PointerHint_C, SizeBox_TopPointer) == 0x0002E8, "Member 'UWBP_PointerHint_C::SizeBox_TopPointer' has a wrong offset!");
static_assert(offsetof(UWBP_PointerHint_C, TextBlock_Hint) == 0x0002F0, "Member 'UWBP_PointerHint_C::TextBlock_Hint' has a wrong offset!");
static_assert(offsetof(UWBP_PointerHint_C, bOrientRight) == 0x0002F8, "Member 'UWBP_PointerHint_C::bOrientRight' has a wrong offset!");
static_assert(offsetof(UWBP_PointerHint_C, HintText) == 0x000300, "Member 'UWBP_PointerHint_C::HintText' has a wrong offset!");
static_assert(offsetof(UWBP_PointerHint_C, Showed) == 0x000318, "Member 'UWBP_PointerHint_C::Showed' has a wrong offset!");
static_assert(offsetof(UWBP_PointerHint_C, Icon) == 0x000320, "Member 'UWBP_PointerHint_C::Icon' has a wrong offset!");
static_assert(offsetof(UWBP_PointerHint_C, bImageValid) == 0x000328, "Member 'UWBP_PointerHint_C::bImageValid' has a wrong offset!");
static_assert(offsetof(UWBP_PointerHint_C, PointedWidget) == 0x000330, "Member 'UWBP_PointerHint_C::PointedWidget' has a wrong offset!");
static_assert(offsetof(UWBP_PointerHint_C, Arrow_Orientation) == 0x000338, "Member 'UWBP_PointerHint_C::Arrow_Orientation' has a wrong offset!");
static_assert(offsetof(UWBP_PointerHint_C, OrientationWidgets) == 0x000340, "Member 'UWBP_PointerHint_C::OrientationWidgets' has a wrong offset!");

}

