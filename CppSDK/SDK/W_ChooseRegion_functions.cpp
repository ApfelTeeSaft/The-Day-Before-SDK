#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ChooseRegion

#include "Basic.hpp"

#include "W_ChooseRegion_classes.hpp"
#include "W_ChooseRegion_parameters.hpp"


namespace SDK
{

// Function W_ChooseRegion.W_ChooseRegion_C.BndEvt__BackButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UW_ChooseRegion_C::BndEvt__BackButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChooseRegion_C", "BndEvt__BackButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ChooseRegion.W_ChooseRegion_C.BndEvt__C_ENTER_Button_K2Node_ComponentBoundEvent_3_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UW_ChooseRegion_C::BndEvt__C_ENTER_Button_K2Node_ComponentBoundEvent_3_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChooseRegion_C", "BndEvt__C_ENTER_Button_K2Node_ComponentBoundEvent_3_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ChooseRegion.W_ChooseRegion_C.BndEvt__C_ESC_Button_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UW_ChooseRegion_C::BndEvt__C_ESC_Button_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChooseRegion_C", "BndEvt__C_ESC_Button_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ChooseRegion.W_ChooseRegion_C.BndEvt__SelectButton_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UW_ChooseRegion_C::BndEvt__SelectButton_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChooseRegion_C", "BndEvt__SelectButton_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ChooseRegion.W_ChooseRegion_C.ChooseRegion
// (BlueprintCallable, BlueprintEvent)

void UW_ChooseRegion_C::ChooseRegion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChooseRegion_C", "ChooseRegion");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ChooseRegion.W_ChooseRegion_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_ChooseRegion_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChooseRegion_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ChooseRegion.W_ChooseRegion_C.ExecuteUbergraph_W_ChooseRegion
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ChooseRegion_C::ExecuteUbergraph_W_ChooseRegion(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChooseRegion_C", "ExecuteUbergraph_W_ChooseRegion");

	Params::W_ChooseRegion_C_ExecuteUbergraph_W_ChooseRegion Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ChooseRegion.W_ChooseRegion_C.GetRegionEntryByID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UW_RegionEntry_C*                 Entry                                                  (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_ChooseRegion_C::GetRegionEntryByID(int32 ID, class UW_RegionEntry_C** Entry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChooseRegion_C", "GetRegionEntryByID");

	Params::W_ChooseRegion_C_GetRegionEntryByID Parms{};

	Parms.ID = ID;

	UObject::ProcessEvent(Func, &Parms);

	if (Entry != nullptr)
		*Entry = Parms.Entry;
}


// Function W_ChooseRegion.W_ChooseRegion_C.Hide
// (BlueprintCallable, BlueprintEvent)

void UW_ChooseRegion_C::Hide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChooseRegion_C", "Hide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ChooseRegion.W_ChooseRegion_C.OnChooseRegion
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Region                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ChooseRegion_C::OnChooseRegion(class FName Region)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChooseRegion_C", "OnChooseRegion");

	Params::W_ChooseRegion_C_OnChooseRegion Parms{};

	Parms.Region = Region;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ChooseRegion.W_ChooseRegion_C.OnKeyDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FKeyEvent                        InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UW_ChooseRegion_C::OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChooseRegion_C", "OnKeyDown");

	Params::W_ChooseRegion_C_OnKeyDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_ChooseRegion.W_ChooseRegion_C.OnNetworkError
// (BlueprintCallable, BlueprintEvent)

void UW_ChooseRegion_C::OnNetworkError()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChooseRegion_C", "OnNetworkError");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ChooseRegion.W_ChooseRegion_C.OnRegionChange2
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_RegionEntry_C*                 Region                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_ChooseRegion_C::OnRegionChange2(class UW_RegionEntry_C* Region)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChooseRegion_C", "OnRegionChange2");

	Params::W_ChooseRegion_C_OnRegionChange2 Parms{};

	Parms.Region = Region;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ChooseRegion.W_ChooseRegion_C.Reset
// (BlueprintCallable, BlueprintEvent)

void UW_ChooseRegion_C::Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChooseRegion_C", "Reset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ChooseRegion.W_ChooseRegion_C.SetRegion
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_RegionEntry_C*                 Entry                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_ChooseRegion_C::SetRegion(class UW_RegionEntry_C* Entry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChooseRegion_C", "SetRegion");

	Params::W_ChooseRegion_C_SetRegion Parms{};

	Parms.Entry = Entry;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ChooseRegion.W_ChooseRegion_C.SetText
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param_RegionName                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UW_ChooseRegion_C::SetText(const class FString& Param_RegionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChooseRegion_C", "SetText");

	Params::W_ChooseRegion_C_SetText Parms{};

	Parms.Param_RegionName = std::move(Param_RegionName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ChooseRegion.W_ChooseRegion_C.Show
// (BlueprintCallable, BlueprintEvent)

void UW_ChooseRegion_C::Show()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChooseRegion_C", "Show");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ChooseRegion.W_ChooseRegion_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ChooseRegion_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChooseRegion_C", "Tick");

	Params::W_ChooseRegion_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}

}

