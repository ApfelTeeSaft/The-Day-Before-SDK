#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TS_Functions

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "S_SimplifiedHitInfo_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function TS_Functions.TS_Functions_C.BlendToCinematicCamera
// 0x0070 (0x0070 - 0x0000)
struct TS_Functions_C_BlendToCinematicCamera final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 NewViewTarget;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        BlendTime;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewTargetBlendFunction                      BlendFunc;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        BlendExp;                                          // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UATPCCameraFOVObject*                   CallFunc_GetCameraFOVObject_ReturnValue;           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USurvCameraFOVObject*                   K2Node_DynamicCast_AsSurv_Camera_FOVObject;        // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetViewTargetWithBlend_BlendTime_ImplicitCast; // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetViewTargetWithBlend_BlendExp_ImplicitCast; // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TS_Functions_C_BlendToCinematicCamera) == 0x000008, "Wrong alignment on TS_Functions_C_BlendToCinematicCamera");
static_assert(sizeof(TS_Functions_C_BlendToCinematicCamera) == 0x000070, "Wrong size on TS_Functions_C_BlendToCinematicCamera");
static_assert(offsetof(TS_Functions_C_BlendToCinematicCamera, WorldContextObject) == 0x000000, "Member 'TS_Functions_C_BlendToCinematicCamera::WorldContextObject' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_BlendToCinematicCamera, NewViewTarget) == 0x000008, "Member 'TS_Functions_C_BlendToCinematicCamera::NewViewTarget' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_BlendToCinematicCamera, BlendTime) == 0x000010, "Member 'TS_Functions_C_BlendToCinematicCamera::BlendTime' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_BlendToCinematicCamera, BlendFunc) == 0x000018, "Member 'TS_Functions_C_BlendToCinematicCamera::BlendFunc' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_BlendToCinematicCamera, BlendExp) == 0x000020, "Member 'TS_Functions_C_BlendToCinematicCamera::BlendExp' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_BlendToCinematicCamera, __WorldContext) == 0x000028, "Member 'TS_Functions_C_BlendToCinematicCamera::__WorldContext' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_BlendToCinematicCamera, CallFunc_GetPlayerController_ReturnValue) == 0x000030, "Member 'TS_Functions_C_BlendToCinematicCamera::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_BlendToCinematicCamera, CallFunc_GetPlayerPawn_ReturnValue) == 0x000038, "Member 'TS_Functions_C_BlendToCinematicCamera::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_BlendToCinematicCamera, K2Node_DynamicCast_AsSurvival_Player) == 0x000040, "Member 'TS_Functions_C_BlendToCinematicCamera::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_BlendToCinematicCamera, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'TS_Functions_C_BlendToCinematicCamera::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_BlendToCinematicCamera, CallFunc_GetCameraFOVObject_ReturnValue) == 0x000050, "Member 'TS_Functions_C_BlendToCinematicCamera::CallFunc_GetCameraFOVObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_BlendToCinematicCamera, K2Node_DynamicCast_AsSurv_Camera_FOVObject) == 0x000058, "Member 'TS_Functions_C_BlendToCinematicCamera::K2Node_DynamicCast_AsSurv_Camera_FOVObject' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_BlendToCinematicCamera, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'TS_Functions_C_BlendToCinematicCamera::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_BlendToCinematicCamera, CallFunc_SetViewTargetWithBlend_BlendTime_ImplicitCast) == 0x000064, "Member 'TS_Functions_C_BlendToCinematicCamera::CallFunc_SetViewTargetWithBlend_BlendTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_BlendToCinematicCamera, CallFunc_SetViewTargetWithBlend_BlendExp_ImplicitCast) == 0x000068, "Member 'TS_Functions_C_BlendToCinematicCamera::CallFunc_SetViewTargetWithBlend_BlendExp_ImplicitCast' has a wrong offset!");

// Function TS_Functions.TS_Functions_C.BlendToGameCamera
// 0x0070 (0x0070 - 0x0000)
struct TS_Functions_C_BlendToGameCamera final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        BlendTime;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewTargetBlendFunction                      BlendFunc;                                         // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        BlendExp;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UATPCCameraFOVObject*                   CallFunc_GetCameraFOVObject_ReturnValue;           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USurvCameraFOVObject*                   K2Node_DynamicCast_AsSurv_Camera_FOVObject;        // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetViewTargetWithBlend_BlendTime_ImplicitCast; // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetViewTargetWithBlend_BlendExp_ImplicitCast; // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TS_Functions_C_BlendToGameCamera) == 0x000008, "Wrong alignment on TS_Functions_C_BlendToGameCamera");
static_assert(sizeof(TS_Functions_C_BlendToGameCamera) == 0x000070, "Wrong size on TS_Functions_C_BlendToGameCamera");
static_assert(offsetof(TS_Functions_C_BlendToGameCamera, WorldContextObject) == 0x000000, "Member 'TS_Functions_C_BlendToGameCamera::WorldContextObject' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_BlendToGameCamera, BlendTime) == 0x000008, "Member 'TS_Functions_C_BlendToGameCamera::BlendTime' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_BlendToGameCamera, BlendFunc) == 0x000010, "Member 'TS_Functions_C_BlendToGameCamera::BlendFunc' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_BlendToGameCamera, BlendExp) == 0x000018, "Member 'TS_Functions_C_BlendToGameCamera::BlendExp' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_BlendToGameCamera, __WorldContext) == 0x000020, "Member 'TS_Functions_C_BlendToGameCamera::__WorldContext' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_BlendToGameCamera, CallFunc_GetPlayerController_ReturnValue) == 0x000028, "Member 'TS_Functions_C_BlendToGameCamera::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_BlendToGameCamera, CallFunc_GetPlayerPawn_ReturnValue) == 0x000030, "Member 'TS_Functions_C_BlendToGameCamera::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_BlendToGameCamera, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x000038, "Member 'TS_Functions_C_BlendToGameCamera::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_BlendToGameCamera, K2Node_DynamicCast_AsSurvival_Player) == 0x000040, "Member 'TS_Functions_C_BlendToGameCamera::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_BlendToGameCamera, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'TS_Functions_C_BlendToGameCamera::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_BlendToGameCamera, CallFunc_GetCameraFOVObject_ReturnValue) == 0x000050, "Member 'TS_Functions_C_BlendToGameCamera::CallFunc_GetCameraFOVObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_BlendToGameCamera, K2Node_DynamicCast_AsSurv_Camera_FOVObject) == 0x000058, "Member 'TS_Functions_C_BlendToGameCamera::K2Node_DynamicCast_AsSurv_Camera_FOVObject' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_BlendToGameCamera, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'TS_Functions_C_BlendToGameCamera::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_BlendToGameCamera, CallFunc_SetViewTargetWithBlend_BlendTime_ImplicitCast) == 0x000064, "Member 'TS_Functions_C_BlendToGameCamera::CallFunc_SetViewTargetWithBlend_BlendTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_BlendToGameCamera, CallFunc_SetViewTargetWithBlend_BlendExp_ImplicitCast) == 0x000068, "Member 'TS_Functions_C_BlendToGameCamera::CallFunc_SetViewTargetWithBlend_BlendExp_ImplicitCast' has a wrong offset!");

// Function TS_Functions.TS_Functions_C.CompareStrings
// 0x00C0 (0x00C0 - 0x0000)
struct TS_Functions_C_CompareStrings final
{
public:
	class FString                                 StringA;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 StringB;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          A_B;                                               // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Min;                                               // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Max;                                               // 0x0040(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          AGreaterThanB;                                     // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_ToLower_ReturnValue;                      // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ToLower_ReturnValue_1;                    // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCharacterAsNumber_ReturnValue;         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCharacterAsNumber_ReturnValue_1;       // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8F[0x1];                                       // 0x008F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_97[0x1];                                       // 0x0097(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default_1;                           // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(TS_Functions_C_CompareStrings) == 0x000008, "Wrong alignment on TS_Functions_C_CompareStrings");
static_assert(sizeof(TS_Functions_C_CompareStrings) == 0x0000C0, "Wrong size on TS_Functions_C_CompareStrings");
static_assert(offsetof(TS_Functions_C_CompareStrings, StringA) == 0x000000, "Member 'TS_Functions_C_CompareStrings::StringA' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_CompareStrings, StringB) == 0x000010, "Member 'TS_Functions_C_CompareStrings::StringB' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_CompareStrings, __WorldContext) == 0x000020, "Member 'TS_Functions_C_CompareStrings::__WorldContext' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_CompareStrings, A_B) == 0x000028, "Member 'TS_Functions_C_CompareStrings::A_B' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_CompareStrings, Min) == 0x000030, "Member 'TS_Functions_C_CompareStrings::Min' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_CompareStrings, Max) == 0x000040, "Member 'TS_Functions_C_CompareStrings::Max' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_CompareStrings, AGreaterThanB) == 0x000050, "Member 'TS_Functions_C_CompareStrings::AGreaterThanB' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_CompareStrings, Temp_bool_Variable) == 0x000051, "Member 'TS_Functions_C_CompareStrings::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_CompareStrings, CallFunc_ToLower_ReturnValue) == 0x000058, "Member 'TS_Functions_C_CompareStrings::CallFunc_ToLower_ReturnValue' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_CompareStrings, CallFunc_ToLower_ReturnValue_1) == 0x000068, "Member 'TS_Functions_C_CompareStrings::CallFunc_ToLower_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_CompareStrings, Temp_int_Variable) == 0x000078, "Member 'TS_Functions_C_CompareStrings::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_CompareStrings, CallFunc_Len_ReturnValue) == 0x00007C, "Member 'TS_Functions_C_CompareStrings::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_CompareStrings, CallFunc_GetCharacterAsNumber_ReturnValue) == 0x000080, "Member 'TS_Functions_C_CompareStrings::CallFunc_GetCharacterAsNumber_ReturnValue' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_CompareStrings, CallFunc_Subtract_IntInt_ReturnValue) == 0x000084, "Member 'TS_Functions_C_CompareStrings::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_CompareStrings, CallFunc_GetCharacterAsNumber_ReturnValue_1) == 0x000088, "Member 'TS_Functions_C_CompareStrings::CallFunc_GetCharacterAsNumber_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_CompareStrings, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00008C, "Member 'TS_Functions_C_CompareStrings::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_CompareStrings, CallFunc_Less_IntInt_ReturnValue) == 0x00008D, "Member 'TS_Functions_C_CompareStrings::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_CompareStrings, CallFunc_Greater_IntInt_ReturnValue) == 0x00008E, "Member 'TS_Functions_C_CompareStrings::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_CompareStrings, CallFunc_Add_IntInt_ReturnValue) == 0x000090, "Member 'TS_Functions_C_CompareStrings::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_CompareStrings, Temp_bool_Variable_1) == 0x000094, "Member 'TS_Functions_C_CompareStrings::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_CompareStrings, CallFunc_Not_PreBool_ReturnValue) == 0x000095, "Member 'TS_Functions_C_CompareStrings::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_CompareStrings, CallFunc_Not_PreBool_ReturnValue_1) == 0x000096, "Member 'TS_Functions_C_CompareStrings::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_CompareStrings, K2Node_Select_Default) == 0x000098, "Member 'TS_Functions_C_CompareStrings::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_CompareStrings, CallFunc_BooleanAND_ReturnValue) == 0x0000A8, "Member 'TS_Functions_C_CompareStrings::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_CompareStrings, Temp_bool_Variable_2) == 0x0000A9, "Member 'TS_Functions_C_CompareStrings::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_CompareStrings, K2Node_Select_Default_1) == 0x0000B0, "Member 'TS_Functions_C_CompareStrings::K2Node_Select_Default_1' has a wrong offset!");

// Function TS_Functions.TS_Functions_C.HitNormalize
// 0x0260 (0x0260 - 0x0000)
struct TS_Functions_C_HitNormalize final
{
public:
	struct FS_SimplifiedHitInfo                   S_SimplifiedHitInfo;                               // 0x0000(0x0080)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0080(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             ReturnValue;                                       // 0x0088(0x00E8)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_MakeHitResult_ReturnValue;                // 0x0178(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(TS_Functions_C_HitNormalize) == 0x000008, "Wrong alignment on TS_Functions_C_HitNormalize");
static_assert(sizeof(TS_Functions_C_HitNormalize) == 0x000260, "Wrong size on TS_Functions_C_HitNormalize");
static_assert(offsetof(TS_Functions_C_HitNormalize, S_SimplifiedHitInfo) == 0x000000, "Member 'TS_Functions_C_HitNormalize::S_SimplifiedHitInfo' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_HitNormalize, __WorldContext) == 0x000080, "Member 'TS_Functions_C_HitNormalize::__WorldContext' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_HitNormalize, ReturnValue) == 0x000088, "Member 'TS_Functions_C_HitNormalize::ReturnValue' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_HitNormalize, CallFunc_GetOwner_ReturnValue) == 0x000170, "Member 'TS_Functions_C_HitNormalize::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_HitNormalize, CallFunc_MakeHitResult_ReturnValue) == 0x000178, "Member 'TS_Functions_C_HitNormalize::CallFunc_MakeHitResult_ReturnValue' has a wrong offset!");

// Function TS_Functions.TS_Functions_C.SimplifyHitInfo
// 0x02C8 (0x02C8 - 0x0000)
struct TS_Functions_C_SimplifyHitInfo final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UObject*                                __WorldContext;                                    // 0x00E8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_SimplifiedHitInfo                   S_SimplifiedHitInfo;                               // 0x00F0(0x0080)(Parm, OutParm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_172[0x2];                                      // 0x0172(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_214[0x4];                                      // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_SimplifiedHitInfo                   K2Node_MakeStruct_S_SimplifiedHitInfo;             // 0x0248(0x0080)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(TS_Functions_C_SimplifyHitInfo) == 0x000008, "Wrong alignment on TS_Functions_C_SimplifyHitInfo");
static_assert(sizeof(TS_Functions_C_SimplifyHitInfo) == 0x0002C8, "Wrong size on TS_Functions_C_SimplifyHitInfo");
static_assert(offsetof(TS_Functions_C_SimplifyHitInfo, Hit) == 0x000000, "Member 'TS_Functions_C_SimplifyHitInfo::Hit' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SimplifyHitInfo, __WorldContext) == 0x0000E8, "Member 'TS_Functions_C_SimplifyHitInfo::__WorldContext' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SimplifyHitInfo, S_SimplifiedHitInfo) == 0x0000F0, "Member 'TS_Functions_C_SimplifyHitInfo::S_SimplifiedHitInfo' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SimplifyHitInfo, CallFunc_BreakHitResult_bBlockingHit) == 0x000170, "Member 'TS_Functions_C_SimplifyHitInfo::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SimplifyHitInfo, CallFunc_BreakHitResult_bInitialOverlap) == 0x000171, "Member 'TS_Functions_C_SimplifyHitInfo::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SimplifyHitInfo, CallFunc_BreakHitResult_Time) == 0x000174, "Member 'TS_Functions_C_SimplifyHitInfo::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SimplifyHitInfo, CallFunc_BreakHitResult_Distance) == 0x000178, "Member 'TS_Functions_C_SimplifyHitInfo::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SimplifyHitInfo, CallFunc_BreakHitResult_Location) == 0x000180, "Member 'TS_Functions_C_SimplifyHitInfo::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SimplifyHitInfo, CallFunc_BreakHitResult_ImpactPoint) == 0x000198, "Member 'TS_Functions_C_SimplifyHitInfo::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SimplifyHitInfo, CallFunc_BreakHitResult_Normal) == 0x0001B0, "Member 'TS_Functions_C_SimplifyHitInfo::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SimplifyHitInfo, CallFunc_BreakHitResult_ImpactNormal) == 0x0001C8, "Member 'TS_Functions_C_SimplifyHitInfo::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SimplifyHitInfo, CallFunc_BreakHitResult_PhysMat) == 0x0001E0, "Member 'TS_Functions_C_SimplifyHitInfo::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SimplifyHitInfo, CallFunc_BreakHitResult_HitActor) == 0x0001E8, "Member 'TS_Functions_C_SimplifyHitInfo::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SimplifyHitInfo, CallFunc_BreakHitResult_HitComponent) == 0x0001F0, "Member 'TS_Functions_C_SimplifyHitInfo::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SimplifyHitInfo, CallFunc_BreakHitResult_HitBoneName) == 0x0001F8, "Member 'TS_Functions_C_SimplifyHitInfo::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SimplifyHitInfo, CallFunc_BreakHitResult_BoneName) == 0x000200, "Member 'TS_Functions_C_SimplifyHitInfo::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SimplifyHitInfo, CallFunc_BreakHitResult_HitItem) == 0x000208, "Member 'TS_Functions_C_SimplifyHitInfo::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SimplifyHitInfo, CallFunc_BreakHitResult_ElementIndex) == 0x00020C, "Member 'TS_Functions_C_SimplifyHitInfo::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SimplifyHitInfo, CallFunc_BreakHitResult_FaceIndex) == 0x000210, "Member 'TS_Functions_C_SimplifyHitInfo::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SimplifyHitInfo, CallFunc_BreakHitResult_TraceStart) == 0x000218, "Member 'TS_Functions_C_SimplifyHitInfo::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SimplifyHitInfo, CallFunc_BreakHitResult_TraceEnd) == 0x000230, "Member 'TS_Functions_C_SimplifyHitInfo::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SimplifyHitInfo, K2Node_MakeStruct_S_SimplifiedHitInfo) == 0x000248, "Member 'TS_Functions_C_SimplifyHitInfo::K2Node_MakeStruct_S_SimplifiedHitInfo' has a wrong offset!");

// Function TS_Functions.TS_Functions_C.SortActorArrayByName
// 0x00C0 (0x00C0 - 0x0000)
struct TS_Functions_C_SortActorArrayByName final
{
public:
	TArray<class AActor*>                         Array;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         OutArray;                                          // 0x0018(0x0010)(Parm, OutParm)
	class FString                                 IMinString;                                        // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         IMin;                                              // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_CompareStrings_A_B;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_CompareStrings_Min;                       // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_CompareStrings_Max;                       // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TS_Functions_C_SortActorArrayByName) == 0x000008, "Wrong alignment on TS_Functions_C_SortActorArrayByName");
static_assert(sizeof(TS_Functions_C_SortActorArrayByName) == 0x0000C0, "Wrong size on TS_Functions_C_SortActorArrayByName");
static_assert(offsetof(TS_Functions_C_SortActorArrayByName, Array) == 0x000000, "Member 'TS_Functions_C_SortActorArrayByName::Array' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SortActorArrayByName, __WorldContext) == 0x000010, "Member 'TS_Functions_C_SortActorArrayByName::__WorldContext' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SortActorArrayByName, OutArray) == 0x000018, "Member 'TS_Functions_C_SortActorArrayByName::OutArray' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SortActorArrayByName, IMinString) == 0x000028, "Member 'TS_Functions_C_SortActorArrayByName::IMinString' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SortActorArrayByName, IMin) == 0x000038, "Member 'TS_Functions_C_SortActorArrayByName::IMin' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SortActorArrayByName, CallFunc_Array_LastIndex_ReturnValue) == 0x00003C, "Member 'TS_Functions_C_SortActorArrayByName::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SortActorArrayByName, Temp_int_Variable) == 0x000040, "Member 'TS_Functions_C_SortActorArrayByName::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SortActorArrayByName, CallFunc_Array_Get_Item) == 0x000048, "Member 'TS_Functions_C_SortActorArrayByName::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SortActorArrayByName, CallFunc_GetDisplayName_ReturnValue) == 0x000050, "Member 'TS_Functions_C_SortActorArrayByName::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SortActorArrayByName, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'TS_Functions_C_SortActorArrayByName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SortActorArrayByName, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000064, "Member 'TS_Functions_C_SortActorArrayByName::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SortActorArrayByName, CallFunc_Add_IntInt_ReturnValue_1) == 0x000068, "Member 'TS_Functions_C_SortActorArrayByName::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SortActorArrayByName, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00006C, "Member 'TS_Functions_C_SortActorArrayByName::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SortActorArrayByName, Temp_int_Variable_1) == 0x000070, "Member 'TS_Functions_C_SortActorArrayByName::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SortActorArrayByName, CallFunc_Add_IntInt_ReturnValue_2) == 0x000074, "Member 'TS_Functions_C_SortActorArrayByName::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SortActorArrayByName, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'TS_Functions_C_SortActorArrayByName::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SortActorArrayByName, CallFunc_GetDisplayName_ReturnValue_1) == 0x000080, "Member 'TS_Functions_C_SortActorArrayByName::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SortActorArrayByName, CallFunc_CompareStrings_A_B) == 0x000090, "Member 'TS_Functions_C_SortActorArrayByName::CallFunc_CompareStrings_A_B' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SortActorArrayByName, CallFunc_CompareStrings_Min) == 0x000098, "Member 'TS_Functions_C_SortActorArrayByName::CallFunc_CompareStrings_Min' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SortActorArrayByName, CallFunc_CompareStrings_Max) == 0x0000A8, "Member 'TS_Functions_C_SortActorArrayByName::CallFunc_CompareStrings_Max' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SortActorArrayByName, CallFunc_Not_PreBool_ReturnValue) == 0x0000B8, "Member 'TS_Functions_C_SortActorArrayByName::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SortActorArrayByName, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0000B9, "Member 'TS_Functions_C_SortActorArrayByName::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function TS_Functions.TS_Functions_C.SortActorArrayByNamePSTDB
// 0x00C0 (0x00C0 - 0x0000)
struct TS_Functions_C_SortActorArrayByNamePSTDB final
{
public:
	TArray<class APS_TDB_C*>                      Array;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class APS_TDB_C*>                      OutArray;                                          // 0x0018(0x0010)(Parm, OutParm)
	class FString                                 IMinString;                                        // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         IMin;                                              // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APS_TDB_C*                              CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APS_TDB_C*                              CallFunc_Array_Get_Item_1;                         // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_CompareStrings_A_B;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_CompareStrings_Min;                       // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_CompareStrings_Max;                       // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TS_Functions_C_SortActorArrayByNamePSTDB) == 0x000008, "Wrong alignment on TS_Functions_C_SortActorArrayByNamePSTDB");
static_assert(sizeof(TS_Functions_C_SortActorArrayByNamePSTDB) == 0x0000C0, "Wrong size on TS_Functions_C_SortActorArrayByNamePSTDB");
static_assert(offsetof(TS_Functions_C_SortActorArrayByNamePSTDB, Array) == 0x000000, "Member 'TS_Functions_C_SortActorArrayByNamePSTDB::Array' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SortActorArrayByNamePSTDB, __WorldContext) == 0x000010, "Member 'TS_Functions_C_SortActorArrayByNamePSTDB::__WorldContext' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SortActorArrayByNamePSTDB, OutArray) == 0x000018, "Member 'TS_Functions_C_SortActorArrayByNamePSTDB::OutArray' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SortActorArrayByNamePSTDB, IMinString) == 0x000028, "Member 'TS_Functions_C_SortActorArrayByNamePSTDB::IMinString' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SortActorArrayByNamePSTDB, IMin) == 0x000038, "Member 'TS_Functions_C_SortActorArrayByNamePSTDB::IMin' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SortActorArrayByNamePSTDB, CallFunc_Array_LastIndex_ReturnValue) == 0x00003C, "Member 'TS_Functions_C_SortActorArrayByNamePSTDB::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SortActorArrayByNamePSTDB, Temp_int_Variable) == 0x000040, "Member 'TS_Functions_C_SortActorArrayByNamePSTDB::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SortActorArrayByNamePSTDB, CallFunc_Array_Get_Item) == 0x000048, "Member 'TS_Functions_C_SortActorArrayByNamePSTDB::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SortActorArrayByNamePSTDB, CallFunc_GetDisplayName_ReturnValue) == 0x000050, "Member 'TS_Functions_C_SortActorArrayByNamePSTDB::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SortActorArrayByNamePSTDB, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'TS_Functions_C_SortActorArrayByNamePSTDB::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SortActorArrayByNamePSTDB, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000064, "Member 'TS_Functions_C_SortActorArrayByNamePSTDB::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SortActorArrayByNamePSTDB, CallFunc_Add_IntInt_ReturnValue_1) == 0x000068, "Member 'TS_Functions_C_SortActorArrayByNamePSTDB::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SortActorArrayByNamePSTDB, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00006C, "Member 'TS_Functions_C_SortActorArrayByNamePSTDB::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SortActorArrayByNamePSTDB, Temp_int_Variable_1) == 0x000070, "Member 'TS_Functions_C_SortActorArrayByNamePSTDB::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SortActorArrayByNamePSTDB, CallFunc_Add_IntInt_ReturnValue_2) == 0x000074, "Member 'TS_Functions_C_SortActorArrayByNamePSTDB::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SortActorArrayByNamePSTDB, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'TS_Functions_C_SortActorArrayByNamePSTDB::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SortActorArrayByNamePSTDB, CallFunc_GetDisplayName_ReturnValue_1) == 0x000080, "Member 'TS_Functions_C_SortActorArrayByNamePSTDB::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SortActorArrayByNamePSTDB, CallFunc_CompareStrings_A_B) == 0x000090, "Member 'TS_Functions_C_SortActorArrayByNamePSTDB::CallFunc_CompareStrings_A_B' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SortActorArrayByNamePSTDB, CallFunc_CompareStrings_Min) == 0x000098, "Member 'TS_Functions_C_SortActorArrayByNamePSTDB::CallFunc_CompareStrings_Min' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SortActorArrayByNamePSTDB, CallFunc_CompareStrings_Max) == 0x0000A8, "Member 'TS_Functions_C_SortActorArrayByNamePSTDB::CallFunc_CompareStrings_Max' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SortActorArrayByNamePSTDB, CallFunc_Not_PreBool_ReturnValue) == 0x0000B8, "Member 'TS_Functions_C_SortActorArrayByNamePSTDB::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SortActorArrayByNamePSTDB, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0000B9, "Member 'TS_Functions_C_SortActorArrayByNamePSTDB::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function TS_Functions.TS_Functions_C.SwapArrayElements
// 0x0040 (0x0040 - 0x0000)
struct TS_Functions_C_SwapArrayElements final
{
public:
	TArray<class UObject*>                        NewParam;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         IndexA;                                            // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         IndexB;                                            // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                ObjectB;                                           // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                ObjectA;                                           // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Array_Get_Item_1;                         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TS_Functions_C_SwapArrayElements) == 0x000008, "Wrong alignment on TS_Functions_C_SwapArrayElements");
static_assert(sizeof(TS_Functions_C_SwapArrayElements) == 0x000040, "Wrong size on TS_Functions_C_SwapArrayElements");
static_assert(offsetof(TS_Functions_C_SwapArrayElements, NewParam) == 0x000000, "Member 'TS_Functions_C_SwapArrayElements::NewParam' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SwapArrayElements, IndexA) == 0x000010, "Member 'TS_Functions_C_SwapArrayElements::IndexA' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SwapArrayElements, IndexB) == 0x000014, "Member 'TS_Functions_C_SwapArrayElements::IndexB' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SwapArrayElements, __WorldContext) == 0x000018, "Member 'TS_Functions_C_SwapArrayElements::__WorldContext' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SwapArrayElements, ObjectB) == 0x000020, "Member 'TS_Functions_C_SwapArrayElements::ObjectB' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SwapArrayElements, ObjectA) == 0x000028, "Member 'TS_Functions_C_SwapArrayElements::ObjectA' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SwapArrayElements, CallFunc_Array_Get_Item) == 0x000030, "Member 'TS_Functions_C_SwapArrayElements::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TS_Functions_C_SwapArrayElements, CallFunc_Array_Get_Item_1) == 0x000038, "Member 'TS_Functions_C_SwapArrayElements::CallFunc_Array_Get_Item_1' has a wrong offset!");

}

