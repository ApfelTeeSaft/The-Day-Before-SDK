#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Weapon

#include "Basic.hpp"

#include "ContainerPickupsInfo_structs.hpp"
#include "BPE_Weapon_Type_structs.hpp"
#include "FItemInfo_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_TypesOfModes_structs.hpp"
#include "BPE_AmmoType_structs.hpp"
#include "BPS_WeaponData_structs.hpp"
#include "BPE_AmmoClass_structs.hpp"
#include "StanceState_structs.hpp"
#include "FMODStudio_structs.hpp"
#include "Engine_structs.hpp"
#include "S_Float_structs.hpp"
#include "S_WeaponShakeInfo_structs.hpp"
#include "PlayerSlots_structs.hpp"
#include "S_SimplifiedHitInfo_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "BPS_HitDecals_structs.hpp"
#include "BPS_DamageInfo_structs.hpp"
#include "BPS_HitParticles_structs.hpp"
#include "S_HitInfo_structs.hpp"
#include "S_PlayerWeaponAnim_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_Weapon.BP_Weapon_C.AddAmmoToInventory
// 0x0B28 (0x0B28 - 0x0000)
struct BP_Weapon_C_AddAmmoToInventory final
{
public:
	bool                                          bIsForCurrentWeapon;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NewAmmoCount;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AmmoNameForOtherWeapon;                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AmmoCountForOtherWeapon;                           // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AmmoDif;                                           // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             F_AddedAmmo;                                       // 0x0018(0x0220)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow;           // 0x0240(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_461[0x7];                                      // 0x0461(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             K2Node_SetFieldsInStruct_StructOut;                // 0x0468(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FFItemInfo>                     K2Node_MakeArray_Array;                            // 0x0688(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0698(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69C[0x4];                                      // 0x069C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x06A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x06B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanAddItems_Can;                          // 0x06B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B9[0x3];                                      // 0x06B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CanAddItems_ItemsLeft;                    // 0x06BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x06C0(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x08E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E1[0x7];                                      // 0x08E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             K2Node_SetFieldsInStruct_StructOut_1;              // 0x08E8(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0B08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B09[0x7];                                      // 0x0B09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FContainerPickupsInfo>          K2Node_MakeArray_Array_1;                          // 0x0B10(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_JSAddItem_Ad;                             // 0x0B20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_AddAmmoToInventory) == 0x000008, "Wrong alignment on BP_Weapon_C_AddAmmoToInventory");
static_assert(sizeof(BP_Weapon_C_AddAmmoToInventory) == 0x000B28, "Wrong size on BP_Weapon_C_AddAmmoToInventory");
static_assert(offsetof(BP_Weapon_C_AddAmmoToInventory, bIsForCurrentWeapon) == 0x000000, "Member 'BP_Weapon_C_AddAmmoToInventory::bIsForCurrentWeapon' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_AddAmmoToInventory, NewAmmoCount) == 0x000004, "Member 'BP_Weapon_C_AddAmmoToInventory::NewAmmoCount' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_AddAmmoToInventory, AmmoNameForOtherWeapon) == 0x000008, "Member 'BP_Weapon_C_AddAmmoToInventory::AmmoNameForOtherWeapon' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_AddAmmoToInventory, AmmoCountForOtherWeapon) == 0x000010, "Member 'BP_Weapon_C_AddAmmoToInventory::AmmoCountForOtherWeapon' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_AddAmmoToInventory, AmmoDif) == 0x000014, "Member 'BP_Weapon_C_AddAmmoToInventory::AmmoDif' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_AddAmmoToInventory, F_AddedAmmo) == 0x000018, "Member 'BP_Weapon_C_AddAmmoToInventory::F_AddedAmmo' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_AddAmmoToInventory, CallFunc_Subtract_IntInt_ReturnValue) == 0x000238, "Member 'BP_Weapon_C_AddAmmoToInventory::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_AddAmmoToInventory, CallFunc_GetDataTableRowFromName_OutRow) == 0x000240, "Member 'BP_Weapon_C_AddAmmoToInventory::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_AddAmmoToInventory, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000460, "Member 'BP_Weapon_C_AddAmmoToInventory::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_AddAmmoToInventory, K2Node_SetFieldsInStruct_StructOut) == 0x000468, "Member 'BP_Weapon_C_AddAmmoToInventory::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_AddAmmoToInventory, K2Node_MakeArray_Array) == 0x000688, "Member 'BP_Weapon_C_AddAmmoToInventory::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_AddAmmoToInventory, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000698, "Member 'BP_Weapon_C_AddAmmoToInventory::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_AddAmmoToInventory, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0006A0, "Member 'BP_Weapon_C_AddAmmoToInventory::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_AddAmmoToInventory, CallFunc_Conv_StringToName_ReturnValue) == 0x0006B0, "Member 'BP_Weapon_C_AddAmmoToInventory::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_AddAmmoToInventory, CallFunc_CanAddItems_Can) == 0x0006B8, "Member 'BP_Weapon_C_AddAmmoToInventory::CallFunc_CanAddItems_Can' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_AddAmmoToInventory, CallFunc_CanAddItems_ItemsLeft) == 0x0006BC, "Member 'BP_Weapon_C_AddAmmoToInventory::CallFunc_CanAddItems_ItemsLeft' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_AddAmmoToInventory, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x0006C0, "Member 'BP_Weapon_C_AddAmmoToInventory::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_AddAmmoToInventory, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x0008E0, "Member 'BP_Weapon_C_AddAmmoToInventory::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_AddAmmoToInventory, K2Node_SetFieldsInStruct_StructOut_1) == 0x0008E8, "Member 'BP_Weapon_C_AddAmmoToInventory::K2Node_SetFieldsInStruct_StructOut_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_AddAmmoToInventory, CallFunc_Greater_IntInt_ReturnValue) == 0x000B08, "Member 'BP_Weapon_C_AddAmmoToInventory::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_AddAmmoToInventory, K2Node_MakeArray_Array_1) == 0x000B10, "Member 'BP_Weapon_C_AddAmmoToInventory::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_AddAmmoToInventory, CallFunc_JSAddItem_Ad) == 0x000B20, "Member 'BP_Weapon_C_AddAmmoToInventory::CallFunc_JSAddItem_Ad' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.AimEvent
// 0x0001 (0x0001 - 0x0000)
struct BP_Weapon_C_AimEvent final
{
public:
	bool                                          Aim;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_AimEvent) == 0x000001, "Wrong alignment on BP_Weapon_C_AimEvent");
static_assert(sizeof(BP_Weapon_C_AimEvent) == 0x000001, "Wrong size on BP_Weapon_C_AimEvent");
static_assert(offsetof(BP_Weapon_C_AimEvent, Aim) == 0x000000, "Member 'BP_Weapon_C_AimEvent::Aim' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.AutoFireSound
// 0x0001 (0x0001 - 0x0000)
struct BP_Weapon_C_AutoFireSound final
{
public:
	bool                                          Start;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_AutoFireSound) == 0x000001, "Wrong alignment on BP_Weapon_C_AutoFireSound");
static_assert(sizeof(BP_Weapon_C_AutoFireSound) == 0x000001, "Wrong size on BP_Weapon_C_AutoFireSound");
static_assert(offsetof(BP_Weapon_C_AutoFireSound, Start) == 0x000000, "Member 'BP_Weapon_C_AutoFireSound::Start' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.BoltActionResume
// 0x00B8 (0x00B8 - 0x0000)
struct BP_Weapon_C_BoltActionResume final
{
public:
	class UAnimMontage*                           CallFunc_GetWeaponShotMontage_NewParam;            // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetWeaponShotMontage_NewParam_1;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_FPFunctions_C>     K2Node_DynamicCast_AsBI_FPFunctions;               // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetFireMontage_Montage;                   // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_2;            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISurvInterface_C>      K2Node_DynamicCast_AsSurv_Interface;               // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimMontage>            K2Node_Select_Default;                             // 0x0070(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_LoadAnimMontage_AnimMontage;              // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_3;            // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Montage_IsPlaying_ReturnValue;            // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_BoltActionResume) == 0x000008, "Wrong alignment on BP_Weapon_C_BoltActionResume");
static_assert(sizeof(BP_Weapon_C_BoltActionResume) == 0x0000B8, "Wrong size on BP_Weapon_C_BoltActionResume");
static_assert(offsetof(BP_Weapon_C_BoltActionResume, CallFunc_GetWeaponShotMontage_NewParam) == 0x000000, "Member 'BP_Weapon_C_BoltActionResume::CallFunc_GetWeaponShotMontage_NewParam' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BoltActionResume, CallFunc_GetWeaponShotMontage_NewParam_1) == 0x000008, "Member 'BP_Weapon_C_BoltActionResume::CallFunc_GetWeaponShotMontage_NewParam_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BoltActionResume, Temp_bool_Variable) == 0x000010, "Member 'BP_Weapon_C_BoltActionResume::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BoltActionResume, CallFunc_GetAnimInstance_ReturnValue) == 0x000018, "Member 'BP_Weapon_C_BoltActionResume::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BoltActionResume, K2Node_DynamicCast_AsBI_FPFunctions) == 0x000020, "Member 'BP_Weapon_C_BoltActionResume::K2Node_DynamicCast_AsBI_FPFunctions' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BoltActionResume, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_Weapon_C_BoltActionResume::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BoltActionResume, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000038, "Member 'BP_Weapon_C_BoltActionResume::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BoltActionResume, CallFunc_GetFireMontage_Montage) == 0x000040, "Member 'BP_Weapon_C_BoltActionResume::CallFunc_GetFireMontage_Montage' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BoltActionResume, CallFunc_GetAnimInstance_ReturnValue_2) == 0x000048, "Member 'BP_Weapon_C_BoltActionResume::CallFunc_GetAnimInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BoltActionResume, CallFunc_Not_PreBool_ReturnValue) == 0x000050, "Member 'BP_Weapon_C_BoltActionResume::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BoltActionResume, K2Node_DynamicCast_AsSurv_Interface) == 0x000058, "Member 'BP_Weapon_C_BoltActionResume::K2Node_DynamicCast_AsSurv_Interface' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BoltActionResume, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'BP_Weapon_C_BoltActionResume::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BoltActionResume, CallFunc_IsValid_ReturnValue) == 0x000069, "Member 'BP_Weapon_C_BoltActionResume::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BoltActionResume, K2Node_Select_Default) == 0x000070, "Member 'BP_Weapon_C_BoltActionResume::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BoltActionResume, CallFunc_LoadAnimMontage_AnimMontage) == 0x0000A0, "Member 'BP_Weapon_C_BoltActionResume::CallFunc_LoadAnimMontage_AnimMontage' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BoltActionResume, CallFunc_GetAnimInstance_ReturnValue_3) == 0x0000A8, "Member 'BP_Weapon_C_BoltActionResume::CallFunc_GetAnimInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BoltActionResume, CallFunc_Montage_IsPlaying_ReturnValue) == 0x0000B0, "Member 'BP_Weapon_C_BoltActionResume::CallFunc_Montage_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BoltActionResume, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000B1, "Member 'BP_Weapon_C_BoltActionResume::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BoltActionResume, CallFunc_IsLocallyControlled_ReturnValue) == 0x0000B2, "Member 'BP_Weapon_C_BoltActionResume::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BoltActionResume, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x0000B3, "Member 'BP_Weapon_C_BoltActionResume::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BoltActionResume, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000B4, "Member 'BP_Weapon_C_BoltActionResume::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BoltActionResume, CallFunc_BooleanAND_ReturnValue) == 0x0000B5, "Member 'BP_Weapon_C_BoltActionResume::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BoltActionResume, CallFunc_BooleanOR_ReturnValue) == 0x0000B6, "Member 'BP_Weapon_C_BoltActionResume::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BoltActionResume, CallFunc_BooleanAND_ReturnValue_1) == 0x0000B7, "Member 'BP_Weapon_C_BoltActionResume::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.BoltActionStop
// 0x0098 (0x0098 - 0x0000)
struct BP_Weapon_C_BoltActionStop final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_FPFunctions_C>     K2Node_DynamicCast_AsBI_FPFunctions;               // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetFireMontage_Montage;                   // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimMontage>            K2Node_Select_Default;                             // 0x0040(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_LoadAnimMontage_AnimMontage;              // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_2;            // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_BoltActionStop) == 0x000008, "Wrong alignment on BP_Weapon_C_BoltActionStop");
static_assert(sizeof(BP_Weapon_C_BoltActionStop) == 0x000098, "Wrong size on BP_Weapon_C_BoltActionStop");
static_assert(offsetof(BP_Weapon_C_BoltActionStop, Temp_bool_Variable) == 0x000000, "Member 'BP_Weapon_C_BoltActionStop::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BoltActionStop, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'BP_Weapon_C_BoltActionStop::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BoltActionStop, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000010, "Member 'BP_Weapon_C_BoltActionStop::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BoltActionStop, K2Node_DynamicCast_AsBI_FPFunctions) == 0x000018, "Member 'BP_Weapon_C_BoltActionStop::K2Node_DynamicCast_AsBI_FPFunctions' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BoltActionStop, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_Weapon_C_BoltActionStop::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BoltActionStop, CallFunc_GetFireMontage_Montage) == 0x000030, "Member 'BP_Weapon_C_BoltActionStop::CallFunc_GetFireMontage_Montage' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BoltActionStop, CallFunc_IsLocallyControlled_ReturnValue) == 0x000038, "Member 'BP_Weapon_C_BoltActionStop::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BoltActionStop, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x000039, "Member 'BP_Weapon_C_BoltActionStop::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BoltActionStop, CallFunc_Not_PreBool_ReturnValue) == 0x00003A, "Member 'BP_Weapon_C_BoltActionStop::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BoltActionStop, CallFunc_BooleanAND_ReturnValue) == 0x00003B, "Member 'BP_Weapon_C_BoltActionStop::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BoltActionStop, CallFunc_BooleanOR_ReturnValue) == 0x00003C, "Member 'BP_Weapon_C_BoltActionStop::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BoltActionStop, K2Node_Select_Default) == 0x000040, "Member 'BP_Weapon_C_BoltActionStop::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BoltActionStop, CallFunc_LoadAnimMontage_AnimMontage) == 0x000070, "Member 'BP_Weapon_C_BoltActionStop::CallFunc_LoadAnimMontage_AnimMontage' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BoltActionStop, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000078, "Member 'BP_Weapon_C_BoltActionStop::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BoltActionStop, K2Node_DynamicCast_AsAnim_Montage) == 0x000080, "Member 'BP_Weapon_C_BoltActionStop::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BoltActionStop, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'BP_Weapon_C_BoltActionStop::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BoltActionStop, CallFunc_GetAnimInstance_ReturnValue_2) == 0x000090, "Member 'BP_Weapon_C_BoltActionStop::CallFunc_GetAnimInstance_ReturnValue_2' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.BulletTrace
// 0x0970 (0x0970 - 0x0000)
struct BP_Weapon_C_BulletTrace final
{
public:
	TArray<struct FBPS_DamageInfo>                OutHit;                                            // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	bool                                          GetHit;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LocalEndHitLocation;                               // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         LocalActorsToIgnore;                               // 0x0030(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         FitstSurvHitIndex;                                 // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   HitBoneName;                                       // 0x0044(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 HitActor;                                          // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CurrentHit;                                        // 0x0058(0x00E8)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          BlockingHit;                                       // 0x0140(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipNextHits;                                      // 0x0141(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_142[0x6];                                      // 0x0142(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBPS_DamageInfo>                DamageInfos;                                       // 0x0148(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         LastHitIndex;                                      // 0x0158(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     Hits;                                              // 0x0160(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0198(0x0010)(ReferenceParm)
	class ABP_RB_Vehicle_C*                       K2Node_DynamicCast_AsBP_RB_Vehicle;                // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C2[0x6];                                      // 0x01C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_CalculateDamage_ResultDamage;             // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D2[0x2];                                      // 0x01D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0250(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_274[0x4];                                      // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_SimplifiedHitInfo                   CallFunc_HitSimplify_S_SimplifiedHitInfo;          // 0x02B0(0x0080)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0331(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0332(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0333(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33C[0x4];                                      // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0340(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0358(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0370(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0388(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x03A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x03A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x03B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D4[0x4];                                      // 0x03D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x03D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x03F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_409[0x7];                                      // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_SimplifiedHitInfo                   CallFunc_HitSimplify_S_SimplifiedHitInfo_1;        // 0x0410(0x0080)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0494(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0499(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x049A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CHeckDamageDuplicate_CanAdd;              // 0x049B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x049C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49D[0x3];                                      // 0x049D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x04A0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FBPS_DamageInfo                        K2Node_MakeStruct_BPS_DamageInfo;                  // 0x0588(0x0098)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0620(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0624(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_629[0x7];                                      // 0x0629(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBPS_DamageInfo                        K2Node_MakeStruct_BPS_DamageInfo_1;                // 0x0630(0x0098)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x06C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C9[0x3];                                      // 0x06C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x06CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x06D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x06D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D9[0x7];                                      // 0x06D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x06E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ShootDirection_BeginPoint;                // 0x06E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ShootDirection_EndPoint;                  // 0x0700(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ShootDirection_CamForwardVector;          // 0x0718(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVectorInConeInDegrees_ReturnValue; // 0x0730(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0748(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0830(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_831[0x7];                                      // 0x0831(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0838(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_2;            // 0x0850(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_2;         // 0x0851(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_852[0x2];                                      // 0x0852(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_2;                    // 0x0854(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_2;                // 0x0858(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85C[0x4];                                      // 0x085C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_2;                // 0x0860(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_2;             // 0x0878(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_2;                  // 0x0890(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_2;            // 0x08A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_2;                 // 0x08C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_2;                // 0x08C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_2;            // 0x08D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_2;             // 0x08D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_2;                // 0x08E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_2;                 // 0x08E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_2;            // 0x08EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_2;               // 0x08F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8F4[0x4];                                      // 0x08F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_2;              // 0x08F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_2;                // 0x0910(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0928(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0940(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     CallFunc_LineTraceMulti_OutHits;                   // 0x0958(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceMulti_ReturnValue;               // 0x0968(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_BulletTrace) == 0x000008, "Wrong alignment on BP_Weapon_C_BulletTrace");
static_assert(sizeof(BP_Weapon_C_BulletTrace) == 0x000970, "Wrong size on BP_Weapon_C_BulletTrace");
static_assert(offsetof(BP_Weapon_C_BulletTrace, OutHit) == 0x000000, "Member 'BP_Weapon_C_BulletTrace::OutHit' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, GetHit) == 0x000010, "Member 'BP_Weapon_C_BulletTrace::GetHit' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, LocalEndHitLocation) == 0x000018, "Member 'BP_Weapon_C_BulletTrace::LocalEndHitLocation' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, LocalActorsToIgnore) == 0x000030, "Member 'BP_Weapon_C_BulletTrace::LocalActorsToIgnore' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, FitstSurvHitIndex) == 0x000040, "Member 'BP_Weapon_C_BulletTrace::FitstSurvHitIndex' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, HitBoneName) == 0x000044, "Member 'BP_Weapon_C_BulletTrace::HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, HitActor) == 0x000050, "Member 'BP_Weapon_C_BulletTrace::HitActor' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CurrentHit) == 0x000058, "Member 'BP_Weapon_C_BulletTrace::CurrentHit' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, BlockingHit) == 0x000140, "Member 'BP_Weapon_C_BulletTrace::BlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, SkipNextHits) == 0x000141, "Member 'BP_Weapon_C_BulletTrace::SkipNextHits' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, DamageInfos) == 0x000148, "Member 'BP_Weapon_C_BulletTrace::DamageInfos' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, LastHitIndex) == 0x000158, "Member 'BP_Weapon_C_BulletTrace::LastHitIndex' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, Hits) == 0x000160, "Member 'BP_Weapon_C_BulletTrace::Hits' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, Temp_int_Array_Index_Variable) == 0x000170, "Member 'BP_Weapon_C_BulletTrace::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_GetPlayerPawn_ReturnValue) == 0x000178, "Member 'BP_Weapon_C_BulletTrace::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_GetSocketLocation_ReturnValue) == 0x000180, "Member 'BP_Weapon_C_BulletTrace::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, K2Node_MakeArray_Array) == 0x000198, "Member 'BP_Weapon_C_BulletTrace::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, K2Node_DynamicCast_AsBP_RB_Vehicle) == 0x0001A8, "Member 'BP_Weapon_C_BulletTrace::K2Node_DynamicCast_AsBP_RB_Vehicle' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, K2Node_DynamicCast_bSuccess) == 0x0001B0, "Member 'BP_Weapon_C_BulletTrace::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, K2Node_DynamicCast_AsPawn) == 0x0001B8, "Member 'BP_Weapon_C_BulletTrace::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, K2Node_DynamicCast_bSuccess_1) == 0x0001C0, "Member 'BP_Weapon_C_BulletTrace::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0001C1, "Member 'BP_Weapon_C_BulletTrace::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_CalculateDamage_ResultDamage) == 0x0001C8, "Member 'BP_Weapon_C_BulletTrace::CallFunc_CalculateDamage_ResultDamage' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_bBlockingHit) == 0x0001D0, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001D1, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_Time) == 0x0001D4, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_Distance) == 0x0001D8, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_Location) == 0x0001E0, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_ImpactPoint) == 0x0001F8, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_Normal) == 0x000210, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_ImpactNormal) == 0x000228, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_PhysMat) == 0x000240, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_HitActor) == 0x000248, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_HitComponent) == 0x000250, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_HitBoneName) == 0x000258, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_BoneName) == 0x000260, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_HitItem) == 0x000268, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_ElementIndex) == 0x00026C, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_FaceIndex) == 0x000270, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_TraceStart) == 0x000278, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_TraceEnd) == 0x000290, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0002A8, "Member 'BP_Weapon_C_BulletTrace::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_HitSimplify_S_SimplifiedHitInfo) == 0x0002B0, "Member 'BP_Weapon_C_BulletTrace::CallFunc_HitSimplify_S_SimplifiedHitInfo' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000330, "Member 'BP_Weapon_C_BulletTrace::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BooleanAND_ReturnValue) == 0x000331, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000332, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000333, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_Time_1) == 0x000334, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_Distance_1) == 0x000338, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_Location_1) == 0x000340, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000358, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_Normal_1) == 0x000370, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000388, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_PhysMat_1) == 0x0003A0, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_HitActor_1) == 0x0003A8, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_HitComponent_1) == 0x0003B0, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_HitBoneName_1) == 0x0003B8, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_BoneName_1) == 0x0003C0, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_HitItem_1) == 0x0003C8, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_ElementIndex_1) == 0x0003CC, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_FaceIndex_1) == 0x0003D0, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_TraceStart_1) == 0x0003D8, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_TraceEnd_1) == 0x0003F0, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BooleanAND_ReturnValue_1) == 0x000408, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_HitSimplify_S_SimplifiedHitInfo_1) == 0x000410, "Member 'BP_Weapon_C_BulletTrace::CallFunc_HitSimplify_S_SimplifiedHitInfo_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, Temp_int_Loop_Counter_Variable) == 0x000490, "Member 'BP_Weapon_C_BulletTrace::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_Add_IntInt_ReturnValue) == 0x000494, "Member 'BP_Weapon_C_BulletTrace::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, Temp_bool_True_if_break_was_hit_Variable) == 0x000498, "Member 'BP_Weapon_C_BulletTrace::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_Not_PreBool_ReturnValue) == 0x000499, "Member 'BP_Weapon_C_BulletTrace::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_Less_IntInt_ReturnValue) == 0x00049A, "Member 'BP_Weapon_C_BulletTrace::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_CHeckDamageDuplicate_CanAdd) == 0x00049B, "Member 'BP_Weapon_C_BulletTrace::CallFunc_CHeckDamageDuplicate_CanAdd' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BooleanAND_ReturnValue_2) == 0x00049C, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_Array_Get_Item) == 0x0004A0, "Member 'BP_Weapon_C_BulletTrace::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, K2Node_MakeStruct_BPS_DamageInfo) == 0x000588, "Member 'BP_Weapon_C_BulletTrace::K2Node_MakeStruct_BPS_DamageInfo' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_Array_Add_ReturnValue) == 0x000620, "Member 'BP_Weapon_C_BulletTrace::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_Array_Length_ReturnValue) == 0x000624, "Member 'BP_Weapon_C_BulletTrace::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_Less_IntInt_ReturnValue_1) == 0x000628, "Member 'BP_Weapon_C_BulletTrace::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, K2Node_MakeStruct_BPS_DamageInfo_1) == 0x000630, "Member 'BP_Weapon_C_BulletTrace::K2Node_MakeStruct_BPS_DamageInfo_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BooleanAND_ReturnValue_3) == 0x0006C8, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_Array_Add_ReturnValue_1) == 0x0006CC, "Member 'BP_Weapon_C_BulletTrace::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0006D0, "Member 'BP_Weapon_C_BulletTrace::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0006D8, "Member 'BP_Weapon_C_BulletTrace::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0006E0, "Member 'BP_Weapon_C_BulletTrace::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_ShootDirection_BeginPoint) == 0x0006E8, "Member 'BP_Weapon_C_BulletTrace::CallFunc_ShootDirection_BeginPoint' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_ShootDirection_EndPoint) == 0x000700, "Member 'BP_Weapon_C_BulletTrace::CallFunc_ShootDirection_EndPoint' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_ShootDirection_CamForwardVector) == 0x000718, "Member 'BP_Weapon_C_BulletTrace::CallFunc_ShootDirection_CamForwardVector' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_RandomUnitVectorInConeInDegrees_ReturnValue) == 0x000730, "Member 'BP_Weapon_C_BulletTrace::CallFunc_RandomUnitVectorInConeInDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_LineTraceSingle_OutHit) == 0x000748, "Member 'BP_Weapon_C_BulletTrace::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_LineTraceSingle_ReturnValue) == 0x000830, "Member 'BP_Weapon_C_BulletTrace::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000838, "Member 'BP_Weapon_C_BulletTrace::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_bBlockingHit_2) == 0x000850, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_bBlockingHit_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_bInitialOverlap_2) == 0x000851, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_bInitialOverlap_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_Time_2) == 0x000854, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_Time_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_Distance_2) == 0x000858, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_Distance_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_Location_2) == 0x000860, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_Location_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_ImpactPoint_2) == 0x000878, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_ImpactPoint_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_Normal_2) == 0x000890, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_Normal_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_ImpactNormal_2) == 0x0008A8, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_ImpactNormal_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_PhysMat_2) == 0x0008C0, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_PhysMat_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_HitActor_2) == 0x0008C8, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_HitActor_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_HitComponent_2) == 0x0008D0, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_HitComponent_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_HitBoneName_2) == 0x0008D8, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_HitBoneName_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_BoneName_2) == 0x0008E0, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_BoneName_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_HitItem_2) == 0x0008E8, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_HitItem_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_ElementIndex_2) == 0x0008EC, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_ElementIndex_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_FaceIndex_2) == 0x0008F0, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_FaceIndex_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_TraceStart_2) == 0x0008F8, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_TraceStart_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_BreakHitResult_TraceEnd_2) == 0x000910, "Member 'BP_Weapon_C_BulletTrace::CallFunc_BreakHitResult_TraceEnd_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_Add_VectorVector_ReturnValue) == 0x000928, "Member 'BP_Weapon_C_BulletTrace::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_SelectVector_ReturnValue) == 0x000940, "Member 'BP_Weapon_C_BulletTrace::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_LineTraceMulti_OutHits) == 0x000958, "Member 'BP_Weapon_C_BulletTrace::CallFunc_LineTraceMulti_OutHits' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_BulletTrace, CallFunc_LineTraceMulti_ReturnValue) == 0x000968, "Member 'BP_Weapon_C_BulletTrace::CallFunc_LineTraceMulti_ReturnValue' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.CalculateDamage
// 0x0230 (0x0230 - 0x0000)
struct BP_Weapon_C_CalculateDamage final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x00E8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        ResultDamage;                                      // 0x00F0(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      HitSurvivalPlayer;                                 // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	double                                        Damage;                                            // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A[0x2];                                      // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAVS_VehicleMaster_C*                   K2Node_DynamicCast_AsAVS_Vehicle_Master;           // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x3];                                      // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Float                               CallFunc_GetDataTableRowFromName_OutRow;           // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F2[0x6];                                      // 0x01F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AZombie_C*                              K2Node_DynamicCast_AsZombie;                       // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_CalculateDamage) == 0x000008, "Wrong alignment on BP_Weapon_C_CalculateDamage");
static_assert(sizeof(BP_Weapon_C_CalculateDamage) == 0x000230, "Wrong size on BP_Weapon_C_CalculateDamage");
static_assert(offsetof(BP_Weapon_C_CalculateDamage, Pawn) == 0x000000, "Member 'BP_Weapon_C_CalculateDamage::Pawn' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CalculateDamage, Hit) == 0x000008, "Member 'BP_Weapon_C_CalculateDamage::Hit' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CalculateDamage, ResultDamage) == 0x0000F0, "Member 'BP_Weapon_C_CalculateDamage::ResultDamage' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CalculateDamage, HitSurvivalPlayer) == 0x0000F8, "Member 'BP_Weapon_C_CalculateDamage::HitSurvivalPlayer' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CalculateDamage, Damage) == 0x000100, "Member 'BP_Weapon_C_CalculateDamage::Damage' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CalculateDamage, CallFunc_BreakHitResult_bBlockingHit) == 0x000108, "Member 'BP_Weapon_C_CalculateDamage::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CalculateDamage, CallFunc_BreakHitResult_bInitialOverlap) == 0x000109, "Member 'BP_Weapon_C_CalculateDamage::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CalculateDamage, CallFunc_BreakHitResult_Time) == 0x00010C, "Member 'BP_Weapon_C_CalculateDamage::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CalculateDamage, CallFunc_BreakHitResult_Distance) == 0x000110, "Member 'BP_Weapon_C_CalculateDamage::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CalculateDamage, CallFunc_BreakHitResult_Location) == 0x000118, "Member 'BP_Weapon_C_CalculateDamage::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CalculateDamage, CallFunc_BreakHitResult_ImpactPoint) == 0x000130, "Member 'BP_Weapon_C_CalculateDamage::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CalculateDamage, CallFunc_BreakHitResult_Normal) == 0x000148, "Member 'BP_Weapon_C_CalculateDamage::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CalculateDamage, CallFunc_BreakHitResult_ImpactNormal) == 0x000160, "Member 'BP_Weapon_C_CalculateDamage::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CalculateDamage, CallFunc_BreakHitResult_PhysMat) == 0x000178, "Member 'BP_Weapon_C_CalculateDamage::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CalculateDamage, CallFunc_BreakHitResult_HitActor) == 0x000180, "Member 'BP_Weapon_C_CalculateDamage::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CalculateDamage, CallFunc_BreakHitResult_HitComponent) == 0x000188, "Member 'BP_Weapon_C_CalculateDamage::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CalculateDamage, CallFunc_BreakHitResult_HitBoneName) == 0x000190, "Member 'BP_Weapon_C_CalculateDamage::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CalculateDamage, CallFunc_BreakHitResult_BoneName) == 0x000198, "Member 'BP_Weapon_C_CalculateDamage::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CalculateDamage, CallFunc_BreakHitResult_HitItem) == 0x0001A0, "Member 'BP_Weapon_C_CalculateDamage::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CalculateDamage, CallFunc_BreakHitResult_ElementIndex) == 0x0001A4, "Member 'BP_Weapon_C_CalculateDamage::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CalculateDamage, CallFunc_BreakHitResult_FaceIndex) == 0x0001A8, "Member 'BP_Weapon_C_CalculateDamage::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CalculateDamage, CallFunc_BreakHitResult_TraceStart) == 0x0001B0, "Member 'BP_Weapon_C_CalculateDamage::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CalculateDamage, CallFunc_BreakHitResult_TraceEnd) == 0x0001C8, "Member 'BP_Weapon_C_CalculateDamage::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CalculateDamage, K2Node_DynamicCast_AsAVS_Vehicle_Master) == 0x0001E0, "Member 'BP_Weapon_C_CalculateDamage::K2Node_DynamicCast_AsAVS_Vehicle_Master' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CalculateDamage, K2Node_DynamicCast_bSuccess) == 0x0001E8, "Member 'BP_Weapon_C_CalculateDamage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CalculateDamage, CallFunc_GetDataTableRowFromName_OutRow) == 0x0001EC, "Member 'BP_Weapon_C_CalculateDamage::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CalculateDamage, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0001F0, "Member 'BP_Weapon_C_CalculateDamage::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CalculateDamage, K2Node_SwitchName_CmpSuccess) == 0x0001F1, "Member 'BP_Weapon_C_CalculateDamage::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CalculateDamage, K2Node_DynamicCast_AsZombie) == 0x0001F8, "Member 'BP_Weapon_C_CalculateDamage::K2Node_DynamicCast_AsZombie' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CalculateDamage, K2Node_DynamicCast_bSuccess_1) == 0x000200, "Member 'BP_Weapon_C_CalculateDamage::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CalculateDamage, K2Node_DynamicCast_AsSurvival_Player) == 0x000208, "Member 'BP_Weapon_C_CalculateDamage::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CalculateDamage, K2Node_DynamicCast_bSuccess_2) == 0x000210, "Member 'BP_Weapon_C_CalculateDamage::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CalculateDamage, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000218, "Member 'BP_Weapon_C_CalculateDamage::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CalculateDamage, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000220, "Member 'BP_Weapon_C_CalculateDamage::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CalculateDamage, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000228, "Member 'BP_Weapon_C_CalculateDamage::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.CalculateSubtrahendForPhased
// 0x0010 (0x0010 - 0x0000)
struct BP_Weapon_C_CalculateSubtrahendForPhased final
{
public:
	double                                        Subtrahend;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_CalculateSubtrahendForPhased) == 0x000008, "Wrong alignment on BP_Weapon_C_CalculateSubtrahendForPhased");
static_assert(sizeof(BP_Weapon_C_CalculateSubtrahendForPhased) == 0x000010, "Wrong size on BP_Weapon_C_CalculateSubtrahendForPhased");
static_assert(offsetof(BP_Weapon_C_CalculateSubtrahendForPhased, Subtrahend) == 0x000000, "Member 'BP_Weapon_C_CalculateSubtrahendForPhased::Subtrahend' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CalculateSubtrahendForPhased, K2Node_SwitchName_CmpSuccess) == 0x000008, "Member 'BP_Weapon_C_CalculateSubtrahendForPhased::K2Node_SwitchName_CmpSuccess' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.CallRecoilPowerChange
// 0x0050 (0x0050 - 0x0000)
struct BP_Weapon_C_CallRecoilPowerChange final
{
public:
	double                                        Param_RecoilPower;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Weaponry_C>       K2Node_DynamicCast_AsBPI_Weaponry;                 // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_WP_GetSkeletalMesh_SkinnedMesh;           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WP_GetSkeletalMesh_Success;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Weaponry_C>       K2Node_DynamicCast_AsBPI_Weaponry_1;               // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_CallRecoilPowerChange) == 0x000008, "Wrong alignment on BP_Weapon_C_CallRecoilPowerChange");
static_assert(sizeof(BP_Weapon_C_CallRecoilPowerChange) == 0x000050, "Wrong size on BP_Weapon_C_CallRecoilPowerChange");
static_assert(offsetof(BP_Weapon_C_CallRecoilPowerChange, Param_RecoilPower) == 0x000000, "Member 'BP_Weapon_C_CallRecoilPowerChange::Param_RecoilPower' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CallRecoilPowerChange, K2Node_DynamicCast_AsBPI_Weaponry) == 0x000008, "Member 'BP_Weapon_C_CallRecoilPowerChange::K2Node_DynamicCast_AsBPI_Weaponry' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CallRecoilPowerChange, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Weapon_C_CallRecoilPowerChange::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CallRecoilPowerChange, CallFunc_WP_GetSkeletalMesh_SkinnedMesh) == 0x000020, "Member 'BP_Weapon_C_CallRecoilPowerChange::CallFunc_WP_GetSkeletalMesh_SkinnedMesh' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CallRecoilPowerChange, CallFunc_WP_GetSkeletalMesh_Success) == 0x000028, "Member 'BP_Weapon_C_CallRecoilPowerChange::CallFunc_WP_GetSkeletalMesh_Success' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CallRecoilPowerChange, CallFunc_GetAnimInstance_ReturnValue) == 0x000030, "Member 'BP_Weapon_C_CallRecoilPowerChange::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CallRecoilPowerChange, K2Node_DynamicCast_AsBPI_Weaponry_1) == 0x000038, "Member 'BP_Weapon_C_CallRecoilPowerChange::K2Node_DynamicCast_AsBPI_Weaponry_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CallRecoilPowerChange, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BP_Weapon_C_CallRecoilPowerChange::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.CanShoot
// 0x000C (0x000C - 0x0000)
struct BP_Weapon_C_CanShoot final
{
public:
	bool                                          bIsCan;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_CanShoot) == 0x000001, "Wrong alignment on BP_Weapon_C_CanShoot");
static_assert(sizeof(BP_Weapon_C_CanShoot) == 0x00000C, "Wrong size on BP_Weapon_C_CanShoot");
static_assert(offsetof(BP_Weapon_C_CanShoot, bIsCan) == 0x000000, "Member 'BP_Weapon_C_CanShoot::bIsCan' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CanShoot, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000001, "Member 'BP_Weapon_C_CanShoot::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CanShoot, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BP_Weapon_C_CanShoot::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CanShoot, CallFunc_Not_PreBool_ReturnValue_1) == 0x000003, "Member 'BP_Weapon_C_CanShoot::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CanShoot, CallFunc_Greater_IntInt_ReturnValue) == 0x000004, "Member 'BP_Weapon_C_CanShoot::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CanShoot, CallFunc_Not_PreBool_ReturnValue_2) == 0x000005, "Member 'BP_Weapon_C_CanShoot::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CanShoot, CallFunc_BooleanOR_ReturnValue) == 0x000006, "Member 'BP_Weapon_C_CanShoot::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CanShoot, CallFunc_BooleanAND_ReturnValue) == 0x000007, "Member 'BP_Weapon_C_CanShoot::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CanShoot, CallFunc_BooleanAND_ReturnValue_1) == 0x000008, "Member 'BP_Weapon_C_CanShoot::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CanShoot, CallFunc_BooleanAND_ReturnValue_2) == 0x000009, "Member 'BP_Weapon_C_CanShoot::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CanShoot, CallFunc_BooleanAND_ReturnValue_3) == 0x00000A, "Member 'BP_Weapon_C_CanShoot::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CanShoot, CallFunc_BooleanAND_ReturnValue_4) == 0x00000B, "Member 'BP_Weapon_C_CanShoot::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.ChangeFireMode
// 0x0010 (0x0010 - 0x0000)
struct BP_Weapon_C_ChangeFireMode final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Weapon_C_ChangeFireMode) == 0x000008, "Wrong alignment on BP_Weapon_C_ChangeFireMode");
static_assert(sizeof(BP_Weapon_C_ChangeFireMode) == 0x000010, "Wrong size on BP_Weapon_C_ChangeFireMode");
static_assert(offsetof(BP_Weapon_C_ChangeFireMode, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'BP_Weapon_C_ChangeFireMode::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ChangeFireMode, CallFunc_PlayEvent2D_ReturnValue) == 0x000008, "Member 'BP_Weapon_C_ChangeFireMode::CallFunc_PlayEvent2D_ReturnValue' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.CheckAvailabilityAmmoType
// 0x0030 (0x0030 - 0x0000)
struct BP_Weapon_C_CheckAvailabilityAmmoType final
{
public:
	bool                                          bIsPlayerChangeAmmoType;                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsChangedAmmoType;                                // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_AmmoClass                                SettedAmmoClass;                                   // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_AmmoType                                 SettedAmmoType;                                    // 0x0003(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalCurrentMaxAmmo;                               // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_AmmoType                                 LocalAmmoType;                                     // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_AmmoClass                                LocalAmmoClass;                                    // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_AmmoType                                 CallFunc_SelectAmmoTypes_AmmoType_Default;         // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_AmmoType                                 CallFunc_SelectAmmoTypes_AmmoType_Piercing;        // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Add_ByteByte_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_AmmoType                                 Temp_byte_Variable;                                // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_AmmoClass                                Temp_byte_Variable_1;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_AmmoType                                 K2Node_Select_Default;                             // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetItemCountByName_ReturnedCount;         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_CheckAvailabilityAmmoType) == 0x000008, "Wrong alignment on BP_Weapon_C_CheckAvailabilityAmmoType");
static_assert(sizeof(BP_Weapon_C_CheckAvailabilityAmmoType) == 0x000030, "Wrong size on BP_Weapon_C_CheckAvailabilityAmmoType");
static_assert(offsetof(BP_Weapon_C_CheckAvailabilityAmmoType, bIsPlayerChangeAmmoType) == 0x000000, "Member 'BP_Weapon_C_CheckAvailabilityAmmoType::bIsPlayerChangeAmmoType' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CheckAvailabilityAmmoType, bIsChangedAmmoType) == 0x000001, "Member 'BP_Weapon_C_CheckAvailabilityAmmoType::bIsChangedAmmoType' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CheckAvailabilityAmmoType, SettedAmmoClass) == 0x000002, "Member 'BP_Weapon_C_CheckAvailabilityAmmoType::SettedAmmoClass' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CheckAvailabilityAmmoType, SettedAmmoType) == 0x000003, "Member 'BP_Weapon_C_CheckAvailabilityAmmoType::SettedAmmoType' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CheckAvailabilityAmmoType, LocalCurrentMaxAmmo) == 0x000004, "Member 'BP_Weapon_C_CheckAvailabilityAmmoType::LocalCurrentMaxAmmo' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CheckAvailabilityAmmoType, LocalAmmoType) == 0x000008, "Member 'BP_Weapon_C_CheckAvailabilityAmmoType::LocalAmmoType' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CheckAvailabilityAmmoType, LocalAmmoClass) == 0x000009, "Member 'BP_Weapon_C_CheckAvailabilityAmmoType::LocalAmmoClass' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CheckAvailabilityAmmoType, CallFunc_SelectAmmoTypes_AmmoType_Default) == 0x00000A, "Member 'BP_Weapon_C_CheckAvailabilityAmmoType::CallFunc_SelectAmmoTypes_AmmoType_Default' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CheckAvailabilityAmmoType, CallFunc_SelectAmmoTypes_AmmoType_Piercing) == 0x00000B, "Member 'BP_Weapon_C_CheckAvailabilityAmmoType::CallFunc_SelectAmmoTypes_AmmoType_Piercing' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CheckAvailabilityAmmoType, K2Node_SwitchEnum_CmpSuccess) == 0x00000C, "Member 'BP_Weapon_C_CheckAvailabilityAmmoType::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CheckAvailabilityAmmoType, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000D, "Member 'BP_Weapon_C_CheckAvailabilityAmmoType::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CheckAvailabilityAmmoType, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000E, "Member 'BP_Weapon_C_CheckAvailabilityAmmoType::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CheckAvailabilityAmmoType, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000010, "Member 'BP_Weapon_C_CheckAvailabilityAmmoType::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CheckAvailabilityAmmoType, CallFunc_Add_ByteByte_ReturnValue) == 0x000020, "Member 'BP_Weapon_C_CheckAvailabilityAmmoType::CallFunc_Add_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CheckAvailabilityAmmoType, CallFunc_GetValidValue_ReturnValue) == 0x000021, "Member 'BP_Weapon_C_CheckAvailabilityAmmoType::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CheckAvailabilityAmmoType, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000022, "Member 'BP_Weapon_C_CheckAvailabilityAmmoType::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CheckAvailabilityAmmoType, Temp_byte_Variable) == 0x000023, "Member 'BP_Weapon_C_CheckAvailabilityAmmoType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CheckAvailabilityAmmoType, Temp_byte_Variable_1) == 0x000024, "Member 'BP_Weapon_C_CheckAvailabilityAmmoType::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CheckAvailabilityAmmoType, K2Node_Select_Default) == 0x000025, "Member 'BP_Weapon_C_CheckAvailabilityAmmoType::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CheckAvailabilityAmmoType, CallFunc_GetItemCountByName_ReturnedCount) == 0x000028, "Member 'BP_Weapon_C_CheckAvailabilityAmmoType::CallFunc_GetItemCountByName_ReturnedCount' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CheckAvailabilityAmmoType, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00002C, "Member 'BP_Weapon_C_CheckAvailabilityAmmoType::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CheckAvailabilityAmmoType, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x00002D, "Member 'BP_Weapon_C_CheckAvailabilityAmmoType::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CheckAvailabilityAmmoType, CallFunc_BooleanAND_ReturnValue) == 0x00002E, "Member 'BP_Weapon_C_CheckAvailabilityAmmoType::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.CHeckDamageDuplicate
// 0x00E8 (0x00E8 - 0x0000)
struct BP_Weapon_C_CHeckDamageDuplicate final
{
public:
	class UObject*                                A;                                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FBPS_DamageInfo>                Array;                                             // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          CanAdd;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBPS_DamageInfo                        CallFunc_Array_Get_Item;                           // 0x0028(0x0098)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_CHeckDamageDuplicate) == 0x000008, "Wrong alignment on BP_Weapon_C_CHeckDamageDuplicate");
static_assert(sizeof(BP_Weapon_C_CHeckDamageDuplicate) == 0x0000E8, "Wrong size on BP_Weapon_C_CHeckDamageDuplicate");
static_assert(offsetof(BP_Weapon_C_CHeckDamageDuplicate, A) == 0x000000, "Member 'BP_Weapon_C_CHeckDamageDuplicate::A' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CHeckDamageDuplicate, Array) == 0x000008, "Member 'BP_Weapon_C_CHeckDamageDuplicate::Array' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CHeckDamageDuplicate, CanAdd) == 0x000018, "Member 'BP_Weapon_C_CHeckDamageDuplicate::CanAdd' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CHeckDamageDuplicate, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_Weapon_C_CHeckDamageDuplicate::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CHeckDamageDuplicate, Temp_bool_True_if_break_was_hit_Variable) == 0x000020, "Member 'BP_Weapon_C_CHeckDamageDuplicate::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CHeckDamageDuplicate, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_Weapon_C_CHeckDamageDuplicate::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CHeckDamageDuplicate, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_Weapon_C_CHeckDamageDuplicate::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CHeckDamageDuplicate, CallFunc_Not_PreBool_ReturnValue) == 0x0000C0, "Member 'BP_Weapon_C_CHeckDamageDuplicate::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CHeckDamageDuplicate, CallFunc_GetOwner_ReturnValue) == 0x0000C8, "Member 'BP_Weapon_C_CHeckDamageDuplicate::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CHeckDamageDuplicate, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000D0, "Member 'BP_Weapon_C_CHeckDamageDuplicate::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CHeckDamageDuplicate, Temp_int_Loop_Counter_Variable) == 0x0000D4, "Member 'BP_Weapon_C_CHeckDamageDuplicate::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CHeckDamageDuplicate, CallFunc_Less_IntInt_ReturnValue) == 0x0000D8, "Member 'BP_Weapon_C_CHeckDamageDuplicate::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CHeckDamageDuplicate, CallFunc_Add_IntInt_ReturnValue) == 0x0000DC, "Member 'BP_Weapon_C_CHeckDamageDuplicate::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CHeckDamageDuplicate, CallFunc_BooleanAND_ReturnValue) == 0x0000E0, "Member 'BP_Weapon_C_CHeckDamageDuplicate::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.CheckForDrySound
// 0x0058 (0x0058 - 0x0000)
struct BP_Weapon_C_CheckForDrySound final
{
public:
	EBPE_Weapon_Type                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_4;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_5;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_6;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             K2Node_Select_Default;                             // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_PlayEventWithOcclusion_FMODAudioComponent; // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_CheckForDrySound) == 0x000008, "Wrong alignment on BP_Weapon_C_CheckForDrySound");
static_assert(sizeof(BP_Weapon_C_CheckForDrySound) == 0x000058, "Wrong size on BP_Weapon_C_CheckForDrySound");
static_assert(offsetof(BP_Weapon_C_CheckForDrySound, Temp_byte_Variable) == 0x000000, "Member 'BP_Weapon_C_CheckForDrySound::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CheckForDrySound, Temp_object_Variable) == 0x000008, "Member 'BP_Weapon_C_CheckForDrySound::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CheckForDrySound, Temp_object_Variable_1) == 0x000010, "Member 'BP_Weapon_C_CheckForDrySound::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CheckForDrySound, Temp_object_Variable_2) == 0x000018, "Member 'BP_Weapon_C_CheckForDrySound::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CheckForDrySound, Temp_object_Variable_3) == 0x000020, "Member 'BP_Weapon_C_CheckForDrySound::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CheckForDrySound, Temp_object_Variable_4) == 0x000028, "Member 'BP_Weapon_C_CheckForDrySound::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CheckForDrySound, Temp_object_Variable_5) == 0x000030, "Member 'BP_Weapon_C_CheckForDrySound::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CheckForDrySound, Temp_object_Variable_6) == 0x000038, "Member 'BP_Weapon_C_CheckForDrySound::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CheckForDrySound, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000040, "Member 'BP_Weapon_C_CheckForDrySound::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CheckForDrySound, K2Node_Select_Default) == 0x000048, "Member 'BP_Weapon_C_CheckForDrySound::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_CheckForDrySound, CallFunc_PlayEventWithOcclusion_FMODAudioComponent) == 0x000050, "Member 'BP_Weapon_C_CheckForDrySound::CallFunc_PlayEventWithOcclusion_FMODAudioComponent' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.CheckWeapEffector
// 0x0001 (0x0001 - 0x0000)
struct BP_Weapon_C_CheckWeapEffector final
{
public:
	bool                                          HipFire;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_CheckWeapEffector) == 0x000001, "Wrong alignment on BP_Weapon_C_CheckWeapEffector");
static_assert(sizeof(BP_Weapon_C_CheckWeapEffector) == 0x000001, "Wrong size on BP_Weapon_C_CheckWeapEffector");
static_assert(offsetof(BP_Weapon_C_CheckWeapEffector, HipFire) == 0x000000, "Member 'BP_Weapon_C_CheckWeapEffector::HipFire' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.DelayDecalSpawn
// 0x0048 (0x0048 - 0x0000)
struct BP_Weapon_C_DelayDecalSpawn final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Forward;                                           // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     DecalMaterial;                                     // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         ActorsToIgnore;                                    // 0x0038(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_Weapon_C_DelayDecalSpawn) == 0x000008, "Wrong alignment on BP_Weapon_C_DelayDecalSpawn");
static_assert(sizeof(BP_Weapon_C_DelayDecalSpawn) == 0x000048, "Wrong size on BP_Weapon_C_DelayDecalSpawn");
static_assert(offsetof(BP_Weapon_C_DelayDecalSpawn, Location) == 0x000000, "Member 'BP_Weapon_C_DelayDecalSpawn::Location' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_DelayDecalSpawn, Forward) == 0x000018, "Member 'BP_Weapon_C_DelayDecalSpawn::Forward' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_DelayDecalSpawn, DecalMaterial) == 0x000030, "Member 'BP_Weapon_C_DelayDecalSpawn::DecalMaterial' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_DelayDecalSpawn, ActorsToIgnore) == 0x000038, "Member 'BP_Weapon_C_DelayDecalSpawn::ActorsToIgnore' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.DropItemServer
// 0x0220 (0x0220 - 0x0000)
struct BP_Weapon_C_DropItemServer final
{
public:
	struct FFItemInfo                             F_DroppedItemInfo;                                 // 0x0000(0x0220)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_DropItemServer) == 0x000008, "Wrong alignment on BP_Weapon_C_DropItemServer");
static_assert(sizeof(BP_Weapon_C_DropItemServer) == 0x000220, "Wrong size on BP_Weapon_C_DropItemServer");
static_assert(offsetof(BP_Weapon_C_DropItemServer, F_DroppedItemInfo) == 0x000000, "Member 'BP_Weapon_C_DropItemServer::F_DroppedItemInfo' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.EnableCollision
// 0x0001 (0x0001 - 0x0000)
struct BP_Weapon_C_EnableCollision final
{
public:
	bool                                          Activation;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_EnableCollision) == 0x000001, "Wrong alignment on BP_Weapon_C_EnableCollision");
static_assert(sizeof(BP_Weapon_C_EnableCollision) == 0x000001, "Wrong size on BP_Weapon_C_EnableCollision");
static_assert(offsetof(BP_Weapon_C_EnableCollision, Activation) == 0x000000, "Member 'BP_Weapon_C_EnableCollision::Activation' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.ExecuteUbergraph_BP_Weapon
// 0x29E0 (0x29E0 - 0x0000)
struct BP_Weapon_C_ExecuteUbergraph_BP_Weapon final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_State;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_RecoilPower;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Aim;                                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RebaseLocalOriginOntoZero_ReturnValue;    // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RebaseLocalOriginOntoZero_ReturnValue_1;  // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12A[0x6];                                      // 0x012A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ADestructibleActor*                     K2Node_DynamicCast_AsDestructible_Actor;           // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13B[0x5];                                      // 0x013B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_RebaseLocalOriginOntoZero_ReturnValue_2;  // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RebaseLocalOriginOntoZero_ReturnValue_3;  // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_MakeHitResult_ReturnValue;                // 0x0170(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ABP_Weapon_C*                           K2Node_Event_NewParam;                             // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_HitHandling_ImpactPoint;                  // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_HitHandling_ImpactNormal;                 // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_HitHandling_SurfaceType;                  // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_292[0x6];                                      // 0x0292(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x02B0(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x02C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x02D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x02F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0308(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FindTargetForMelee_Target;                // 0x0320(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindTargetForMelee_Finded;                // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_329[0x7];                                      // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     CallFunc_CapsuleTraceMulti_OutHits;                // 0x0330(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_CapsuleTraceMulti_ReturnValue;            // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341[0x7];                                      // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_FindBestTarget_Target;                    // 0x0348(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_FindBestTarget_Finded;                    // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0431(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent__PulledTrigger;                 // 0x0432(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0433(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_434[0x4];                                      // 0x0434(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0438(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0450(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0469(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x046A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanShoot_bIsCan;                          // 0x046B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46C[0x4];                                      // 0x046C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0470(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             K2Node_Event_TailSound;                            // 0x0488(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0494(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_495[0x3];                                      // 0x0495(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODAudioComponent*                    CallFunc_FMODPlayEventAttached_ReturnValue;        // 0x0498(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x04A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x04A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x04A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A4[0x4];                                      // 0x04A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x04B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Forward_1;                      // 0x04C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_CustomEvent_DecalMaterial;                  // 0x04E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_CustomEvent_ActorsToIgnore;                 // 0x04E8(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x04F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0510(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDecalDelaySpawner_C*                   CallFunc_SpawnObject_ReturnValue;                  // 0x0528(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0530(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0548(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0630(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0631(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0632(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_633[0x1];                                      // 0x0633(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0634(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0638(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63C[0x4];                                      // 0x063C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0640(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0658(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0670(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0688(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x06A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x06A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x06B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x06B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x06C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x06C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x06CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x06D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D4[0x4];                                      // 0x06D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x06D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x06F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0708(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0720(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0728(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0740(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0748(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0750(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_751[0x7];                                      // 0x0751(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Weaponry_C>       K2Node_DynamicCast_AsBPI_Weaponry;                 // 0x0758(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0768(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_769[0x7];                                      // 0x0769(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_WP_GetSkeletalMesh_SkinnedMesh;           // 0x0770(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WP_GetSkeletalMesh_Success;               // 0x0778(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_779[0x7];                                      // 0x0779(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0780(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0788(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0789(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x078A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78B[0x5];                                      // 0x078B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBPS_DamageInfo>                K2Node_MakeArray_Array_1;                          // 0x0790(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class UAnimMontage*                           Temp_object_Variable;                              // 0x07A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x07A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x07B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x07C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ISurvInterface_C>      CallFunc_BPI_CameraShake_self_CastInput;           // 0x07D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Spawn_Transform_Location;       // 0x07E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_Spawn_Transform_Rotation;       // 0x07F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                K2Node_CustomEvent_Spawn_Transform_Scale;          // 0x0810(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESpawnActorCollisionHandlingMethod            K2Node_CustomEvent_CollisionHandlingOverride;      // 0x0828(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_829[0x7];                                      // 0x0829(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Owner;                          // 0x0830(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FBPS_WeaponData                        K2Node_CustomEvent_WeaponData;                     // 0x0838(0x04C0)(HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ShowTrace;                      // 0x0CF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CF9[0x7];                                      // 0x0CF9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         K2Node_CustomEvent_NiagaraSystem;                  // 0x0D00(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_CustomEvent_Instigator;                     // 0x0D08(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0D10(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EStanceState                                  Temp_byte_Variable;                                // 0x0D70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D71[0x7];                                      // 0x0D71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0D78(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ISurvAnimInterface_C>  K2Node_DynamicCast_AsSurv_Anim_Interface;          // 0x0D80(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0D90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetSpineMotageBool_Nothing;               // 0x0D91(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D92[0x6];                                      // 0x0D92(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BaseProjectile_C*                   CallFunc_FinishSpawningActor_ReturnValue;          // 0x0D98(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0DA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0DA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0DB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0DB1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0DB2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DB3[0x5];                                      // 0x0DB3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_LoadAnimMontage_AnimMontage;              // 0x0DB8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_LoadAnimMontage_AnimMontage_1;            // 0x0DC0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x0DC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC9[0x3];                                      // 0x0DC9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0DCC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0DD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD4[0x4];                                      // 0x0DD4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Select_Default;                             // 0x0DD8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0DE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanShoot_bIsCan_1;                        // 0x0DE1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DE2[0x2];                                      // 0x0DE2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0DE4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Start;                          // 0x0DF4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DF5[0x3];                                      // 0x0DF5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x0DF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0E00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0E08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E09[0x3];                                      // 0x0E09(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0E0C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x0E1C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E24[0x4];                                      // 0x0E24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0E28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0E30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E31[0x7];                                      // 0x0E31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0E38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0E40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x0E48(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0E58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_4;                    // 0x0E59(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0E5A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_2;        // 0x0E5B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x0E5C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E64[0x4];                                      // 0x0E64(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0E68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array_2;                          // 0x0E70(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0E80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E81[0x7];                                      // 0x0E81(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     CallFunc_CapsuleTraceMulti_OutHits_1;              // 0x0E88(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_CapsuleTraceMulti_ReturnValue_1;          // 0x0E98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E99[0x7];                                      // 0x0E99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_FindBestTarget_Target_1;                  // 0x0EA0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_FindBestTarget_Finded_1;                  // 0x0F88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F89[0x3];                                      // 0x0F89(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0F8C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0F90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_TimerExistsHandle_ReturnValue;         // 0x0F91(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0F92(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0F93(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x0F94(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInHouse_ReturnValue;                    // 0x0FA4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Supressed;                      // 0x0FA5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA6[0x2];                                      // 0x0FA6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0FA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_WeaponName;                           // 0x0FB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0FB8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0FC0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0FD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0FDC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0FE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_HipFireMode_1;                  // 0x0FE4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FE5[0x3];                                      // 0x0FE5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0FE8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Activation;                     // 0x1000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x1001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x1002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1003[0x1];                                     // 0x1003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x1004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x100C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_100D[0x3];                                     // 0x100D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x1010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x1020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x1021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x1022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x1023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x1024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_5;                   // 0x102C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_5;            // 0x1034(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x1044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1045[0x3];                                     // 0x1045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_6;                   // 0x1048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_7;                   // 0x1050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_6;            // 0x1058(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_7;            // 0x1068(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x1078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1079[0x3];                                     // 0x1079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_8;                   // 0x107C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1084[0x4];                                     // 0x1084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x1088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_1;                       // 0x1090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_8;            // 0x1098(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x10A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A9[0x3];                                     // 0x10A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_9;                   // 0x10AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x10B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10B5[0x3];                                     // 0x10B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_9;            // 0x10B8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x10C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C9[0x7];                                     // 0x10C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x10D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x10D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x10E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x10F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10F1[0x7];                                     // 0x10F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_SimplifiedHitInfo                   CallFunc_HitSimplify_S_SimplifiedHitInfo;          // 0x10F8(0x0080)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x1178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1179[0x3];                                     // 0x1179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_2;                              // 0x117C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1184[0x4];                                     // 0x1184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_StartingPosition;               // 0x1188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FBPS_DamageInfo>                K2Node_CustomEvent_HitInfo;                        // 0x1190(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	bool                                          K2Node_CustomEvent_Fire;                           // 0x11A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A1[0x3];                                     // 0x11A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x11A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBPS_DamageInfo                        CallFunc_Array_Get_Item;                           // 0x11A8(0x0098)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x1240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x1244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1245[0x3];                                     // 0x1245(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x1248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x1250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1251[0xF];                                     // 0x1251(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x1260(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x12C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C1[0x7];                                     // 0x12C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x12C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x12E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x12F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x1310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1311[0x3];                                     // 0x1311(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_10;                  // 0x1314(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_10;           // 0x131C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_132C[0x4];                                     // 0x132C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x1330(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_11;           // 0x1338(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x1348(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x1350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanShoot_bIsCan_2;                        // 0x1351(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x1352(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x1353(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_12;           // 0x1354(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_11;                  // 0x1364(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x136C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_136D[0x3];                                     // 0x136D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_13;           // 0x1370(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_14;           // 0x1380(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_12;                  // 0x1390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_15;           // 0x1398(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_13;                  // 0x13A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_16;           // 0x13B0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_14;                  // 0x13C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x13C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             K2Node_CustomEvent_F_DroppedItemInfo;              // 0x13D0(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_17;           // 0x15F0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x1600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x1608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x1610(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x1628(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x1640(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x1658(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x1670(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SurvGetUniqueID_UniqueID;                 // 0x1688(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_168C[0x4];                                     // 0x168C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x1690(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RebaseLocalOriginOntoZero_ReturnValue_4;  // 0x16A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_PlayEventWithOcclusion_FMODAudioComponent; // 0x16C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_On_;                            // 0x16C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C9[0x7];                                     // 0x16C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x16D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x16D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_2;                       // 0x16E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetDefaultCameraTag_CameraModeTag;        // 0x16E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsPlaySound;                   // 0x16F0(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16F1[0x7];                                     // 0x16F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODAudioComponent*                    CallFunc_PlayEventWithOcclusion_FMODAudioComponent_1; // 0x16F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x1700(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x1701(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x1702(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess_1;                    // 0x1703(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1704[0x4];                                     // 0x1704(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFItemInfo>                     K2Node_MakeArray_Array_3;                          // 0x1708(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	bool                                          K2Node_CustomEvent_HipFireMode;                    // 0x1718(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x1719(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171A[0x6];                                     // 0x171A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x1720(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x1728(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1729[0x7];                                     // 0x1729(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetMeleeWeaponMontage_Output;             // 0x1730(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayLength_ReturnValue;                // 0x1738(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x173C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x173D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_TimerExistsHandle_ReturnValue_1;       // 0x173E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_173F[0x1];                                     // 0x173F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x1740(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvPC_C*                              K2Node_DynamicCast_AsSurv_PC;                      // 0x1748(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x1750(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInHouse_ReturnValue_1;                  // 0x1751(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1752[0x6];                                     // 0x1752(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_4;                // 0x1758(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x1760(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_2;       // 0x1768(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x1770(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x1771(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1772[0x6];                                     // 0x1772(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue;            // 0x1778(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x1780(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_4;        // 0x1788(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x1790(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x1798(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1799[0x7];                                     // 0x1799(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x17A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_5;                // 0x17A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x17B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x17B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_3;       // 0x17C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Recoil_Compensation_for_Train_ReturnValue; // 0x17C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x17D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17D1[0x7];                                     // 0x17D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_Mannequin_C*            K2Node_DynamicCast_AsSurvival_Player_Mannequin;    // 0x17D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x17E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_3;        // 0x17E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x17E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x17E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17E4[0x4];                                     // 0x17E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_2;            // 0x17E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_6;                // 0x17F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_FPFunctions_C>     K2Node_DynamicCast_AsBI_FPFunctions;               // 0x17F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x1808(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x1809(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_180A[0x2];                                     // 0x180A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x180C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x1810(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1814[0x4];                                     // 0x1814(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_3;            // 0x1818(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MinTime_1;                   // 0x1820(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime_1;                   // 0x1824(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_3;                       // 0x1828(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_7;                // 0x1830(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_8;                // 0x1838(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_9;                // 0x1840(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x1848(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1849[0x7];                                     // 0x1849(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x1850(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x1868(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x1880(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1898[0x8];                                     // 0x1898(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x18A0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_3;        // 0x1900(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue_1;         // 0x1908(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x1920(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x1924(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x1928(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_192C[0x4];                                     // 0x192C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x1930(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x1938(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_RotatorRotator_ReturnValue;    // 0x1950(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1951[0x7];                                     // 0x1951(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x1958(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x1960(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_4;        // 0x1968(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x1970(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x1978(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_5;        // 0x1980(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_5;                    // 0x1988(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1989[0x7];                                     // 0x1989(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x1990(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x1998(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_Weapon_Type                              Temp_byte_Variable_1;                              // 0x19A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19A1[0x7];                                     // 0x19A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_6;        // 0x19A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x19B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x19B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x19C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x19C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimelineLength_ReturnValue;            // 0x19D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19D4[0x4];                                     // 0x19D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_5;        // 0x19D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x19E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19E1[0x7];                                     // 0x19E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_2;                              // 0x19E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_7;        // 0x19F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Forward;                        // 0x19F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x19F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19FA[0x6];                                     // 0x19FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_10;               // 0x1A00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimelineLength_ReturnValue_1;          // 0x1A08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A0C[0x4];                                     // 0x1A0C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_6;        // 0x1A10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_FPFunctions_C>     K2Node_DynamicCast_AsBI_FPFunctions_1;             // 0x1A18(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x1A28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A29[0x7];                                     // 0x1A29(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetYawPitch_Yaw;                          // 0x1A30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetYawPitch_Pitch;                        // 0x1A38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_FPFunctions_C>     K2Node_DynamicCast_AsBI_FPFunctions_2;             // 0x1A40(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x1A50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A51[0x7];                                     // 0x1A51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Pitch;                          // 0x1A58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Yaw;                            // 0x1A60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x1A68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A6C[0x4];                                     // 0x1A6C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_4;                        // 0x1A70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_4;                        // 0x1A78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x1A80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x1A88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_5;                        // 0x1A90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_5;                        // 0x1A98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x1AA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x1AA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AAC[0x4];                                     // 0x1AAC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_8;        // 0x1AB0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x1AB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x1AC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x1AC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x1AD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x1AD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x1AE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x1AE8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x1AF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_4;             // 0x1AF9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AFA[0x6];                                     // 0x1AFA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_1;                           // 0x1B00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x1B08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B09[0x7];                                     // 0x1B09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_6;                        // 0x1B10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_6;                        // 0x1B18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x1B20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x1B28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_7;        // 0x1B30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_9;      // 0x1B38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_10;     // 0x1B40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_11;     // 0x1B48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_12;     // 0x1B50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x1B58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_5;           // 0x1B60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x1B68(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_9;        // 0x1B78(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Weaponry_C>       K2Node_DynamicCast_AsBPI_Weaponry_1;               // 0x1B80(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x1B90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B91[0x7];                                     // 0x1B91(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x1B98(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_WP_GetSkeletalMesh_SkinnedMesh_1;         // 0x1BA8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WP_GetSkeletalMesh_Success_1;             // 0x1BB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BB1[0x7];                                     // 0x1BB1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x1BB8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_4;            // 0x1BC8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_1;         // 0x1BD0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage_1;               // 0x1BD8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x1BE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_6;                    // 0x1BE1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x1BE2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BE3[0x5];                                     // 0x1BE3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_2;                           // 0x1BE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBPS_DamageInfo                        K2Node_MakeStruct_BPS_DamageInfo;                  // 0x1BF0(0x0098)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FBPS_DamageInfo>                K2Node_MakeArray_Array_4;                          // 0x1C88(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x1C98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C99[0x7];                                     // 0x1C99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetReloadCharAnim2_NewParam;              // 0x1CA0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetReloadCharAnim2_NewParam_1;            // 0x1CA8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayLength_ReturnValue_1;              // 0x1CB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CB4[0x4];                                     // 0x1CB4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetReloadCharAnim2_NewParam_2;            // 0x1CB8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetPhasedReloadEnd2_NewParam;             // 0x1CC0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetPhasedReloadEnd2_NewParam_1;           // 0x1CC8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayLength_ReturnValue_2;              // 0x1CD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CD4[0x4];                                     // 0x1CD4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetPhasedReloadEnd2_NewParam_2;           // 0x1CD8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetPhasedReloadEnd2_NewParam_3;           // 0x1CE0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetPhasedReloadEnd2_NewParam_4;           // 0x1CE8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetPhasedReloadLoop2_NewParam;            // 0x1CF0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetPhasedReloadLoop2_NewParam_1;          // 0x1CF8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetPhasedReloadLoop2_NewParam_2;          // 0x1D00(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayLength_ReturnValue_3;              // 0x1D08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D0C[0x4];                                     // 0x1D0C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetPhasedReloadLoop2_NewParam_3;          // 0x1D10(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetPhasedReloadBegin2_NewParam;           // 0x1D18(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetPhasedReloadBegin2_NewParam_1;         // 0x1D20(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetPhasedReloadBegin2_NewParam_2;         // 0x1D28(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x1D30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D31[0x3];                                     // 0x1D31(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayLength_ReturnValue_4;              // 0x1D34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_9;                // 0x1D38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D39[0x7];                                     // 0x1D39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetPhasedReloadBegin2_NewParam_3;         // 0x1D40(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x1D48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x1D49(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4A[0x6];                                     // 0x1D4A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x1D50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x1D58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D59[0x7];                                     // 0x1D59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_13;     // 0x1D60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x1D68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_14;     // 0x1D70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x1D78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x1D79(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D7A[0x6];                                     // 0x1D7A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_15;     // 0x1D80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x1D88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_3;                           // 0x1D90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_16;     // 0x1D98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x1DA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_6;           // 0x1DA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x1DB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DB1[0x7];                                     // 0x1DB1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_4;                              // 0x1DB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x1DC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC1[0x7];                                     // 0x1DC1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_4;                           // 0x1DC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckAvailabilityAmmoType_bIsChangedAmmoType; // 0x1DD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_AmmoClass                                CallFunc_CheckAvailabilityAmmoType_SettedAmmoClass; // 0x1DD1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_AmmoType                                 CallFunc_CheckAvailabilityAmmoType_SettedAmmoType; // 0x1DD2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DD3[0x5];                                     // 0x1DD3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_8;        // 0x1DD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_5;                           // 0x1DE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_7;           // 0x1DE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_3;                       // 0x1DF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x1DF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DF9[0x7];                                     // 0x1DF9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_4;      // 0x1E00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_4;                       // 0x1E08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckAvailabilityAmmoType_bIsChangedAmmoType_1; // 0x1E10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_AmmoClass                                CallFunc_CheckAvailabilityAmmoType_SettedAmmoClass_1; // 0x1E11(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_AmmoType                                 CallFunc_CheckAvailabilityAmmoType_SettedAmmoType_1; // 0x1E12(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E13[0x5];                                     // 0x1E13(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_5;      // 0x1E18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x1E20(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemCountByName_ReturnedCount;         // 0x1E30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x1E34(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E35[0x3];                                     // 0x1E35(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_5;                              // 0x1E38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x1E40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x1E41(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_4;        // 0x1E42(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E43[0x5];                                     // 0x1E43(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_6;                           // 0x1E48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_18;           // 0x1E50(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_10;               // 0x1E60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E61[0x7];                                     // 0x1E61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_3;        // 0x1E68(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_5;           // 0x1E70(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x1E88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x1E90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x1E98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x1EA0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_17;     // 0x1F88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_18;     // 0x1F90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_19;     // 0x1F98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x1FA0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x1FB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FBC[0x4];                                     // 0x1FBC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x1FC0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x1FD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemByName_ReturnedCount;              // 0x1FD4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x1FD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x1FDC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2; // 0x1FE0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemByName_ReturnedCount_1;            // 0x1FF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x1FF4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FF5[0x3];                                     // 0x1FF5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_3; // 0x1FF8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x2008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemCountByName_ReturnedCount_1;       // 0x200C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_5;            // 0x2010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x2018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2019[0x3];                                     // 0x2019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x201C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Weaponry_C>       K2Node_DynamicCast_AsBPI_Weaponry_2;               // 0x2020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x2030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2031[0x7];                                     // 0x2031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_WP_GetSkeletalMesh_SkinnedMesh_2;         // 0x2038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WP_GetSkeletalMesh_Success_2;             // 0x2040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2041[0x3];                                     // 0x2041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_19;           // 0x2044(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2054[0x4];                                     // 0x2054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_4;        // 0x2058(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_5;        // 0x2060(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_6;        // 0x2068(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_6;            // 0x2070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x2078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x2079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_11;                // 0x207A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x207B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x207C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_207D[0x3];                                     // 0x207D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             K2Node_Select_Default_7;                           // 0x2080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UFMODEvent>              CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x2088(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_20;           // 0x20B8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_7;        // 0x20C8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x20D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x20D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage_2;               // 0x20E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x20E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20E9[0x7];                                     // 0x20E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x20F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x20F8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x2100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2101[0x3];                                     // 0x2101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x2104(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_2;                            // 0x210C(0x0008)(NoDestructor, HasGetValueTypeHash)
	EStanceState                                  Temp_byte_Variable_2;                              // 0x2114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2115[0x3];                                     // 0x2115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Select_Default_8;                           // 0x2118(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_21;           // 0x2120(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x2130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2131[0x7];                                     // 0x2131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_8;        // 0x2138(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Select_Default_9;                           // 0x2140(0x0008)(NoDestructor, HasGetValueTypeHash)
	TArray<struct FContainerPickupsInfo>          CallFunc_AddItemsToPickup_AddedData1;              // 0x2148(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<struct FContainerPickupsInfo>          CallFunc_AddItemsToPickup_AddedItems1;             // 0x2158(0x0010)(ReferenceParm, ContainsInstancedReference)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_22;           // 0x2168(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_6;                              // 0x2178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_9;        // 0x2180(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_11;                             // 0x2188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2189[0x7];                                     // 0x2189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_10;                          // 0x2190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_6;      // 0x2198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_7;            // 0x21A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_9;        // 0x21A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ISurvAnimInterface_C>  K2Node_DynamicCast_AsSurv_Anim_Interface_1;        // 0x21B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x21C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21C1[0x7];                                     // 0x21C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_20;     // 0x21C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ISurvAnimInterface_C>  K2Node_DynamicCast_AsSurv_Anim_Interface_2;        // 0x21D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x21E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21E1[0x7];                                     // 0x21E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_21;     // 0x21E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetSpineMotageBool_Nothing_1;             // 0x21F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21F1[0x7];                                     // 0x21F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x21F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x2200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x2208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2209[0x7];                                     // 0x2209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_CalculateSubtrahendForPhased_Subtrahend;  // 0x2210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_7;      // 0x2218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_8;            // 0x2220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x2228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2229[0x7];                                     // 0x2229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISurvInterface_C>      K2Node_DynamicCast_AsSurv_Interface;               // 0x2230(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_17;                    // 0x2240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x2241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2242[0x2];                                     // 0x2242(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_23;           // 0x2244(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2254[0x4];                                     // 0x2254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_10;       // 0x2258(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_24;           // 0x2260(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_11;       // 0x2270(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_5;        // 0x2278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x2279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_227A[0x6];                                     // 0x227A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Weaponry_C>       K2Node_DynamicCast_AsBPI_Weaponry_3;               // 0x2280(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_18;                    // 0x2290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2291[0x7];                                     // 0x2291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_WP_GetSkeletalMesh_SkinnedMesh_3;         // 0x2298(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WP_GetSkeletalMesh_Success_3;             // 0x22A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22A1[0x7];                                     // 0x22A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_9;            // 0x22A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_6;        // 0x22B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x22B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22B2[0x6];                                     // 0x22B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_4; // 0x22B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_7;        // 0x22C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22C9[0x3];                                     // 0x22C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetItemCountByName_ReturnedCount_2;       // 0x22CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_11;               // 0x22D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_5;             // 0x22D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x22D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22D3[0x5];                                     // 0x22D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_LoadAnimMontage_AnimMontage_2;            // 0x22D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x22E0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x2340(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AEMptyStatic_C*                         CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x2348(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x2350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2351[0x7];                                     // 0x2351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetReloadPlayRate_PlayRate;               // 0x2358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_10;           // 0x2360(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetReloadPlayRate_PlayRate_1;             // 0x2368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ISurvInterface_C>      K2Node_DynamicCast_AsSurv_Interface_1;             // 0x2370(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_19;                    // 0x2380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2381[0x7];                                     // 0x2381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetReloadPlayRate_PlayRate_2;             // 0x2388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetReloadPlayRate_PlayRate_3;             // 0x2390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetReloadPlayRate_PlayRate_4;             // 0x2398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1; // 0x23A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetReloadPlayRate_PlayRate_5;             // 0x23A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_10;       // 0x23B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x23B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23B9[0x7];                                     // 0x23B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetReloadPlayRate_PlayRate_6;             // 0x23C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetReloadPlayRate_PlayRate_7;             // 0x23C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetReloadPlayRate_PlayRate_8;             // 0x23D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x23D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23DC[0x4];                                     // 0x23DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x23E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_22;     // 0x23E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_11;           // 0x23F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_WeaponAnimBP_C>   K2Node_DynamicCast_AsBPI_Weapon_Anim_BP;           // 0x23F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_20;                    // 0x2408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2409[0x7];                                     // 0x2409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2; // 0x2410(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_12;           // 0x2418(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_WeaponAnimBP_C>   K2Node_DynamicCast_AsBPI_Weapon_Anim_BP_1;         // 0x2420(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_21;                    // 0x2430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x2431(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_17;                   // 0x2432(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2433[0x5];                                     // 0x2433(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_struct_Variable_3;                            // 0x2438(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Weaponry_C>       K2Node_DynamicCast_AsBPI_Weaponry_4;               // 0x2450(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_22;                    // 0x2460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2461[0x7];                                     // 0x2461(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_WP_GetSkeletalMesh_SkinnedMesh_4;         // 0x2468(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WP_GetSkeletalMesh_Success_4;             // 0x2470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2471[0x3];                                     // 0x2471(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x2474(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x2478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2479[0x7];                                     // 0x2479(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_13;           // 0x2480(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_8;        // 0x2488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_9;        // 0x2489(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_248A[0x6];                                     // 0x248A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Weaponry_C>       K2Node_DynamicCast_AsBPI_Weaponry_5;               // 0x2490(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_23;                    // 0x24A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24A1[0x7];                                     // 0x24A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_WP_GetSkeletalMesh_SkinnedMesh_5;         // 0x24A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WP_GetSkeletalMesh_Success_5;             // 0x24B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_10;       // 0x24B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24B2[0x6];                                     // 0x24B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_14;           // 0x24B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ISurvInterface_C>      K2Node_DynamicCast_AsSurv_Interface_2;             // 0x24C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_24;                    // 0x24D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24D1[0x3];                                     // 0x24D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_25;           // 0x24D4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_BulletIn;                       // 0x24E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_12;               // 0x24E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24E6[0x2];                                     // 0x24E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Select_Default_11;                          // 0x24E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_5; // 0x24F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemCountByName_ReturnedCount_3;       // 0x2500(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_13;               // 0x2504(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2505[0x3];                                     // 0x2505(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_26;           // 0x2508(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_12;       // 0x2518(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_6; // 0x2520(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemCountByName_ReturnedCount_4;       // 0x2530(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_18;                   // 0x2534(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_6;          // 0x2535(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2536[0x2];                                     // 0x2536(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_15;           // 0x2538(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_7; // 0x2540(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemCountByName_ReturnedCount_5;       // 0x2550(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_7;          // 0x2554(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2555[0x3];                                     // 0x2555(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_16;           // 0x2558(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ISurvInterface_C>      K2Node_DynamicCast_AsSurv_Interface_3;             // 0x2560(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_25;                    // 0x2570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_12;                             // 0x2571(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2572[0x6];                                     // 0x2572(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             K2Node_Select_Default_12;                          // 0x2578(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_PlayEventWithOcclusion_FMODAudioComponent_2; // 0x2580(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x2588(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x258C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_258D[0x3];                                     // 0x258D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_5;            // 0x2590(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_8;          // 0x2594(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x2595(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ForciblyEnd;                    // 0x2596(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2597[0x1];                                     // 0x2597(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_6;            // 0x2598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x259C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x259D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x259E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x259F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_9;                  // 0x25A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_14;               // 0x25A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25A2[0x6];                                     // 0x25A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Select_Default_13;                          // 0x25A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayLength_ReturnValue_5;              // 0x25B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25B4[0x4];                                     // 0x25B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_11;       // 0x25B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_8; // 0x25C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x25D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x25E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemCountByName_ReturnedCount_6;       // 0x25F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x25F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_19;                   // 0x25F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25F9[0x3];                                     // 0x25F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_7;            // 0x25FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_9; // 0x2600(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_6;             // 0x2610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2611[0x3];                                     // 0x2611(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetItemByName_ReturnedCount_2;            // 0x2614(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_7;             // 0x2618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_12;                // 0x2619(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_11;       // 0x261A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_261B[0x5];                                     // 0x261B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_10; // 0x2620(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Weaponry_C>       K2Node_DynamicCast_AsBPI_Weaponry_6;               // 0x2630(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_26;                    // 0x2640(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2641[0x3];                                     // 0x2641(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetItemCountByName_ReturnedCount_7;       // 0x2644(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_WP_GetSkeletalMesh_SkinnedMesh_6;         // 0x2648(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WP_GetSkeletalMesh_Success_6;             // 0x2650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_8;             // 0x2651(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2652[0x6];                                     // 0x2652(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_17;           // 0x2658(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ISurvInterface_C>      K2Node_DynamicCast_AsSurv_Interface_4;             // 0x2660(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_27;                    // 0x2670(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_15;               // 0x2671(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_13;                // 0x2672(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_14;                // 0x2673(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_15;                // 0x2674(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsFastReloadMulti;             // 0x2675(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Aim;                            // 0x2676(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2677[0x1];                                     // 0x2677(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x2678(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_267C[0x4];                                     // 0x267C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default_14;                          // 0x2680(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_15;                          // 0x2690(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x26A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue_1;  // 0x26B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_7;                        // 0x26C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_7;                        // 0x26C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_8;                        // 0x26D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_8;                        // 0x26D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x26E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_3;         // 0x26E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_23;     // 0x26F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_24;     // 0x26F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_25;     // 0x2700(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_26;     // 0x2708(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_4;               // 0x2710(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_9;          // 0x2720(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_16;                // 0x2721(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_7;                    // 0x2722(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2723[0x5];                                     // 0x2723(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_27;     // 0x2728(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_28;     // 0x2730(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_29;     // 0x2738(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x2740(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_3;               // 0x2741(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x2742(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x2743(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_3;                     // 0x2744(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2745[0xB];                                     // 0x2745(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x2750(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x27B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x27C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x27E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x27F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x27FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x2800(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2804[0x4];                                     // 0x2804(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x2808(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x2820(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2; // 0x2880(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AEMptyStatic_C*                         CallFunc_FinishSpawningActor_ReturnValue_2;        // 0x2888(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x2890(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x2898(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast_1;     // 0x28A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RetriggerableDelay_Duration_ImplicitCast; // 0x28A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x28AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPlayRate_NewRate_ImplicitCast;         // 0x28B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast_1;            // 0x28B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetParameter_Value_ImplicitCast;          // 0x28B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CreateProxyObjectForPlayMontage_StartingPosition_ImplicitCast; // 0x28BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x28C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CreateProxyObjectForPlayMontage_PlayRate_ImplicitCast; // 0x28C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x28C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FireSoundServer_IndoorShot_ImplicitCast;  // 0x28D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_1;  // 0x28D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_2;  // 0x28D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_3;  // 0x28DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_4;  // 0x28E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28E4[0x4];                                     // 0x28E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMax_B_ImplicitCast;                      // 0x28E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_A_ImplicitCast;                      // 0x28F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetTimelineLength_NewLength_ImplicitCast; // 0x28F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddYawInput_Val_ImplicitCast;             // 0x28FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddPitchInput_Val_ImplicitCast;           // 0x2900(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_5;  // 0x2904(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast_1;     // 0x2908(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPlayRate_NewRate_ImplicitCast_1;       // 0x2910(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2914[0x4];                                     // 0x2914(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x2918(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_PreviousRecoilRoutineAlpha_ImplicitCast; // 0x2920(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast_2;     // 0x2928(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPlayRate_NewRate_ImplicitCast_2;       // 0x2930(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x2934(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x2938(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1;   // 0x2940(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddPitchInput_Val_ImplicitCast_1;         // 0x2948(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddYawInput_Val_ImplicitCast_1;           // 0x294C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1;   // 0x2950(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast_3;     // 0x2958(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast_2;   // 0x2960(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_CurShotgunPhReloadDuration_ImplicitCast; // 0x2968(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x2970(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_1;                // 0x2978(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x2980(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast_2;            // 0x2988(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RetriggerableDelay_Duration_ImplicitCast_1; // 0x298C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_2;                // 0x2990(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_3;                // 0x2998(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddYawInput_Val_ImplicitCast_2;           // 0x29A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddPitchInput_Val_ImplicitCast_2;         // 0x29A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPlayRate_NewRate_ImplicitCast_3;       // 0x29A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RetriggerableDelay_Duration_ImplicitCast_2; // 0x29AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x29B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CreateProxyObjectForPlayMontage_PlayRate_ImplicitCast_1; // 0x29B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast_3;            // 0x29BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CreateProxyObjectForPlayMontage_PlayRate_ImplicitCast_2; // 0x29C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C4[0x4];                                     // 0x29C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast_4;     // 0x29C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RetriggerableDelay_Duration_ImplicitCast_3; // 0x29D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddPitchInput_Val_ImplicitCast_3;         // 0x29D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon) == 0x000010, "Wrong alignment on BP_Weapon_C_ExecuteUbergraph_BP_Weapon");
static_assert(sizeof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon) == 0x0029E0, "Wrong size on BP_Weapon_C_ExecuteUbergraph_BP_Weapon");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, EntryPoint) == 0x000000, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_Event_State) == 0x000004, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_Event_State' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_Event_RecoilPower) == 0x000008, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_Event_RecoilPower' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_Event_Aim) == 0x000010, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_Event_Aim' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakHitResult_bBlockingHit) == 0x000018, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakHitResult_bInitialOverlap) == 0x000019, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakHitResult_Time) == 0x00001C, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakHitResult_Distance) == 0x000020, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakHitResult_Location) == 0x000028, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakHitResult_ImpactPoint) == 0x000040, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakHitResult_Normal) == 0x000058, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakHitResult_ImpactNormal) == 0x000070, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakHitResult_PhysMat) == 0x000088, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakHitResult_HitActor) == 0x000090, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakHitResult_HitComponent) == 0x000098, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakHitResult_HitBoneName) == 0x0000A0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakHitResult_BoneName) == 0x0000A8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakHitResult_HitItem) == 0x0000B0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakHitResult_ElementIndex) == 0x0000B4, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakHitResult_FaceIndex) == 0x0000B8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakHitResult_TraceStart) == 0x0000C0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakHitResult_TraceEnd) == 0x0000D8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_RebaseLocalOriginOntoZero_ReturnValue) == 0x0000F0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_RebaseLocalOriginOntoZero_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_RebaseLocalOriginOntoZero_ReturnValue_1) == 0x000108, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_RebaseLocalOriginOntoZero_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetObjectClass_ReturnValue) == 0x000120, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_ActorHasTag_ReturnValue) == 0x000128, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_ClassIsChildOf_ReturnValue) == 0x000129, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_AsDestructible_Actor) == 0x000130, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_AsDestructible_Actor' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_bSuccess) == 0x000138, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BooleanOR_ReturnValue) == 0x000139, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Not_PreBool_ReturnValue) == 0x00013A, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_RebaseLocalOriginOntoZero_ReturnValue_2) == 0x000140, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_RebaseLocalOriginOntoZero_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_RebaseLocalOriginOntoZero_ReturnValue_3) == 0x000158, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_RebaseLocalOriginOntoZero_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_MakeHitResult_ReturnValue) == 0x000170, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_MakeHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_Event_NewParam) == 0x000258, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_Event_NewParam' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_HitHandling_ImpactPoint) == 0x000260, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_HitHandling_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_HitHandling_ImpactNormal) == 0x000278, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_HitHandling_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_HitHandling_SurfaceType) == 0x000290, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_HitHandling_SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000291, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetRightVector_ReturnValue) == 0x000298, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_MakeArray_Array) == 0x0002B0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0002C0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0002D8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Add_VectorVector_ReturnValue) == 0x0002F0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000308, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_FindTargetForMelee_Target) == 0x000320, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_FindTargetForMelee_Target' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_FindTargetForMelee_Finded) == 0x000328, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_FindTargetForMelee_Finded' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_CapsuleTraceMulti_OutHits) == 0x000330, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_CapsuleTraceMulti_OutHits' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_CapsuleTraceMulti_ReturnValue) == 0x000340, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_CapsuleTraceMulti_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_FindBestTarget_Target) == 0x000348, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_FindBestTarget_Target' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_FindBestTarget_Finded) == 0x000430, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_FindBestTarget_Finded' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_IsValid_ReturnValue) == 0x000431, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent__PulledTrigger) == 0x000432, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent__PulledTrigger' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000433, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000438, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000450, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000468, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BooleanAND_ReturnValue) == 0x000469, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_SwitchEnum_CmpSuccess) == 0x00046A, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_CanShoot_bIsCan) == 0x00046B, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_CanShoot_bIsCan' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetForwardVector_ReturnValue) == 0x000470, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_Event_TailSound) == 0x000488, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_Event_TailSound' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Array_Length_ReturnValue) == 0x000490, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Greater_IntInt_ReturnValue) == 0x000494, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_FMODPlayEventAttached_ReturnValue) == 0x000498, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_FMODPlayEventAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_IsValid_ReturnValue_1) == 0x0004A0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0004A1, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Not_PreBool_ReturnValue_1) == 0x0004A2, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x0004A3, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0004A8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_Location) == 0x0004B0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_Forward_1) == 0x0004C8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_Forward_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_DecalMaterial) == 0x0004E0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_DecalMaterial' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_ActorsToIgnore) == 0x0004E8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_ActorsToIgnore' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0004F8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000510, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_SpawnObject_ReturnValue) == 0x000528, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000530, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_LineTraceSingle_OutHit) == 0x000548, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_LineTraceSingle_ReturnValue) == 0x000630, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000631, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000632, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakHitResult_Time_1) == 0x000634, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakHitResult_Distance_1) == 0x000638, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakHitResult_Location_1) == 0x000640, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000658, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakHitResult_Normal_1) == 0x000670, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000688, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakHitResult_PhysMat_1) == 0x0006A0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakHitResult_HitActor_1) == 0x0006A8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakHitResult_HitComponent_1) == 0x0006B0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakHitResult_HitBoneName_1) == 0x0006B8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakHitResult_BoneName_1) == 0x0006C0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakHitResult_HitItem_1) == 0x0006C8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakHitResult_ElementIndex_1) == 0x0006CC, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakHitResult_FaceIndex_1) == 0x0006D0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakHitResult_TraceStart_1) == 0x0006D8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakHitResult_TraceEnd_1) == 0x0006F0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000708, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000720, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000728, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000740, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_AsAnim_Montage) == 0x000748, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_bSuccess_1) == 0x000750, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_AsBPI_Weaponry) == 0x000758, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_AsBPI_Weaponry' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_bSuccess_2) == 0x000768, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_WP_GetSkeletalMesh_SkinnedMesh) == 0x000770, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_WP_GetSkeletalMesh_SkinnedMesh' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_WP_GetSkeletalMesh_Success) == 0x000778, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_WP_GetSkeletalMesh_Success' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetAnimInstance_ReturnValue) == 0x000780, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BooleanAND_ReturnValue_1) == 0x000788, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000789, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BooleanAND_ReturnValue_2) == 0x00078A, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_MakeArray_Array_1) == 0x000790, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, Temp_object_Variable) == 0x0007A0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0007A8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetSocketLocation_ReturnValue) == 0x0007B0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0007C8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BPI_CameraShake_self_CastInput) == 0x0007D0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BPI_CameraShake_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_Spawn_Transform_Location) == 0x0007E0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_Spawn_Transform_Location' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_Spawn_Transform_Rotation) == 0x0007F8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_Spawn_Transform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_Spawn_Transform_Scale) == 0x000810, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_Spawn_Transform_Scale' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_CollisionHandlingOverride) == 0x000828, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_CollisionHandlingOverride' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_Owner) == 0x000830, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_Owner' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_WeaponData) == 0x000838, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_WeaponData' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_ShowTrace) == 0x000CF8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_ShowTrace' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_NiagaraSystem) == 0x000D00, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_NiagaraSystem' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_Instigator) == 0x000D08, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_Instigator' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_MakeTransform_ReturnValue) == 0x000D10, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, Temp_byte_Variable) == 0x000D70, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000D78, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_AsSurv_Anim_Interface) == 0x000D80, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_AsSurv_Anim_Interface' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_bSuccess_3) == 0x000D90, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_SetSpineMotageBool_Nothing) == 0x000D91, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_SetSpineMotageBool_Nothing' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_FinishSpawningActor_ReturnValue) == 0x000D98, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, Temp_name_Variable) == 0x000DA0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_NotifyName) == 0x000DA8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_SwitchEnum_CmpSuccess_1) == 0x000DB0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_SwitchEnum_CmpSuccess_2) == 0x000DB1, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_IsLocallyControlled_ReturnValue) == 0x000DB2, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_LoadAnimMontage_AnimMontage) == 0x000DB8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_LoadAnimMontage_AnimMontage' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_LoadAnimMontage_AnimMontage_1) == 0x000DC0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_LoadAnimMontage_AnimMontage_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x000DC8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, Temp_int_Loop_Counter_Variable) == 0x000DCC, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Add_IntInt_ReturnValue) == 0x000DD0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_Select_Default) == 0x000DD8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, Temp_bool_Has_Been_Initd_Variable) == 0x000DE0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_CanShoot_bIsCan_1) == 0x000DE1, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_CanShoot_bIsCan_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CreateDelegate_OutputDelegate) == 0x000DE4, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_Start) == 0x000DF4, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_Start' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_NotifyName_1) == 0x000DF8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000E00, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Not_PreBool_ReturnValue_2) == 0x000E08, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CreateDelegate_OutputDelegate_1) == 0x000E0C, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_NotifyName_2) == 0x000E1C, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_SelectFloat_ReturnValue) == 0x000E28, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000E30, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_FMax_ReturnValue) == 0x000E38, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000E40, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CreateDelegate_OutputDelegate_2) == 0x000E48, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_SwitchEnum_CmpSuccess_3) == 0x000E58, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_SwitchEnum_CmpSuccess_4) == 0x000E59, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_SwitchEnum_CmpSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, Temp_bool_Has_Been_Initd_Variable_1) == 0x000E5A, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_IsLocallyControlled_ReturnValue_2) == 0x000E5B, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_IsLocallyControlled_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_NotifyName_3) == 0x000E5C, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000E68, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_MakeArray_Array_2) == 0x000E70, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Not_PreBool_ReturnValue_3) == 0x000E80, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_CapsuleTraceMulti_OutHits_1) == 0x000E88, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_CapsuleTraceMulti_OutHits_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_CapsuleTraceMulti_ReturnValue_1) == 0x000E98, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_CapsuleTraceMulti_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_FindBestTarget_Target_1) == 0x000EA0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_FindBestTarget_Target_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_FindBestTarget_Finded_1) == 0x000F88, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_FindBestTarget_Finded_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Array_Length_ReturnValue_1) == 0x000F8C, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000F90, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_K2_TimerExistsHandle_ReturnValue) == 0x000F91, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_K2_TimerExistsHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000F92, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BooleanAND_ReturnValue_3) == 0x000F93, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CreateDelegate_OutputDelegate_3) == 0x000F94, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_IsInHouse_ReturnValue) == 0x000FA4, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_IsInHouse_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_Supressed) == 0x000FA5, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_Supressed' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_SelectFloat_ReturnValue_1) == 0x000FA8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_Event_WeaponName) == 0x000FB0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_Event_WeaponName' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetPlayerController_ReturnValue) == 0x000FB8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetControlRotation_ReturnValue) == 0x000FC0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakRotator_Roll) == 0x000FD8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakRotator_Pitch) == 0x000FDC, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakRotator_Yaw) == 0x000FE0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_HipFireMode_1) == 0x000FE4, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_HipFireMode_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_MakeRotator_ReturnValue) == 0x000FE8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_Activation) == 0x001000, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_Activation' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, Temp_bool_IsClosed_Variable) == 0x001001, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_IsValid_ReturnValue_2) == 0x001002, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_NotifyName_4) == 0x001004, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00100C, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CreateDelegate_OutputDelegate_4) == 0x001010, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_EqualEqual_NameName_ReturnValue) == 0x001020, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, Temp_bool_Variable) == 0x001021, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, Temp_bool_Variable_1) == 0x001022, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, Temp_bool_Variable_2) == 0x001023, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, Temp_name_Variable_1) == 0x001024, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_NotifyName_5) == 0x00102C, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_NotifyName_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CreateDelegate_OutputDelegate_5) == 0x001034, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, Temp_bool_IsClosed_Variable_1) == 0x001044, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_NotifyName_6) == 0x001048, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_NotifyName_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_NotifyName_7) == 0x001050, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_NotifyName_7' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CreateDelegate_OutputDelegate_6) == 0x001058, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CreateDelegate_OutputDelegate_7) == 0x001068, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Not_PreBool_ReturnValue_4) == 0x001078, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_NotifyName_8) == 0x00107C, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_NotifyName_8' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_SelectFloat_ReturnValue_2) == 0x001088, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_FMax_ReturnValue_1) == 0x001090, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CreateDelegate_OutputDelegate_8) == 0x001098, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0010A8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_NotifyName_9) == 0x0010AC, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_NotifyName_9' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BooleanAND_ReturnValue_4) == 0x0010B4, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CreateDelegate_OutputDelegate_9) == 0x0010B8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0010C8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetPlayerController_ReturnValue_1) == 0x0010D0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetHUD_ReturnValue) == 0x0010D8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x0010E0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_bSuccess_4) == 0x0010F0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_HitSimplify_S_SimplifiedHitInfo) == 0x0010F8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_HitSimplify_S_SimplifiedHitInfo' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, Temp_bool_Variable_3) == 0x001178, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, Temp_name_Variable_2) == 0x00117C, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_StartingPosition) == 0x001188, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_StartingPosition' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_HitInfo) == 0x001190, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_HitInfo' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_Fire) == 0x0011A0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_Fire' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Add_IntInt_ReturnValue_1) == 0x0011A4, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Array_Get_Item) == 0x0011A8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Array_Length_ReturnValue_2) == 0x001240, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Less_IntInt_ReturnValue) == 0x001244, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetOwner_ReturnValue) == 0x001248, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_IsValid_ReturnValue_3) == 0x001250, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetTransform_ReturnValue) == 0x001260, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BooleanAND_ReturnValue_5) == 0x0012C0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_TransformLocation_ReturnValue) == 0x0012C8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x0012E0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Normal_ReturnValue) == 0x0012F8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_LessEqual_IntInt_ReturnValue) == 0x001310, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_NotifyName_10) == 0x001314, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_NotifyName_10' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CreateDelegate_OutputDelegate_10) == 0x00131C, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x001330, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CreateDelegate_OutputDelegate_11) == 0x001338, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x001348, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Not_PreBool_ReturnValue_5) == 0x001350, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_CanShoot_bIsCan_2) == 0x001351, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_CanShoot_bIsCan_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x001352, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BooleanAND_ReturnValue_6) == 0x001353, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CreateDelegate_OutputDelegate_12) == 0x001354, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_NotifyName_11) == 0x001364, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_NotifyName_11' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Greater_IntInt_ReturnValue_3) == 0x00136C, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CreateDelegate_OutputDelegate_13) == 0x001370, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CreateDelegate_OutputDelegate_14) == 0x001380, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_NotifyName_12) == 0x001390, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_NotifyName_12' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CreateDelegate_OutputDelegate_15) == 0x001398, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_NotifyName_13) == 0x0013A8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_NotifyName_13' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CreateDelegate_OutputDelegate_16) == 0x0013B0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_NotifyName_14) == 0x0013C0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_NotifyName_14' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x0013C8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_F_DroppedItemInfo) == 0x0013D0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_F_DroppedItemInfo' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CreateDelegate_OutputDelegate_17) == 0x0015F0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CreateDelegate_OutputDelegate_17' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_RandomFloatInRange_ReturnValue) == 0x001600, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x001608, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_MakeVector_ReturnValue) == 0x001610, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetActorForwardVector_ReturnValue) == 0x001628, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_K2_GetActorLocation_ReturnValue) == 0x001640, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x001658, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Add_VectorVector_ReturnValue_3) == 0x001670, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_SurvGetUniqueID_UniqueID) == 0x001688, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_SurvGetUniqueID_UniqueID' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Add_VectorVector_ReturnValue_4) == 0x001690, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_RebaseLocalOriginOntoZero_ReturnValue_4) == 0x0016A8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_RebaseLocalOriginOntoZero_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_PlayEventWithOcclusion_FMODAudioComponent) == 0x0016C0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_PlayEventWithOcclusion_FMODAudioComponent' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_On_) == 0x0016C8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_On_' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0016D0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0016D8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_FMax_ReturnValue_2) == 0x0016E0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_FMax_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetDefaultCameraTag_CameraModeTag) == 0x0016E8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetDefaultCameraTag_CameraModeTag' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_bIsPlaySound) == 0x0016F0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_bIsPlaySound' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_PlayEventWithOcclusion_FMODAudioComponent_1) == 0x0016F8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_PlayEventWithOcclusion_FMODAudioComponent_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_IsServer_ReturnValue) == 0x001700, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Not_PreBool_ReturnValue_6) == 0x001701, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_SwitchName_CmpSuccess) == 0x001702, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_SwitchName_CmpSuccess_1) == 0x001703, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_SwitchName_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_MakeArray_Array_3) == 0x001708, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_HipFireMode) == 0x001718, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_HipFireMode' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x001719, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_SelectFloat_ReturnValue_3) == 0x001720, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x001728, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetMeleeWeaponMontage_Output) == 0x001730, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetMeleeWeaponMontage_Output' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetPlayLength_ReturnValue) == 0x001738, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetPlayLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_IsValid_ReturnValue_4) == 0x00173C, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00173D, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_K2_TimerExistsHandle_ReturnValue_1) == 0x00173E, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_K2_TimerExistsHandle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetPlayerController_ReturnValue_2) == 0x001740, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_AsSurv_PC) == 0x001748, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_AsSurv_PC' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_bSuccess_5) == 0x001750, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_IsInHouse_ReturnValue_1) == 0x001751, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_IsInHouse_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_SelectFloat_ReturnValue_4) == 0x001758, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x001760, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetWorldDeltaSeconds_ReturnValue_2) == 0x001768, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetWorldDeltaSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_IsValid_ReturnValue_5) == 0x001770, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Not_PreBool_ReturnValue_7) == 0x001771, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Conv_BoolToDouble_ReturnValue) == 0x001778, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Conv_BoolToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetAnimInstance_ReturnValue_1) == 0x001780, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Divide_DoubleDouble_ReturnValue_4) == 0x001788, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Divide_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x001790, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x001798, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0017A0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_SelectFloat_ReturnValue_5) == 0x0017A8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_SelectFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Lerp_ReturnValue) == 0x0017B0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0017B8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetWorldDeltaSeconds_ReturnValue_3) == 0x0017C0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetWorldDeltaSeconds_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Recoil_Compensation_for_Train_ReturnValue) == 0x0017C8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Recoil_Compensation_for_Train_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_IsValid_ReturnValue_6) == 0x0017D0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_AsSurvival_Player_Mannequin) == 0x0017D8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_AsSurvival_Player_Mannequin' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_bSuccess_6) == 0x0017E0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_IsLocallyControlled_ReturnValue_3) == 0x0017E1, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_IsLocallyControlled_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BooleanOR_ReturnValue_1) == 0x0017E2, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0017E3, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetAnimInstance_ReturnValue_2) == 0x0017E8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetAnimInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_SelectFloat_ReturnValue_6) == 0x0017F0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_SelectFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_AsBI_FPFunctions) == 0x0017F8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_AsBI_FPFunctions' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_bSuccess_7) == 0x001808, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_IsValid_ReturnValue_7) == 0x001809, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetTimeRange_MinTime) == 0x00180C, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetTimeRange_MaxTime) == 0x001810, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetAnimInstance_ReturnValue_3) == 0x001818, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetAnimInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetTimeRange_MinTime_1) == 0x001820, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetTimeRange_MinTime_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetTimeRange_MaxTime_1) == 0x001824, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetTimeRange_MaxTime_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_FMax_ReturnValue_3) == 0x001828, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_FMax_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_SelectFloat_ReturnValue_7) == 0x001830, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_SelectFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_SelectFloat_ReturnValue_8) == 0x001838, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_SelectFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_SelectFloat_ReturnValue_9) == 0x001840, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_SelectFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_RandomBool_ReturnValue) == 0x001848, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakTransform_Location) == 0x001850, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakTransform_Rotation) == 0x001868, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakTransform_Scale) == 0x001880, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetRelativeTransform_ReturnValue) == 0x0018A0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetPlayerController_ReturnValue_3) == 0x001900, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetControlRotation_ReturnValue_1) == 0x001908, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetControlRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakRotator_Roll_1) == 0x001920, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakRotator_Pitch_1) == 0x001924, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakRotator_Yaw_1) == 0x001928, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_MapRangeClamped_ReturnValue) == 0x001930, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_MakeRotator_ReturnValue_1) == 0x001938, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_EqualEqual_RotatorRotator_ReturnValue) == 0x001950, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_EqualEqual_RotatorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakVector2D_X) == 0x001958, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakVector2D_Y) == 0x001960, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetPlayerController_ReturnValue_4) == 0x001968, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetPlayerController_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakVector2D_X_1) == 0x001970, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakVector2D_Y_1) == 0x001978, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetPlayerController_ReturnValue_5) == 0x001980, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetPlayerController_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_SwitchEnum_CmpSuccess_5) == 0x001988, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_SwitchEnum_CmpSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, Temp_real_Variable) == 0x001990, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, Temp_real_Variable_1) == 0x001998, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, Temp_byte_Variable_1) == 0x0019A0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetPlayerController_ReturnValue_6) == 0x0019A8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetPlayerController_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakVector2D_X_2) == 0x0019B0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakVector2D_Y_2) == 0x0019B8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakVector2D_X_3) == 0x0019C0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakVector2D_Y_3) == 0x0019C8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetTimelineLength_ReturnValue) == 0x0019D0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetTimelineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Divide_DoubleDouble_ReturnValue_5) == 0x0019D8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Divide_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_IsValid_ReturnValue_8) == 0x0019E0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, Temp_real_Variable_2) == 0x0019E8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetPlayerController_ReturnValue_7) == 0x0019F0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetPlayerController_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_Forward) == 0x0019F8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_Forward' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BooleanAND_ReturnValue_7) == 0x0019F9, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_SelectFloat_ReturnValue_10) == 0x001A00, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_SelectFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetTimelineLength_ReturnValue_1) == 0x001A08, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetTimelineLength_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Divide_DoubleDouble_ReturnValue_6) == 0x001A10, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Divide_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_AsBI_FPFunctions_1) == 0x001A18, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_AsBI_FPFunctions_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_bSuccess_8) == 0x001A28, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetYawPitch_Yaw) == 0x001A30, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetYawPitch_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetYawPitch_Pitch) == 0x001A38, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetYawPitch_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_AsBI_FPFunctions_2) == 0x001A40, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_AsBI_FPFunctions_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_bSuccess_9) == 0x001A50, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_Pitch) == 0x001A58, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_Yaw) == 0x001A60, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, Temp_int_Variable) == 0x001A68, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakVector2D_X_4) == 0x001A70, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakVector2D_Y_4) == 0x001A78, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x001A80, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_FClamp_ReturnValue) == 0x001A88, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakVector2D_X_5) == 0x001A90, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakVector2D_X_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakVector2D_Y_5) == 0x001A98, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakVector2D_Y_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x001AA0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetFloatValue_ReturnValue) == 0x001AA8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetPlayerController_ReturnValue_8) == 0x001AB0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetPlayerController_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x001AB8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x001AC0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x001AC8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x001AD0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, Temp_real_Variable_3) == 0x001AD8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x001AE0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_MakeVector2D_ReturnValue) == 0x001AE8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, Temp_bool_Variable_4) == 0x001AF8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Greater_IntInt_ReturnValue_4) == 0x001AF9, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Greater_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_Select_Default_1) == 0x001B00, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BooleanAND_ReturnValue_8) == 0x001B08, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakVector2D_X_6) == 0x001B10, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakVector2D_X_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakVector2D_Y_6) == 0x001B18, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakVector2D_Y_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x001B20, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x001B28, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Divide_DoubleDouble_ReturnValue_7) == 0x001B30, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Divide_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Multiply_DoubleDouble_ReturnValue_9) == 0x001B38, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Multiply_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Multiply_DoubleDouble_ReturnValue_10) == 0x001B40, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Multiply_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Multiply_DoubleDouble_ReturnValue_11) == 0x001B48, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Multiply_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Multiply_DoubleDouble_ReturnValue_12) == 0x001B50, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Multiply_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x001B58, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Add_DoubleDouble_ReturnValue_5) == 0x001B60, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Add_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_MakeVector2D_ReturnValue_1) == 0x001B68, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetPlayerController_ReturnValue_9) == 0x001B78, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetPlayerController_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_AsBPI_Weaponry_1) == 0x001B80, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_AsBPI_Weaponry_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_bSuccess_10) == 0x001B90, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_MakeVector2D_ReturnValue_2) == 0x001B98, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_WP_GetSkeletalMesh_SkinnedMesh_1) == 0x001BA8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_WP_GetSkeletalMesh_SkinnedMesh_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_WP_GetSkeletalMesh_Success_1) == 0x001BB0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_WP_GetSkeletalMesh_Success_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_MakeVector2D_ReturnValue_3) == 0x001BB8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetAnimInstance_ReturnValue_4) == 0x001BC8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetAnimInstance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_LoadAsset_Blocking_ReturnValue_1) == 0x001BD0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_LoadAsset_Blocking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_AsAnim_Montage_1) == 0x001BD8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_AsAnim_Montage_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_bSuccess_11) == 0x001BE0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_SwitchEnum_CmpSuccess_6) == 0x001BE1, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_SwitchEnum_CmpSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, Temp_bool_Variable_5) == 0x001BE2, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_Select_Default_2) == 0x001BE8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_MakeStruct_BPS_DamageInfo) == 0x001BF0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_MakeStruct_BPS_DamageInfo' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_MakeArray_Array_4) == 0x001C88, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Not_PreBool_ReturnValue_8) == 0x001C98, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetReloadCharAnim2_NewParam) == 0x001CA0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetReloadCharAnim2_NewParam' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetReloadCharAnim2_NewParam_1) == 0x001CA8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetReloadCharAnim2_NewParam_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetPlayLength_ReturnValue_1) == 0x001CB0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetPlayLength_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetReloadCharAnim2_NewParam_2) == 0x001CB8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetReloadCharAnim2_NewParam_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetPhasedReloadEnd2_NewParam) == 0x001CC0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetPhasedReloadEnd2_NewParam' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetPhasedReloadEnd2_NewParam_1) == 0x001CC8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetPhasedReloadEnd2_NewParam_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetPlayLength_ReturnValue_2) == 0x001CD0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetPlayLength_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetPhasedReloadEnd2_NewParam_2) == 0x001CD8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetPhasedReloadEnd2_NewParam_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetPhasedReloadEnd2_NewParam_3) == 0x001CE0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetPhasedReloadEnd2_NewParam_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetPhasedReloadEnd2_NewParam_4) == 0x001CE8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetPhasedReloadEnd2_NewParam_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetPhasedReloadLoop2_NewParam) == 0x001CF0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetPhasedReloadLoop2_NewParam' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetPhasedReloadLoop2_NewParam_1) == 0x001CF8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetPhasedReloadLoop2_NewParam_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetPhasedReloadLoop2_NewParam_2) == 0x001D00, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetPhasedReloadLoop2_NewParam_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetPlayLength_ReturnValue_3) == 0x001D08, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetPlayLength_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetPhasedReloadLoop2_NewParam_3) == 0x001D10, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetPhasedReloadLoop2_NewParam_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetPhasedReloadBegin2_NewParam) == 0x001D18, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetPhasedReloadBegin2_NewParam' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetPhasedReloadBegin2_NewParam_1) == 0x001D20, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetPhasedReloadBegin2_NewParam_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetPhasedReloadBegin2_NewParam_2) == 0x001D28, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetPhasedReloadBegin2_NewParam_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_IsValid_ReturnValue_9) == 0x001D30, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetPlayLength_ReturnValue_4) == 0x001D34, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetPlayLength_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Not_PreBool_ReturnValue_9) == 0x001D38, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Not_PreBool_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetPhasedReloadBegin2_NewParam_3) == 0x001D40, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetPhasedReloadBegin2_NewParam_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_IsValid_ReturnValue_10) == 0x001D48, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_NotEqual_IntInt_ReturnValue) == 0x001D49, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Lerp_ReturnValue_1) == 0x001D50, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BooleanAND_ReturnValue_9) == 0x001D58, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Multiply_DoubleDouble_ReturnValue_13) == 0x001D60, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Multiply_DoubleDouble_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Lerp_ReturnValue_2) == 0x001D68, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Multiply_DoubleDouble_ReturnValue_14) == 0x001D70, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Multiply_DoubleDouble_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x001D78, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BooleanOR_ReturnValue_2) == 0x001D79, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Multiply_DoubleDouble_ReturnValue_15) == 0x001D80, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Multiply_DoubleDouble_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x001D88, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_Select_Default_3) == 0x001D90, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Multiply_DoubleDouble_ReturnValue_16) == 0x001D98, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Multiply_DoubleDouble_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x001DA0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Add_DoubleDouble_ReturnValue_6) == 0x001DA8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Add_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, Temp_bool_Variable_6) == 0x001DB0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, Temp_real_Variable_4) == 0x001DB8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, Temp_bool_Variable_7) == 0x001DC0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_Select_Default_4) == 0x001DC8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_CheckAvailabilityAmmoType_bIsChangedAmmoType) == 0x001DD0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_CheckAvailabilityAmmoType_bIsChangedAmmoType' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_CheckAvailabilityAmmoType_SettedAmmoClass) == 0x001DD1, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_CheckAvailabilityAmmoType_SettedAmmoClass' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_CheckAvailabilityAmmoType_SettedAmmoType) == 0x001DD2, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_CheckAvailabilityAmmoType_SettedAmmoType' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Divide_DoubleDouble_ReturnValue_8) == 0x001DD8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Divide_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_Select_Default_5) == 0x001DE0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Add_DoubleDouble_ReturnValue_7) == 0x001DE8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Add_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Lerp_ReturnValue_3) == 0x001DF0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x001DF8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Subtract_DoubleDouble_ReturnValue_4) == 0x001E00, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Subtract_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Lerp_ReturnValue_4) == 0x001E08, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Lerp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_CheckAvailabilityAmmoType_bIsChangedAmmoType_1) == 0x001E10, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_CheckAvailabilityAmmoType_bIsChangedAmmoType_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_CheckAvailabilityAmmoType_SettedAmmoClass_1) == 0x001E11, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_CheckAvailabilityAmmoType_SettedAmmoClass_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_CheckAvailabilityAmmoType_SettedAmmoType_1) == 0x001E12, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_CheckAvailabilityAmmoType_SettedAmmoType_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Subtract_DoubleDouble_ReturnValue_5) == 0x001E18, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Subtract_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x001E20, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetItemCountByName_ReturnedCount) == 0x001E30, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetItemCountByName_ReturnedCount' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x001E34, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, Temp_real_Variable_5) == 0x001E38, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BooleanAND_ReturnValue_10) == 0x001E40, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, Temp_bool_Variable_8) == 0x001E41, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_IsLocallyControlled_ReturnValue_4) == 0x001E42, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_IsLocallyControlled_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_Select_Default_6) == 0x001E48, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CreateDelegate_OutputDelegate_18) == 0x001E50, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CreateDelegate_OutputDelegate_18' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Not_PreBool_ReturnValue_10) == 0x001E60, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Not_PreBool_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_K2_SetTimerDelegate_ReturnValue_3) == 0x001E68, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_K2_SetTimerDelegate_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Add_VectorVector_ReturnValue_5) == 0x001E70, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Add_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakVector_X) == 0x001E88, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakVector_Y) == 0x001E90, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakVector_Z) == 0x001E98, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x001EA0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Multiply_DoubleDouble_ReturnValue_17) == 0x001F88, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Multiply_DoubleDouble_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Multiply_DoubleDouble_ReturnValue_18) == 0x001F90, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Multiply_DoubleDouble_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Multiply_DoubleDouble_ReturnValue_19) == 0x001F98, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Multiply_DoubleDouble_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_MakeVector_ReturnValue_1) == 0x001FA0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Subtract_IntInt_ReturnValue) == 0x001FB8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x001FC0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Add_IntInt_ReturnValue_2) == 0x001FD0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetItemByName_ReturnedCount) == 0x001FD4, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetItemByName_ReturnedCount' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Add_IntInt_ReturnValue_3) == 0x001FD8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x001FDC, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2) == 0x001FE0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetItemByName_ReturnedCount_1) == 0x001FF0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetItemByName_ReturnedCount_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_IsValid_ReturnValue_11) == 0x001FF4, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_3) == 0x001FF8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Add_IntInt_ReturnValue_4) == 0x002008, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetItemCountByName_ReturnedCount_1) == 0x00200C, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetItemCountByName_ReturnedCount_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetAnimInstance_ReturnValue_5) == 0x002010, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetAnimInstance_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x002018, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Montage_Play_ReturnValue) == 0x00201C, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_AsBPI_Weaponry_2) == 0x002020, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_AsBPI_Weaponry_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_bSuccess_12) == 0x002030, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_WP_GetSkeletalMesh_SkinnedMesh_2) == 0x002038, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_WP_GetSkeletalMesh_SkinnedMesh_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_WP_GetSkeletalMesh_Success_2) == 0x002040, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_WP_GetSkeletalMesh_Success_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CreateDelegate_OutputDelegate_19) == 0x002044, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CreateDelegate_OutputDelegate_19' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_K2_SetTimerDelegate_ReturnValue_4) == 0x002058, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_K2_SetTimerDelegate_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_K2_SetTimerDelegate_ReturnValue_5) == 0x002060, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_K2_SetTimerDelegate_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_K2_SetTimerDelegate_ReturnValue_6) == 0x002068, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_K2_SetTimerDelegate_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetAnimInstance_ReturnValue_6) == 0x002070, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetAnimInstance_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x002078, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x002079, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BooleanAND_ReturnValue_11) == 0x00207A, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BooleanAND_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Less_IntInt_ReturnValue_1) == 0x00207B, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, Temp_bool_Variable_9) == 0x00207C, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_Select_Default_7) == 0x002080, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x002088, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CreateDelegate_OutputDelegate_20) == 0x0020B8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CreateDelegate_OutputDelegate_20' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_K2_SetTimerDelegate_ReturnValue_7) == 0x0020C8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_K2_SetTimerDelegate_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, Temp_object_Variable_1) == 0x0020D0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_Loaded) == 0x0020D8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_AsAnim_Montage_2) == 0x0020E0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_AsAnim_Montage_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_bSuccess_13) == 0x0020E8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x0020F0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, Temp_struct_Variable) == 0x0020F8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_IsValid_ReturnValue_12) == 0x002100, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, Temp_struct_Variable_1) == 0x002104, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, Temp_struct_Variable_2) == 0x00210C, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, Temp_byte_Variable_2) == 0x002114, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_Select_Default_8) == 0x002118, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CreateDelegate_OutputDelegate_21) == 0x002120, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CreateDelegate_OutputDelegate_21' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, Temp_bool_Variable_10) == 0x002130, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_K2_SetTimerDelegate_ReturnValue_8) == 0x002138, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_K2_SetTimerDelegate_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_Select_Default_9) == 0x002140, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_AddItemsToPickup_AddedData1) == 0x002148, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_AddItemsToPickup_AddedData1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_AddItemsToPickup_AddedItems1) == 0x002158, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_AddItemsToPickup_AddedItems1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CreateDelegate_OutputDelegate_22) == 0x002168, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CreateDelegate_OutputDelegate_22' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, Temp_real_Variable_6) == 0x002178, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::Temp_real_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_K2_SetTimerDelegate_ReturnValue_9) == 0x002180, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_K2_SetTimerDelegate_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, Temp_bool_Variable_11) == 0x002188, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_Select_Default_10) == 0x002190, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Subtract_DoubleDouble_ReturnValue_6) == 0x002198, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Subtract_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetAnimInstance_ReturnValue_7) == 0x0021A0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetAnimInstance_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Divide_DoubleDouble_ReturnValue_9) == 0x0021A8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Divide_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_AsSurv_Anim_Interface_1) == 0x0021B0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_AsSurv_Anim_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_bSuccess_14) == 0x0021C0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Multiply_DoubleDouble_ReturnValue_20) == 0x0021C8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Multiply_DoubleDouble_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_AsSurv_Anim_Interface_2) == 0x0021D0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_AsSurv_Anim_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_bSuccess_15) == 0x0021E0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Multiply_DoubleDouble_ReturnValue_21) == 0x0021E8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Multiply_DoubleDouble_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_SetSpineMotageBool_Nothing_1) == 0x0021F0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_SetSpineMotageBool_Nothing_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetPlayerCharacter_ReturnValue) == 0x0021F8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_AsSurvival_Player) == 0x002200, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_bSuccess_16) == 0x002208, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_CalculateSubtrahendForPhased_Subtrahend) == 0x002210, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_CalculateSubtrahendForPhased_Subtrahend' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Subtract_DoubleDouble_ReturnValue_7) == 0x002218, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Subtract_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetAnimInstance_ReturnValue_8) == 0x002220, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetAnimInstance_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x002228, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_AsSurv_Interface) == 0x002230, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_AsSurv_Interface' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_bSuccess_17) == 0x002240, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_bSuccess_17' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BooleanOR_ReturnValue_3) == 0x002241, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CreateDelegate_OutputDelegate_23) == 0x002244, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CreateDelegate_OutputDelegate_23' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_K2_SetTimerDelegate_ReturnValue_10) == 0x002258, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_K2_SetTimerDelegate_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CreateDelegate_OutputDelegate_24) == 0x002260, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CreateDelegate_OutputDelegate_24' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_K2_SetTimerDelegate_ReturnValue_11) == 0x002270, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_K2_SetTimerDelegate_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_IsLocallyControlled_ReturnValue_5) == 0x002278, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_IsLocallyControlled_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_IsValid_ReturnValue_13) == 0x002279, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_AsBPI_Weaponry_3) == 0x002280, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_AsBPI_Weaponry_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_bSuccess_18) == 0x002290, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_bSuccess_18' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_WP_GetSkeletalMesh_SkinnedMesh_3) == 0x002298, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_WP_GetSkeletalMesh_SkinnedMesh_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_WP_GetSkeletalMesh_Success_3) == 0x0022A0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_WP_GetSkeletalMesh_Success_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetAnimInstance_ReturnValue_9) == 0x0022A8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetAnimInstance_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_IsLocallyControlled_ReturnValue_6) == 0x0022B0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_IsLocallyControlled_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_IsValid_ReturnValue_14) == 0x0022B1, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_4) == 0x0022B8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_IsLocallyControlled_ReturnValue_7) == 0x0022C8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_IsLocallyControlled_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetItemCountByName_ReturnedCount_2) == 0x0022CC, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetItemCountByName_ReturnedCount_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Not_PreBool_ReturnValue_11) == 0x0022D0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Not_PreBool_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Greater_IntInt_ReturnValue_5) == 0x0022D1, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Greater_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BooleanOR_ReturnValue_4) == 0x0022D2, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_LoadAnimMontage_AnimMontage_2) == 0x0022D8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_LoadAnimMontage_AnimMontage_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_MakeTransform_ReturnValue_1) == 0x0022E0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x002340, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x002348, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_K2_AttachToComponent_ReturnValue) == 0x002350, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetReloadPlayRate_PlayRate) == 0x002358, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetReloadPlayRate_PlayRate' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetAnimInstance_ReturnValue_10) == 0x002360, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetAnimInstance_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetReloadPlayRate_PlayRate_1) == 0x002368, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetReloadPlayRate_PlayRate_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_AsSurv_Interface_1) == 0x002370, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_AsSurv_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_bSuccess_19) == 0x002380, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_bSuccess_19' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetReloadPlayRate_PlayRate_2) == 0x002388, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetReloadPlayRate_PlayRate_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetReloadPlayRate_PlayRate_3) == 0x002390, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetReloadPlayRate_PlayRate_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetReloadPlayRate_PlayRate_4) == 0x002398, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetReloadPlayRate_PlayRate_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1) == 0x0023A0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetReloadPlayRate_PlayRate_5) == 0x0023A8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetReloadPlayRate_PlayRate_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Divide_DoubleDouble_ReturnValue_10) == 0x0023B0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Divide_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_IsValid_ReturnValue_15) == 0x0023B8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetReloadPlayRate_PlayRate_6) == 0x0023C0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetReloadPlayRate_PlayRate_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetReloadPlayRate_PlayRate_7) == 0x0023C8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetReloadPlayRate_PlayRate_7' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetReloadPlayRate_PlayRate_8) == 0x0023D0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetReloadPlayRate_PlayRate_8' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x0023D8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0023E0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Multiply_DoubleDouble_ReturnValue_22) == 0x0023E8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Multiply_DoubleDouble_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetAnimInstance_ReturnValue_11) == 0x0023F0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetAnimInstance_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_AsBPI_Weapon_Anim_BP) == 0x0023F8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_AsBPI_Weapon_Anim_BP' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_bSuccess_20) == 0x002408, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_bSuccess_20' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2) == 0x002410, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetAnimInstance_ReturnValue_12) == 0x002418, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetAnimInstance_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_AsBPI_Weapon_Anim_BP_1) == 0x002420, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_AsBPI_Weapon_Anim_BP_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_bSuccess_21) == 0x002430, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_bSuccess_21' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_IsValid_ReturnValue_16) == 0x002431, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_IsValid_ReturnValue_17) == 0x002432, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_IsValid_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, Temp_struct_Variable_3) == 0x002438, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_AsBPI_Weaponry_4) == 0x002450, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_AsBPI_Weaponry_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_bSuccess_22) == 0x002460, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_bSuccess_22' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_WP_GetSkeletalMesh_SkinnedMesh_4) == 0x002468, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_WP_GetSkeletalMesh_SkinnedMesh_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_WP_GetSkeletalMesh_Success_4) == 0x002470, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_WP_GetSkeletalMesh_Success_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x002474, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x002478, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetAnimInstance_ReturnValue_13) == 0x002480, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetAnimInstance_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_IsLocallyControlled_ReturnValue_8) == 0x002488, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_IsLocallyControlled_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_IsLocallyControlled_ReturnValue_9) == 0x002489, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_IsLocallyControlled_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_AsBPI_Weaponry_5) == 0x002490, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_AsBPI_Weaponry_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_bSuccess_23) == 0x0024A0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_bSuccess_23' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_WP_GetSkeletalMesh_SkinnedMesh_5) == 0x0024A8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_WP_GetSkeletalMesh_SkinnedMesh_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_WP_GetSkeletalMesh_Success_5) == 0x0024B0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_WP_GetSkeletalMesh_Success_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_IsLocallyControlled_ReturnValue_10) == 0x0024B1, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_IsLocallyControlled_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetAnimInstance_ReturnValue_14) == 0x0024B8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetAnimInstance_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_AsSurv_Interface_2) == 0x0024C0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_AsSurv_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_bSuccess_24) == 0x0024D0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_bSuccess_24' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CreateDelegate_OutputDelegate_25) == 0x0024D4, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CreateDelegate_OutputDelegate_25' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_BulletIn) == 0x0024E4, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_BulletIn' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Not_PreBool_ReturnValue_12) == 0x0024E5, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Not_PreBool_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_Select_Default_11) == 0x0024E8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_5) == 0x0024F0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetItemCountByName_ReturnedCount_3) == 0x002500, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetItemCountByName_ReturnedCount_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Not_PreBool_ReturnValue_13) == 0x002504, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Not_PreBool_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CreateDelegate_OutputDelegate_26) == 0x002508, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CreateDelegate_OutputDelegate_26' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_K2_SetTimerDelegate_ReturnValue_12) == 0x002518, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_K2_SetTimerDelegate_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_6) == 0x002520, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetItemCountByName_ReturnedCount_4) == 0x002530, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetItemCountByName_ReturnedCount_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_IsValid_ReturnValue_18) == 0x002534, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_IsValid_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_EqualEqual_IntInt_ReturnValue_6) == 0x002535, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_EqualEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetAnimInstance_ReturnValue_15) == 0x002538, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetAnimInstance_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_7) == 0x002540, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetItemCountByName_ReturnedCount_5) == 0x002550, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetItemCountByName_ReturnedCount_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_EqualEqual_IntInt_ReturnValue_7) == 0x002554, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_EqualEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetAnimInstance_ReturnValue_16) == 0x002558, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetAnimInstance_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_AsSurv_Interface_3) == 0x002560, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_AsSurv_Interface_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_bSuccess_25) == 0x002570, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_bSuccess_25' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, Temp_bool_Variable_12) == 0x002571, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_Select_Default_12) == 0x002578, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_Select_Default_12' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_PlayEventWithOcclusion_FMODAudioComponent_2) == 0x002580, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_PlayEventWithOcclusion_FMODAudioComponent_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x002588, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x00258C, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Subtract_IntInt_ReturnValue_5) == 0x002590, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Subtract_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_EqualEqual_IntInt_ReturnValue_8) == 0x002594, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_EqualEqual_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BooleanOR_ReturnValue_5) == 0x002595, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_ForciblyEnd) == 0x002596, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_ForciblyEnd' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Subtract_IntInt_ReturnValue_6) == 0x002598, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Subtract_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BooleanOR_ReturnValue_6) == 0x00259C, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x00259D, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BooleanOR_ReturnValue_7) == 0x00259E, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BooleanOR_ReturnValue_8) == 0x00259F, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BooleanOR_ReturnValue_9) == 0x0025A0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BooleanOR_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Not_PreBool_ReturnValue_14) == 0x0025A1, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Not_PreBool_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_Select_Default_13) == 0x0025A8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_Select_Default_13' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetPlayLength_ReturnValue_5) == 0x0025B0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetPlayLength_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Divide_DoubleDouble_ReturnValue_11) == 0x0025B8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Divide_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_8) == 0x0025C0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetDisplayName_ReturnValue) == 0x0025D0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Concat_StrStr_ReturnValue) == 0x0025E0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetItemCountByName_ReturnedCount_6) == 0x0025F0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetItemCountByName_ReturnedCount_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Add_IntInt_ReturnValue_5) == 0x0025F4, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_IsValid_ReturnValue_19) == 0x0025F8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_IsValid_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Subtract_IntInt_ReturnValue_7) == 0x0025FC, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Subtract_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_9) == 0x002600, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Greater_IntInt_ReturnValue_6) == 0x002610, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Greater_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetItemByName_ReturnedCount_2) == 0x002614, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetItemByName_ReturnedCount_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Greater_IntInt_ReturnValue_7) == 0x002618, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Greater_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BooleanAND_ReturnValue_12) == 0x002619, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BooleanAND_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_IsLocallyControlled_ReturnValue_11) == 0x00261A, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_IsLocallyControlled_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_10) == 0x002620, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_AsBPI_Weaponry_6) == 0x002630, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_AsBPI_Weaponry_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_bSuccess_26) == 0x002640, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_bSuccess_26' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetItemCountByName_ReturnedCount_7) == 0x002644, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetItemCountByName_ReturnedCount_7' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_WP_GetSkeletalMesh_SkinnedMesh_6) == 0x002648, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_WP_GetSkeletalMesh_SkinnedMesh_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_WP_GetSkeletalMesh_Success_6) == 0x002650, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_WP_GetSkeletalMesh_Success_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Greater_IntInt_ReturnValue_8) == 0x002651, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Greater_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetAnimInstance_ReturnValue_17) == 0x002658, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetAnimInstance_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_AsSurv_Interface_4) == 0x002660, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_AsSurv_Interface_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_DynamicCast_bSuccess_27) == 0x002670, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_DynamicCast_bSuccess_27' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Not_PreBool_ReturnValue_15) == 0x002671, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Not_PreBool_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BooleanAND_ReturnValue_13) == 0x002672, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BooleanAND_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BooleanAND_ReturnValue_14) == 0x002673, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BooleanAND_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BooleanAND_ReturnValue_15) == 0x002674, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BooleanAND_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_bIsFastReloadMulti) == 0x002675, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_bIsFastReloadMulti' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_CustomEvent_Aim) == 0x002676, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_CustomEvent_Aim' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_Event_DeltaSeconds) == 0x002678, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_Select_Default_14) == 0x002680, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_Select_Default_14' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_Select_Default_15) == 0x002690, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_Select_Default_15' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x0026A0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Multiply_Vector2DVector2D_ReturnValue_1) == 0x0026B0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Multiply_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakVector2D_X_7) == 0x0026C0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakVector2D_X_7' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakVector2D_Y_7) == 0x0026C8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakVector2D_Y_7' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakVector2D_X_8) == 0x0026D0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakVector2D_X_8' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakVector2D_Y_8) == 0x0026D8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakVector2D_Y_8' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x0026E0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_RandomFloatInRange_ReturnValue_3) == 0x0026E8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_RandomFloatInRange_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Multiply_DoubleDouble_ReturnValue_23) == 0x0026F0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Multiply_DoubleDouble_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Multiply_DoubleDouble_ReturnValue_24) == 0x0026F8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Multiply_DoubleDouble_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Multiply_DoubleDouble_ReturnValue_25) == 0x002700, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Multiply_DoubleDouble_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Multiply_DoubleDouble_ReturnValue_26) == 0x002708, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Multiply_DoubleDouble_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_MakeVector2D_ReturnValue_4) == 0x002710, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_MakeVector2D_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_EqualEqual_IntInt_ReturnValue_9) == 0x002720, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_EqualEqual_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BooleanAND_ReturnValue_16) == 0x002721, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BooleanAND_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_SwitchEnum_CmpSuccess_7) == 0x002722, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_SwitchEnum_CmpSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Multiply_DoubleDouble_ReturnValue_27) == 0x002728, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Multiply_DoubleDouble_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Multiply_DoubleDouble_ReturnValue_28) == 0x002730, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Multiply_DoubleDouble_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Multiply_DoubleDouble_ReturnValue_29) == 0x002738, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Multiply_DoubleDouble_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, Temp_bool_Has_Been_Initd_Variable_2) == 0x002740, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, Temp_bool_Has_Been_Initd_Variable_3) == 0x002741, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::Temp_bool_Has_Been_Initd_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, Temp_bool_IsClosed_Variable_2) == 0x002742, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_HasAuthority_ReturnValue) == 0x002743, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, Temp_bool_IsClosed_Variable_3) == 0x002744, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::Temp_bool_IsClosed_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetSocketTransform_ReturnValue) == 0x002750, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakTransform_Location_1) == 0x0027B0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakTransform_Rotation_1) == 0x0027C8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakTransform_Scale_1) == 0x0027E0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakRotator_Roll_2) == 0x0027F8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakRotator_Pitch_2) == 0x0027FC, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BreakRotator_Yaw_2) == 0x002800, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_MakeRotator_ReturnValue_2) == 0x002808, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_MakeTransform_ReturnValue_2) == 0x002820, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2) == 0x002880, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_FinishSpawningActor_ReturnValue_2) == 0x002888, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_FinishSpawningActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x002890, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x002898, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Divide_DoubleDouble_B_ImplicitCast_1) == 0x0028A0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Divide_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_RetriggerableDelay_Duration_ImplicitCast) == 0x0028A8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_RetriggerableDelay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Delay_Duration_ImplicitCast) == 0x0028AC, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_SetPlayRate_NewRate_ImplicitCast) == 0x0028B0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_SetPlayRate_NewRate_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Delay_Duration_ImplicitCast_1) == 0x0028B4, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Delay_Duration_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_SetParameter_Value_ImplicitCast) == 0x0028B8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_SetParameter_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_CreateProxyObjectForPlayMontage_StartingPosition_ImplicitCast) == 0x0028BC, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_CreateProxyObjectForPlayMontage_StartingPosition_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x0028C0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_CreateProxyObjectForPlayMontage_PlayRate_ImplicitCast) == 0x0028C4, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_CreateProxyObjectForPlayMontage_PlayRate_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x0028C8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_FireSoundServer_IndoorShot_ImplicitCast) == 0x0028D0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_FireSoundServer_IndoorShot_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_1) == 0x0028D4, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_2) == 0x0028D8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_3) == 0x0028DC, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_4) == 0x0028E0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_FMax_B_ImplicitCast) == 0x0028E8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_FMax_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_FMax_A_ImplicitCast) == 0x0028F0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_FMax_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_SetTimelineLength_NewLength_ImplicitCast) == 0x0028F8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_SetTimelineLength_NewLength_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_AddYawInput_Val_ImplicitCast) == 0x0028FC, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_AddYawInput_Val_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_AddPitchInput_Val_ImplicitCast) == 0x002900, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_AddPitchInput_Val_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_5) == 0x002904, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Divide_DoubleDouble_A_ImplicitCast_1) == 0x002908, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Divide_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_SetPlayRate_NewRate_ImplicitCast_1) == 0x002910, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_SetPlayRate_NewRate_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x002918, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_VariableSet_PreviousRecoilRoutineAlpha_ImplicitCast) == 0x002920, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_VariableSet_PreviousRecoilRoutineAlpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Divide_DoubleDouble_A_ImplicitCast_2) == 0x002928, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Divide_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_SetPlayRate_NewRate_ImplicitCast_2) == 0x002930, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_SetPlayRate_NewRate_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x002934, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x002938, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1) == 0x002940, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_AddPitchInput_Val_ImplicitCast_1) == 0x002948, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_AddPitchInput_Val_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_AddYawInput_Val_ImplicitCast_1) == 0x00294C, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_AddYawInput_Val_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1) == 0x002950, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Divide_DoubleDouble_A_ImplicitCast_3) == 0x002958, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Divide_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Subtract_DoubleDouble_A_ImplicitCast_2) == 0x002960, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Subtract_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, K2Node_VariableSet_CurShotgunPhReloadDuration_ImplicitCast) == 0x002968, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::K2Node_VariableSet_CurShotgunPhReloadDuration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Lerp_Alpha_ImplicitCast) == 0x002970, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Lerp_Alpha_ImplicitCast_1) == 0x002978, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Lerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x002980, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Delay_Duration_ImplicitCast_2) == 0x002988, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Delay_Duration_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_RetriggerableDelay_Duration_ImplicitCast_1) == 0x00298C, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_RetriggerableDelay_Duration_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Lerp_Alpha_ImplicitCast_2) == 0x002990, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Lerp_Alpha_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Lerp_Alpha_ImplicitCast_3) == 0x002998, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Lerp_Alpha_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_AddYawInput_Val_ImplicitCast_2) == 0x0029A0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_AddYawInput_Val_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_AddPitchInput_Val_ImplicitCast_2) == 0x0029A4, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_AddPitchInput_Val_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_SetPlayRate_NewRate_ImplicitCast_3) == 0x0029A8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_SetPlayRate_NewRate_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_RetriggerableDelay_Duration_ImplicitCast_2) == 0x0029AC, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_RetriggerableDelay_Duration_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0029B0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_CreateProxyObjectForPlayMontage_PlayRate_ImplicitCast_1) == 0x0029B8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_CreateProxyObjectForPlayMontage_PlayRate_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Delay_Duration_ImplicitCast_3) == 0x0029BC, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Delay_Duration_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_CreateProxyObjectForPlayMontage_PlayRate_ImplicitCast_2) == 0x0029C0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_CreateProxyObjectForPlayMontage_PlayRate_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_Divide_DoubleDouble_A_ImplicitCast_4) == 0x0029C8, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_Divide_DoubleDouble_A_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_RetriggerableDelay_Duration_ImplicitCast_3) == 0x0029D0, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_RetriggerableDelay_Duration_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ExecuteUbergraph_BP_Weapon, CallFunc_AddPitchInput_Val_ImplicitCast_3) == 0x0029D4, "Member 'BP_Weapon_C_ExecuteUbergraph_BP_Weapon::CallFunc_AddPitchInput_Val_ImplicitCast_3' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.FakeFire
// 0x0018 (0x0018 - 0x0000)
struct BP_Weapon_C_FakeFire final
{
public:
	TArray<struct FBPS_DamageInfo>                HitInfo;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          Param_Fire;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_FakeFire) == 0x000008, "Wrong alignment on BP_Weapon_C_FakeFire");
static_assert(sizeof(BP_Weapon_C_FakeFire) == 0x000018, "Wrong size on BP_Weapon_C_FakeFire");
static_assert(offsetof(BP_Weapon_C_FakeFire, HitInfo) == 0x000000, "Member 'BP_Weapon_C_FakeFire::HitInfo' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FakeFire, Param_Fire) == 0x000010, "Member 'BP_Weapon_C_FakeFire::Param_Fire' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.FindBestTarget
// 0x03F0 (0x03F0 - 0x0000)
struct BP_Weapon_C_FindBestTarget final
{
public:
	TArray<struct FHitResult>                     Results;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FHitResult                             Target;                                            // 0x0010(0x00E8)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Finded;                                            // 0x00F8(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             L_BestTarget;                                      // 0x0100(0x00E8)(Edit, BlueprintVisible, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        L_ClosestDistance;                                 // 0x01E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x01F8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x02E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E2[0x2];                                      // 0x02E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x02F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0308(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0320(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0338(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0350(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0358(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0360(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_384[0x4];                                      // 0x0384(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0388(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x03A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x03BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C2[0x2];                                      // 0x03C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x03C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_DistanceSquared_ReturnValue;       // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_FindBestTarget) == 0x000008, "Wrong alignment on BP_Weapon_C_FindBestTarget");
static_assert(sizeof(BP_Weapon_C_FindBestTarget) == 0x0003F0, "Wrong size on BP_Weapon_C_FindBestTarget");
static_assert(offsetof(BP_Weapon_C_FindBestTarget, Results) == 0x000000, "Member 'BP_Weapon_C_FindBestTarget::Results' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindBestTarget, Target) == 0x000010, "Member 'BP_Weapon_C_FindBestTarget::Target' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindBestTarget, Finded) == 0x0000F8, "Member 'BP_Weapon_C_FindBestTarget::Finded' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindBestTarget, L_BestTarget) == 0x000100, "Member 'BP_Weapon_C_FindBestTarget::L_BestTarget' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindBestTarget, L_ClosestDistance) == 0x0001E8, "Member 'BP_Weapon_C_FindBestTarget::L_ClosestDistance' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindBestTarget, Temp_int_Array_Index_Variable) == 0x0001F0, "Member 'BP_Weapon_C_FindBestTarget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindBestTarget, CallFunc_Array_Length_ReturnValue) == 0x0001F4, "Member 'BP_Weapon_C_FindBestTarget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindBestTarget, CallFunc_Array_Get_Item) == 0x0001F8, "Member 'BP_Weapon_C_FindBestTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindBestTarget, CallFunc_BreakHitResult_bBlockingHit) == 0x0002E0, "Member 'BP_Weapon_C_FindBestTarget::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindBestTarget, CallFunc_BreakHitResult_bInitialOverlap) == 0x0002E1, "Member 'BP_Weapon_C_FindBestTarget::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindBestTarget, CallFunc_BreakHitResult_Time) == 0x0002E4, "Member 'BP_Weapon_C_FindBestTarget::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindBestTarget, CallFunc_BreakHitResult_Distance) == 0x0002E8, "Member 'BP_Weapon_C_FindBestTarget::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindBestTarget, CallFunc_BreakHitResult_Location) == 0x0002F0, "Member 'BP_Weapon_C_FindBestTarget::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindBestTarget, CallFunc_BreakHitResult_ImpactPoint) == 0x000308, "Member 'BP_Weapon_C_FindBestTarget::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindBestTarget, CallFunc_BreakHitResult_Normal) == 0x000320, "Member 'BP_Weapon_C_FindBestTarget::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindBestTarget, CallFunc_BreakHitResult_ImpactNormal) == 0x000338, "Member 'BP_Weapon_C_FindBestTarget::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindBestTarget, CallFunc_BreakHitResult_PhysMat) == 0x000350, "Member 'BP_Weapon_C_FindBestTarget::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindBestTarget, CallFunc_BreakHitResult_HitActor) == 0x000358, "Member 'BP_Weapon_C_FindBestTarget::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindBestTarget, CallFunc_BreakHitResult_HitComponent) == 0x000360, "Member 'BP_Weapon_C_FindBestTarget::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindBestTarget, CallFunc_BreakHitResult_HitBoneName) == 0x000368, "Member 'BP_Weapon_C_FindBestTarget::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindBestTarget, CallFunc_BreakHitResult_BoneName) == 0x000370, "Member 'BP_Weapon_C_FindBestTarget::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindBestTarget, CallFunc_BreakHitResult_HitItem) == 0x000378, "Member 'BP_Weapon_C_FindBestTarget::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindBestTarget, CallFunc_BreakHitResult_ElementIndex) == 0x00037C, "Member 'BP_Weapon_C_FindBestTarget::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindBestTarget, CallFunc_BreakHitResult_FaceIndex) == 0x000380, "Member 'BP_Weapon_C_FindBestTarget::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindBestTarget, CallFunc_BreakHitResult_TraceStart) == 0x000388, "Member 'BP_Weapon_C_FindBestTarget::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindBestTarget, CallFunc_BreakHitResult_TraceEnd) == 0x0003A0, "Member 'BP_Weapon_C_FindBestTarget::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindBestTarget, CallFunc_Array_Length_ReturnValue_1) == 0x0003B8, "Member 'BP_Weapon_C_FindBestTarget::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindBestTarget, Temp_int_Loop_Counter_Variable) == 0x0003BC, "Member 'BP_Weapon_C_FindBestTarget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindBestTarget, CallFunc_Greater_IntInt_ReturnValue) == 0x0003C0, "Member 'BP_Weapon_C_FindBestTarget::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindBestTarget, CallFunc_Less_IntInt_ReturnValue) == 0x0003C1, "Member 'BP_Weapon_C_FindBestTarget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindBestTarget, CallFunc_Add_IntInt_ReturnValue) == 0x0003C4, "Member 'BP_Weapon_C_FindBestTarget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindBestTarget, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0003C8, "Member 'BP_Weapon_C_FindBestTarget::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindBestTarget, CallFunc_Vector_DistanceSquared_ReturnValue) == 0x0003E0, "Member 'BP_Weapon_C_FindBestTarget::CallFunc_Vector_DistanceSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindBestTarget, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0003E8, "Member 'BP_Weapon_C_FindBestTarget::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.FindTargetForMelee
// 0x0200 (0x0200 - 0x0000)
struct BP_Weapon_C_FindTargetForMelee final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Finded;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ClosestDistance;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ClosestActor;                                      // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0130(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x0140(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x0150(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_5;        // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_DistanceSquared_ReturnValue;       // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F5[0x3];                                      // 0x01F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_InRange_FloatFloat_Value_ImplicitCast;    // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_FindTargetForMelee) == 0x000008, "Wrong alignment on BP_Weapon_C_FindTargetForMelee");
static_assert(sizeof(BP_Weapon_C_FindTargetForMelee) == 0x000200, "Wrong size on BP_Weapon_C_FindTargetForMelee");
static_assert(offsetof(BP_Weapon_C_FindTargetForMelee, Target) == 0x000000, "Member 'BP_Weapon_C_FindTargetForMelee::Target' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindTargetForMelee, Finded) == 0x000008, "Member 'BP_Weapon_C_FindTargetForMelee::Finded' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindTargetForMelee, ClosestDistance) == 0x000010, "Member 'BP_Weapon_C_FindTargetForMelee::ClosestDistance' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindTargetForMelee, ClosestActor) == 0x000018, "Member 'BP_Weapon_C_FindTargetForMelee::ClosestActor' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindTargetForMelee, Temp_bool_Variable) == 0x000020, "Member 'BP_Weapon_C_FindTargetForMelee::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindTargetForMelee, Temp_real_Variable) == 0x000028, "Member 'BP_Weapon_C_FindTargetForMelee::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindTargetForMelee, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_Weapon_C_FindTargetForMelee::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindTargetForMelee, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_Weapon_C_FindTargetForMelee::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindTargetForMelee, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_Weapon_C_FindTargetForMelee::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindTargetForMelee, CallFunc_IsValid_ReturnValue) == 0x00003C, "Member 'BP_Weapon_C_FindTargetForMelee::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindTargetForMelee, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'BP_Weapon_C_FindTargetForMelee::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindTargetForMelee, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000058, "Member 'BP_Weapon_C_FindTargetForMelee::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindTargetForMelee, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000070, "Member 'BP_Weapon_C_FindTargetForMelee::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindTargetForMelee, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000088, "Member 'BP_Weapon_C_FindTargetForMelee::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindTargetForMelee, CallFunc_Normal_ReturnValue) == 0x0000A0, "Member 'BP_Weapon_C_FindTargetForMelee::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindTargetForMelee, CallFunc_VSize_ReturnValue) == 0x0000B8, "Member 'BP_Weapon_C_FindTargetForMelee::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindTargetForMelee, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'BP_Weapon_C_FindTargetForMelee::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindTargetForMelee, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x0000C8, "Member 'BP_Weapon_C_FindTargetForMelee::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindTargetForMelee, K2Node_Select_Default) == 0x0000E0, "Member 'BP_Weapon_C_FindTargetForMelee::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindTargetForMelee, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000E8, "Member 'BP_Weapon_C_FindTargetForMelee::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindTargetForMelee, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x000100, "Member 'BP_Weapon_C_FindTargetForMelee::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindTargetForMelee, CallFunc_Add_VectorVector_ReturnValue) == 0x000118, "Member 'BP_Weapon_C_FindTargetForMelee::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindTargetForMelee, K2Node_MakeArray_Array) == 0x000130, "Member 'BP_Weapon_C_FindTargetForMelee::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindTargetForMelee, K2Node_MakeArray_Array_1) == 0x000140, "Member 'BP_Weapon_C_FindTargetForMelee::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindTargetForMelee, CallFunc_SphereOverlapActors_OutActors) == 0x000150, "Member 'BP_Weapon_C_FindTargetForMelee::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindTargetForMelee, CallFunc_SphereOverlapActors_ReturnValue) == 0x000160, "Member 'BP_Weapon_C_FindTargetForMelee::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindTargetForMelee, CallFunc_Array_Length_ReturnValue) == 0x000164, "Member 'BP_Weapon_C_FindTargetForMelee::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindTargetForMelee, CallFunc_Less_IntInt_ReturnValue) == 0x000168, "Member 'BP_Weapon_C_FindTargetForMelee::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindTargetForMelee, CallFunc_Array_Get_Item) == 0x000170, "Member 'BP_Weapon_C_FindTargetForMelee::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindTargetForMelee, CallFunc_K2_GetActorLocation_ReturnValue_5) == 0x000178, "Member 'BP_Weapon_C_FindTargetForMelee::CallFunc_K2_GetActorLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindTargetForMelee, CallFunc_Vector_DistanceSquared_ReturnValue) == 0x000190, "Member 'BP_Weapon_C_FindTargetForMelee::CallFunc_Vector_DistanceSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindTargetForMelee, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000198, "Member 'BP_Weapon_C_FindTargetForMelee::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindTargetForMelee, CallFunc_MakeRotFromX_ReturnValue) == 0x0001B0, "Member 'BP_Weapon_C_FindTargetForMelee::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindTargetForMelee, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0001C8, "Member 'BP_Weapon_C_FindTargetForMelee::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindTargetForMelee, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x0001D0, "Member 'BP_Weapon_C_FindTargetForMelee::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindTargetForMelee, CallFunc_BreakRotator_Roll) == 0x0001E8, "Member 'BP_Weapon_C_FindTargetForMelee::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindTargetForMelee, CallFunc_BreakRotator_Pitch) == 0x0001EC, "Member 'BP_Weapon_C_FindTargetForMelee::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindTargetForMelee, CallFunc_BreakRotator_Yaw) == 0x0001F0, "Member 'BP_Weapon_C_FindTargetForMelee::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindTargetForMelee, CallFunc_InRange_FloatFloat_ReturnValue) == 0x0001F4, "Member 'BP_Weapon_C_FindTargetForMelee::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_FindTargetForMelee, CallFunc_InRange_FloatFloat_Value_ImplicitCast) == 0x0001F8, "Member 'BP_Weapon_C_FindTargetForMelee::CallFunc_InRange_FloatFloat_Value_ImplicitCast' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.fire
// 0x0001 (0x0001 - 0x0000)
struct BP_Weapon_C_Fire final
{
public:
	bool                                          _PulledTrigger;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_Fire) == 0x000001, "Wrong alignment on BP_Weapon_C_Fire");
static_assert(sizeof(BP_Weapon_C_Fire) == 0x000001, "Wrong size on BP_Weapon_C_Fire");
static_assert(offsetof(BP_Weapon_C_Fire, _PulledTrigger) == 0x000000, "Member 'BP_Weapon_C_Fire::_PulledTrigger' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.GetDecalMaterial
// 0x0240 (0x0240 - 0x0000)
struct BP_Weapon_C_GetDecalMaterial final
{
public:
	EPhysicalSurface                              SurfaceType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               DynMat;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Size;                                              // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ID;                                                // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_6;                              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_7;                              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_8;                              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_9;                              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_10;                             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_11;                             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_12;                             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_13;                             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_14;                             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_15;                             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_16;                             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_17;                             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_18;                             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_19;                             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_20;                             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_21;                             // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_22;                             // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_23;                             // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_24;                             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_25;                             // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_26;                             // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_27;                             // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_28;                             // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_29;                             // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_30;                             // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_31;                             // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_32;                             // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_33;                             // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_34;                             // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_35;                             // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_36;                             // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_37;                             // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_38;                             // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_39;                             // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_40;                             // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_41;                             // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_42;                             // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_43;                             // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_44;                             // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBPS_HitDecals                         CallFunc_GetDataTableRowFromName_OutRow;           // 0x01B8(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item;                           // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      CallFunc_Array_Get_Item_1;                         // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_GetDecalMaterial) == 0x000008, "Wrong alignment on BP_Weapon_C_GetDecalMaterial");
static_assert(sizeof(BP_Weapon_C_GetDecalMaterial) == 0x000240, "Wrong size on BP_Weapon_C_GetDecalMaterial");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, SurfaceType) == 0x000000, "Member 'BP_Weapon_C_GetDecalMaterial::SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, DynMat) == 0x000008, "Member 'BP_Weapon_C_GetDecalMaterial::DynMat' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Size) == 0x000010, "Member 'BP_Weapon_C_GetDecalMaterial::Size' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, ID) == 0x000028, "Member 'BP_Weapon_C_GetDecalMaterial::ID' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Temp_byte_Variable) == 0x00002C, "Member 'BP_Weapon_C_GetDecalMaterial::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, K2Node_SwitchEnum_CmpSuccess) == 0x00002D, "Member 'BP_Weapon_C_GetDecalMaterial::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Temp_name_Variable) == 0x000030, "Member 'BP_Weapon_C_GetDecalMaterial::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Temp_name_Variable_1) == 0x000038, "Member 'BP_Weapon_C_GetDecalMaterial::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Temp_name_Variable_2) == 0x000040, "Member 'BP_Weapon_C_GetDecalMaterial::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Temp_name_Variable_3) == 0x000048, "Member 'BP_Weapon_C_GetDecalMaterial::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Temp_name_Variable_4) == 0x000050, "Member 'BP_Weapon_C_GetDecalMaterial::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Temp_name_Variable_5) == 0x000058, "Member 'BP_Weapon_C_GetDecalMaterial::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Temp_name_Variable_6) == 0x000060, "Member 'BP_Weapon_C_GetDecalMaterial::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Temp_name_Variable_7) == 0x000068, "Member 'BP_Weapon_C_GetDecalMaterial::Temp_name_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Temp_name_Variable_8) == 0x000070, "Member 'BP_Weapon_C_GetDecalMaterial::Temp_name_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Temp_name_Variable_9) == 0x000078, "Member 'BP_Weapon_C_GetDecalMaterial::Temp_name_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Temp_name_Variable_10) == 0x000080, "Member 'BP_Weapon_C_GetDecalMaterial::Temp_name_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Temp_name_Variable_11) == 0x000088, "Member 'BP_Weapon_C_GetDecalMaterial::Temp_name_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Temp_name_Variable_12) == 0x000090, "Member 'BP_Weapon_C_GetDecalMaterial::Temp_name_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Temp_name_Variable_13) == 0x000098, "Member 'BP_Weapon_C_GetDecalMaterial::Temp_name_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Temp_name_Variable_14) == 0x0000A0, "Member 'BP_Weapon_C_GetDecalMaterial::Temp_name_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Temp_name_Variable_15) == 0x0000A8, "Member 'BP_Weapon_C_GetDecalMaterial::Temp_name_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Temp_name_Variable_16) == 0x0000B0, "Member 'BP_Weapon_C_GetDecalMaterial::Temp_name_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Temp_name_Variable_17) == 0x0000B8, "Member 'BP_Weapon_C_GetDecalMaterial::Temp_name_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Temp_name_Variable_18) == 0x0000C0, "Member 'BP_Weapon_C_GetDecalMaterial::Temp_name_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Temp_name_Variable_19) == 0x0000C8, "Member 'BP_Weapon_C_GetDecalMaterial::Temp_name_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Temp_name_Variable_20) == 0x0000D0, "Member 'BP_Weapon_C_GetDecalMaterial::Temp_name_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Temp_name_Variable_21) == 0x0000D8, "Member 'BP_Weapon_C_GetDecalMaterial::Temp_name_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Temp_name_Variable_22) == 0x0000E0, "Member 'BP_Weapon_C_GetDecalMaterial::Temp_name_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Temp_name_Variable_23) == 0x0000E8, "Member 'BP_Weapon_C_GetDecalMaterial::Temp_name_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Temp_name_Variable_24) == 0x0000F0, "Member 'BP_Weapon_C_GetDecalMaterial::Temp_name_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Temp_name_Variable_25) == 0x0000F8, "Member 'BP_Weapon_C_GetDecalMaterial::Temp_name_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Temp_name_Variable_26) == 0x000100, "Member 'BP_Weapon_C_GetDecalMaterial::Temp_name_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Temp_name_Variable_27) == 0x000108, "Member 'BP_Weapon_C_GetDecalMaterial::Temp_name_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Temp_name_Variable_28) == 0x000110, "Member 'BP_Weapon_C_GetDecalMaterial::Temp_name_Variable_28' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Temp_name_Variable_29) == 0x000118, "Member 'BP_Weapon_C_GetDecalMaterial::Temp_name_Variable_29' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Temp_name_Variable_30) == 0x000120, "Member 'BP_Weapon_C_GetDecalMaterial::Temp_name_Variable_30' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Temp_name_Variable_31) == 0x000128, "Member 'BP_Weapon_C_GetDecalMaterial::Temp_name_Variable_31' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Temp_name_Variable_32) == 0x000130, "Member 'BP_Weapon_C_GetDecalMaterial::Temp_name_Variable_32' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Temp_name_Variable_33) == 0x000138, "Member 'BP_Weapon_C_GetDecalMaterial::Temp_name_Variable_33' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Temp_name_Variable_34) == 0x000140, "Member 'BP_Weapon_C_GetDecalMaterial::Temp_name_Variable_34' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Temp_name_Variable_35) == 0x000148, "Member 'BP_Weapon_C_GetDecalMaterial::Temp_name_Variable_35' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Temp_name_Variable_36) == 0x000150, "Member 'BP_Weapon_C_GetDecalMaterial::Temp_name_Variable_36' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Temp_name_Variable_37) == 0x000158, "Member 'BP_Weapon_C_GetDecalMaterial::Temp_name_Variable_37' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Temp_name_Variable_38) == 0x000160, "Member 'BP_Weapon_C_GetDecalMaterial::Temp_name_Variable_38' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Temp_name_Variable_39) == 0x000168, "Member 'BP_Weapon_C_GetDecalMaterial::Temp_name_Variable_39' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Temp_name_Variable_40) == 0x000170, "Member 'BP_Weapon_C_GetDecalMaterial::Temp_name_Variable_40' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Temp_name_Variable_41) == 0x000178, "Member 'BP_Weapon_C_GetDecalMaterial::Temp_name_Variable_41' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Temp_name_Variable_42) == 0x000180, "Member 'BP_Weapon_C_GetDecalMaterial::Temp_name_Variable_42' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Temp_name_Variable_43) == 0x000188, "Member 'BP_Weapon_C_GetDecalMaterial::Temp_name_Variable_43' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, Temp_name_Variable_44) == 0x000190, "Member 'BP_Weapon_C_GetDecalMaterial::Temp_name_Variable_44' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, CallFunc_BreakVector_X) == 0x000198, "Member 'BP_Weapon_C_GetDecalMaterial::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, CallFunc_BreakVector_Y) == 0x0001A0, "Member 'BP_Weapon_C_GetDecalMaterial::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, CallFunc_BreakVector_Z) == 0x0001A8, "Member 'BP_Weapon_C_GetDecalMaterial::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, K2Node_Select_Default) == 0x0001B0, "Member 'BP_Weapon_C_GetDecalMaterial::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, CallFunc_GetDataTableRowFromName_OutRow) == 0x0001B8, "Member 'BP_Weapon_C_GetDecalMaterial::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0001E8, "Member 'BP_Weapon_C_GetDecalMaterial::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, CallFunc_Array_Get_Item) == 0x0001F0, "Member 'BP_Weapon_C_GetDecalMaterial::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, CallFunc_Array_Get_Item_1) == 0x0001F8, "Member 'BP_Weapon_C_GetDecalMaterial::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000200, "Member 'BP_Weapon_C_GetDecalMaterial::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000208, "Member 'BP_Weapon_C_GetDecalMaterial::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000210, "Member 'BP_Weapon_C_GetDecalMaterial::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, CallFunc_Array_Length_ReturnValue) == 0x000218, "Member 'BP_Weapon_C_GetDecalMaterial::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, CallFunc_MakeVector_ReturnValue) == 0x000220, "Member 'BP_Weapon_C_GetDecalMaterial::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, CallFunc_Subtract_IntInt_ReturnValue) == 0x000238, "Member 'BP_Weapon_C_GetDecalMaterial::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetDecalMaterial, CallFunc_RandomIntegerInRange_ReturnValue) == 0x00023C, "Member 'BP_Weapon_C_GetDecalMaterial::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.GetMeleeWeaponMontage
// 0x0020 (0x0020 - 0x0000)
struct BP_Weapon_C_GetMeleeWeaponMontage final
{
public:
	class UAnimMontage*                           Output;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_GetMeleeWeaponMontage) == 0x000008, "Wrong alignment on BP_Weapon_C_GetMeleeWeaponMontage");
static_assert(sizeof(BP_Weapon_C_GetMeleeWeaponMontage) == 0x000020, "Wrong size on BP_Weapon_C_GetMeleeWeaponMontage");
static_assert(offsetof(BP_Weapon_C_GetMeleeWeaponMontage, Output) == 0x000000, "Member 'BP_Weapon_C_GetMeleeWeaponMontage::Output' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetMeleeWeaponMontage, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000008, "Member 'BP_Weapon_C_GetMeleeWeaponMontage::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetMeleeWeaponMontage, K2Node_DynamicCast_AsAnim_Montage) == 0x000010, "Member 'BP_Weapon_C_GetMeleeWeaponMontage::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetMeleeWeaponMontage, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Weapon_C_GetMeleeWeaponMontage::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.GetPhasedReloadBegin2
// 0x0020 (0x0020 - 0x0000)
struct BP_Weapon_C_GetPhasedReloadBegin2 final
{
public:
	class UAnimMontage*                           NewParam;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_GetPhasedReloadBegin2) == 0x000008, "Wrong alignment on BP_Weapon_C_GetPhasedReloadBegin2");
static_assert(sizeof(BP_Weapon_C_GetPhasedReloadBegin2) == 0x000020, "Wrong size on BP_Weapon_C_GetPhasedReloadBegin2");
static_assert(offsetof(BP_Weapon_C_GetPhasedReloadBegin2, NewParam) == 0x000000, "Member 'BP_Weapon_C_GetPhasedReloadBegin2::NewParam' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetPhasedReloadBegin2, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000008, "Member 'BP_Weapon_C_GetPhasedReloadBegin2::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetPhasedReloadBegin2, K2Node_DynamicCast_AsAnim_Montage) == 0x000010, "Member 'BP_Weapon_C_GetPhasedReloadBegin2::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetPhasedReloadBegin2, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Weapon_C_GetPhasedReloadBegin2::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.GetPhasedReloadEnd2
// 0x0020 (0x0020 - 0x0000)
struct BP_Weapon_C_GetPhasedReloadEnd2 final
{
public:
	class UAnimMontage*                           NewParam;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_GetPhasedReloadEnd2) == 0x000008, "Wrong alignment on BP_Weapon_C_GetPhasedReloadEnd2");
static_assert(sizeof(BP_Weapon_C_GetPhasedReloadEnd2) == 0x000020, "Wrong size on BP_Weapon_C_GetPhasedReloadEnd2");
static_assert(offsetof(BP_Weapon_C_GetPhasedReloadEnd2, NewParam) == 0x000000, "Member 'BP_Weapon_C_GetPhasedReloadEnd2::NewParam' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetPhasedReloadEnd2, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000008, "Member 'BP_Weapon_C_GetPhasedReloadEnd2::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetPhasedReloadEnd2, K2Node_DynamicCast_AsAnim_Montage) == 0x000010, "Member 'BP_Weapon_C_GetPhasedReloadEnd2::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetPhasedReloadEnd2, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Weapon_C_GetPhasedReloadEnd2::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.GetPhasedReloadLoop2
// 0x0020 (0x0020 - 0x0000)
struct BP_Weapon_C_GetPhasedReloadLoop2 final
{
public:
	class UAnimMontage*                           NewParam;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_GetPhasedReloadLoop2) == 0x000008, "Wrong alignment on BP_Weapon_C_GetPhasedReloadLoop2");
static_assert(sizeof(BP_Weapon_C_GetPhasedReloadLoop2) == 0x000020, "Wrong size on BP_Weapon_C_GetPhasedReloadLoop2");
static_assert(offsetof(BP_Weapon_C_GetPhasedReloadLoop2, NewParam) == 0x000000, "Member 'BP_Weapon_C_GetPhasedReloadLoop2::NewParam' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetPhasedReloadLoop2, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000008, "Member 'BP_Weapon_C_GetPhasedReloadLoop2::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetPhasedReloadLoop2, K2Node_DynamicCast_AsAnim_Montage) == 0x000010, "Member 'BP_Weapon_C_GetPhasedReloadLoop2::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetPhasedReloadLoop2, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Weapon_C_GetPhasedReloadLoop2::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.GetProjectileNiagara
// 0x00C8 (0x00C8 - 0x0000)
struct BP_Weapon_C_GetProjectileNiagara final
{
public:
	class UNiagaraSystem*                         Output;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         Temp_object_Variable_2;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         Temp_object_Variable_3;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         Temp_object_Variable_4;                            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_5;                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CollimatorScope_C*                  K2Node_DynamicCast_AsBP_Collimator_Scope;          // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SniperScope_C*                      K2Node_DynamicCast_AsBP_Sniper_Scope;              // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         K2Node_Select_Default;                             // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_CollimatorScope_C*                  K2Node_DynamicCast_AsBP_Collimator_Scope_1;        // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         K2Node_Select_Default_1;                           // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SniperScope_C*                      K2Node_DynamicCast_AsBP_Sniper_Scope_1;            // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         K2Node_Select_Default_2;                           // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_Select_Default_3;                           // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_Select_Default_4;                           // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_GetProjectileNiagara) == 0x000008, "Wrong alignment on BP_Weapon_C_GetProjectileNiagara");
static_assert(sizeof(BP_Weapon_C_GetProjectileNiagara) == 0x0000C8, "Wrong size on BP_Weapon_C_GetProjectileNiagara");
static_assert(offsetof(BP_Weapon_C_GetProjectileNiagara, Output) == 0x000000, "Member 'BP_Weapon_C_GetProjectileNiagara::Output' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetProjectileNiagara, Temp_bool_Variable) == 0x000008, "Member 'BP_Weapon_C_GetProjectileNiagara::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetProjectileNiagara, Temp_object_Variable) == 0x000010, "Member 'BP_Weapon_C_GetProjectileNiagara::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetProjectileNiagara, Temp_object_Variable_1) == 0x000018, "Member 'BP_Weapon_C_GetProjectileNiagara::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetProjectileNiagara, Temp_bool_Variable_1) == 0x000020, "Member 'BP_Weapon_C_GetProjectileNiagara::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetProjectileNiagara, Temp_object_Variable_2) == 0x000028, "Member 'BP_Weapon_C_GetProjectileNiagara::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetProjectileNiagara, Temp_bool_Variable_2) == 0x000030, "Member 'BP_Weapon_C_GetProjectileNiagara::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetProjectileNiagara, Temp_object_Variable_3) == 0x000038, "Member 'BP_Weapon_C_GetProjectileNiagara::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetProjectileNiagara, Temp_bool_Variable_3) == 0x000040, "Member 'BP_Weapon_C_GetProjectileNiagara::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetProjectileNiagara, Temp_object_Variable_4) == 0x000048, "Member 'BP_Weapon_C_GetProjectileNiagara::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetProjectileNiagara, Temp_object_Variable_5) == 0x000050, "Member 'BP_Weapon_C_GetProjectileNiagara::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetProjectileNiagara, Temp_bool_Variable_4) == 0x000058, "Member 'BP_Weapon_C_GetProjectileNiagara::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetProjectileNiagara, K2Node_DynamicCast_AsBP_Collimator_Scope) == 0x000060, "Member 'BP_Weapon_C_GetProjectileNiagara::K2Node_DynamicCast_AsBP_Collimator_Scope' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetProjectileNiagara, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_Weapon_C_GetProjectileNiagara::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetProjectileNiagara, K2Node_DynamicCast_AsBP_Sniper_Scope) == 0x000070, "Member 'BP_Weapon_C_GetProjectileNiagara::K2Node_DynamicCast_AsBP_Sniper_Scope' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetProjectileNiagara, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'BP_Weapon_C_GetProjectileNiagara::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetProjectileNiagara, K2Node_Select_Default) == 0x000080, "Member 'BP_Weapon_C_GetProjectileNiagara::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetProjectileNiagara, K2Node_DynamicCast_AsBP_Collimator_Scope_1) == 0x000088, "Member 'BP_Weapon_C_GetProjectileNiagara::K2Node_DynamicCast_AsBP_Collimator_Scope_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetProjectileNiagara, K2Node_DynamicCast_bSuccess_2) == 0x000090, "Member 'BP_Weapon_C_GetProjectileNiagara::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetProjectileNiagara, K2Node_Select_Default_1) == 0x000098, "Member 'BP_Weapon_C_GetProjectileNiagara::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetProjectileNiagara, K2Node_DynamicCast_AsBP_Sniper_Scope_1) == 0x0000A0, "Member 'BP_Weapon_C_GetProjectileNiagara::K2Node_DynamicCast_AsBP_Sniper_Scope_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetProjectileNiagara, K2Node_DynamicCast_bSuccess_3) == 0x0000A8, "Member 'BP_Weapon_C_GetProjectileNiagara::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetProjectileNiagara, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000A9, "Member 'BP_Weapon_C_GetProjectileNiagara::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetProjectileNiagara, K2Node_Select_Default_2) == 0x0000B0, "Member 'BP_Weapon_C_GetProjectileNiagara::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetProjectileNiagara, K2Node_Select_Default_3) == 0x0000B8, "Member 'BP_Weapon_C_GetProjectileNiagara::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetProjectileNiagara, K2Node_Select_Default_4) == 0x0000C0, "Member 'BP_Weapon_C_GetProjectileNiagara::K2Node_Select_Default_4' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.GetReloadCharAnim2
// 0x0020 (0x0020 - 0x0000)
struct BP_Weapon_C_GetReloadCharAnim2 final
{
public:
	class UAnimMontage*                           NewParam;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_GetReloadCharAnim2) == 0x000008, "Wrong alignment on BP_Weapon_C_GetReloadCharAnim2");
static_assert(sizeof(BP_Weapon_C_GetReloadCharAnim2) == 0x000020, "Wrong size on BP_Weapon_C_GetReloadCharAnim2");
static_assert(offsetof(BP_Weapon_C_GetReloadCharAnim2, NewParam) == 0x000000, "Member 'BP_Weapon_C_GetReloadCharAnim2::NewParam' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetReloadCharAnim2, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000008, "Member 'BP_Weapon_C_GetReloadCharAnim2::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetReloadCharAnim2, K2Node_DynamicCast_AsAnim_Montage) == 0x000010, "Member 'BP_Weapon_C_GetReloadCharAnim2::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetReloadCharAnim2, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Weapon_C_GetReloadCharAnim2::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.GetReloadPlayRate
// 0x0078 (0x0078 - 0x0000)
struct BP_Weapon_C_GetReloadPlayRate final
{
public:
	double                                        PlayRate;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_Weapon_Type                              Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_1;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_Weapon_Type                              Temp_byte_Variable_1;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Map_Find_Value;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_GetReloadPlayRate) == 0x000008, "Wrong alignment on BP_Weapon_C_GetReloadPlayRate");
static_assert(sizeof(BP_Weapon_C_GetReloadPlayRate) == 0x000078, "Wrong size on BP_Weapon_C_GetReloadPlayRate");
static_assert(offsetof(BP_Weapon_C_GetReloadPlayRate, PlayRate) == 0x000000, "Member 'BP_Weapon_C_GetReloadPlayRate::PlayRate' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetReloadPlayRate, Temp_real_Variable) == 0x000008, "Member 'BP_Weapon_C_GetReloadPlayRate::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetReloadPlayRate, Temp_byte_Variable) == 0x000010, "Member 'BP_Weapon_C_GetReloadPlayRate::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetReloadPlayRate, Temp_real_Variable_1) == 0x000018, "Member 'BP_Weapon_C_GetReloadPlayRate::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetReloadPlayRate, Temp_real_Variable_2) == 0x000020, "Member 'BP_Weapon_C_GetReloadPlayRate::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetReloadPlayRate, Temp_real_Variable_3) == 0x000028, "Member 'BP_Weapon_C_GetReloadPlayRate::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetReloadPlayRate, Temp_byte_Variable_1) == 0x000030, "Member 'BP_Weapon_C_GetReloadPlayRate::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetReloadPlayRate, K2Node_Select_Default) == 0x000038, "Member 'BP_Weapon_C_GetReloadPlayRate::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetReloadPlayRate, K2Node_Select_Default_1) == 0x000040, "Member 'BP_Weapon_C_GetReloadPlayRate::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetReloadPlayRate, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'BP_Weapon_C_GetReloadPlayRate::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetReloadPlayRate, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'BP_Weapon_C_GetReloadPlayRate::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetReloadPlayRate, CallFunc_Map_Find_Value) == 0x000058, "Member 'BP_Weapon_C_GetReloadPlayRate::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetReloadPlayRate, CallFunc_Map_Find_ReturnValue) == 0x000060, "Member 'BP_Weapon_C_GetReloadPlayRate::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetReloadPlayRate, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000068, "Member 'BP_Weapon_C_GetReloadPlayRate::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetReloadPlayRate, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000070, "Member 'BP_Weapon_C_GetReloadPlayRate::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.GetWeaponShotMontage
// 0x0020 (0x0020 - 0x0000)
struct BP_Weapon_C_GetWeaponShotMontage final
{
public:
	class UAnimMontage*                           NewParam;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_GetWeaponShotMontage) == 0x000008, "Wrong alignment on BP_Weapon_C_GetWeaponShotMontage");
static_assert(sizeof(BP_Weapon_C_GetWeaponShotMontage) == 0x000020, "Wrong size on BP_Weapon_C_GetWeaponShotMontage");
static_assert(offsetof(BP_Weapon_C_GetWeaponShotMontage, NewParam) == 0x000000, "Member 'BP_Weapon_C_GetWeaponShotMontage::NewParam' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetWeaponShotMontage, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000008, "Member 'BP_Weapon_C_GetWeaponShotMontage::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetWeaponShotMontage, K2Node_DynamicCast_AsAnim_Montage) == 0x000010, "Member 'BP_Weapon_C_GetWeaponShotMontage::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_GetWeaponShotMontage, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Weapon_C_GetWeaponShotMontage::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.HeadshotXP
// 0x0058 (0x0058 - 0x0000)
struct BP_Weapon_C_HeadshotXP final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class II_AIInfo_C>           K2Node_DynamicCast_AsI_AIInfo;                     // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDead__IsDead_;                          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC;                  // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_HeadshotXP) == 0x000008, "Wrong alignment on BP_Weapon_C_HeadshotXP");
static_assert(sizeof(BP_Weapon_C_HeadshotXP) == 0x000058, "Wrong size on BP_Weapon_C_HeadshotXP");
static_assert(offsetof(BP_Weapon_C_HeadshotXP, HitActor) == 0x000000, "Member 'BP_Weapon_C_HeadshotXP::HitActor' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HeadshotXP, BoneName) == 0x000008, "Member 'BP_Weapon_C_HeadshotXP::BoneName' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HeadshotXP, CallFunc_PlayEvent2D_ReturnValue) == 0x000010, "Member 'BP_Weapon_C_HeadshotXP::CallFunc_PlayEvent2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HeadshotXP, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000018, "Member 'BP_Weapon_C_HeadshotXP::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HeadshotXP, K2Node_DynamicCast_AsI_AIInfo) == 0x000020, "Member 'BP_Weapon_C_HeadshotXP::K2Node_DynamicCast_AsI_AIInfo' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HeadshotXP, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_Weapon_C_HeadshotXP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HeadshotXP, CallFunc_IsDead__IsDead_) == 0x000031, "Member 'BP_Weapon_C_HeadshotXP::CallFunc_IsDead__IsDead_' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HeadshotXP, CallFunc_GetPlayerController_ReturnValue) == 0x000038, "Member 'BP_Weapon_C_HeadshotXP::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HeadshotXP, K2Node_DynamicCast_AsBPI_Surv_PC) == 0x000040, "Member 'BP_Weapon_C_HeadshotXP::K2Node_DynamicCast_AsBPI_Surv_PC' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HeadshotXP, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_Weapon_C_HeadshotXP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.HipFireCamera
// 0x0001 (0x0001 - 0x0000)
struct BP_Weapon_C_HipFireCamera final
{
public:
	bool                                          On_;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_HipFireCamera) == 0x000001, "Wrong alignment on BP_Weapon_C_HipFireCamera");
static_assert(sizeof(BP_Weapon_C_HipFireCamera) == 0x000001, "Wrong size on BP_Weapon_C_HipFireCamera");
static_assert(offsetof(BP_Weapon_C_HipFireCamera, On_) == 0x000000, "Member 'BP_Weapon_C_HipFireCamera::On_' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.HipFireServer
// 0x0001 (0x0001 - 0x0000)
struct BP_Weapon_C_HipFireServer final
{
public:
	bool                                          Param_HipFireMode;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_HipFireServer) == 0x000001, "Wrong alignment on BP_Weapon_C_HipFireServer");
static_assert(sizeof(BP_Weapon_C_HipFireServer) == 0x000001, "Wrong size on BP_Weapon_C_HipFireServer");
static_assert(offsetof(BP_Weapon_C_HipFireServer, Param_HipFireMode) == 0x000000, "Member 'BP_Weapon_C_HipFireServer::Param_HipFireMode' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.HitHandling
// 0x0270 (0x0270 - 0x0000)
struct BP_Weapon_C_HitHandling final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                ImpactPoint;                                       // 0x00E8(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpactNormal;                                      // 0x0100(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              SurfaceType;                                       // 0x0118(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        HitParticle;                                       // 0x0120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          HitParticleFinded;                                 // 0x0128(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14A[0x2];                                      // 0x014A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EC[0x4];                                      // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RebaseZeroOriginOntoLocal_ReturnValue;    // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_HitHandling) == 0x000008, "Wrong alignment on BP_Weapon_C_HitHandling");
static_assert(sizeof(BP_Weapon_C_HitHandling) == 0x000270, "Wrong size on BP_Weapon_C_HitHandling");
static_assert(offsetof(BP_Weapon_C_HitHandling, Hit) == 0x000000, "Member 'BP_Weapon_C_HitHandling::Hit' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitHandling, ImpactPoint) == 0x0000E8, "Member 'BP_Weapon_C_HitHandling::ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitHandling, ImpactNormal) == 0x000100, "Member 'BP_Weapon_C_HitHandling::ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitHandling, SurfaceType) == 0x000118, "Member 'BP_Weapon_C_HitHandling::SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitHandling, HitParticle) == 0x000120, "Member 'BP_Weapon_C_HitHandling::HitParticle' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitHandling, HitParticleFinded) == 0x000128, "Member 'BP_Weapon_C_HitHandling::HitParticleFinded' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitHandling, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000130, "Member 'BP_Weapon_C_HitHandling::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitHandling, CallFunc_BreakHitResult_bBlockingHit) == 0x000148, "Member 'BP_Weapon_C_HitHandling::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitHandling, CallFunc_BreakHitResult_bInitialOverlap) == 0x000149, "Member 'BP_Weapon_C_HitHandling::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitHandling, CallFunc_BreakHitResult_Time) == 0x00014C, "Member 'BP_Weapon_C_HitHandling::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitHandling, CallFunc_BreakHitResult_Distance) == 0x000150, "Member 'BP_Weapon_C_HitHandling::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitHandling, CallFunc_BreakHitResult_Location) == 0x000158, "Member 'BP_Weapon_C_HitHandling::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitHandling, CallFunc_BreakHitResult_ImpactPoint) == 0x000170, "Member 'BP_Weapon_C_HitHandling::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitHandling, CallFunc_BreakHitResult_Normal) == 0x000188, "Member 'BP_Weapon_C_HitHandling::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitHandling, CallFunc_BreakHitResult_ImpactNormal) == 0x0001A0, "Member 'BP_Weapon_C_HitHandling::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitHandling, CallFunc_BreakHitResult_PhysMat) == 0x0001B8, "Member 'BP_Weapon_C_HitHandling::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitHandling, CallFunc_BreakHitResult_HitActor) == 0x0001C0, "Member 'BP_Weapon_C_HitHandling::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitHandling, CallFunc_BreakHitResult_HitComponent) == 0x0001C8, "Member 'BP_Weapon_C_HitHandling::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitHandling, CallFunc_BreakHitResult_HitBoneName) == 0x0001D0, "Member 'BP_Weapon_C_HitHandling::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitHandling, CallFunc_BreakHitResult_BoneName) == 0x0001D8, "Member 'BP_Weapon_C_HitHandling::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitHandling, CallFunc_BreakHitResult_HitItem) == 0x0001E0, "Member 'BP_Weapon_C_HitHandling::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitHandling, CallFunc_BreakHitResult_ElementIndex) == 0x0001E4, "Member 'BP_Weapon_C_HitHandling::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitHandling, CallFunc_BreakHitResult_FaceIndex) == 0x0001E8, "Member 'BP_Weapon_C_HitHandling::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitHandling, CallFunc_BreakHitResult_TraceStart) == 0x0001F0, "Member 'BP_Weapon_C_HitHandling::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitHandling, CallFunc_BreakHitResult_TraceEnd) == 0x000208, "Member 'BP_Weapon_C_HitHandling::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitHandling, CallFunc_RebaseZeroOriginOntoLocal_ReturnValue) == 0x000220, "Member 'BP_Weapon_C_HitHandling::CallFunc_RebaseZeroOriginOntoLocal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitHandling, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000238, "Member 'BP_Weapon_C_HitHandling::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitHandling, CallFunc_IsValid_ReturnValue) == 0x000250, "Member 'BP_Weapon_C_HitHandling::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitHandling, CallFunc_Normal_ReturnValue) == 0x000258, "Member 'BP_Weapon_C_HitHandling::CallFunc_Normal_ReturnValue' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.HitSimplify
// 0x0370 (0x0370 - 0x0000)
struct BP_Weapon_C_HitSimplify final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FS_SimplifiedHitInfo                   S_SimplifiedHitInfo;                               // 0x00E8(0x0080)(Parm, OutParm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16A[0x2];                                      // 0x016A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RebaseLocalOriginOntoZero_ReturnValue;    // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RebaseLocalOriginOntoZero_ReturnValue_1;  // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0270(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x02D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_SimplifiedHitInfo                   K2Node_MakeStruct_S_SimplifiedHitInfo;             // 0x02E8(0x0080)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_HitSimplify) == 0x000010, "Wrong alignment on BP_Weapon_C_HitSimplify");
static_assert(sizeof(BP_Weapon_C_HitSimplify) == 0x000370, "Wrong size on BP_Weapon_C_HitSimplify");
static_assert(offsetof(BP_Weapon_C_HitSimplify, Hit) == 0x000000, "Member 'BP_Weapon_C_HitSimplify::Hit' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitSimplify, S_SimplifiedHitInfo) == 0x0000E8, "Member 'BP_Weapon_C_HitSimplify::S_SimplifiedHitInfo' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitSimplify, CallFunc_BreakHitResult_bBlockingHit) == 0x000168, "Member 'BP_Weapon_C_HitSimplify::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitSimplify, CallFunc_BreakHitResult_bInitialOverlap) == 0x000169, "Member 'BP_Weapon_C_HitSimplify::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitSimplify, CallFunc_BreakHitResult_Time) == 0x00016C, "Member 'BP_Weapon_C_HitSimplify::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitSimplify, CallFunc_BreakHitResult_Distance) == 0x000170, "Member 'BP_Weapon_C_HitSimplify::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitSimplify, CallFunc_BreakHitResult_Location) == 0x000178, "Member 'BP_Weapon_C_HitSimplify::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitSimplify, CallFunc_BreakHitResult_ImpactPoint) == 0x000190, "Member 'BP_Weapon_C_HitSimplify::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitSimplify, CallFunc_BreakHitResult_Normal) == 0x0001A8, "Member 'BP_Weapon_C_HitSimplify::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitSimplify, CallFunc_BreakHitResult_ImpactNormal) == 0x0001C0, "Member 'BP_Weapon_C_HitSimplify::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitSimplify, CallFunc_BreakHitResult_PhysMat) == 0x0001D8, "Member 'BP_Weapon_C_HitSimplify::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitSimplify, CallFunc_BreakHitResult_HitActor) == 0x0001E0, "Member 'BP_Weapon_C_HitSimplify::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitSimplify, CallFunc_BreakHitResult_HitComponent) == 0x0001E8, "Member 'BP_Weapon_C_HitSimplify::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitSimplify, CallFunc_BreakHitResult_HitBoneName) == 0x0001F0, "Member 'BP_Weapon_C_HitSimplify::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitSimplify, CallFunc_BreakHitResult_BoneName) == 0x0001F8, "Member 'BP_Weapon_C_HitSimplify::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitSimplify, CallFunc_BreakHitResult_HitItem) == 0x000200, "Member 'BP_Weapon_C_HitSimplify::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitSimplify, CallFunc_BreakHitResult_ElementIndex) == 0x000204, "Member 'BP_Weapon_C_HitSimplify::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitSimplify, CallFunc_BreakHitResult_FaceIndex) == 0x000208, "Member 'BP_Weapon_C_HitSimplify::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitSimplify, CallFunc_BreakHitResult_TraceStart) == 0x000210, "Member 'BP_Weapon_C_HitSimplify::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitSimplify, CallFunc_BreakHitResult_TraceEnd) == 0x000228, "Member 'BP_Weapon_C_HitSimplify::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitSimplify, CallFunc_RebaseLocalOriginOntoZero_ReturnValue) == 0x000240, "Member 'BP_Weapon_C_HitSimplify::CallFunc_RebaseLocalOriginOntoZero_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitSimplify, CallFunc_RebaseLocalOriginOntoZero_ReturnValue_1) == 0x000258, "Member 'BP_Weapon_C_HitSimplify::CallFunc_RebaseLocalOriginOntoZero_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitSimplify, CallFunc_GetTransform_ReturnValue) == 0x000270, "Member 'BP_Weapon_C_HitSimplify::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitSimplify, CallFunc_InverseTransformLocation_ReturnValue) == 0x0002D0, "Member 'BP_Weapon_C_HitSimplify::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitSimplify, K2Node_MakeStruct_S_SimplifiedHitInfo) == 0x0002E8, "Member 'BP_Weapon_C_HitSimplify::K2Node_MakeStruct_S_SimplifiedHitInfo' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.HitTraceFromCenter
// 0x0280 (0x0280 - 0x0000)
struct BP_Weapon_C_HitTraceFromCenter final
{
public:
	struct FHitResult                             BlockingHit;                                       // 0x0000(0x00E8)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          WasHit;                                            // 0x00E8(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LocationWithoutHit;                                // 0x00F0(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ShootDirection_BeginPoint;                // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ShootDirection_EndPoint;                  // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ShootDirection_CamForwardVector;          // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0180(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0190(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_HitTraceFromCenter) == 0x000008, "Wrong alignment on BP_Weapon_C_HitTraceFromCenter");
static_assert(sizeof(BP_Weapon_C_HitTraceFromCenter) == 0x000280, "Wrong size on BP_Weapon_C_HitTraceFromCenter");
static_assert(offsetof(BP_Weapon_C_HitTraceFromCenter, BlockingHit) == 0x000000, "Member 'BP_Weapon_C_HitTraceFromCenter::BlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitTraceFromCenter, WasHit) == 0x0000E8, "Member 'BP_Weapon_C_HitTraceFromCenter::WasHit' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitTraceFromCenter, LocationWithoutHit) == 0x0000F0, "Member 'BP_Weapon_C_HitTraceFromCenter::LocationWithoutHit' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitTraceFromCenter, CallFunc_ShootDirection_BeginPoint) == 0x000108, "Member 'BP_Weapon_C_HitTraceFromCenter::CallFunc_ShootDirection_BeginPoint' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitTraceFromCenter, CallFunc_ShootDirection_EndPoint) == 0x000120, "Member 'BP_Weapon_C_HitTraceFromCenter::CallFunc_ShootDirection_EndPoint' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitTraceFromCenter, CallFunc_ShootDirection_CamForwardVector) == 0x000138, "Member 'BP_Weapon_C_HitTraceFromCenter::CallFunc_ShootDirection_CamForwardVector' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitTraceFromCenter, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000150, "Member 'BP_Weapon_C_HitTraceFromCenter::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitTraceFromCenter, CallFunc_Add_VectorVector_ReturnValue) == 0x000168, "Member 'BP_Weapon_C_HitTraceFromCenter::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitTraceFromCenter, K2Node_MakeArray_Array) == 0x000180, "Member 'BP_Weapon_C_HitTraceFromCenter::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitTraceFromCenter, CallFunc_LineTraceSingle_OutHit) == 0x000190, "Member 'BP_Weapon_C_HitTraceFromCenter::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_HitTraceFromCenter, CallFunc_LineTraceSingle_ReturnValue) == 0x000278, "Member 'BP_Weapon_C_HitTraceFromCenter::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.InitDurability
// 0x0048 (0x0048 - 0x0000)
struct BP_Weapon_C_InitDurability final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD_1;               // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_InitDurability) == 0x000008, "Wrong alignment on BP_Weapon_C_InitDurability");
static_assert(sizeof(BP_Weapon_C_InitDurability) == 0x000048, "Wrong size on BP_Weapon_C_InitDurability");
static_assert(offsetof(BP_Weapon_C_InitDurability, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'BP_Weapon_C_InitDurability::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_InitDurability, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_Weapon_C_InitDurability::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_InitDurability, CallFunc_GetHUD_ReturnValue) == 0x000010, "Member 'BP_Weapon_C_InitDurability::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_InitDurability, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x000018, "Member 'BP_Weapon_C_InitDurability::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_InitDurability, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_Weapon_C_InitDurability::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_InitDurability, K2Node_DynamicCast_AsBPI_Game_HUD_1) == 0x000030, "Member 'BP_Weapon_C_InitDurability::K2Node_DynamicCast_AsBPI_Game_HUD_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_InitDurability, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_Weapon_C_InitDurability::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_InitDurability, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000041, "Member 'BP_Weapon_C_InitDurability::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.InitValues
// 0x00E0 (0x00E0 - 0x0000)
struct BP_Weapon_C_InitValues final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemCountByName_ReturnedCount;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckAvailabilityAmmoType_bIsChangedAmmoType; // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_AmmoClass                                CallFunc_CheckAvailabilityAmmoType_SettedAmmoClass; // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_AmmoType                                 CallFunc_CheckAvailabilityAmmoType_SettedAmmoType; // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_4;                    // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetItemCountByName_ReturnedCount_1;       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ISurvInterface_C>      K2Node_DynamicCast_AsSurv_Interface;               // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             K2Node_DynamicCast_AsFMODEvent;                    // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_1;         // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             K2Node_DynamicCast_AsFMODEvent_1;                  // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_2;         // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_3;         // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage_1;               // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_InitValues) == 0x000008, "Wrong alignment on BP_Weapon_C_InitValues");
static_assert(sizeof(BP_Weapon_C_InitValues) == 0x0000E0, "Wrong size on BP_Weapon_C_InitValues");
static_assert(offsetof(BP_Weapon_C_InitValues, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_Weapon_C_InitValues::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_InitValues, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000008, "Member 'BP_Weapon_C_InitValues::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_InitValues, CallFunc_GetItemCountByName_ReturnedCount) == 0x000018, "Member 'BP_Weapon_C_InitValues::CallFunc_GetItemCountByName_ReturnedCount' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_InitValues, K2Node_SwitchEnum_CmpSuccess) == 0x00001C, "Member 'BP_Weapon_C_InitValues::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_InitValues, K2Node_SwitchEnum_CmpSuccess_1) == 0x00001D, "Member 'BP_Weapon_C_InitValues::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_InitValues, K2Node_SwitchEnum_CmpSuccess_2) == 0x00001E, "Member 'BP_Weapon_C_InitValues::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_InitValues, CallFunc_CheckAvailabilityAmmoType_bIsChangedAmmoType) == 0x00001F, "Member 'BP_Weapon_C_InitValues::CallFunc_CheckAvailabilityAmmoType_bIsChangedAmmoType' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_InitValues, CallFunc_CheckAvailabilityAmmoType_SettedAmmoClass) == 0x000020, "Member 'BP_Weapon_C_InitValues::CallFunc_CheckAvailabilityAmmoType_SettedAmmoClass' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_InitValues, CallFunc_CheckAvailabilityAmmoType_SettedAmmoType) == 0x000021, "Member 'BP_Weapon_C_InitValues::CallFunc_CheckAvailabilityAmmoType_SettedAmmoType' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_InitValues, K2Node_SwitchEnum_CmpSuccess_3) == 0x000022, "Member 'BP_Weapon_C_InitValues::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_InitValues, K2Node_SwitchEnum_CmpSuccess_4) == 0x000023, "Member 'BP_Weapon_C_InitValues::K2Node_SwitchEnum_CmpSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_InitValues, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000024, "Member 'BP_Weapon_C_InitValues::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_InitValues, CallFunc_IsValid_ReturnValue_1) == 0x000025, "Member 'BP_Weapon_C_InitValues::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_InitValues, CallFunc_MakeVector2D_ReturnValue) == 0x000028, "Member 'BP_Weapon_C_InitValues::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_InitValues, CallFunc_IsValid_ReturnValue_2) == 0x000038, "Member 'BP_Weapon_C_InitValues::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_InitValues, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000039, "Member 'BP_Weapon_C_InitValues::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_InitValues, CallFunc_Not_PreBool_ReturnValue) == 0x00003A, "Member 'BP_Weapon_C_InitValues::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_InitValues, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000040, "Member 'BP_Weapon_C_InitValues::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_InitValues, CallFunc_IsValid_ReturnValue_3) == 0x000050, "Member 'BP_Weapon_C_InitValues::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_InitValues, CallFunc_GetItemCountByName_ReturnedCount_1) == 0x000054, "Member 'BP_Weapon_C_InitValues::CallFunc_GetItemCountByName_ReturnedCount_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_InitValues, K2Node_DynamicCast_AsSurv_Interface) == 0x000058, "Member 'BP_Weapon_C_InitValues::K2Node_DynamicCast_AsSurv_Interface' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_InitValues, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_Weapon_C_InitValues::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_InitValues, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000069, "Member 'BP_Weapon_C_InitValues::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_InitValues, CallFunc_SelectFloat_ReturnValue) == 0x000070, "Member 'BP_Weapon_C_InitValues::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_InitValues, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000078, "Member 'BP_Weapon_C_InitValues::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_InitValues, K2Node_DynamicCast_AsFMODEvent) == 0x000080, "Member 'BP_Weapon_C_InitValues::K2Node_DynamicCast_AsFMODEvent' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_InitValues, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'BP_Weapon_C_InitValues::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_InitValues, CallFunc_LoadAsset_Blocking_ReturnValue_1) == 0x000090, "Member 'BP_Weapon_C_InitValues::CallFunc_LoadAsset_Blocking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_InitValues, K2Node_DynamicCast_AsFMODEvent_1) == 0x000098, "Member 'BP_Weapon_C_InitValues::K2Node_DynamicCast_AsFMODEvent_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_InitValues, K2Node_DynamicCast_bSuccess_2) == 0x0000A0, "Member 'BP_Weapon_C_InitValues::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_InitValues, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x0000A8, "Member 'BP_Weapon_C_InitValues::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_InitValues, CallFunc_LoadAsset_Blocking_ReturnValue_2) == 0x0000B0, "Member 'BP_Weapon_C_InitValues::CallFunc_LoadAsset_Blocking_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_InitValues, K2Node_DynamicCast_AsAnim_Montage) == 0x0000B8, "Member 'BP_Weapon_C_InitValues::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_InitValues, K2Node_DynamicCast_bSuccess_3) == 0x0000C0, "Member 'BP_Weapon_C_InitValues::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_InitValues, CallFunc_LoadAsset_Blocking_ReturnValue_3) == 0x0000C8, "Member 'BP_Weapon_C_InitValues::CallFunc_LoadAsset_Blocking_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_InitValues, K2Node_DynamicCast_AsAnim_Montage_1) == 0x0000D0, "Member 'BP_Weapon_C_InitValues::K2Node_DynamicCast_AsAnim_Montage_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_InitValues, K2Node_DynamicCast_bSuccess_4) == 0x0000D8, "Member 'BP_Weapon_C_InitValues::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.LoadAnimMontage
// 0x0050 (0x0050 - 0x0000)
struct BP_Weapon_C_LoadAnimMontage final
{
public:
	TSoftObjectPtr<class UAnimMontage>            Soft;                                              // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UAnimMontage*                           AnimMontage;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_LoadAnimMontage) == 0x000008, "Wrong alignment on BP_Weapon_C_LoadAnimMontage");
static_assert(sizeof(BP_Weapon_C_LoadAnimMontage) == 0x000050, "Wrong size on BP_Weapon_C_LoadAnimMontage");
static_assert(offsetof(BP_Weapon_C_LoadAnimMontage, Soft) == 0x000000, "Member 'BP_Weapon_C_LoadAnimMontage::Soft' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_LoadAnimMontage, AnimMontage) == 0x000030, "Member 'BP_Weapon_C_LoadAnimMontage::AnimMontage' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_LoadAnimMontage, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000038, "Member 'BP_Weapon_C_LoadAnimMontage::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_LoadAnimMontage, K2Node_DynamicCast_AsAnim_Montage) == 0x000040, "Member 'BP_Weapon_C_LoadAnimMontage::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_LoadAnimMontage, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_Weapon_C_LoadAnimMontage::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.MakeProjectileShot
// 0x0518 (0x0518 - 0x0000)
struct BP_Weapon_C_MakeProjectileShot final
{
public:
	struct FHitResult                             BlockingHit;                                       // 0x0000(0x00E8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          WasHit;                                            // 0x00E8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LocalBlockingHitTraceEnd;                          // 0x00F0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               LocalProjectileRotator;                            // 0x0108(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                LocalMuzzleLocation;                               // 0x0120(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShotWithScope;                                     // 0x0138(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_RebaseLocalOriginOntoZero_ReturnValue;    // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetSocketRotation_ReturnValue;            // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         CallFunc_GetProjectileNiagara_Output;              // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0288(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A2[0x2];                                      // 0x02A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AC[0x4];                                      // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x02B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x02C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x02F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0310(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0318(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0320(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_344[0x4];                                      // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0348(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0360(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SniperScope_C*                      K2Node_DynamicCast_AsBP_Sniper_Scope;              // 0x0378(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0381(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0382(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0383(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38C[0x4];                                      // 0x038C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0390(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x03A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x03C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x03D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x03F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x03F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0400(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_424[0x4];                                      // 0x0424(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0428(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0440(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue_1;         // 0x0458(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_1;            // 0x0470(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_5;           // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B9[0x7];                                      // 0x04B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x04C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x04D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x04F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x0508(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x050C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast_1;          // 0x0510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_1;           // 0x0514(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_MakeProjectileShot) == 0x000008, "Wrong alignment on BP_Weapon_C_MakeProjectileShot");
static_assert(sizeof(BP_Weapon_C_MakeProjectileShot) == 0x000518, "Wrong size on BP_Weapon_C_MakeProjectileShot");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, BlockingHit) == 0x000000, "Member 'BP_Weapon_C_MakeProjectileShot::BlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, WasHit) == 0x0000E8, "Member 'BP_Weapon_C_MakeProjectileShot::WasHit' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, LocalBlockingHitTraceEnd) == 0x0000F0, "Member 'BP_Weapon_C_MakeProjectileShot::LocalBlockingHitTraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, LocalProjectileRotator) == 0x000108, "Member 'BP_Weapon_C_MakeProjectileShot::LocalProjectileRotator' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, LocalMuzzleLocation) == 0x000120, "Member 'BP_Weapon_C_MakeProjectileShot::LocalMuzzleLocation' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, ShotWithScope) == 0x000138, "Member 'BP_Weapon_C_MakeProjectileShot::ShotWithScope' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_RebaseLocalOriginOntoZero_ReturnValue) == 0x000140, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_RebaseLocalOriginOntoZero_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_FindLookAtRotation_ReturnValue) == 0x000158, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_GetSocketRotation_ReturnValue) == 0x000170, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_GetSocketRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_GetSocketLocation_ReturnValue) == 0x000188, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_GetForwardVector_ReturnValue) == 0x0001A0, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0001B8, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_GetProjectileNiagara_Output) == 0x0001D0, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_GetProjectileNiagara_Output' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_Vector_Distance_ReturnValue) == 0x0001D8, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_RandomFloatInRange_ReturnValue) == 0x0001E0, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0001E8, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x0001F0, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000208, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000220, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000228, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_SelectFloat_ReturnValue) == 0x000230, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000238, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_MakeRotator_ReturnValue) == 0x000240, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000258, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_ComposeRotators_ReturnValue) == 0x000260, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_SelectFloat_ReturnValue_1) == 0x000278, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000280, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_MakeRotator_ReturnValue_1) == 0x000288, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_BreakHitResult_bBlockingHit) == 0x0002A0, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_BreakHitResult_bInitialOverlap) == 0x0002A1, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_BreakHitResult_Time) == 0x0002A4, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_BreakHitResult_Distance) == 0x0002A8, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_BreakHitResult_Location) == 0x0002B0, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_BreakHitResult_ImpactPoint) == 0x0002C8, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_BreakHitResult_Normal) == 0x0002E0, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_BreakHitResult_ImpactNormal) == 0x0002F8, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_BreakHitResult_PhysMat) == 0x000310, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_BreakHitResult_HitActor) == 0x000318, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_BreakHitResult_HitComponent) == 0x000320, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_BreakHitResult_HitBoneName) == 0x000328, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_BreakHitResult_BoneName) == 0x000330, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_BreakHitResult_HitItem) == 0x000338, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_BreakHitResult_ElementIndex) == 0x00033C, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_BreakHitResult_FaceIndex) == 0x000340, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_BreakHitResult_TraceStart) == 0x000348, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_BreakHitResult_TraceEnd) == 0x000360, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, K2Node_DynamicCast_AsBP_Sniper_Scope) == 0x000378, "Member 'BP_Weapon_C_MakeProjectileShot::K2Node_DynamicCast_AsBP_Sniper_Scope' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, K2Node_DynamicCast_bSuccess) == 0x000380, "Member 'BP_Weapon_C_MakeProjectileShot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_BooleanAND_ReturnValue) == 0x000381, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000382, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000383, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_BreakHitResult_Time_1) == 0x000384, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_BreakHitResult_Distance_1) == 0x000388, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_BreakHitResult_Location_1) == 0x000390, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_BreakHitResult_ImpactPoint_1) == 0x0003A8, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_BreakHitResult_Normal_1) == 0x0003C0, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_BreakHitResult_ImpactNormal_1) == 0x0003D8, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_BreakHitResult_PhysMat_1) == 0x0003F0, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_BreakHitResult_HitActor_1) == 0x0003F8, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_BreakHitResult_HitComponent_1) == 0x000400, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_BreakHitResult_HitBoneName_1) == 0x000408, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_BreakHitResult_BoneName_1) == 0x000410, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_BreakHitResult_HitItem_1) == 0x000418, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_BreakHitResult_ElementIndex_1) == 0x00041C, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_BreakHitResult_FaceIndex_1) == 0x000420, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_BreakHitResult_TraceStart_1) == 0x000428, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_BreakHitResult_TraceEnd_1) == 0x000440, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_FindLookAtRotation_ReturnValue_1) == 0x000458, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_FindLookAtRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_ComposeRotators_ReturnValue_1) == 0x000470, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_ComposeRotators_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000488, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_SelectFloat_ReturnValue_2) == 0x000490, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x000498, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0004A0, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_Add_DoubleDouble_ReturnValue_5) == 0x0004A8, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_Add_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_SelectFloat_ReturnValue_3) == 0x0004B0, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0004B8, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x0004C0, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x0004D8, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_Add_VectorVector_ReturnValue) == 0x0004F0, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x000508, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x00050C, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_MakeRotator_Roll_ImplicitCast_1) == 0x000510, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_MakeRotator_Roll_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MakeProjectileShot, CallFunc_MakeRotator_Yaw_ImplicitCast_1) == 0x000514, "Member 'BP_Weapon_C_MakeProjectileShot::CallFunc_MakeRotator_Yaw_ImplicitCast_1' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.MeleeTargetRotation
// 0x0098 (0x0098 - 0x0000)
struct BP_Weapon_C_MeleeTargetRotation final
{
public:
	struct FRotator                               ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Weapon_C_MeleeTargetRotation) == 0x000008, "Wrong alignment on BP_Weapon_C_MeleeTargetRotation");
static_assert(sizeof(BP_Weapon_C_MeleeTargetRotation) == 0x000098, "Wrong size on BP_Weapon_C_MeleeTargetRotation");
static_assert(offsetof(BP_Weapon_C_MeleeTargetRotation, ReturnValue) == 0x000000, "Member 'BP_Weapon_C_MeleeTargetRotation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MeleeTargetRotation, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_Weapon_C_MeleeTargetRotation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MeleeTargetRotation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'BP_Weapon_C_MeleeTargetRotation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MeleeTargetRotation, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000038, "Member 'BP_Weapon_C_MeleeTargetRotation::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MeleeTargetRotation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000050, "Member 'BP_Weapon_C_MeleeTargetRotation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MeleeTargetRotation, CallFunc_Normal_ReturnValue) == 0x000068, "Member 'BP_Weapon_C_MeleeTargetRotation::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_MeleeTargetRotation, CallFunc_MakeRotFromX_ReturnValue) == 0x000080, "Member 'BP_Weapon_C_MeleeTargetRotation::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.MultiShotgunReloadAnim
// 0x0001 (0x0001 - 0x0000)
struct BP_Weapon_C_MultiShotgunReloadAnim final
{
public:
	bool                                          BulletIn;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_MultiShotgunReloadAnim) == 0x000001, "Wrong alignment on BP_Weapon_C_MultiShotgunReloadAnim");
static_assert(sizeof(BP_Weapon_C_MultiShotgunReloadAnim) == 0x000001, "Wrong size on BP_Weapon_C_MultiShotgunReloadAnim");
static_assert(offsetof(BP_Weapon_C_MultiShotgunReloadAnim, BulletIn) == 0x000000, "Member 'BP_Weapon_C_MultiShotgunReloadAnim::BulletIn' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.OnBlendOut_0FB3F6564A0CD0C952EFF8BFC06DC154
// 0x0008 (0x0008 - 0x0000)
struct BP_Weapon_C_OnBlendOut_0FB3F6564A0CD0C952EFF8BFC06DC154 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_OnBlendOut_0FB3F6564A0CD0C952EFF8BFC06DC154) == 0x000004, "Wrong alignment on BP_Weapon_C_OnBlendOut_0FB3F6564A0CD0C952EFF8BFC06DC154");
static_assert(sizeof(BP_Weapon_C_OnBlendOut_0FB3F6564A0CD0C952EFF8BFC06DC154) == 0x000008, "Wrong size on BP_Weapon_C_OnBlendOut_0FB3F6564A0CD0C952EFF8BFC06DC154");
static_assert(offsetof(BP_Weapon_C_OnBlendOut_0FB3F6564A0CD0C952EFF8BFC06DC154, NotifyName) == 0x000000, "Member 'BP_Weapon_C_OnBlendOut_0FB3F6564A0CD0C952EFF8BFC06DC154::NotifyName' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.OnBlendOut_642915F049FF687BCEAB758975C4E4D2
// 0x0008 (0x0008 - 0x0000)
struct BP_Weapon_C_OnBlendOut_642915F049FF687BCEAB758975C4E4D2 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_OnBlendOut_642915F049FF687BCEAB758975C4E4D2) == 0x000004, "Wrong alignment on BP_Weapon_C_OnBlendOut_642915F049FF687BCEAB758975C4E4D2");
static_assert(sizeof(BP_Weapon_C_OnBlendOut_642915F049FF687BCEAB758975C4E4D2) == 0x000008, "Wrong size on BP_Weapon_C_OnBlendOut_642915F049FF687BCEAB758975C4E4D2");
static_assert(offsetof(BP_Weapon_C_OnBlendOut_642915F049FF687BCEAB758975C4E4D2, NotifyName) == 0x000000, "Member 'BP_Weapon_C_OnBlendOut_642915F049FF687BCEAB758975C4E4D2::NotifyName' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.OnBlendOut_A24E11344E6A4662725E59913D420242
// 0x0008 (0x0008 - 0x0000)
struct BP_Weapon_C_OnBlendOut_A24E11344E6A4662725E59913D420242 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_OnBlendOut_A24E11344E6A4662725E59913D420242) == 0x000004, "Wrong alignment on BP_Weapon_C_OnBlendOut_A24E11344E6A4662725E59913D420242");
static_assert(sizeof(BP_Weapon_C_OnBlendOut_A24E11344E6A4662725E59913D420242) == 0x000008, "Wrong size on BP_Weapon_C_OnBlendOut_A24E11344E6A4662725E59913D420242");
static_assert(offsetof(BP_Weapon_C_OnBlendOut_A24E11344E6A4662725E59913D420242, NotifyName) == 0x000000, "Member 'BP_Weapon_C_OnBlendOut_A24E11344E6A4662725E59913D420242::NotifyName' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.OnCompleted_0FB3F6564A0CD0C952EFF8BFC06DC154
// 0x0008 (0x0008 - 0x0000)
struct BP_Weapon_C_OnCompleted_0FB3F6564A0CD0C952EFF8BFC06DC154 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_OnCompleted_0FB3F6564A0CD0C952EFF8BFC06DC154) == 0x000004, "Wrong alignment on BP_Weapon_C_OnCompleted_0FB3F6564A0CD0C952EFF8BFC06DC154");
static_assert(sizeof(BP_Weapon_C_OnCompleted_0FB3F6564A0CD0C952EFF8BFC06DC154) == 0x000008, "Wrong size on BP_Weapon_C_OnCompleted_0FB3F6564A0CD0C952EFF8BFC06DC154");
static_assert(offsetof(BP_Weapon_C_OnCompleted_0FB3F6564A0CD0C952EFF8BFC06DC154, NotifyName) == 0x000000, "Member 'BP_Weapon_C_OnCompleted_0FB3F6564A0CD0C952EFF8BFC06DC154::NotifyName' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.OnCompleted_642915F049FF687BCEAB758975C4E4D2
// 0x0008 (0x0008 - 0x0000)
struct BP_Weapon_C_OnCompleted_642915F049FF687BCEAB758975C4E4D2 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_OnCompleted_642915F049FF687BCEAB758975C4E4D2) == 0x000004, "Wrong alignment on BP_Weapon_C_OnCompleted_642915F049FF687BCEAB758975C4E4D2");
static_assert(sizeof(BP_Weapon_C_OnCompleted_642915F049FF687BCEAB758975C4E4D2) == 0x000008, "Wrong size on BP_Weapon_C_OnCompleted_642915F049FF687BCEAB758975C4E4D2");
static_assert(offsetof(BP_Weapon_C_OnCompleted_642915F049FF687BCEAB758975C4E4D2, NotifyName) == 0x000000, "Member 'BP_Weapon_C_OnCompleted_642915F049FF687BCEAB758975C4E4D2::NotifyName' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.OnCompleted_A24E11344E6A4662725E59913D420242
// 0x0008 (0x0008 - 0x0000)
struct BP_Weapon_C_OnCompleted_A24E11344E6A4662725E59913D420242 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_OnCompleted_A24E11344E6A4662725E59913D420242) == 0x000004, "Wrong alignment on BP_Weapon_C_OnCompleted_A24E11344E6A4662725E59913D420242");
static_assert(sizeof(BP_Weapon_C_OnCompleted_A24E11344E6A4662725E59913D420242) == 0x000008, "Wrong size on BP_Weapon_C_OnCompleted_A24E11344E6A4662725E59913D420242");
static_assert(offsetof(BP_Weapon_C_OnCompleted_A24E11344E6A4662725E59913D420242, NotifyName) == 0x000000, "Member 'BP_Weapon_C_OnCompleted_A24E11344E6A4662725E59913D420242::NotifyName' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.OnInterrupted_0FB3F6564A0CD0C952EFF8BFC06DC154
// 0x0008 (0x0008 - 0x0000)
struct BP_Weapon_C_OnInterrupted_0FB3F6564A0CD0C952EFF8BFC06DC154 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_OnInterrupted_0FB3F6564A0CD0C952EFF8BFC06DC154) == 0x000004, "Wrong alignment on BP_Weapon_C_OnInterrupted_0FB3F6564A0CD0C952EFF8BFC06DC154");
static_assert(sizeof(BP_Weapon_C_OnInterrupted_0FB3F6564A0CD0C952EFF8BFC06DC154) == 0x000008, "Wrong size on BP_Weapon_C_OnInterrupted_0FB3F6564A0CD0C952EFF8BFC06DC154");
static_assert(offsetof(BP_Weapon_C_OnInterrupted_0FB3F6564A0CD0C952EFF8BFC06DC154, NotifyName) == 0x000000, "Member 'BP_Weapon_C_OnInterrupted_0FB3F6564A0CD0C952EFF8BFC06DC154::NotifyName' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.OnInterrupted_642915F049FF687BCEAB758975C4E4D2
// 0x0008 (0x0008 - 0x0000)
struct BP_Weapon_C_OnInterrupted_642915F049FF687BCEAB758975C4E4D2 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_OnInterrupted_642915F049FF687BCEAB758975C4E4D2) == 0x000004, "Wrong alignment on BP_Weapon_C_OnInterrupted_642915F049FF687BCEAB758975C4E4D2");
static_assert(sizeof(BP_Weapon_C_OnInterrupted_642915F049FF687BCEAB758975C4E4D2) == 0x000008, "Wrong size on BP_Weapon_C_OnInterrupted_642915F049FF687BCEAB758975C4E4D2");
static_assert(offsetof(BP_Weapon_C_OnInterrupted_642915F049FF687BCEAB758975C4E4D2, NotifyName) == 0x000000, "Member 'BP_Weapon_C_OnInterrupted_642915F049FF687BCEAB758975C4E4D2::NotifyName' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.OnInterrupted_A24E11344E6A4662725E59913D420242
// 0x0008 (0x0008 - 0x0000)
struct BP_Weapon_C_OnInterrupted_A24E11344E6A4662725E59913D420242 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_OnInterrupted_A24E11344E6A4662725E59913D420242) == 0x000004, "Wrong alignment on BP_Weapon_C_OnInterrupted_A24E11344E6A4662725E59913D420242");
static_assert(sizeof(BP_Weapon_C_OnInterrupted_A24E11344E6A4662725E59913D420242) == 0x000008, "Wrong size on BP_Weapon_C_OnInterrupted_A24E11344E6A4662725E59913D420242");
static_assert(offsetof(BP_Weapon_C_OnInterrupted_A24E11344E6A4662725E59913D420242, NotifyName) == 0x000000, "Member 'BP_Weapon_C_OnInterrupted_A24E11344E6A4662725E59913D420242::NotifyName' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.OnLoaded_A077CC734AC02F2F596C3D9FB33E2BBF
// 0x0008 (0x0008 - 0x0000)
struct BP_Weapon_C_OnLoaded_A077CC734AC02F2F596C3D9FB33E2BBF final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_OnLoaded_A077CC734AC02F2F596C3D9FB33E2BBF) == 0x000008, "Wrong alignment on BP_Weapon_C_OnLoaded_A077CC734AC02F2F596C3D9FB33E2BBF");
static_assert(sizeof(BP_Weapon_C_OnLoaded_A077CC734AC02F2F596C3D9FB33E2BBF) == 0x000008, "Wrong size on BP_Weapon_C_OnLoaded_A077CC734AC02F2F596C3D9FB33E2BBF");
static_assert(offsetof(BP_Weapon_C_OnLoaded_A077CC734AC02F2F596C3D9FB33E2BBF, Loaded) == 0x000000, "Member 'BP_Weapon_C_OnLoaded_A077CC734AC02F2F596C3D9FB33E2BBF::Loaded' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.OnNotifyBegin_0FB3F6564A0CD0C952EFF8BFC06DC154
// 0x0008 (0x0008 - 0x0000)
struct BP_Weapon_C_OnNotifyBegin_0FB3F6564A0CD0C952EFF8BFC06DC154 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_OnNotifyBegin_0FB3F6564A0CD0C952EFF8BFC06DC154) == 0x000004, "Wrong alignment on BP_Weapon_C_OnNotifyBegin_0FB3F6564A0CD0C952EFF8BFC06DC154");
static_assert(sizeof(BP_Weapon_C_OnNotifyBegin_0FB3F6564A0CD0C952EFF8BFC06DC154) == 0x000008, "Wrong size on BP_Weapon_C_OnNotifyBegin_0FB3F6564A0CD0C952EFF8BFC06DC154");
static_assert(offsetof(BP_Weapon_C_OnNotifyBegin_0FB3F6564A0CD0C952EFF8BFC06DC154, NotifyName) == 0x000000, "Member 'BP_Weapon_C_OnNotifyBegin_0FB3F6564A0CD0C952EFF8BFC06DC154::NotifyName' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.OnNotifyBegin_642915F049FF687BCEAB758975C4E4D2
// 0x0008 (0x0008 - 0x0000)
struct BP_Weapon_C_OnNotifyBegin_642915F049FF687BCEAB758975C4E4D2 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_OnNotifyBegin_642915F049FF687BCEAB758975C4E4D2) == 0x000004, "Wrong alignment on BP_Weapon_C_OnNotifyBegin_642915F049FF687BCEAB758975C4E4D2");
static_assert(sizeof(BP_Weapon_C_OnNotifyBegin_642915F049FF687BCEAB758975C4E4D2) == 0x000008, "Wrong size on BP_Weapon_C_OnNotifyBegin_642915F049FF687BCEAB758975C4E4D2");
static_assert(offsetof(BP_Weapon_C_OnNotifyBegin_642915F049FF687BCEAB758975C4E4D2, NotifyName) == 0x000000, "Member 'BP_Weapon_C_OnNotifyBegin_642915F049FF687BCEAB758975C4E4D2::NotifyName' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.OnNotifyBegin_A24E11344E6A4662725E59913D420242
// 0x0008 (0x0008 - 0x0000)
struct BP_Weapon_C_OnNotifyBegin_A24E11344E6A4662725E59913D420242 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_OnNotifyBegin_A24E11344E6A4662725E59913D420242) == 0x000004, "Wrong alignment on BP_Weapon_C_OnNotifyBegin_A24E11344E6A4662725E59913D420242");
static_assert(sizeof(BP_Weapon_C_OnNotifyBegin_A24E11344E6A4662725E59913D420242) == 0x000008, "Wrong size on BP_Weapon_C_OnNotifyBegin_A24E11344E6A4662725E59913D420242");
static_assert(offsetof(BP_Weapon_C_OnNotifyBegin_A24E11344E6A4662725E59913D420242, NotifyName) == 0x000000, "Member 'BP_Weapon_C_OnNotifyBegin_A24E11344E6A4662725E59913D420242::NotifyName' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.OnNotifyEnd_0FB3F6564A0CD0C952EFF8BFC06DC154
// 0x0008 (0x0008 - 0x0000)
struct BP_Weapon_C_OnNotifyEnd_0FB3F6564A0CD0C952EFF8BFC06DC154 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_OnNotifyEnd_0FB3F6564A0CD0C952EFF8BFC06DC154) == 0x000004, "Wrong alignment on BP_Weapon_C_OnNotifyEnd_0FB3F6564A0CD0C952EFF8BFC06DC154");
static_assert(sizeof(BP_Weapon_C_OnNotifyEnd_0FB3F6564A0CD0C952EFF8BFC06DC154) == 0x000008, "Wrong size on BP_Weapon_C_OnNotifyEnd_0FB3F6564A0CD0C952EFF8BFC06DC154");
static_assert(offsetof(BP_Weapon_C_OnNotifyEnd_0FB3F6564A0CD0C952EFF8BFC06DC154, NotifyName) == 0x000000, "Member 'BP_Weapon_C_OnNotifyEnd_0FB3F6564A0CD0C952EFF8BFC06DC154::NotifyName' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.OnNotifyEnd_642915F049FF687BCEAB758975C4E4D2
// 0x0008 (0x0008 - 0x0000)
struct BP_Weapon_C_OnNotifyEnd_642915F049FF687BCEAB758975C4E4D2 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_OnNotifyEnd_642915F049FF687BCEAB758975C4E4D2) == 0x000004, "Wrong alignment on BP_Weapon_C_OnNotifyEnd_642915F049FF687BCEAB758975C4E4D2");
static_assert(sizeof(BP_Weapon_C_OnNotifyEnd_642915F049FF687BCEAB758975C4E4D2) == 0x000008, "Wrong size on BP_Weapon_C_OnNotifyEnd_642915F049FF687BCEAB758975C4E4D2");
static_assert(offsetof(BP_Weapon_C_OnNotifyEnd_642915F049FF687BCEAB758975C4E4D2, NotifyName) == 0x000000, "Member 'BP_Weapon_C_OnNotifyEnd_642915F049FF687BCEAB758975C4E4D2::NotifyName' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.OnNotifyEnd_A24E11344E6A4662725E59913D420242
// 0x0008 (0x0008 - 0x0000)
struct BP_Weapon_C_OnNotifyEnd_A24E11344E6A4662725E59913D420242 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_OnNotifyEnd_A24E11344E6A4662725E59913D420242) == 0x000004, "Wrong alignment on BP_Weapon_C_OnNotifyEnd_A24E11344E6A4662725E59913D420242");
static_assert(sizeof(BP_Weapon_C_OnNotifyEnd_A24E11344E6A4662725E59913D420242) == 0x000008, "Wrong size on BP_Weapon_C_OnNotifyEnd_A24E11344E6A4662725E59913D420242");
static_assert(offsetof(BP_Weapon_C_OnNotifyEnd_A24E11344E6A4662725E59913D420242, NotifyName) == 0x000000, "Member 'BP_Weapon_C_OnNotifyEnd_A24E11344E6A4662725E59913D420242::NotifyName' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.PlayAimFire
// 0x00F0 (0x00F0 - 0x0000)
struct BP_Weapon_C_PlayAimFire final
{
public:
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Weaponry_C>       K2Node_DynamicCast_AsBPI_Weaponry;                 // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_WP_GetSkeletalMesh_SkinnedMesh;           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WP_GetSkeletalMesh_Success;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_LoadAnimMontage_AnimMontage;              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ISurvAnimInterface_C>  K2Node_DynamicCast_AsSurv_Anim_Interface;          // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Weaponry_C>       K2Node_DynamicCast_AsBPI_Weaponry_1;               // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISurvAnimInterface_C>  K2Node_DynamicCast_AsSurv_Anim_Interface_1;        // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_WP_GetSkeletalMesh_SkinnedMesh_1;         // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WP_GetSkeletalMesh_Success_1;             // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetFireSprayOffset_SprayOffset;           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ISurvInterface_C>      K2Node_DynamicCast_AsSurv_Interface;               // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Montage_IsPlaying_ReturnValue;            // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2[0x2];                                       // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Montage_GetPosition_ReturnValue;          // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_PlayAimFire) == 0x000008, "Wrong alignment on BP_Weapon_C_PlayAimFire");
static_assert(sizeof(BP_Weapon_C_PlayAimFire) == 0x0000F0, "Wrong size on BP_Weapon_C_PlayAimFire");
static_assert(offsetof(BP_Weapon_C_PlayAimFire, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000000, "Member 'BP_Weapon_C_PlayAimFire::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayAimFire, K2Node_DynamicCast_AsBPI_Weaponry) == 0x000008, "Member 'BP_Weapon_C_PlayAimFire::K2Node_DynamicCast_AsBPI_Weaponry' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayAimFire, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Weapon_C_PlayAimFire::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayAimFire, CallFunc_SelectFloat_ReturnValue) == 0x000020, "Member 'BP_Weapon_C_PlayAimFire::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayAimFire, CallFunc_WP_GetSkeletalMesh_SkinnedMesh) == 0x000028, "Member 'BP_Weapon_C_PlayAimFire::CallFunc_WP_GetSkeletalMesh_SkinnedMesh' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayAimFire, CallFunc_WP_GetSkeletalMesh_Success) == 0x000030, "Member 'BP_Weapon_C_PlayAimFire::CallFunc_WP_GetSkeletalMesh_Success' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayAimFire, CallFunc_LoadAnimMontage_AnimMontage) == 0x000038, "Member 'BP_Weapon_C_PlayAimFire::CallFunc_LoadAnimMontage_AnimMontage' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayAimFire, CallFunc_GetAnimInstance_ReturnValue) == 0x000040, "Member 'BP_Weapon_C_PlayAimFire::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayAimFire, K2Node_DynamicCast_AsSurv_Anim_Interface) == 0x000048, "Member 'BP_Weapon_C_PlayAimFire::K2Node_DynamicCast_AsSurv_Anim_Interface' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayAimFire, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_Weapon_C_PlayAimFire::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayAimFire, K2Node_DynamicCast_AsBPI_Weaponry_1) == 0x000060, "Member 'BP_Weapon_C_PlayAimFire::K2Node_DynamicCast_AsBPI_Weaponry_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayAimFire, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'BP_Weapon_C_PlayAimFire::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayAimFire, K2Node_DynamicCast_AsSurv_Anim_Interface_1) == 0x000078, "Member 'BP_Weapon_C_PlayAimFire::K2Node_DynamicCast_AsSurv_Anim_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayAimFire, K2Node_DynamicCast_bSuccess_3) == 0x000088, "Member 'BP_Weapon_C_PlayAimFire::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayAimFire, CallFunc_WP_GetSkeletalMesh_SkinnedMesh_1) == 0x000090, "Member 'BP_Weapon_C_PlayAimFire::CallFunc_WP_GetSkeletalMesh_SkinnedMesh_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayAimFire, CallFunc_WP_GetSkeletalMesh_Success_1) == 0x000098, "Member 'BP_Weapon_C_PlayAimFire::CallFunc_WP_GetSkeletalMesh_Success_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayAimFire, CallFunc_GetFireSprayOffset_SprayOffset) == 0x0000A0, "Member 'BP_Weapon_C_PlayAimFire::CallFunc_GetFireSprayOffset_SprayOffset' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayAimFire, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'BP_Weapon_C_PlayAimFire::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayAimFire, CallFunc_FMax_ReturnValue) == 0x0000B0, "Member 'BP_Weapon_C_PlayAimFire::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayAimFire, CallFunc_GetAnimInstance_ReturnValue_1) == 0x0000B8, "Member 'BP_Weapon_C_PlayAimFire::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayAimFire, K2Node_DynamicCast_AsSurv_Interface) == 0x0000C0, "Member 'BP_Weapon_C_PlayAimFire::K2Node_DynamicCast_AsSurv_Interface' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayAimFire, K2Node_DynamicCast_bSuccess_4) == 0x0000D0, "Member 'BP_Weapon_C_PlayAimFire::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayAimFire, CallFunc_Montage_IsPlaying_ReturnValue) == 0x0000D1, "Member 'BP_Weapon_C_PlayAimFire::CallFunc_Montage_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayAimFire, CallFunc_Montage_GetPosition_ReturnValue) == 0x0000D4, "Member 'BP_Weapon_C_PlayAimFire::CallFunc_Montage_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayAimFire, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000D8, "Member 'BP_Weapon_C_PlayAimFire::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayAimFire, CallFunc_BooleanAND_ReturnValue) == 0x0000D9, "Member 'BP_Weapon_C_PlayAimFire::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayAimFire, CallFunc_SelectFloat_ReturnValue_1) == 0x0000E0, "Member 'BP_Weapon_C_PlayAimFire::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayAimFire, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x0000E8, "Member 'BP_Weapon_C_PlayAimFire::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.PlayHipFire
// 0x00B0 (0x00B0 - 0x0000)
struct BP_Weapon_C_PlayHipFire final
{
public:
	class UAnimMontage*                           Temp_object_Variable;                              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_LoadAnimMontage_AnimMontage;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_LoadAnimMontage_AnimMontage_1;            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_TimerExistsHandle_ReturnValue;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x002C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	EStanceState                                  Temp_byte_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Weaponry_C>       K2Node_DynamicCast_AsBPI_Weaponry;                 // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_WP_GetSkeletalMesh_SkinnedMesh;           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WP_GetSkeletalMesh_Success;               // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Select_Default;                             // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ISurvInterface_C>      K2Node_DynamicCast_AsSurv_Interface;               // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_PlayHipFire) == 0x000008, "Wrong alignment on BP_Weapon_C_PlayHipFire");
static_assert(sizeof(BP_Weapon_C_PlayHipFire) == 0x0000B0, "Wrong size on BP_Weapon_C_PlayHipFire");
static_assert(offsetof(BP_Weapon_C_PlayHipFire, Temp_object_Variable) == 0x000000, "Member 'BP_Weapon_C_PlayHipFire::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHipFire, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000008, "Member 'BP_Weapon_C_PlayHipFire::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHipFire, CallFunc_LoadAnimMontage_AnimMontage) == 0x000010, "Member 'BP_Weapon_C_PlayHipFire::CallFunc_LoadAnimMontage_AnimMontage' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHipFire, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'BP_Weapon_C_PlayHipFire::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHipFire, CallFunc_LoadAnimMontage_AnimMontage_1) == 0x000020, "Member 'BP_Weapon_C_PlayHipFire::CallFunc_LoadAnimMontage_AnimMontage_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHipFire, CallFunc_K2_TimerExistsHandle_ReturnValue) == 0x000028, "Member 'BP_Weapon_C_PlayHipFire::CallFunc_K2_TimerExistsHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHipFire, K2Node_CreateDelegate_OutputDelegate) == 0x00002C, "Member 'BP_Weapon_C_PlayHipFire::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHipFire, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000040, "Member 'BP_Weapon_C_PlayHipFire::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHipFire, Temp_byte_Variable) == 0x000048, "Member 'BP_Weapon_C_PlayHipFire::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHipFire, K2Node_DynamicCast_AsBPI_Weaponry) == 0x000050, "Member 'BP_Weapon_C_PlayHipFire::K2Node_DynamicCast_AsBPI_Weaponry' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHipFire, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_Weapon_C_PlayHipFire::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHipFire, CallFunc_WP_GetSkeletalMesh_SkinnedMesh) == 0x000068, "Member 'BP_Weapon_C_PlayHipFire::CallFunc_WP_GetSkeletalMesh_SkinnedMesh' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHipFire, CallFunc_WP_GetSkeletalMesh_Success) == 0x000070, "Member 'BP_Weapon_C_PlayHipFire::CallFunc_WP_GetSkeletalMesh_Success' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHipFire, K2Node_Select_Default) == 0x000078, "Member 'BP_Weapon_C_PlayHipFire::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHipFire, CallFunc_GetDisplayName_ReturnValue) == 0x000080, "Member 'BP_Weapon_C_PlayHipFire::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHipFire, CallFunc_GetAnimInstance_ReturnValue) == 0x000090, "Member 'BP_Weapon_C_PlayHipFire::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHipFire, K2Node_DynamicCast_AsSurv_Interface) == 0x000098, "Member 'BP_Weapon_C_PlayHipFire::K2Node_DynamicCast_AsSurv_Interface' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHipFire, K2Node_DynamicCast_bSuccess_1) == 0x0000A8, "Member 'BP_Weapon_C_PlayHipFire::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.PlayHitParticle
// 0x06A8 (0x06A8 - 0x0000)
struct BP_Weapon_C_PlayHitParticle final
{
public:
	EPhysicalSurface                              Enumerator;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                InputPin;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Forward;                                           // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Component_To_Attach;                               // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   bone;                                              // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HitActor;                                          // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Hit_Normal;                                        // 0x0050(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoSound;                                           // 0x0068(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        ParticleToSpawn;                                   // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         NiagaraSystemToSpawn;                              // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_6;                              // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_7;                              // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_8;                              // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_9;                              // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_10;                             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_11;                             // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_12;                             // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_13;                             // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_14;                             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_15;                             // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_16;                             // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_17;                             // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_18;                             // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_19;                             // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_20;                             // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_21;                             // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_22;                             // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_23;                             // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_24;                             // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_25;                             // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_26;                             // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_27;                             // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBPS_HitParticles                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0160(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UNiagaraSystem*                         CallFunc_Array_Random_OutItem;                     // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_28;                             // 0x01BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue_1;               // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   Temp_name_Variable_29;                             // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_30;                             // 0x020C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_31;                             // 0x0214(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_32;                             // 0x021C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_33;                             // 0x0224(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_34;                             // 0x022C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_35;                             // 0x0234(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_36;                             // 0x023C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_37;                             // 0x0244(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x0250(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue_2;               // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue_3;               // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   Temp_name_Variable_38;                             // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue_4;               // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   Temp_name_Variable_39;                             // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ElectricDoorBox_C*                  K2Node_DynamicCast_AsBP_Electric_Door_Box;         // 0x02B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AElectricityBlocker_C*                  K2Node_DynamicCast_AsElectricity_Blocker;          // 0x02C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADestructibleActor*                     K2Node_DynamicCast_AsDestructible_Actor;           // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDecalMaterial_DynMat;                  // 0x02E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDecalMaterial_Size;                    // 0x02F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0308(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Multiply_VectorInt_ReturnValue;           // 0x0318(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue_1;        // 0x0330(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Map_Find_Value;                           // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0341(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_342[0x6];                                      // 0x0342(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x0348(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0358(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0370(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_459[0x7];                                      // 0x0459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0460(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0469(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46A[0x2];                                      // 0x046A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x046C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_474[0x4];                                      // 0x0474(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0478(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0490(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x04A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x04C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x04D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x04E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x04E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0500(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0504(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0508(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50C[0x4];                                      // 0x050C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0510(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0528(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_541[0x7];                                      // 0x0541(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODAudioComponent*                    CallFunc_FMODPlayEventAttached_ReturnValue;        // 0x0548(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0550(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_559[0x7];                                      // 0x0559(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0560(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0578(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0590(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   Temp_name_Variable_40;                             // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x05B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x05B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x05B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B4[0x4];                                      // 0x05B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x05B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x05C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_41;                             // 0x05C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x05D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UDecalComponent*                        CallFunc_SpawnDecalAttached_ReturnValue;           // 0x05E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_42;                             // 0x05F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x05F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F9[0x3];                                      // 0x05F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_43;                             // 0x05FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_604[0x4];                                      // 0x0604(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0608(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0610(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_614[0x4];                                      // 0x0614(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDecalComponent*                        CallFunc_SpawnDecalAttached_ReturnValue_1;         // 0x0618(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_44;                             // 0x0628(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0630(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_631[0x3];                                      // 0x0631(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x0634(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63C[0x4];                                      // 0x063C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBPS_HitParticles                      CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0640(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0670(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_671[0x7];                                      // 0x0671(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         CallFunc_Array_Random_OutItem_1;                   // 0x0678(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex_1;                  // 0x0680(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_684[0x4];                                      // 0x0684(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        CallFunc_Array_Random_OutItem_2;                   // 0x0688(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex_2;                  // 0x0690(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0694(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_695[0x3];                                      // 0x0695(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetParameter_Value_ImplicitCast;          // 0x0698(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x069C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x06A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_PlayHitParticle) == 0x000008, "Wrong alignment on BP_Weapon_C_PlayHitParticle");
static_assert(sizeof(BP_Weapon_C_PlayHitParticle) == 0x0006A8, "Wrong size on BP_Weapon_C_PlayHitParticle");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Enumerator) == 0x000000, "Member 'BP_Weapon_C_PlayHitParticle::Enumerator' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, InputPin) == 0x000008, "Member 'BP_Weapon_C_PlayHitParticle::InputPin' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Forward) == 0x000020, "Member 'BP_Weapon_C_PlayHitParticle::Forward' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Component_To_Attach) == 0x000038, "Member 'BP_Weapon_C_PlayHitParticle::Component_To_Attach' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, bone) == 0x000040, "Member 'BP_Weapon_C_PlayHitParticle::bone' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, HitActor) == 0x000048, "Member 'BP_Weapon_C_PlayHitParticle::HitActor' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Hit_Normal) == 0x000050, "Member 'BP_Weapon_C_PlayHitParticle::Hit_Normal' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, NoSound) == 0x000068, "Member 'BP_Weapon_C_PlayHitParticle::NoSound' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, ParticleToSpawn) == 0x000070, "Member 'BP_Weapon_C_PlayHitParticle::ParticleToSpawn' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, NiagaraSystemToSpawn) == 0x000078, "Member 'BP_Weapon_C_PlayHitParticle::NiagaraSystemToSpawn' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Temp_name_Variable) == 0x000080, "Member 'BP_Weapon_C_PlayHitParticle::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Temp_name_Variable_1) == 0x000088, "Member 'BP_Weapon_C_PlayHitParticle::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Temp_name_Variable_2) == 0x000090, "Member 'BP_Weapon_C_PlayHitParticle::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Temp_name_Variable_3) == 0x000098, "Member 'BP_Weapon_C_PlayHitParticle::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Temp_name_Variable_4) == 0x0000A0, "Member 'BP_Weapon_C_PlayHitParticle::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Temp_name_Variable_5) == 0x0000A8, "Member 'BP_Weapon_C_PlayHitParticle::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Temp_name_Variable_6) == 0x0000B0, "Member 'BP_Weapon_C_PlayHitParticle::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Temp_name_Variable_7) == 0x0000B8, "Member 'BP_Weapon_C_PlayHitParticle::Temp_name_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Temp_name_Variable_8) == 0x0000C0, "Member 'BP_Weapon_C_PlayHitParticle::Temp_name_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Temp_name_Variable_9) == 0x0000C8, "Member 'BP_Weapon_C_PlayHitParticle::Temp_name_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Temp_name_Variable_10) == 0x0000D0, "Member 'BP_Weapon_C_PlayHitParticle::Temp_name_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Temp_name_Variable_11) == 0x0000D8, "Member 'BP_Weapon_C_PlayHitParticle::Temp_name_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Temp_name_Variable_12) == 0x0000E0, "Member 'BP_Weapon_C_PlayHitParticle::Temp_name_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Temp_name_Variable_13) == 0x0000E8, "Member 'BP_Weapon_C_PlayHitParticle::Temp_name_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Temp_name_Variable_14) == 0x0000F0, "Member 'BP_Weapon_C_PlayHitParticle::Temp_name_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Temp_name_Variable_15) == 0x0000F8, "Member 'BP_Weapon_C_PlayHitParticle::Temp_name_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Temp_name_Variable_16) == 0x000100, "Member 'BP_Weapon_C_PlayHitParticle::Temp_name_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Temp_name_Variable_17) == 0x000108, "Member 'BP_Weapon_C_PlayHitParticle::Temp_name_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Temp_name_Variable_18) == 0x000110, "Member 'BP_Weapon_C_PlayHitParticle::Temp_name_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Temp_name_Variable_19) == 0x000118, "Member 'BP_Weapon_C_PlayHitParticle::Temp_name_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Temp_name_Variable_20) == 0x000120, "Member 'BP_Weapon_C_PlayHitParticle::Temp_name_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Temp_name_Variable_21) == 0x000128, "Member 'BP_Weapon_C_PlayHitParticle::Temp_name_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Temp_name_Variable_22) == 0x000130, "Member 'BP_Weapon_C_PlayHitParticle::Temp_name_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Temp_name_Variable_23) == 0x000138, "Member 'BP_Weapon_C_PlayHitParticle::Temp_name_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Temp_name_Variable_24) == 0x000140, "Member 'BP_Weapon_C_PlayHitParticle::Temp_name_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Temp_name_Variable_25) == 0x000148, "Member 'BP_Weapon_C_PlayHitParticle::Temp_name_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Temp_name_Variable_26) == 0x000150, "Member 'BP_Weapon_C_PlayHitParticle::Temp_name_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Temp_name_Variable_27) == 0x000158, "Member 'BP_Weapon_C_PlayHitParticle::Temp_name_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_GetDataTableRowFromName_OutRow) == 0x000160, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000190, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_MakeRotFromX_ReturnValue) == 0x000198, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_Array_Random_OutItem) == 0x0001B0, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_Array_Random_OutIndex) == 0x0001B8, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Temp_name_Variable_28) == 0x0001BC, "Member 'BP_Weapon_C_PlayHitParticle::Temp_name_Variable_28' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0001C8, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_MakeRotFromX_ReturnValue_1) == 0x0001E0, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_MakeRotFromX_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Temp_name_Variable_29) == 0x0001F8, "Member 'BP_Weapon_C_PlayHitParticle::Temp_name_Variable_29' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_BreakRotator_Roll) == 0x000200, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_BreakRotator_Pitch) == 0x000204, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_BreakRotator_Yaw) == 0x000208, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Temp_name_Variable_30) == 0x00020C, "Member 'BP_Weapon_C_PlayHitParticle::Temp_name_Variable_30' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Temp_name_Variable_31) == 0x000214, "Member 'BP_Weapon_C_PlayHitParticle::Temp_name_Variable_31' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Temp_name_Variable_32) == 0x00021C, "Member 'BP_Weapon_C_PlayHitParticle::Temp_name_Variable_32' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Temp_name_Variable_33) == 0x000224, "Member 'BP_Weapon_C_PlayHitParticle::Temp_name_Variable_33' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Temp_name_Variable_34) == 0x00022C, "Member 'BP_Weapon_C_PlayHitParticle::Temp_name_Variable_34' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Temp_name_Variable_35) == 0x000234, "Member 'BP_Weapon_C_PlayHitParticle::Temp_name_Variable_35' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Temp_name_Variable_36) == 0x00023C, "Member 'BP_Weapon_C_PlayHitParticle::Temp_name_Variable_36' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Temp_name_Variable_37) == 0x000244, "Member 'BP_Weapon_C_PlayHitParticle::Temp_name_Variable_37' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_SpawnSystemAttached_ReturnValue) == 0x000250, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_MakeRotFromX_ReturnValue_2) == 0x000258, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_MakeRotFromX_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_MakeRotFromX_ReturnValue_3) == 0x000270, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_MakeRotFromX_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Temp_name_Variable_38) == 0x000288, "Member 'BP_Weapon_C_PlayHitParticle::Temp_name_Variable_38' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_MakeRotFromX_ReturnValue_4) == 0x000290, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_MakeRotFromX_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Temp_name_Variable_39) == 0x0002A8, "Member 'BP_Weapon_C_PlayHitParticle::Temp_name_Variable_39' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_IsValid_ReturnValue) == 0x0002B0, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, K2Node_DynamicCast_AsBP_Electric_Door_Box) == 0x0002B8, "Member 'BP_Weapon_C_PlayHitParticle::K2Node_DynamicCast_AsBP_Electric_Door_Box' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, K2Node_DynamicCast_bSuccess) == 0x0002C0, "Member 'BP_Weapon_C_PlayHitParticle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, K2Node_DynamicCast_AsElectricity_Blocker) == 0x0002C8, "Member 'BP_Weapon_C_PlayHitParticle::K2Node_DynamicCast_AsElectricity_Blocker' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, K2Node_DynamicCast_bSuccess_1) == 0x0002D0, "Member 'BP_Weapon_C_PlayHitParticle::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, K2Node_DynamicCast_AsDestructible_Actor) == 0x0002D8, "Member 'BP_Weapon_C_PlayHitParticle::K2Node_DynamicCast_AsDestructible_Actor' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, K2Node_DynamicCast_bSuccess_2) == 0x0002E0, "Member 'BP_Weapon_C_PlayHitParticle::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_GetDecalMaterial_DynMat) == 0x0002E8, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_GetDecalMaterial_DynMat' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_GetDecalMaterial_Size) == 0x0002F0, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_GetDecalMaterial_Size' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, K2Node_MakeArray_Array) == 0x000308, "Member 'BP_Weapon_C_PlayHitParticle::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_Multiply_VectorInt_ReturnValue) == 0x000318, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_Multiply_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_SpawnSystemAttached_ReturnValue_1) == 0x000330, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_SpawnSystemAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_Map_Find_Value) == 0x000338, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_Map_Find_ReturnValue) == 0x000340, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_IsValid_ReturnValue_1) == 0x000341, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, K2Node_MakeArray_Array_1) == 0x000348, "Member 'BP_Weapon_C_PlayHitParticle::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_Add_VectorVector_ReturnValue) == 0x000358, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_LineTraceSingle_OutHit) == 0x000370, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_LineTraceSingle_ReturnValue) == 0x000458, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000460, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_BreakHitResult_bBlockingHit) == 0x000468, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_BreakHitResult_bInitialOverlap) == 0x000469, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_BreakHitResult_Time) == 0x00046C, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_BreakHitResult_Distance) == 0x000470, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_BreakHitResult_Location) == 0x000478, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_BreakHitResult_ImpactPoint) == 0x000490, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_BreakHitResult_Normal) == 0x0004A8, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_BreakHitResult_ImpactNormal) == 0x0004C0, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_BreakHitResult_PhysMat) == 0x0004D8, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_BreakHitResult_HitActor) == 0x0004E0, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_BreakHitResult_HitComponent) == 0x0004E8, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_BreakHitResult_HitBoneName) == 0x0004F0, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_BreakHitResult_BoneName) == 0x0004F8, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_BreakHitResult_HitItem) == 0x000500, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_BreakHitResult_ElementIndex) == 0x000504, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_BreakHitResult_FaceIndex) == 0x000508, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_BreakHitResult_TraceStart) == 0x000510, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_BreakHitResult_TraceEnd) == 0x000528, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_IsValid_ReturnValue_2) == 0x000540, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_FMODPlayEventAttached_ReturnValue) == 0x000548, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_FMODPlayEventAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, K2Node_DynamicCast_AsPawn) == 0x000550, "Member 'BP_Weapon_C_PlayHitParticle::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, K2Node_DynamicCast_bSuccess_3) == 0x000558, "Member 'BP_Weapon_C_PlayHitParticle::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000560, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_SelectVector_ReturnValue) == 0x000578, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000590, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Temp_name_Variable_40) == 0x0005A8, "Member 'BP_Weapon_C_PlayHitParticle::Temp_name_Variable_40' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_IsDedicatedServer_ReturnValue) == 0x0005B0, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Temp_byte_Variable) == 0x0005B1, "Member 'BP_Weapon_C_PlayHitParticle::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_IsValid_ReturnValue_3) == 0x0005B2, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_IsValid_ReturnValue_4) == 0x0005B3, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x0005B8, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_RandomFloatInRange_ReturnValue) == 0x0005C0, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Temp_name_Variable_41) == 0x0005C8, "Member 'BP_Weapon_C_PlayHitParticle::Temp_name_Variable_41' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_MakeRotator_ReturnValue) == 0x0005D0, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_SpawnDecalAttached_ReturnValue) == 0x0005E8, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_SpawnDecalAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Temp_name_Variable_42) == 0x0005F0, "Member 'BP_Weapon_C_PlayHitParticle::Temp_name_Variable_42' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_IsValid_ReturnValue_5) == 0x0005F8, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Temp_name_Variable_43) == 0x0005FC, "Member 'BP_Weapon_C_PlayHitParticle::Temp_name_Variable_43' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000608, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000610, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_SpawnDecalAttached_ReturnValue_1) == 0x000618, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_SpawnDecalAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000620, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, Temp_name_Variable_44) == 0x000628, "Member 'BP_Weapon_C_PlayHitParticle::Temp_name_Variable_44' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_IsValid_ReturnValue_6) == 0x000630, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, K2Node_Select_Default) == 0x000634, "Member 'BP_Weapon_C_PlayHitParticle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000640, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000670, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_Array_Random_OutItem_1) == 0x000678, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_Array_Random_OutItem_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_Array_Random_OutIndex_1) == 0x000680, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_Array_Random_OutIndex_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_Array_Random_OutItem_2) == 0x000688, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_Array_Random_OutItem_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_Array_Random_OutIndex_2) == 0x000690, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_Array_Random_OutIndex_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000694, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_SetParameter_Value_ImplicitCast) == 0x000698, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_SetParameter_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x00069C, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayHitParticle, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x0006A0, "Member 'BP_Weapon_C_PlayHitParticle::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.PlayMeleeMontage
// 0x0448 (0x0448 - 0x0000)
struct BP_Weapon_C_PlayMeleeMontage final
{
public:
	class UAnimInstance*                          CharAnimInstance;                                  // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimMontage>            Temp_softobject_Variable;                          // 0x0010(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimMontage>            Temp_softobject_Variable_1;                        // 0x0040(0x0030)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimMontage>            Temp_softobject_Variable_2;                        // 0x0078(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimMontage>            Temp_softobject_Variable_3;                        // 0x00A8(0x0030)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_4;                               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_5;                               // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_6;                               // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_7;                               // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimMontage>            Temp_softobject_Variable_4;                        // 0x0110(0x0030)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_142[0x6];                                      // 0x0142(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimMontage>            Temp_softobject_Variable_5;                        // 0x0148(0x0030)(HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetMeleeWeaponMontage_Output;             // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetMeleeWeaponMontage_Output_1;           // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimMontage>            Temp_softobject_Variable_6;                        // 0x0190(0x0030)(HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISurvInterface_C>      K2Node_DynamicCast_AsSurv_Interface;               // 0x01C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DA[0x2];                                      // 0x01DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MeleeTargetRotation_ReturnValue;          // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TSoftObjectPtr<class UAnimMontage>            Temp_softobject_Variable_7;                        // 0x0230(0x0030)(HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_1;         // 0x026D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x026E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26F[0x1];                                      // 0x026F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_1;                           // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_2;                           // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_2;         // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_3;         // 0x0279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_4;         // 0x027A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27B[0x1];                                      // 0x027B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_3;                           // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_4;                           // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_5;                           // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_5;         // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x028A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28B[0x5];                                      // 0x028B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Weaponry_C>       K2Node_DynamicCast_AsBPI_Weaponry;                 // 0x0290(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_WP_GetSkeletalMesh_SkinnedMesh;           // 0x02A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WP_GetSkeletalMesh_Success;               // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimMontage>            K2Node_Select_Default_6;                           // 0x02B8(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimMontage>            K2Node_Select_Default_7;                           // 0x02E8(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimMontage>            K2Node_Select_Default_8;                           // 0x0318(0x0030)(HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0348(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimMontage>            K2Node_Select_Default_9;                           // 0x0350(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimMontage>            K2Node_Select_Default_10;                          // 0x0380(0x0030)(HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B4[0x4];                                      // 0x03B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimMontage>            K2Node_Select_Default_11;                          // 0x03B8(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_11;                             // 0x03E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EA[0x6];                                      // 0x03EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimMontage>            K2Node_Select_Default_12;                          // 0x03F0(0x0030)(HasGetValueTypeHash)
	double                                        CallFunc_InRange_FloatFloat_Value_ImplicitCast;    // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_InRange_FloatFloat_Value_ImplicitCast_1;  // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_InRange_FloatFloat_Value_ImplicitCast_2;  // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_InRange_FloatFloat_Value_ImplicitCast_3;  // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_InRange_FloatFloat_Value_ImplicitCast_4;  // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_PlayMeleeMontage) == 0x000008, "Wrong alignment on BP_Weapon_C_PlayMeleeMontage");
static_assert(sizeof(BP_Weapon_C_PlayMeleeMontage) == 0x000448, "Wrong size on BP_Weapon_C_PlayMeleeMontage");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, CharAnimInstance) == 0x000000, "Member 'BP_Weapon_C_PlayMeleeMontage::CharAnimInstance' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, Temp_int_Variable) == 0x000008, "Member 'BP_Weapon_C_PlayMeleeMontage::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, Temp_softobject_Variable) == 0x000010, "Member 'BP_Weapon_C_PlayMeleeMontage::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, Temp_softobject_Variable_1) == 0x000040, "Member 'BP_Weapon_C_PlayMeleeMontage::Temp_softobject_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, Temp_bool_Variable) == 0x000070, "Member 'BP_Weapon_C_PlayMeleeMontage::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, Temp_softobject_Variable_2) == 0x000078, "Member 'BP_Weapon_C_PlayMeleeMontage::Temp_softobject_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, Temp_softobject_Variable_3) == 0x0000A8, "Member 'BP_Weapon_C_PlayMeleeMontage::Temp_softobject_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, Temp_bool_Variable_1) == 0x0000D8, "Member 'BP_Weapon_C_PlayMeleeMontage::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, Temp_int_Variable_1) == 0x0000DC, "Member 'BP_Weapon_C_PlayMeleeMontage::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, Temp_bool_Variable_2) == 0x0000E0, "Member 'BP_Weapon_C_PlayMeleeMontage::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, Temp_int_Variable_2) == 0x0000E4, "Member 'BP_Weapon_C_PlayMeleeMontage::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, Temp_int_Variable_3) == 0x0000E8, "Member 'BP_Weapon_C_PlayMeleeMontage::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, Temp_bool_Variable_3) == 0x0000EC, "Member 'BP_Weapon_C_PlayMeleeMontage::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, Temp_int_Variable_4) == 0x0000F0, "Member 'BP_Weapon_C_PlayMeleeMontage::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, Temp_bool_Variable_4) == 0x0000F4, "Member 'BP_Weapon_C_PlayMeleeMontage::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, Temp_int_Variable_5) == 0x0000F8, "Member 'BP_Weapon_C_PlayMeleeMontage::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, Temp_bool_Variable_5) == 0x0000FC, "Member 'BP_Weapon_C_PlayMeleeMontage::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, Temp_int_Variable_6) == 0x000100, "Member 'BP_Weapon_C_PlayMeleeMontage::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, Temp_bool_Variable_6) == 0x000104, "Member 'BP_Weapon_C_PlayMeleeMontage::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, Temp_int_Variable_7) == 0x000108, "Member 'BP_Weapon_C_PlayMeleeMontage::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, Temp_softobject_Variable_4) == 0x000110, "Member 'BP_Weapon_C_PlayMeleeMontage::Temp_softobject_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, Temp_bool_Variable_7) == 0x000140, "Member 'BP_Weapon_C_PlayMeleeMontage::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, Temp_bool_Variable_8) == 0x000141, "Member 'BP_Weapon_C_PlayMeleeMontage::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, Temp_softobject_Variable_5) == 0x000148, "Member 'BP_Weapon_C_PlayMeleeMontage::Temp_softobject_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, CallFunc_GetMeleeWeaponMontage_Output) == 0x000178, "Member 'BP_Weapon_C_PlayMeleeMontage::CallFunc_GetMeleeWeaponMontage_Output' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, CallFunc_GetMeleeWeaponMontage_Output_1) == 0x000180, "Member 'BP_Weapon_C_PlayMeleeMontage::CallFunc_GetMeleeWeaponMontage_Output_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, Temp_bool_Variable_9) == 0x000188, "Member 'BP_Weapon_C_PlayMeleeMontage::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, Temp_softobject_Variable_6) == 0x000190, "Member 'BP_Weapon_C_PlayMeleeMontage::Temp_softobject_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, K2Node_Select_Default) == 0x0001C0, "Member 'BP_Weapon_C_PlayMeleeMontage::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, K2Node_DynamicCast_AsSurv_Interface) == 0x0001C8, "Member 'BP_Weapon_C_PlayMeleeMontage::K2Node_DynamicCast_AsSurv_Interface' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, K2Node_DynamicCast_bSuccess) == 0x0001D8, "Member 'BP_Weapon_C_PlayMeleeMontage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, Temp_bool_Variable_10) == 0x0001D9, "Member 'BP_Weapon_C_PlayMeleeMontage::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, CallFunc_Add_IntInt_ReturnValue) == 0x0001DC, "Member 'BP_Weapon_C_PlayMeleeMontage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, CallFunc_MeleeTargetRotation_ReturnValue) == 0x0001E0, "Member 'BP_Weapon_C_PlayMeleeMontage::CallFunc_MeleeTargetRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, CallFunc_BooleanAND_ReturnValue) == 0x0001F8, "Member 'BP_Weapon_C_PlayMeleeMontage::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000200, "Member 'BP_Weapon_C_PlayMeleeMontage::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000218, "Member 'BP_Weapon_C_PlayMeleeMontage::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, Temp_softobject_Variable_7) == 0x000230, "Member 'BP_Weapon_C_PlayMeleeMontage::Temp_softobject_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, CallFunc_BreakRotator_Roll) == 0x000260, "Member 'BP_Weapon_C_PlayMeleeMontage::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, CallFunc_BreakRotator_Pitch) == 0x000264, "Member 'BP_Weapon_C_PlayMeleeMontage::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, CallFunc_BreakRotator_Yaw) == 0x000268, "Member 'BP_Weapon_C_PlayMeleeMontage::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, CallFunc_InRange_FloatFloat_ReturnValue) == 0x00026C, "Member 'BP_Weapon_C_PlayMeleeMontage::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, CallFunc_InRange_FloatFloat_ReturnValue_1) == 0x00026D, "Member 'BP_Weapon_C_PlayMeleeMontage::CallFunc_InRange_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, CallFunc_Not_PreBool_ReturnValue) == 0x00026E, "Member 'BP_Weapon_C_PlayMeleeMontage::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, K2Node_Select_Default_1) == 0x000270, "Member 'BP_Weapon_C_PlayMeleeMontage::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, K2Node_Select_Default_2) == 0x000274, "Member 'BP_Weapon_C_PlayMeleeMontage::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, CallFunc_InRange_FloatFloat_ReturnValue_2) == 0x000278, "Member 'BP_Weapon_C_PlayMeleeMontage::CallFunc_InRange_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, CallFunc_InRange_FloatFloat_ReturnValue_3) == 0x000279, "Member 'BP_Weapon_C_PlayMeleeMontage::CallFunc_InRange_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, CallFunc_InRange_FloatFloat_ReturnValue_4) == 0x00027A, "Member 'BP_Weapon_C_PlayMeleeMontage::CallFunc_InRange_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, K2Node_Select_Default_3) == 0x00027C, "Member 'BP_Weapon_C_PlayMeleeMontage::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, K2Node_Select_Default_4) == 0x000280, "Member 'BP_Weapon_C_PlayMeleeMontage::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, K2Node_Select_Default_5) == 0x000284, "Member 'BP_Weapon_C_PlayMeleeMontage::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, CallFunc_InRange_FloatFloat_ReturnValue_5) == 0x000288, "Member 'BP_Weapon_C_PlayMeleeMontage::CallFunc_InRange_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, CallFunc_BooleanAND_ReturnValue_1) == 0x000289, "Member 'BP_Weapon_C_PlayMeleeMontage::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, CallFunc_BooleanAND_ReturnValue_2) == 0x00028A, "Member 'BP_Weapon_C_PlayMeleeMontage::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, K2Node_DynamicCast_AsBPI_Weaponry) == 0x000290, "Member 'BP_Weapon_C_PlayMeleeMontage::K2Node_DynamicCast_AsBPI_Weaponry' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, K2Node_DynamicCast_bSuccess_1) == 0x0002A0, "Member 'BP_Weapon_C_PlayMeleeMontage::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, CallFunc_WP_GetSkeletalMesh_SkinnedMesh) == 0x0002A8, "Member 'BP_Weapon_C_PlayMeleeMontage::CallFunc_WP_GetSkeletalMesh_SkinnedMesh' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, CallFunc_WP_GetSkeletalMesh_Success) == 0x0002B0, "Member 'BP_Weapon_C_PlayMeleeMontage::CallFunc_WP_GetSkeletalMesh_Success' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, K2Node_Select_Default_6) == 0x0002B8, "Member 'BP_Weapon_C_PlayMeleeMontage::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, K2Node_Select_Default_7) == 0x0002E8, "Member 'BP_Weapon_C_PlayMeleeMontage::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, K2Node_Select_Default_8) == 0x000318, "Member 'BP_Weapon_C_PlayMeleeMontage::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, CallFunc_GetAnimInstance_ReturnValue) == 0x000348, "Member 'BP_Weapon_C_PlayMeleeMontage::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, K2Node_Select_Default_9) == 0x000350, "Member 'BP_Weapon_C_PlayMeleeMontage::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, K2Node_Select_Default_10) == 0x000380, "Member 'BP_Weapon_C_PlayMeleeMontage::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, Temp_int_Variable_8) == 0x0003B0, "Member 'BP_Weapon_C_PlayMeleeMontage::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, K2Node_Select_Default_11) == 0x0003B8, "Member 'BP_Weapon_C_PlayMeleeMontage::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0003E8, "Member 'BP_Weapon_C_PlayMeleeMontage::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, Temp_bool_Variable_11) == 0x0003E9, "Member 'BP_Weapon_C_PlayMeleeMontage::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, K2Node_Select_Default_12) == 0x0003F0, "Member 'BP_Weapon_C_PlayMeleeMontage::K2Node_Select_Default_12' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, CallFunc_InRange_FloatFloat_Value_ImplicitCast) == 0x000420, "Member 'BP_Weapon_C_PlayMeleeMontage::CallFunc_InRange_FloatFloat_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, CallFunc_InRange_FloatFloat_Value_ImplicitCast_1) == 0x000428, "Member 'BP_Weapon_C_PlayMeleeMontage::CallFunc_InRange_FloatFloat_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, CallFunc_InRange_FloatFloat_Value_ImplicitCast_2) == 0x000430, "Member 'BP_Weapon_C_PlayMeleeMontage::CallFunc_InRange_FloatFloat_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, CallFunc_InRange_FloatFloat_Value_ImplicitCast_3) == 0x000438, "Member 'BP_Weapon_C_PlayMeleeMontage::CallFunc_InRange_FloatFloat_Value_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayMeleeMontage, CallFunc_InRange_FloatFloat_Value_ImplicitCast_4) == 0x000440, "Member 'BP_Weapon_C_PlayMeleeMontage::CallFunc_InRange_FloatFloat_Value_ImplicitCast_4' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.PlayShootShake
// 0x05B8 (0x05B8 - 0x0000)
struct BP_Weapon_C_PlayShootShake final
{
public:
	struct FBPS_WeaponData                        BPS_WeaponData;                                    // 0x0000(0x04C0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x04C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C2[0x2];                                      // 0x04C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x04C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x04C8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x04D8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x04E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E2[0x2];                                      // 0x04E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x04E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_WeaponShakeInfo>             K2Node_Select_Default;                             // 0x04E8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x04F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FC[0x4];                                      // 0x04FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0500(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_WeaponShakeInfo>             K2Node_Select_Default_1;                           // 0x0508(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0518(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51C[0x4];                                      // 0x051C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponShakeInfo                     CallFunc_Array_Get_Item;                           // 0x0520(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_541[0x7];                                      // 0x0541(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_Array_Random_OutItem;                     // 0x0550(0x0030)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0580(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_584[0x4];                                      // 0x0584(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0590(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsCamera_Shake_Base;       // 0x0598(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A1[0x7];                                      // 0x05A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraShakeBase*                       CallFunc_StartCameraShake_ReturnValue;             // 0x05A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_StartCameraShake_Scale_ImplicitCast;      // 0x05B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_PlayShootShake) == 0x000008, "Wrong alignment on BP_Weapon_C_PlayShootShake");
static_assert(sizeof(BP_Weapon_C_PlayShootShake) == 0x0005B8, "Wrong size on BP_Weapon_C_PlayShootShake");
static_assert(offsetof(BP_Weapon_C_PlayShootShake, BPS_WeaponData) == 0x000000, "Member 'BP_Weapon_C_PlayShootShake::BPS_WeaponData' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayShootShake, Temp_bool_Variable) == 0x0004C0, "Member 'BP_Weapon_C_PlayShootShake::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayShootShake, Temp_bool_Variable_1) == 0x0004C1, "Member 'BP_Weapon_C_PlayShootShake::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayShootShake, Temp_int_Array_Index_Variable) == 0x0004C4, "Member 'BP_Weapon_C_PlayShootShake::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayShootShake, K2Node_CreateDelegate_OutputDelegate) == 0x0004C8, "Member 'BP_Weapon_C_PlayShootShake::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayShootShake, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0004D8, "Member 'BP_Weapon_C_PlayShootShake::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayShootShake, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0004E0, "Member 'BP_Weapon_C_PlayShootShake::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayShootShake, CallFunc_IsValid_ReturnValue) == 0x0004E1, "Member 'BP_Weapon_C_PlayShootShake::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayShootShake, Temp_int_Loop_Counter_Variable) == 0x0004E4, "Member 'BP_Weapon_C_PlayShootShake::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayShootShake, K2Node_Select_Default) == 0x0004E8, "Member 'BP_Weapon_C_PlayShootShake::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayShootShake, CallFunc_Add_IntInt_ReturnValue) == 0x0004F8, "Member 'BP_Weapon_C_PlayShootShake::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayShootShake, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000500, "Member 'BP_Weapon_C_PlayShootShake::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayShootShake, K2Node_Select_Default_1) == 0x000508, "Member 'BP_Weapon_C_PlayShootShake::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayShootShake, CallFunc_Array_Length_ReturnValue) == 0x000518, "Member 'BP_Weapon_C_PlayShootShake::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayShootShake, CallFunc_Array_Get_Item) == 0x000520, "Member 'BP_Weapon_C_PlayShootShake::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayShootShake, CallFunc_Less_IntInt_ReturnValue) == 0x000540, "Member 'BP_Weapon_C_PlayShootShake::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayShootShake, CallFunc_RandomFloatInRange_ReturnValue) == 0x000548, "Member 'BP_Weapon_C_PlayShootShake::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayShootShake, CallFunc_Array_Random_OutItem) == 0x000550, "Member 'BP_Weapon_C_PlayShootShake::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayShootShake, CallFunc_Array_Random_OutIndex) == 0x000580, "Member 'BP_Weapon_C_PlayShootShake::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayShootShake, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000588, "Member 'BP_Weapon_C_PlayShootShake::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayShootShake, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000590, "Member 'BP_Weapon_C_PlayShootShake::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayShootShake, K2Node_ClassDynamicCast_AsCamera_Shake_Base) == 0x000598, "Member 'BP_Weapon_C_PlayShootShake::K2Node_ClassDynamicCast_AsCamera_Shake_Base' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayShootShake, K2Node_ClassDynamicCast_bSuccess) == 0x0005A0, "Member 'BP_Weapon_C_PlayShootShake::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayShootShake, CallFunc_StartCameraShake_ReturnValue) == 0x0005A8, "Member 'BP_Weapon_C_PlayShootShake::CallFunc_StartCameraShake_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlayShootShake, CallFunc_StartCameraShake_Scale_ImplicitCast) == 0x0005B0, "Member 'BP_Weapon_C_PlayShootShake::CallFunc_StartCameraShake_Scale_ImplicitCast' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.PlaySmoothShootShake
// 0x0088 (0x0088 - 0x0000)
struct BP_Weapon_C_PlaySmoothShootShake final
{
public:
	bool                                          Start;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_1;     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_Array_Random_OutItem;                     // 0x0018(0x0030)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsCamera_Shake_Base;       // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraShakeBase*                       CallFunc_StartCameraShake_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_StartCameraShake_Scale_ImplicitCast;      // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_PlaySmoothShootShake) == 0x000008, "Wrong alignment on BP_Weapon_C_PlaySmoothShootShake");
static_assert(sizeof(BP_Weapon_C_PlaySmoothShootShake) == 0x000088, "Wrong size on BP_Weapon_C_PlaySmoothShootShake");
static_assert(offsetof(BP_Weapon_C_PlaySmoothShootShake, Start) == 0x000000, "Member 'BP_Weapon_C_PlaySmoothShootShake::Start' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlaySmoothShootShake, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000008, "Member 'BP_Weapon_C_PlaySmoothShootShake::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlaySmoothShootShake, CallFunc_GetPlayerCameraManager_ReturnValue_1) == 0x000010, "Member 'BP_Weapon_C_PlaySmoothShootShake::CallFunc_GetPlayerCameraManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlaySmoothShootShake, CallFunc_Array_Random_OutItem) == 0x000018, "Member 'BP_Weapon_C_PlaySmoothShootShake::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlaySmoothShootShake, CallFunc_Array_Random_OutIndex) == 0x000048, "Member 'BP_Weapon_C_PlaySmoothShootShake::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlaySmoothShootShake, CallFunc_RandomFloatInRange_ReturnValue) == 0x000050, "Member 'BP_Weapon_C_PlaySmoothShootShake::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlaySmoothShootShake, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000058, "Member 'BP_Weapon_C_PlaySmoothShootShake::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlaySmoothShootShake, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000060, "Member 'BP_Weapon_C_PlaySmoothShootShake::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlaySmoothShootShake, K2Node_ClassDynamicCast_AsCamera_Shake_Base) == 0x000068, "Member 'BP_Weapon_C_PlaySmoothShootShake::K2Node_ClassDynamicCast_AsCamera_Shake_Base' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlaySmoothShootShake, K2Node_ClassDynamicCast_bSuccess) == 0x000070, "Member 'BP_Weapon_C_PlaySmoothShootShake::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlaySmoothShootShake, CallFunc_StartCameraShake_ReturnValue) == 0x000078, "Member 'BP_Weapon_C_PlaySmoothShootShake::CallFunc_StartCameraShake_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PlaySmoothShootShake, CallFunc_StartCameraShake_Scale_ImplicitCast) == 0x000080, "Member 'BP_Weapon_C_PlaySmoothShootShake::CallFunc_StartCameraShake_Scale_ImplicitCast' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.PreciseHitPoint
// 0x0170 (0x0170 - 0x0000)
struct BP_Weapon_C_PreciseHitPoint final
{
public:
	struct FVector                                HitPoint;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_1;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_2;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetViewportSize_SizeX;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetViewportSize_SizeY;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_DeprojectScreenPositionToWorld_WorldLocation; // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_DeprojectScreenPositionToWorld_WorldDirection; // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DeprojectScreenPositionToWorld_ReturnValue; // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DeprojectScreenPositionToWorld_ScreenY_ImplicitCast; // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DeprojectScreenPositionToWorld_ScreenX_ImplicitCast; // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_PreciseHitPoint) == 0x000008, "Wrong alignment on BP_Weapon_C_PreciseHitPoint");
static_assert(sizeof(BP_Weapon_C_PreciseHitPoint) == 0x000170, "Wrong size on BP_Weapon_C_PreciseHitPoint");
static_assert(offsetof(BP_Weapon_C_PreciseHitPoint, HitPoint) == 0x000000, "Member 'BP_Weapon_C_PreciseHitPoint::HitPoint' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PreciseHitPoint, Temp_bool_Variable) == 0x000018, "Member 'BP_Weapon_C_PreciseHitPoint::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PreciseHitPoint, Temp_real_Variable) == 0x000020, "Member 'BP_Weapon_C_PreciseHitPoint::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PreciseHitPoint, Temp_bool_Variable_1) == 0x000028, "Member 'BP_Weapon_C_PreciseHitPoint::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PreciseHitPoint, Temp_real_Variable_1) == 0x000030, "Member 'BP_Weapon_C_PreciseHitPoint::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PreciseHitPoint, Temp_bool_Variable_2) == 0x000038, "Member 'BP_Weapon_C_PreciseHitPoint::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PreciseHitPoint, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_Weapon_C_PreciseHitPoint::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PreciseHitPoint, K2Node_Select_Default) == 0x000048, "Member 'BP_Weapon_C_PreciseHitPoint::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PreciseHitPoint, K2Node_Select_Default_1) == 0x000050, "Member 'BP_Weapon_C_PreciseHitPoint::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PreciseHitPoint, CallFunc_GetPlayerController_ReturnValue) == 0x000058, "Member 'BP_Weapon_C_PreciseHitPoint::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PreciseHitPoint, K2Node_Select_Default_2) == 0x000060, "Member 'BP_Weapon_C_PreciseHitPoint::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PreciseHitPoint, CallFunc_GetViewportSize_SizeX) == 0x000068, "Member 'BP_Weapon_C_PreciseHitPoint::CallFunc_GetViewportSize_SizeX' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PreciseHitPoint, CallFunc_GetViewportSize_SizeY) == 0x00006C, "Member 'BP_Weapon_C_PreciseHitPoint::CallFunc_GetViewportSize_SizeY' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PreciseHitPoint, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000070, "Member 'BP_Weapon_C_PreciseHitPoint::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PreciseHitPoint, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000078, "Member 'BP_Weapon_C_PreciseHitPoint::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PreciseHitPoint, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000080, "Member 'BP_Weapon_C_PreciseHitPoint::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PreciseHitPoint, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000088, "Member 'BP_Weapon_C_PreciseHitPoint::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PreciseHitPoint, CallFunc_RandomFloatInRange_ReturnValue) == 0x000090, "Member 'BP_Weapon_C_PreciseHitPoint::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PreciseHitPoint, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000098, "Member 'BP_Weapon_C_PreciseHitPoint::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PreciseHitPoint, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x0000A0, "Member 'BP_Weapon_C_PreciseHitPoint::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PreciseHitPoint, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x0000A8, "Member 'BP_Weapon_C_PreciseHitPoint::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PreciseHitPoint, CallFunc_MakeRotator_ReturnValue) == 0x0000B0, "Member 'BP_Weapon_C_PreciseHitPoint::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PreciseHitPoint, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0000C8, "Member 'BP_Weapon_C_PreciseHitPoint::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PreciseHitPoint, CallFunc_GetPlayerController_ReturnValue_1) == 0x0000D0, "Member 'BP_Weapon_C_PreciseHitPoint::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PreciseHitPoint, CallFunc_DeprojectScreenPositionToWorld_WorldLocation) == 0x0000D8, "Member 'BP_Weapon_C_PreciseHitPoint::CallFunc_DeprojectScreenPositionToWorld_WorldLocation' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PreciseHitPoint, CallFunc_DeprojectScreenPositionToWorld_WorldDirection) == 0x0000F0, "Member 'BP_Weapon_C_PreciseHitPoint::CallFunc_DeprojectScreenPositionToWorld_WorldDirection' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PreciseHitPoint, CallFunc_DeprojectScreenPositionToWorld_ReturnValue) == 0x000108, "Member 'BP_Weapon_C_PreciseHitPoint::CallFunc_DeprojectScreenPositionToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PreciseHitPoint, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000110, "Member 'BP_Weapon_C_PreciseHitPoint::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PreciseHitPoint, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000128, "Member 'BP_Weapon_C_PreciseHitPoint::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PreciseHitPoint, CallFunc_Add_VectorVector_ReturnValue) == 0x000140, "Member 'BP_Weapon_C_PreciseHitPoint::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PreciseHitPoint, CallFunc_DeprojectScreenPositionToWorld_ScreenY_ImplicitCast) == 0x000158, "Member 'BP_Weapon_C_PreciseHitPoint::CallFunc_DeprojectScreenPositionToWorld_ScreenY_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PreciseHitPoint, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x00015C, "Member 'BP_Weapon_C_PreciseHitPoint::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PreciseHitPoint, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x000160, "Member 'BP_Weapon_C_PreciseHitPoint::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PreciseHitPoint, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000164, "Member 'BP_Weapon_C_PreciseHitPoint::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PreciseHitPoint, CallFunc_DeprojectScreenPositionToWorld_ScreenX_ImplicitCast) == 0x000168, "Member 'BP_Weapon_C_PreciseHitPoint::CallFunc_DeprojectScreenPositionToWorld_ScreenX_ImplicitCast' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.PredictHitTrace
// 0x02A0 (0x02A0 - 0x0000)
struct BP_Weapon_C_PredictHitTrace final
{
public:
	struct FHitResult                             BlockingHit;                                       // 0x0000(0x00E8)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          WasHit;                                            // 0x00E8(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ShootDirection_BeginPoint;                // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ShootDirection_EndPoint;                  // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ShootDirection_CamForwardVector;          // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0180(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x01A8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_291[0x3];                                      // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_PredictHitTrace) == 0x000008, "Wrong alignment on BP_Weapon_C_PredictHitTrace");
static_assert(sizeof(BP_Weapon_C_PredictHitTrace) == 0x0002A0, "Wrong size on BP_Weapon_C_PredictHitTrace");
static_assert(offsetof(BP_Weapon_C_PredictHitTrace, BlockingHit) == 0x000000, "Member 'BP_Weapon_C_PredictHitTrace::BlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PredictHitTrace, WasHit) == 0x0000E8, "Member 'BP_Weapon_C_PredictHitTrace::WasHit' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PredictHitTrace, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000F0, "Member 'BP_Weapon_C_PredictHitTrace::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PredictHitTrace, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000F8, "Member 'BP_Weapon_C_PredictHitTrace::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PredictHitTrace, CallFunc_RandomFloatInRange_ReturnValue) == 0x000100, "Member 'BP_Weapon_C_PredictHitTrace::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PredictHitTrace, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000108, "Member 'BP_Weapon_C_PredictHitTrace::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PredictHitTrace, CallFunc_ShootDirection_BeginPoint) == 0x000110, "Member 'BP_Weapon_C_PredictHitTrace::CallFunc_ShootDirection_BeginPoint' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PredictHitTrace, CallFunc_ShootDirection_EndPoint) == 0x000128, "Member 'BP_Weapon_C_PredictHitTrace::CallFunc_ShootDirection_EndPoint' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PredictHitTrace, CallFunc_ShootDirection_CamForwardVector) == 0x000140, "Member 'BP_Weapon_C_PredictHitTrace::CallFunc_ShootDirection_CamForwardVector' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PredictHitTrace, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000158, "Member 'BP_Weapon_C_PredictHitTrace::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PredictHitTrace, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000160, "Member 'BP_Weapon_C_PredictHitTrace::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PredictHitTrace, CallFunc_MakeRotator_ReturnValue) == 0x000168, "Member 'BP_Weapon_C_PredictHitTrace::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PredictHitTrace, K2Node_MakeArray_Array) == 0x000180, "Member 'BP_Weapon_C_PredictHitTrace::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PredictHitTrace, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000190, "Member 'BP_Weapon_C_PredictHitTrace::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PredictHitTrace, CallFunc_LineTraceSingle_OutHit) == 0x0001A8, "Member 'BP_Weapon_C_PredictHitTrace::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PredictHitTrace, CallFunc_LineTraceSingle_ReturnValue) == 0x000290, "Member 'BP_Weapon_C_PredictHitTrace::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PredictHitTrace, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000294, "Member 'BP_Weapon_C_PredictHitTrace::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PredictHitTrace, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x000298, "Member 'BP_Weapon_C_PredictHitTrace::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_PredictHitTrace, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x00029C, "Member 'BP_Weapon_C_PredictHitTrace::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.ProjectileTrace
// 0x0600 (0x0600 - 0x0000)
struct BP_Weapon_C_ProjectileTrace final
{
public:
	struct FHitResult                             BlockingHit;                                       // 0x0000(0x00E8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          WasHit;                                            // 0x00E8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LocationWithoutHit;                                // 0x00F0(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             OutHit;                                            // 0x0108(0x00E8)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x01F0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowDecal;                                         // 0x01F1(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F5[0x3];                                      // 0x01F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0260(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0270(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_294[0x4];                                      // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x02B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x02C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CA[0x2];                                      // 0x02CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x02D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x02F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0308(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0320(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0338(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0340(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0348(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36C[0x4];                                      // 0x036C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0370(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0388(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x03A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x03B8(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x03C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDirectionUnitVector_ReturnValue;       // 0x03E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x03F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0410(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x0428(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_2;            // 0x0511(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_2;         // 0x0512(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_513[0x1];                                      // 0x0513(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_2;                    // 0x0514(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_2;                // 0x0518(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51C[0x4];                                      // 0x051C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_2;                // 0x0520(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_2;             // 0x0538(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_2;                  // 0x0550(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_2;            // 0x0568(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_2;                 // 0x0580(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_2;                // 0x0588(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_2;            // 0x0590(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_2;             // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_2;                // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_2;                 // 0x05A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_2;            // 0x05AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_2;               // 0x05B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B4[0x4];                                      // 0x05B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_2;              // 0x05B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_2;                // 0x05D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_VectorVector_ReturnValue;        // 0x05E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E9[0x7];                                      // 0x05E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x05F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x05F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x05F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x05FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x05FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_ProjectileTrace) == 0x000008, "Wrong alignment on BP_Weapon_C_ProjectileTrace");
static_assert(sizeof(BP_Weapon_C_ProjectileTrace) == 0x000600, "Wrong size on BP_Weapon_C_ProjectileTrace");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, BlockingHit) == 0x000000, "Member 'BP_Weapon_C_ProjectileTrace::BlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, WasHit) == 0x0000E8, "Member 'BP_Weapon_C_ProjectileTrace::WasHit' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, LocationWithoutHit) == 0x0000F0, "Member 'BP_Weapon_C_ProjectileTrace::LocationWithoutHit' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, OutHit) == 0x000108, "Member 'BP_Weapon_C_ProjectileTrace::OutHit' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, ReturnValue) == 0x0001F0, "Member 'BP_Weapon_C_ProjectileTrace::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, ShowDecal) == 0x0001F1, "Member 'BP_Weapon_C_ProjectileTrace::ShowDecal' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_Not_PreBool_ReturnValue) == 0x0001F2, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_bBlockingHit) == 0x0001F3, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001F4, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_Time) == 0x0001F8, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_Distance) == 0x0001FC, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_Location) == 0x000200, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_ImpactPoint) == 0x000218, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_Normal) == 0x000230, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_ImpactNormal) == 0x000248, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_PhysMat) == 0x000260, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_HitActor) == 0x000268, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_HitComponent) == 0x000270, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_HitBoneName) == 0x000278, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_BoneName) == 0x000280, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_HitItem) == 0x000288, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_ElementIndex) == 0x00028C, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_FaceIndex) == 0x000290, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_TraceStart) == 0x000298, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_TraceEnd) == 0x0002B0, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_bBlockingHit_1) == 0x0002C8, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x0002C9, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_Time_1) == 0x0002CC, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_Distance_1) == 0x0002D0, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_Location_1) == 0x0002D8, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_ImpactPoint_1) == 0x0002F0, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_Normal_1) == 0x000308, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000320, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_PhysMat_1) == 0x000338, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_HitActor_1) == 0x000340, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_HitComponent_1) == 0x000348, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_HitBoneName_1) == 0x000350, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_BoneName_1) == 0x000358, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_HitItem_1) == 0x000360, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_ElementIndex_1) == 0x000364, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_FaceIndex_1) == 0x000368, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_TraceStart_1) == 0x000370, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_TraceEnd_1) == 0x000388, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_SelectVector_ReturnValue) == 0x0003A0, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, K2Node_MakeArray_Array) == 0x0003B8, "Member 'BP_Weapon_C_ProjectileTrace::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_GetSocketLocation_ReturnValue) == 0x0003C8, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_GetDirectionUnitVector_ReturnValue) == 0x0003E0, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_GetDirectionUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0003F8, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_Add_VectorVector_ReturnValue) == 0x000410, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_SphereTraceSingle_OutHit) == 0x000428, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_SphereTraceSingle_ReturnValue) == 0x000510, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_bBlockingHit_2) == 0x000511, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_bBlockingHit_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_bInitialOverlap_2) == 0x000512, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_bInitialOverlap_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_Time_2) == 0x000514, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_Time_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_Distance_2) == 0x000518, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_Distance_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_Location_2) == 0x000520, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_Location_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_ImpactPoint_2) == 0x000538, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_ImpactPoint_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_Normal_2) == 0x000550, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_Normal_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_ImpactNormal_2) == 0x000568, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_ImpactNormal_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_PhysMat_2) == 0x000580, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_PhysMat_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_HitActor_2) == 0x000588, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_HitActor_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_HitComponent_2) == 0x000590, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_HitComponent_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_HitBoneName_2) == 0x000598, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_HitBoneName_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_BoneName_2) == 0x0005A0, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_BoneName_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_HitItem_2) == 0x0005A8, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_HitItem_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_ElementIndex_2) == 0x0005AC, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_ElementIndex_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_FaceIndex_2) == 0x0005B0, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_FaceIndex_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_TraceStart_2) == 0x0005B8, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_TraceStart_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BreakHitResult_TraceEnd_2) == 0x0005D0, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BreakHitResult_TraceEnd_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_NotEqual_VectorVector_ReturnValue) == 0x0005E8, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_NotEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, K2Node_DynamicCast_AsPawn) == 0x0005F0, "Member 'BP_Weapon_C_ProjectileTrace::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, K2Node_DynamicCast_bSuccess) == 0x0005F8, "Member 'BP_Weapon_C_ProjectileTrace::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BooleanOR_ReturnValue) == 0x0005F9, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_Not_PreBool_ReturnValue_1) == 0x0005FA, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ProjectileTrace, CallFunc_BooleanAND_ReturnValue) == 0x0005FB, "Member 'BP_Weapon_C_ProjectileTrace::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Weapon_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Weapon_C_ReceiveTick");
static_assert(sizeof(BP_Weapon_C_ReceiveTick) == 0x000004, "Wrong size on BP_Weapon_C_ReceiveTick");
static_assert(offsetof(BP_Weapon_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Weapon_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.Recoil Compensation for Train
// 0x0028 (0x0028 - 0x0000)
struct BP_Weapon_C_Recoil_Compensation_for_Train final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_Weapon_Type                              Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_Recoil_Compensation_for_Train) == 0x000008, "Wrong alignment on BP_Weapon_C_Recoil_Compensation_for_Train");
static_assert(sizeof(BP_Weapon_C_Recoil_Compensation_for_Train) == 0x000028, "Wrong size on BP_Weapon_C_Recoil_Compensation_for_Train");
static_assert(offsetof(BP_Weapon_C_Recoil_Compensation_for_Train, ReturnValue) == 0x000000, "Member 'BP_Weapon_C_Recoil_Compensation_for_Train::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_Recoil_Compensation_for_Train, Temp_byte_Variable) == 0x000008, "Member 'BP_Weapon_C_Recoil_Compensation_for_Train::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_Recoil_Compensation_for_Train, Temp_real_Variable) == 0x000010, "Member 'BP_Weapon_C_Recoil_Compensation_for_Train::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_Recoil_Compensation_for_Train, Temp_real_Variable_1) == 0x000018, "Member 'BP_Weapon_C_Recoil_Compensation_for_Train::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_Recoil_Compensation_for_Train, K2Node_Select_Default) == 0x000020, "Member 'BP_Weapon_C_Recoil_Compensation_for_Train::K2Node_Select_Default' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.RecoilCamera
// 0x0001 (0x0001 - 0x0000)
struct BP_Weapon_C_RecoilCamera final
{
public:
	bool                                          Forward;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_RecoilCamera) == 0x000001, "Wrong alignment on BP_Weapon_C_RecoilCamera");
static_assert(sizeof(BP_Weapon_C_RecoilCamera) == 0x000001, "Wrong size on BP_Weapon_C_RecoilCamera");
static_assert(offsetof(BP_Weapon_C_RecoilCamera, Forward) == 0x000000, "Member 'BP_Weapon_C_RecoilCamera::Forward' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.RecoilFirstPerson
// 0x0010 (0x0010 - 0x0000)
struct BP_Weapon_C_RecoilFirstPerson final
{
public:
	double                                        Pitch;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Yaw;                                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_RecoilFirstPerson) == 0x000008, "Wrong alignment on BP_Weapon_C_RecoilFirstPerson");
static_assert(sizeof(BP_Weapon_C_RecoilFirstPerson) == 0x000010, "Wrong size on BP_Weapon_C_RecoilFirstPerson");
static_assert(offsetof(BP_Weapon_C_RecoilFirstPerson, Pitch) == 0x000000, "Member 'BP_Weapon_C_RecoilFirstPerson::Pitch' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_RecoilFirstPerson, Yaw) == 0x000008, "Member 'BP_Weapon_C_RecoilFirstPerson::Yaw' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.ReInitVars
// 0x0220 (0x0220 - 0x0000)
struct BP_Weapon_C_ReInitVars final
{
public:
	struct FFItemInfo                             ItemInfo;                                          // 0x0000(0x0220)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_ReInitVars) == 0x000008, "Wrong alignment on BP_Weapon_C_ReInitVars");
static_assert(sizeof(BP_Weapon_C_ReInitVars) == 0x000220, "Wrong size on BP_Weapon_C_ReInitVars");
static_assert(offsetof(BP_Weapon_C_ReInitVars, ItemInfo) == 0x000000, "Member 'BP_Weapon_C_ReInitVars::ItemInfo' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.Reload
// 0x0001 (0x0001 - 0x0000)
struct BP_Weapon_C_Reload final
{
public:
	bool                                          bIsFastReloadMulti;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_Reload) == 0x000001, "Wrong alignment on BP_Weapon_C_Reload");
static_assert(sizeof(BP_Weapon_C_Reload) == 0x000001, "Wrong size on BP_Weapon_C_Reload");
static_assert(offsetof(BP_Weapon_C_Reload, bIsFastReloadMulti) == 0x000000, "Member 'BP_Weapon_C_Reload::bIsFastReloadMulti' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.SelectAmmoTypes
// 0x0004 (0x0004 - 0x0000)
struct BP_Weapon_C_SelectAmmoTypes final
{
public:
	EBPE_AmmoType                                 Param_AmmoType;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_AmmoType                                 AmmoType_Default;                                  // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_AmmoType                                 AmmoType_Piercing;                                 // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_SelectAmmoTypes) == 0x000001, "Wrong alignment on BP_Weapon_C_SelectAmmoTypes");
static_assert(sizeof(BP_Weapon_C_SelectAmmoTypes) == 0x000004, "Wrong size on BP_Weapon_C_SelectAmmoTypes");
static_assert(offsetof(BP_Weapon_C_SelectAmmoTypes, Param_AmmoType) == 0x000000, "Member 'BP_Weapon_C_SelectAmmoTypes::Param_AmmoType' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SelectAmmoTypes, AmmoType_Default) == 0x000001, "Member 'BP_Weapon_C_SelectAmmoTypes::AmmoType_Default' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SelectAmmoTypes, AmmoType_Piercing) == 0x000002, "Member 'BP_Weapon_C_SelectAmmoTypes::AmmoType_Piercing' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SelectAmmoTypes, K2Node_SwitchEnum_CmpSuccess) == 0x000003, "Member 'BP_Weapon_C_SelectAmmoTypes::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.SelectWeaponPlaceholder
// 0x0060 (0x0060 - 0x0000)
struct BP_Weapon_C_SelectWeaponPlaceholder final
{
public:
	class AWeaponPlaceholder_C*                   Temp_object_Variable;                              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AWeaponPlaceholder_C*                   Temp_object_Variable_1;                            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AWeaponPlaceholder_C*                   Temp_object_Variable_2;                            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AWeaponPlaceholder_C*                   Temp_object_Variable_3;                            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AWeaponPlaceholder_C*                   Temp_object_Variable_4;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AWeaponPlaceholder_C*                   Temp_object_Variable_5;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AWeaponPlaceholder_C*                   Temp_object_Variable_6;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AWeaponPlaceholder_C*                   Temp_object_Variable_7;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AWeaponPlaceholder_C*                   Temp_object_Variable_8;                            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPlayerSlots                                  Temp_byte_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeaponPlaceholder_C*                   K2Node_Select_Default;                             // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToActor_ReturnValue;             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_SelectWeaponPlaceholder) == 0x000008, "Wrong alignment on BP_Weapon_C_SelectWeaponPlaceholder");
static_assert(sizeof(BP_Weapon_C_SelectWeaponPlaceholder) == 0x000060, "Wrong size on BP_Weapon_C_SelectWeaponPlaceholder");
static_assert(offsetof(BP_Weapon_C_SelectWeaponPlaceholder, Temp_object_Variable) == 0x000000, "Member 'BP_Weapon_C_SelectWeaponPlaceholder::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SelectWeaponPlaceholder, Temp_object_Variable_1) == 0x000008, "Member 'BP_Weapon_C_SelectWeaponPlaceholder::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SelectWeaponPlaceholder, Temp_object_Variable_2) == 0x000010, "Member 'BP_Weapon_C_SelectWeaponPlaceholder::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SelectWeaponPlaceholder, Temp_object_Variable_3) == 0x000018, "Member 'BP_Weapon_C_SelectWeaponPlaceholder::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SelectWeaponPlaceholder, Temp_object_Variable_4) == 0x000020, "Member 'BP_Weapon_C_SelectWeaponPlaceholder::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SelectWeaponPlaceholder, Temp_object_Variable_5) == 0x000028, "Member 'BP_Weapon_C_SelectWeaponPlaceholder::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SelectWeaponPlaceholder, Temp_object_Variable_6) == 0x000030, "Member 'BP_Weapon_C_SelectWeaponPlaceholder::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SelectWeaponPlaceholder, Temp_object_Variable_7) == 0x000038, "Member 'BP_Weapon_C_SelectWeaponPlaceholder::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SelectWeaponPlaceholder, Temp_object_Variable_8) == 0x000040, "Member 'BP_Weapon_C_SelectWeaponPlaceholder::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SelectWeaponPlaceholder, Temp_byte_Variable) == 0x000048, "Member 'BP_Weapon_C_SelectWeaponPlaceholder::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SelectWeaponPlaceholder, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'BP_Weapon_C_SelectWeaponPlaceholder::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SelectWeaponPlaceholder, CallFunc_IsValid_ReturnValue_1) == 0x00004A, "Member 'BP_Weapon_C_SelectWeaponPlaceholder::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SelectWeaponPlaceholder, K2Node_Select_Default) == 0x000050, "Member 'BP_Weapon_C_SelectWeaponPlaceholder::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SelectWeaponPlaceholder, CallFunc_K2_AttachToActor_ReturnValue) == 0x000058, "Member 'BP_Weapon_C_SelectWeaponPlaceholder::CallFunc_K2_AttachToActor_ReturnValue' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.SetAmmoType
// 0x0002 (0x0002 - 0x0000)
struct BP_Weapon_C_SetAmmoType final
{
public:
	EBPE_AmmoClass                                Param_AmmoClass;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_AmmoType                                 Param_AmmoType;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_SetAmmoType) == 0x000001, "Wrong alignment on BP_Weapon_C_SetAmmoType");
static_assert(sizeof(BP_Weapon_C_SetAmmoType) == 0x000002, "Wrong size on BP_Weapon_C_SetAmmoType");
static_assert(offsetof(BP_Weapon_C_SetAmmoType, Param_AmmoClass) == 0x000000, "Member 'BP_Weapon_C_SetAmmoType::Param_AmmoClass' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetAmmoType, Param_AmmoType) == 0x000001, "Member 'BP_Weapon_C_SetAmmoType::Param_AmmoType' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.SetAttachmentsMultiplier
// 0x0020 (0x0020 - 0x0000)
struct BP_Weapon_C_SetAttachmentsMultiplier final
{
public:
	E_TypesOfModes                                Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        AttachmentMultiplier;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Attachment2Multiplier;                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WipeAllMultipliers;                                // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_SetAttachmentsMultiplier) == 0x000008, "Wrong alignment on BP_Weapon_C_SetAttachmentsMultiplier");
static_assert(sizeof(BP_Weapon_C_SetAttachmentsMultiplier) == 0x000020, "Wrong size on BP_Weapon_C_SetAttachmentsMultiplier");
static_assert(offsetof(BP_Weapon_C_SetAttachmentsMultiplier, Type) == 0x000000, "Member 'BP_Weapon_C_SetAttachmentsMultiplier::Type' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetAttachmentsMultiplier, AttachmentMultiplier) == 0x000008, "Member 'BP_Weapon_C_SetAttachmentsMultiplier::AttachmentMultiplier' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetAttachmentsMultiplier, Attachment2Multiplier) == 0x000010, "Member 'BP_Weapon_C_SetAttachmentsMultiplier::Attachment2Multiplier' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetAttachmentsMultiplier, WipeAllMultipliers) == 0x000018, "Member 'BP_Weapon_C_SetAttachmentsMultiplier::WipeAllMultipliers' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetAttachmentsMultiplier, K2Node_SwitchEnum_CmpSuccess) == 0x000019, "Member 'BP_Weapon_C_SetAttachmentsMultiplier::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.SetIsPlayEndRoundsSound
// 0x0001 (0x0001 - 0x0000)
struct BP_Weapon_C_SetIsPlayEndRoundsSound final
{
public:
	bool                                          bIsPlaySound;                                      // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_SetIsPlayEndRoundsSound) == 0x000001, "Wrong alignment on BP_Weapon_C_SetIsPlayEndRoundsSound");
static_assert(sizeof(BP_Weapon_C_SetIsPlayEndRoundsSound) == 0x000001, "Wrong size on BP_Weapon_C_SetIsPlayEndRoundsSound");
static_assert(offsetof(BP_Weapon_C_SetIsPlayEndRoundsSound, bIsPlaySound) == 0x000000, "Member 'BP_Weapon_C_SetIsPlayEndRoundsSound::bIsPlaySound' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.SetSkMesh
// 0x0188 (0x0188 - 0x0000)
struct BP_Weapon_C_SetSkMesh final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_FPFunctions_C>     K2Node_DynamicCast_AsBI_FPFunctions;               // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_FPFunctions_C>     K2Node_DynamicCast_AsBI_FPFunctions_1;             // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_LoadAnimMontage_AnimMontage;              // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_LoadAnimMontage_AnimMontage_1;            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_2;            // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_PlayerWeaponAnim                    CallFunc_GetDataTableRowFromName_OutRow;           // 0x0078(0x0088)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_FPFunctions_C>     K2Node_DynamicCast_AsBI_FPFunctions_2;             // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11B[0x5];                                      // 0x011B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_3;            // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ISurvAnimInterface_C>  K2Node_DynamicCast_AsSurv_Anim_Interface;          // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Select_Default;                             // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x014B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Select_Default_1;                           // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          K2Node_Select_Default_2;                           // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0163(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          K2Node_Select_Default_3;                           // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          K2Node_Select_Default_4;                           // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17A[0x6];                                      // 0x017A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeaponAnimAsset*                       K2Node_Select_Default_5;                           // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_SetSkMesh) == 0x000008, "Wrong alignment on BP_Weapon_C_SetSkMesh");
static_assert(sizeof(BP_Weapon_C_SetSkMesh) == 0x000188, "Wrong size on BP_Weapon_C_SetSkMesh");
static_assert(offsetof(BP_Weapon_C_SetSkMesh, Temp_bool_Variable) == 0x000000, "Member 'BP_Weapon_C_SetSkMesh::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetSkMesh, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'BP_Weapon_C_SetSkMesh::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetSkMesh, K2Node_DynamicCast_AsBI_FPFunctions) == 0x000010, "Member 'BP_Weapon_C_SetSkMesh::K2Node_DynamicCast_AsBI_FPFunctions' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetSkMesh, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_Weapon_C_SetSkMesh::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetSkMesh, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_Weapon_C_SetSkMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetSkMesh, Temp_bool_Variable_1) == 0x000022, "Member 'BP_Weapon_C_SetSkMesh::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetSkMesh, CallFunc_IsValid_ReturnValue_1) == 0x000023, "Member 'BP_Weapon_C_SetSkMesh::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetSkMesh, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000028, "Member 'BP_Weapon_C_SetSkMesh::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetSkMesh, K2Node_DynamicCast_AsBI_FPFunctions_1) == 0x000030, "Member 'BP_Weapon_C_SetSkMesh::K2Node_DynamicCast_AsBI_FPFunctions_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetSkMesh, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_Weapon_C_SetSkMesh::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetSkMesh, CallFunc_LoadAnimMontage_AnimMontage) == 0x000048, "Member 'BP_Weapon_C_SetSkMesh::CallFunc_LoadAnimMontage_AnimMontage' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetSkMesh, CallFunc_LoadAnimMontage_AnimMontage_1) == 0x000050, "Member 'BP_Weapon_C_SetSkMesh::CallFunc_LoadAnimMontage_AnimMontage_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetSkMesh, Temp_bool_Variable_2) == 0x000058, "Member 'BP_Weapon_C_SetSkMesh::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetSkMesh, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000059, "Member 'BP_Weapon_C_SetSkMesh::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetSkMesh, Temp_bool_Variable_3) == 0x00005A, "Member 'BP_Weapon_C_SetSkMesh::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetSkMesh, Temp_bool_Variable_4) == 0x00005B, "Member 'BP_Weapon_C_SetSkMesh::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetSkMesh, CallFunc_K2_AttachToComponent_ReturnValue) == 0x00005C, "Member 'BP_Weapon_C_SetSkMesh::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetSkMesh, Temp_bool_Variable_5) == 0x00005D, "Member 'BP_Weapon_C_SetSkMesh::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetSkMesh, CallFunc_SelectFloat_ReturnValue) == 0x000060, "Member 'BP_Weapon_C_SetSkMesh::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetSkMesh, CallFunc_SelectFloat_ReturnValue_1) == 0x000068, "Member 'BP_Weapon_C_SetSkMesh::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetSkMesh, CallFunc_GetAnimInstance_ReturnValue_2) == 0x000070, "Member 'BP_Weapon_C_SetSkMesh::CallFunc_GetAnimInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetSkMesh, CallFunc_GetDataTableRowFromName_OutRow) == 0x000078, "Member 'BP_Weapon_C_SetSkMesh::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetSkMesh, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000100, "Member 'BP_Weapon_C_SetSkMesh::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetSkMesh, K2Node_DynamicCast_AsBI_FPFunctions_2) == 0x000108, "Member 'BP_Weapon_C_SetSkMesh::K2Node_DynamicCast_AsBI_FPFunctions_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetSkMesh, K2Node_DynamicCast_bSuccess_2) == 0x000118, "Member 'BP_Weapon_C_SetSkMesh::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetSkMesh, CallFunc_IsValid_ReturnValue_2) == 0x000119, "Member 'BP_Weapon_C_SetSkMesh::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetSkMesh, CallFunc_BooleanAND_ReturnValue) == 0x00011A, "Member 'BP_Weapon_C_SetSkMesh::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetSkMesh, CallFunc_GetAnimInstance_ReturnValue_3) == 0x000120, "Member 'BP_Weapon_C_SetSkMesh::CallFunc_GetAnimInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetSkMesh, K2Node_DynamicCast_AsSurv_Anim_Interface) == 0x000128, "Member 'BP_Weapon_C_SetSkMesh::K2Node_DynamicCast_AsSurv_Anim_Interface' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetSkMesh, K2Node_DynamicCast_bSuccess_3) == 0x000138, "Member 'BP_Weapon_C_SetSkMesh::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetSkMesh, K2Node_Select_Default) == 0x000140, "Member 'BP_Weapon_C_SetSkMesh::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetSkMesh, CallFunc_IsValid_ReturnValue_3) == 0x000148, "Member 'BP_Weapon_C_SetSkMesh::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetSkMesh, CallFunc_IsValid_ReturnValue_4) == 0x000149, "Member 'BP_Weapon_C_SetSkMesh::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetSkMesh, CallFunc_BooleanAND_ReturnValue_1) == 0x00014A, "Member 'BP_Weapon_C_SetSkMesh::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetSkMesh, CallFunc_BooleanAND_ReturnValue_2) == 0x00014B, "Member 'BP_Weapon_C_SetSkMesh::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetSkMesh, K2Node_Select_Default_1) == 0x000150, "Member 'BP_Weapon_C_SetSkMesh::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetSkMesh, K2Node_Select_Default_2) == 0x000158, "Member 'BP_Weapon_C_SetSkMesh::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetSkMesh, CallFunc_IsValid_ReturnValue_5) == 0x000160, "Member 'BP_Weapon_C_SetSkMesh::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetSkMesh, CallFunc_IsValid_ReturnValue_6) == 0x000161, "Member 'BP_Weapon_C_SetSkMesh::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetSkMesh, CallFunc_BooleanAND_ReturnValue_3) == 0x000162, "Member 'BP_Weapon_C_SetSkMesh::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetSkMesh, CallFunc_BooleanAND_ReturnValue_4) == 0x000163, "Member 'BP_Weapon_C_SetSkMesh::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetSkMesh, K2Node_Select_Default_3) == 0x000168, "Member 'BP_Weapon_C_SetSkMesh::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetSkMesh, K2Node_Select_Default_4) == 0x000170, "Member 'BP_Weapon_C_SetSkMesh::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetSkMesh, CallFunc_IsValid_ReturnValue_7) == 0x000178, "Member 'BP_Weapon_C_SetSkMesh::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetSkMesh, CallFunc_BooleanAND_ReturnValue_5) == 0x000179, "Member 'BP_Weapon_C_SetSkMesh::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SetSkMesh, K2Node_Select_Default_5) == 0x000180, "Member 'BP_Weapon_C_SetSkMesh::K2Node_Select_Default_5' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.SetSupressedSound
// 0x0001 (0x0001 - 0x0000)
struct BP_Weapon_C_SetSupressedSound final
{
public:
	bool                                          Supressed;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_SetSupressedSound) == 0x000001, "Wrong alignment on BP_Weapon_C_SetSupressedSound");
static_assert(sizeof(BP_Weapon_C_SetSupressedSound) == 0x000001, "Wrong size on BP_Weapon_C_SetSupressedSound");
static_assert(offsetof(BP_Weapon_C_SetSupressedSound, Supressed) == 0x000000, "Member 'BP_Weapon_C_SetSupressedSound::Supressed' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.SetWeaponIcon
// 0x0008 (0x0008 - 0x0000)
struct BP_Weapon_C_SetWeaponIcon final
{
public:
	class UMaterialInterface*                     CallFunc_GetWeaponIcon_GeneratedWeaponIcon;        // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_SetWeaponIcon) == 0x000008, "Wrong alignment on BP_Weapon_C_SetWeaponIcon");
static_assert(sizeof(BP_Weapon_C_SetWeaponIcon) == 0x000008, "Wrong size on BP_Weapon_C_SetWeaponIcon");
static_assert(offsetof(BP_Weapon_C_SetWeaponIcon, CallFunc_GetWeaponIcon_GeneratedWeaponIcon) == 0x000000, "Member 'BP_Weapon_C_SetWeaponIcon::CallFunc_GetWeaponIcon_GeneratedWeaponIcon' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.ShootDirection
// 0x0440 (0x0440 - 0x0000)
struct BP_Weapon_C_ShootDirection final
{
public:
	struct FVector                                BeginPoint;                                        // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndPoint;                                          // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CamForwardVector;                                  // 0x0030(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_V2_C*                   K2Node_DynamicCast_AsSurvival_Player_V2;           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0xF];                                       // 0x0051(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0060(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Weaponry_C>       K2Node_DynamicCast_AsBPI_Weaponry;                 // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraComponent*                       CallFunc_WP_GetAimCamera_Camera;                   // 0x0190(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Weaponry_C>       K2Node_DynamicCast_AsBPI_Weaponry_1;               // 0x01A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       CallFunc_WP_GetAimCamera_Camera_1;                 // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_2;           // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_1;         // 0x0250(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x02B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x02D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x02E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_3;           // 0x0300(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0318(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0330(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_4;           // 0x0348(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x0360(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x0378(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_5;           // 0x0390(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_6;           // 0x03A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_2;              // 0x03C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_3;              // 0x03C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Weaponry_C>       K2Node_DynamicCast_AsBPI_Weaponry_2;               // 0x03D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E1[0x7];                                      // 0x03E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Weaponry_C>       K2Node_DynamicCast_AsBPI_Weaponry_3;               // 0x03E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F9[0x7];                                      // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraComponent*                       CallFunc_WP_GetAimCamera_Camera_2;                 // 0x0400(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_WP_GetShootDirection_ShootDirection;      // 0x0408(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_5;           // 0x0420(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_ShootDirection) == 0x000010, "Wrong alignment on BP_Weapon_C_ShootDirection");
static_assert(sizeof(BP_Weapon_C_ShootDirection) == 0x000440, "Wrong size on BP_Weapon_C_ShootDirection");
static_assert(offsetof(BP_Weapon_C_ShootDirection, BeginPoint) == 0x000000, "Member 'BP_Weapon_C_ShootDirection::BeginPoint' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, EndPoint) == 0x000018, "Member 'BP_Weapon_C_ShootDirection::EndPoint' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, CamForwardVector) == 0x000030, "Member 'BP_Weapon_C_ShootDirection::CamForwardVector' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, K2Node_DynamicCast_AsSurvival_Player_V2) == 0x000048, "Member 'BP_Weapon_C_ShootDirection::K2Node_DynamicCast_AsSurvival_Player_V2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_Weapon_C_ShootDirection::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, CallFunc_GetSocketTransform_ReturnValue) == 0x000060, "Member 'BP_Weapon_C_ShootDirection::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, CallFunc_BreakTransform_Location) == 0x0000C0, "Member 'BP_Weapon_C_ShootDirection::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, CallFunc_BreakTransform_Rotation) == 0x0000D8, "Member 'BP_Weapon_C_ShootDirection::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, CallFunc_BreakTransform_Scale) == 0x0000F0, "Member 'BP_Weapon_C_ShootDirection::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, CallFunc_GetForwardVector_ReturnValue) == 0x000108, "Member 'BP_Weapon_C_ShootDirection::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000120, "Member 'BP_Weapon_C_ShootDirection::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, CallFunc_Add_VectorVector_ReturnValue) == 0x000138, "Member 'BP_Weapon_C_ShootDirection::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000150, "Member 'BP_Weapon_C_ShootDirection::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, CallFunc_BooleanAND_ReturnValue) == 0x000168, "Member 'BP_Weapon_C_ShootDirection::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, CallFunc_GetPlayerPawn_ReturnValue) == 0x000170, "Member 'BP_Weapon_C_ShootDirection::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, K2Node_DynamicCast_AsBPI_Weaponry) == 0x000178, "Member 'BP_Weapon_C_ShootDirection::K2Node_DynamicCast_AsBPI_Weaponry' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, K2Node_DynamicCast_bSuccess_1) == 0x000188, "Member 'BP_Weapon_C_ShootDirection::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, CallFunc_WP_GetAimCamera_Camera) == 0x000190, "Member 'BP_Weapon_C_ShootDirection::CallFunc_WP_GetAimCamera_Camera' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x000198, "Member 'BP_Weapon_C_ShootDirection::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, K2Node_DynamicCast_AsBPI_Weaponry_1) == 0x0001A0, "Member 'BP_Weapon_C_ShootDirection::K2Node_DynamicCast_AsBPI_Weaponry_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, K2Node_DynamicCast_bSuccess_2) == 0x0001B0, "Member 'BP_Weapon_C_ShootDirection::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0001B8, "Member 'BP_Weapon_C_ShootDirection::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, CallFunc_WP_GetAimCamera_Camera_1) == 0x0001D0, "Member 'BP_Weapon_C_ShootDirection::CallFunc_WP_GetAimCamera_Camera_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, CallFunc_GetForwardVector_ReturnValue_1) == 0x0001D8, "Member 'BP_Weapon_C_ShootDirection::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0001F0, "Member 'BP_Weapon_C_ShootDirection::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000208, "Member 'BP_Weapon_C_ShootDirection::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000220, "Member 'BP_Weapon_C_ShootDirection::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, CallFunc_GetForwardVector_ReturnValue_2) == 0x000238, "Member 'BP_Weapon_C_ShootDirection::CallFunc_GetForwardVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, CallFunc_GetSocketTransform_ReturnValue_1) == 0x000250, "Member 'BP_Weapon_C_ShootDirection::CallFunc_GetSocketTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, CallFunc_IsValid_ReturnValue) == 0x0002B0, "Member 'BP_Weapon_C_ShootDirection::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, CallFunc_BreakTransform_Location_1) == 0x0002B8, "Member 'BP_Weapon_C_ShootDirection::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, CallFunc_BreakTransform_Rotation_1) == 0x0002D0, "Member 'BP_Weapon_C_ShootDirection::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, CallFunc_BreakTransform_Scale_1) == 0x0002E8, "Member 'BP_Weapon_C_ShootDirection::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, CallFunc_GetForwardVector_ReturnValue_3) == 0x000300, "Member 'BP_Weapon_C_ShootDirection::CallFunc_GetForwardVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000318, "Member 'BP_Weapon_C_ShootDirection::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000330, "Member 'BP_Weapon_C_ShootDirection::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, CallFunc_GetForwardVector_ReturnValue_4) == 0x000348, "Member 'BP_Weapon_C_ShootDirection::CallFunc_GetForwardVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, CallFunc_Add_VectorVector_ReturnValue_4) == 0x000360, "Member 'BP_Weapon_C_ShootDirection::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x000378, "Member 'BP_Weapon_C_ShootDirection::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, CallFunc_Add_VectorVector_ReturnValue_5) == 0x000390, "Member 'BP_Weapon_C_ShootDirection::CallFunc_Add_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, CallFunc_Add_VectorVector_ReturnValue_6) == 0x0003A8, "Member 'BP_Weapon_C_ShootDirection::CallFunc_Add_VectorVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, CallFunc_GetPlayerPawn_ReturnValue_2) == 0x0003C0, "Member 'BP_Weapon_C_ShootDirection::CallFunc_GetPlayerPawn_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, CallFunc_GetPlayerPawn_ReturnValue_3) == 0x0003C8, "Member 'BP_Weapon_C_ShootDirection::CallFunc_GetPlayerPawn_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, K2Node_DynamicCast_AsBPI_Weaponry_2) == 0x0003D0, "Member 'BP_Weapon_C_ShootDirection::K2Node_DynamicCast_AsBPI_Weaponry_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, K2Node_DynamicCast_bSuccess_3) == 0x0003E0, "Member 'BP_Weapon_C_ShootDirection::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, K2Node_DynamicCast_AsBPI_Weaponry_3) == 0x0003E8, "Member 'BP_Weapon_C_ShootDirection::K2Node_DynamicCast_AsBPI_Weaponry_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, K2Node_DynamicCast_bSuccess_4) == 0x0003F8, "Member 'BP_Weapon_C_ShootDirection::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, CallFunc_WP_GetAimCamera_Camera_2) == 0x000400, "Member 'BP_Weapon_C_ShootDirection::CallFunc_WP_GetAimCamera_Camera_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, CallFunc_WP_GetShootDirection_ShootDirection) == 0x000408, "Member 'BP_Weapon_C_ShootDirection::CallFunc_WP_GetShootDirection_ShootDirection' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_ShootDirection, CallFunc_GetForwardVector_ReturnValue_5) == 0x000420, "Member 'BP_Weapon_C_ShootDirection::CallFunc_GetForwardVector_ReturnValue_5' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.Shotgun_Cycle
// 0x0001 (0x0001 - 0x0000)
struct BP_Weapon_C_Shotgun_Cycle final
{
public:
	bool                                          ForciblyEnd;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_Shotgun_Cycle) == 0x000001, "Wrong alignment on BP_Weapon_C_Shotgun_Cycle");
static_assert(sizeof(BP_Weapon_C_Shotgun_Cycle) == 0x000001, "Wrong size on BP_Weapon_C_Shotgun_Cycle");
static_assert(offsetof(BP_Weapon_C_Shotgun_Cycle, ForciblyEnd) == 0x000000, "Member 'BP_Weapon_C_Shotgun_Cycle::ForciblyEnd' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.SimpleToCommon
// 0x0258 (0x0258 - 0x0000)
struct BP_Weapon_C_SimpleToCommon final
{
public:
	struct FS_SimplifiedHitInfo                   Hit;                                               // 0x0000(0x0080)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FHitResult                             S_SimplifiedHitInfo;                               // 0x0080(0x00E8)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_MakeHitResult_ReturnValue;                // 0x0170(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Weapon_C_SimpleToCommon) == 0x000008, "Wrong alignment on BP_Weapon_C_SimpleToCommon");
static_assert(sizeof(BP_Weapon_C_SimpleToCommon) == 0x000258, "Wrong size on BP_Weapon_C_SimpleToCommon");
static_assert(offsetof(BP_Weapon_C_SimpleToCommon, Hit) == 0x000000, "Member 'BP_Weapon_C_SimpleToCommon::Hit' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SimpleToCommon, S_SimplifiedHitInfo) == 0x000080, "Member 'BP_Weapon_C_SimpleToCommon::S_SimplifiedHitInfo' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SimpleToCommon, CallFunc_GetOwner_ReturnValue) == 0x000168, "Member 'BP_Weapon_C_SimpleToCommon::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SimpleToCommon, CallFunc_MakeHitResult_ReturnValue) == 0x000170, "Member 'BP_Weapon_C_SimpleToCommon::CallFunc_MakeHitResult_ReturnValue' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.SimulateLocalMontage
// 0x00E8 (0x00E8 - 0x0000)
struct BP_Weapon_C_SimulateLocalMontage final
{
public:
	class UObject*                                Attacked;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Damage;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerDeadBody_C*                      K2Node_DynamicCast_AsPlayer_Dead_Body;             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AParentZombieAI_C*                      K2Node_DynamicCast_AsParent_Zombie_AI;             // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetStat_Value;                            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_SimulateLocalMontage) == 0x000008, "Wrong alignment on BP_Weapon_C_SimulateLocalMontage");
static_assert(sizeof(BP_Weapon_C_SimulateLocalMontage) == 0x0000E8, "Wrong size on BP_Weapon_C_SimulateLocalMontage");
static_assert(offsetof(BP_Weapon_C_SimulateLocalMontage, Attacked) == 0x000000, "Member 'BP_Weapon_C_SimulateLocalMontage::Attacked' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SimulateLocalMontage, BoneName) == 0x000008, "Member 'BP_Weapon_C_SimulateLocalMontage::BoneName' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SimulateLocalMontage, Damage) == 0x000010, "Member 'BP_Weapon_C_SimulateLocalMontage::Damage' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SimulateLocalMontage, HitLocation) == 0x000018, "Member 'BP_Weapon_C_SimulateLocalMontage::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SimulateLocalMontage, K2Node_DynamicCast_AsPlayer_Dead_Body) == 0x000030, "Member 'BP_Weapon_C_SimulateLocalMontage::K2Node_DynamicCast_AsPlayer_Dead_Body' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SimulateLocalMontage, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_Weapon_C_SimulateLocalMontage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SimulateLocalMontage, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'BP_Weapon_C_SimulateLocalMontage::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SimulateLocalMontage, K2Node_DynamicCast_AsParent_Zombie_AI) == 0x000058, "Member 'BP_Weapon_C_SimulateLocalMontage::K2Node_DynamicCast_AsParent_Zombie_AI' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SimulateLocalMontage, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'BP_Weapon_C_SimulateLocalMontage::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SimulateLocalMontage, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000068, "Member 'BP_Weapon_C_SimulateLocalMontage::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SimulateLocalMontage, K2Node_DynamicCast_AsSurvival_Player) == 0x000080, "Member 'BP_Weapon_C_SimulateLocalMontage::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SimulateLocalMontage, K2Node_DynamicCast_bSuccess_2) == 0x000088, "Member 'BP_Weapon_C_SimulateLocalMontage::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SimulateLocalMontage, CallFunc_Normal_ReturnValue) == 0x000090, "Member 'BP_Weapon_C_SimulateLocalMontage::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SimulateLocalMontage, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000A8, "Member 'BP_Weapon_C_SimulateLocalMontage::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SimulateLocalMontage, CallFunc_GetStat_Value) == 0x0000C0, "Member 'BP_Weapon_C_SimulateLocalMontage::CallFunc_GetStat_Value' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SimulateLocalMontage, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'BP_Weapon_C_SimulateLocalMontage::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SimulateLocalMontage, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000D0, "Member 'BP_Weapon_C_SimulateLocalMontage::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.SingleShot
// 0x0780 (0x0780 - 0x0000)
struct BP_Weapon_C_SingleShot final
{
public:
	int32                                         LocalBulletsInShot;                                // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBPS_DamageInfo>                DamageInfo;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<struct FS_HitInfo>                     HitsInfo;                                          // 0x0018(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_Map_Values_Values;                        // 0x0058(0x0010)(ReferenceParm)
	TArray<class AActor*>                         CallFunc_Map_Keys_Keys;                            // 0x0068(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBPS_DamageInfo                        CallFunc_Array_Get_Item;                           // 0x0080(0x0098)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBPS_DamageInfo                        CallFunc_Array_Get_Item_2;                         // 0x0138(0x0098)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FBPS_DamageInfo                        K2Node_MakeStruct_BPS_DamageInfo;                  // 0x01D0(0x0098)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_PredictHitTrace_BlockingHit;              // 0x0268(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_PredictHitTrace_WasHit;                   // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351[0x3];                                      // 0x0351(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0360(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0370(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FBPS_DamageInfo                        CallFunc_Array_Get_Item_3;                         // 0x0380(0x0098)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x041C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41D[0x3];                                      // 0x041D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_SimpleToCommon_S_SimplifiedHitInfo;       // 0x0420(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0509(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50A[0x2];                                      // 0x050A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x050C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_514[0x4];                                      // 0x0514(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0518(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0530(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0548(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0560(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0578(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0580(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0588(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x05A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x05A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x05A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AC[0x4];                                      // 0x05AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x05B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x05C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_HitHandling_ImpactPoint;                  // 0x05E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_HitHandling_ImpactNormal;                 // 0x05F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_HitHandling_SurfaceType;                  // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_611[0x7];                                      // 0x0611(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0618(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0630(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_648[0x8];                                      // 0x0648(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0650(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RebaseZeroOriginOntoLocal_ReturnValue;    // 0x06B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x06C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_HitInfo                             K2Node_MakeStruct_S_HitInfo;                       // 0x06E0(0x0078)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0758(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x075C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75D[0x3];                                      // 0x075D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0760(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0764(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_765[0x3];                                      // 0x0765(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBPS_DamageInfo>                CallFunc_BulletTrace_OutHit;                       // 0x0768(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_BulletTrace_GetHit;                       // 0x0778(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_SingleShot) == 0x000010, "Wrong alignment on BP_Weapon_C_SingleShot");
static_assert(sizeof(BP_Weapon_C_SingleShot) == 0x000780, "Wrong size on BP_Weapon_C_SingleShot");
static_assert(offsetof(BP_Weapon_C_SingleShot, LocalBulletsInShot) == 0x000000, "Member 'BP_Weapon_C_SingleShot::LocalBulletsInShot' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, DamageInfo) == 0x000008, "Member 'BP_Weapon_C_SingleShot::DamageInfo' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, HitsInfo) == 0x000018, "Member 'BP_Weapon_C_SingleShot::HitsInfo' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, Temp_int_Variable) == 0x000028, "Member 'BP_Weapon_C_SingleShot::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_Weapon_C_SingleShot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_Subtract_IntInt_ReturnValue) == 0x000030, "Member 'BP_Weapon_C_SingleShot::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BP_Weapon_C_SingleShot::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000038, "Member 'BP_Weapon_C_SingleShot::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000039, "Member 'BP_Weapon_C_SingleShot::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, K2Node_SwitchName_CmpSuccess) == 0x00003A, "Member 'BP_Weapon_C_SingleShot::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00003B, "Member 'BP_Weapon_C_SingleShot::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00003C, "Member 'BP_Weapon_C_SingleShot::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00003D, "Member 'BP_Weapon_C_SingleShot::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_BooleanOR_ReturnValue) == 0x00003E, "Member 'BP_Weapon_C_SingleShot::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00003F, "Member 'BP_Weapon_C_SingleShot::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000040, "Member 'BP_Weapon_C_SingleShot::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'BP_Weapon_C_SingleShot::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_BooleanOR_ReturnValue_1) == 0x000048, "Member 'BP_Weapon_C_SingleShot::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_Add_IntInt_ReturnValue_1) == 0x00004C, "Member 'BP_Weapon_C_SingleShot::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, Temp_int_Loop_Counter_Variable_1) == 0x000050, "Member 'BP_Weapon_C_SingleShot::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_Add_IntInt_ReturnValue_2) == 0x000054, "Member 'BP_Weapon_C_SingleShot::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_Map_Values_Values) == 0x000058, "Member 'BP_Weapon_C_SingleShot::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_Map_Keys_Keys) == 0x000068, "Member 'BP_Weapon_C_SingleShot::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, Temp_int_Array_Index_Variable_1) == 0x000078, "Member 'BP_Weapon_C_SingleShot::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_Array_Length_ReturnValue) == 0x00007C, "Member 'BP_Weapon_C_SingleShot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_Array_Get_Item) == 0x000080, "Member 'BP_Weapon_C_SingleShot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_Less_IntInt_ReturnValue) == 0x000118, "Member 'BP_Weapon_C_SingleShot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_GetOwner_ReturnValue) == 0x000120, "Member 'BP_Weapon_C_SingleShot::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_Array_Find_ReturnValue) == 0x000128, "Member 'BP_Weapon_C_SingleShot::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00012C, "Member 'BP_Weapon_C_SingleShot::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_Array_Get_Item_1) == 0x000130, "Member 'BP_Weapon_C_SingleShot::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_Array_Get_Item_2) == 0x000138, "Member 'BP_Weapon_C_SingleShot::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, K2Node_MakeStruct_BPS_DamageInfo) == 0x0001D0, "Member 'BP_Weapon_C_SingleShot::K2Node_MakeStruct_BPS_DamageInfo' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_PredictHitTrace_BlockingHit) == 0x000268, "Member 'BP_Weapon_C_SingleShot::CallFunc_PredictHitTrace_BlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_PredictHitTrace_WasHit) == 0x000350, "Member 'BP_Weapon_C_SingleShot::CallFunc_PredictHitTrace_WasHit' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_Array_Length_ReturnValue_1) == 0x000354, "Member 'BP_Weapon_C_SingleShot::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_Greater_IntInt_ReturnValue) == 0x000358, "Member 'BP_Weapon_C_SingleShot::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_Conv_IntToString_ReturnValue) == 0x000360, "Member 'BP_Weapon_C_SingleShot::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_Concat_StrStr_ReturnValue) == 0x000370, "Member 'BP_Weapon_C_SingleShot::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_Array_Get_Item_3) == 0x000380, "Member 'BP_Weapon_C_SingleShot::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_Array_Length_ReturnValue_2) == 0x000418, "Member 'BP_Weapon_C_SingleShot::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_Less_IntInt_ReturnValue_1) == 0x00041C, "Member 'BP_Weapon_C_SingleShot::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_SimpleToCommon_S_SimplifiedHitInfo) == 0x000420, "Member 'BP_Weapon_C_SingleShot::CallFunc_SimpleToCommon_S_SimplifiedHitInfo' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_BreakHitResult_bBlockingHit) == 0x000508, "Member 'BP_Weapon_C_SingleShot::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_BreakHitResult_bInitialOverlap) == 0x000509, "Member 'BP_Weapon_C_SingleShot::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_BreakHitResult_Time) == 0x00050C, "Member 'BP_Weapon_C_SingleShot::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_BreakHitResult_Distance) == 0x000510, "Member 'BP_Weapon_C_SingleShot::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_BreakHitResult_Location) == 0x000518, "Member 'BP_Weapon_C_SingleShot::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_BreakHitResult_ImpactPoint) == 0x000530, "Member 'BP_Weapon_C_SingleShot::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_BreakHitResult_Normal) == 0x000548, "Member 'BP_Weapon_C_SingleShot::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_BreakHitResult_ImpactNormal) == 0x000560, "Member 'BP_Weapon_C_SingleShot::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_BreakHitResult_PhysMat) == 0x000578, "Member 'BP_Weapon_C_SingleShot::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_BreakHitResult_HitActor) == 0x000580, "Member 'BP_Weapon_C_SingleShot::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_BreakHitResult_HitComponent) == 0x000588, "Member 'BP_Weapon_C_SingleShot::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_BreakHitResult_HitBoneName) == 0x000590, "Member 'BP_Weapon_C_SingleShot::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_BreakHitResult_BoneName) == 0x000598, "Member 'BP_Weapon_C_SingleShot::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_BreakHitResult_HitItem) == 0x0005A0, "Member 'BP_Weapon_C_SingleShot::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_BreakHitResult_ElementIndex) == 0x0005A4, "Member 'BP_Weapon_C_SingleShot::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_BreakHitResult_FaceIndex) == 0x0005A8, "Member 'BP_Weapon_C_SingleShot::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_BreakHitResult_TraceStart) == 0x0005B0, "Member 'BP_Weapon_C_SingleShot::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_BreakHitResult_TraceEnd) == 0x0005C8, "Member 'BP_Weapon_C_SingleShot::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_HitHandling_ImpactPoint) == 0x0005E0, "Member 'BP_Weapon_C_SingleShot::CallFunc_HitHandling_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_HitHandling_ImpactNormal) == 0x0005F8, "Member 'BP_Weapon_C_SingleShot::CallFunc_HitHandling_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_HitHandling_SurfaceType) == 0x000610, "Member 'BP_Weapon_C_SingleShot::CallFunc_HitHandling_SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000618, "Member 'BP_Weapon_C_SingleShot::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_Normal_ReturnValue) == 0x000630, "Member 'BP_Weapon_C_SingleShot::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_GetTransform_ReturnValue) == 0x000650, "Member 'BP_Weapon_C_SingleShot::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_RebaseZeroOriginOntoLocal_ReturnValue) == 0x0006B0, "Member 'BP_Weapon_C_SingleShot::CallFunc_RebaseZeroOriginOntoLocal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_InverseTransformLocation_ReturnValue) == 0x0006C8, "Member 'BP_Weapon_C_SingleShot::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, K2Node_MakeStruct_S_HitInfo) == 0x0006E0, "Member 'BP_Weapon_C_SingleShot::K2Node_MakeStruct_S_HitInfo' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_Array_Add_ReturnValue) == 0x000758, "Member 'BP_Weapon_C_SingleShot::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_IsValid_ReturnValue) == 0x00075C, "Member 'BP_Weapon_C_SingleShot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000760, "Member 'BP_Weapon_C_SingleShot::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_Not_PreBool_ReturnValue) == 0x000764, "Member 'BP_Weapon_C_SingleShot::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_BulletTrace_OutHit) == 0x000768, "Member 'BP_Weapon_C_SingleShot::CallFunc_BulletTrace_OutHit' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SingleShot, CallFunc_BulletTrace_GetHit) == 0x000778, "Member 'BP_Weapon_C_SingleShot::CallFunc_BulletTrace_GetHit' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.Spawnd Decal
// 0x0058 (0x0058 - 0x0000)
struct BP_Weapon_C_Spawnd_Decal final
{
public:
	class UMaterialInterface*                     DecalMaterial;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        AttachToComponent;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   AttachPointName;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDecalComponent*                        CallFunc_SpawnDecalAttached_ReturnValue;           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_Spawnd_Decal) == 0x000008, "Wrong alignment on BP_Weapon_C_Spawnd_Decal");
static_assert(sizeof(BP_Weapon_C_Spawnd_Decal) == 0x000058, "Wrong size on BP_Weapon_C_Spawnd_Decal");
static_assert(offsetof(BP_Weapon_C_Spawnd_Decal, DecalMaterial) == 0x000000, "Member 'BP_Weapon_C_Spawnd_Decal::DecalMaterial' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_Spawnd_Decal, AttachToComponent) == 0x000008, "Member 'BP_Weapon_C_Spawnd_Decal::AttachToComponent' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_Spawnd_Decal, AttachPointName) == 0x000010, "Member 'BP_Weapon_C_Spawnd_Decal::AttachPointName' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_Spawnd_Decal, Location) == 0x000018, "Member 'BP_Weapon_C_Spawnd_Decal::Location' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_Spawnd_Decal, Rotation) == 0x000030, "Member 'BP_Weapon_C_Spawnd_Decal::Rotation' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_Spawnd_Decal, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_Weapon_C_Spawnd_Decal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_Spawnd_Decal, CallFunc_SpawnDecalAttached_ReturnValue) == 0x000050, "Member 'BP_Weapon_C_Spawnd_Decal::CallFunc_SpawnDecalAttached_ReturnValue' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.SpawnDecal
// 0x02E0 (0x02E0 - 0x0000)
struct BP_Weapon_C_SpawnDecal final
{
public:
	struct FHitResult                             BlockingHit;                                       // 0x0000(0x00E8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          WasHit;                                            // 0x00E8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A[0x2];                                      // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult; // 0x01F8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Weapon_C_SpawnDecal) == 0x000008, "Wrong alignment on BP_Weapon_C_SpawnDecal");
static_assert(sizeof(BP_Weapon_C_SpawnDecal) == 0x0002E0, "Wrong size on BP_Weapon_C_SpawnDecal");
static_assert(offsetof(BP_Weapon_C_SpawnDecal, BlockingHit) == 0x000000, "Member 'BP_Weapon_C_SpawnDecal::BlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SpawnDecal, WasHit) == 0x0000E8, "Member 'BP_Weapon_C_SpawnDecal::WasHit' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SpawnDecal, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000F0, "Member 'BP_Weapon_C_SpawnDecal::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SpawnDecal, CallFunc_BreakHitResult_bBlockingHit) == 0x000108, "Member 'BP_Weapon_C_SpawnDecal::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SpawnDecal, CallFunc_BreakHitResult_bInitialOverlap) == 0x000109, "Member 'BP_Weapon_C_SpawnDecal::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SpawnDecal, CallFunc_BreakHitResult_Time) == 0x00010C, "Member 'BP_Weapon_C_SpawnDecal::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SpawnDecal, CallFunc_BreakHitResult_Distance) == 0x000110, "Member 'BP_Weapon_C_SpawnDecal::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SpawnDecal, CallFunc_BreakHitResult_Location) == 0x000118, "Member 'BP_Weapon_C_SpawnDecal::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SpawnDecal, CallFunc_BreakHitResult_ImpactPoint) == 0x000130, "Member 'BP_Weapon_C_SpawnDecal::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SpawnDecal, CallFunc_BreakHitResult_Normal) == 0x000148, "Member 'BP_Weapon_C_SpawnDecal::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SpawnDecal, CallFunc_BreakHitResult_ImpactNormal) == 0x000160, "Member 'BP_Weapon_C_SpawnDecal::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SpawnDecal, CallFunc_BreakHitResult_PhysMat) == 0x000178, "Member 'BP_Weapon_C_SpawnDecal::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SpawnDecal, CallFunc_BreakHitResult_HitActor) == 0x000180, "Member 'BP_Weapon_C_SpawnDecal::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SpawnDecal, CallFunc_BreakHitResult_HitComponent) == 0x000188, "Member 'BP_Weapon_C_SpawnDecal::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SpawnDecal, CallFunc_BreakHitResult_HitBoneName) == 0x000190, "Member 'BP_Weapon_C_SpawnDecal::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SpawnDecal, CallFunc_BreakHitResult_BoneName) == 0x000198, "Member 'BP_Weapon_C_SpawnDecal::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SpawnDecal, CallFunc_BreakHitResult_HitItem) == 0x0001A0, "Member 'BP_Weapon_C_SpawnDecal::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SpawnDecal, CallFunc_BreakHitResult_ElementIndex) == 0x0001A4, "Member 'BP_Weapon_C_SpawnDecal::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SpawnDecal, CallFunc_BreakHitResult_FaceIndex) == 0x0001A8, "Member 'BP_Weapon_C_SpawnDecal::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SpawnDecal, CallFunc_BreakHitResult_TraceStart) == 0x0001B0, "Member 'BP_Weapon_C_SpawnDecal::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SpawnDecal, CallFunc_BreakHitResult_TraceEnd) == 0x0001C8, "Member 'BP_Weapon_C_SpawnDecal::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SpawnDecal, CallFunc_FindLookAtRotation_ReturnValue) == 0x0001E0, "Member 'BP_Weapon_C_SpawnDecal::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SpawnDecal, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult) == 0x0001F8, "Member 'BP_Weapon_C_SpawnDecal::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.SpawnProjectile_Client
// 0x0530 (0x0530 - 0x0000)
struct BP_Weapon_C_SpawnProjectile_Client final
{
public:
	struct FVector                                Spawn_Transform_Location;                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Spawn_Transform_Rotation;                          // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                Spawn_Transform_Scale;                             // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESpawnActorCollisionHandlingMethod            CollisionHandlingOverride;                         // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FBPS_WeaponData                        Param_WeaponData;                                  // 0x0058(0x04C0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          ShowTrace;                                         // 0x0518(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_519[0x7];                                      // 0x0519(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         NiagaraSystem;                                     // 0x0520(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  Param_Instigator;                                  // 0x0528(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_SpawnProjectile_Client) == 0x000008, "Wrong alignment on BP_Weapon_C_SpawnProjectile_Client");
static_assert(sizeof(BP_Weapon_C_SpawnProjectile_Client) == 0x000530, "Wrong size on BP_Weapon_C_SpawnProjectile_Client");
static_assert(offsetof(BP_Weapon_C_SpawnProjectile_Client, Spawn_Transform_Location) == 0x000000, "Member 'BP_Weapon_C_SpawnProjectile_Client::Spawn_Transform_Location' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SpawnProjectile_Client, Spawn_Transform_Rotation) == 0x000018, "Member 'BP_Weapon_C_SpawnProjectile_Client::Spawn_Transform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SpawnProjectile_Client, Spawn_Transform_Scale) == 0x000030, "Member 'BP_Weapon_C_SpawnProjectile_Client::Spawn_Transform_Scale' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SpawnProjectile_Client, CollisionHandlingOverride) == 0x000048, "Member 'BP_Weapon_C_SpawnProjectile_Client::CollisionHandlingOverride' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SpawnProjectile_Client, Param_Owner) == 0x000050, "Member 'BP_Weapon_C_SpawnProjectile_Client::Param_Owner' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SpawnProjectile_Client, Param_WeaponData) == 0x000058, "Member 'BP_Weapon_C_SpawnProjectile_Client::Param_WeaponData' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SpawnProjectile_Client, ShowTrace) == 0x000518, "Member 'BP_Weapon_C_SpawnProjectile_Client::ShowTrace' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SpawnProjectile_Client, NiagaraSystem) == 0x000520, "Member 'BP_Weapon_C_SpawnProjectile_Client::NiagaraSystem' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_SpawnProjectile_Client, Param_Instigator) == 0x000528, "Member 'BP_Weapon_C_SpawnProjectile_Client::Param_Instigator' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.TriggerHipFireAnim
// 0x0001 (0x0001 - 0x0000)
struct BP_Weapon_C_TriggerHipFireAnim final
{
public:
	bool                                          Param_HipFireMode;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_TriggerHipFireAnim) == 0x000001, "Wrong alignment on BP_Weapon_C_TriggerHipFireAnim");
static_assert(sizeof(BP_Weapon_C_TriggerHipFireAnim) == 0x000001, "Wrong size on BP_Weapon_C_TriggerHipFireAnim");
static_assert(offsetof(BP_Weapon_C_TriggerHipFireAnim, Param_HipFireMode) == 0x000000, "Member 'BP_Weapon_C_TriggerHipFireAnim::Param_HipFireMode' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.WeaponShot
// 0x0008 (0x0008 - 0x0000)
struct BP_Weapon_C_WeaponShot final
{
public:
	double                                        StartingPosition;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_WeaponShot) == 0x000008, "Wrong alignment on BP_Weapon_C_WeaponShot");
static_assert(sizeof(BP_Weapon_C_WeaponShot) == 0x000008, "Wrong size on BP_Weapon_C_WeaponShot");
static_assert(offsetof(BP_Weapon_C_WeaponShot, StartingPosition) == 0x000000, "Member 'BP_Weapon_C_WeaponShot::StartingPosition' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.WP_Aiming
// 0x0001 (0x0001 - 0x0000)
struct BP_Weapon_C_WP_Aiming final
{
public:
	bool                                          Aim;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_WP_Aiming) == 0x000001, "Wrong alignment on BP_Weapon_C_WP_Aiming");
static_assert(sizeof(BP_Weapon_C_WP_Aiming) == 0x000001, "Wrong size on BP_Weapon_C_WP_Aiming");
static_assert(offsetof(BP_Weapon_C_WP_Aiming, Aim) == 0x000000, "Member 'BP_Weapon_C_WP_Aiming::Aim' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.WP_Anim_Weapon_Equiped
// 0x0008 (0x0008 - 0x0000)
struct BP_Weapon_C_WP_Anim_Weapon_Equiped final
{
public:
	class ABP_Weapon_C*                           NewParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_WP_Anim_Weapon_Equiped) == 0x000008, "Wrong alignment on BP_Weapon_C_WP_Anim_Weapon_Equiped");
static_assert(sizeof(BP_Weapon_C_WP_Anim_Weapon_Equiped) == 0x000008, "Wrong size on BP_Weapon_C_WP_Anim_Weapon_Equiped");
static_assert(offsetof(BP_Weapon_C_WP_Anim_Weapon_Equiped, NewParam) == 0x000000, "Member 'BP_Weapon_C_WP_Anim_Weapon_Equiped::NewParam' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.WP_EquipWeapon
// 0x0008 (0x0008 - 0x0000)
struct BP_Weapon_C_WP_EquipWeapon final
{
public:
	class FName                                   Param_WeaponName;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_WP_EquipWeapon) == 0x000004, "Wrong alignment on BP_Weapon_C_WP_EquipWeapon");
static_assert(sizeof(BP_Weapon_C_WP_EquipWeapon) == 0x000008, "Wrong size on BP_Weapon_C_WP_EquipWeapon");
static_assert(offsetof(BP_Weapon_C_WP_EquipWeapon, Param_WeaponName) == 0x000000, "Member 'BP_Weapon_C_WP_EquipWeapon::Param_WeaponName' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.WP_GetAimCamera
// 0x0008 (0x0008 - 0x0000)
struct BP_Weapon_C_WP_GetAimCamera final
{
public:
	class UCameraComponent*                       Camera;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_WP_GetAimCamera) == 0x000008, "Wrong alignment on BP_Weapon_C_WP_GetAimCamera");
static_assert(sizeof(BP_Weapon_C_WP_GetAimCamera) == 0x000008, "Wrong size on BP_Weapon_C_WP_GetAimCamera");
static_assert(offsetof(BP_Weapon_C_WP_GetAimCamera, Camera) == 0x000000, "Member 'BP_Weapon_C_WP_GetAimCamera::Camera' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.WP_GetLefHandEffectorTransform
// 0x0070 (0x0070 - 0x0000)
struct BP_Weapon_C_WP_GetLefHandEffectorTransform final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasEffector;                                       // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_WP_GetLefHandEffectorTransform) == 0x000010, "Wrong alignment on BP_Weapon_C_WP_GetLefHandEffectorTransform");
static_assert(sizeof(BP_Weapon_C_WP_GetLefHandEffectorTransform) == 0x000070, "Wrong size on BP_Weapon_C_WP_GetLefHandEffectorTransform");
static_assert(offsetof(BP_Weapon_C_WP_GetLefHandEffectorTransform, Transform) == 0x000000, "Member 'BP_Weapon_C_WP_GetLefHandEffectorTransform::Transform' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_WP_GetLefHandEffectorTransform, HasEffector) == 0x000060, "Member 'BP_Weapon_C_WP_GetLefHandEffectorTransform::HasEffector' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.WP_GetRotationInput
// 0x0010 (0x0010 - 0x0000)
struct BP_Weapon_C_WP_GetRotationInput final
{
public:
	struct FVector2D                              NewParam;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_WP_GetRotationInput) == 0x000008, "Wrong alignment on BP_Weapon_C_WP_GetRotationInput");
static_assert(sizeof(BP_Weapon_C_WP_GetRotationInput) == 0x000010, "Wrong size on BP_Weapon_C_WP_GetRotationInput");
static_assert(offsetof(BP_Weapon_C_WP_GetRotationInput, NewParam) == 0x000000, "Member 'BP_Weapon_C_WP_GetRotationInput::NewParam' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.WP_GetShootDirection
// 0x0018 (0x0018 - 0x0000)
struct BP_Weapon_C_WP_GetShootDirection final
{
public:
	struct FVector                                ShootDirection;                                    // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_WP_GetShootDirection) == 0x000008, "Wrong alignment on BP_Weapon_C_WP_GetShootDirection");
static_assert(sizeof(BP_Weapon_C_WP_GetShootDirection) == 0x000018, "Wrong size on BP_Weapon_C_WP_GetShootDirection");
static_assert(offsetof(BP_Weapon_C_WP_GetShootDirection, ShootDirection) == 0x000000, "Member 'BP_Weapon_C_WP_GetShootDirection::ShootDirection' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.WP_GetSkeletalMesh
// 0x0010 (0x0010 - 0x0000)
struct BP_Weapon_C_WP_GetSkeletalMesh final
{
public:
	class USkeletalMeshComponent*                 SkinnedMesh;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_WP_GetSkeletalMesh) == 0x000008, "Wrong alignment on BP_Weapon_C_WP_GetSkeletalMesh");
static_assert(sizeof(BP_Weapon_C_WP_GetSkeletalMesh) == 0x000010, "Wrong size on BP_Weapon_C_WP_GetSkeletalMesh");
static_assert(offsetof(BP_Weapon_C_WP_GetSkeletalMesh, SkinnedMesh) == 0x000000, "Member 'BP_Weapon_C_WP_GetSkeletalMesh::SkinnedMesh' has a wrong offset!");
static_assert(offsetof(BP_Weapon_C_WP_GetSkeletalMesh, Success) == 0x000008, "Member 'BP_Weapon_C_WP_GetSkeletalMesh::Success' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.WP_GetWeaponType
// 0x0001 (0x0001 - 0x0000)
struct BP_Weapon_C_WP_GetWeaponType final
{
public:
	EBPE_Weapon_Type                              Param_WeaponType;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_WP_GetWeaponType) == 0x000001, "Wrong alignment on BP_Weapon_C_WP_GetWeaponType");
static_assert(sizeof(BP_Weapon_C_WP_GetWeaponType) == 0x000001, "Wrong size on BP_Weapon_C_WP_GetWeaponType");
static_assert(offsetof(BP_Weapon_C_WP_GetWeaponType, Param_WeaponType) == 0x000000, "Member 'BP_Weapon_C_WP_GetWeaponType::Param_WeaponType' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.WP_HasWeaponOrBroken
// 0x0001 (0x0001 - 0x0000)
struct BP_Weapon_C_WP_HasWeaponOrBroken final
{
public:
	bool                                          Param_Value;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_WP_HasWeaponOrBroken) == 0x000001, "Wrong alignment on BP_Weapon_C_WP_HasWeaponOrBroken");
static_assert(sizeof(BP_Weapon_C_WP_HasWeaponOrBroken) == 0x000001, "Wrong size on BP_Weapon_C_WP_HasWeaponOrBroken");
static_assert(offsetof(BP_Weapon_C_WP_HasWeaponOrBroken, Param_Value) == 0x000000, "Member 'BP_Weapon_C_WP_HasWeaponOrBroken::Param_Value' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.WP_MeleeActivation
// 0x0001 (0x0001 - 0x0000)
struct BP_Weapon_C_WP_MeleeActivation final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_WP_MeleeActivation) == 0x000001, "Wrong alignment on BP_Weapon_C_WP_MeleeActivation");
static_assert(sizeof(BP_Weapon_C_WP_MeleeActivation) == 0x000001, "Wrong size on BP_Weapon_C_WP_MeleeActivation");
static_assert(offsetof(BP_Weapon_C_WP_MeleeActivation, State) == 0x000000, "Member 'BP_Weapon_C_WP_MeleeActivation::State' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.WP_PlayGunTail
// 0x0008 (0x0008 - 0x0000)
struct BP_Weapon_C_WP_PlayGunTail final
{
public:
	class UFMODEvent*                             TailSound;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_WP_PlayGunTail) == 0x000008, "Wrong alignment on BP_Weapon_C_WP_PlayGunTail");
static_assert(sizeof(BP_Weapon_C_WP_PlayGunTail) == 0x000008, "Wrong size on BP_Weapon_C_WP_PlayGunTail");
static_assert(offsetof(BP_Weapon_C_WP_PlayGunTail, TailSound) == 0x000000, "Member 'BP_Weapon_C_WP_PlayGunTail::TailSound' has a wrong offset!");

// Function BP_Weapon.BP_Weapon_C.WP_SetRecoilPower
// 0x0008 (0x0008 - 0x0000)
struct BP_Weapon_C_WP_SetRecoilPower final
{
public:
	double                                        Param_RecoilPower;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_C_WP_SetRecoilPower) == 0x000008, "Wrong alignment on BP_Weapon_C_WP_SetRecoilPower");
static_assert(sizeof(BP_Weapon_C_WP_SetRecoilPower) == 0x000008, "Wrong size on BP_Weapon_C_WP_SetRecoilPower");
static_assert(offsetof(BP_Weapon_C_WP_SetRecoilPower, Param_RecoilPower) == 0x000000, "Member 'BP_Weapon_C_WP_SetRecoilPower::Param_RecoilPower' has a wrong offset!");

}

