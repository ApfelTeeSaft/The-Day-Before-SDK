#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Female_Head1

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ABP_Female_Head1.ABP_Female_Head1_C.AnimGraph
// 0x0020 (0x0020 - 0x0000)
struct ABP_Female_Head1_C_AnimGraph final
{
public:
	struct FPoseLink                              InPose;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Param_AnimGraph;                                   // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Female_Head1_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_Female_Head1_C_AnimGraph");
static_assert(sizeof(ABP_Female_Head1_C_AnimGraph) == 0x000020, "Wrong size on ABP_Female_Head1_C_AnimGraph");
static_assert(offsetof(ABP_Female_Head1_C_AnimGraph, InPose) == 0x000000, "Member 'ABP_Female_Head1_C_AnimGraph::InPose' has a wrong offset!");
static_assert(offsetof(ABP_Female_Head1_C_AnimGraph, Param_AnimGraph) == 0x000010, "Member 'ABP_Female_Head1_C_AnimGraph::Param_AnimGraph' has a wrong offset!");

// Function ABP_Female_Head1.ABP_Female_Head1_C.ExecuteUbergraph_ABP_Female_Head1
// 0x0038 (0x0038 - 0x0000)
struct ABP_Female_Head1_C_ExecuteUbergraph_ABP_Female_Head1 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_InLobby;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Female_Head1_C_ExecuteUbergraph_ABP_Female_Head1) == 0x000008, "Wrong alignment on ABP_Female_Head1_C_ExecuteUbergraph_ABP_Female_Head1");
static_assert(sizeof(ABP_Female_Head1_C_ExecuteUbergraph_ABP_Female_Head1) == 0x000038, "Wrong size on ABP_Female_Head1_C_ExecuteUbergraph_ABP_Female_Head1");
static_assert(offsetof(ABP_Female_Head1_C_ExecuteUbergraph_ABP_Female_Head1, EntryPoint) == 0x000000, "Member 'ABP_Female_Head1_C_ExecuteUbergraph_ABP_Female_Head1::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_Female_Head1_C_ExecuteUbergraph_ABP_Female_Head1, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000008, "Member 'ABP_Female_Head1_C_ExecuteUbergraph_ABP_Female_Head1::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Female_Head1_C_ExecuteUbergraph_ABP_Female_Head1, K2Node_DynamicCast_AsCharacter) == 0x000010, "Member 'ABP_Female_Head1_C_ExecuteUbergraph_ABP_Female_Head1::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(ABP_Female_Head1_C_ExecuteUbergraph_ABP_Female_Head1, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ABP_Female_Head1_C_ExecuteUbergraph_ABP_Female_Head1::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_Female_Head1_C_ExecuteUbergraph_ABP_Female_Head1, CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue) == 0x000020, "Member 'ABP_Female_Head1_C_ExecuteUbergraph_ABP_Female_Head1::CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Female_Head1_C_ExecuteUbergraph_ABP_Female_Head1, CallFunc_RandomFloatInRange_ReturnValue) == 0x000028, "Member 'ABP_Female_Head1_C_ExecuteUbergraph_ABP_Female_Head1::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Female_Head1_C_ExecuteUbergraph_ABP_Female_Head1, K2Node_Event_InLobby) == 0x000030, "Member 'ABP_Female_Head1_C_ExecuteUbergraph_ABP_Female_Head1::K2Node_Event_InLobby' has a wrong offset!");
static_assert(offsetof(ABP_Female_Head1_C_ExecuteUbergraph_ABP_Female_Head1, CallFunc_Delay_Duration_ImplicitCast) == 0x000034, "Member 'ABP_Female_Head1_C_ExecuteUbergraph_ABP_Female_Head1::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");

// Function ABP_Female_Head1.ABP_Female_Head1_C.GetInLobby
// 0x0001 (0x0001 - 0x0000)
struct ABP_Female_Head1_C_GetInLobby final
{
public:
	bool                                          InLobby;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Female_Head1_C_GetInLobby) == 0x000001, "Wrong alignment on ABP_Female_Head1_C_GetInLobby");
static_assert(sizeof(ABP_Female_Head1_C_GetInLobby) == 0x000001, "Wrong size on ABP_Female_Head1_C_GetInLobby");
static_assert(offsetof(ABP_Female_Head1_C_GetInLobby, InLobby) == 0x000000, "Member 'ABP_Female_Head1_C_GetInLobby::InLobby' has a wrong offset!");

// Function ABP_Female_Head1.ABP_Female_Head1_C.SetInLobby
// 0x0001 (0x0001 - 0x0000)
struct ABP_Female_Head1_C_SetInLobby final
{
public:
	bool                                          InLobby;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Female_Head1_C_SetInLobby) == 0x000001, "Wrong alignment on ABP_Female_Head1_C_SetInLobby");
static_assert(sizeof(ABP_Female_Head1_C_SetInLobby) == 0x000001, "Wrong size on ABP_Female_Head1_C_SetInLobby");
static_assert(offsetof(ABP_Female_Head1_C_SetInLobby, InLobby) == 0x000000, "Member 'ABP_Female_Head1_C_SetInLobby::InLobby' has a wrong offset!");

}

