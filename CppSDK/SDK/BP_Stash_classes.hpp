#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Stash

#include "Basic.hpp"

#include "E_InteractType_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "E_ActorType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Stash.BP_Stash_C
// 0x0230 (0x04C0 - 0x0290)
class ABP_Stash_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetComponent*                       TutorialPoint3D;                                   // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Desk_props_pencil;                                 // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       Point3D;                                           // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       Widget;                                            // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAnimationURO*                          AnimationURO;                                      // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMouseCameraController_C*               MouseCameraController;                             // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   PlayerPlace;                                       // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        PointToInteract;                                   // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   UMSNameplate;                                      // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Head;                                              // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Capsule;                                           // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          TipBox;                                            // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UADSDialoguePartecipantComponent*       ADSDialoguePartecipant;                            // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       CameraDialogue;                                    // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Sphere;                                            // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Body;                                              // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInventoryCollectorStash_C*             InventoryCollectorStash;                           // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USGInventoryWorker_C*                   SGInventoryWorker;                                 // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInGameContainerWidget_C*               ContainerWidget;                                   // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Dialogue_C*                          DialogueW;                                         // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOpened;                                          // 0x0348(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_349[0x7];                                      // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  Player;                                            // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             EventOnCompleted;                                  // 0x0358(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnInteracted;                                      // 0x0368(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class ULegacyCameraShake*                     ShakeInstance;                                     // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UW_StashTutorial_C*                     TutorialWidget;                                    // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_388[0x8];                                      // 0x0388(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CameraLoc;                                         // 0x0390(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FOV;                                               // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ShopFOV;                                           // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      CachedInteractingPawn;                             // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ASurvPC_C*                              CachedController;                                  // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_GameHUD_C*                          CachedHUD;                                         // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInteracted;                                      // 0x0418(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_419[0x7];                                      // 0x0419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMPInGameInventory_C*                   CachedInventoryWidget;                             // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_TabsWindow_C*                        CachedTabsWidget;                                  // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Has_Reset;                                         // 0x0430(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_431[0x7];                                      // 0x0431(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           Timer_by_reset;                                    // 0x0438(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UADSDialoguePartecipantComponent*       ADSComponent;                                      // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 DialogueComponentClass;                            // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          PrevLineTraceResult;                               // 0x0450(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InteractingAnimation;                              // 0x0451(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_452[0x6];                                      // 0x0452(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ShopVendorInfo_C*                  ShopVendorInfoRef;                                 // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        ShowPointTarget_Distance;                          // 0x0460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAfterRaid;                                        // 0x0468(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTrailer;                                         // 0x0469(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46A[0x6];                                      // 0x046A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnCloseStash;                                      // 0x0470(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<class FString>                         ActiveTutorialStage;                               // 0x0480(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FTimerHandle                           OpenStashTimer;                                    // 0x0490(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    WhenPlayerWalks_FMODAudio_Component;               // 0x0498(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnDialogueEnd;                                     // 0x04A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          ClosingStashInTutor;                               // 0x04B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_DoorTeleport_TipBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__BP_Stash_TipBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void CloseStash(const struct FGameplayTag& GameplayTag, const class FString& StageName);
	void DestroyADSComponent();
	void DestroyInteractable();
	void EventOnCompleted__DelegateSignature();
	void ExecuteUbergraph_BP_Stash(int32 EntryPoint);
	void FindEmptyInventorySlot(class UJSI_Slot_C** Slot);
	void Get_Real_Stash_Money();
	void GetActorType(E_ActorType* ActorType);
	void GetAfterRaid(bool* Param_bAfterRaid);
	void HideHUD(bool Hide);
	void InitStashItems();
	void InventoryClosed();
	void IsContainerEmpty(class UJSIContainer_C* Container, bool* IsEmpty);
	void IsLocked_(bool* Result);
	bool IsSomethingOnA_Way();
	void LoadStash();
	void MoveInCamera();
	void MoveOutCamera();
	void NPC_Voice();
	void OnBeginInteract(class APawn* Param_Player);
	void OnBlendOut_403AC92945639D9E740748A0868C4A42(class FName NotifyName);
	void OnCloseStash__DelegateSignature();
	void OnCompleted_403AC92945639D9E740748A0868C4A42(class FName NotifyName);
	void OnDialogueEnd__DelegateSignature();
	void OnFadeAnimationStarted_Callback();
	void OnFocused(class APawn* Param_Player, class AActor* HighlightActor, class UActorComponent* HighlightActorComponent, E_InteractType* InteractType, double* LateTime);
	void OnInteract(class APawn* Param_Player);
	void OnInteract2(class APawn* Param_Player);
	void OnInteract3(class APawn* Param_Player);
	void OnInteracted__DelegateSignature();
	void OnInteractVehicle(class APawn* Param_Player, int32 SitIndex, bool SkipAnimation);
	void OnInterrupted_403AC92945639D9E740748A0868C4A42(class FName NotifyName);
	void OnLocalInteract(class APawn* Param_Player);
	void OnLostFocus(class APawn* Param_Player);
	void OnNotifyBegin_403AC92945639D9E740748A0868C4A42(class FName NotifyName);
	void OnNotifyEnd_403AC92945639D9E740748A0868C4A42(class FName NotifyName);
	void OnSeen(class APawn* Param_Player);
	void OnSquadCheckComplete();
	void OnStopInteract(class APawn* Param_Player);
	void OnTutorStageUpdated_Event(const class FString& TutorialStage);
	void OpenStash();
	void PlayHeadAnimationMontage(class UAnimMontage* MontageToPlay);
	void ReceiveBeginPlay();
	void Reset();
	void Reset_Timer();
	void RespawnADSComponent();
	void Run_Lockpicking();
	void SaveStash();
	void Set3DWidgetVisibility(bool Visible);
	void SetAfterRaid(bool Param_bAfterRaid);
	void SetDialogueCamera(bool Condition);
	void SetStashCamera(bool Condition);
	void SetTutorial3DWidgetVisibility(bool Visible);
	void ShowStash();
	void ShowTutorialSlides();
	void ShowTutorialStorage();
	void StartDialogue();
	void StashUpdateBind();
	void StopHeadAnimationMontage();
	void TrailerOn();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Stash_C">();
	}
	static class ABP_Stash_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Stash_C>();
	}
};
static_assert(alignof(ABP_Stash_C) == 0x000010, "Wrong alignment on ABP_Stash_C");
static_assert(sizeof(ABP_Stash_C) == 0x0004C0, "Wrong size on ABP_Stash_C");
static_assert(offsetof(ABP_Stash_C, UberGraphFrame) == 0x000290, "Member 'ABP_Stash_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, TutorialPoint3D) == 0x000298, "Member 'ABP_Stash_C::TutorialPoint3D' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, Desk_props_pencil) == 0x0002A0, "Member 'ABP_Stash_C::Desk_props_pencil' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, Point3D) == 0x0002A8, "Member 'ABP_Stash_C::Point3D' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, Widget) == 0x0002B0, "Member 'ABP_Stash_C::Widget' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, AnimationURO) == 0x0002B8, "Member 'ABP_Stash_C::AnimationURO' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, MouseCameraController) == 0x0002C0, "Member 'ABP_Stash_C::MouseCameraController' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, Arrow) == 0x0002C8, "Member 'ABP_Stash_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, PlayerPlace) == 0x0002D0, "Member 'ABP_Stash_C::PlayerPlace' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, PointToInteract) == 0x0002D8, "Member 'ABP_Stash_C::PointToInteract' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, UMSNameplate) == 0x0002E0, "Member 'ABP_Stash_C::UMSNameplate' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, Head) == 0x0002E8, "Member 'ABP_Stash_C::Head' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, Capsule) == 0x0002F0, "Member 'ABP_Stash_C::Capsule' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, Scene) == 0x0002F8, "Member 'ABP_Stash_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, TipBox) == 0x000300, "Member 'ABP_Stash_C::TipBox' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, ADSDialoguePartecipant) == 0x000308, "Member 'ABP_Stash_C::ADSDialoguePartecipant' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, CameraDialogue) == 0x000310, "Member 'ABP_Stash_C::CameraDialogue' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, Sphere) == 0x000318, "Member 'ABP_Stash_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, Body) == 0x000320, "Member 'ABP_Stash_C::Body' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, InventoryCollectorStash) == 0x000328, "Member 'ABP_Stash_C::InventoryCollectorStash' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, SGInventoryWorker) == 0x000330, "Member 'ABP_Stash_C::SGInventoryWorker' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, ContainerWidget) == 0x000338, "Member 'ABP_Stash_C::ContainerWidget' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, DialogueW) == 0x000340, "Member 'ABP_Stash_C::DialogueW' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, IsOpened) == 0x000348, "Member 'ABP_Stash_C::IsOpened' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, Player) == 0x000350, "Member 'ABP_Stash_C::Player' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, EventOnCompleted) == 0x000358, "Member 'ABP_Stash_C::EventOnCompleted' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, OnInteracted) == 0x000368, "Member 'ABP_Stash_C::OnInteracted' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, ShakeInstance) == 0x000378, "Member 'ABP_Stash_C::ShakeInstance' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, TutorialWidget) == 0x000380, "Member 'ABP_Stash_C::TutorialWidget' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, CameraLoc) == 0x000390, "Member 'ABP_Stash_C::CameraLoc' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, FOV) == 0x0003F0, "Member 'ABP_Stash_C::FOV' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, ShopFOV) == 0x0003F8, "Member 'ABP_Stash_C::ShopFOV' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, CachedInteractingPawn) == 0x000400, "Member 'ABP_Stash_C::CachedInteractingPawn' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, CachedController) == 0x000408, "Member 'ABP_Stash_C::CachedController' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, CachedHUD) == 0x000410, "Member 'ABP_Stash_C::CachedHUD' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, IsInteracted) == 0x000418, "Member 'ABP_Stash_C::IsInteracted' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, CachedInventoryWidget) == 0x000420, "Member 'ABP_Stash_C::CachedInventoryWidget' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, CachedTabsWidget) == 0x000428, "Member 'ABP_Stash_C::CachedTabsWidget' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, Has_Reset) == 0x000430, "Member 'ABP_Stash_C::Has_Reset' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, Timer_by_reset) == 0x000438, "Member 'ABP_Stash_C::Timer_by_reset' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, ADSComponent) == 0x000440, "Member 'ABP_Stash_C::ADSComponent' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, DialogueComponentClass) == 0x000448, "Member 'ABP_Stash_C::DialogueComponentClass' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, PrevLineTraceResult) == 0x000450, "Member 'ABP_Stash_C::PrevLineTraceResult' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, InteractingAnimation) == 0x000451, "Member 'ABP_Stash_C::InteractingAnimation' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, ShopVendorInfoRef) == 0x000458, "Member 'ABP_Stash_C::ShopVendorInfoRef' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, ShowPointTarget_Distance) == 0x000460, "Member 'ABP_Stash_C::ShowPointTarget_Distance' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, bAfterRaid) == 0x000468, "Member 'ABP_Stash_C::bAfterRaid' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, IsTrailer) == 0x000469, "Member 'ABP_Stash_C::IsTrailer' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, OnCloseStash) == 0x000470, "Member 'ABP_Stash_C::OnCloseStash' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, ActiveTutorialStage) == 0x000480, "Member 'ABP_Stash_C::ActiveTutorialStage' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, OpenStashTimer) == 0x000490, "Member 'ABP_Stash_C::OpenStashTimer' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, WhenPlayerWalks_FMODAudio_Component) == 0x000498, "Member 'ABP_Stash_C::WhenPlayerWalks_FMODAudio_Component' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, OnDialogueEnd) == 0x0004A0, "Member 'ABP_Stash_C::OnDialogueEnd' has a wrong offset!");
static_assert(offsetof(ABP_Stash_C, ClosingStashInTutor) == 0x0004B0, "Member 'ABP_Stash_C::ClosingStashInTutor' has a wrong offset!");

}

