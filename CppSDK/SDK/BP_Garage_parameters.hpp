#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Garage

#include "Basic.hpp"

#include "S_ShopItemList_structs.hpp"


namespace SDK::Params
{

// Function BP_Garage.BP_Garage_C.DestroyCars
// 0x0020 (0x0020 - 0x0000)
struct BP_Garage_C_DestroyCars final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GarageSpace_C*                      CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Garage_C_DestroyCars) == 0x000008, "Wrong alignment on BP_Garage_C_DestroyCars");
static_assert(sizeof(BP_Garage_C_DestroyCars) == 0x000020, "Wrong size on BP_Garage_C_DestroyCars");
static_assert(offsetof(BP_Garage_C_DestroyCars, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_Garage_C_DestroyCars::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Garage_C_DestroyCars, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_Garage_C_DestroyCars::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Garage_C_DestroyCars, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_Garage_C_DestroyCars::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Garage_C_DestroyCars, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_Garage_C_DestroyCars::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Garage_C_DestroyCars, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_Garage_C_DestroyCars::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Garage_C_DestroyCars, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BP_Garage_C_DestroyCars::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Garage_C_DestroyCars, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_Garage_C_DestroyCars::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Garage.BP_Garage_C.ExecuteUbergraph_BP_Garage
// 0x0038 (0x0038 - 0x0000)
struct BP_Garage_C_ExecuteUbergraph_BP_Garage final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         K2Node_CustomEvent_CarNames;                       // 0x0008(0x0010)(ReferenceParm)
	class FString                                 K2Node_CustomEvent_Phase;                          // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ASurvivalPlayer_V2_C*                   K2Node_CustomEvent_Owner;                          // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_V2_C*                   K2Node_CustomEvent_Char;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Garage_C_ExecuteUbergraph_BP_Garage) == 0x000008, "Wrong alignment on BP_Garage_C_ExecuteUbergraph_BP_Garage");
static_assert(sizeof(BP_Garage_C_ExecuteUbergraph_BP_Garage) == 0x000038, "Wrong size on BP_Garage_C_ExecuteUbergraph_BP_Garage");
static_assert(offsetof(BP_Garage_C_ExecuteUbergraph_BP_Garage, EntryPoint) == 0x000000, "Member 'BP_Garage_C_ExecuteUbergraph_BP_Garage::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Garage_C_ExecuteUbergraph_BP_Garage, K2Node_CustomEvent_CarNames) == 0x000008, "Member 'BP_Garage_C_ExecuteUbergraph_BP_Garage::K2Node_CustomEvent_CarNames' has a wrong offset!");
static_assert(offsetof(BP_Garage_C_ExecuteUbergraph_BP_Garage, K2Node_CustomEvent_Phase) == 0x000018, "Member 'BP_Garage_C_ExecuteUbergraph_BP_Garage::K2Node_CustomEvent_Phase' has a wrong offset!");
static_assert(offsetof(BP_Garage_C_ExecuteUbergraph_BP_Garage, K2Node_CustomEvent_Owner) == 0x000028, "Member 'BP_Garage_C_ExecuteUbergraph_BP_Garage::K2Node_CustomEvent_Owner' has a wrong offset!");
static_assert(offsetof(BP_Garage_C_ExecuteUbergraph_BP_Garage, K2Node_CustomEvent_Char) == 0x000030, "Member 'BP_Garage_C_ExecuteUbergraph_BP_Garage::K2Node_CustomEvent_Char' has a wrong offset!");

// Function BP_Garage.BP_Garage_C.InitCars
// 0x00A0 (0x00A0 - 0x0000)
struct BP_Garage_C_InitCars final
{
public:
	TArray<class FString>                         CarNames;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 Phase;                                             // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class ASurvivalPlayer_V2_C*                   Param_Owner;                                       // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_V2_C*                   Char;                                              // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ShopItemList                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0058(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GarageSpace_C*                      CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Garage_C_InitCars) == 0x000008, "Wrong alignment on BP_Garage_C_InitCars");
static_assert(sizeof(BP_Garage_C_InitCars) == 0x0000A0, "Wrong size on BP_Garage_C_InitCars");
static_assert(offsetof(BP_Garage_C_InitCars, CarNames) == 0x000000, "Member 'BP_Garage_C_InitCars::CarNames' has a wrong offset!");
static_assert(offsetof(BP_Garage_C_InitCars, Phase) == 0x000010, "Member 'BP_Garage_C_InitCars::Phase' has a wrong offset!");
static_assert(offsetof(BP_Garage_C_InitCars, Param_Owner) == 0x000020, "Member 'BP_Garage_C_InitCars::Param_Owner' has a wrong offset!");
static_assert(offsetof(BP_Garage_C_InitCars, Char) == 0x000028, "Member 'BP_Garage_C_InitCars::Char' has a wrong offset!");
static_assert(offsetof(BP_Garage_C_InitCars, CallFunc_IsLocallyControlled_ReturnValue) == 0x000030, "Member 'BP_Garage_C_InitCars::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Garage_C_InitCars, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BP_Garage_C_InitCars::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Garage_C_InitCars, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000038, "Member 'BP_Garage_C_InitCars::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Garage_C_InitCars, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'BP_Garage_C_InitCars::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Garage_C_InitCars, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_Garage_C_InitCars::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Garage_C_InitCars, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_Garage_C_InitCars::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Garage_C_InitCars, CallFunc_IsServer_ReturnValue) == 0x000048, "Member 'BP_Garage_C_InitCars::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Garage_C_InitCars, CallFunc_Conv_StringToName_ReturnValue) == 0x00004C, "Member 'BP_Garage_C_InitCars::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Garage_C_InitCars, CallFunc_GetDataTableRowFromName_OutRow) == 0x000058, "Member 'BP_Garage_C_InitCars::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_Garage_C_InitCars, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000088, "Member 'BP_Garage_C_InitCars::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Garage_C_InitCars, CallFunc_Array_Get_Item) == 0x000090, "Member 'BP_Garage_C_InitCars::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Garage_C_InitCars, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'BP_Garage_C_InitCars::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Garage_C_InitCars, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'BP_Garage_C_InitCars::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Garage.BP_Garage_C.InitGarage
// 0x0030 (0x0030 - 0x0000)
struct BP_Garage_C_InitGarage final
{
public:
	TArray<class FString>                         CarNames;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 Phase;                                             // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class ASurvivalPlayer_V2_C*                   Param_Owner;                                       // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_V2_C*                   Char;                                              // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Garage_C_InitGarage) == 0x000008, "Wrong alignment on BP_Garage_C_InitGarage");
static_assert(sizeof(BP_Garage_C_InitGarage) == 0x000030, "Wrong size on BP_Garage_C_InitGarage");
static_assert(offsetof(BP_Garage_C_InitGarage, CarNames) == 0x000000, "Member 'BP_Garage_C_InitGarage::CarNames' has a wrong offset!");
static_assert(offsetof(BP_Garage_C_InitGarage, Phase) == 0x000010, "Member 'BP_Garage_C_InitGarage::Phase' has a wrong offset!");
static_assert(offsetof(BP_Garage_C_InitGarage, Param_Owner) == 0x000020, "Member 'BP_Garage_C_InitGarage::Param_Owner' has a wrong offset!");
static_assert(offsetof(BP_Garage_C_InitGarage, Char) == 0x000028, "Member 'BP_Garage_C_InitGarage::Char' has a wrong offset!");

}

