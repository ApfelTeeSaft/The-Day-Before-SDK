#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WoundComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass WoundComponent.WoundComponent_C
// 0x0070 (0x0110 - 0x00A0)
class UWoundComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<struct FTransform>                     RefPoseLocalBoneTransforms;                        // 0x00A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UTextureRenderTarget2D*                 BloodMask;                                         // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         BloodMaskSize;                                     // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 BloodMask_NotDilated;                              // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USceneCaptureComponent2D*               SceneCaptureComponent2D;                           // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DilateMaterial;                                    // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               BloodRenderMaterial;                               // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             OriginalMaterials;                                 // 0x00E8(0x0010)(Edit, BlueprintVisible)
	bool                                          DilateBloodMask;                                   // 0x00F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 MeshReference;                                     // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          BloodMaskInitialized;                              // 0x0108(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WoundComponent(int32 EntryPoint);
	void GetRefPoseBoneTransform(class USkeletalMeshComponent* SkeletalMesh, class FName BoneName, struct FTransform* MeshLocalSpaceTransform);
	void Init(class USkeletalMeshComponent* SkeletalMesh, class USceneCaptureComponent2D* SceneCapture, bool SceneCaptureExists, TArray<class UMaterialInstanceDynamic*>* Param_OriginalMaterials);
	void Initialize(class USkeletalMeshComponent* SkeletalMesh, class USceneCaptureComponent2D* SceneCapture);
	void TakeHit(class FName BoneName, const struct FVector& WorldSpaceLocation, double WoundRadius);
	void TransformLocationByRefBoneTransform(class FName BoneName, const struct FVector& WorldLocation, struct FVector* MeshLocalSpaceLocation);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WoundComponent_C">();
	}
	static class UWoundComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWoundComponent_C>();
	}
};
static_assert(alignof(UWoundComponent_C) == 0x000008, "Wrong alignment on UWoundComponent_C");
static_assert(sizeof(UWoundComponent_C) == 0x000110, "Wrong size on UWoundComponent_C");
static_assert(offsetof(UWoundComponent_C, UberGraphFrame) == 0x0000A0, "Member 'UWoundComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWoundComponent_C, RefPoseLocalBoneTransforms) == 0x0000A8, "Member 'UWoundComponent_C::RefPoseLocalBoneTransforms' has a wrong offset!");
static_assert(offsetof(UWoundComponent_C, BloodMask) == 0x0000B8, "Member 'UWoundComponent_C::BloodMask' has a wrong offset!");
static_assert(offsetof(UWoundComponent_C, BloodMaskSize) == 0x0000C0, "Member 'UWoundComponent_C::BloodMaskSize' has a wrong offset!");
static_assert(offsetof(UWoundComponent_C, BloodMask_NotDilated) == 0x0000C8, "Member 'UWoundComponent_C::BloodMask_NotDilated' has a wrong offset!");
static_assert(offsetof(UWoundComponent_C, SceneCaptureComponent2D) == 0x0000D0, "Member 'UWoundComponent_C::SceneCaptureComponent2D' has a wrong offset!");
static_assert(offsetof(UWoundComponent_C, DilateMaterial) == 0x0000D8, "Member 'UWoundComponent_C::DilateMaterial' has a wrong offset!");
static_assert(offsetof(UWoundComponent_C, BloodRenderMaterial) == 0x0000E0, "Member 'UWoundComponent_C::BloodRenderMaterial' has a wrong offset!");
static_assert(offsetof(UWoundComponent_C, OriginalMaterials) == 0x0000E8, "Member 'UWoundComponent_C::OriginalMaterials' has a wrong offset!");
static_assert(offsetof(UWoundComponent_C, DilateBloodMask) == 0x0000F8, "Member 'UWoundComponent_C::DilateBloodMask' has a wrong offset!");
static_assert(offsetof(UWoundComponent_C, MeshReference) == 0x000100, "Member 'UWoundComponent_C::MeshReference' has a wrong offset!");
static_assert(offsetof(UWoundComponent_C, BloodMaskInitialized) == 0x000108, "Member 'UWoundComponent_C::BloodMaskInitialized' has a wrong offset!");

}

