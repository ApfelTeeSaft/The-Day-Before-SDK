#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CampBonfire

#include "Basic.hpp"

#include "E_ActorType_structs.hpp"
#include "Engine_structs.hpp"
#include "E_InteractType_structs.hpp"
#include "FItemInfo_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_CampCooking_structs.hpp"


namespace SDK::Params
{

// Function BP_CampBonfire.BP_CampBonfire_C.BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct BP_CampBonfire_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_CampBonfire_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_CampBonfire_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_CampBonfire_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on BP_CampBonfire_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_CampBonfire_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_CampBonfire_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_CampBonfire_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_CampBonfire_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_CampBonfire_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_CampBonfire_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_CampBonfire_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_CampBonfire.BP_CampBonfire_C.BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_CampBonfire_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CampBonfire_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_CampBonfire_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_CampBonfire_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_CampBonfire_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_CampBonfire_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_CampBonfire_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_CampBonfire_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_CampBonfire_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_CampBonfire_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_CampBonfire.BP_CampBonfire_C.ClearHouseBox
// 0x0020 (0x0020 - 0x0000)
struct BP_CampBonfire_C_ClearHouseBox final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CampBonfire_C_ClearHouseBox) == 0x000008, "Wrong alignment on BP_CampBonfire_C_ClearHouseBox");
static_assert(sizeof(BP_CampBonfire_C_ClearHouseBox) == 0x000020, "Wrong size on BP_CampBonfire_C_ClearHouseBox");
static_assert(offsetof(BP_CampBonfire_C_ClearHouseBox, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_CampBonfire_C_ClearHouseBox::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ClearHouseBox, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_CampBonfire_C_ClearHouseBox::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ClearHouseBox, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_CampBonfire_C_ClearHouseBox::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ClearHouseBox, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_CampBonfire_C_ClearHouseBox::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ClearHouseBox, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_CampBonfire_C_ClearHouseBox::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ClearHouseBox, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_CampBonfire_C_ClearHouseBox::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_CampBonfire.BP_CampBonfire_C.CookFoodV2
// 0x00A0 (0x00A0 - 0x0000)
struct BP_CampBonfire_C_CookFoodV2 final
{
public:
	struct FS_CampCooking                         Food;                                              // 0x0000(0x00A0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_CampBonfire_C_CookFoodV2) == 0x000008, "Wrong alignment on BP_CampBonfire_C_CookFoodV2");
static_assert(sizeof(BP_CampBonfire_C_CookFoodV2) == 0x0000A0, "Wrong size on BP_CampBonfire_C_CookFoodV2");
static_assert(offsetof(BP_CampBonfire_C_CookFoodV2, Food) == 0x000000, "Member 'BP_CampBonfire_C_CookFoodV2::Food' has a wrong offset!");

// Function BP_CampBonfire.BP_CampBonfire_C.CookFoodV3
// 0x00A0 (0x00A0 - 0x0000)
struct BP_CampBonfire_C_CookFoodV3 final
{
public:
	struct FS_CampCooking                         Food;                                              // 0x0000(0x00A0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_CampBonfire_C_CookFoodV3) == 0x000008, "Wrong alignment on BP_CampBonfire_C_CookFoodV3");
static_assert(sizeof(BP_CampBonfire_C_CookFoodV3) == 0x0000A0, "Wrong size on BP_CampBonfire_C_CookFoodV3");
static_assert(offsetof(BP_CampBonfire_C_CookFoodV3, Food) == 0x000000, "Member 'BP_CampBonfire_C_CookFoodV3::Food' has a wrong offset!");

// Function BP_CampBonfire.BP_CampBonfire_C.ExecuteUbergraph_BP_CampBonfire
// 0x0518 (0x0518 - 0x0000)
struct BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player_6;                             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_5;                             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SitIndex;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_SkipAnimation;                        // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player_4;                             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_3;                             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_2;                             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_1;                             // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Visible_1;                            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Visible;                              // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player;                               // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GeneralInterface_C> K2Node_DynamicCast_AsBPI_General_Interface;        // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GeneralInterface_C> K2Node_DynamicCast_AsBPI_General_Interface_1;      // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CampClient_C*                       CallFunc_GetComponentByClass_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CampClient_C*                       CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_CustomEvent_Player_2;                       // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player_7;                             // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_8;                             // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_CampCooking                         K2Node_CustomEvent_Food_2;                         // 0x00B0(0x00A0)(HasGetValueTypeHash)
	class ABP_Camp_C*                             CallFunc_GetCamp_Camp;                             // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CampCooking                         K2Node_CustomEvent_Food_1;                         // 0x0160(0x00A0)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0200(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APickableFood_C*                        CallFunc_SpawnFoodV2_Food;                         // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CampClient_C*                       CallFunc_GetComponentByClass_ReturnValue_2;        // 0x0220(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasFuel_Has;                              // 0x0232(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_233[0x1];                                      // 0x0233(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x023D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x023E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_4;               // 0x023F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CampClient_C*                       CallFunc_GetComponentByClass_ReturnValue_3;        // 0x0258(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CampClient_C*                       CallFunc_GetComponentByClass_ReturnValue_4;        // 0x0268(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_274[0x4];                                      // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_CustomEvent_Player_1;                       // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_CustomEvent_Player;                         // 0x0280(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_PlayEventAttached_ReturnValue;            // 0x0288(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0290(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x02A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x02AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AD[0x3];                                      // 0x02AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x02B0(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player_1;            // 0x0398(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1[0x7];                                      // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x03A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x03B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x03B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C4[0x4];                                      // 0x03C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player_2;            // 0x03C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D1[0x7];                                      // 0x03D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x03D8(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x03E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F4[0x4];                                      // 0x03F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player_3;            // 0x03F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0401(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_402[0x6];                                      // 0x0402(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CampCooking                         K2Node_CustomEvent_Food;                           // 0x0408(0x00A0)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A9[0x7];                                      // 0x04A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x04B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CampClient_C*                       CallFunc_GetComponentByClass_ReturnValue_5;        // 0x04C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_PlayEventAttached_ReturnValue_1;          // 0x04D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x04D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x04F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0508(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x0510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast_1;            // 0x0514(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire) == 0x000008, "Wrong alignment on BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire");
static_assert(sizeof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire) == 0x000518, "Wrong size on BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, EntryPoint) == 0x000000, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, K2Node_Event_Player_6) == 0x000008, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::K2Node_Event_Player_6' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, K2Node_Event_Player_5) == 0x000010, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::K2Node_Event_Player_5' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, K2Node_Event_SitIndex) == 0x000018, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::K2Node_Event_SitIndex' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, K2Node_Event_SkipAnimation) == 0x00001C, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::K2Node_Event_SkipAnimation' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, K2Node_Event_Player_4) == 0x000020, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::K2Node_Event_Player_4' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, K2Node_Event_Player_3) == 0x000028, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::K2Node_Event_Player_3' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, K2Node_Event_Player_2) == 0x000030, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::K2Node_Event_Player_2' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, K2Node_Event_Player_1) == 0x000038, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::K2Node_Event_Player_1' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, K2Node_Event_Visible_1) == 0x000040, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::K2Node_Event_Visible_1' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, K2Node_Event_Visible) == 0x000041, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::K2Node_Event_Visible' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, K2Node_Event_DeltaSeconds) == 0x000044, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, K2Node_Event_Player) == 0x000048, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::K2Node_Event_Player' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, K2Node_DynamicCast_AsBPI_General_Interface) == 0x000050, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::K2Node_DynamicCast_AsBPI_General_Interface' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, K2Node_DynamicCast_AsBPI_General_Interface_1) == 0x000068, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::K2Node_DynamicCast_AsBPI_General_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, CallFunc_GetComponentByClass_ReturnValue) == 0x000080, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000088, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, K2Node_CustomEvent_Player_2) == 0x000090, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::K2Node_CustomEvent_Player_2' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, CallFunc_IsValid_ReturnValue) == 0x000098, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, K2Node_Event_Player_7) == 0x0000A0, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::K2Node_Event_Player_7' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, K2Node_Event_Player_8) == 0x0000A8, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::K2Node_Event_Player_8' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, K2Node_CustomEvent_Food_2) == 0x0000B0, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::K2Node_CustomEvent_Food_2' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, CallFunc_GetCamp_Camp) == 0x000150, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::CallFunc_GetCamp_Camp' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, CallFunc_HasAuthority_ReturnValue) == 0x000158, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, K2Node_CustomEvent_Food_1) == 0x000160, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::K2Node_CustomEvent_Food_1' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, CallFunc_Conv_TextToString_ReturnValue) == 0x000200, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, CallFunc_IsValid_ReturnValue_1) == 0x000210, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, CallFunc_SpawnFoodV2_Food) == 0x000218, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::CallFunc_SpawnFoodV2_Food' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, CallFunc_GetComponentByClass_ReturnValue_2) == 0x000220, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::CallFunc_GetComponentByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000228, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, CallFunc_HasAuthority_ReturnValue_1) == 0x000230, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, CallFunc_IsValid_ReturnValue_2) == 0x000231, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, CallFunc_HasFuel_Has) == 0x000232, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::CallFunc_HasFuel_Has' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, Temp_int_Loop_Counter_Variable) == 0x000234, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, CallFunc_Add_IntInt_ReturnValue) == 0x000238, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, CallFunc_IsVisible_ReturnValue) == 0x00023C, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, CallFunc_HasAuthority_ReturnValue_2) == 0x00023D, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, CallFunc_HasAuthority_ReturnValue_3) == 0x00023E, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, CallFunc_HasAuthority_ReturnValue_4) == 0x00023F, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::CallFunc_HasAuthority_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000240, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, K2Node_DynamicCast_AsSurvival_Player) == 0x000248, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, K2Node_DynamicCast_bSuccess_2) == 0x000250, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, CallFunc_GetComponentByClass_ReturnValue_3) == 0x000258, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::CallFunc_GetComponentByClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, CallFunc_IsValid_ReturnValue_3) == 0x000260, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, CallFunc_GetComponentByClass_ReturnValue_4) == 0x000268, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::CallFunc_GetComponentByClass_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, Temp_int_Array_Index_Variable) == 0x000270, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, K2Node_CustomEvent_Player_1) == 0x000278, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::K2Node_CustomEvent_Player_1' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, K2Node_CustomEvent_Player) == 0x000280, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::K2Node_CustomEvent_Player' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, CallFunc_PlayEventAttached_ReturnValue) == 0x000288, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::CallFunc_PlayEventAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000290, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000298, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, K2Node_ComponentBoundEvent_OtherComp_1) == 0x0002A0, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x0002A8, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, K2Node_ComponentBoundEvent_bFromSweep) == 0x0002AC, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, K2Node_ComponentBoundEvent_SweepResult) == 0x0002B0, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, K2Node_DynamicCast_AsSurvival_Player_1) == 0x000398, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::K2Node_DynamicCast_AsSurvival_Player_1' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, K2Node_DynamicCast_bSuccess_3) == 0x0003A0, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0003A8, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, K2Node_ComponentBoundEvent_OtherActor) == 0x0003B0, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, K2Node_ComponentBoundEvent_OtherComp) == 0x0003B8, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0003C0, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, K2Node_DynamicCast_AsSurvival_Player_2) == 0x0003C8, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::K2Node_DynamicCast_AsSurvival_Player_2' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, K2Node_DynamicCast_bSuccess_4) == 0x0003D0, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, CallFunc_GetOverlappingActors_OverlappingActors) == 0x0003D8, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, CallFunc_Array_Get_Item) == 0x0003E8, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, CallFunc_Array_Length_ReturnValue) == 0x0003F0, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, K2Node_DynamicCast_AsSurvival_Player_3) == 0x0003F8, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::K2Node_DynamicCast_AsSurvival_Player_3' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, K2Node_DynamicCast_bSuccess_5) == 0x000400, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, CallFunc_Less_IntInt_ReturnValue) == 0x000401, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, K2Node_CustomEvent_Food) == 0x000408, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::K2Node_CustomEvent_Food' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, CallFunc_IsValid_ReturnValue_4) == 0x0004A8, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, CallFunc_Conv_TextToString_ReturnValue_1) == 0x0004B0, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x0004C0, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, CallFunc_GetComponentByClass_ReturnValue_5) == 0x0004C8, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::CallFunc_GetComponentByClass_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, CallFunc_PlayEventAttached_ReturnValue_1) == 0x0004D0, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::CallFunc_PlayEventAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0004D8, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, CallFunc_Add_VectorVector_ReturnValue) == 0x0004F0, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000508, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, CallFunc_Delay_Duration_ImplicitCast) == 0x000510, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire, CallFunc_Delay_Duration_ImplicitCast_1) == 0x000514, "Member 'BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire::CallFunc_Delay_Duration_ImplicitCast_1' has a wrong offset!");

// Function BP_CampBonfire.BP_CampBonfire_C.GetActorType
// 0x0001 (0x0001 - 0x0000)
struct BP_CampBonfire_C_GetActorType final
{
public:
	E_ActorType                                   ActorType;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CampBonfire_C_GetActorType) == 0x000001, "Wrong alignment on BP_CampBonfire_C_GetActorType");
static_assert(sizeof(BP_CampBonfire_C_GetActorType) == 0x000001, "Wrong size on BP_CampBonfire_C_GetActorType");
static_assert(offsetof(BP_CampBonfire_C_GetActorType, ActorType) == 0x000000, "Member 'BP_CampBonfire_C_GetActorType::ActorType' has a wrong offset!");

// Function BP_CampBonfire.BP_CampBonfire_C.HasFuel
// 0x0002 (0x0002 - 0x0000)
struct BP_CampBonfire_C_HasFuel final
{
public:
	bool                                          Has;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CampBonfire_C_HasFuel) == 0x000001, "Wrong alignment on BP_CampBonfire_C_HasFuel");
static_assert(sizeof(BP_CampBonfire_C_HasFuel) == 0x000002, "Wrong size on BP_CampBonfire_C_HasFuel");
static_assert(offsetof(BP_CampBonfire_C_HasFuel, Has) == 0x000000, "Member 'BP_CampBonfire_C_HasFuel::Has' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_HasFuel, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000001, "Member 'BP_CampBonfire_C_HasFuel::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_CampBonfire.BP_CampBonfire_C.IsLocked?
// 0x0001 (0x0001 - 0x0000)
struct BP_CampBonfire_C_IsLocked_ final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CampBonfire_C_IsLocked_) == 0x000001, "Wrong alignment on BP_CampBonfire_C_IsLocked_");
static_assert(sizeof(BP_CampBonfire_C_IsLocked_) == 0x000001, "Wrong size on BP_CampBonfire_C_IsLocked_");
static_assert(offsetof(BP_CampBonfire_C_IsLocked_, Result) == 0x000000, "Member 'BP_CampBonfire_C_IsLocked_::Result' has a wrong offset!");

// Function BP_CampBonfire.BP_CampBonfire_C.MultiStartIgnite
// 0x0008 (0x0008 - 0x0000)
struct BP_CampBonfire_C_MultiStartIgnite final
{
public:
	class ASurvivalPlayer_C*                      Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CampBonfire_C_MultiStartIgnite) == 0x000008, "Wrong alignment on BP_CampBonfire_C_MultiStartIgnite");
static_assert(sizeof(BP_CampBonfire_C_MultiStartIgnite) == 0x000008, "Wrong size on BP_CampBonfire_C_MultiStartIgnite");
static_assert(offsetof(BP_CampBonfire_C_MultiStartIgnite, Player) == 0x000000, "Member 'BP_CampBonfire_C_MultiStartIgnite::Player' has a wrong offset!");

// Function BP_CampBonfire.BP_CampBonfire_C.OnBeginInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_CampBonfire_C_OnBeginInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CampBonfire_C_OnBeginInteract) == 0x000008, "Wrong alignment on BP_CampBonfire_C_OnBeginInteract");
static_assert(sizeof(BP_CampBonfire_C_OnBeginInteract) == 0x000008, "Wrong size on BP_CampBonfire_C_OnBeginInteract");
static_assert(offsetof(BP_CampBonfire_C_OnBeginInteract, Player) == 0x000000, "Member 'BP_CampBonfire_C_OnBeginInteract::Player' has a wrong offset!");

// Function BP_CampBonfire.BP_CampBonfire_C.OnFocused
// 0x00B0 (0x00B0 - 0x0000)
struct BP_CampBonfire_C_OnFocused final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HighlightActor;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        HighlightActorComponent;                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_InteractType                                InteractType;                                      // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LateTime;                                          // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUIW_PlayerMain_C*                      CallFunc_GetGUI_GUI;                               // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0068(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0090(0x0018)()
	bool                                          CallFunc_HasFuel_Has;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CampBonfire_C_OnFocused) == 0x000008, "Wrong alignment on BP_CampBonfire_C_OnFocused");
static_assert(sizeof(BP_CampBonfire_C_OnFocused) == 0x0000B0, "Wrong size on BP_CampBonfire_C_OnFocused");
static_assert(offsetof(BP_CampBonfire_C_OnFocused, Player) == 0x000000, "Member 'BP_CampBonfire_C_OnFocused::Player' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_OnFocused, HighlightActor) == 0x000008, "Member 'BP_CampBonfire_C_OnFocused::HighlightActor' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_OnFocused, HighlightActorComponent) == 0x000010, "Member 'BP_CampBonfire_C_OnFocused::HighlightActorComponent' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_OnFocused, InteractType) == 0x000018, "Member 'BP_CampBonfire_C_OnFocused::InteractType' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_OnFocused, LateTime) == 0x000020, "Member 'BP_CampBonfire_C_OnFocused::LateTime' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_OnFocused, CallFunc_GetPlayerController_ReturnValue) == 0x000028, "Member 'BP_CampBonfire_C_OnFocused::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_OnFocused, CallFunc_IsLocallyControlled_ReturnValue) == 0x000030, "Member 'BP_CampBonfire_C_OnFocused::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_OnFocused, CallFunc_GetHUD_ReturnValue) == 0x000038, "Member 'BP_CampBonfire_C_OnFocused::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_OnFocused, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x000040, "Member 'BP_CampBonfire_C_OnFocused::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_OnFocused, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_CampBonfire_C_OnFocused::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_OnFocused, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000058, "Member 'BP_CampBonfire_C_OnFocused::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_OnFocused, CallFunc_GetGUI_GUI) == 0x000060, "Member 'BP_CampBonfire_C_OnFocused::CallFunc_GetGUI_GUI' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_OnFocused, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000068, "Member 'BP_CampBonfire_C_OnFocused::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_OnFocused, CallFunc_Array_Contains_ReturnValue) == 0x000078, "Member 'BP_CampBonfire_C_OnFocused::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_OnFocused, CallFunc_SelectString_ReturnValue) == 0x000080, "Member 'BP_CampBonfire_C_OnFocused::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_OnFocused, CallFunc_Conv_StringToText_ReturnValue) == 0x000090, "Member 'BP_CampBonfire_C_OnFocused::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_OnFocused, CallFunc_HasFuel_Has) == 0x0000A8, "Member 'BP_CampBonfire_C_OnFocused::CallFunc_HasFuel_Has' has a wrong offset!");

// Function BP_CampBonfire.BP_CampBonfire_C.OnInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_CampBonfire_C_OnInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CampBonfire_C_OnInteract) == 0x000008, "Wrong alignment on BP_CampBonfire_C_OnInteract");
static_assert(sizeof(BP_CampBonfire_C_OnInteract) == 0x000008, "Wrong size on BP_CampBonfire_C_OnInteract");
static_assert(offsetof(BP_CampBonfire_C_OnInteract, Player) == 0x000000, "Member 'BP_CampBonfire_C_OnInteract::Player' has a wrong offset!");

// Function BP_CampBonfire.BP_CampBonfire_C.OnInteract2
// 0x0008 (0x0008 - 0x0000)
struct BP_CampBonfire_C_OnInteract2 final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CampBonfire_C_OnInteract2) == 0x000008, "Wrong alignment on BP_CampBonfire_C_OnInteract2");
static_assert(sizeof(BP_CampBonfire_C_OnInteract2) == 0x000008, "Wrong size on BP_CampBonfire_C_OnInteract2");
static_assert(offsetof(BP_CampBonfire_C_OnInteract2, Player) == 0x000000, "Member 'BP_CampBonfire_C_OnInteract2::Player' has a wrong offset!");

// Function BP_CampBonfire.BP_CampBonfire_C.OnInteract3
// 0x0008 (0x0008 - 0x0000)
struct BP_CampBonfire_C_OnInteract3 final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CampBonfire_C_OnInteract3) == 0x000008, "Wrong alignment on BP_CampBonfire_C_OnInteract3");
static_assert(sizeof(BP_CampBonfire_C_OnInteract3) == 0x000008, "Wrong size on BP_CampBonfire_C_OnInteract3");
static_assert(offsetof(BP_CampBonfire_C_OnInteract3, Player) == 0x000000, "Member 'BP_CampBonfire_C_OnInteract3::Player' has a wrong offset!");

// Function BP_CampBonfire.BP_CampBonfire_C.OnInteractVehicle
// 0x0010 (0x0010 - 0x0000)
struct BP_CampBonfire_C_OnInteractVehicle final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         SitIndex;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipAnimation;                                     // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CampBonfire_C_OnInteractVehicle) == 0x000008, "Wrong alignment on BP_CampBonfire_C_OnInteractVehicle");
static_assert(sizeof(BP_CampBonfire_C_OnInteractVehicle) == 0x000010, "Wrong size on BP_CampBonfire_C_OnInteractVehicle");
static_assert(offsetof(BP_CampBonfire_C_OnInteractVehicle, Player) == 0x000000, "Member 'BP_CampBonfire_C_OnInteractVehicle::Player' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_OnInteractVehicle, SitIndex) == 0x000008, "Member 'BP_CampBonfire_C_OnInteractVehicle::SitIndex' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_OnInteractVehicle, SkipAnimation) == 0x00000C, "Member 'BP_CampBonfire_C_OnInteractVehicle::SkipAnimation' has a wrong offset!");

// Function BP_CampBonfire.BP_CampBonfire_C.OnLocalInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_CampBonfire_C_OnLocalInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CampBonfire_C_OnLocalInteract) == 0x000008, "Wrong alignment on BP_CampBonfire_C_OnLocalInteract");
static_assert(sizeof(BP_CampBonfire_C_OnLocalInteract) == 0x000008, "Wrong size on BP_CampBonfire_C_OnLocalInteract");
static_assert(offsetof(BP_CampBonfire_C_OnLocalInteract, Player) == 0x000000, "Member 'BP_CampBonfire_C_OnLocalInteract::Player' has a wrong offset!");

// Function BP_CampBonfire.BP_CampBonfire_C.OnLostFocus
// 0x0008 (0x0008 - 0x0000)
struct BP_CampBonfire_C_OnLostFocus final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CampBonfire_C_OnLostFocus) == 0x000008, "Wrong alignment on BP_CampBonfire_C_OnLostFocus");
static_assert(sizeof(BP_CampBonfire_C_OnLostFocus) == 0x000008, "Wrong size on BP_CampBonfire_C_OnLostFocus");
static_assert(offsetof(BP_CampBonfire_C_OnLostFocus, Player) == 0x000000, "Member 'BP_CampBonfire_C_OnLostFocus::Player' has a wrong offset!");

// Function BP_CampBonfire.BP_CampBonfire_C.OnSeen
// 0x0008 (0x0008 - 0x0000)
struct BP_CampBonfire_C_OnSeen final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CampBonfire_C_OnSeen) == 0x000008, "Wrong alignment on BP_CampBonfire_C_OnSeen");
static_assert(sizeof(BP_CampBonfire_C_OnSeen) == 0x000008, "Wrong size on BP_CampBonfire_C_OnSeen");
static_assert(offsetof(BP_CampBonfire_C_OnSeen, Player) == 0x000000, "Member 'BP_CampBonfire_C_OnSeen::Player' has a wrong offset!");

// Function BP_CampBonfire.BP_CampBonfire_C.OnStopInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_CampBonfire_C_OnStopInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CampBonfire_C_OnStopInteract) == 0x000008, "Wrong alignment on BP_CampBonfire_C_OnStopInteract");
static_assert(sizeof(BP_CampBonfire_C_OnStopInteract) == 0x000008, "Wrong size on BP_CampBonfire_C_OnStopInteract");
static_assert(offsetof(BP_CampBonfire_C_OnStopInteract, Player) == 0x000000, "Member 'BP_CampBonfire_C_OnStopInteract::Player' has a wrong offset!");

// Function BP_CampBonfire.BP_CampBonfire_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_CampBonfire_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CampBonfire_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_CampBonfire_C_ReceiveTick");
static_assert(sizeof(BP_CampBonfire_C_ReceiveTick) == 0x000004, "Wrong size on BP_CampBonfire_C_ReceiveTick");
static_assert(offsetof(BP_CampBonfire_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_CampBonfire_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_CampBonfire.BP_CampBonfire_C.Release
// 0x0008 (0x0008 - 0x0000)
struct BP_CampBonfire_C_Release final
{
public:
	class ASurvivalPlayer_C*                      Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CampBonfire_C_Release) == 0x000008, "Wrong alignment on BP_CampBonfire_C_Release");
static_assert(sizeof(BP_CampBonfire_C_Release) == 0x000008, "Wrong size on BP_CampBonfire_C_Release");
static_assert(offsetof(BP_CampBonfire_C_Release, Player) == 0x000000, "Member 'BP_CampBonfire_C_Release::Player' has a wrong offset!");

// Function BP_CampBonfire.BP_CampBonfire_C.ServerStartCook
// 0x00A0 (0x00A0 - 0x0000)
struct BP_CampBonfire_C_ServerStartCook final
{
public:
	struct FS_CampCooking                         Food;                                              // 0x0000(0x00A0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_CampBonfire_C_ServerStartCook) == 0x000008, "Wrong alignment on BP_CampBonfire_C_ServerStartCook");
static_assert(sizeof(BP_CampBonfire_C_ServerStartCook) == 0x0000A0, "Wrong size on BP_CampBonfire_C_ServerStartCook");
static_assert(offsetof(BP_CampBonfire_C_ServerStartCook, Food) == 0x000000, "Member 'BP_CampBonfire_C_ServerStartCook::Food' has a wrong offset!");

// Function BP_CampBonfire.BP_CampBonfire_C.Set3DWidgetVisibility
// 0x0001 (0x0001 - 0x0000)
struct BP_CampBonfire_C_Set3DWidgetVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CampBonfire_C_Set3DWidgetVisibility) == 0x000001, "Wrong alignment on BP_CampBonfire_C_Set3DWidgetVisibility");
static_assert(sizeof(BP_CampBonfire_C_Set3DWidgetVisibility) == 0x000001, "Wrong size on BP_CampBonfire_C_Set3DWidgetVisibility");
static_assert(offsetof(BP_CampBonfire_C_Set3DWidgetVisibility, Visible) == 0x000000, "Member 'BP_CampBonfire_C_Set3DWidgetVisibility::Visible' has a wrong offset!");

// Function BP_CampBonfire.BP_CampBonfire_C.SetTutorial3DWidgetVisibility
// 0x0001 (0x0001 - 0x0000)
struct BP_CampBonfire_C_SetTutorial3DWidgetVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CampBonfire_C_SetTutorial3DWidgetVisibility) == 0x000001, "Wrong alignment on BP_CampBonfire_C_SetTutorial3DWidgetVisibility");
static_assert(sizeof(BP_CampBonfire_C_SetTutorial3DWidgetVisibility) == 0x000001, "Wrong size on BP_CampBonfire_C_SetTutorial3DWidgetVisibility");
static_assert(offsetof(BP_CampBonfire_C_SetTutorial3DWidgetVisibility, Visible) == 0x000000, "Member 'BP_CampBonfire_C_SetTutorial3DWidgetVisibility::Visible' has a wrong offset!");

// Function BP_CampBonfire.BP_CampBonfire_C.SpawnFoodV2
// 0x0570 (0x0570 - 0x0000)
struct BP_CampBonfire_C_SpawnFoodV2 final
{
public:
	class FString                                 Param_Name;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APickableFood_C*                        Food;                                              // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0xF];                                       // 0x0021(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0030(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APickableFood_C*                        CallFunc_FinishSpawningActor_ReturnValue;          // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow;           // 0x00A8(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x02D0(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F1[0xF];                                      // 0x04F1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_1;     // 0x0500(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x0560(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APickableFood_C*                        CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x0568(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CampBonfire_C_SpawnFoodV2) == 0x000010, "Wrong alignment on BP_CampBonfire_C_SpawnFoodV2");
static_assert(sizeof(BP_CampBonfire_C_SpawnFoodV2) == 0x000570, "Wrong size on BP_CampBonfire_C_SpawnFoodV2");
static_assert(offsetof(BP_CampBonfire_C_SpawnFoodV2, Param_Name) == 0x000000, "Member 'BP_CampBonfire_C_SpawnFoodV2::Param_Name' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_SpawnFoodV2, Count) == 0x000010, "Member 'BP_CampBonfire_C_SpawnFoodV2::Count' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_SpawnFoodV2, Food) == 0x000018, "Member 'BP_CampBonfire_C_SpawnFoodV2::Food' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_SpawnFoodV2, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000020, "Member 'BP_CampBonfire_C_SpawnFoodV2::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_SpawnFoodV2, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000030, "Member 'BP_CampBonfire_C_SpawnFoodV2::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_SpawnFoodV2, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000090, "Member 'BP_CampBonfire_C_SpawnFoodV2::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_SpawnFoodV2, CallFunc_Conv_StringToName_ReturnValue) == 0x000098, "Member 'BP_CampBonfire_C_SpawnFoodV2::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_SpawnFoodV2, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000A0, "Member 'BP_CampBonfire_C_SpawnFoodV2::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_SpawnFoodV2, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000A8, "Member 'BP_CampBonfire_C_SpawnFoodV2::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_SpawnFoodV2, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0002C8, "Member 'BP_CampBonfire_C_SpawnFoodV2::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_SpawnFoodV2, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x0002D0, "Member 'BP_CampBonfire_C_SpawnFoodV2::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_SpawnFoodV2, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x0004F0, "Member 'BP_CampBonfire_C_SpawnFoodV2::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_SpawnFoodV2, CallFunc_K2_GetComponentToWorld_ReturnValue_1) == 0x000500, "Member 'BP_CampBonfire_C_SpawnFoodV2::CallFunc_K2_GetComponentToWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_SpawnFoodV2, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x000560, "Member 'BP_CampBonfire_C_SpawnFoodV2::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CampBonfire_C_SpawnFoodV2, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x000568, "Member 'BP_CampBonfire_C_SpawnFoodV2::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");

// Function BP_CampBonfire.BP_CampBonfire_C.StartIgnite
// 0x0008 (0x0008 - 0x0000)
struct BP_CampBonfire_C_StartIgnite final
{
public:
	class ASurvivalPlayer_C*                      Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CampBonfire_C_StartIgnite) == 0x000008, "Wrong alignment on BP_CampBonfire_C_StartIgnite");
static_assert(sizeof(BP_CampBonfire_C_StartIgnite) == 0x000008, "Wrong size on BP_CampBonfire_C_StartIgnite");
static_assert(offsetof(BP_CampBonfire_C_StartIgnite, Player) == 0x000000, "Member 'BP_CampBonfire_C_StartIgnite::Player' has a wrong offset!");

}

