#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SurviveLocomotion

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function SurviveLocomotion.SurviveLocomotion_C.AimToIdle
// 0x0002 (0x0002 - 0x0000)
struct SurviveLocomotion_C_AimToIdle final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveLocomotion_C_AimToIdle) == 0x000001, "Wrong alignment on SurviveLocomotion_C_AimToIdle");
static_assert(sizeof(SurviveLocomotion_C_AimToIdle) == 0x000002, "Wrong size on SurviveLocomotion_C_AimToIdle");
static_assert(offsetof(SurviveLocomotion_C_AimToIdle, ReturnValue) == 0x000000, "Member 'SurviveLocomotion_C_AimToIdle::ReturnValue' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_AimToIdle, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'SurviveLocomotion_C_AimToIdle::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function SurviveLocomotion.SurviveLocomotion_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct SurviveLocomotion_C_AnimGraph final
{
public:
	struct FPoseLink                              Param_AnimGraph;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(SurviveLocomotion_C_AnimGraph) == 0x000008, "Wrong alignment on SurviveLocomotion_C_AnimGraph");
static_assert(sizeof(SurviveLocomotion_C_AnimGraph) == 0x000010, "Wrong size on SurviveLocomotion_C_AnimGraph");
static_assert(offsetof(SurviveLocomotion_C_AnimGraph, Param_AnimGraph) == 0x000000, "Member 'SurviveLocomotion_C_AnimGraph::Param_AnimGraph' has a wrong offset!");

// Function SurviveLocomotion.SurviveLocomotion_C.BlueprintThreadSafeUpdateAnimation
// 0x00D0 (0x00D0 - 0x0000)
struct SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_1;         // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_2;         // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_3;         // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_1;     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_4;         // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_9;                // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_2;          // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_11;                // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_2;     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_12;                // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_3;          // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_13;                // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_5;         // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_14;                // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_6;         // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_7;         // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_8;         // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_9;         // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_9;        // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_1;      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_15;                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_4;       // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_4;          // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_16;                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_5;          // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_5;       // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_6;          // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_17;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_10;               // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_7;          // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_18;                // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_11;               // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_19;                // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_20;                // 0x005F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_3;     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_12;               // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_21;                // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_8;          // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_13;               // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_9;                  // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_9;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_6;       // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_22;                // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_10;       // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_14;               // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_23;                // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_24;                // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_10;                 // 0x006F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_11;                 // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_15;               // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_25;                // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_26;                // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_27;                // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_28;                // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76[0x2];                                       // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_7;       // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_1;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_12;                 // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_29;                // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_30;                // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_31;                // 0x0087(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_32;                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_33;                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_1;    // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast_1;       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_2;    // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_3;    // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation) == 0x000008, "Wrong alignment on SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation");
static_assert(sizeof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation) == 0x0000D0, "Wrong size on SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, DeltaTime) == 0x000000, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::DeltaTime' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000004, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000005, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000006, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000007, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_VSize_ReturnValue) == 0x000008, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000010, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000011, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_InRange_FloatFloat_ReturnValue_1) == 0x000012, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_InRange_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_InRange_FloatFloat_ReturnValue_2) == 0x000013, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_InRange_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanOR_ReturnValue) == 0x000014, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_InRange_FloatFloat_ReturnValue_3) == 0x000015, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_InRange_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Not_PreBool_ReturnValue) == 0x000016, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanOR_ReturnValue_1) == 0x000017, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_NearlyEqual_FloatFloat_ReturnValue_1) == 0x000018, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_NearlyEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanOR_ReturnValue_2) == 0x000019, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Not_PreBool_ReturnValue_1) == 0x00001A, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanOR_ReturnValue_3) == 0x00001B, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Not_PreBool_ReturnValue_2) == 0x00001C, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_InRange_FloatFloat_ReturnValue_4) == 0x00001D, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_InRange_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanAND_ReturnValue) == 0x00001E, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Not_PreBool_ReturnValue_3) == 0x00001F, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000020, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000021, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, Temp_bool_Variable) == 0x000022, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanAND_ReturnValue_1) == 0x000023, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanAND_ReturnValue_2) == 0x000024, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Not_PreBool_ReturnValue_4) == 0x000025, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanAND_ReturnValue_3) == 0x000026, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Not_PreBool_ReturnValue_5) == 0x000027, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000028, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000029, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Not_PreBool_ReturnValue_6) == 0x00002A, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Not_PreBool_ReturnValue_7) == 0x00002B, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanAND_ReturnValue_4) == 0x00002C, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanAND_ReturnValue_5) == 0x00002D, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Not_PreBool_ReturnValue_8) == 0x00002E, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanAND_ReturnValue_6) == 0x00002F, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x000030, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x000031, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Not_PreBool_ReturnValue_9) == 0x000032, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Not_PreBool_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanAND_ReturnValue_7) == 0x000033, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000034, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x000035, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanAND_ReturnValue_8) == 0x000036, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000037, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000038, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanAND_ReturnValue_9) == 0x000039, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Less_DoubleDouble_ReturnValue_2) == 0x00003A, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Less_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x00003B, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanAND_ReturnValue_10) == 0x00003C, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x00003D, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x00003E, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanAND_ReturnValue_11) == 0x00003F, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanAND_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_NearlyEqual_FloatFloat_ReturnValue_2) == 0x000040, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_NearlyEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanAND_ReturnValue_12) == 0x000041, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanAND_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Less_DoubleDouble_ReturnValue_3) == 0x000042, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Less_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x000043, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanAND_ReturnValue_13) == 0x000044, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanAND_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_InRange_FloatFloat_ReturnValue_5) == 0x000045, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_InRange_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanAND_ReturnValue_14) == 0x000046, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanAND_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanOR_ReturnValue_4) == 0x000047, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanOR_ReturnValue_5) == 0x000048, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_InRange_FloatFloat_ReturnValue_6) == 0x000049, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_InRange_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_InRange_FloatFloat_ReturnValue_7) == 0x00004A, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_InRange_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_InRange_FloatFloat_ReturnValue_8) == 0x00004B, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_InRange_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_InRange_FloatFloat_ReturnValue_9) == 0x00004C, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_InRange_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanOR_ReturnValue_6) == 0x00004D, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_EqualEqual_ByteByte_ReturnValue_9) == 0x00004E, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_EqualEqual_ByteByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x00004F, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_NotEqual_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_NotEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanAND_ReturnValue_15) == 0x000051, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanAND_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Greater_DoubleDouble_ReturnValue_4) == 0x000052, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Greater_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Less_DoubleDouble_ReturnValue_4) == 0x000053, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Less_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanAND_ReturnValue_16) == 0x000054, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanAND_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Less_DoubleDouble_ReturnValue_5) == 0x000055, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Less_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Greater_DoubleDouble_ReturnValue_5) == 0x000056, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Greater_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Less_DoubleDouble_ReturnValue_6) == 0x000057, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Less_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanAND_ReturnValue_17) == 0x000058, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanAND_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Not_PreBool_ReturnValue_10) == 0x000059, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Not_PreBool_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Less_DoubleDouble_ReturnValue_7) == 0x00005A, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Less_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanAND_ReturnValue_18) == 0x00005B, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanAND_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Not_PreBool_ReturnValue_11) == 0x00005C, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Not_PreBool_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanAND_ReturnValue_19) == 0x00005D, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanAND_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, K2Node_Select_Default) == 0x00005E, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanAND_ReturnValue_20) == 0x00005F, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanAND_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_NearlyEqual_FloatFloat_ReturnValue_3) == 0x000060, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_NearlyEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Not_PreBool_ReturnValue_12) == 0x000061, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Not_PreBool_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanOR_ReturnValue_7) == 0x000062, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanAND_ReturnValue_21) == 0x000063, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanAND_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Less_DoubleDouble_ReturnValue_8) == 0x000064, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Less_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanOR_ReturnValue_8) == 0x000065, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Not_PreBool_ReturnValue_13) == 0x000066, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Not_PreBool_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanOR_ReturnValue_9) == 0x000067, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanOR_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Less_DoubleDouble_ReturnValue_9) == 0x000068, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Less_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Greater_DoubleDouble_ReturnValue_6) == 0x000069, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Greater_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanAND_ReturnValue_22) == 0x00006A, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanAND_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_EqualEqual_ByteByte_ReturnValue_10) == 0x00006B, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_EqualEqual_ByteByte_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Not_PreBool_ReturnValue_14) == 0x00006C, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Not_PreBool_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanAND_ReturnValue_23) == 0x00006D, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanAND_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanAND_ReturnValue_24) == 0x00006E, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanAND_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanOR_ReturnValue_10) == 0x00006F, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanOR_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanOR_ReturnValue_11) == 0x000070, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanOR_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Not_PreBool_ReturnValue_15) == 0x000071, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Not_PreBool_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanAND_ReturnValue_25) == 0x000072, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanAND_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanAND_ReturnValue_26) == 0x000073, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanAND_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanAND_ReturnValue_27) == 0x000074, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanAND_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanAND_ReturnValue_28) == 0x000075, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanAND_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_GetCurveValue_ReturnValue) == 0x000078, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Greater_DoubleDouble_ReturnValue_7) == 0x00007C, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Greater_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_GetCurveValue_ReturnValue_1) == 0x000080, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_GetCurveValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanOR_ReturnValue_12) == 0x000084, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanOR_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanAND_ReturnValue_29) == 0x000085, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanAND_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanAND_ReturnValue_30) == 0x000086, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanAND_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanAND_ReturnValue_31) == 0x000087, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanAND_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanAND_ReturnValue_32) == 0x000088, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanAND_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanAND_ReturnValue_33) == 0x000089, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanAND_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x000090, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast) == 0x000098, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0000A0, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x0000A8, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Greater_DoubleDouble_A_ImplicitCast_1) == 0x0000B0, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Greater_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Less_DoubleDouble_A_ImplicitCast_1) == 0x0000B8, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Less_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Greater_DoubleDouble_A_ImplicitCast_2) == 0x0000C0, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Greater_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Greater_DoubleDouble_A_ImplicitCast_3) == 0x0000C8, "Member 'SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Greater_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");

// Function SurviveLocomotion.SurviveLocomotion_C.DirBack
// 0x0001 (0x0001 - 0x0000)
struct SurviveLocomotion_C_DirBack final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveLocomotion_C_DirBack) == 0x000001, "Wrong alignment on SurviveLocomotion_C_DirBack");
static_assert(sizeof(SurviveLocomotion_C_DirBack) == 0x000001, "Wrong size on SurviveLocomotion_C_DirBack");
static_assert(offsetof(SurviveLocomotion_C_DirBack, ReturnValue) == 0x000000, "Member 'SurviveLocomotion_C_DirBack::ReturnValue' has a wrong offset!");

// Function SurviveLocomotion.SurviveLocomotion_C.DirBack_Pivot
// 0x0001 (0x0001 - 0x0000)
struct SurviveLocomotion_C_DirBack_Pivot final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveLocomotion_C_DirBack_Pivot) == 0x000001, "Wrong alignment on SurviveLocomotion_C_DirBack_Pivot");
static_assert(sizeof(SurviveLocomotion_C_DirBack_Pivot) == 0x000001, "Wrong size on SurviveLocomotion_C_DirBack_Pivot");
static_assert(offsetof(SurviveLocomotion_C_DirBack_Pivot, ReturnValue) == 0x000000, "Member 'SurviveLocomotion_C_DirBack_Pivot::ReturnValue' has a wrong offset!");

// Function SurviveLocomotion.SurviveLocomotion_C.DirForward
// 0x0001 (0x0001 - 0x0000)
struct SurviveLocomotion_C_DirForward final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveLocomotion_C_DirForward) == 0x000001, "Wrong alignment on SurviveLocomotion_C_DirForward");
static_assert(sizeof(SurviveLocomotion_C_DirForward) == 0x000001, "Wrong size on SurviveLocomotion_C_DirForward");
static_assert(offsetof(SurviveLocomotion_C_DirForward, ReturnValue) == 0x000000, "Member 'SurviveLocomotion_C_DirForward::ReturnValue' has a wrong offset!");

// Function SurviveLocomotion.SurviveLocomotion_C.DirForward_Pivot
// 0x0001 (0x0001 - 0x0000)
struct SurviveLocomotion_C_DirForward_Pivot final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveLocomotion_C_DirForward_Pivot) == 0x000001, "Wrong alignment on SurviveLocomotion_C_DirForward_Pivot");
static_assert(sizeof(SurviveLocomotion_C_DirForward_Pivot) == 0x000001, "Wrong size on SurviveLocomotion_C_DirForward_Pivot");
static_assert(offsetof(SurviveLocomotion_C_DirForward_Pivot, ReturnValue) == 0x000000, "Member 'SurviveLocomotion_C_DirForward_Pivot::ReturnValue' has a wrong offset!");

// Function SurviveLocomotion.SurviveLocomotion_C.DirLeft
// 0x0001 (0x0001 - 0x0000)
struct SurviveLocomotion_C_DirLeft final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveLocomotion_C_DirLeft) == 0x000001, "Wrong alignment on SurviveLocomotion_C_DirLeft");
static_assert(sizeof(SurviveLocomotion_C_DirLeft) == 0x000001, "Wrong size on SurviveLocomotion_C_DirLeft");
static_assert(offsetof(SurviveLocomotion_C_DirLeft, ReturnValue) == 0x000000, "Member 'SurviveLocomotion_C_DirLeft::ReturnValue' has a wrong offset!");

// Function SurviveLocomotion.SurviveLocomotion_C.DirLeft_Pivot
// 0x0001 (0x0001 - 0x0000)
struct SurviveLocomotion_C_DirLeft_Pivot final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveLocomotion_C_DirLeft_Pivot) == 0x000001, "Wrong alignment on SurviveLocomotion_C_DirLeft_Pivot");
static_assert(sizeof(SurviveLocomotion_C_DirLeft_Pivot) == 0x000001, "Wrong size on SurviveLocomotion_C_DirLeft_Pivot");
static_assert(offsetof(SurviveLocomotion_C_DirLeft_Pivot, ReturnValue) == 0x000000, "Member 'SurviveLocomotion_C_DirLeft_Pivot::ReturnValue' has a wrong offset!");

// Function SurviveLocomotion.SurviveLocomotion_C.DirRight
// 0x0001 (0x0001 - 0x0000)
struct SurviveLocomotion_C_DirRight final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveLocomotion_C_DirRight) == 0x000001, "Wrong alignment on SurviveLocomotion_C_DirRight");
static_assert(sizeof(SurviveLocomotion_C_DirRight) == 0x000001, "Wrong size on SurviveLocomotion_C_DirRight");
static_assert(offsetof(SurviveLocomotion_C_DirRight, ReturnValue) == 0x000000, "Member 'SurviveLocomotion_C_DirRight::ReturnValue' has a wrong offset!");

// Function SurviveLocomotion.SurviveLocomotion_C.DirRight_Pivot
// 0x0001 (0x0001 - 0x0000)
struct SurviveLocomotion_C_DirRight_Pivot final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveLocomotion_C_DirRight_Pivot) == 0x000001, "Wrong alignment on SurviveLocomotion_C_DirRight_Pivot");
static_assert(sizeof(SurviveLocomotion_C_DirRight_Pivot) == 0x000001, "Wrong size on SurviveLocomotion_C_DirRight_Pivot");
static_assert(offsetof(SurviveLocomotion_C_DirRight_Pivot, ReturnValue) == 0x000000, "Member 'SurviveLocomotion_C_DirRight_Pivot::ReturnValue' has a wrong offset!");

// Function SurviveLocomotion.SurviveLocomotion_C.ExecuteUbergraph_SurviveLocomotion
// 0x0058 (0x0058 - 0x0000)
struct SurviveLocomotion_C_ExecuteUbergraph_SurviveLocomotion final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_time;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0034(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveLocomotion_C_ExecuteUbergraph_SurviveLocomotion) == 0x000008, "Wrong alignment on SurviveLocomotion_C_ExecuteUbergraph_SurviveLocomotion");
static_assert(sizeof(SurviveLocomotion_C_ExecuteUbergraph_SurviveLocomotion) == 0x000058, "Wrong size on SurviveLocomotion_C_ExecuteUbergraph_SurviveLocomotion");
static_assert(offsetof(SurviveLocomotion_C_ExecuteUbergraph_SurviveLocomotion, EntryPoint) == 0x000000, "Member 'SurviveLocomotion_C_ExecuteUbergraph_SurviveLocomotion::EntryPoint' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_ExecuteUbergraph_SurviveLocomotion, K2Node_CustomEvent_time) == 0x000008, "Member 'SurviveLocomotion_C_ExecuteUbergraph_SurviveLocomotion::K2Node_CustomEvent_time' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_ExecuteUbergraph_SurviveLocomotion, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'SurviveLocomotion_C_ExecuteUbergraph_SurviveLocomotion::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_ExecuteUbergraph_SurviveLocomotion, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'SurviveLocomotion_C_ExecuteUbergraph_SurviveLocomotion::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_ExecuteUbergraph_SurviveLocomotion, K2Node_SwitchEnum_CmpSuccess_1) == 0x000019, "Member 'SurviveLocomotion_C_ExecuteUbergraph_SurviveLocomotion::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_ExecuteUbergraph_SurviveLocomotion, K2Node_SwitchEnum_CmpSuccess_2) == 0x00001A, "Member 'SurviveLocomotion_C_ExecuteUbergraph_SurviveLocomotion::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_ExecuteUbergraph_SurviveLocomotion, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000020, "Member 'SurviveLocomotion_C_ExecuteUbergraph_SurviveLocomotion::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_ExecuteUbergraph_SurviveLocomotion, K2Node_DynamicCast_AsSurvival_Player) == 0x000028, "Member 'SurviveLocomotion_C_ExecuteUbergraph_SurviveLocomotion::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_ExecuteUbergraph_SurviveLocomotion, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'SurviveLocomotion_C_ExecuteUbergraph_SurviveLocomotion::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_ExecuteUbergraph_SurviveLocomotion, K2Node_CreateDelegate_OutputDelegate) == 0x000034, "Member 'SurviveLocomotion_C_ExecuteUbergraph_SurviveLocomotion::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_ExecuteUbergraph_SurviveLocomotion, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000048, "Member 'SurviveLocomotion_C_ExecuteUbergraph_SurviveLocomotion::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_ExecuteUbergraph_SurviveLocomotion, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000050, "Member 'SurviveLocomotion_C_ExecuteUbergraph_SurviveLocomotion::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function SurviveLocomotion.SurviveLocomotion_C.FromPivotToMoving
// 0x0001 (0x0001 - 0x0000)
struct SurviveLocomotion_C_FromPivotToMoving final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveLocomotion_C_FromPivotToMoving) == 0x000001, "Wrong alignment on SurviveLocomotion_C_FromPivotToMoving");
static_assert(sizeof(SurviveLocomotion_C_FromPivotToMoving) == 0x000001, "Wrong size on SurviveLocomotion_C_FromPivotToMoving");
static_assert(offsetof(SurviveLocomotion_C_FromPivotToMoving, ReturnValue) == 0x000000, "Member 'SurviveLocomotion_C_FromPivotToMoving::ReturnValue' has a wrong offset!");

// Function SurviveLocomotion.SurviveLocomotion_C.FromPivotToStrafe
// 0x0001 (0x0001 - 0x0000)
struct SurviveLocomotion_C_FromPivotToStrafe final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveLocomotion_C_FromPivotToStrafe) == 0x000001, "Wrong alignment on SurviveLocomotion_C_FromPivotToStrafe");
static_assert(sizeof(SurviveLocomotion_C_FromPivotToStrafe) == 0x000001, "Wrong size on SurviveLocomotion_C_FromPivotToStrafe");
static_assert(offsetof(SurviveLocomotion_C_FromPivotToStrafe, ReturnValue) == 0x000000, "Member 'SurviveLocomotion_C_FromPivotToStrafe::ReturnValue' has a wrong offset!");

// Function SurviveLocomotion.SurviveLocomotion_C.FromStartToMoving
// 0x0002 (0x0002 - 0x0000)
struct SurviveLocomotion_C_FromStartToMoving final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveLocomotion_C_FromStartToMoving) == 0x000001, "Wrong alignment on SurviveLocomotion_C_FromStartToMoving");
static_assert(sizeof(SurviveLocomotion_C_FromStartToMoving) == 0x000002, "Wrong size on SurviveLocomotion_C_FromStartToMoving");
static_assert(offsetof(SurviveLocomotion_C_FromStartToMoving, ReturnValue) == 0x000000, "Member 'SurviveLocomotion_C_FromStartToMoving::ReturnValue' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_FromStartToMoving, Result) == 0x000001, "Member 'SurviveLocomotion_C_FromStartToMoving::Result' has a wrong offset!");

// Function SurviveLocomotion.SurviveLocomotion_C.FromStopToIdle
// 0x0001 (0x0001 - 0x0000)
struct SurviveLocomotion_C_FromStopToIdle final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveLocomotion_C_FromStopToIdle) == 0x000001, "Wrong alignment on SurviveLocomotion_C_FromStopToIdle");
static_assert(sizeof(SurviveLocomotion_C_FromStopToIdle) == 0x000001, "Wrong size on SurviveLocomotion_C_FromStopToIdle");
static_assert(offsetof(SurviveLocomotion_C_FromStopToIdle, ReturnValue) == 0x000000, "Member 'SurviveLocomotion_C_FromStopToIdle::ReturnValue' has a wrong offset!");

// Function SurviveLocomotion.SurviveLocomotion_C.HasMoveInput
// 0x0001 (0x0001 - 0x0000)
struct SurviveLocomotion_C_HasMoveInput final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveLocomotion_C_HasMoveInput) == 0x000001, "Wrong alignment on SurviveLocomotion_C_HasMoveInput");
static_assert(sizeof(SurviveLocomotion_C_HasMoveInput) == 0x000001, "Wrong size on SurviveLocomotion_C_HasMoveInput");
static_assert(offsetof(SurviveLocomotion_C_HasMoveInput, ReturnValue) == 0x000000, "Member 'SurviveLocomotion_C_HasMoveInput::ReturnValue' has a wrong offset!");

// Function SurviveLocomotion.SurviveLocomotion_C.IdleCrouchToStand
// 0x0001 (0x0001 - 0x0000)
struct SurviveLocomotion_C_IdleCrouchToStand final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveLocomotion_C_IdleCrouchToStand) == 0x000001, "Wrong alignment on SurviveLocomotion_C_IdleCrouchToStand");
static_assert(sizeof(SurviveLocomotion_C_IdleCrouchToStand) == 0x000001, "Wrong size on SurviveLocomotion_C_IdleCrouchToStand");
static_assert(offsetof(SurviveLocomotion_C_IdleCrouchToStand, ReturnValue) == 0x000000, "Member 'SurviveLocomotion_C_IdleCrouchToStand::ReturnValue' has a wrong offset!");

// Function SurviveLocomotion.SurviveLocomotion_C.IdleStandToCrouch
// 0x0001 (0x0001 - 0x0000)
struct SurviveLocomotion_C_IdleStandToCrouch final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveLocomotion_C_IdleStandToCrouch) == 0x000001, "Wrong alignment on SurviveLocomotion_C_IdleStandToCrouch");
static_assert(sizeof(SurviveLocomotion_C_IdleStandToCrouch) == 0x000001, "Wrong size on SurviveLocomotion_C_IdleStandToCrouch");
static_assert(offsetof(SurviveLocomotion_C_IdleStandToCrouch, ReturnValue) == 0x000000, "Member 'SurviveLocomotion_C_IdleStandToCrouch::ReturnValue' has a wrong offset!");

// Function SurviveLocomotion.SurviveLocomotion_C.IdleToAim
// 0x0001 (0x0001 - 0x0000)
struct SurviveLocomotion_C_IdleToAim final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveLocomotion_C_IdleToAim) == 0x000001, "Wrong alignment on SurviveLocomotion_C_IdleToAim");
static_assert(sizeof(SurviveLocomotion_C_IdleToAim) == 0x000001, "Wrong size on SurviveLocomotion_C_IdleToAim");
static_assert(offsetof(SurviveLocomotion_C_IdleToAim, ReturnValue) == 0x000000, "Member 'SurviveLocomotion_C_IdleToAim::ReturnValue' has a wrong offset!");

// Function SurviveLocomotion.SurviveLocomotion_C.IdleToMoving
// 0x0001 (0x0001 - 0x0000)
struct SurviveLocomotion_C_IdleToMoving final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveLocomotion_C_IdleToMoving) == 0x000001, "Wrong alignment on SurviveLocomotion_C_IdleToMoving");
static_assert(sizeof(SurviveLocomotion_C_IdleToMoving) == 0x000001, "Wrong size on SurviveLocomotion_C_IdleToMoving");
static_assert(offsetof(SurviveLocomotion_C_IdleToMoving, ReturnValue) == 0x000000, "Member 'SurviveLocomotion_C_IdleToMoving::ReturnValue' has a wrong offset!");

// Function SurviveLocomotion.SurviveLocomotion_C.IsAiming?
// 0x0001 (0x0001 - 0x0000)
struct SurviveLocomotion_C_IsAiming_ final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveLocomotion_C_IsAiming_) == 0x000001, "Wrong alignment on SurviveLocomotion_C_IsAiming_");
static_assert(sizeof(SurviveLocomotion_C_IsAiming_) == 0x000001, "Wrong size on SurviveLocomotion_C_IsAiming_");
static_assert(offsetof(SurviveLocomotion_C_IsAiming_, ReturnValue) == 0x000000, "Member 'SurviveLocomotion_C_IsAiming_::ReturnValue' has a wrong offset!");

// Function SurviveLocomotion.SurviveLocomotion_C.IsAimingMain
// 0x0007 (0x0007 - 0x0000)
struct SurviveLocomotion_C_IsAimingMain final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveLocomotion_C_IsAimingMain) == 0x000001, "Wrong alignment on SurviveLocomotion_C_IsAimingMain");
static_assert(sizeof(SurviveLocomotion_C_IsAimingMain) == 0x000007, "Wrong size on SurviveLocomotion_C_IsAimingMain");
static_assert(offsetof(SurviveLocomotion_C_IsAimingMain, ReturnValue) == 0x000000, "Member 'SurviveLocomotion_C_IsAimingMain::ReturnValue' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_IsAimingMain, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'SurviveLocomotion_C_IsAimingMain::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_IsAimingMain, CallFunc_Not_PreBool_ReturnValue_1) == 0x000002, "Member 'SurviveLocomotion_C_IsAimingMain::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_IsAimingMain, CallFunc_Not_PreBool_ReturnValue_2) == 0x000003, "Member 'SurviveLocomotion_C_IsAimingMain::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_IsAimingMain, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'SurviveLocomotion_C_IsAimingMain::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_IsAimingMain, CallFunc_BooleanAND_ReturnValue_1) == 0x000005, "Member 'SurviveLocomotion_C_IsAimingMain::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_IsAimingMain, CallFunc_BooleanAND_ReturnValue_2) == 0x000006, "Member 'SurviveLocomotion_C_IsAimingMain::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function SurviveLocomotion.SurviveLocomotion_C.IsWalking?
// 0x0001 (0x0001 - 0x0000)
struct SurviveLocomotion_C_IsWalking_ final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveLocomotion_C_IsWalking_) == 0x000001, "Wrong alignment on SurviveLocomotion_C_IsWalking_");
static_assert(sizeof(SurviveLocomotion_C_IsWalking_) == 0x000001, "Wrong size on SurviveLocomotion_C_IsWalking_");
static_assert(offsetof(SurviveLocomotion_C_IsWalking_, ReturnValue) == 0x000000, "Member 'SurviveLocomotion_C_IsWalking_::ReturnValue' has a wrong offset!");

// Function SurviveLocomotion.SurviveLocomotion_C.JogSlowRule
// 0x0001 (0x0001 - 0x0000)
struct SurviveLocomotion_C_JogSlowRule final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveLocomotion_C_JogSlowRule) == 0x000001, "Wrong alignment on SurviveLocomotion_C_JogSlowRule");
static_assert(sizeof(SurviveLocomotion_C_JogSlowRule) == 0x000001, "Wrong size on SurviveLocomotion_C_JogSlowRule");
static_assert(offsetof(SurviveLocomotion_C_JogSlowRule, ReturnValue) == 0x000000, "Member 'SurviveLocomotion_C_JogSlowRule::ReturnValue' has a wrong offset!");

// Function SurviveLocomotion.SurviveLocomotion_C.MovingToIdle
// 0x0001 (0x0001 - 0x0000)
struct SurviveLocomotion_C_MovingToIdle final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveLocomotion_C_MovingToIdle) == 0x000001, "Wrong alignment on SurviveLocomotion_C_MovingToIdle");
static_assert(sizeof(SurviveLocomotion_C_MovingToIdle) == 0x000001, "Wrong size on SurviveLocomotion_C_MovingToIdle");
static_assert(offsetof(SurviveLocomotion_C_MovingToIdle, ReturnValue) == 0x000000, "Member 'SurviveLocomotion_C_MovingToIdle::ReturnValue' has a wrong offset!");

// Function SurviveLocomotion.SurviveLocomotion_C.OnNewFunction
// 0x0020 (0x0020 - 0x0000)
struct SurviveLocomotion_C_OnNewFunction final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(SurviveLocomotion_C_OnNewFunction) == 0x000008, "Wrong alignment on SurviveLocomotion_C_OnNewFunction");
static_assert(sizeof(SurviveLocomotion_C_OnNewFunction) == 0x000020, "Wrong size on SurviveLocomotion_C_OnNewFunction");
static_assert(offsetof(SurviveLocomotion_C_OnNewFunction, Context) == 0x000000, "Member 'SurviveLocomotion_C_OnNewFunction::Context' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_OnNewFunction, Node) == 0x000010, "Member 'SurviveLocomotion_C_OnNewFunction::Node' has a wrong offset!");

// Function SurviveLocomotion.SurviveLocomotion_C.OnUpdatePivots
// 0x0038 (0x0038 - 0x0000)
struct SurviveLocomotion_C_OnUpdatePivots final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FAnimationStateResultReference         CallFunc_ConvertToAnimationStateResultPure_AnimationState; // 0x0020(0x0010)(NoDestructor)
	bool                                          CallFunc_ConvertToAnimationStateResultPure_Result; // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveLocomotion_C_OnUpdatePivots) == 0x000008, "Wrong alignment on SurviveLocomotion_C_OnUpdatePivots");
static_assert(sizeof(SurviveLocomotion_C_OnUpdatePivots) == 0x000038, "Wrong size on SurviveLocomotion_C_OnUpdatePivots");
static_assert(offsetof(SurviveLocomotion_C_OnUpdatePivots, Context) == 0x000000, "Member 'SurviveLocomotion_C_OnUpdatePivots::Context' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_OnUpdatePivots, Node) == 0x000010, "Member 'SurviveLocomotion_C_OnUpdatePivots::Node' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_OnUpdatePivots, CallFunc_ConvertToAnimationStateResultPure_AnimationState) == 0x000020, "Member 'SurviveLocomotion_C_OnUpdatePivots::CallFunc_ConvertToAnimationStateResultPure_AnimationState' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_OnUpdatePivots, CallFunc_ConvertToAnimationStateResultPure_Result) == 0x000030, "Member 'SurviveLocomotion_C_OnUpdatePivots::CallFunc_ConvertToAnimationStateResultPure_Result' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_OnUpdatePivots, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue) == 0x000034, "Member 'SurviveLocomotion_C_OnUpdatePivots::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue' has a wrong offset!");

// Function SurviveLocomotion.SurviveLocomotion_C.OnUpdateStartAnims
// 0x0068 (0x0068 - 0x0000)
struct SurviveLocomotion_C_OnUpdateStartAnims final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FAnimationStateResultReference         CallFunc_ConvertToAnimationStateResultPure_AnimationState; // 0x0020(0x0010)(NoDestructor)
	bool                                          CallFunc_ConvertToAnimationStateResultPure_Result; // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDeltaTime_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_StartTimeRemaining_ImplicitCast; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_TotalStartTime_ImplicitCast;    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveLocomotion_C_OnUpdateStartAnims) == 0x000008, "Wrong alignment on SurviveLocomotion_C_OnUpdateStartAnims");
static_assert(sizeof(SurviveLocomotion_C_OnUpdateStartAnims) == 0x000068, "Wrong size on SurviveLocomotion_C_OnUpdateStartAnims");
static_assert(offsetof(SurviveLocomotion_C_OnUpdateStartAnims, Context) == 0x000000, "Member 'SurviveLocomotion_C_OnUpdateStartAnims::Context' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_OnUpdateStartAnims, Node) == 0x000010, "Member 'SurviveLocomotion_C_OnUpdateStartAnims::Node' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_OnUpdateStartAnims, CallFunc_ConvertToAnimationStateResultPure_AnimationState) == 0x000020, "Member 'SurviveLocomotion_C_OnUpdateStartAnims::CallFunc_ConvertToAnimationStateResultPure_AnimationState' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_OnUpdateStartAnims, CallFunc_ConvertToAnimationStateResultPure_Result) == 0x000030, "Member 'SurviveLocomotion_C_OnUpdateStartAnims::CallFunc_ConvertToAnimationStateResultPure_Result' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_OnUpdateStartAnims, CallFunc_GetDeltaTime_ReturnValue) == 0x000034, "Member 'SurviveLocomotion_C_OnUpdateStartAnims::CallFunc_GetDeltaTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_OnUpdateStartAnims, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue) == 0x000038, "Member 'SurviveLocomotion_C_OnUpdateStartAnims::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_OnUpdateStartAnims, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000040, "Member 'SurviveLocomotion_C_OnUpdateStartAnims::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_OnUpdateStartAnims, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000048, "Member 'SurviveLocomotion_C_OnUpdateStartAnims::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_OnUpdateStartAnims, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000050, "Member 'SurviveLocomotion_C_OnUpdateStartAnims::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_OnUpdateStartAnims, K2Node_VariableSet_StartTimeRemaining_ImplicitCast) == 0x000058, "Member 'SurviveLocomotion_C_OnUpdateStartAnims::K2Node_VariableSet_StartTimeRemaining_ImplicitCast' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_OnUpdateStartAnims, K2Node_VariableSet_TotalStartTime_ImplicitCast) == 0x000060, "Member 'SurviveLocomotion_C_OnUpdateStartAnims::K2Node_VariableSet_TotalStartTime_ImplicitCast' has a wrong offset!");

// Function SurviveLocomotion.SurviveLocomotion_C.OnUpdateStopAnims
// 0x0038 (0x0038 - 0x0000)
struct SurviveLocomotion_C_OnUpdateStopAnims final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FAnimationStateResultReference         CallFunc_ConvertToAnimationStateResultPure_AnimationState; // 0x0020(0x0010)(NoDestructor)
	bool                                          CallFunc_ConvertToAnimationStateResultPure_Result; // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveLocomotion_C_OnUpdateStopAnims) == 0x000008, "Wrong alignment on SurviveLocomotion_C_OnUpdateStopAnims");
static_assert(sizeof(SurviveLocomotion_C_OnUpdateStopAnims) == 0x000038, "Wrong size on SurviveLocomotion_C_OnUpdateStopAnims");
static_assert(offsetof(SurviveLocomotion_C_OnUpdateStopAnims, Context) == 0x000000, "Member 'SurviveLocomotion_C_OnUpdateStopAnims::Context' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_OnUpdateStopAnims, Node) == 0x000010, "Member 'SurviveLocomotion_C_OnUpdateStopAnims::Node' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_OnUpdateStopAnims, CallFunc_ConvertToAnimationStateResultPure_AnimationState) == 0x000020, "Member 'SurviveLocomotion_C_OnUpdateStopAnims::CallFunc_ConvertToAnimationStateResultPure_AnimationState' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_OnUpdateStopAnims, CallFunc_ConvertToAnimationStateResultPure_Result) == 0x000030, "Member 'SurviveLocomotion_C_OnUpdateStopAnims::CallFunc_ConvertToAnimationStateResultPure_Result' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_OnUpdateStopAnims, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue) == 0x000034, "Member 'SurviveLocomotion_C_OnUpdateStopAnims::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue' has a wrong offset!");

// Function SurviveLocomotion.SurviveLocomotion_C.SettingMoveStartPos
// 0x0078 (0x0078 - 0x0000)
struct SurviveLocomotion_C_SettingMoveStartPos final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_3;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue_4;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_5;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_6;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_7;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveLocomotion_C_SettingMoveStartPos) == 0x000008, "Wrong alignment on SurviveLocomotion_C_SettingMoveStartPos");
static_assert(sizeof(SurviveLocomotion_C_SettingMoveStartPos) == 0x000078, "Wrong size on SurviveLocomotion_C_SettingMoveStartPos");
static_assert(offsetof(SurviveLocomotion_C_SettingMoveStartPos, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'SurviveLocomotion_C_SettingMoveStartPos::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_SettingMoveStartPos, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000001, "Member 'SurviveLocomotion_C_SettingMoveStartPos::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_SettingMoveStartPos, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'SurviveLocomotion_C_SettingMoveStartPos::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_SettingMoveStartPos, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000010, "Member 'SurviveLocomotion_C_SettingMoveStartPos::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_SettingMoveStartPos, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000018, "Member 'SurviveLocomotion_C_SettingMoveStartPos::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_SettingMoveStartPos, CallFunc_MapRangeClamped_ReturnValue_3) == 0x000020, "Member 'SurviveLocomotion_C_SettingMoveStartPos::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_SettingMoveStartPos, CallFunc_Not_PreBool_ReturnValue_1) == 0x000028, "Member 'SurviveLocomotion_C_SettingMoveStartPos::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_SettingMoveStartPos, CallFunc_SelectFloat_ReturnValue) == 0x000030, "Member 'SurviveLocomotion_C_SettingMoveStartPos::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_SettingMoveStartPos, CallFunc_BooleanAND_ReturnValue) == 0x000038, "Member 'SurviveLocomotion_C_SettingMoveStartPos::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_SettingMoveStartPos, CallFunc_MapRangeClamped_ReturnValue_4) == 0x000040, "Member 'SurviveLocomotion_C_SettingMoveStartPos::CallFunc_MapRangeClamped_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_SettingMoveStartPos, CallFunc_MapRangeClamped_ReturnValue_5) == 0x000048, "Member 'SurviveLocomotion_C_SettingMoveStartPos::CallFunc_MapRangeClamped_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_SettingMoveStartPos, CallFunc_MapRangeClamped_ReturnValue_6) == 0x000050, "Member 'SurviveLocomotion_C_SettingMoveStartPos::CallFunc_MapRangeClamped_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_SettingMoveStartPos, CallFunc_MapRangeClamped_ReturnValue_7) == 0x000058, "Member 'SurviveLocomotion_C_SettingMoveStartPos::CallFunc_MapRangeClamped_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_SettingMoveStartPos, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'SurviveLocomotion_C_SettingMoveStartPos::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_SettingMoveStartPos, CallFunc_SelectFloat_ReturnValue_1) == 0x000068, "Member 'SurviveLocomotion_C_SettingMoveStartPos::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SurviveLocomotion_C_SettingMoveStartPos, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000070, "Member 'SurviveLocomotion_C_SettingMoveStartPos::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function SurviveLocomotion.SurviveLocomotion_C.SMToStrafe
// 0x0001 (0x0001 - 0x0000)
struct SurviveLocomotion_C_SMToStrafe final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveLocomotion_C_SMToStrafe) == 0x000001, "Wrong alignment on SurviveLocomotion_C_SMToStrafe");
static_assert(sizeof(SurviveLocomotion_C_SMToStrafe) == 0x000001, "Wrong size on SurviveLocomotion_C_SMToStrafe");
static_assert(offsetof(SurviveLocomotion_C_SMToStrafe, ReturnValue) == 0x000000, "Member 'SurviveLocomotion_C_SMToStrafe::ReturnValue' has a wrong offset!");

// Function SurviveLocomotion.SurviveLocomotion_C.StopCrouching
// 0x0001 (0x0001 - 0x0000)
struct SurviveLocomotion_C_StopCrouching final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveLocomotion_C_StopCrouching) == 0x000001, "Wrong alignment on SurviveLocomotion_C_StopCrouching");
static_assert(sizeof(SurviveLocomotion_C_StopCrouching) == 0x000001, "Wrong size on SurviveLocomotion_C_StopCrouching");
static_assert(offsetof(SurviveLocomotion_C_StopCrouching, ReturnValue) == 0x000000, "Member 'SurviveLocomotion_C_StopCrouching::ReturnValue' has a wrong offset!");

// Function SurviveLocomotion.SurviveLocomotion_C.StopFromSprint
// 0x0001 (0x0001 - 0x0000)
struct SurviveLocomotion_C_StopFromSprint final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveLocomotion_C_StopFromSprint) == 0x000001, "Wrong alignment on SurviveLocomotion_C_StopFromSprint");
static_assert(sizeof(SurviveLocomotion_C_StopFromSprint) == 0x000001, "Wrong size on SurviveLocomotion_C_StopFromSprint");
static_assert(offsetof(SurviveLocomotion_C_StopFromSprint, ReturnValue) == 0x000000, "Member 'SurviveLocomotion_C_StopFromSprint::ReturnValue' has a wrong offset!");

// Function SurviveLocomotion.SurviveLocomotion_C.StopStanding
// 0x0001 (0x0001 - 0x0000)
struct SurviveLocomotion_C_StopStanding final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveLocomotion_C_StopStanding) == 0x000001, "Wrong alignment on SurviveLocomotion_C_StopStanding");
static_assert(sizeof(SurviveLocomotion_C_StopStanding) == 0x000001, "Wrong size on SurviveLocomotion_C_StopStanding");
static_assert(offsetof(SurviveLocomotion_C_StopStanding, ReturnValue) == 0x000000, "Member 'SurviveLocomotion_C_StopStanding::ReturnValue' has a wrong offset!");

// Function SurviveLocomotion.SurviveLocomotion_C.StrafeBlendOutTimer
// 0x0008 (0x0008 - 0x0000)
struct SurviveLocomotion_C_StrafeBlendOutTimer final
{
public:
	double                                        Time;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveLocomotion_C_StrafeBlendOutTimer) == 0x000008, "Wrong alignment on SurviveLocomotion_C_StrafeBlendOutTimer");
static_assert(sizeof(SurviveLocomotion_C_StrafeBlendOutTimer) == 0x000008, "Wrong size on SurviveLocomotion_C_StrafeBlendOutTimer");
static_assert(offsetof(SurviveLocomotion_C_StrafeBlendOutTimer, Time) == 0x000000, "Member 'SurviveLocomotion_C_StrafeBlendOutTimer::Time' has a wrong offset!");

// Function SurviveLocomotion.SurviveLocomotion_C.ToNormalMovement
// 0x0001 (0x0001 - 0x0000)
struct SurviveLocomotion_C_ToNormalMovement final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveLocomotion_C_ToNormalMovement) == 0x000001, "Wrong alignment on SurviveLocomotion_C_ToNormalMovement");
static_assert(sizeof(SurviveLocomotion_C_ToNormalMovement) == 0x000001, "Wrong size on SurviveLocomotion_C_ToNormalMovement");
static_assert(offsetof(SurviveLocomotion_C_ToNormalMovement, ReturnValue) == 0x000000, "Member 'SurviveLocomotion_C_ToNormalMovement::ReturnValue' has a wrong offset!");

// Function SurviveLocomotion.SurviveLocomotion_C.ToPivot
// 0x0001 (0x0001 - 0x0000)
struct SurviveLocomotion_C_ToPivot final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveLocomotion_C_ToPivot) == 0x000001, "Wrong alignment on SurviveLocomotion_C_ToPivot");
static_assert(sizeof(SurviveLocomotion_C_ToPivot) == 0x000001, "Wrong size on SurviveLocomotion_C_ToPivot");
static_assert(offsetof(SurviveLocomotion_C_ToPivot, ReturnValue) == 0x000000, "Member 'SurviveLocomotion_C_ToPivot::ReturnValue' has a wrong offset!");

// Function SurviveLocomotion.SurviveLocomotion_C.ToSprint
// 0x0001 (0x0001 - 0x0000)
struct SurviveLocomotion_C_ToSprint final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveLocomotion_C_ToSprint) == 0x000001, "Wrong alignment on SurviveLocomotion_C_ToSprint");
static_assert(sizeof(SurviveLocomotion_C_ToSprint) == 0x000001, "Wrong size on SurviveLocomotion_C_ToSprint");
static_assert(offsetof(SurviveLocomotion_C_ToSprint, ReturnValue) == 0x000000, "Member 'SurviveLocomotion_C_ToSprint::ReturnValue' has a wrong offset!");

// Function SurviveLocomotion.SurviveLocomotion_C.ToStartMoving
// 0x0001 (0x0001 - 0x0000)
struct SurviveLocomotion_C_ToStartMoving final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveLocomotion_C_ToStartMoving) == 0x000001, "Wrong alignment on SurviveLocomotion_C_ToStartMoving");
static_assert(sizeof(SurviveLocomotion_C_ToStartMoving) == 0x000001, "Wrong size on SurviveLocomotion_C_ToStartMoving");
static_assert(offsetof(SurviveLocomotion_C_ToStartMoving, ReturnValue) == 0x000000, "Member 'SurviveLocomotion_C_ToStartMoving::ReturnValue' has a wrong offset!");

// Function SurviveLocomotion.SurviveLocomotion_C.ToStop
// 0x0001 (0x0001 - 0x0000)
struct SurviveLocomotion_C_ToStop final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveLocomotion_C_ToStop) == 0x000001, "Wrong alignment on SurviveLocomotion_C_ToStop");
static_assert(sizeof(SurviveLocomotion_C_ToStop) == 0x000001, "Wrong size on SurviveLocomotion_C_ToStop");
static_assert(offsetof(SurviveLocomotion_C_ToStop, ReturnValue) == 0x000000, "Member 'SurviveLocomotion_C_ToStop::ReturnValue' has a wrong offset!");

// Function SurviveLocomotion.SurviveLocomotion_C.WalkRule
// 0x0001 (0x0001 - 0x0000)
struct SurviveLocomotion_C_WalkRule final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SurviveLocomotion_C_WalkRule) == 0x000001, "Wrong alignment on SurviveLocomotion_C_WalkRule");
static_assert(sizeof(SurviveLocomotion_C_WalkRule) == 0x000001, "Wrong size on SurviveLocomotion_C_WalkRule");
static_assert(offsetof(SurviveLocomotion_C_WalkRule, ReturnValue) == 0x000000, "Member 'SurviveLocomotion_C_WalkRule::ReturnValue' has a wrong offset!");

}

