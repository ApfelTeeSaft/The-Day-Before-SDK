#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Point

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Point.WBP_Point_C
// 0x0018 (0x0298 - 0x0280)
class UWBP_Point_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Image_27;                                          // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsReloading;                                       // 0x0290(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAiming;                                          // 0x0291(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AimStateChanged(bool Aim);
	void Construct();
	void ExecuteUbergraph_WBP_Point(int32 EntryPoint);
	void Reloading(double ReloadDuration);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Point_C">();
	}
	static class UWBP_Point_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Point_C>();
	}
};
static_assert(alignof(UWBP_Point_C) == 0x000008, "Wrong alignment on UWBP_Point_C");
static_assert(sizeof(UWBP_Point_C) == 0x000298, "Wrong size on UWBP_Point_C");
static_assert(offsetof(UWBP_Point_C, UberGraphFrame) == 0x000280, "Member 'UWBP_Point_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Point_C, Image_27) == 0x000288, "Member 'UWBP_Point_C::Image_27' has a wrong offset!");
static_assert(offsetof(UWBP_Point_C, IsReloading) == 0x000290, "Member 'UWBP_Point_C::IsReloading' has a wrong offset!");
static_assert(offsetof(UWBP_Point_C, IsAiming) == 0x000291, "Member 'UWBP_Point_C::IsAiming' has a wrong offset!");

}

