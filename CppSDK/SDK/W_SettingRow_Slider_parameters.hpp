#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_SettingRow_Slider

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_SettingDescriptionData_structs.hpp"
#include "FMODStudio_structs.hpp"


namespace SDK::Params
{

// Function W_SettingRow_Slider.W_SettingRow_Slider_C.BndEvt__W_SettingRow_Slider_RowSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct W_SettingRow_Slider_C_BndEvt__W_SettingRow_Slider_RowSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SettingRow_Slider_C_BndEvt__W_SettingRow_Slider_RowSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on W_SettingRow_Slider_C_BndEvt__W_SettingRow_Slider_RowSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature");
static_assert(sizeof(W_SettingRow_Slider_C_BndEvt__W_SettingRow_Slider_RowSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on W_SettingRow_Slider_C_BndEvt__W_SettingRow_Slider_RowSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature");
static_assert(offsetof(W_SettingRow_Slider_C_BndEvt__W_SettingRow_Slider_RowSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature, Value) == 0x000000, "Member 'W_SettingRow_Slider_C_BndEvt__W_SettingRow_Slider_RowSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature::Value' has a wrong offset!");

// Function W_SettingRow_Slider.W_SettingRow_Slider_C.EnableRow
// 0x0018 (0x0018 - 0x0000)
struct W_SettingRow_Slider_C_EnableRow final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SettingRow_Slider_C_EnableRow) == 0x000008, "Wrong alignment on W_SettingRow_Slider_C_EnableRow");
static_assert(sizeof(W_SettingRow_Slider_C_EnableRow) == 0x000018, "Wrong size on W_SettingRow_Slider_C_EnableRow");
static_assert(offsetof(W_SettingRow_Slider_C_EnableRow, Enable) == 0x000000, "Member 'W_SettingRow_Slider_C_EnableRow::Enable' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_EnableRow, Temp_byte_Variable) == 0x000001, "Member 'W_SettingRow_Slider_C_EnableRow::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_EnableRow, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'W_SettingRow_Slider_C_EnableRow::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_EnableRow, Temp_byte_Variable_1) == 0x000010, "Member 'W_SettingRow_Slider_C_EnableRow::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_EnableRow, Temp_bool_Variable) == 0x000011, "Member 'W_SettingRow_Slider_C_EnableRow::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_EnableRow, K2Node_Select_Default) == 0x000012, "Member 'W_SettingRow_Slider_C_EnableRow::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_EnableRow, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x000014, "Member 'W_SettingRow_Slider_C_EnableRow::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");

// Function W_SettingRow_Slider.W_SettingRow_Slider_C.ExecuteUbergraph_W_SettingRow_Slider
// 0x0288 (0x0288 - 0x0000)
struct W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_CurrentValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_MinValue;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_MaxValue;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_StepValue;                      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x002C(0x0038)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0068(0x0078)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x00E0(0x0078)(ConstParm)
	class UUserWidget*                            K2Node_Event_SettingsWidgetRef;                    // 0x0158(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0163(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_165[0x3];                                      // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Settings_C>       K2Node_DynamicCast_AsBPI_Settings;                 // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Settings_C>       K2Node_DynamicCast_AsBPI_Settings_1;               // 0x0180(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Settings_C>       K2Node_DynamicCast_AsBPI_Settings_2;               // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Settings_C>       K2Node_DynamicCast_AsBPI_Settings_3;               // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x01C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x01C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue;                  // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue_1;                // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_DoubleToInt64_ReturnValue;           // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_Int64ToText_ReturnValue;             // 0x01E8(0x0018)()
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_209[0x3];                                      // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x020C(0x0014)()
	double                                        K2Node_CustomEvent_Value;                          // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_DoubleToInt64_ReturnValue_1;         // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_Int64ToText_ReturnValue_1;           // 0x0238(0x0018)()
	double                                        CallFunc_MapRangeClamped_ReturnValue_3;            // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25A[0x6];                                      // 0x025A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Settings_C>       K2Node_DynamicCast_AsBPI_Settings_4;               // 0x0260(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_CurrentValue_ImplicitCast;      // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast_1;      // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider) == 0x000008, "Wrong alignment on W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider");
static_assert(sizeof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider) == 0x000288, "Wrong size on W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider");
static_assert(offsetof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider, EntryPoint) == 0x000000, "Member 'W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider, K2Node_CustomEvent_CurrentValue) == 0x000008, "Member 'W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider::K2Node_CustomEvent_CurrentValue' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider, K2Node_CustomEvent_MinValue) == 0x000010, "Member 'W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider::K2Node_CustomEvent_MinValue' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider, K2Node_CustomEvent_MaxValue) == 0x000018, "Member 'W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider::K2Node_CustomEvent_MaxValue' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider, K2Node_CustomEvent_StepValue) == 0x000020, "Member 'W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider::K2Node_CustomEvent_StepValue' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider, K2Node_ComponentBoundEvent_Value) == 0x000028, "Member 'W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider, K2Node_Event_MyGeometry) == 0x00002C, "Member 'W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider, K2Node_Event_MouseEvent_1) == 0x000068, "Member 'W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider, K2Node_Event_MouseEvent) == 0x0000E0, "Member 'W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider, K2Node_Event_SettingsWidgetRef) == 0x000158, "Member 'W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider::K2Node_Event_SettingsWidgetRef' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider, CallFunc_Not_PreBool_ReturnValue) == 0x000160, "Member 'W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider, CallFunc_IsValid_ReturnValue) == 0x000161, "Member 'W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider, CallFunc_IsValid_ReturnValue_1) == 0x000162, "Member 'W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider, CallFunc_IsValid_ReturnValue_2) == 0x000163, "Member 'W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider, CallFunc_IsValid_ReturnValue_3) == 0x000164, "Member 'W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider, K2Node_DynamicCast_AsBPI_Settings) == 0x000168, "Member 'W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider::K2Node_DynamicCast_AsBPI_Settings' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider, K2Node_DynamicCast_bSuccess) == 0x000178, "Member 'W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider, K2Node_DynamicCast_AsBPI_Settings_1) == 0x000180, "Member 'W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider::K2Node_DynamicCast_AsBPI_Settings_1' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider, K2Node_DynamicCast_bSuccess_1) == 0x000190, "Member 'W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider, K2Node_DynamicCast_AsBPI_Settings_2) == 0x000198, "Member 'W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider::K2Node_DynamicCast_AsBPI_Settings_2' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider, K2Node_DynamicCast_bSuccess_2) == 0x0001A8, "Member 'W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider, K2Node_DynamicCast_AsBPI_Settings_3) == 0x0001B0, "Member 'W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider::K2Node_DynamicCast_AsBPI_Settings_3' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider, K2Node_DynamicCast_bSuccess_3) == 0x0001C0, "Member 'W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider, CallFunc_Not_PreBool_ReturnValue_1) == 0x0001C1, "Member 'W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider, CallFunc_Not_PreBool_ReturnValue_2) == 0x0001C2, "Member 'W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider, CallFunc_Not_PreBool_ReturnValue_3) == 0x0001C3, "Member 'W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider, CallFunc_PlayEvent2D_ReturnValue) == 0x0001C8, "Member 'W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider::CallFunc_PlayEvent2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider, CallFunc_PlayEvent2D_ReturnValue_1) == 0x0001D0, "Member 'W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider::CallFunc_PlayEvent2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider, CallFunc_MapRangeClamped_ReturnValue) == 0x0001D8, "Member 'W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider, CallFunc_Conv_DoubleToInt64_ReturnValue) == 0x0001E0, "Member 'W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider::CallFunc_Conv_DoubleToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider, CallFunc_Conv_Int64ToText_ReturnValue) == 0x0001E8, "Member 'W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider::CallFunc_Conv_Int64ToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000200, "Member 'W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider, K2Node_Event_IsDesignTime) == 0x000208, "Member 'W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider, K2Node_MakeStruct_SlateColor) == 0x00020C, "Member 'W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider, K2Node_CustomEvent_Value) == 0x000220, "Member 'W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000228, "Member 'W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider, CallFunc_Conv_DoubleToInt64_ReturnValue_1) == 0x000230, "Member 'W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider::CallFunc_Conv_DoubleToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider, CallFunc_Conv_Int64ToText_ReturnValue_1) == 0x000238, "Member 'W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider::CallFunc_Conv_Int64ToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider, CallFunc_MapRangeClamped_ReturnValue_3) == 0x000250, "Member 'W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider, CallFunc_IsHovered_ReturnValue) == 0x000258, "Member 'W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider, CallFunc_IsValid_ReturnValue_4) == 0x000259, "Member 'W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider, K2Node_DynamicCast_AsBPI_Settings_4) == 0x000260, "Member 'W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider::K2Node_DynamicCast_AsBPI_Settings_4' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider, K2Node_DynamicCast_bSuccess_4) == 0x000270, "Member 'W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider, K2Node_VariableSet_CurrentValue_ImplicitCast) == 0x000278, "Member 'W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider::K2Node_VariableSet_CurrentValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x000280, "Member 'W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider, CallFunc_SetPercent_InPercent_ImplicitCast_1) == 0x000284, "Member 'W_SettingRow_Slider_C_ExecuteUbergraph_W_SettingRow_Slider::CallFunc_SetPercent_InPercent_ImplicitCast_1' has a wrong offset!");

// Function W_SettingRow_Slider.W_SettingRow_Slider_C.GetIsDefaultValue
// 0x0002 (0x0002 - 0x0000)
struct W_SettingRow_Slider_C_GetIsDefaultValue final
{
public:
	bool                                          Default;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SettingRow_Slider_C_GetIsDefaultValue) == 0x000001, "Wrong alignment on W_SettingRow_Slider_C_GetIsDefaultValue");
static_assert(sizeof(W_SettingRow_Slider_C_GetIsDefaultValue) == 0x000002, "Wrong size on W_SettingRow_Slider_C_GetIsDefaultValue");
static_assert(offsetof(W_SettingRow_Slider_C_GetIsDefaultValue, Default) == 0x000000, "Member 'W_SettingRow_Slider_C_GetIsDefaultValue::Default' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_GetIsDefaultValue, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000001, "Member 'W_SettingRow_Slider_C_GetIsDefaultValue::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function W_SettingRow_Slider.W_SettingRow_Slider_C.GetSettingName
// 0x0008 (0x0008 - 0x0000)
struct W_SettingRow_Slider_C_GetSettingName final
{
public:
	class FName                                   Param_SettingName;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SettingRow_Slider_C_GetSettingName) == 0x000004, "Wrong alignment on W_SettingRow_Slider_C_GetSettingName");
static_assert(sizeof(W_SettingRow_Slider_C_GetSettingName) == 0x000008, "Wrong size on W_SettingRow_Slider_C_GetSettingName");
static_assert(offsetof(W_SettingRow_Slider_C_GetSettingName, Param_SettingName) == 0x000000, "Member 'W_SettingRow_Slider_C_GetSettingName::Param_SettingName' has a wrong offset!");

// Function W_SettingRow_Slider.W_SettingRow_Slider_C.Init
// 0x0020 (0x0020 - 0x0000)
struct W_SettingRow_Slider_C_Init final
{
public:
	double                                        Param_CurrentValue;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Param_MinValue;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Param_MaxValue;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Param_StepValue;                                   // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SettingRow_Slider_C_Init) == 0x000008, "Wrong alignment on W_SettingRow_Slider_C_Init");
static_assert(sizeof(W_SettingRow_Slider_C_Init) == 0x000020, "Wrong size on W_SettingRow_Slider_C_Init");
static_assert(offsetof(W_SettingRow_Slider_C_Init, Param_CurrentValue) == 0x000000, "Member 'W_SettingRow_Slider_C_Init::Param_CurrentValue' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_Init, Param_MinValue) == 0x000008, "Member 'W_SettingRow_Slider_C_Init::Param_MinValue' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_Init, Param_MaxValue) == 0x000010, "Member 'W_SettingRow_Slider_C_Init::Param_MaxValue' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_Init, Param_StepValue) == 0x000018, "Member 'W_SettingRow_Slider_C_Init::Param_StepValue' has a wrong offset!");

// Function W_SettingRow_Slider.W_SettingRow_Slider_C.InitSetting
// 0x0050 (0x0050 - 0x0000)
struct W_SettingRow_Slider_C_InitSetting final
{
public:
	struct FS_SettingDescriptionData              CallFunc_GetDataTableRowFromName_OutRow;           // 0x0000(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SettingRow_Slider_C_InitSetting) == 0x000008, "Wrong alignment on W_SettingRow_Slider_C_InitSetting");
static_assert(sizeof(W_SettingRow_Slider_C_InitSetting) == 0x000050, "Wrong size on W_SettingRow_Slider_C_InitSetting");
static_assert(offsetof(W_SettingRow_Slider_C_InitSetting, CallFunc_GetDataTableRowFromName_OutRow) == 0x000000, "Member 'W_SettingRow_Slider_C_InitSetting::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_InitSetting, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000048, "Member 'W_SettingRow_Slider_C_InitSetting::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function W_SettingRow_Slider.W_SettingRow_Slider_C.IsRowHovered
// 0x0001 (0x0001 - 0x0000)
struct W_SettingRow_Slider_C_IsRowHovered final
{
public:
	bool                                          Param_IsHovered;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SettingRow_Slider_C_IsRowHovered) == 0x000001, "Wrong alignment on W_SettingRow_Slider_C_IsRowHovered");
static_assert(sizeof(W_SettingRow_Slider_C_IsRowHovered) == 0x000001, "Wrong size on W_SettingRow_Slider_C_IsRowHovered");
static_assert(offsetof(W_SettingRow_Slider_C_IsRowHovered, Param_IsHovered) == 0x000000, "Member 'W_SettingRow_Slider_C_IsRowHovered::Param_IsHovered' has a wrong offset!");

// Function W_SettingRow_Slider.W_SettingRow_Slider_C.IsRowSelected
// 0x0001 (0x0001 - 0x0000)
struct W_SettingRow_Slider_C_IsRowSelected final
{
public:
	bool                                          IsSelected;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SettingRow_Slider_C_IsRowSelected) == 0x000001, "Wrong alignment on W_SettingRow_Slider_C_IsRowSelected");
static_assert(sizeof(W_SettingRow_Slider_C_IsRowSelected) == 0x000001, "Wrong size on W_SettingRow_Slider_C_IsRowSelected");
static_assert(offsetof(W_SettingRow_Slider_C_IsRowSelected, IsSelected) == 0x000000, "Member 'W_SettingRow_Slider_C_IsRowSelected::IsSelected' has a wrong offset!");

// Function W_SettingRow_Slider.W_SettingRow_Slider_C.OnKeyValueChanged
// 0x0008 (0x0008 - 0x0000)
struct W_SettingRow_Slider_C_OnKeyValueChanged final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SettingRow_Slider_C_OnKeyValueChanged) == 0x000008, "Wrong alignment on W_SettingRow_Slider_C_OnKeyValueChanged");
static_assert(sizeof(W_SettingRow_Slider_C_OnKeyValueChanged) == 0x000008, "Wrong size on W_SettingRow_Slider_C_OnKeyValueChanged");
static_assert(offsetof(W_SettingRow_Slider_C_OnKeyValueChanged, Value) == 0x000000, "Member 'W_SettingRow_Slider_C_OnKeyValueChanged::Value' has a wrong offset!");

// Function W_SettingRow_Slider.W_SettingRow_Slider_C.OnMouseEnter
// 0x00B0 (0x00B0 - 0x0000)
struct W_SettingRow_Slider_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_SettingRow_Slider_C_OnMouseEnter) == 0x000008, "Wrong alignment on W_SettingRow_Slider_C_OnMouseEnter");
static_assert(sizeof(W_SettingRow_Slider_C_OnMouseEnter) == 0x0000B0, "Wrong size on W_SettingRow_Slider_C_OnMouseEnter");
static_assert(offsetof(W_SettingRow_Slider_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'W_SettingRow_Slider_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'W_SettingRow_Slider_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function W_SettingRow_Slider.W_SettingRow_Slider_C.OnMouseLeave
// 0x0078 (0x0078 - 0x0000)
struct W_SettingRow_Slider_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_SettingRow_Slider_C_OnMouseLeave) == 0x000008, "Wrong alignment on W_SettingRow_Slider_C_OnMouseLeave");
static_assert(sizeof(W_SettingRow_Slider_C_OnMouseLeave) == 0x000078, "Wrong size on W_SettingRow_Slider_C_OnMouseLeave");
static_assert(offsetof(W_SettingRow_Slider_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'W_SettingRow_Slider_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function W_SettingRow_Slider.W_SettingRow_Slider_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_SettingRow_Slider_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SettingRow_Slider_C_PreConstruct) == 0x000001, "Wrong alignment on W_SettingRow_Slider_C_PreConstruct");
static_assert(sizeof(W_SettingRow_Slider_C_PreConstruct) == 0x000001, "Wrong size on W_SettingRow_Slider_C_PreConstruct");
static_assert(offsetof(W_SettingRow_Slider_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_SettingRow_Slider_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_SettingRow_Slider.W_SettingRow_Slider_C.SetDefault
// 0x0008 (0x0008 - 0x0000)
struct W_SettingRow_Slider_C_SetDefault final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SettingRow_Slider_C_SetDefault) == 0x000008, "Wrong alignment on W_SettingRow_Slider_C_SetDefault");
static_assert(sizeof(W_SettingRow_Slider_C_SetDefault) == 0x000008, "Wrong size on W_SettingRow_Slider_C_SetDefault");
static_assert(offsetof(W_SettingRow_Slider_C_SetDefault, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'W_SettingRow_Slider_C_SetDefault::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function W_SettingRow_Slider.W_SettingRow_Slider_C.SetHovered
// 0x0008 (0x0008 - 0x0000)
struct W_SettingRow_Slider_C_SetHovered final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SettingRow_Slider_C_SetHovered) == 0x000008, "Wrong alignment on W_SettingRow_Slider_C_SetHovered");
static_assert(sizeof(W_SettingRow_Slider_C_SetHovered) == 0x000008, "Wrong size on W_SettingRow_Slider_C_SetHovered");
static_assert(offsetof(W_SettingRow_Slider_C_SetHovered, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'W_SettingRow_Slider_C_SetHovered::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function W_SettingRow_Slider.W_SettingRow_Slider_C.SetParentSettingsWidget
// 0x0008 (0x0008 - 0x0000)
struct W_SettingRow_Slider_C_SetParentSettingsWidget final
{
public:
	class UUserWidget*                            SettingsWidgetRef;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SettingRow_Slider_C_SetParentSettingsWidget) == 0x000008, "Wrong alignment on W_SettingRow_Slider_C_SetParentSettingsWidget");
static_assert(sizeof(W_SettingRow_Slider_C_SetParentSettingsWidget) == 0x000008, "Wrong size on W_SettingRow_Slider_C_SetParentSettingsWidget");
static_assert(offsetof(W_SettingRow_Slider_C_SetParentSettingsWidget, SettingsWidgetRef) == 0x000000, "Member 'W_SettingRow_Slider_C_SetParentSettingsWidget::SettingsWidgetRef' has a wrong offset!");

// Function W_SettingRow_Slider.W_SettingRow_Slider_C.SetSelected
// 0x0028 (0x0028 - 0x0000)
struct W_SettingRow_Slider_C_SetSelected final
{
public:
	bool                                          Selected;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SettingRow_Slider_C_SetSelected) == 0x000008, "Wrong alignment on W_SettingRow_Slider_C_SetSelected");
static_assert(sizeof(W_SettingRow_Slider_C_SetSelected) == 0x000028, "Wrong size on W_SettingRow_Slider_C_SetSelected");
static_assert(offsetof(W_SettingRow_Slider_C_SetSelected, Selected) == 0x000000, "Member 'W_SettingRow_Slider_C_SetSelected::Selected' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_SetSelected, Temp_bool_Variable) == 0x000001, "Member 'W_SettingRow_Slider_C_SetSelected::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_SetSelected, Temp_byte_Variable) == 0x000002, "Member 'W_SettingRow_Slider_C_SetSelected::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_SetSelected, Temp_byte_Variable_1) == 0x000003, "Member 'W_SettingRow_Slider_C_SetSelected::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_SetSelected, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000004, "Member 'W_SettingRow_Slider_C_SetSelected::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_SetSelected, CallFunc_SelectColor_ReturnValue) == 0x000008, "Member 'W_SettingRow_Slider_C_SetSelected::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_SetSelected, K2Node_Select_Default) == 0x000018, "Member 'W_SettingRow_Slider_C_SetSelected::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_SetSelected, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'W_SettingRow_Slider_C_SetSelected::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function W_SettingRow_Slider.W_SettingRow_Slider_C.UpdateSliderValues
// 0x0010 (0x0010 - 0x0000)
struct W_SettingRow_Slider_C_UpdateSliderValues final
{
public:
	float                                         CallFunc_SetMinValue_InValue_ImplicitCast;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValue_InValue_ImplicitCast;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMaxValue_InValue_ImplicitCast;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetStepSize_InValue_ImplicitCast;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SettingRow_Slider_C_UpdateSliderValues) == 0x000004, "Wrong alignment on W_SettingRow_Slider_C_UpdateSliderValues");
static_assert(sizeof(W_SettingRow_Slider_C_UpdateSliderValues) == 0x000010, "Wrong size on W_SettingRow_Slider_C_UpdateSliderValues");
static_assert(offsetof(W_SettingRow_Slider_C_UpdateSliderValues, CallFunc_SetMinValue_InValue_ImplicitCast) == 0x000000, "Member 'W_SettingRow_Slider_C_UpdateSliderValues::CallFunc_SetMinValue_InValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_UpdateSliderValues, CallFunc_SetValue_InValue_ImplicitCast) == 0x000004, "Member 'W_SettingRow_Slider_C_UpdateSliderValues::CallFunc_SetValue_InValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_UpdateSliderValues, CallFunc_SetMaxValue_InValue_ImplicitCast) == 0x000008, "Member 'W_SettingRow_Slider_C_UpdateSliderValues::CallFunc_SetMaxValue_InValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_SettingRow_Slider_C_UpdateSliderValues, CallFunc_SetStepSize_InValue_ImplicitCast) == 0x00000C, "Member 'W_SettingRow_Slider_C_UpdateSliderValues::CallFunc_SetStepSize_InValue_ImplicitCast' has a wrong offset!");

// Function W_SettingRow_Slider.W_SettingRow_Slider_C.ValueHasBeenChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_SettingRow_Slider_C_ValueHasBeenChanged__DelegateSignature final
{
public:
	double                                        NewValue;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SettingRow_Slider_C_ValueHasBeenChanged__DelegateSignature) == 0x000008, "Wrong alignment on W_SettingRow_Slider_C_ValueHasBeenChanged__DelegateSignature");
static_assert(sizeof(W_SettingRow_Slider_C_ValueHasBeenChanged__DelegateSignature) == 0x000008, "Wrong size on W_SettingRow_Slider_C_ValueHasBeenChanged__DelegateSignature");
static_assert(offsetof(W_SettingRow_Slider_C_ValueHasBeenChanged__DelegateSignature, NewValue) == 0x000000, "Member 'W_SettingRow_Slider_C_ValueHasBeenChanged__DelegateSignature::NewValue' has a wrong offset!");

}

