#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ControlMapping

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "InputCore_structs.hpp"
#include "FMODStudio_structs.hpp"
#include "S_SettingControlDefault_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "Slate_structs.hpp"


namespace SDK::Params
{

// Function W_ControlMapping.W_ControlMapping_C.BndEvt__W_ControlMapping_FirstKey_K2Node_ComponentBoundEvent_0_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct W_ControlMapping_C_BndEvt__W_ControlMapping_FirstKey_K2Node_ComponentBoundEvent_0_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(W_ControlMapping_C_BndEvt__W_ControlMapping_FirstKey_K2Node_ComponentBoundEvent_0_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on W_ControlMapping_C_BndEvt__W_ControlMapping_FirstKey_K2Node_ComponentBoundEvent_0_OnKeySelected__DelegateSignature");
static_assert(sizeof(W_ControlMapping_C_BndEvt__W_ControlMapping_FirstKey_K2Node_ComponentBoundEvent_0_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on W_ControlMapping_C_BndEvt__W_ControlMapping_FirstKey_K2Node_ComponentBoundEvent_0_OnKeySelected__DelegateSignature");
static_assert(offsetof(W_ControlMapping_C_BndEvt__W_ControlMapping_FirstKey_K2Node_ComponentBoundEvent_0_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'W_ControlMapping_C_BndEvt__W_ControlMapping_FirstKey_K2Node_ComponentBoundEvent_0_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function W_ControlMapping.W_ControlMapping_C.BndEvt__W_ControlMapping_Input_GamepadKey_K2Node_ComponentBoundEvent_3_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct W_ControlMapping_C_BndEvt__W_ControlMapping_Input_GamepadKey_K2Node_ComponentBoundEvent_3_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(W_ControlMapping_C_BndEvt__W_ControlMapping_Input_GamepadKey_K2Node_ComponentBoundEvent_3_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on W_ControlMapping_C_BndEvt__W_ControlMapping_Input_GamepadKey_K2Node_ComponentBoundEvent_3_OnKeySelected__DelegateSignature");
static_assert(sizeof(W_ControlMapping_C_BndEvt__W_ControlMapping_Input_GamepadKey_K2Node_ComponentBoundEvent_3_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on W_ControlMapping_C_BndEvt__W_ControlMapping_Input_GamepadKey_K2Node_ComponentBoundEvent_3_OnKeySelected__DelegateSignature");
static_assert(offsetof(W_ControlMapping_C_BndEvt__W_ControlMapping_Input_GamepadKey_K2Node_ComponentBoundEvent_3_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'W_ControlMapping_C_BndEvt__W_ControlMapping_Input_GamepadKey_K2Node_ComponentBoundEvent_3_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function W_ControlMapping.W_ControlMapping_C.ExecuteUbergraph_W_ControlMapping
// 0x0340 (0x0340 - 0x0000)
struct W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            K2Node_Event_SettingsWidgetRef;                    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0010(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0048(0x0078)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x00C0(0x0078)(ConstParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x013B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13D[0x3];                                      // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Settings_C>       K2Node_DynamicCast_AsBPI_Settings;                 // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Settings_C>       K2Node_DynamicCast_AsBPI_Settings_1;               // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Settings_C>       K2Node_DynamicCast_AsBPI_Settings_2;               // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Settings_C>       K2Node_DynamicCast_AsBPI_Settings_3;               // 0x0188(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19A[0x6];                                      // 0x019A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_1;          // 0x01A0(0x0020)(HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x01C0(0x0018)()
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x01DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DB[0x5];                                      // 0x01DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue;                  // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue_1;                // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue_2;                // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue_3;                // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0208(0x0018)()
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey;            // 0x0220(0x0020)(HasGetValueTypeHash)
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue_4;                // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue;             // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue_5;                // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0260(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FInputChord                            K2Node_CustomEvent_Selected_Key;                   // 0x0268(0x0020)(HasGetValueTypeHash)
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue_6;                // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FKey                                   Temp_struct_Variable;                              // 0x0290(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x02AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x02AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AC[0x4];                                      // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_Select_Default_1;                           // 0x02B0(0x0018)(HasGetValueTypeHash)
	struct FInputChord                            K2Node_SetFieldsInStruct_StructOut;                // 0x02C8(0x0020)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_1;                            // 0x02E8(0x0018)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_Select_Default_2;                           // 0x0308(0x0018)(HasGetValueTypeHash)
	struct FInputChord                            K2Node_SetFieldsInStruct_StructOut_1;              // 0x0320(0x0020)(HasGetValueTypeHash)
};
static_assert(alignof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping) == 0x000008, "Wrong alignment on W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping");
static_assert(sizeof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping) == 0x000340, "Wrong size on W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, EntryPoint) == 0x000000, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, K2Node_Event_SettingsWidgetRef) == 0x000008, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::K2Node_Event_SettingsWidgetRef' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, K2Node_Event_MyGeometry) == 0x000010, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, K2Node_Event_MouseEvent_1) == 0x000048, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, K2Node_Event_MouseEvent) == 0x0000C0, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, CallFunc_Not_PreBool_ReturnValue) == 0x000138, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, CallFunc_IsValid_ReturnValue) == 0x000139, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, CallFunc_IsValid_ReturnValue_1) == 0x00013A, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, CallFunc_IsValid_ReturnValue_2) == 0x00013B, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, CallFunc_IsValid_ReturnValue_3) == 0x00013C, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, K2Node_DynamicCast_AsBPI_Settings) == 0x000140, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::K2Node_DynamicCast_AsBPI_Settings' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, K2Node_DynamicCast_bSuccess) == 0x000150, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, K2Node_DynamicCast_AsBPI_Settings_1) == 0x000158, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::K2Node_DynamicCast_AsBPI_Settings_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, K2Node_DynamicCast_bSuccess_1) == 0x000168, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, K2Node_DynamicCast_AsBPI_Settings_2) == 0x000170, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::K2Node_DynamicCast_AsBPI_Settings_2' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, K2Node_DynamicCast_bSuccess_2) == 0x000180, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, K2Node_DynamicCast_AsBPI_Settings_3) == 0x000188, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::K2Node_DynamicCast_AsBPI_Settings_3' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, K2Node_DynamicCast_bSuccess_3) == 0x000198, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, Temp_bool_Variable) == 0x000199, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, K2Node_ComponentBoundEvent_SelectedKey_1) == 0x0001A0, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::K2Node_ComponentBoundEvent_SelectedKey_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, CallFunc_MakeLiteralText_ReturnValue) == 0x0001C0, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, CallFunc_Not_PreBool_ReturnValue_1) == 0x0001D8, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, CallFunc_Not_PreBool_ReturnValue_2) == 0x0001D9, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, CallFunc_Not_PreBool_ReturnValue_3) == 0x0001DA, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, CallFunc_PlayEvent2D_ReturnValue) == 0x0001E0, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::CallFunc_PlayEvent2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, CallFunc_PlayEvent2D_ReturnValue_1) == 0x0001E8, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::CallFunc_PlayEvent2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, CallFunc_PlayEvent2D_ReturnValue_2) == 0x0001F0, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::CallFunc_PlayEvent2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, CallFunc_PlayEvent2D_ReturnValue_3) == 0x0001F8, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::CallFunc_PlayEvent2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, CallFunc_TextIsEmpty_ReturnValue) == 0x000200, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, K2Node_Select_Default) == 0x000208, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, K2Node_ComponentBoundEvent_SelectedKey) == 0x000220, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::K2Node_ComponentBoundEvent_SelectedKey' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, CallFunc_PlayEvent2D_ReturnValue_4) == 0x000240, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::CallFunc_PlayEvent2D_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, CallFunc_Key_IsGamepadKey_ReturnValue) == 0x000248, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::CallFunc_Key_IsGamepadKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, CallFunc_PlayEvent2D_ReturnValue_5) == 0x000250, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::CallFunc_PlayEvent2D_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, K2Node_Event_IsDesignTime) == 0x000258, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, CallFunc_GetPlayerController_ReturnValue) == 0x000260, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, K2Node_CustomEvent_Selected_Key) == 0x000268, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::K2Node_CustomEvent_Selected_Key' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, CallFunc_PlayEvent2D_ReturnValue_6) == 0x000288, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::CallFunc_PlayEvent2D_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, Temp_struct_Variable) == 0x000290, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x0002A8, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, CallFunc_BooleanOR_ReturnValue) == 0x0002A9, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, Temp_bool_Variable_1) == 0x0002AA, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x0002AB, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, K2Node_Select_Default_1) == 0x0002B0, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, K2Node_SetFieldsInStruct_StructOut) == 0x0002C8, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, Temp_struct_Variable_1) == 0x0002E8, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, Temp_bool_Variable_2) == 0x000300, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, K2Node_Select_Default_2) == 0x000308, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping, K2Node_SetFieldsInStruct_StructOut_1) == 0x000320, "Member 'W_ControlMapping_C_ExecuteUbergraph_W_ControlMapping::K2Node_SetFieldsInStruct_StructOut_1' has a wrong offset!");

// Function W_ControlMapping.W_ControlMapping_C.GetIsDefaultValue
// 0x0128 (0x0128 - 0x0000)
struct W_ControlMapping_C_GetIsDefaultValue final
{
public:
	bool                                          Default;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetKey_Key;                               // 0x0010(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetKey_Key_1;                             // 0x0028(0x0018)(HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_SettingControlDefault               CallFunc_GetDataTableRowFromName_OutRow;           // 0x0058(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_GetKey_Key_2;                             // 0x0080(0x0018)(HasGetValueTypeHash)
	struct FInputActionKeyMapping                 CallFunc_Array_Get_Item;                           // 0x0098(0x0028)()
	struct FKey                                   CallFunc_GetKey_Key_3;                             // 0x00C0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue;             // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputAxisKeyMapping                   CallFunc_Array_Get_Item_1;                         // 0x00E8(0x0028)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_2;          // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_3;          // 0x0113(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue_1;           // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0116(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_117[0x1];                                      // 0x0117(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x011D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x011E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x011F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ControlMapping_C_GetIsDefaultValue) == 0x000008, "Wrong alignment on W_ControlMapping_C_GetIsDefaultValue");
static_assert(sizeof(W_ControlMapping_C_GetIsDefaultValue) == 0x000128, "Wrong size on W_ControlMapping_C_GetIsDefaultValue");
static_assert(offsetof(W_ControlMapping_C_GetIsDefaultValue, Default) == 0x000000, "Member 'W_ControlMapping_C_GetIsDefaultValue::Default' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_GetIsDefaultValue, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'W_ControlMapping_C_GetIsDefaultValue::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_GetIsDefaultValue, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'W_ControlMapping_C_GetIsDefaultValue::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_GetIsDefaultValue, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'W_ControlMapping_C_GetIsDefaultValue::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_GetIsDefaultValue, CallFunc_GetKey_Key) == 0x000010, "Member 'W_ControlMapping_C_GetIsDefaultValue::CallFunc_GetKey_Key' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_GetIsDefaultValue, CallFunc_GetKey_Key_1) == 0x000028, "Member 'W_ControlMapping_C_GetIsDefaultValue::CallFunc_GetKey_Key_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_GetIsDefaultValue, Temp_int_Array_Index_Variable_1) == 0x000040, "Member 'W_ControlMapping_C_GetIsDefaultValue::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_GetIsDefaultValue, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000044, "Member 'W_ControlMapping_C_GetIsDefaultValue::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_GetIsDefaultValue, Temp_int_Loop_Counter_Variable_1) == 0x000048, "Member 'W_ControlMapping_C_GetIsDefaultValue::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_GetIsDefaultValue, K2Node_SwitchEnum_CmpSuccess) == 0x00004C, "Member 'W_ControlMapping_C_GetIsDefaultValue::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_GetIsDefaultValue, CallFunc_Add_IntInt_ReturnValue_1) == 0x000050, "Member 'W_ControlMapping_C_GetIsDefaultValue::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_GetIsDefaultValue, CallFunc_GetDataTableRowFromName_OutRow) == 0x000058, "Member 'W_ControlMapping_C_GetIsDefaultValue::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_GetIsDefaultValue, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000078, "Member 'W_ControlMapping_C_GetIsDefaultValue::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_GetIsDefaultValue, CallFunc_GetKey_Key_2) == 0x000080, "Member 'W_ControlMapping_C_GetIsDefaultValue::CallFunc_GetKey_Key_2' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_GetIsDefaultValue, CallFunc_Array_Get_Item) == 0x000098, "Member 'W_ControlMapping_C_GetIsDefaultValue::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_GetIsDefaultValue, CallFunc_GetKey_Key_3) == 0x0000C0, "Member 'W_ControlMapping_C_GetIsDefaultValue::CallFunc_GetKey_Key_3' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_GetIsDefaultValue, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x0000D8, "Member 'W_ControlMapping_C_GetIsDefaultValue::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_GetIsDefaultValue, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x0000D9, "Member 'W_ControlMapping_C_GetIsDefaultValue::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_GetIsDefaultValue, CallFunc_Not_PreBool_ReturnValue) == 0x0000DA, "Member 'W_ControlMapping_C_GetIsDefaultValue::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_GetIsDefaultValue, CallFunc_Key_IsGamepadKey_ReturnValue) == 0x0000DB, "Member 'W_ControlMapping_C_GetIsDefaultValue::CallFunc_Key_IsGamepadKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_GetIsDefaultValue, CallFunc_BooleanAND_ReturnValue) == 0x0000DC, "Member 'W_ControlMapping_C_GetIsDefaultValue::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_GetIsDefaultValue, CallFunc_Array_Length_ReturnValue) == 0x0000E0, "Member 'W_ControlMapping_C_GetIsDefaultValue::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_GetIsDefaultValue, CallFunc_Array_Get_Item_1) == 0x0000E8, "Member 'W_ControlMapping_C_GetIsDefaultValue::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_GetIsDefaultValue, CallFunc_Less_IntInt_ReturnValue) == 0x000110, "Member 'W_ControlMapping_C_GetIsDefaultValue::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_GetIsDefaultValue, CallFunc_EqualEqual_KeyKey_ReturnValue_2) == 0x000111, "Member 'W_ControlMapping_C_GetIsDefaultValue::CallFunc_EqualEqual_KeyKey_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_GetIsDefaultValue, CallFunc_Not_PreBool_ReturnValue_1) == 0x000112, "Member 'W_ControlMapping_C_GetIsDefaultValue::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_GetIsDefaultValue, CallFunc_EqualEqual_KeyKey_ReturnValue_3) == 0x000113, "Member 'W_ControlMapping_C_GetIsDefaultValue::CallFunc_EqualEqual_KeyKey_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_GetIsDefaultValue, CallFunc_Key_IsGamepadKey_ReturnValue_1) == 0x000114, "Member 'W_ControlMapping_C_GetIsDefaultValue::CallFunc_Key_IsGamepadKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_GetIsDefaultValue, CallFunc_Not_PreBool_ReturnValue_2) == 0x000115, "Member 'W_ControlMapping_C_GetIsDefaultValue::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_GetIsDefaultValue, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000116, "Member 'W_ControlMapping_C_GetIsDefaultValue::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_GetIsDefaultValue, CallFunc_Array_Length_ReturnValue_1) == 0x000118, "Member 'W_ControlMapping_C_GetIsDefaultValue::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_GetIsDefaultValue, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x00011C, "Member 'W_ControlMapping_C_GetIsDefaultValue::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_GetIsDefaultValue, CallFunc_Less_IntInt_ReturnValue_1) == 0x00011D, "Member 'W_ControlMapping_C_GetIsDefaultValue::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_GetIsDefaultValue, CallFunc_BooleanAND_ReturnValue_1) == 0x00011E, "Member 'W_ControlMapping_C_GetIsDefaultValue::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_GetIsDefaultValue, CallFunc_BooleanAND_ReturnValue_2) == 0x00011F, "Member 'W_ControlMapping_C_GetIsDefaultValue::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_GetIsDefaultValue, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000120, "Member 'W_ControlMapping_C_GetIsDefaultValue::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function W_ControlMapping.W_ControlMapping_C.GetMappingName
// 0x0008 (0x0008 - 0x0000)
struct W_ControlMapping_C_GetMappingName final
{
public:
	class FName                                   Param_MappingName;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ControlMapping_C_GetMappingName) == 0x000004, "Wrong alignment on W_ControlMapping_C_GetMappingName");
static_assert(sizeof(W_ControlMapping_C_GetMappingName) == 0x000008, "Wrong size on W_ControlMapping_C_GetMappingName");
static_assert(offsetof(W_ControlMapping_C_GetMappingName, Param_MappingName) == 0x000000, "Member 'W_ControlMapping_C_GetMappingName::Param_MappingName' has a wrong offset!");

// Function W_ControlMapping.W_ControlMapping_C.GetSettingName
// 0x0008 (0x0008 - 0x0000)
struct W_ControlMapping_C_GetSettingName final
{
public:
	class FName                                   SettingName;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ControlMapping_C_GetSettingName) == 0x000004, "Wrong alignment on W_ControlMapping_C_GetSettingName");
static_assert(sizeof(W_ControlMapping_C_GetSettingName) == 0x000008, "Wrong size on W_ControlMapping_C_GetSettingName");
static_assert(offsetof(W_ControlMapping_C_GetSettingName, SettingName) == 0x000000, "Member 'W_ControlMapping_C_GetSettingName::SettingName' has a wrong offset!");

// Function W_ControlMapping.W_ControlMapping_C.Init
// 0x0140 (0x0140 - 0x0000)
struct W_ControlMapping_C_Init final
{
public:
	TArray<struct FInputAxisKeyMapping>           AxisMappings;                                      // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<struct FInputActionKeyMapping>         ActionMappings;                                    // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_2;        // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B[0x1];                                       // 0x004B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputAxisKeyMapping                   CallFunc_Array_Get_Item;                           // 0x0058(0x0028)()
	struct FInputActionKeyMapping                 CallFunc_Array_Get_Item_1;                         // 0x0080(0x0028)()
	bool                                          CallFunc_Key_IsMouseButton_ReturnValue;            // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsKeyboardKey_ReturnValue;            // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsValid_ReturnValue;                  // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsMouseButton_ReturnValue_1;          // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsKeyboardKey_ReturnValue_1;          // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue_1;        // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B7[0x1];                                       // 0x00B7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C7[0x1];                                       // 0x00C7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputAxisKeyMapping                   CallFunc_Array_Get_Item_2;                         // 0x00C8(0x0028)()
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsValid_ReturnValue_1;                // 0x00F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x00F7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsMouseButton_ReturnValue_2;          // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsKeyboardKey_ReturnValue_2;          // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x00FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue_2;        // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue_3;        // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x00FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x00FF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue;             // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FInputActionKeyMapping>         CallFunc_GetActionMappingByName_OutMappings;       // 0x0110(0x0010)(ReferenceParm)
	TArray<struct FInputAxisKeyMapping>           CallFunc_GetAxisMappingByName_OutMappings;         // 0x0120(0x0010)(ReferenceParm)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_1;    // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ControlMapping_C_Init) == 0x000008, "Wrong alignment on W_ControlMapping_C_Init");
static_assert(sizeof(W_ControlMapping_C_Init) == 0x000140, "Wrong size on W_ControlMapping_C_Init");
static_assert(offsetof(W_ControlMapping_C_Init, AxisMappings) == 0x000000, "Member 'W_ControlMapping_C_Init::AxisMappings' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, ActionMappings) == 0x000010, "Member 'W_ControlMapping_C_Init::ActionMappings' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'W_ControlMapping_C_Init::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'W_ControlMapping_C_Init::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, Temp_int_Array_Index_Variable) == 0x000028, "Member 'W_ControlMapping_C_Init::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, Temp_int_Loop_Counter_Variable_1) == 0x00002C, "Member 'W_ControlMapping_C_Init::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'W_ControlMapping_C_Init::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, Temp_bool_True_if_break_was_hit_Variable) == 0x000034, "Member 'W_ControlMapping_C_Init::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, Temp_int_Array_Index_Variable_1) == 0x000038, "Member 'W_ControlMapping_C_Init::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_Not_PreBool_ReturnValue) == 0x00003C, "Member 'W_ControlMapping_C_Init::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, Temp_bool_True_if_break_was_hit_Variable_1) == 0x00003D, "Member 'W_ControlMapping_C_Init::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, Temp_int_Loop_Counter_Variable_2) == 0x000040, "Member 'W_ControlMapping_C_Init::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_Add_IntInt_ReturnValue_2) == 0x000044, "Member 'W_ControlMapping_C_Init::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_Not_PreBool_ReturnValue_1) == 0x000048, "Member 'W_ControlMapping_C_Init::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, Temp_bool_True_if_break_was_hit_Variable_2) == 0x000049, "Member 'W_ControlMapping_C_Init::Temp_bool_True_if_break_was_hit_Variable_2' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_Not_PreBool_ReturnValue_2) == 0x00004A, "Member 'W_ControlMapping_C_Init::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, Temp_int_Array_Index_Variable_2) == 0x00004C, "Member 'W_ControlMapping_C_Init::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000050, "Member 'W_ControlMapping_C_Init::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_Array_Get_Item) == 0x000058, "Member 'W_ControlMapping_C_Init::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_Array_Get_Item_1) == 0x000080, "Member 'W_ControlMapping_C_Init::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_Key_IsMouseButton_ReturnValue) == 0x0000A8, "Member 'W_ControlMapping_C_Init::CallFunc_Key_IsMouseButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_Key_IsKeyboardKey_ReturnValue) == 0x0000A9, "Member 'W_ControlMapping_C_Init::CallFunc_Key_IsKeyboardKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_BooleanOR_ReturnValue) == 0x0000AA, "Member 'W_ControlMapping_C_Init::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_Key_IsValid_ReturnValue) == 0x0000AB, "Member 'W_ControlMapping_C_Init::CallFunc_Key_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_Not_PreBool_ReturnValue_3) == 0x0000AC, "Member 'W_ControlMapping_C_Init::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_Key_IsMouseButton_ReturnValue_1) == 0x0000AD, "Member 'W_ControlMapping_C_Init::CallFunc_Key_IsMouseButton_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_Key_IsKeyboardKey_ReturnValue_1) == 0x0000AE, "Member 'W_ControlMapping_C_Init::CallFunc_Key_IsKeyboardKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000AF, "Member 'W_ControlMapping_C_Init::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_BooleanOR_ReturnValue_1) == 0x0000B0, "Member 'W_ControlMapping_C_Init::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x0000B1, "Member 'W_ControlMapping_C_Init::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_EqualEqual_BoolBool_ReturnValue_1) == 0x0000B2, "Member 'W_ControlMapping_C_Init::CallFunc_EqualEqual_BoolBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_Not_PreBool_ReturnValue_4) == 0x0000B3, "Member 'W_ControlMapping_C_Init::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_BooleanOR_ReturnValue_2) == 0x0000B4, "Member 'W_ControlMapping_C_Init::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_BooleanAND_ReturnValue) == 0x0000B5, "Member 'W_ControlMapping_C_Init::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_BooleanAND_ReturnValue_1) == 0x0000B6, "Member 'W_ControlMapping_C_Init::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_Array_Length_ReturnValue) == 0x0000B8, "Member 'W_ControlMapping_C_Init::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_Less_IntInt_ReturnValue) == 0x0000BC, "Member 'W_ControlMapping_C_Init::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_Array_Length_ReturnValue_1) == 0x0000C0, "Member 'W_ControlMapping_C_Init::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_BooleanAND_ReturnValue_2) == 0x0000C4, "Member 'W_ControlMapping_C_Init::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000C5, "Member 'W_ControlMapping_C_Init::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_BooleanAND_ReturnValue_3) == 0x0000C6, "Member 'W_ControlMapping_C_Init::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_Array_Get_Item_2) == 0x0000C8, "Member 'W_ControlMapping_C_Init::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_Array_Length_ReturnValue_2) == 0x0000F0, "Member 'W_ControlMapping_C_Init::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000F4, "Member 'W_ControlMapping_C_Init::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_BooleanAND_ReturnValue_4) == 0x0000F5, "Member 'W_ControlMapping_C_Init::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_Key_IsValid_ReturnValue_1) == 0x0000F6, "Member 'W_ControlMapping_C_Init::CallFunc_Key_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_Not_PreBool_ReturnValue_5) == 0x0000F7, "Member 'W_ControlMapping_C_Init::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_Key_IsMouseButton_ReturnValue_2) == 0x0000F8, "Member 'W_ControlMapping_C_Init::CallFunc_Key_IsMouseButton_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_Key_IsKeyboardKey_ReturnValue_2) == 0x0000F9, "Member 'W_ControlMapping_C_Init::CallFunc_Key_IsKeyboardKey_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0000FA, "Member 'W_ControlMapping_C_Init::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_BooleanOR_ReturnValue_3) == 0x0000FB, "Member 'W_ControlMapping_C_Init::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_EqualEqual_BoolBool_ReturnValue_2) == 0x0000FC, "Member 'W_ControlMapping_C_Init::CallFunc_EqualEqual_BoolBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_EqualEqual_BoolBool_ReturnValue_3) == 0x0000FD, "Member 'W_ControlMapping_C_Init::CallFunc_EqualEqual_BoolBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_Not_PreBool_ReturnValue_6) == 0x0000FE, "Member 'W_ControlMapping_C_Init::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_BooleanOR_ReturnValue_4) == 0x0000FF, "Member 'W_ControlMapping_C_Init::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_BooleanAND_ReturnValue_5) == 0x000100, "Member 'W_ControlMapping_C_Init::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_BooleanAND_ReturnValue_6) == 0x000101, "Member 'W_ControlMapping_C_Init::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_GetInputSettings_ReturnValue) == 0x000108, "Member 'W_ControlMapping_C_Init::CallFunc_GetInputSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_GetActionMappingByName_OutMappings) == 0x000110, "Member 'W_ControlMapping_C_Init::CallFunc_GetActionMappingByName_OutMappings' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_GetAxisMappingByName_OutMappings) == 0x000120, "Member 'W_ControlMapping_C_Init::CallFunc_GetAxisMappingByName_OutMappings' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000130, "Member 'W_ControlMapping_C_Init::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_Init, CallFunc_Greater_DoubleDouble_A_ImplicitCast_1) == 0x000138, "Member 'W_ControlMapping_C_Init::CallFunc_Greater_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

// Function W_ControlMapping.W_ControlMapping_C.IsRowHovered
// 0x0001 (0x0001 - 0x0000)
struct W_ControlMapping_C_IsRowHovered final
{
public:
	bool                                          Param_IsHovered;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ControlMapping_C_IsRowHovered) == 0x000001, "Wrong alignment on W_ControlMapping_C_IsRowHovered");
static_assert(sizeof(W_ControlMapping_C_IsRowHovered) == 0x000001, "Wrong size on W_ControlMapping_C_IsRowHovered");
static_assert(offsetof(W_ControlMapping_C_IsRowHovered, Param_IsHovered) == 0x000000, "Member 'W_ControlMapping_C_IsRowHovered::Param_IsHovered' has a wrong offset!");

// Function W_ControlMapping.W_ControlMapping_C.IsRowSelected
// 0x0001 (0x0001 - 0x0000)
struct W_ControlMapping_C_IsRowSelected final
{
public:
	bool                                          IsSelected;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ControlMapping_C_IsRowSelected) == 0x000001, "Wrong alignment on W_ControlMapping_C_IsRowSelected");
static_assert(sizeof(W_ControlMapping_C_IsRowSelected) == 0x000001, "Wrong size on W_ControlMapping_C_IsRowSelected");
static_assert(offsetof(W_ControlMapping_C_IsRowSelected, IsSelected) == 0x000000, "Member 'W_ControlMapping_C_IsRowSelected::IsSelected' has a wrong offset!");

// Function W_ControlMapping.W_ControlMapping_C.KeySelected
// 0x0020 (0x0020 - 0x0000)
struct W_ControlMapping_C_KeySelected final
{
public:
	struct FInputChord                            Selected_Key;                                      // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(W_ControlMapping_C_KeySelected) == 0x000008, "Wrong alignment on W_ControlMapping_C_KeySelected");
static_assert(sizeof(W_ControlMapping_C_KeySelected) == 0x000020, "Wrong size on W_ControlMapping_C_KeySelected");
static_assert(offsetof(W_ControlMapping_C_KeySelected, Selected_Key) == 0x000000, "Member 'W_ControlMapping_C_KeySelected::Selected_Key' has a wrong offset!");

// Function W_ControlMapping.W_ControlMapping_C.OnKeyChanging__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct W_ControlMapping_C_OnKeyChanging__DelegateSignature final
{
public:
	bool                                          Changing;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ControlMapping_C_OnKeyChanging__DelegateSignature) == 0x000001, "Wrong alignment on W_ControlMapping_C_OnKeyChanging__DelegateSignature");
static_assert(sizeof(W_ControlMapping_C_OnKeyChanging__DelegateSignature) == 0x000001, "Wrong size on W_ControlMapping_C_OnKeyChanging__DelegateSignature");
static_assert(offsetof(W_ControlMapping_C_OnKeyChanging__DelegateSignature, Changing) == 0x000000, "Member 'W_ControlMapping_C_OnKeyChanging__DelegateSignature::Changing' has a wrong offset!");

// Function W_ControlMapping.W_ControlMapping_C.OnMouseButtonDown
// 0x0220 (0x0220 - 0x0000)
struct W_ControlMapping_C_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0168(0x00B8)()
};
static_assert(alignof(W_ControlMapping_C_OnMouseButtonDown) == 0x000008, "Wrong alignment on W_ControlMapping_C_OnMouseButtonDown");
static_assert(sizeof(W_ControlMapping_C_OnMouseButtonDown) == 0x000220, "Wrong size on W_ControlMapping_C_OnMouseButtonDown");
static_assert(offsetof(W_ControlMapping_C_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'W_ControlMapping_C_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_OnMouseButtonDown, MouseEvent) == 0x000038, "Member 'W_ControlMapping_C_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_OnMouseButtonDown, ReturnValue) == 0x0000B0, "Member 'W_ControlMapping_C_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_OnMouseButtonDown, CallFunc_Handled_ReturnValue) == 0x000168, "Member 'W_ControlMapping_C_OnMouseButtonDown::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function W_ControlMapping.W_ControlMapping_C.OnMouseEnter
// 0x00B0 (0x00B0 - 0x0000)
struct W_ControlMapping_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_ControlMapping_C_OnMouseEnter) == 0x000008, "Wrong alignment on W_ControlMapping_C_OnMouseEnter");
static_assert(sizeof(W_ControlMapping_C_OnMouseEnter) == 0x0000B0, "Wrong size on W_ControlMapping_C_OnMouseEnter");
static_assert(offsetof(W_ControlMapping_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'W_ControlMapping_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'W_ControlMapping_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function W_ControlMapping.W_ControlMapping_C.OnMouseLeave
// 0x0078 (0x0078 - 0x0000)
struct W_ControlMapping_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_ControlMapping_C_OnMouseLeave) == 0x000008, "Wrong alignment on W_ControlMapping_C_OnMouseLeave");
static_assert(sizeof(W_ControlMapping_C_OnMouseLeave) == 0x000078, "Wrong size on W_ControlMapping_C_OnMouseLeave");
static_assert(offsetof(W_ControlMapping_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'W_ControlMapping_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function W_ControlMapping.W_ControlMapping_C.OnMouseWheel
// 0x0298 (0x0298 - 0x0000)
struct W_ControlMapping_C_OnMouseWheel final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_PointerEvent_GetWheelDelta_ReturnValue;   // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0178(0x00B8)()
	struct FInputChord                            K2Node_MakeStruct_InputChord;                      // 0x0230(0x0020)(HasGetValueTypeHash)
	struct FInputChord                            K2Node_MakeStruct_InputChord_1;                    // 0x0250(0x0020)(HasGetValueTypeHash)
	struct FInputChord                            K2Node_Select_Default;                             // 0x0270(0x0020)(HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ControlMapping_C_OnMouseWheel) == 0x000008, "Wrong alignment on W_ControlMapping_C_OnMouseWheel");
static_assert(sizeof(W_ControlMapping_C_OnMouseWheel) == 0x000298, "Wrong size on W_ControlMapping_C_OnMouseWheel");
static_assert(offsetof(W_ControlMapping_C_OnMouseWheel, MyGeometry) == 0x000000, "Member 'W_ControlMapping_C_OnMouseWheel::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_OnMouseWheel, MouseEvent) == 0x000038, "Member 'W_ControlMapping_C_OnMouseWheel::MouseEvent' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_OnMouseWheel, ReturnValue) == 0x0000B0, "Member 'W_ControlMapping_C_OnMouseWheel::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_OnMouseWheel, Temp_bool_Variable) == 0x000168, "Member 'W_ControlMapping_C_OnMouseWheel::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_OnMouseWheel, CallFunc_PointerEvent_GetWheelDelta_ReturnValue) == 0x00016C, "Member 'W_ControlMapping_C_OnMouseWheel::CallFunc_PointerEvent_GetWheelDelta_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_OnMouseWheel, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000170, "Member 'W_ControlMapping_C_OnMouseWheel::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_OnMouseWheel, CallFunc_Unhandled_ReturnValue) == 0x000178, "Member 'W_ControlMapping_C_OnMouseWheel::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_OnMouseWheel, K2Node_MakeStruct_InputChord) == 0x000230, "Member 'W_ControlMapping_C_OnMouseWheel::K2Node_MakeStruct_InputChord' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_OnMouseWheel, K2Node_MakeStruct_InputChord_1) == 0x000250, "Member 'W_ControlMapping_C_OnMouseWheel::K2Node_MakeStruct_InputChord_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_OnMouseWheel, K2Node_Select_Default) == 0x000270, "Member 'W_ControlMapping_C_OnMouseWheel::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_OnMouseWheel, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000290, "Member 'W_ControlMapping_C_OnMouseWheel::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function W_ControlMapping.W_ControlMapping_C.PlayChangeKeyAnimation
// 0x0018 (0x0018 - 0x0000)
struct W_ControlMapping_C_PlayChangeKeyAnimation final
{
public:
	bool                                          IsKeyboard;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          PlayMode;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ControlMapping_C_PlayChangeKeyAnimation) == 0x000008, "Wrong alignment on W_ControlMapping_C_PlayChangeKeyAnimation");
static_assert(sizeof(W_ControlMapping_C_PlayChangeKeyAnimation) == 0x000018, "Wrong size on W_ControlMapping_C_PlayChangeKeyAnimation");
static_assert(offsetof(W_ControlMapping_C_PlayChangeKeyAnimation, IsKeyboard) == 0x000000, "Member 'W_ControlMapping_C_PlayChangeKeyAnimation::IsKeyboard' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_PlayChangeKeyAnimation, PlayMode) == 0x000001, "Member 'W_ControlMapping_C_PlayChangeKeyAnimation::PlayMode' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_PlayChangeKeyAnimation, Temp_bool_Variable) == 0x000002, "Member 'W_ControlMapping_C_PlayChangeKeyAnimation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_PlayChangeKeyAnimation, K2Node_Select_Default) == 0x000008, "Member 'W_ControlMapping_C_PlayChangeKeyAnimation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_PlayChangeKeyAnimation, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'W_ControlMapping_C_PlayChangeKeyAnimation::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function W_ControlMapping.W_ControlMapping_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_ControlMapping_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ControlMapping_C_PreConstruct) == 0x000001, "Wrong alignment on W_ControlMapping_C_PreConstruct");
static_assert(sizeof(W_ControlMapping_C_PreConstruct) == 0x000001, "Wrong size on W_ControlMapping_C_PreConstruct");
static_assert(offsetof(W_ControlMapping_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_ControlMapping_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_ControlMapping.W_ControlMapping_C.RebindKey
// 0x01D0 (0x01D0 - 0x0000)
struct W_ControlMapping_C_RebindKey final
{
public:
	struct FInputChord                            Key;                                               // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          IsKeyboardKey;                                     // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInputAxisKeyMapping>           AxisMappings;                                      // 0x0028(0x0010)(Edit, BlueprintVisible)
	TArray<struct FInputActionKeyMapping>         ActionMapping;                                     // 0x0038(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FInputAxisKeyMapping                   CallFunc_Array_Get_Item;                           // 0x0070(0x0028)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsValid_ReturnValue;                  // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsMouseButton_ReturnValue;            // 0x009F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsKeyboardKey_ReturnValue;            // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsValid_ReturnValue_1;                // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsKeyboardKey_ReturnValue_1;          // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsMouseButton_ReturnValue_1;          // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue_1;        // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AE[0x2];                                       // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionKeyMapping                 CallFunc_Array_Get_Item_1;                         // 0x00B0(0x0028)()
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue_2;        // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsMouseButton_ReturnValue_2;          // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsKeyboardKey_ReturnValue_2;          // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsValid_ReturnValue_2;                // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x00DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsMouseButton_ReturnValue_3;          // 0x00DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsKeyboardKey_ReturnValue_3;          // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue_3;        // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EB[0x5];                                       // 0x00EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue_1;           // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInputAxisKeyMapping>           CallFunc_GetAxisMappingByName_OutMappings;         // 0x0100(0x0010)(ReferenceParm)
	TArray<struct FInputActionKeyMapping>         CallFunc_GetActionMappingByName_OutMappings;       // 0x0110(0x0010)(ReferenceParm)
	class UWBP_KeyIcon_C*                         K2Node_Select_Default;                             // 0x0120(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FInputAxisKeyMapping                   K2Node_MakeStruct_InputAxisKeyMapping;             // 0x0128(0x0028)()
	struct FInputAxisKeyMapping                   K2Node_MakeStruct_InputAxisKeyMapping_1;           // 0x0150(0x0028)()
	struct FInputActionKeyMapping                 K2Node_MakeStruct_InputActionKeyMapping;           // 0x0178(0x0028)()
	struct FInputActionKeyMapping                 K2Node_MakeStruct_InputActionKeyMapping_1;         // 0x01A0(0x0028)()
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ControlMapping_C_RebindKey) == 0x000008, "Wrong alignment on W_ControlMapping_C_RebindKey");
static_assert(sizeof(W_ControlMapping_C_RebindKey) == 0x0001D0, "Wrong size on W_ControlMapping_C_RebindKey");
static_assert(offsetof(W_ControlMapping_C_RebindKey, Key) == 0x000000, "Member 'W_ControlMapping_C_RebindKey::Key' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, IsKeyboardKey) == 0x000020, "Member 'W_ControlMapping_C_RebindKey::IsKeyboardKey' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, AxisMappings) == 0x000028, "Member 'W_ControlMapping_C_RebindKey::AxisMappings' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, ActionMapping) == 0x000038, "Member 'W_ControlMapping_C_RebindKey::ActionMapping' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'W_ControlMapping_C_RebindKey::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'W_ControlMapping_C_RebindKey::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, Temp_int_Array_Index_Variable) == 0x000050, "Member 'W_ControlMapping_C_RebindKey::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, Temp_int_Loop_Counter_Variable_1) == 0x000054, "Member 'W_ControlMapping_C_RebindKey::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, CallFunc_Add_IntInt_ReturnValue_1) == 0x000058, "Member 'W_ControlMapping_C_RebindKey::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, Temp_int_Array_Index_Variable_1) == 0x00005C, "Member 'W_ControlMapping_C_RebindKey::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000060, "Member 'W_ControlMapping_C_RebindKey::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, Temp_bool_Variable) == 0x000061, "Member 'W_ControlMapping_C_RebindKey::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, CallFunc_GetInputSettings_ReturnValue) == 0x000068, "Member 'W_ControlMapping_C_RebindKey::CallFunc_GetInputSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, CallFunc_Array_Get_Item) == 0x000070, "Member 'W_ControlMapping_C_RebindKey::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'W_ControlMapping_C_RebindKey::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'W_ControlMapping_C_RebindKey::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, CallFunc_Key_IsValid_ReturnValue) == 0x00009D, "Member 'W_ControlMapping_C_RebindKey::CallFunc_Key_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, CallFunc_Not_PreBool_ReturnValue) == 0x00009E, "Member 'W_ControlMapping_C_RebindKey::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, CallFunc_Key_IsMouseButton_ReturnValue) == 0x00009F, "Member 'W_ControlMapping_C_RebindKey::CallFunc_Key_IsMouseButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, CallFunc_Key_IsKeyboardKey_ReturnValue) == 0x0000A0, "Member 'W_ControlMapping_C_RebindKey::CallFunc_Key_IsKeyboardKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, CallFunc_Key_IsValid_ReturnValue_1) == 0x0000A1, "Member 'W_ControlMapping_C_RebindKey::CallFunc_Key_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, CallFunc_BooleanOR_ReturnValue) == 0x0000A2, "Member 'W_ControlMapping_C_RebindKey::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000A3, "Member 'W_ControlMapping_C_RebindKey::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x0000A4, "Member 'W_ControlMapping_C_RebindKey::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000A5, "Member 'W_ControlMapping_C_RebindKey::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, CallFunc_BooleanOR_ReturnValue_1) == 0x0000A6, "Member 'W_ControlMapping_C_RebindKey::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, CallFunc_BooleanAND_ReturnValue) == 0x0000A7, "Member 'W_ControlMapping_C_RebindKey::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, CallFunc_Key_IsKeyboardKey_ReturnValue_1) == 0x0000A8, "Member 'W_ControlMapping_C_RebindKey::CallFunc_Key_IsKeyboardKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, CallFunc_Key_IsMouseButton_ReturnValue_1) == 0x0000A9, "Member 'W_ControlMapping_C_RebindKey::CallFunc_Key_IsMouseButton_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000AA, "Member 'W_ControlMapping_C_RebindKey::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, CallFunc_BooleanOR_ReturnValue_2) == 0x0000AB, "Member 'W_ControlMapping_C_RebindKey::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, CallFunc_EqualEqual_BoolBool_ReturnValue_1) == 0x0000AC, "Member 'W_ControlMapping_C_RebindKey::CallFunc_EqualEqual_BoolBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, CallFunc_BooleanAND_ReturnValue_1) == 0x0000AD, "Member 'W_ControlMapping_C_RebindKey::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, CallFunc_Array_Get_Item_1) == 0x0000B0, "Member 'W_ControlMapping_C_RebindKey::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, CallFunc_EqualEqual_BoolBool_ReturnValue_2) == 0x0000D8, "Member 'W_ControlMapping_C_RebindKey::CallFunc_EqualEqual_BoolBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, CallFunc_BooleanOR_ReturnValue_3) == 0x0000D9, "Member 'W_ControlMapping_C_RebindKey::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, CallFunc_Key_IsMouseButton_ReturnValue_2) == 0x0000DA, "Member 'W_ControlMapping_C_RebindKey::CallFunc_Key_IsMouseButton_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, CallFunc_Key_IsKeyboardKey_ReturnValue_2) == 0x0000DB, "Member 'W_ControlMapping_C_RebindKey::CallFunc_Key_IsKeyboardKey_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, CallFunc_Key_IsValid_ReturnValue_2) == 0x0000DC, "Member 'W_ControlMapping_C_RebindKey::CallFunc_Key_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, CallFunc_BooleanOR_ReturnValue_4) == 0x0000DD, "Member 'W_ControlMapping_C_RebindKey::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, CallFunc_Not_PreBool_ReturnValue_3) == 0x0000DE, "Member 'W_ControlMapping_C_RebindKey::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, CallFunc_Key_IsMouseButton_ReturnValue_3) == 0x0000DF, "Member 'W_ControlMapping_C_RebindKey::CallFunc_Key_IsMouseButton_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, CallFunc_Key_IsKeyboardKey_ReturnValue_3) == 0x0000E0, "Member 'W_ControlMapping_C_RebindKey::CallFunc_Key_IsKeyboardKey_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, CallFunc_Array_Length_ReturnValue_1) == 0x0000E4, "Member 'W_ControlMapping_C_RebindKey::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, CallFunc_BooleanOR_ReturnValue_5) == 0x0000E8, "Member 'W_ControlMapping_C_RebindKey::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000E9, "Member 'W_ControlMapping_C_RebindKey::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, CallFunc_EqualEqual_BoolBool_ReturnValue_3) == 0x0000EA, "Member 'W_ControlMapping_C_RebindKey::CallFunc_EqualEqual_BoolBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, CallFunc_GetInputSettings_ReturnValue_1) == 0x0000F0, "Member 'W_ControlMapping_C_RebindKey::CallFunc_GetInputSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, CallFunc_BooleanOR_ReturnValue_6) == 0x0000F8, "Member 'W_ControlMapping_C_RebindKey::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, CallFunc_GetAxisMappingByName_OutMappings) == 0x000100, "Member 'W_ControlMapping_C_RebindKey::CallFunc_GetAxisMappingByName_OutMappings' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, CallFunc_GetActionMappingByName_OutMappings) == 0x000110, "Member 'W_ControlMapping_C_RebindKey::CallFunc_GetActionMappingByName_OutMappings' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, K2Node_Select_Default) == 0x000120, "Member 'W_ControlMapping_C_RebindKey::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, K2Node_MakeStruct_InputAxisKeyMapping) == 0x000128, "Member 'W_ControlMapping_C_RebindKey::K2Node_MakeStruct_InputAxisKeyMapping' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, K2Node_MakeStruct_InputAxisKeyMapping_1) == 0x000150, "Member 'W_ControlMapping_C_RebindKey::K2Node_MakeStruct_InputAxisKeyMapping_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, K2Node_MakeStruct_InputActionKeyMapping) == 0x000178, "Member 'W_ControlMapping_C_RebindKey::K2Node_MakeStruct_InputActionKeyMapping' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, K2Node_MakeStruct_InputActionKeyMapping_1) == 0x0001A0, "Member 'W_ControlMapping_C_RebindKey::K2Node_MakeStruct_InputActionKeyMapping_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_RebindKey, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0001C8, "Member 'W_ControlMapping_C_RebindKey::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function W_ControlMapping.W_ControlMapping_C.ResetControls
// 0x0240 (0x0240 - 0x0000)
struct W_ControlMapping_C_ResetControls final
{
public:
	TArray<struct FInputAxisKeyMapping>           DefaultAxisKeys;                                   // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<struct FInputActionKeyMapping>         DefaultActionKeys;                                 // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputAxisKeyMapping                   CallFunc_Array_Get_Item;                           // 0x0050(0x0028)()
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInputActionKeyMapping                 CallFunc_Array_Get_Item_1;                         // 0x0090(0x0028)()
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputAxisKeyMapping                   CallFunc_Array_Get_Item_2;                         // 0x00C0(0x0028)()
	struct FS_SettingControlDefault               CallFunc_GetDataTableRowFromName_OutRow;           // 0x00E8(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionKeyMapping                 CallFunc_Array_Get_Item_3;                         // 0x0120(0x0028)()
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_SettingControlDefault               CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0150(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue;             // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue_1;           // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FInputActionKeyMapping                 CallFunc_Array_Get_Item_4;                         // 0x0198(0x0028)()
	TArray<struct FInputActionKeyMapping>         CallFunc_GetActionMappingByName_OutMappings;       // 0x01C0(0x0010)(ReferenceParm)
	struct FInputActionKeyMapping                 CallFunc_Array_Get_Item_5;                         // 0x01D0(0x0028)()
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue_2;           // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0205(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_206[0x2];                                      // 0x0206(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue_3;           // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FInputAxisKeyMapping>           CallFunc_GetAxisMappingByName_OutMappings;         // 0x0210(0x0010)(ReferenceParm)
	TArray<struct FInputActionKeyMapping>         CallFunc_GetActionMappingByName_OutMappings_1;     // 0x0220(0x0010)(ReferenceParm)
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue_4;           // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue_5;           // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ControlMapping_C_ResetControls) == 0x000008, "Wrong alignment on W_ControlMapping_C_ResetControls");
static_assert(sizeof(W_ControlMapping_C_ResetControls) == 0x000240, "Wrong size on W_ControlMapping_C_ResetControls");
static_assert(offsetof(W_ControlMapping_C_ResetControls, DefaultAxisKeys) == 0x000000, "Member 'W_ControlMapping_C_ResetControls::DefaultAxisKeys' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, DefaultActionKeys) == 0x000010, "Member 'W_ControlMapping_C_ResetControls::DefaultActionKeys' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'W_ControlMapping_C_ResetControls::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'W_ControlMapping_C_ResetControls::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, Temp_int_Array_Index_Variable) == 0x000028, "Member 'W_ControlMapping_C_ResetControls::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'W_ControlMapping_C_ResetControls::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, Temp_int_Array_Index_Variable_1) == 0x000030, "Member 'W_ControlMapping_C_ResetControls::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, CallFunc_Array_Length_ReturnValue_1) == 0x000034, "Member 'W_ControlMapping_C_ResetControls::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, Temp_int_Loop_Counter_Variable_1) == 0x000038, "Member 'W_ControlMapping_C_ResetControls::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'W_ControlMapping_C_ResetControls::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'W_ControlMapping_C_ResetControls::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, Temp_int_Array_Index_Variable_2) == 0x000044, "Member 'W_ControlMapping_C_ResetControls::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, Temp_int_Loop_Counter_Variable_2) == 0x000048, "Member 'W_ControlMapping_C_ResetControls::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, CallFunc_Array_Get_Item) == 0x000050, "Member 'W_ControlMapping_C_ResetControls::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, CallFunc_Add_IntInt_ReturnValue_2) == 0x000078, "Member 'W_ControlMapping_C_ResetControls::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, Temp_int_Loop_Counter_Variable_3) == 0x00007C, "Member 'W_ControlMapping_C_ResetControls::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, CallFunc_Less_IntInt_ReturnValue_1) == 0x000080, "Member 'W_ControlMapping_C_ResetControls::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, CallFunc_Add_IntInt_ReturnValue_3) == 0x000084, "Member 'W_ControlMapping_C_ResetControls::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, Temp_int_Array_Index_Variable_3) == 0x000088, "Member 'W_ControlMapping_C_ResetControls::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, Temp_int_Loop_Counter_Variable_4) == 0x00008C, "Member 'W_ControlMapping_C_ResetControls::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, CallFunc_Array_Get_Item_1) == 0x000090, "Member 'W_ControlMapping_C_ResetControls::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000B8, "Member 'W_ControlMapping_C_ResetControls::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, CallFunc_Array_Get_Item_2) == 0x0000C0, "Member 'W_ControlMapping_C_ResetControls::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000E8, "Member 'W_ControlMapping_C_ResetControls::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000108, "Member 'W_ControlMapping_C_ResetControls::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, CallFunc_Array_Length_ReturnValue_2) == 0x00010C, "Member 'W_ControlMapping_C_ResetControls::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, CallFunc_Less_IntInt_ReturnValue_2) == 0x000110, "Member 'W_ControlMapping_C_ResetControls::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, CallFunc_Array_Length_ReturnValue_3) == 0x000114, "Member 'W_ControlMapping_C_ResetControls::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, CallFunc_Less_IntInt_ReturnValue_3) == 0x000118, "Member 'W_ControlMapping_C_ResetControls::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, CallFunc_Array_Get_Item_3) == 0x000120, "Member 'W_ControlMapping_C_ResetControls::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, CallFunc_Array_Length_ReturnValue_4) == 0x000148, "Member 'W_ControlMapping_C_ResetControls::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, CallFunc_Less_IntInt_ReturnValue_4) == 0x00014C, "Member 'W_ControlMapping_C_ResetControls::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000150, "Member 'W_ControlMapping_C_ResetControls::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000170, "Member 'W_ControlMapping_C_ResetControls::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, CallFunc_Array_Length_ReturnValue_5) == 0x000174, "Member 'W_ControlMapping_C_ResetControls::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, CallFunc_Greater_IntInt_ReturnValue) == 0x000178, "Member 'W_ControlMapping_C_ResetControls::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, CallFunc_GetInputSettings_ReturnValue) == 0x000180, "Member 'W_ControlMapping_C_ResetControls::CallFunc_GetInputSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, Temp_int_Array_Index_Variable_4) == 0x000188, "Member 'W_ControlMapping_C_ResetControls::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, CallFunc_GetInputSettings_ReturnValue_1) == 0x000190, "Member 'W_ControlMapping_C_ResetControls::CallFunc_GetInputSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, CallFunc_Array_Get_Item_4) == 0x000198, "Member 'W_ControlMapping_C_ResetControls::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, CallFunc_GetActionMappingByName_OutMappings) == 0x0001C0, "Member 'W_ControlMapping_C_ResetControls::CallFunc_GetActionMappingByName_OutMappings' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, CallFunc_Array_Get_Item_5) == 0x0001D0, "Member 'W_ControlMapping_C_ResetControls::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, CallFunc_GetInputSettings_ReturnValue_2) == 0x0001F8, "Member 'W_ControlMapping_C_ResetControls::CallFunc_GetInputSettings_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, CallFunc_Array_Length_ReturnValue_6) == 0x000200, "Member 'W_ControlMapping_C_ResetControls::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, K2Node_SwitchEnum_CmpSuccess) == 0x000204, "Member 'W_ControlMapping_C_ResetControls::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000205, "Member 'W_ControlMapping_C_ResetControls::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, CallFunc_GetInputSettings_ReturnValue_3) == 0x000208, "Member 'W_ControlMapping_C_ResetControls::CallFunc_GetInputSettings_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, CallFunc_GetAxisMappingByName_OutMappings) == 0x000210, "Member 'W_ControlMapping_C_ResetControls::CallFunc_GetAxisMappingByName_OutMappings' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, CallFunc_GetActionMappingByName_OutMappings_1) == 0x000220, "Member 'W_ControlMapping_C_ResetControls::CallFunc_GetActionMappingByName_OutMappings_1' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, CallFunc_GetInputSettings_ReturnValue_4) == 0x000230, "Member 'W_ControlMapping_C_ResetControls::CallFunc_GetInputSettings_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_ResetControls, CallFunc_GetInputSettings_ReturnValue_5) == 0x000238, "Member 'W_ControlMapping_C_ResetControls::CallFunc_GetInputSettings_ReturnValue_5' has a wrong offset!");

// Function W_ControlMapping.W_ControlMapping_C.SetDefault
// 0x0008 (0x0008 - 0x0000)
struct W_ControlMapping_C_SetDefault final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ControlMapping_C_SetDefault) == 0x000008, "Wrong alignment on W_ControlMapping_C_SetDefault");
static_assert(sizeof(W_ControlMapping_C_SetDefault) == 0x000008, "Wrong size on W_ControlMapping_C_SetDefault");
static_assert(offsetof(W_ControlMapping_C_SetDefault, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'W_ControlMapping_C_SetDefault::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function W_ControlMapping.W_ControlMapping_C.SetHovered
// 0x0008 (0x0008 - 0x0000)
struct W_ControlMapping_C_SetHovered final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ControlMapping_C_SetHovered) == 0x000008, "Wrong alignment on W_ControlMapping_C_SetHovered");
static_assert(sizeof(W_ControlMapping_C_SetHovered) == 0x000008, "Wrong size on W_ControlMapping_C_SetHovered");
static_assert(offsetof(W_ControlMapping_C_SetHovered, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'W_ControlMapping_C_SetHovered::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function W_ControlMapping.W_ControlMapping_C.SetParentSettingsWidget
// 0x0008 (0x0008 - 0x0000)
struct W_ControlMapping_C_SetParentSettingsWidget final
{
public:
	class UUserWidget*                            SettingsWidgetRef;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ControlMapping_C_SetParentSettingsWidget) == 0x000008, "Wrong alignment on W_ControlMapping_C_SetParentSettingsWidget");
static_assert(sizeof(W_ControlMapping_C_SetParentSettingsWidget) == 0x000008, "Wrong size on W_ControlMapping_C_SetParentSettingsWidget");
static_assert(offsetof(W_ControlMapping_C_SetParentSettingsWidget, SettingsWidgetRef) == 0x000000, "Member 'W_ControlMapping_C_SetParentSettingsWidget::SettingsWidgetRef' has a wrong offset!");

// Function W_ControlMapping.W_ControlMapping_C.UpdateKeyIcon
// 0x0020 (0x0020 - 0x0000)
struct W_ControlMapping_C_UpdateKeyIcon final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Shift;                                             // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ctrl;                                              // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Alt;                                               // 0x001A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Cmd;                                               // 0x001B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsMouseButton_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsKeyboardKey_ReturnValue;            // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue;             // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ControlMapping_C_UpdateKeyIcon) == 0x000008, "Wrong alignment on W_ControlMapping_C_UpdateKeyIcon");
static_assert(sizeof(W_ControlMapping_C_UpdateKeyIcon) == 0x000020, "Wrong size on W_ControlMapping_C_UpdateKeyIcon");
static_assert(offsetof(W_ControlMapping_C_UpdateKeyIcon, Key) == 0x000000, "Member 'W_ControlMapping_C_UpdateKeyIcon::Key' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_UpdateKeyIcon, Shift) == 0x000018, "Member 'W_ControlMapping_C_UpdateKeyIcon::Shift' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_UpdateKeyIcon, Ctrl) == 0x000019, "Member 'W_ControlMapping_C_UpdateKeyIcon::Ctrl' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_UpdateKeyIcon, Alt) == 0x00001A, "Member 'W_ControlMapping_C_UpdateKeyIcon::Alt' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_UpdateKeyIcon, Cmd) == 0x00001B, "Member 'W_ControlMapping_C_UpdateKeyIcon::Cmd' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_UpdateKeyIcon, CallFunc_Key_IsMouseButton_ReturnValue) == 0x00001C, "Member 'W_ControlMapping_C_UpdateKeyIcon::CallFunc_Key_IsMouseButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_UpdateKeyIcon, CallFunc_Key_IsKeyboardKey_ReturnValue) == 0x00001D, "Member 'W_ControlMapping_C_UpdateKeyIcon::CallFunc_Key_IsKeyboardKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_UpdateKeyIcon, CallFunc_Key_IsGamepadKey_ReturnValue) == 0x00001E, "Member 'W_ControlMapping_C_UpdateKeyIcon::CallFunc_Key_IsGamepadKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ControlMapping_C_UpdateKeyIcon, CallFunc_BooleanOR_ReturnValue) == 0x00001F, "Member 'W_ControlMapping_C_UpdateKeyIcon::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function W_ControlMapping.W_ControlMapping_C.ValueChanged__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct W_ControlMapping_C_ValueChanged__DelegateSignature final
{
public:
	struct FInputChord                            NewParam;                                          // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(W_ControlMapping_C_ValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on W_ControlMapping_C_ValueChanged__DelegateSignature");
static_assert(sizeof(W_ControlMapping_C_ValueChanged__DelegateSignature) == 0x000020, "Wrong size on W_ControlMapping_C_ValueChanged__DelegateSignature");
static_assert(offsetof(W_ControlMapping_C_ValueChanged__DelegateSignature, NewParam) == 0x000000, "Member 'W_ControlMapping_C_ValueChanged__DelegateSignature::NewParam' has a wrong offset!");

}

