#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ElevatorTeleport

#include "Basic.hpp"

#include "E_InteractType_structs.hpp"
#include "Teleport_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ElevatorTeleportState_structs.hpp"
#include "E_ActorType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass ElevatorTeleport.ElevatorTeleport_C
// 0x01D0 (0x04D8 - 0x0308)
class AElevatorTeleport_C : public ATeleport_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_ElevatorTeleport_C;                 // 0x0308(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          BoxDoorCollision;                                  // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight3;                                        // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight2;                                        // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight1;                                        // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight;                                         // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube4;                                             // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube3;                                             // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube2;                                             // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube1;                                             // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube;                                              // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh2;                                       // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh1;                                       // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        SDoor2;                                            // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        SDoor1;                                            // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Mesh1;                                             // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   InnerPanel;                                        // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Blocker;                                           // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        AcceptPoint;                                       // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	ElevatorTeleportState                         State;                                             // 0x03A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A9[0x7];                                      // 0x03A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Door1ClosedLocation;                               // 0x03B0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Door2ClosedLocation;                               // 0x03C8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Door1OpenedLocation;                               // 0x03E0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Door2OpenedLocation;                               // 0x03F8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DoorOffset;                                        // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DoorsLerpAlpha;                                    // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DoorsSpeed;                                        // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AutoCloseDoorsTimeout;                             // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SpentTimeSinceDoorsOpened;                         // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TeleportTimeout;                                   // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SpentTimeSincePreparingToTeleport;                 // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IElevatorTeleportRecieverV2_C> Reciever;                                          // 0x0448(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 RecieverActor;                                     // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	double                                        RecieveActorsTimeout;                              // 0x0460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SpentTimeSinceRecieveActors;                       // 0x0468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WaitUntilActorsLeave;                              // 0x0470(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_471[0x7];                                      // 0x0471(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AElevatorTeleportPanel_C*               Panel;                                             // 0x0478(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    MoveSound;                                         // 0x0480(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Test;                                              // 0x0488(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DontHandleExit;                                    // 0x0489(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TeleportOnClose;                                   // 0x048A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48B[0x5];                                      // 0x048B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        OpenDoorsPause;                                    // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Accum;                                             // 0x0498(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BeginOpenHandled;                                  // 0x04A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AutoOpenAndHold;                                   // 0x04A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A2[0x6];                                      // 0x04A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      TeleportedActor;                                   // 0x04A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USmoothSync*                            TeleportedActorSmoothSync;                         // 0x04B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NewLocationTeleportedActor;                        // 0x04B8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsElevatorBusy;                                   // 0x04D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BeginOpeningDoors();
	void BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__ElevatorTeleport_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__ElevatorTeleport_BoxDoorCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void CanRecieveActors(bool* CanRecieve);
	void CloseDoors();
	void DestroyInteractable();
	void DisableInnerPanel();
	void EnableInnerPanel();
	void ExecuteUbergraph_ElevatorTeleport(int32 EntryPoint);
	void GetActorType(E_ActorType* ActorType);
	void GetDestination(struct FVector* Param_Destination);
	void GetRotation(struct FRotator* Rotation);
	void HasActorsInside(bool* HasActors);
	void HideBlocker();
	void IsLocked_(bool* Result);
	void OnBeginInteract(class APawn* Player);
	void OnClosingDoors();
	void OnDoorsClosed();
	void OnDoorsOpened();
	void OnFocused(class APawn* Player, class AActor* HighlightActor, class UActorComponent* HighlightActorComponent, E_InteractType* InteractType, double* LateTime);
	void OnInteract(class APawn* Player);
	void OnInteract2(class APawn* Player);
	void OnInteract3(class APawn* Player);
	void OnInteractVehicle(class APawn* Player, int32 SitIndex, bool SkipAnimation);
	void OnLocalInteract(class APawn* Player);
	void OnLostFocus(class APawn* Player);
	void OnOpeningDoors();
	void OnPreparingTeleport();
	void OnSeen(class APawn* Player);
	void OnSquadCheckComplete();
	void OnStopInteract(class APawn* Player);
	void OnTeleportTimeout();
	void OpenDoors(bool Param_WaitUntilActorsLeave);
	void PrepareForRecieve();
	void PreRecieve();
	void ProcessClosingDoorsState(double DeltaTime);
	void ProcessOpenedState(double DeltaTime);
	void ProcessOpeningDoorsState(double DeltaTime);
	void ProcessPreparingToTeleportState(double DeltaTime);
	void ProcessRecievingActorsState(double DeltaTime);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void RecieveActors(class ATeleport_C* Sender);
	void RecieverCanAcceptActors(bool* CanRecieve);
	void Run_Lockpicking();
	void Set3DWidgetVisibility(bool Visible);
	void SetDoorCollisionOff();
	void SetDoorCollisionOn();
	void SetElevatorBusy();
	void SetElevatorDestination(class AActor* ElevatorDestination);
	void SetElevatorNotBusy();
	void SetState(ElevatorTeleportState Param_State);
	void SetTutorial3DWidgetVisibility(bool Visible);
	void ShowBlocker();
	void TeleportActor(class AActor* Actor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ElevatorTeleport_C">();
	}
	static class AElevatorTeleport_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AElevatorTeleport_C>();
	}
};
static_assert(alignof(AElevatorTeleport_C) == 0x000008, "Wrong alignment on AElevatorTeleport_C");
static_assert(sizeof(AElevatorTeleport_C) == 0x0004D8, "Wrong size on AElevatorTeleport_C");
static_assert(offsetof(AElevatorTeleport_C, UberGraphFrame_ElevatorTeleport_C) == 0x000308, "Member 'AElevatorTeleport_C::UberGraphFrame_ElevatorTeleport_C' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, BoxDoorCollision) == 0x000310, "Member 'AElevatorTeleport_C::BoxDoorCollision' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, SpotLight3) == 0x000318, "Member 'AElevatorTeleport_C::SpotLight3' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, SpotLight2) == 0x000320, "Member 'AElevatorTeleport_C::SpotLight2' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, SpotLight1) == 0x000328, "Member 'AElevatorTeleport_C::SpotLight1' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, SpotLight) == 0x000330, "Member 'AElevatorTeleport_C::SpotLight' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, Cube4) == 0x000338, "Member 'AElevatorTeleport_C::Cube4' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, Cube3) == 0x000340, "Member 'AElevatorTeleport_C::Cube3' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, Cube2) == 0x000348, "Member 'AElevatorTeleport_C::Cube2' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, Cube1) == 0x000350, "Member 'AElevatorTeleport_C::Cube1' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, Cube) == 0x000358, "Member 'AElevatorTeleport_C::Cube' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, StaticMesh2) == 0x000360, "Member 'AElevatorTeleport_C::StaticMesh2' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, StaticMesh1) == 0x000368, "Member 'AElevatorTeleport_C::StaticMesh1' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, SDoor2) == 0x000370, "Member 'AElevatorTeleport_C::SDoor2' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, StaticMesh) == 0x000378, "Member 'AElevatorTeleport_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, SDoor1) == 0x000380, "Member 'AElevatorTeleport_C::SDoor1' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, Mesh1) == 0x000388, "Member 'AElevatorTeleport_C::Mesh1' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, InnerPanel) == 0x000390, "Member 'AElevatorTeleport_C::InnerPanel' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, Blocker) == 0x000398, "Member 'AElevatorTeleport_C::Blocker' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, AcceptPoint) == 0x0003A0, "Member 'AElevatorTeleport_C::AcceptPoint' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, State) == 0x0003A8, "Member 'AElevatorTeleport_C::State' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, Door1ClosedLocation) == 0x0003B0, "Member 'AElevatorTeleport_C::Door1ClosedLocation' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, Door2ClosedLocation) == 0x0003C8, "Member 'AElevatorTeleport_C::Door2ClosedLocation' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, Door1OpenedLocation) == 0x0003E0, "Member 'AElevatorTeleport_C::Door1OpenedLocation' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, Door2OpenedLocation) == 0x0003F8, "Member 'AElevatorTeleport_C::Door2OpenedLocation' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, DoorOffset) == 0x000410, "Member 'AElevatorTeleport_C::DoorOffset' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, DoorsLerpAlpha) == 0x000418, "Member 'AElevatorTeleport_C::DoorsLerpAlpha' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, DoorsSpeed) == 0x000420, "Member 'AElevatorTeleport_C::DoorsSpeed' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, AutoCloseDoorsTimeout) == 0x000428, "Member 'AElevatorTeleport_C::AutoCloseDoorsTimeout' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, SpentTimeSinceDoorsOpened) == 0x000430, "Member 'AElevatorTeleport_C::SpentTimeSinceDoorsOpened' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, TeleportTimeout) == 0x000438, "Member 'AElevatorTeleport_C::TeleportTimeout' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, SpentTimeSincePreparingToTeleport) == 0x000440, "Member 'AElevatorTeleport_C::SpentTimeSincePreparingToTeleport' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, Reciever) == 0x000448, "Member 'AElevatorTeleport_C::Reciever' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, RecieverActor) == 0x000458, "Member 'AElevatorTeleport_C::RecieverActor' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, RecieveActorsTimeout) == 0x000460, "Member 'AElevatorTeleport_C::RecieveActorsTimeout' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, SpentTimeSinceRecieveActors) == 0x000468, "Member 'AElevatorTeleport_C::SpentTimeSinceRecieveActors' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, WaitUntilActorsLeave) == 0x000470, "Member 'AElevatorTeleport_C::WaitUntilActorsLeave' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, Panel) == 0x000478, "Member 'AElevatorTeleport_C::Panel' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, MoveSound) == 0x000480, "Member 'AElevatorTeleport_C::MoveSound' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, Test) == 0x000488, "Member 'AElevatorTeleport_C::Test' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, DontHandleExit) == 0x000489, "Member 'AElevatorTeleport_C::DontHandleExit' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, TeleportOnClose) == 0x00048A, "Member 'AElevatorTeleport_C::TeleportOnClose' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, OpenDoorsPause) == 0x000490, "Member 'AElevatorTeleport_C::OpenDoorsPause' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, Accum) == 0x000498, "Member 'AElevatorTeleport_C::Accum' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, BeginOpenHandled) == 0x0004A0, "Member 'AElevatorTeleport_C::BeginOpenHandled' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, AutoOpenAndHold) == 0x0004A1, "Member 'AElevatorTeleport_C::AutoOpenAndHold' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, TeleportedActor) == 0x0004A8, "Member 'AElevatorTeleport_C::TeleportedActor' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, TeleportedActorSmoothSync) == 0x0004B0, "Member 'AElevatorTeleport_C::TeleportedActorSmoothSync' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, NewLocationTeleportedActor) == 0x0004B8, "Member 'AElevatorTeleport_C::NewLocationTeleportedActor' has a wrong offset!");
static_assert(offsetof(AElevatorTeleport_C, bIsElevatorBusy) == 0x0004D0, "Member 'AElevatorTeleport_C::bIsElevatorBusy' has a wrong offset!");

}

