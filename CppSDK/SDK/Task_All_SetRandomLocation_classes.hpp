#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Task_All_SetRandomLocation

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Task_All_SetRandomLocation.Task_All_SetRandomLocation_C
// 0x0070 (0x0118 - 0x00A8)
class UTask_All_SetRandomLocation_C final : public UBTTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          SelfLoc_;                                          // 0x00B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlackboardKeySelector                 InputLocation_Origin_;                             // 0x00B8(0x0028)(Edit, BlueprintVisible)
	double                                        PatrulRadius;                                      // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBlackboardKeySelector                 OutputLoc;                                         // 0x00E8(0x0028)(Edit, BlueprintVisible)
	class UClass*                                 FilterClass;                                       // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Task_All_SetRandomLocation(int32 EntryPoint);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Task_All_SetRandomLocation_C">();
	}
	static class UTask_All_SetRandomLocation_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTask_All_SetRandomLocation_C>();
	}
};
static_assert(alignof(UTask_All_SetRandomLocation_C) == 0x000008, "Wrong alignment on UTask_All_SetRandomLocation_C");
static_assert(sizeof(UTask_All_SetRandomLocation_C) == 0x000118, "Wrong size on UTask_All_SetRandomLocation_C");
static_assert(offsetof(UTask_All_SetRandomLocation_C, UberGraphFrame) == 0x0000A8, "Member 'UTask_All_SetRandomLocation_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTask_All_SetRandomLocation_C, SelfLoc_) == 0x0000B0, "Member 'UTask_All_SetRandomLocation_C::SelfLoc_' has a wrong offset!");
static_assert(offsetof(UTask_All_SetRandomLocation_C, InputLocation_Origin_) == 0x0000B8, "Member 'UTask_All_SetRandomLocation_C::InputLocation_Origin_' has a wrong offset!");
static_assert(offsetof(UTask_All_SetRandomLocation_C, PatrulRadius) == 0x0000E0, "Member 'UTask_All_SetRandomLocation_C::PatrulRadius' has a wrong offset!");
static_assert(offsetof(UTask_All_SetRandomLocation_C, OutputLoc) == 0x0000E8, "Member 'UTask_All_SetRandomLocation_C::OutputLoc' has a wrong offset!");
static_assert(offsetof(UTask_All_SetRandomLocation_C, FilterClass) == 0x000110, "Member 'UTask_All_SetRandomLocation_C::FilterClass' has a wrong offset!");

}

