#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SGInventoryWorker

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "FItemInfo_structs.hpp"


namespace SDK::Params
{

// Function SGInventoryWorker.SGInventoryWorker_C.AddGuideItems
// 0x0005 (0x0005 - 0x0000)
struct SGInventoryWorker_C_AddGuideItems final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FunctionResult;                                    // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSGStashExist_Exist;                     // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddGuideItems_Result;                     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SGInventoryWorker_C_AddGuideItems) == 0x000001, "Wrong alignment on SGInventoryWorker_C_AddGuideItems");
static_assert(sizeof(SGInventoryWorker_C_AddGuideItems) == 0x000005, "Wrong size on SGInventoryWorker_C_AddGuideItems");
static_assert(offsetof(SGInventoryWorker_C_AddGuideItems, Result) == 0x000000, "Member 'SGInventoryWorker_C_AddGuideItems::Result' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_AddGuideItems, FunctionResult) == 0x000001, "Member 'SGInventoryWorker_C_AddGuideItems::FunctionResult' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_AddGuideItems, CallFunc_IsSGStashExist_Exist) == 0x000002, "Member 'SGInventoryWorker_C_AddGuideItems::CallFunc_IsSGStashExist_Exist' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_AddGuideItems, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'SGInventoryWorker_C_AddGuideItems::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_AddGuideItems, CallFunc_AddGuideItems_Result) == 0x000004, "Member 'SGInventoryWorker_C_AddGuideItems::CallFunc_AddGuideItems_Result' has a wrong offset!");

// Function SGInventoryWorker.SGInventoryWorker_C.ExecuteUbergraph_SGInventoryWorker
// 0x0300 (0x0300 - 0x0000)
struct SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Stash_C*                            K2Node_DynamicCast_AsBP_Stash;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USG_PlayerInventory_C*                  K2Node_DynamicCast_AsSG_Player_Inventory;          // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UTDBJsonObject*                         CallFunc_Convert_To_Json_Object_Json;              // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWithEditor_ReturnValue;                 // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWithEditor_ReturnValue_1;               // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGI_Survival_C*                         K2Node_DynamicCast_AsGI_Survival;                  // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_Survival_C*                         K2Node_DynamicCast_AsGI_Survival_1;                // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTDBJsonObject*                         CallFunc_Convert_To_Json_Object_Json_1;            // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_InteractiveSafe_C*                  K2Node_DynamicCast_AsBP_Interactive_Safe;          // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      CallFunc_GetPlayerRef_NewParam;                    // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Stash_C*                            K2Node_DynamicCast_AsBP_Stash_1;                   // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player_1;            // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F2[0x6];                                       // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player_2;            // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USG_PlayerInventory_C*                  CallFunc_SpawnObject_ReturnValue;                  // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_165[0x3];                                      // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_StashPlayerInventory_Arr;                 // 0x0170(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsWithEditor_ReturnValue_2;               // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_3;                   // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player_3;            // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              K2Node_CustomEvent_time;                           // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_Now_ReturnValue;                          // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              K2Node_CustomEvent_TimeP;                          // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_4;                   // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player_4;            // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x3];                                      // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BreakDateTime_Year;                       // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Month;                      // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Day;                        // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Hour;                       // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Minute;                     // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Second;                     // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Millisecond;                // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x01E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x01F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0208(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x0218(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_4;           // 0x0228(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_TimeCashReady__rdy_;                      // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         K2Node_MakeArray_Array;                            // 0x0240(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_5;                   // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0258(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0268(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         K2Node_MakeArray_Array_1;                          // 0x0278(0x0010)(ConstParm, ReferenceParm)
	class UTDBJsonObject*                         K2Node_Event_Json;                                 // 0x0288(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         K2Node_Event_StrAr;                                // 0x0290(0x0010)(ConstParm, ReferenceParm)
	TArray<class FString>                         CallFunc_StashPlayerInventory_Arr_1;               // 0x02A0(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x02B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x02C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item_2;                         // 0x02D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x02E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F5[0x3];                                      // 0x02F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker) == 0x000008, "Wrong alignment on SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker");
static_assert(sizeof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker) == 0x000300, "Wrong size on SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, EntryPoint) == 0x000000, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::EntryPoint' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000018, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, K2Node_DynamicCast_AsBP_Stash) == 0x000020, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::K2Node_DynamicCast_AsBP_Stash' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, K2Node_DynamicCast_AsSG_Player_Inventory) == 0x000030, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::K2Node_DynamicCast_AsSG_Player_Inventory' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_GetDisplayName_ReturnValue) == 0x000040, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_Concat_StrStr_ReturnValue) == 0x000050, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_Convert_To_Json_Object_Json) == 0x000060, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_Convert_To_Json_Object_Json' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, K2Node_DynamicCast_AsSurvival_Player) == 0x000068, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_IsLocallyControlled_ReturnValue) == 0x000071, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_IsWithEditor_ReturnValue) == 0x000072, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_IsWithEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_IsWithEditor_ReturnValue_1) == 0x000073, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_IsWithEditor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_GetGameInstance_ReturnValue) == 0x000078, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_GetGameInstance_ReturnValue_1) == 0x000080, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, K2Node_DynamicCast_AsGI_Survival) == 0x000088, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::K2Node_DynamicCast_AsGI_Survival' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, K2Node_DynamicCast_bSuccess_3) == 0x000090, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, K2Node_DynamicCast_AsGI_Survival_1) == 0x000098, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::K2Node_DynamicCast_AsGI_Survival_1' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, K2Node_DynamicCast_bSuccess_4) == 0x0000A0, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_Convert_To_Json_Object_Json_1) == 0x0000A8, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_Convert_To_Json_Object_Json_1' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_GetOwner_ReturnValue_1) == 0x0000B0, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, Temp_int_Loop_Counter_Variable_1) == 0x0000B8, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, K2Node_DynamicCast_AsBP_Interactive_Safe) == 0x0000C0, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::K2Node_DynamicCast_AsBP_Interactive_Safe' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, K2Node_DynamicCast_bSuccess_5) == 0x0000C8, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000CC, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_GetPlayerRef_NewParam) == 0x0000D0, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_GetPlayerRef_NewParam' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, K2Node_DynamicCast_AsBP_Stash_1) == 0x0000D8, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::K2Node_DynamicCast_AsBP_Stash_1' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, K2Node_DynamicCast_bSuccess_6) == 0x0000E0, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, K2Node_DynamicCast_AsSurvival_Player_1) == 0x0000E8, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::K2Node_DynamicCast_AsSurvival_Player_1' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, K2Node_DynamicCast_bSuccess_7) == 0x0000F0, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x0000F1, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_GetOwner_ReturnValue_2) == 0x0000F8, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, K2Node_DynamicCast_AsSurvival_Player_2) == 0x000100, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::K2Node_DynamicCast_AsSurvival_Player_2' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, K2Node_DynamicCast_bSuccess_8) == 0x000108, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, Temp_int_Array_Index_Variable) == 0x00010C, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_GetPlayerController_ReturnValue) == 0x000110, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_SpawnObject_ReturnValue) == 0x000118, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_SaveGameToSlot_ReturnValue) == 0x000120, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_Array_Get_Item) == 0x000128, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_Array_Length_ReturnValue) == 0x000138, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000140, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_Array_Length_ReturnValue_1) == 0x000150, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, Temp_int_Array_Index_Variable_1) == 0x000154, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_Greater_IntInt_ReturnValue) == 0x000158, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, Temp_int_Loop_Counter_Variable_2) == 0x00015C, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, Temp_int_Array_Index_Variable_2) == 0x000160, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_Less_IntInt_ReturnValue) == 0x000164, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_Add_IntInt_ReturnValue_2) == 0x000168, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_StashPlayerInventory_Arr) == 0x000170, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_StashPlayerInventory_Arr' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_IsWithEditor_ReturnValue_2) == 0x000180, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_IsWithEditor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_GetOwner_ReturnValue_3) == 0x000188, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_GetOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, K2Node_DynamicCast_AsSurvival_Player_3) == 0x000190, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::K2Node_DynamicCast_AsSurvival_Player_3' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, K2Node_DynamicCast_bSuccess_9) == 0x000198, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, K2Node_CustomEvent_time) == 0x0001A0, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::K2Node_CustomEvent_time' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_Now_ReturnValue) == 0x0001A8, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_Now_ReturnValue' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, K2Node_CustomEvent_TimeP) == 0x0001B0, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::K2Node_CustomEvent_TimeP' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_GetOwner_ReturnValue_4) == 0x0001B8, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_GetOwner_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, K2Node_DynamicCast_AsSurvival_Player_4) == 0x0001C0, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::K2Node_DynamicCast_AsSurvival_Player_4' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, K2Node_DynamicCast_bSuccess_10) == 0x0001C8, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_BreakDateTime_Year) == 0x0001CC, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_BreakDateTime_Year' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_BreakDateTime_Month) == 0x0001D0, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_BreakDateTime_Month' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_BreakDateTime_Day) == 0x0001D4, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_BreakDateTime_Day' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_BreakDateTime_Hour) == 0x0001D8, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_BreakDateTime_Hour' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_BreakDateTime_Minute) == 0x0001DC, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_BreakDateTime_Minute' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_BreakDateTime_Second) == 0x0001E0, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_BreakDateTime_Second' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_BreakDateTime_Millisecond) == 0x0001E4, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_BreakDateTime_Millisecond' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_Conv_IntToString_ReturnValue) == 0x0001E8, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_Conv_IntToString_ReturnValue_1) == 0x0001F8, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000208, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_Conv_IntToString_ReturnValue_3) == 0x000218, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_Conv_IntToString_ReturnValue_4) == 0x000228, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_Conv_IntToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_TimeCashReady__rdy_) == 0x000238, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_TimeCashReady__rdy_' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, K2Node_MakeArray_Array) == 0x000240, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_GetOwner_ReturnValue_5) == 0x000250, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_GetOwner_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_GetDisplayName_ReturnValue_1) == 0x000258, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000268, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, K2Node_MakeArray_Array_1) == 0x000278, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, K2Node_Event_Json) == 0x000288, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::K2Node_Event_Json' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, K2Node_Event_StrAr) == 0x000290, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::K2Node_Event_StrAr' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_StashPlayerInventory_Arr_1) == 0x0002A0, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_StashPlayerInventory_Arr_1' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_Array_Get_Item_1) == 0x0002B0, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0002C0, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_Array_Get_Item_2) == 0x0002D0, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0002E0, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_Array_Length_ReturnValue_2) == 0x0002F0, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002F4, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_Array_Length_ReturnValue_3) == 0x0002F8, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker, CallFunc_Less_IntInt_ReturnValue_2) == 0x0002FC, "Member 'SGInventoryWorker_C_ExecuteUbergraph_SGInventoryWorker::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");

// Function SGInventoryWorker.SGInventoryWorker_C.IsSGStashExist
// 0x0002 (0x0002 - 0x0000)
struct SGInventoryWorker_C_IsSGStashExist final
{
public:
	bool                                          Exist;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SGInventoryWorker_C_IsSGStashExist) == 0x000001, "Wrong alignment on SGInventoryWorker_C_IsSGStashExist");
static_assert(sizeof(SGInventoryWorker_C_IsSGStashExist) == 0x000002, "Wrong size on SGInventoryWorker_C_IsSGStashExist");
static_assert(offsetof(SGInventoryWorker_C_IsSGStashExist, Exist) == 0x000000, "Member 'SGInventoryWorker_C_IsSGStashExist::Exist' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_IsSGStashExist, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000001, "Member 'SGInventoryWorker_C_IsSGStashExist::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");

// Function SGInventoryWorker.SGInventoryWorker_C.PastServerTimeLocal
// 0x0008 (0x0008 - 0x0000)
struct SGInventoryWorker_C_PastServerTimeLocal final
{
public:
	struct FDateTime                              TimeP;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SGInventoryWorker_C_PastServerTimeLocal) == 0x000008, "Wrong alignment on SGInventoryWorker_C_PastServerTimeLocal");
static_assert(sizeof(SGInventoryWorker_C_PastServerTimeLocal) == 0x000008, "Wrong size on SGInventoryWorker_C_PastServerTimeLocal");
static_assert(offsetof(SGInventoryWorker_C_PastServerTimeLocal, TimeP) == 0x000000, "Member 'SGInventoryWorker_C_PastServerTimeLocal::TimeP' has a wrong offset!");

// Function SGInventoryWorker.SGInventoryWorker_C.PushInventory
// 0x0018 (0x0018 - 0x0000)
struct SGInventoryWorker_C_PushInventory final
{
public:
	class UTDBJsonObject*                         Json;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         StrAr;                                             // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(SGInventoryWorker_C_PushInventory) == 0x000008, "Wrong alignment on SGInventoryWorker_C_PushInventory");
static_assert(sizeof(SGInventoryWorker_C_PushInventory) == 0x000018, "Wrong size on SGInventoryWorker_C_PushInventory");
static_assert(offsetof(SGInventoryWorker_C_PushInventory, Json) == 0x000000, "Member 'SGInventoryWorker_C_PushInventory::Json' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_PushInventory, StrAr) == 0x000008, "Member 'SGInventoryWorker_C_PushInventory::StrAr' has a wrong offset!");

// Function SGInventoryWorker.SGInventoryWorker_C.RealServerTimeLocal
// 0x0008 (0x0008 - 0x0000)
struct SGInventoryWorker_C_RealServerTimeLocal final
{
public:
	struct FDateTime                              Time;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SGInventoryWorker_C_RealServerTimeLocal) == 0x000008, "Wrong alignment on SGInventoryWorker_C_RealServerTimeLocal");
static_assert(sizeof(SGInventoryWorker_C_RealServerTimeLocal) == 0x000008, "Wrong size on SGInventoryWorker_C_RealServerTimeLocal");
static_assert(offsetof(SGInventoryWorker_C_RealServerTimeLocal, Time) == 0x000000, "Member 'SGInventoryWorker_C_RealServerTimeLocal::Time' has a wrong offset!");

// Function SGInventoryWorker.SGInventoryWorker_C.StashPlayerInventory
// 0x0078 (0x0078 - 0x0000)
struct SGInventoryWorker_C_StashPlayerInventory final
{
public:
	TArray<class FString>                         Param_Arr;                                         // 0x0000(0x0010)(Parm, OutParm)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryCollector_C*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_CollectInventory_Data;                    // 0x0040(0x0010)(ReferenceParm)
	TArray<struct FFItemInfo>                     CallFunc_CollectInventory_ContainersData;          // 0x0050(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<struct FFItemInfo>                     CallFunc_CollectInventory_ContainerItems;          // 0x0060(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_CollectInventory_Succes_;                 // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SGInventoryWorker_C_StashPlayerInventory) == 0x000008, "Wrong alignment on SGInventoryWorker_C_StashPlayerInventory");
static_assert(sizeof(SGInventoryWorker_C_StashPlayerInventory) == 0x000078, "Wrong size on SGInventoryWorker_C_StashPlayerInventory");
static_assert(offsetof(SGInventoryWorker_C_StashPlayerInventory, Param_Arr) == 0x000000, "Member 'SGInventoryWorker_C_StashPlayerInventory::Param_Arr' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_StashPlayerInventory, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'SGInventoryWorker_C_StashPlayerInventory::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_StashPlayerInventory, CallFunc_K2_GetPawn_ReturnValue) == 0x000018, "Member 'SGInventoryWorker_C_StashPlayerInventory::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_StashPlayerInventory, K2Node_DynamicCast_AsSurvival_Player) == 0x000020, "Member 'SGInventoryWorker_C_StashPlayerInventory::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_StashPlayerInventory, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'SGInventoryWorker_C_StashPlayerInventory::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_StashPlayerInventory, CallFunc_GetComponentByClass_ReturnValue) == 0x000030, "Member 'SGInventoryWorker_C_StashPlayerInventory::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_StashPlayerInventory, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'SGInventoryWorker_C_StashPlayerInventory::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_StashPlayerInventory, CallFunc_CollectInventory_Data) == 0x000040, "Member 'SGInventoryWorker_C_StashPlayerInventory::CallFunc_CollectInventory_Data' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_StashPlayerInventory, CallFunc_CollectInventory_ContainersData) == 0x000050, "Member 'SGInventoryWorker_C_StashPlayerInventory::CallFunc_CollectInventory_ContainersData' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_StashPlayerInventory, CallFunc_CollectInventory_ContainerItems) == 0x000060, "Member 'SGInventoryWorker_C_StashPlayerInventory::CallFunc_CollectInventory_ContainerItems' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_StashPlayerInventory, CallFunc_CollectInventory_Succes_) == 0x000070, "Member 'SGInventoryWorker_C_StashPlayerInventory::CallFunc_CollectInventory_Succes_' has a wrong offset!");

// Function SGInventoryWorker.SGInventoryWorker_C.TimeCashReady?
// 0x007C (0x007C - 0x0000)
struct SGInventoryWorker_C_TimeCashReady_ final
{
public:
	bool                                          Rdy_;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BreakDateTime_Year;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Month;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Day;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Hour;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Minute;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Second;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Millisecond;                // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Year_1;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Month_1;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Day_1;                      // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Hour_1;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Minute_1;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Second_1;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Millisecond_1;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BreakDateTime_Year_2;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Month_2;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Day_2;                      // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Hour_2;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Minute_2;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Second_2;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Millisecond_2;              // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SGInventoryWorker_C_TimeCashReady_) == 0x000004, "Wrong alignment on SGInventoryWorker_C_TimeCashReady_");
static_assert(sizeof(SGInventoryWorker_C_TimeCashReady_) == 0x00007C, "Wrong size on SGInventoryWorker_C_TimeCashReady_");
static_assert(offsetof(SGInventoryWorker_C_TimeCashReady_, Rdy_) == 0x000000, "Member 'SGInventoryWorker_C_TimeCashReady_::Rdy_' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_TimeCashReady_, CallFunc_BreakDateTime_Year) == 0x000004, "Member 'SGInventoryWorker_C_TimeCashReady_::CallFunc_BreakDateTime_Year' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_TimeCashReady_, CallFunc_BreakDateTime_Month) == 0x000008, "Member 'SGInventoryWorker_C_TimeCashReady_::CallFunc_BreakDateTime_Month' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_TimeCashReady_, CallFunc_BreakDateTime_Day) == 0x00000C, "Member 'SGInventoryWorker_C_TimeCashReady_::CallFunc_BreakDateTime_Day' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_TimeCashReady_, CallFunc_BreakDateTime_Hour) == 0x000010, "Member 'SGInventoryWorker_C_TimeCashReady_::CallFunc_BreakDateTime_Hour' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_TimeCashReady_, CallFunc_BreakDateTime_Minute) == 0x000014, "Member 'SGInventoryWorker_C_TimeCashReady_::CallFunc_BreakDateTime_Minute' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_TimeCashReady_, CallFunc_BreakDateTime_Second) == 0x000018, "Member 'SGInventoryWorker_C_TimeCashReady_::CallFunc_BreakDateTime_Second' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_TimeCashReady_, CallFunc_BreakDateTime_Millisecond) == 0x00001C, "Member 'SGInventoryWorker_C_TimeCashReady_::CallFunc_BreakDateTime_Millisecond' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_TimeCashReady_, CallFunc_BreakDateTime_Year_1) == 0x000020, "Member 'SGInventoryWorker_C_TimeCashReady_::CallFunc_BreakDateTime_Year_1' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_TimeCashReady_, CallFunc_BreakDateTime_Month_1) == 0x000024, "Member 'SGInventoryWorker_C_TimeCashReady_::CallFunc_BreakDateTime_Month_1' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_TimeCashReady_, CallFunc_BreakDateTime_Day_1) == 0x000028, "Member 'SGInventoryWorker_C_TimeCashReady_::CallFunc_BreakDateTime_Day_1' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_TimeCashReady_, CallFunc_BreakDateTime_Hour_1) == 0x00002C, "Member 'SGInventoryWorker_C_TimeCashReady_::CallFunc_BreakDateTime_Hour_1' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_TimeCashReady_, CallFunc_BreakDateTime_Minute_1) == 0x000030, "Member 'SGInventoryWorker_C_TimeCashReady_::CallFunc_BreakDateTime_Minute_1' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_TimeCashReady_, CallFunc_BreakDateTime_Second_1) == 0x000034, "Member 'SGInventoryWorker_C_TimeCashReady_::CallFunc_BreakDateTime_Second_1' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_TimeCashReady_, CallFunc_BreakDateTime_Millisecond_1) == 0x000038, "Member 'SGInventoryWorker_C_TimeCashReady_::CallFunc_BreakDateTime_Millisecond_1' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_TimeCashReady_, CallFunc_Multiply_IntInt_ReturnValue) == 0x00003C, "Member 'SGInventoryWorker_C_TimeCashReady_::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_TimeCashReady_, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x000040, "Member 'SGInventoryWorker_C_TimeCashReady_::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_TimeCashReady_, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'SGInventoryWorker_C_TimeCashReady_::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_TimeCashReady_, CallFunc_Add_IntInt_ReturnValue_1) == 0x000048, "Member 'SGInventoryWorker_C_TimeCashReady_::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_TimeCashReady_, CallFunc_Greater_IntInt_ReturnValue) == 0x00004C, "Member 'SGInventoryWorker_C_TimeCashReady_::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_TimeCashReady_, CallFunc_Subtract_IntInt_ReturnValue) == 0x000050, "Member 'SGInventoryWorker_C_TimeCashReady_::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_TimeCashReady_, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000054, "Member 'SGInventoryWorker_C_TimeCashReady_::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_TimeCashReady_, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000055, "Member 'SGInventoryWorker_C_TimeCashReady_::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_TimeCashReady_, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000056, "Member 'SGInventoryWorker_C_TimeCashReady_::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_TimeCashReady_, CallFunc_BooleanOR_ReturnValue) == 0x000057, "Member 'SGInventoryWorker_C_TimeCashReady_::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_TimeCashReady_, CallFunc_BooleanOR_ReturnValue_1) == 0x000058, "Member 'SGInventoryWorker_C_TimeCashReady_::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_TimeCashReady_, CallFunc_BooleanOR_ReturnValue_2) == 0x000059, "Member 'SGInventoryWorker_C_TimeCashReady_::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_TimeCashReady_, CallFunc_BreakDateTime_Year_2) == 0x00005C, "Member 'SGInventoryWorker_C_TimeCashReady_::CallFunc_BreakDateTime_Year_2' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_TimeCashReady_, CallFunc_BreakDateTime_Month_2) == 0x000060, "Member 'SGInventoryWorker_C_TimeCashReady_::CallFunc_BreakDateTime_Month_2' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_TimeCashReady_, CallFunc_BreakDateTime_Day_2) == 0x000064, "Member 'SGInventoryWorker_C_TimeCashReady_::CallFunc_BreakDateTime_Day_2' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_TimeCashReady_, CallFunc_BreakDateTime_Hour_2) == 0x000068, "Member 'SGInventoryWorker_C_TimeCashReady_::CallFunc_BreakDateTime_Hour_2' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_TimeCashReady_, CallFunc_BreakDateTime_Minute_2) == 0x00006C, "Member 'SGInventoryWorker_C_TimeCashReady_::CallFunc_BreakDateTime_Minute_2' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_TimeCashReady_, CallFunc_BreakDateTime_Second_2) == 0x000070, "Member 'SGInventoryWorker_C_TimeCashReady_::CallFunc_BreakDateTime_Second_2' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_TimeCashReady_, CallFunc_BreakDateTime_Millisecond_2) == 0x000074, "Member 'SGInventoryWorker_C_TimeCashReady_::CallFunc_BreakDateTime_Millisecond_2' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_TimeCashReady_, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000078, "Member 'SGInventoryWorker_C_TimeCashReady_::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SGInventoryWorker_C_TimeCashReady_, CallFunc_BooleanAND_ReturnValue) == 0x000079, "Member 'SGInventoryWorker_C_TimeCashReady_::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

