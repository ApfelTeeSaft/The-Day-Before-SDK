#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_GS_TDB

#include "Basic.hpp"

#include "E_Works_structs.hpp"


namespace SDK::Params
{

// Function BPI_GS_TDB.BPI_GS_TDB_C.GetBunkerSystem
// 0x0008 (0x0008 - 0x0000)
struct BPI_GS_TDB_C_GetBunkerSystem final
{
public:
	class UBunkerSystem_C*                        BunkerSystem;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_GS_TDB_C_GetBunkerSystem) == 0x000008, "Wrong alignment on BPI_GS_TDB_C_GetBunkerSystem");
static_assert(sizeof(BPI_GS_TDB_C_GetBunkerSystem) == 0x000008, "Wrong size on BPI_GS_TDB_C_GetBunkerSystem");
static_assert(offsetof(BPI_GS_TDB_C_GetBunkerSystem, BunkerSystem) == 0x000000, "Member 'BPI_GS_TDB_C_GetBunkerSystem::BunkerSystem' has a wrong offset!");

// Function BPI_GS_TDB.BPI_GS_TDB_C.GetLootZonesByQuests
// 0x0020 (0x0020 - 0x0000)
struct BPI_GS_TDB_C_GetLootZonesByQuests final
{
public:
	TArray<class UQuest*>                         Quests;                                            // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class ABP_QuestItemsSpawnZone_C*>      Zones;                                             // 0x0010(0x0010)(Parm, OutParm)
};
static_assert(alignof(BPI_GS_TDB_C_GetLootZonesByQuests) == 0x000008, "Wrong alignment on BPI_GS_TDB_C_GetLootZonesByQuests");
static_assert(sizeof(BPI_GS_TDB_C_GetLootZonesByQuests) == 0x000020, "Wrong size on BPI_GS_TDB_C_GetLootZonesByQuests");
static_assert(offsetof(BPI_GS_TDB_C_GetLootZonesByQuests, Quests) == 0x000000, "Member 'BPI_GS_TDB_C_GetLootZonesByQuests::Quests' has a wrong offset!");
static_assert(offsetof(BPI_GS_TDB_C_GetLootZonesByQuests, Zones) == 0x000010, "Member 'BPI_GS_TDB_C_GetLootZonesByQuests::Zones' has a wrong offset!");

// Function BPI_GS_TDB.BPI_GS_TDB_C.GetQuestActor
// 0x0018 (0x0018 - 0x0000)
struct BPI_GS_TDB_C_GetQuestActor final
{
public:
	class FName                                   Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ActorClass;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_GS_TDB_C_GetQuestActor) == 0x000008, "Wrong alignment on BPI_GS_TDB_C_GetQuestActor");
static_assert(sizeof(BPI_GS_TDB_C_GetQuestActor) == 0x000018, "Wrong size on BPI_GS_TDB_C_GetQuestActor");
static_assert(offsetof(BPI_GS_TDB_C_GetQuestActor, Tag) == 0x000000, "Member 'BPI_GS_TDB_C_GetQuestActor::Tag' has a wrong offset!");
static_assert(offsetof(BPI_GS_TDB_C_GetQuestActor, ActorClass) == 0x000008, "Member 'BPI_GS_TDB_C_GetQuestActor::ActorClass' has a wrong offset!");
static_assert(offsetof(BPI_GS_TDB_C_GetQuestActor, Actor) == 0x000010, "Member 'BPI_GS_TDB_C_GetQuestActor::Actor' has a wrong offset!");

// Function BPI_GS_TDB.BPI_GS_TDB_C.GetQuestSystem
// 0x0008 (0x0008 - 0x0000)
struct BPI_GS_TDB_C_GetQuestSystem final
{
public:
	class UQuestSystemV3_C*                       QuestSystem;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_GS_TDB_C_GetQuestSystem) == 0x000008, "Wrong alignment on BPI_GS_TDB_C_GetQuestSystem");
static_assert(sizeof(BPI_GS_TDB_C_GetQuestSystem) == 0x000008, "Wrong size on BPI_GS_TDB_C_GetQuestSystem");
static_assert(offsetof(BPI_GS_TDB_C_GetQuestSystem, QuestSystem) == 0x000000, "Member 'BPI_GS_TDB_C_GetQuestSystem::QuestSystem' has a wrong offset!");

// Function BPI_GS_TDB.BPI_GS_TDB_C.GetQuestZone
// 0x0010 (0x0010 - 0x0000)
struct BPI_GS_TDB_C_GetQuestZone final
{
public:
	class UQuest*                                 Quest;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_QuestItemsSpawnZone_C*              Zone;                                              // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_GS_TDB_C_GetQuestZone) == 0x000008, "Wrong alignment on BPI_GS_TDB_C_GetQuestZone");
static_assert(sizeof(BPI_GS_TDB_C_GetQuestZone) == 0x000010, "Wrong size on BPI_GS_TDB_C_GetQuestZone");
static_assert(offsetof(BPI_GS_TDB_C_GetQuestZone, Quest) == 0x000000, "Member 'BPI_GS_TDB_C_GetQuestZone::Quest' has a wrong offset!");
static_assert(offsetof(BPI_GS_TDB_C_GetQuestZone, Zone) == 0x000008, "Member 'BPI_GS_TDB_C_GetQuestZone::Zone' has a wrong offset!");

// Function BPI_GS_TDB.BPI_GS_TDB_C.GetQuestZoneByJobName
// 0x0028 (0x0028 - 0x0000)
struct BPI_GS_TDB_C_GetQuestZoneByJobName final
{
public:
	E_Works                                       JobType;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_QuestZone_C*>                Zones;                                             // 0x0008(0x0010)(Parm, OutParm)
	TArray<class ABP_QuestZone_C*>                ProgressZones;                                     // 0x0018(0x0010)(Parm, OutParm)
};
static_assert(alignof(BPI_GS_TDB_C_GetQuestZoneByJobName) == 0x000008, "Wrong alignment on BPI_GS_TDB_C_GetQuestZoneByJobName");
static_assert(sizeof(BPI_GS_TDB_C_GetQuestZoneByJobName) == 0x000028, "Wrong size on BPI_GS_TDB_C_GetQuestZoneByJobName");
static_assert(offsetof(BPI_GS_TDB_C_GetQuestZoneByJobName, JobType) == 0x000000, "Member 'BPI_GS_TDB_C_GetQuestZoneByJobName::JobType' has a wrong offset!");
static_assert(offsetof(BPI_GS_TDB_C_GetQuestZoneByJobName, Zones) == 0x000008, "Member 'BPI_GS_TDB_C_GetQuestZoneByJobName::Zones' has a wrong offset!");
static_assert(offsetof(BPI_GS_TDB_C_GetQuestZoneByJobName, ProgressZones) == 0x000018, "Member 'BPI_GS_TDB_C_GetQuestZoneByJobName::ProgressZones' has a wrong offset!");

// Function BPI_GS_TDB.BPI_GS_TDB_C.GetTowersZones
// 0x0018 (0x0018 - 0x0000)
struct BPI_GS_TDB_C_GetTowersZones final
{
public:
	class UQuest*                                 TowerQuestAsset;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_QuestZone_C*>                Zones;                                             // 0x0008(0x0010)(Parm, OutParm)
};
static_assert(alignof(BPI_GS_TDB_C_GetTowersZones) == 0x000008, "Wrong alignment on BPI_GS_TDB_C_GetTowersZones");
static_assert(sizeof(BPI_GS_TDB_C_GetTowersZones) == 0x000018, "Wrong size on BPI_GS_TDB_C_GetTowersZones");
static_assert(offsetof(BPI_GS_TDB_C_GetTowersZones, TowerQuestAsset) == 0x000000, "Member 'BPI_GS_TDB_C_GetTowersZones::TowerQuestAsset' has a wrong offset!");
static_assert(offsetof(BPI_GS_TDB_C_GetTowersZones, Zones) == 0x000008, "Member 'BPI_GS_TDB_C_GetTowersZones::Zones' has a wrong offset!");

// Function BPI_GS_TDB.BPI_GS_TDB_C.InitLootZones
// 0x0008 (0x0008 - 0x0000)
struct BPI_GS_TDB_C_InitLootZones final
{
public:
	class ABP_QuestItemsSpawnZone_C*              LootZpawnZone;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_GS_TDB_C_InitLootZones) == 0x000008, "Wrong alignment on BPI_GS_TDB_C_InitLootZones");
static_assert(sizeof(BPI_GS_TDB_C_InitLootZones) == 0x000008, "Wrong size on BPI_GS_TDB_C_InitLootZones");
static_assert(offsetof(BPI_GS_TDB_C_InitLootZones, LootZpawnZone) == 0x000000, "Member 'BPI_GS_TDB_C_InitLootZones::LootZpawnZone' has a wrong offset!");

// Function BPI_GS_TDB.BPI_GS_TDB_C.InitQuestActor
// 0x0008 (0x0008 - 0x0000)
struct BPI_GS_TDB_C_InitQuestActor final
{
public:
	class AActor*                                 ActorRef;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_GS_TDB_C_InitQuestActor) == 0x000008, "Wrong alignment on BPI_GS_TDB_C_InitQuestActor");
static_assert(sizeof(BPI_GS_TDB_C_InitQuestActor) == 0x000008, "Wrong size on BPI_GS_TDB_C_InitQuestActor");
static_assert(offsetof(BPI_GS_TDB_C_InitQuestActor, ActorRef) == 0x000000, "Member 'BPI_GS_TDB_C_InitQuestActor::ActorRef' has a wrong offset!");

// Function BPI_GS_TDB.BPI_GS_TDB_C.InitQuestZone
// 0x0008 (0x0008 - 0x0000)
struct BPI_GS_TDB_C_InitQuestZone final
{
public:
	class ABP_QuestZone_C*                        QuestZone;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_GS_TDB_C_InitQuestZone) == 0x000008, "Wrong alignment on BPI_GS_TDB_C_InitQuestZone");
static_assert(sizeof(BPI_GS_TDB_C_InitQuestZone) == 0x000008, "Wrong size on BPI_GS_TDB_C_InitQuestZone");
static_assert(offsetof(BPI_GS_TDB_C_InitQuestZone, QuestZone) == 0x000000, "Member 'BPI_GS_TDB_C_InitQuestZone::QuestZone' has a wrong offset!");

// Function BPI_GS_TDB.BPI_GS_TDB_C.InitTowerZone
// 0x0008 (0x0008 - 0x0000)
struct BPI_GS_TDB_C_InitTowerZone final
{
public:
	class ABP_QuestZone_Towers_C*                 Zone;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_GS_TDB_C_InitTowerZone) == 0x000008, "Wrong alignment on BPI_GS_TDB_C_InitTowerZone");
static_assert(sizeof(BPI_GS_TDB_C_InitTowerZone) == 0x000008, "Wrong size on BPI_GS_TDB_C_InitTowerZone");
static_assert(offsetof(BPI_GS_TDB_C_InitTowerZone, Zone) == 0x000000, "Member 'BPI_GS_TDB_C_InitTowerZone::Zone' has a wrong offset!");

// Function BPI_GS_TDB.BPI_GS_TDB_C.OnEnterBunkerArea
// 0x0010 (0x0010 - 0x0000)
struct BPI_GS_TDB_C_OnEnterBunkerArea final
{
public:
	class FString                                 BunkerID;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_GS_TDB_C_OnEnterBunkerArea) == 0x000008, "Wrong alignment on BPI_GS_TDB_C_OnEnterBunkerArea");
static_assert(sizeof(BPI_GS_TDB_C_OnEnterBunkerArea) == 0x000010, "Wrong size on BPI_GS_TDB_C_OnEnterBunkerArea");
static_assert(offsetof(BPI_GS_TDB_C_OnEnterBunkerArea, BunkerID) == 0x000000, "Member 'BPI_GS_TDB_C_OnEnterBunkerArea::BunkerID' has a wrong offset!");

// Function BPI_GS_TDB.BPI_GS_TDB_C.OnFinishQuestRemotely
// 0x0004 (0x0004 - 0x0000)
struct BPI_GS_TDB_C_OnFinishQuestRemotely final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_GS_TDB_C_OnFinishQuestRemotely) == 0x000004, "Wrong alignment on BPI_GS_TDB_C_OnFinishQuestRemotely");
static_assert(sizeof(BPI_GS_TDB_C_OnFinishQuestRemotely) == 0x000004, "Wrong size on BPI_GS_TDB_C_OnFinishQuestRemotely");
static_assert(offsetof(BPI_GS_TDB_C_OnFinishQuestRemotely, ID) == 0x000000, "Member 'BPI_GS_TDB_C_OnFinishQuestRemotely::ID' has a wrong offset!");

// Function BPI_GS_TDB.BPI_GS_TDB_C.OnPlayerSpawned
// 0x0008 (0x0008 - 0x0000)
struct BPI_GS_TDB_C_OnPlayerSpawned final
{
public:
	class AActor*                                 Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_GS_TDB_C_OnPlayerSpawned) == 0x000008, "Wrong alignment on BPI_GS_TDB_C_OnPlayerSpawned");
static_assert(sizeof(BPI_GS_TDB_C_OnPlayerSpawned) == 0x000008, "Wrong size on BPI_GS_TDB_C_OnPlayerSpawned");
static_assert(offsetof(BPI_GS_TDB_C_OnPlayerSpawned, Player) == 0x000000, "Member 'BPI_GS_TDB_C_OnPlayerSpawned::Player' has a wrong offset!");

// Function BPI_GS_TDB.BPI_GS_TDB_C.OnQuestTrigger
// 0x0010 (0x0010 - 0x0000)
struct BPI_GS_TDB_C_OnQuestTrigger final
{
public:
	class FString                                 QuestTrigger;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_GS_TDB_C_OnQuestTrigger) == 0x000008, "Wrong alignment on BPI_GS_TDB_C_OnQuestTrigger");
static_assert(sizeof(BPI_GS_TDB_C_OnQuestTrigger) == 0x000010, "Wrong size on BPI_GS_TDB_C_OnQuestTrigger");
static_assert(offsetof(BPI_GS_TDB_C_OnQuestTrigger, QuestTrigger) == 0x000000, "Member 'BPI_GS_TDB_C_OnQuestTrigger::QuestTrigger' has a wrong offset!");

// Function BPI_GS_TDB.BPI_GS_TDB_C.SetShopOpened
// 0x0001 (0x0001 - 0x0000)
struct BPI_GS_TDB_C_SetShopOpened final
{
public:
	bool                                          IsOpened;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_GS_TDB_C_SetShopOpened) == 0x000001, "Wrong alignment on BPI_GS_TDB_C_SetShopOpened");
static_assert(sizeof(BPI_GS_TDB_C_SetShopOpened) == 0x000001, "Wrong size on BPI_GS_TDB_C_SetShopOpened");
static_assert(offsetof(BPI_GS_TDB_C_SetShopOpened, IsOpened) == 0x000000, "Member 'BPI_GS_TDB_C_SetShopOpened::IsOpened' has a wrong offset!");

}

