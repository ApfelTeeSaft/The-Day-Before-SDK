#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Vehicle_Hitch

#include "Basic.hpp"

#include "Vehicle_Hitch_classes.hpp"
#include "Vehicle_Hitch_parameters.hpp"


namespace SDK
{

// Function Vehicle_Hitch.Vehicle_Hitch_C.ApplyHitchConstraint
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UVehicle_Hitch_C*                 Param_TowHitch                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UVehicle_Hitch_C*                 Param_TrailerHitch                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UVehicle_Hitch_C::ApplyHitchConstraint(class UVehicle_Hitch_C* Param_TowHitch, class UVehicle_Hitch_C* Param_TrailerHitch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_Hitch_C", "ApplyHitchConstraint");

	Params::Vehicle_Hitch_C_ApplyHitchConstraint Parms{};

	Parms.Param_TowHitch = Param_TowHitch;
	Parms.Param_TrailerHitch = Param_TrailerHitch;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Vehicle_Hitch.Vehicle_Hitch_C.ApplyHitchFromNetwork
// (Private, BlueprintCallable, BlueprintEvent)

void UVehicle_Hitch_C::ApplyHitchFromNetwork()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_Hitch_C", "ApplyHitchFromNetwork");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Vehicle_Hitch.Vehicle_Hitch_C.CheckCompatibility
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UVehicle_Hitch_C*                 To                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    IsCompatible                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UVehicle_Hitch_C::CheckCompatibility(class UVehicle_Hitch_C* To, bool* IsCompatible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_Hitch_C", "CheckCompatibility");

	Params::Vehicle_Hitch_C_CheckCompatibility Parms{};

	Parms.To = To;

	UObject::ProcessEvent(Func, &Parms);

	if (IsCompatible != nullptr)
		*IsCompatible = Parms.IsCompatible;
}


// Function Vehicle_Hitch.Vehicle_Hitch_C.CreateConstraintFrames
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UVehicle_Hitch_C::CreateConstraintFrames()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_Hitch_C", "CreateConstraintFrames");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Vehicle_Hitch.Vehicle_Hitch_C.CreateHitchConstraint
// (Private, BlueprintCallable, BlueprintEvent)

void UVehicle_Hitch_C::CreateHitchConstraint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_Hitch_C", "CreateHitchConstraint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Vehicle_Hitch.Vehicle_Hitch_C.ExecuteUbergraph_Vehicle_Hitch
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UVehicle_Hitch_C::ExecuteUbergraph_Vehicle_Hitch(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_Hitch_C", "ExecuteUbergraph_Vehicle_Hitch");

	Params::Vehicle_Hitch_C_ExecuteUbergraph_Vehicle_Hitch Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Vehicle_Hitch.Vehicle_Hitch_C.GetHitchedTo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UVehicle_Hitch_C*                 HitchedTo                                              (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UVehicle_Hitch_C::GetHitchedTo(class UVehicle_Hitch_C** HitchedTo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_Hitch_C", "GetHitchedTo");

	Params::Vehicle_Hitch_C_GetHitchedTo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HitchedTo != nullptr)
		*HitchedTo = Parms.HitchedTo;
}


// Function Vehicle_Hitch.Vehicle_Hitch_C.GetHitchedTrailer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AAVS_Vehicle_C*                   Trailer                                                (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UVehicle_Hitch_C::GetHitchedTrailer(class AAVS_Vehicle_C** Trailer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_Hitch_C", "GetHitchedTrailer");

	Params::Vehicle_Hitch_C_GetHitchedTrailer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Trailer != nullptr)
		*Trailer = Parms.Trailer;
}


// Function Vehicle_Hitch.Vehicle_Hitch_C.GetHitchedVehicle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AAVS_Vehicle_C*                   Vehicle                                                (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UVehicle_Hitch_C::GetHitchedVehicle(class AAVS_Vehicle_C** Vehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_Hitch_C", "GetHitchedVehicle");

	Params::Vehicle_Hitch_C_GetHitchedVehicle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Vehicle != nullptr)
		*Vehicle = Parms.Vehicle;
}


// Function Vehicle_Hitch.Vehicle_Hitch_C.GetIsHitched
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Param_IsHitched                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UVehicle_Hitch_C::GetIsHitched(bool* Param_IsHitched)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_Hitch_C", "GetIsHitched");

	Params::Vehicle_Hitch_C_GetIsHitched Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsHitched != nullptr)
		*Param_IsHitched = Parms.Param_IsHitched;
}


// Function Vehicle_Hitch.Vehicle_Hitch_C.GetOwningVehicle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AAVS_Vehicle_C*                   Vehicle                                                (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UVehicle_Hitch_C::GetOwningVehicle(class AAVS_Vehicle_C** Vehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_Hitch_C", "GetOwningVehicle");

	Params::Vehicle_Hitch_C_GetOwningVehicle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Vehicle != nullptr)
		*Vehicle = Parms.Vehicle;
}


// Function Vehicle_Hitch.Vehicle_Hitch_C.GetVehicleMesh
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UMeshComponent*                   Mesh                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UVehicle_Hitch_C::GetVehicleMesh(class UMeshComponent** Mesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_Hitch_C", "GetVehicleMesh");

	Params::Vehicle_Hitch_C_GetVehicleMesh Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Mesh != nullptr)
		*Mesh = Parms.Mesh;
}


// Function Vehicle_Hitch.Vehicle_Hitch_C.Hitch
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UVehicle_Hitch_C*                 To                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  Param_AnimationLength                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UVehicle_Hitch_C::Hitch(class UVehicle_Hitch_C* To, double Param_AnimationLength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_Hitch_C", "Hitch");

	Params::Vehicle_Hitch_C_Hitch Parms{};

	Parms.To = To;
	Parms.Param_AnimationLength = Param_AnimationLength;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Vehicle_Hitch.Vehicle_Hitch_C.HitchAnimationFinished
// (BlueprintCallable, BlueprintEvent)

void UVehicle_Hitch_C::HitchAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_Hitch_C", "HitchAnimationFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Vehicle_Hitch.Vehicle_Hitch_C.HitchConstraintBroken
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ConstraintIndex                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UVehicle_Hitch_C::HitchConstraintBroken(int32 ConstraintIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_Hitch_C", "HitchConstraintBroken");

	Params::Vehicle_Hitch_C_HitchConstraintBroken Parms{};

	Parms.ConstraintIndex = ConstraintIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Vehicle_Hitch.Vehicle_Hitch_C.Hitched__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UVehicle_Hitch_C*                 Param_TowHitch                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UVehicle_Hitch_C*                 Param_TrailerHitch                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UVehicle_Hitch_C::Hitched__DelegateSignature(class UVehicle_Hitch_C* Param_TowHitch, class UVehicle_Hitch_C* Param_TrailerHitch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_Hitch_C", "Hitched__DelegateSignature");

	Params::Vehicle_Hitch_C_Hitched__DelegateSignature Parms{};

	Parms.Param_TowHitch = Param_TowHitch;
	Parms.Param_TrailerHitch = Param_TrailerHitch;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Vehicle_Hitch.Vehicle_Hitch_C.HitchedToDestroyed__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UVehicle_Hitch_C::HitchedToDestroyed__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_Hitch_C", "HitchedToDestroyed__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Vehicle_Hitch.Vehicle_Hitch_C.HitchedToDestroyed_Event
// (BlueprintCallable, BlueprintEvent)

void UVehicle_Hitch_C::HitchedToDestroyed_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_Hitch_C", "HitchedToDestroyed_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Vehicle_Hitch.Vehicle_Hitch_C.HitchToOverlapped
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Param_AnimationLength                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UVehicle_Hitch_C::HitchToOverlapped(double Param_AnimationLength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_Hitch_C", "HitchToOverlapped");

	Params::Vehicle_Hitch_C_HitchToOverlapped Parms{};

	Parms.Param_AnimationLength = Param_AnimationLength;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Vehicle_Hitch.Vehicle_Hitch_C.InitHitch
// (Public, BlueprintCallable, BlueprintEvent)

void UVehicle_Hitch_C::InitHitch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_Hitch_C", "InitHitch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Vehicle_Hitch.Vehicle_Hitch_C.OnRep_HitchNetwork
// (BlueprintCallable, BlueprintEvent)

void UVehicle_Hitch_C::OnRep_HitchNetwork()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_Hitch_C", "OnRep_HitchNetwork");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Vehicle_Hitch.Vehicle_Hitch_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UVehicle_Hitch_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_Hitch_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Vehicle_Hitch.Vehicle_Hitch_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UVehicle_Hitch_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_Hitch_C", "ReceiveEndPlay");

	Params::Vehicle_Hitch_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Vehicle_Hitch.Vehicle_Hitch_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UVehicle_Hitch_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_Hitch_C", "ReceiveTick");

	Params::Vehicle_Hitch_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Vehicle_Hitch.Vehicle_Hitch_C.RPC_Server_HitchData
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitchNetworkData                Param_HitchNetworkData                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)

void UVehicle_Hitch_C::RPC_Server_HitchData(const struct FHitchNetworkData& Param_HitchNetworkData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_Hitch_C", "RPC_Server_HitchData");

	Params::Vehicle_Hitch_C_RPC_Server_HitchData Parms{};

	Parms.Param_HitchNetworkData = std::move(Param_HitchNetworkData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Vehicle_Hitch.Vehicle_Hitch_C.SetIsHitched
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsHitched                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UVehicle_Hitch_C::SetIsHitched(bool Param_IsHitched)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_Hitch_C", "SetIsHitched");

	Params::Vehicle_Hitch_C_SetIsHitched Parms{};

	Parms.Param_IsHitched = Param_IsHitched;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Vehicle_Hitch.Vehicle_Hitch_C.SetTowHitch
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UVehicle_Hitch_C*                 Param_TowHitch                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UVehicle_Hitch_C::SetTowHitch(class UVehicle_Hitch_C* Param_TowHitch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_Hitch_C", "SetTowHitch");

	Params::Vehicle_Hitch_C_SetTowHitch Parms{};

	Parms.Param_TowHitch = Param_TowHitch;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Vehicle_Hitch.Vehicle_Hitch_C.StartHitchAnimation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Param_AnimationLength                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UVehicle_Hitch_C::StartHitchAnimation(double Param_AnimationLength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_Hitch_C", "StartHitchAnimation");

	Params::Vehicle_Hitch_C_StartHitchAnimation Parms{};

	Parms.Param_AnimationLength = Param_AnimationLength;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Vehicle_Hitch.Vehicle_Hitch_C.StopHitchAnimation
// (BlueprintCallable, BlueprintEvent)

void UVehicle_Hitch_C::StopHitchAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_Hitch_C", "StopHitchAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Vehicle_Hitch.Vehicle_Hitch_C.Unhitch
// (Public, BlueprintCallable, BlueprintEvent)

void UVehicle_Hitch_C::Unhitch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_Hitch_C", "Unhitch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Vehicle_Hitch.Vehicle_Hitch_C.Unhitched__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UVehicle_Hitch_C::Unhitched__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_Hitch_C", "Unhitched__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Vehicle_Hitch.Vehicle_Hitch_C.UpdateIsHitched
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UVehicle_Hitch_C*                 Param_TowHitch                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UVehicle_Hitch_C*                 Param_TrailerHitch                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UVehicle_Hitch_C::UpdateIsHitched(class UVehicle_Hitch_C* Param_TowHitch, class UVehicle_Hitch_C* Param_TrailerHitch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_Hitch_C", "UpdateIsHitched");

	Params::Vehicle_Hitch_C_UpdateIsHitched Parms{};

	Parms.Param_TowHitch = Param_TowHitch;
	Parms.Param_TrailerHitch = Param_TrailerHitch;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Vehicle_Hitch.Vehicle_Hitch_C.WakeIfValid
// (Private, BlueprintCallable, BlueprintEvent)

void UVehicle_Hitch_C::WakeIfValid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_Hitch_C", "WakeIfValid");

	UObject::ProcessEvent(Func, nullptr);
}

}

