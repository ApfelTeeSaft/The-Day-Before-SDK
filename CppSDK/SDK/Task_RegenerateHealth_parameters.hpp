#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Task_RegenerateHealth

#include "Basic.hpp"


namespace SDK::Params
{

// Function Task_RegenerateHealth.Task_RegenerateHealth_C.ExecuteUbergraph_Task_RegenerateHealth
// 0x00D8 (0x00D8 - 0x0000)
struct Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x006C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_1;                    // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_1;                     // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMainBanditAI_C*                        K2Node_DynamicCast_AsMain_Bandit_AI;               // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth) == 0x000008, "Wrong alignment on Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth");
static_assert(sizeof(Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth) == 0x0000D8, "Wrong size on Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth");
static_assert(offsetof(Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth, EntryPoint) == 0x000000, "Member 'Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth::EntryPoint' has a wrong offset!");
static_assert(offsetof(Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth, K2Node_CustomEvent_NotifyName_4) == 0x000014, "Member 'Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth, K2Node_CustomEvent_NotifyName_3) == 0x00001C, "Member 'Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth, K2Node_CustomEvent_NotifyName_2) == 0x000034, "Member 'Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth, K2Node_CreateDelegate_OutputDelegate_2) == 0x00003C, "Member 'Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth, K2Node_CustomEvent_NotifyName_1) == 0x00004C, "Member 'Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth, K2Node_CreateDelegate_OutputDelegate_3) == 0x000054, "Member 'Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth, K2Node_CustomEvent_NotifyName) == 0x000064, "Member 'Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth, K2Node_CreateDelegate_OutputDelegate_4) == 0x00006C, "Member 'Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth, Temp_name_Variable) == 0x00007C, "Member 'Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth, K2Node_Event_OwnerController_1) == 0x000088, "Member 'Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth::K2Node_Event_OwnerController_1' has a wrong offset!");
static_assert(offsetof(Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth, K2Node_Event_ControlledPawn_1) == 0x000090, "Member 'Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth::K2Node_Event_ControlledPawn_1' has a wrong offset!");
static_assert(offsetof(Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth, K2Node_DynamicCast_AsMain_Bandit_AI) == 0x000098, "Member 'Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth::K2Node_DynamicCast_AsMain_Bandit_AI' has a wrong offset!");
static_assert(offsetof(Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth, K2Node_Event_OwnerController) == 0x0000A8, "Member 'Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth, K2Node_Event_ControlledPawn) == 0x0000B0, "Member 'Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth, K2Node_Event_DeltaSeconds) == 0x0000B8, "Member 'Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x0000C8, "Member 'Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth, CallFunc_IsValid_ReturnValue) == 0x0000D0, "Member 'Task_RegenerateHealth_C_ExecuteUbergraph_Task_RegenerateHealth::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Task_RegenerateHealth.Task_RegenerateHealth_C.OnBlendOut_6E66623F4EB6B666E4DAFA8B1E537348
// 0x0008 (0x0008 - 0x0000)
struct Task_RegenerateHealth_C_OnBlendOut_6E66623F4EB6B666E4DAFA8B1E537348 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_RegenerateHealth_C_OnBlendOut_6E66623F4EB6B666E4DAFA8B1E537348) == 0x000004, "Wrong alignment on Task_RegenerateHealth_C_OnBlendOut_6E66623F4EB6B666E4DAFA8B1E537348");
static_assert(sizeof(Task_RegenerateHealth_C_OnBlendOut_6E66623F4EB6B666E4DAFA8B1E537348) == 0x000008, "Wrong size on Task_RegenerateHealth_C_OnBlendOut_6E66623F4EB6B666E4DAFA8B1E537348");
static_assert(offsetof(Task_RegenerateHealth_C_OnBlendOut_6E66623F4EB6B666E4DAFA8B1E537348, NotifyName) == 0x000000, "Member 'Task_RegenerateHealth_C_OnBlendOut_6E66623F4EB6B666E4DAFA8B1E537348::NotifyName' has a wrong offset!");

// Function Task_RegenerateHealth.Task_RegenerateHealth_C.OnCompleted_6E66623F4EB6B666E4DAFA8B1E537348
// 0x0008 (0x0008 - 0x0000)
struct Task_RegenerateHealth_C_OnCompleted_6E66623F4EB6B666E4DAFA8B1E537348 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_RegenerateHealth_C_OnCompleted_6E66623F4EB6B666E4DAFA8B1E537348) == 0x000004, "Wrong alignment on Task_RegenerateHealth_C_OnCompleted_6E66623F4EB6B666E4DAFA8B1E537348");
static_assert(sizeof(Task_RegenerateHealth_C_OnCompleted_6E66623F4EB6B666E4DAFA8B1E537348) == 0x000008, "Wrong size on Task_RegenerateHealth_C_OnCompleted_6E66623F4EB6B666E4DAFA8B1E537348");
static_assert(offsetof(Task_RegenerateHealth_C_OnCompleted_6E66623F4EB6B666E4DAFA8B1E537348, NotifyName) == 0x000000, "Member 'Task_RegenerateHealth_C_OnCompleted_6E66623F4EB6B666E4DAFA8B1E537348::NotifyName' has a wrong offset!");

// Function Task_RegenerateHealth.Task_RegenerateHealth_C.OnInterrupted_6E66623F4EB6B666E4DAFA8B1E537348
// 0x0008 (0x0008 - 0x0000)
struct Task_RegenerateHealth_C_OnInterrupted_6E66623F4EB6B666E4DAFA8B1E537348 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_RegenerateHealth_C_OnInterrupted_6E66623F4EB6B666E4DAFA8B1E537348) == 0x000004, "Wrong alignment on Task_RegenerateHealth_C_OnInterrupted_6E66623F4EB6B666E4DAFA8B1E537348");
static_assert(sizeof(Task_RegenerateHealth_C_OnInterrupted_6E66623F4EB6B666E4DAFA8B1E537348) == 0x000008, "Wrong size on Task_RegenerateHealth_C_OnInterrupted_6E66623F4EB6B666E4DAFA8B1E537348");
static_assert(offsetof(Task_RegenerateHealth_C_OnInterrupted_6E66623F4EB6B666E4DAFA8B1E537348, NotifyName) == 0x000000, "Member 'Task_RegenerateHealth_C_OnInterrupted_6E66623F4EB6B666E4DAFA8B1E537348::NotifyName' has a wrong offset!");

// Function Task_RegenerateHealth.Task_RegenerateHealth_C.OnNotifyBegin_6E66623F4EB6B666E4DAFA8B1E537348
// 0x0008 (0x0008 - 0x0000)
struct Task_RegenerateHealth_C_OnNotifyBegin_6E66623F4EB6B666E4DAFA8B1E537348 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_RegenerateHealth_C_OnNotifyBegin_6E66623F4EB6B666E4DAFA8B1E537348) == 0x000004, "Wrong alignment on Task_RegenerateHealth_C_OnNotifyBegin_6E66623F4EB6B666E4DAFA8B1E537348");
static_assert(sizeof(Task_RegenerateHealth_C_OnNotifyBegin_6E66623F4EB6B666E4DAFA8B1E537348) == 0x000008, "Wrong size on Task_RegenerateHealth_C_OnNotifyBegin_6E66623F4EB6B666E4DAFA8B1E537348");
static_assert(offsetof(Task_RegenerateHealth_C_OnNotifyBegin_6E66623F4EB6B666E4DAFA8B1E537348, NotifyName) == 0x000000, "Member 'Task_RegenerateHealth_C_OnNotifyBegin_6E66623F4EB6B666E4DAFA8B1E537348::NotifyName' has a wrong offset!");

// Function Task_RegenerateHealth.Task_RegenerateHealth_C.OnNotifyEnd_6E66623F4EB6B666E4DAFA8B1E537348
// 0x0008 (0x0008 - 0x0000)
struct Task_RegenerateHealth_C_OnNotifyEnd_6E66623F4EB6B666E4DAFA8B1E537348 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_RegenerateHealth_C_OnNotifyEnd_6E66623F4EB6B666E4DAFA8B1E537348) == 0x000004, "Wrong alignment on Task_RegenerateHealth_C_OnNotifyEnd_6E66623F4EB6B666E4DAFA8B1E537348");
static_assert(sizeof(Task_RegenerateHealth_C_OnNotifyEnd_6E66623F4EB6B666E4DAFA8B1E537348) == 0x000008, "Wrong size on Task_RegenerateHealth_C_OnNotifyEnd_6E66623F4EB6B666E4DAFA8B1E537348");
static_assert(offsetof(Task_RegenerateHealth_C_OnNotifyEnd_6E66623F4EB6B666E4DAFA8B1E537348, NotifyName) == 0x000000, "Member 'Task_RegenerateHealth_C_OnNotifyEnd_6E66623F4EB6B666E4DAFA8B1E537348::NotifyName' has a wrong offset!");

// Function Task_RegenerateHealth.Task_RegenerateHealth_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct Task_RegenerateHealth_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_RegenerateHealth_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on Task_RegenerateHealth_C_ReceiveExecuteAI");
static_assert(sizeof(Task_RegenerateHealth_C_ReceiveExecuteAI) == 0x000010, "Wrong size on Task_RegenerateHealth_C_ReceiveExecuteAI");
static_assert(offsetof(Task_RegenerateHealth_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'Task_RegenerateHealth_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(Task_RegenerateHealth_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'Task_RegenerateHealth_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

// Function Task_RegenerateHealth.Task_RegenerateHealth_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct Task_RegenerateHealth_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_RegenerateHealth_C_ReceiveTickAI) == 0x000008, "Wrong alignment on Task_RegenerateHealth_C_ReceiveTickAI");
static_assert(sizeof(Task_RegenerateHealth_C_ReceiveTickAI) == 0x000018, "Wrong size on Task_RegenerateHealth_C_ReceiveTickAI");
static_assert(offsetof(Task_RegenerateHealth_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'Task_RegenerateHealth_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(Task_RegenerateHealth_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'Task_RegenerateHealth_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(Task_RegenerateHealth_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'Task_RegenerateHealth_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

}

