#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BlizzardControllerV2

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BlizzardControllerV2.BP_BlizzardControllerV2_C
// 0x00D0 (0x0360 - 0x0290)
class ABP_BlizzardControllerV2_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFMODAudioComponent*                    Wind;                                              // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Fog_FogDensity_39DFC88C433FF73B29A16CA3263E19C0;   // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Fog__Direction_39DFC88C433FF73B29A16CA3263E19C0;   // 0x02AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AD[0x3];                                      // 0x02AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Fog;                                               // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceBlizzard;                                     // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          IsBlizzard;                                        // 0x02B9(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BA[0x6];                                      // 0x02BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        BlizzardDelayTimer;                                // 0x02C0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BlizzardDurationTimer;                             // 0x02C8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnBlizzardStart;                                   // 0x02D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnBlizzardStop;                                    // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FTimerHandle                           HeightUpTimerHandle;                               // 0x02F0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           HeightDownTimerHandle;                             // 0x02F8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          TransitionBlizzardOn;                              // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TransitionBlizzardOff;                             // 0x0301(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_302[0x6];                                      // 0x0302(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TransitionBlizzardTime;                            // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TransitionToBlizzard;                              // 0x0310(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InHouse;                                           // 0x0318(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_319[0x7];                                      // 0x0319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TransitionToNormal;                                // 0x0320(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AUltra_Dynamic_Weather_C*               UltraDynamicSkyWeather;                            // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	struct FFloatRange                            BlizzardDelay;                                     // 0x0330(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFloatRange                            BlizzardDuration;                                  // 0x0340(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WindHeightUp;                                      // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WindHeightDown;                                    // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BunkerEntered();
	void BunkerLeaved();
	void CalculateNextBlizzard(bool Param_ForceBlizzard);
	void ExecuteUbergraph_BP_BlizzardControllerV2(int32 EntryPoint);
	void Fog__FinishedFunc();
	void Fog__UpdateFunc();
	void HeightDown();
	void HeightUp();
	void HouseEntered();
	void HouseLeaved();
	void OnBlizzardStart__DelegateSignature();
	void OnBlizzardStop__DelegateSignature();
	void OnRep_IsBlizzard();
	void PlayWind();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void StartBlizzard();
	void StopBlizzard();
	void StopWind();
	void UserConstructionScript();
	void WaitBlizzard();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BlizzardControllerV2_C">();
	}
	static class ABP_BlizzardControllerV2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BlizzardControllerV2_C>();
	}
};
static_assert(alignof(ABP_BlizzardControllerV2_C) == 0x000008, "Wrong alignment on ABP_BlizzardControllerV2_C");
static_assert(sizeof(ABP_BlizzardControllerV2_C) == 0x000360, "Wrong size on ABP_BlizzardControllerV2_C");
static_assert(offsetof(ABP_BlizzardControllerV2_C, UberGraphFrame) == 0x000290, "Member 'ABP_BlizzardControllerV2_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_BlizzardControllerV2_C, Wind) == 0x000298, "Member 'ABP_BlizzardControllerV2_C::Wind' has a wrong offset!");
static_assert(offsetof(ABP_BlizzardControllerV2_C, DefaultSceneRoot) == 0x0002A0, "Member 'ABP_BlizzardControllerV2_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_BlizzardControllerV2_C, Fog_FogDensity_39DFC88C433FF73B29A16CA3263E19C0) == 0x0002A8, "Member 'ABP_BlizzardControllerV2_C::Fog_FogDensity_39DFC88C433FF73B29A16CA3263E19C0' has a wrong offset!");
static_assert(offsetof(ABP_BlizzardControllerV2_C, Fog__Direction_39DFC88C433FF73B29A16CA3263E19C0) == 0x0002AC, "Member 'ABP_BlizzardControllerV2_C::Fog__Direction_39DFC88C433FF73B29A16CA3263E19C0' has a wrong offset!");
static_assert(offsetof(ABP_BlizzardControllerV2_C, Fog) == 0x0002B0, "Member 'ABP_BlizzardControllerV2_C::Fog' has a wrong offset!");
static_assert(offsetof(ABP_BlizzardControllerV2_C, ForceBlizzard) == 0x0002B8, "Member 'ABP_BlizzardControllerV2_C::ForceBlizzard' has a wrong offset!");
static_assert(offsetof(ABP_BlizzardControllerV2_C, IsBlizzard) == 0x0002B9, "Member 'ABP_BlizzardControllerV2_C::IsBlizzard' has a wrong offset!");
static_assert(offsetof(ABP_BlizzardControllerV2_C, BlizzardDelayTimer) == 0x0002C0, "Member 'ABP_BlizzardControllerV2_C::BlizzardDelayTimer' has a wrong offset!");
static_assert(offsetof(ABP_BlizzardControllerV2_C, BlizzardDurationTimer) == 0x0002C8, "Member 'ABP_BlizzardControllerV2_C::BlizzardDurationTimer' has a wrong offset!");
static_assert(offsetof(ABP_BlizzardControllerV2_C, OnBlizzardStart) == 0x0002D0, "Member 'ABP_BlizzardControllerV2_C::OnBlizzardStart' has a wrong offset!");
static_assert(offsetof(ABP_BlizzardControllerV2_C, OnBlizzardStop) == 0x0002E0, "Member 'ABP_BlizzardControllerV2_C::OnBlizzardStop' has a wrong offset!");
static_assert(offsetof(ABP_BlizzardControllerV2_C, HeightUpTimerHandle) == 0x0002F0, "Member 'ABP_BlizzardControllerV2_C::HeightUpTimerHandle' has a wrong offset!");
static_assert(offsetof(ABP_BlizzardControllerV2_C, HeightDownTimerHandle) == 0x0002F8, "Member 'ABP_BlizzardControllerV2_C::HeightDownTimerHandle' has a wrong offset!");
static_assert(offsetof(ABP_BlizzardControllerV2_C, TransitionBlizzardOn) == 0x000300, "Member 'ABP_BlizzardControllerV2_C::TransitionBlizzardOn' has a wrong offset!");
static_assert(offsetof(ABP_BlizzardControllerV2_C, TransitionBlizzardOff) == 0x000301, "Member 'ABP_BlizzardControllerV2_C::TransitionBlizzardOff' has a wrong offset!");
static_assert(offsetof(ABP_BlizzardControllerV2_C, TransitionBlizzardTime) == 0x000308, "Member 'ABP_BlizzardControllerV2_C::TransitionBlizzardTime' has a wrong offset!");
static_assert(offsetof(ABP_BlizzardControllerV2_C, TransitionToBlizzard) == 0x000310, "Member 'ABP_BlizzardControllerV2_C::TransitionToBlizzard' has a wrong offset!");
static_assert(offsetof(ABP_BlizzardControllerV2_C, InHouse) == 0x000318, "Member 'ABP_BlizzardControllerV2_C::InHouse' has a wrong offset!");
static_assert(offsetof(ABP_BlizzardControllerV2_C, TransitionToNormal) == 0x000320, "Member 'ABP_BlizzardControllerV2_C::TransitionToNormal' has a wrong offset!");
static_assert(offsetof(ABP_BlizzardControllerV2_C, UltraDynamicSkyWeather) == 0x000328, "Member 'ABP_BlizzardControllerV2_C::UltraDynamicSkyWeather' has a wrong offset!");
static_assert(offsetof(ABP_BlizzardControllerV2_C, BlizzardDelay) == 0x000330, "Member 'ABP_BlizzardControllerV2_C::BlizzardDelay' has a wrong offset!");
static_assert(offsetof(ABP_BlizzardControllerV2_C, BlizzardDuration) == 0x000340, "Member 'ABP_BlizzardControllerV2_C::BlizzardDuration' has a wrong offset!");
static_assert(offsetof(ABP_BlizzardControllerV2_C, WindHeightUp) == 0x000350, "Member 'ABP_BlizzardControllerV2_C::WindHeightUp' has a wrong offset!");
static_assert(offsetof(ABP_BlizzardControllerV2_C, WindHeightDown) == 0x000358, "Member 'ABP_BlizzardControllerV2_C::WindHeightDown' has a wrong offset!");

}

