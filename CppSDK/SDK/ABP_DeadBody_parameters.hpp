#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_DeadBody

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ABP_DeadBody.ABP_DeadBody_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_DeadBody_C_AnimGraph final
{
public:
	struct FPoseLink                              Param_AnimGraph;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_DeadBody_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_DeadBody_C_AnimGraph");
static_assert(sizeof(ABP_DeadBody_C_AnimGraph) == 0x000010, "Wrong size on ABP_DeadBody_C_AnimGraph");
static_assert(offsetof(ABP_DeadBody_C_AnimGraph, Param_AnimGraph) == 0x000000, "Member 'ABP_DeadBody_C_AnimGraph::Param_AnimGraph' has a wrong offset!");

// Function ABP_DeadBody.ABP_DeadBody_C.ExecuteUbergraph_ABP_DeadBody
// 0x0060 (0x0060 - 0x0000)
struct ABP_DeadBody_C_ExecuteUbergraph_ABP_DeadBody final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_DeadBody;                       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_HitAngle;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPoseSnapshot                          K2Node_CustomEvent_SurvPlayerlastSnapshot;         // 0x0018(0x0038)()
	class APlayerDeadBody_C*                      K2Node_DynamicCast_AsPlayer_Dead_Body;             // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_DeadBody_C_ExecuteUbergraph_ABP_DeadBody) == 0x000008, "Wrong alignment on ABP_DeadBody_C_ExecuteUbergraph_ABP_DeadBody");
static_assert(sizeof(ABP_DeadBody_C_ExecuteUbergraph_ABP_DeadBody) == 0x000060, "Wrong size on ABP_DeadBody_C_ExecuteUbergraph_ABP_DeadBody");
static_assert(offsetof(ABP_DeadBody_C_ExecuteUbergraph_ABP_DeadBody, EntryPoint) == 0x000000, "Member 'ABP_DeadBody_C_ExecuteUbergraph_ABP_DeadBody::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_DeadBody_C_ExecuteUbergraph_ABP_DeadBody, K2Node_CustomEvent_DeadBody) == 0x000008, "Member 'ABP_DeadBody_C_ExecuteUbergraph_ABP_DeadBody::K2Node_CustomEvent_DeadBody' has a wrong offset!");
static_assert(offsetof(ABP_DeadBody_C_ExecuteUbergraph_ABP_DeadBody, K2Node_CustomEvent_HitAngle) == 0x000010, "Member 'ABP_DeadBody_C_ExecuteUbergraph_ABP_DeadBody::K2Node_CustomEvent_HitAngle' has a wrong offset!");
static_assert(offsetof(ABP_DeadBody_C_ExecuteUbergraph_ABP_DeadBody, K2Node_CustomEvent_SurvPlayerlastSnapshot) == 0x000018, "Member 'ABP_DeadBody_C_ExecuteUbergraph_ABP_DeadBody::K2Node_CustomEvent_SurvPlayerlastSnapshot' has a wrong offset!");
static_assert(offsetof(ABP_DeadBody_C_ExecuteUbergraph_ABP_DeadBody, K2Node_DynamicCast_AsPlayer_Dead_Body) == 0x000050, "Member 'ABP_DeadBody_C_ExecuteUbergraph_ABP_DeadBody::K2Node_DynamicCast_AsPlayer_Dead_Body' has a wrong offset!");
static_assert(offsetof(ABP_DeadBody_C_ExecuteUbergraph_ABP_DeadBody, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'ABP_DeadBody_C_ExecuteUbergraph_ABP_DeadBody::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ABP_DeadBody.ABP_DeadBody_C.Start
// 0x0048 (0x0048 - 0x0000)
struct ABP_DeadBody_C_Start final
{
public:
	class AActor*                                 Param_DeadBody;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Param_HitAngle;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPoseSnapshot                          Param_SurvPlayerlastSnapshot;                      // 0x0010(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(ABP_DeadBody_C_Start) == 0x000008, "Wrong alignment on ABP_DeadBody_C_Start");
static_assert(sizeof(ABP_DeadBody_C_Start) == 0x000048, "Wrong size on ABP_DeadBody_C_Start");
static_assert(offsetof(ABP_DeadBody_C_Start, Param_DeadBody) == 0x000000, "Member 'ABP_DeadBody_C_Start::Param_DeadBody' has a wrong offset!");
static_assert(offsetof(ABP_DeadBody_C_Start, Param_HitAngle) == 0x000008, "Member 'ABP_DeadBody_C_Start::Param_HitAngle' has a wrong offset!");
static_assert(offsetof(ABP_DeadBody_C_Start, Param_SurvPlayerlastSnapshot) == 0x000010, "Member 'ABP_DeadBody_C_Start::Param_SurvPlayerlastSnapshot' has a wrong offset!");

}

