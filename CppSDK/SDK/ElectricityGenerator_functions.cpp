#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ElectricityGenerator

#include "Basic.hpp"

#include "ElectricityGenerator_classes.hpp"
#include "ElectricityGenerator_parameters.hpp"


namespace SDK
{

// Function ElectricityGenerator.ElectricityGenerator_C.AddBlocker
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AElectricityBlocker_C*            Blocker                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AElectricityGenerator_C::AddBlocker(class AElectricityBlocker_C* Blocker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ElectricityGenerator_C", "AddBlocker");

	Params::ElectricityGenerator_C_AddBlocker Parms{};

	Parms.Blocker = Blocker;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ElectricityGenerator.ElectricityGenerator_C.AddListener
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IElectricityConsumer_C>Listener                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AElectricityGenerator_C::AddListener(TScriptInterface<class IElectricityConsumer_C> Listener)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ElectricityGenerator_C", "AddListener");

	Params::ElectricityGenerator_C_AddListener Parms{};

	Parms.Listener = Listener;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ElectricityGenerator.ElectricityGenerator_C.CollectAllInactiveDoors
// (BlueprintCallable, BlueprintEvent)

void AElectricityGenerator_C::CollectAllInactiveDoors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ElectricityGenerator_C", "CollectAllInactiveDoors");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ElectricityGenerator.ElectricityGenerator_C.ExecuteUbergraph_ElectricityGenerator
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AElectricityGenerator_C::ExecuteUbergraph_ElectricityGenerator(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ElectricityGenerator_C", "ExecuteUbergraph_ElectricityGenerator");

	Params::ElectricityGenerator_C_ExecuteUbergraph_ElectricityGenerator Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ElectricityGenerator.ElectricityGenerator_C.OnBreakBlocker
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AElectricityBlocker_C*            Blocker                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AElectricityGenerator_C::OnBreakBlocker(class AElectricityBlocker_C* Blocker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ElectricityGenerator_C", "OnBreakBlocker");

	Params::ElectricityGenerator_C_OnBreakBlocker Parms{};

	Parms.Blocker = Blocker;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ElectricityGenerator.ElectricityGenerator_C.OnToggle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    IsToggled                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AElectricityGenerator_C::OnToggle(class APawn* Player, bool IsToggled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ElectricityGenerator_C", "OnToggle");

	Params::ElectricityGenerator_C_OnToggle Parms{};

	Parms.Player = Player;
	Parms.IsToggled = IsToggled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ElectricityGenerator.ElectricityGenerator_C.OnToggleClientSide
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AElectricityGenerator_C::OnToggleClientSide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ElectricityGenerator_C", "OnToggleClientSide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ElectricityGenerator.ElectricityGenerator_C.PreparePCDoors
// (BlueprintCallable, BlueprintEvent)

void AElectricityGenerator_C::PreparePCDoors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ElectricityGenerator_C", "PreparePCDoors");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ElectricityGenerator.ElectricityGenerator_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AElectricityGenerator_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ElectricityGenerator_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ElectricityGenerator.ElectricityGenerator_C.SendElectricityToConsumers
// (Public, BlueprintCallable, BlueprintEvent)

void AElectricityGenerator_C::SendElectricityToConsumers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ElectricityGenerator_C", "SendElectricityToConsumers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ElectricityGenerator.ElectricityGenerator_C.SubscribeToAllBlockers
// (BlueprintCallable, BlueprintEvent)

void AElectricityGenerator_C::SubscribeToAllBlockers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ElectricityGenerator_C", "SubscribeToAllBlockers");

	UObject::ProcessEvent(Func, nullptr);
}

}

