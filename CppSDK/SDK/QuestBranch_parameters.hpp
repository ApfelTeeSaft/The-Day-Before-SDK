#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuestBranch

#include "Basic.hpp"


namespace SDK::Params
{

// Function QuestBranch.QuestBranch_C.AddQuest
// 0x0010 (0x0010 - 0x0000)
struct QuestBranch_C_AddQuest final
{
public:
	class UQuestV2_C*                             Quest;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestBranch_C_AddQuest) == 0x000008, "Wrong alignment on QuestBranch_C_AddQuest");
static_assert(sizeof(QuestBranch_C_AddQuest) == 0x000010, "Wrong size on QuestBranch_C_AddQuest");
static_assert(offsetof(QuestBranch_C_AddQuest, Quest) == 0x000000, "Member 'QuestBranch_C_AddQuest::Quest' has a wrong offset!");
static_assert(offsetof(QuestBranch_C_AddQuest, CallFunc_Array_Add_ReturnValue) == 0x000008, "Member 'QuestBranch_C_AddQuest::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestBranch_C_AddQuest, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000C, "Member 'QuestBranch_C_AddQuest::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function QuestBranch.QuestBranch_C.ExecuteUbergraph_QuestBranch
// 0x0010 (0x0010 - 0x0000)
struct QuestBranch_C_ExecuteUbergraph_QuestBranch final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuestV2_C*                             K2Node_CustomEvent_CompletedQuest;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestBranch_C_ExecuteUbergraph_QuestBranch) == 0x000008, "Wrong alignment on QuestBranch_C_ExecuteUbergraph_QuestBranch");
static_assert(sizeof(QuestBranch_C_ExecuteUbergraph_QuestBranch) == 0x000010, "Wrong size on QuestBranch_C_ExecuteUbergraph_QuestBranch");
static_assert(offsetof(QuestBranch_C_ExecuteUbergraph_QuestBranch, EntryPoint) == 0x000000, "Member 'QuestBranch_C_ExecuteUbergraph_QuestBranch::EntryPoint' has a wrong offset!");
static_assert(offsetof(QuestBranch_C_ExecuteUbergraph_QuestBranch, K2Node_CustomEvent_CompletedQuest) == 0x000008, "Member 'QuestBranch_C_ExecuteUbergraph_QuestBranch::K2Node_CustomEvent_CompletedQuest' has a wrong offset!");

// Function QuestBranch.QuestBranch_C.GetNextQuest
// 0x0018 (0x0018 - 0x0000)
struct QuestBranch_C_GetNextQuest final
{
public:
	class UQuestV2_C*                             NextQuest;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuestV2_C*                             CallFunc_GetQuestByID_Quest;                       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestBranch_C_GetNextQuest) == 0x000008, "Wrong alignment on QuestBranch_C_GetNextQuest");
static_assert(sizeof(QuestBranch_C_GetNextQuest) == 0x000018, "Wrong size on QuestBranch_C_GetNextQuest");
static_assert(offsetof(QuestBranch_C_GetNextQuest, NextQuest) == 0x000000, "Member 'QuestBranch_C_GetNextQuest::NextQuest' has a wrong offset!");
static_assert(offsetof(QuestBranch_C_GetNextQuest, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'QuestBranch_C_GetNextQuest::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestBranch_C_GetNextQuest, CallFunc_GetQuestByID_Quest) == 0x000010, "Member 'QuestBranch_C_GetNextQuest::CallFunc_GetQuestByID_Quest' has a wrong offset!");

// Function QuestBranch.QuestBranch_C.GetNextQuestByID
// 0x0020 (0x0020 - 0x0000)
struct QuestBranch_C_GetNextQuestByID final
{
public:
	int32                                         Param_ID;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuestV2_C*                             NextQuest;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuestV2_C*                             CallFunc_GetQuestByID_Quest;                       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestBranch_C_GetNextQuestByID) == 0x000008, "Wrong alignment on QuestBranch_C_GetNextQuestByID");
static_assert(sizeof(QuestBranch_C_GetNextQuestByID) == 0x000020, "Wrong size on QuestBranch_C_GetNextQuestByID");
static_assert(offsetof(QuestBranch_C_GetNextQuestByID, Param_ID) == 0x000000, "Member 'QuestBranch_C_GetNextQuestByID::Param_ID' has a wrong offset!");
static_assert(offsetof(QuestBranch_C_GetNextQuestByID, NextQuest) == 0x000008, "Member 'QuestBranch_C_GetNextQuestByID::NextQuest' has a wrong offset!");
static_assert(offsetof(QuestBranch_C_GetNextQuestByID, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'QuestBranch_C_GetNextQuestByID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestBranch_C_GetNextQuestByID, CallFunc_GetQuestByID_Quest) == 0x000018, "Member 'QuestBranch_C_GetNextQuestByID::CallFunc_GetQuestByID_Quest' has a wrong offset!");

// Function QuestBranch.QuestBranch_C.GetQuestByID
// 0x0018 (0x0018 - 0x0000)
struct QuestBranch_C_GetQuestByID final
{
public:
	int32                                         Param_ID;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuestV2_C*                             Quest;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UQuestV2_C*                             CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestBranch_C_GetQuestByID) == 0x000008, "Wrong alignment on QuestBranch_C_GetQuestByID");
static_assert(sizeof(QuestBranch_C_GetQuestByID) == 0x000018, "Wrong size on QuestBranch_C_GetQuestByID");
static_assert(offsetof(QuestBranch_C_GetQuestByID, Param_ID) == 0x000000, "Member 'QuestBranch_C_GetQuestByID::Param_ID' has a wrong offset!");
static_assert(offsetof(QuestBranch_C_GetQuestByID, Quest) == 0x000008, "Member 'QuestBranch_C_GetQuestByID::Quest' has a wrong offset!");
static_assert(offsetof(QuestBranch_C_GetQuestByID, CallFunc_Array_Get_Item) == 0x000010, "Member 'QuestBranch_C_GetQuestByID::CallFunc_Array_Get_Item' has a wrong offset!");

// Function QuestBranch.QuestBranch_C.HasNextQuest
// 0x0014 (0x0014 - 0x0000)
struct QuestBranch_C_HasNextQuest final
{
public:
	int32                                         Param_ID;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasNext;                                           // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestBranch_C_HasNextQuest) == 0x000004, "Wrong alignment on QuestBranch_C_HasNextQuest");
static_assert(sizeof(QuestBranch_C_HasNextQuest) == 0x000014, "Wrong size on QuestBranch_C_HasNextQuest");
static_assert(offsetof(QuestBranch_C_HasNextQuest, Param_ID) == 0x000000, "Member 'QuestBranch_C_HasNextQuest::Param_ID' has a wrong offset!");
static_assert(offsetof(QuestBranch_C_HasNextQuest, HasNext) == 0x000004, "Member 'QuestBranch_C_HasNextQuest::HasNext' has a wrong offset!");
static_assert(offsetof(QuestBranch_C_HasNextQuest, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'QuestBranch_C_HasNextQuest::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestBranch_C_HasNextQuest, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'QuestBranch_C_HasNextQuest::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestBranch_C_HasNextQuest, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'QuestBranch_C_HasNextQuest::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function QuestBranch.QuestBranch_C.Initialize
// 0x0020 (0x0020 - 0x0000)
struct QuestBranch_C_Initialize final
{
public:
	class FString                                 Param_ID;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class AQuestManager_C*                        Param_Manager;                                     // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UQuestSystemV3_C*                       QuestSystem;                                       // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestBranch_C_Initialize) == 0x000008, "Wrong alignment on QuestBranch_C_Initialize");
static_assert(sizeof(QuestBranch_C_Initialize) == 0x000020, "Wrong size on QuestBranch_C_Initialize");
static_assert(offsetof(QuestBranch_C_Initialize, Param_ID) == 0x000000, "Member 'QuestBranch_C_Initialize::Param_ID' has a wrong offset!");
static_assert(offsetof(QuestBranch_C_Initialize, Param_Manager) == 0x000010, "Member 'QuestBranch_C_Initialize::Param_Manager' has a wrong offset!");
static_assert(offsetof(QuestBranch_C_Initialize, QuestSystem) == 0x000018, "Member 'QuestBranch_C_Initialize::QuestSystem' has a wrong offset!");

// Function QuestBranch.QuestBranch_C.InitializeV2
// 0x0018 (0x0018 - 0x0000)
struct QuestBranch_C_InitializeV2 final
{
public:
	class FString                                 Param_ID;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UQuestSystemV3_C*                       QuestSystem;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestBranch_C_InitializeV2) == 0x000008, "Wrong alignment on QuestBranch_C_InitializeV2");
static_assert(sizeof(QuestBranch_C_InitializeV2) == 0x000018, "Wrong size on QuestBranch_C_InitializeV2");
static_assert(offsetof(QuestBranch_C_InitializeV2, Param_ID) == 0x000000, "Member 'QuestBranch_C_InitializeV2::Param_ID' has a wrong offset!");
static_assert(offsetof(QuestBranch_C_InitializeV2, QuestSystem) == 0x000010, "Member 'QuestBranch_C_InitializeV2::QuestSystem' has a wrong offset!");

// Function QuestBranch.QuestBranch_C.OnQuestCompleted
// 0x0008 (0x0008 - 0x0000)
struct QuestBranch_C_OnQuestCompleted final
{
public:
	class UQuestV2_C*                             CompletedQuest;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestBranch_C_OnQuestCompleted) == 0x000008, "Wrong alignment on QuestBranch_C_OnQuestCompleted");
static_assert(sizeof(QuestBranch_C_OnQuestCompleted) == 0x000008, "Wrong size on QuestBranch_C_OnQuestCompleted");
static_assert(offsetof(QuestBranch_C_OnQuestCompleted, CompletedQuest) == 0x000000, "Member 'QuestBranch_C_OnQuestCompleted::CompletedQuest' has a wrong offset!");

// Function QuestBranch.QuestBranch_C.ProcessLocalTrigger
// 0x0050 (0x0050 - 0x0000)
struct QuestBranch_C_ProcessLocalTrigger final
{
public:
	class FString                                 Trigger;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          HasCompletedQuest;                                 // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuestV2_C*                             CompletedQuest;                                    // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UQuestV2_C*                             ResultQuest;                                       // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuestV2_C*                             CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProcessLocalTrigger_Result;               // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestBranch_C_ProcessLocalTrigger) == 0x000008, "Wrong alignment on QuestBranch_C_ProcessLocalTrigger");
static_assert(sizeof(QuestBranch_C_ProcessLocalTrigger) == 0x000050, "Wrong size on QuestBranch_C_ProcessLocalTrigger");
static_assert(offsetof(QuestBranch_C_ProcessLocalTrigger, Trigger) == 0x000000, "Member 'QuestBranch_C_ProcessLocalTrigger::Trigger' has a wrong offset!");
static_assert(offsetof(QuestBranch_C_ProcessLocalTrigger, HasCompletedQuest) == 0x000010, "Member 'QuestBranch_C_ProcessLocalTrigger::HasCompletedQuest' has a wrong offset!");
static_assert(offsetof(QuestBranch_C_ProcessLocalTrigger, CompletedQuest) == 0x000018, "Member 'QuestBranch_C_ProcessLocalTrigger::CompletedQuest' has a wrong offset!");
static_assert(offsetof(QuestBranch_C_ProcessLocalTrigger, ResultQuest) == 0x000020, "Member 'QuestBranch_C_ProcessLocalTrigger::ResultQuest' has a wrong offset!");
static_assert(offsetof(QuestBranch_C_ProcessLocalTrigger, Result) == 0x000028, "Member 'QuestBranch_C_ProcessLocalTrigger::Result' has a wrong offset!");
static_assert(offsetof(QuestBranch_C_ProcessLocalTrigger, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'QuestBranch_C_ProcessLocalTrigger::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(QuestBranch_C_ProcessLocalTrigger, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'QuestBranch_C_ProcessLocalTrigger::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(QuestBranch_C_ProcessLocalTrigger, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'QuestBranch_C_ProcessLocalTrigger::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestBranch_C_ProcessLocalTrigger, Temp_bool_True_if_break_was_hit_Variable) == 0x000038, "Member 'QuestBranch_C_ProcessLocalTrigger::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(QuestBranch_C_ProcessLocalTrigger, CallFunc_Not_PreBool_ReturnValue) == 0x000039, "Member 'QuestBranch_C_ProcessLocalTrigger::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestBranch_C_ProcessLocalTrigger, CallFunc_Array_Get_Item) == 0x000040, "Member 'QuestBranch_C_ProcessLocalTrigger::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(QuestBranch_C_ProcessLocalTrigger, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'QuestBranch_C_ProcessLocalTrigger::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestBranch_C_ProcessLocalTrigger, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'QuestBranch_C_ProcessLocalTrigger::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestBranch_C_ProcessLocalTrigger, CallFunc_ProcessLocalTrigger_Result) == 0x00004D, "Member 'QuestBranch_C_ProcessLocalTrigger::CallFunc_ProcessLocalTrigger_Result' has a wrong offset!");
static_assert(offsetof(QuestBranch_C_ProcessLocalTrigger, CallFunc_BooleanAND_ReturnValue) == 0x00004E, "Member 'QuestBranch_C_ProcessLocalTrigger::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function QuestBranch.QuestBranch_C.ProcessQuestTrigger
// 0x0030 (0x0030 - 0x0000)
struct QuestBranch_C_ProcessQuestTrigger final
{
public:
	class FString                                 Trigger;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuestV2_C*                             CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestBranch_C_ProcessQuestTrigger) == 0x000008, "Wrong alignment on QuestBranch_C_ProcessQuestTrigger");
static_assert(sizeof(QuestBranch_C_ProcessQuestTrigger) == 0x000030, "Wrong size on QuestBranch_C_ProcessQuestTrigger");
static_assert(offsetof(QuestBranch_C_ProcessQuestTrigger, Trigger) == 0x000000, "Member 'QuestBranch_C_ProcessQuestTrigger::Trigger' has a wrong offset!");
static_assert(offsetof(QuestBranch_C_ProcessQuestTrigger, Temp_int_Array_Index_Variable) == 0x000010, "Member 'QuestBranch_C_ProcessQuestTrigger::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(QuestBranch_C_ProcessQuestTrigger, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'QuestBranch_C_ProcessQuestTrigger::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(QuestBranch_C_ProcessQuestTrigger, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'QuestBranch_C_ProcessQuestTrigger::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestBranch_C_ProcessQuestTrigger, CallFunc_Array_Get_Item) == 0x000020, "Member 'QuestBranch_C_ProcessQuestTrigger::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(QuestBranch_C_ProcessQuestTrigger, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'QuestBranch_C_ProcessQuestTrigger::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestBranch_C_ProcessQuestTrigger, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'QuestBranch_C_ProcessQuestTrigger::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function QuestBranch.QuestBranch_C.StartBranch
// 0x0008 (0x0008 - 0x0000)
struct QuestBranch_C_StartBranch final
{
public:
	class UQuestV2_C*                             CallFunc_GetQuestByID_Quest;                       // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestBranch_C_StartBranch) == 0x000008, "Wrong alignment on QuestBranch_C_StartBranch");
static_assert(sizeof(QuestBranch_C_StartBranch) == 0x000008, "Wrong size on QuestBranch_C_StartBranch");
static_assert(offsetof(QuestBranch_C_StartBranch, CallFunc_GetQuestByID_Quest) == 0x000000, "Member 'QuestBranch_C_StartBranch::CallFunc_GetQuestByID_Quest' has a wrong offset!");

// Function QuestBranch.QuestBranch_C.SwitchQuest
// 0x0008 (0x0008 - 0x0000)
struct QuestBranch_C_SwitchQuest final
{
public:
	class UQuestV2_C*                             Quest;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestBranch_C_SwitchQuest) == 0x000008, "Wrong alignment on QuestBranch_C_SwitchQuest");
static_assert(sizeof(QuestBranch_C_SwitchQuest) == 0x000008, "Wrong size on QuestBranch_C_SwitchQuest");
static_assert(offsetof(QuestBranch_C_SwitchQuest, Quest) == 0x000000, "Member 'QuestBranch_C_SwitchQuest::Quest' has a wrong offset!");

// Function QuestBranch.QuestBranch_C.SwitchQuestSilent
// 0x0008 (0x0008 - 0x0000)
struct QuestBranch_C_SwitchQuestSilent final
{
public:
	class UQuestV2_C*                             Quest;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestBranch_C_SwitchQuestSilent) == 0x000008, "Wrong alignment on QuestBranch_C_SwitchQuestSilent");
static_assert(sizeof(QuestBranch_C_SwitchQuestSilent) == 0x000008, "Wrong size on QuestBranch_C_SwitchQuestSilent");
static_assert(offsetof(QuestBranch_C_SwitchQuestSilent, Quest) == 0x000000, "Member 'QuestBranch_C_SwitchQuestSilent::Quest' has a wrong offset!");

// Function QuestBranch.QuestBranch_C.SwitchToNextQuest
// 0x0008 (0x0008 - 0x0000)
struct QuestBranch_C_SwitchToNextQuest final
{
public:
	class UQuestV2_C*                             CallFunc_GetNextQuest_NextQuest;                   // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestBranch_C_SwitchToNextQuest) == 0x000008, "Wrong alignment on QuestBranch_C_SwitchToNextQuest");
static_assert(sizeof(QuestBranch_C_SwitchToNextQuest) == 0x000008, "Wrong size on QuestBranch_C_SwitchToNextQuest");
static_assert(offsetof(QuestBranch_C_SwitchToNextQuest, CallFunc_GetNextQuest_NextQuest) == 0x000000, "Member 'QuestBranch_C_SwitchToNextQuest::CallFunc_GetNextQuest_NextQuest' has a wrong offset!");

// Function QuestBranch.QuestBranch_C.SwitchToNextQuestByID
// 0x0010 (0x0010 - 0x0000)
struct QuestBranch_C_SwitchToNextQuestByID final
{
public:
	int32                                         Param_ID;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuestV2_C*                             CallFunc_GetNextQuestByID_NextQuest;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestBranch_C_SwitchToNextQuestByID) == 0x000008, "Wrong alignment on QuestBranch_C_SwitchToNextQuestByID");
static_assert(sizeof(QuestBranch_C_SwitchToNextQuestByID) == 0x000010, "Wrong size on QuestBranch_C_SwitchToNextQuestByID");
static_assert(offsetof(QuestBranch_C_SwitchToNextQuestByID, Param_ID) == 0x000000, "Member 'QuestBranch_C_SwitchToNextQuestByID::Param_ID' has a wrong offset!");
static_assert(offsetof(QuestBranch_C_SwitchToNextQuestByID, CallFunc_GetNextQuestByID_NextQuest) == 0x000008, "Member 'QuestBranch_C_SwitchToNextQuestByID::CallFunc_GetNextQuestByID_NextQuest' has a wrong offset!");

}

