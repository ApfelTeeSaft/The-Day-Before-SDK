#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_TickIntervalController

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BPC_TickIntervalController.BPC_TickIntervalController_C.ExecuteUbergraph_BPC_TickIntervalController
// 0x00F8 (0x00F8 - 0x0000)
struct BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetDistanceToCamera_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NeedChangeLOD__ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetCurrentLODValue_LODValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetCurrentLODValue_LODValue_1;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NeedChangeLOD__ReturnValue_1;             // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66[0x2];                                       // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Array_Get_Item_1;                         // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item_2;                         // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NeedChangeLOD__ReturnValue_2;             // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B7[0x1];                                       // 0x00B7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetCurrentLODValue_LODValue_2;            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2[0x6];                                       // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UActorComponent*>                CallFunc_K2_GetComponentsByClass_ReturnValue_1;    // 0x00D8(0x0010)(ReferenceParm, ContainsInstancedReference)
	float                                         CallFunc_SetActorTickInterval_TickInterval_ImplicitCast; // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetComponentTickInterval_TickInterval_ImplicitCast; // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetComponentTickInterval_TickInterval_ImplicitCast_1; // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController) == 0x000008, "Wrong alignment on BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController");
static_assert(sizeof(BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController) == 0x0000F8, "Wrong size on BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController");
static_assert(offsetof(BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController, EntryPoint) == 0x000000, "Member 'BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController, Temp_int_Loop_Counter_Variable_1) == 0x000014, "Member 'BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000020, "Member 'BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController, CallFunc_GetDistanceToCamera_ReturnValue) == 0x000038, "Member 'BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController::CallFunc_GetDistanceToCamera_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController, CallFunc_NeedChangeLOD__ReturnValue) == 0x000040, "Member 'BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController::CallFunc_NeedChangeLOD__ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController, CallFunc_BooleanAND_ReturnValue) == 0x000041, "Member 'BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController, CallFunc_Array_Length_ReturnValue_1) == 0x000044, "Member 'BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController, CallFunc_GetCurrentLODValue_LODValue) == 0x000048, "Member 'BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController::CallFunc_GetCurrentLODValue_LODValue' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController, CallFunc_GetCurrentLODValue_LODValue_1) == 0x000058, "Member 'BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController::CallFunc_GetCurrentLODValue_LODValue_1' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController, Temp_int_Loop_Counter_Variable_2) == 0x000060, "Member 'BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController, CallFunc_NeedChangeLOD__ReturnValue_1) == 0x000064, "Member 'BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController::CallFunc_NeedChangeLOD__ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController, CallFunc_Less_IntInt_ReturnValue_1) == 0x000065, "Member 'BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController, CallFunc_Add_IntInt_ReturnValue_2) == 0x000068, "Member 'BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController, CallFunc_BooleanAND_ReturnValue_1) == 0x00006C, "Member 'BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController, Temp_int_Array_Index_Variable_1) == 0x000070, "Member 'BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController, CallFunc_Array_Get_Item) == 0x000078, "Member 'BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000080, "Member 'BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController, Temp_int_Array_Index_Variable_2) == 0x000084, "Member 'BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController, CallFunc_Array_Get_Item_1) == 0x000088, "Member 'BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController, CallFunc_Array_Get_Item_2) == 0x000098, "Member 'BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController, CallFunc_BreakVector2D_X) == 0x0000A0, "Member 'BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController, CallFunc_BreakVector2D_Y) == 0x0000A8, "Member 'BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController, CallFunc_Array_Length_ReturnValue_2) == 0x0000B0, "Member 'BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0000B4, "Member 'BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000B5, "Member 'BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController, CallFunc_NeedChangeLOD__ReturnValue_2) == 0x0000B6, "Member 'BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController::CallFunc_NeedChangeLOD__ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController, CallFunc_GetCurrentLODValue_LODValue_2) == 0x0000B8, "Member 'BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController::CallFunc_GetCurrentLODValue_LODValue_2' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController, CallFunc_BooleanAND_ReturnValue_2) == 0x0000C0, "Member 'BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController, K2Node_Event_DeltaSeconds) == 0x0000C4, "Member 'BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController, CallFunc_GetOwner_ReturnValue) == 0x0000C8, "Member 'BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController, CallFunc_IsDedicatedServer_ReturnValue) == 0x0000D0, "Member 'BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController, CallFunc_Not_PreBool_ReturnValue) == 0x0000D1, "Member 'BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController, CallFunc_K2_GetComponentsByClass_ReturnValue_1) == 0x0000D8, "Member 'BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController::CallFunc_K2_GetComponentsByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController, CallFunc_SetActorTickInterval_TickInterval_ImplicitCast) == 0x0000E8, "Member 'BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController::CallFunc_SetActorTickInterval_TickInterval_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController, CallFunc_SetComponentTickInterval_TickInterval_ImplicitCast) == 0x0000EC, "Member 'BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController::CallFunc_SetComponentTickInterval_TickInterval_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController, CallFunc_SetComponentTickInterval_TickInterval_ImplicitCast_1) == 0x0000F0, "Member 'BPC_TickIntervalController_C_ExecuteUbergraph_BPC_TickIntervalController::CallFunc_SetComponentTickInterval_TickInterval_ImplicitCast_1' has a wrong offset!");

// Function BPC_TickIntervalController.BPC_TickIntervalController_C.GetCurrentLODValue
// 0x0018 (0x0018 - 0x0000)
struct BPC_TickIntervalController_C_GetCurrentLODValue final
{
public:
	double                                        LODValue;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_TickIntervalController_C_GetCurrentLODValue) == 0x000008, "Wrong alignment on BPC_TickIntervalController_C_GetCurrentLODValue");
static_assert(sizeof(BPC_TickIntervalController_C_GetCurrentLODValue) == 0x000018, "Wrong size on BPC_TickIntervalController_C_GetCurrentLODValue");
static_assert(offsetof(BPC_TickIntervalController_C_GetCurrentLODValue, LODValue) == 0x000000, "Member 'BPC_TickIntervalController_C_GetCurrentLODValue::LODValue' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_GetCurrentLODValue, CallFunc_BreakVector2D_X) == 0x000008, "Member 'BPC_TickIntervalController_C_GetCurrentLODValue::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_GetCurrentLODValue, CallFunc_BreakVector2D_Y) == 0x000010, "Member 'BPC_TickIntervalController_C_GetCurrentLODValue::CallFunc_BreakVector2D_Y' has a wrong offset!");

// Function BPC_TickIntervalController.BPC_TickIntervalController_C.GetDistanceToCamera
// 0x0048 (0x0048 - 0x0000)
struct BPC_TickIntervalController_C_GetDistanceToCamera final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_DistanceSquared_ReturnValue;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_TickIntervalController_C_GetDistanceToCamera) == 0x000008, "Wrong alignment on BPC_TickIntervalController_C_GetDistanceToCamera");
static_assert(sizeof(BPC_TickIntervalController_C_GetDistanceToCamera) == 0x000048, "Wrong size on BPC_TickIntervalController_C_GetDistanceToCamera");
static_assert(offsetof(BPC_TickIntervalController_C_GetDistanceToCamera, ReturnValue) == 0x000000, "Member 'BPC_TickIntervalController_C_GetDistanceToCamera::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_GetDistanceToCamera, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000008, "Member 'BPC_TickIntervalController_C_GetDistanceToCamera::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_GetDistanceToCamera, CallFunc_GetCameraLocation_ReturnValue) == 0x000010, "Member 'BPC_TickIntervalController_C_GetDistanceToCamera::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_GetDistanceToCamera, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'BPC_TickIntervalController_C_GetDistanceToCamera::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_GetDistanceToCamera, CallFunc_Vector_DistanceSquared_ReturnValue) == 0x000040, "Member 'BPC_TickIntervalController_C_GetDistanceToCamera::CallFunc_Vector_DistanceSquared_ReturnValue' has a wrong offset!");

// Function BPC_TickIntervalController.BPC_TickIntervalController_C.NeedChangeLOD?
// 0x0002 (0x0002 - 0x0000)
struct BPC_TickIntervalController_C_NeedChangeLOD_ final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_TickIntervalController_C_NeedChangeLOD_) == 0x000001, "Wrong alignment on BPC_TickIntervalController_C_NeedChangeLOD_");
static_assert(sizeof(BPC_TickIntervalController_C_NeedChangeLOD_) == 0x000002, "Wrong size on BPC_TickIntervalController_C_NeedChangeLOD_");
static_assert(offsetof(BPC_TickIntervalController_C_NeedChangeLOD_, ReturnValue) == 0x000000, "Member 'BPC_TickIntervalController_C_NeedChangeLOD_::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_TickIntervalController_C_NeedChangeLOD_, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000001, "Member 'BPC_TickIntervalController_C_NeedChangeLOD_::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BPC_TickIntervalController.BPC_TickIntervalController_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BPC_TickIntervalController_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_TickIntervalController_C_ReceiveTick) == 0x000004, "Wrong alignment on BPC_TickIntervalController_C_ReceiveTick");
static_assert(sizeof(BPC_TickIntervalController_C_ReceiveTick) == 0x000004, "Wrong size on BPC_TickIntervalController_C_ReceiveTick");
static_assert(offsetof(BPC_TickIntervalController_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BPC_TickIntervalController_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

