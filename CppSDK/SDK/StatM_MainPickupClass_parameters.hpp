#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: StatM_MainPickupClass

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "FItemInfo_structs.hpp"


namespace SDK::Params
{

// Function StatM_MainPickupClass.StatM_MainPickupClass_C.CallLootAnim
// 0x0010 (0x0010 - 0x0000)
struct StatM_MainPickupClass_C_CallLootAnim final
{
public:
	double                                        LootingHeight;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LootPointOpened;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StatM_MainPickupClass_C_CallLootAnim) == 0x000008, "Wrong alignment on StatM_MainPickupClass_C_CallLootAnim");
static_assert(sizeof(StatM_MainPickupClass_C_CallLootAnim) == 0x000010, "Wrong size on StatM_MainPickupClass_C_CallLootAnim");
static_assert(offsetof(StatM_MainPickupClass_C_CallLootAnim, LootingHeight) == 0x000000, "Member 'StatM_MainPickupClass_C_CallLootAnim::LootingHeight' has a wrong offset!");
static_assert(offsetof(StatM_MainPickupClass_C_CallLootAnim, LootPointOpened) == 0x000008, "Member 'StatM_MainPickupClass_C_CallLootAnim::LootPointOpened' has a wrong offset!");

// Function StatM_MainPickupClass.StatM_MainPickupClass_C.Craft
// 0x0008 (0x0008 - 0x0000)
struct StatM_MainPickupClass_C_Craft final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StatM_MainPickupClass_C_Craft) == 0x000008, "Wrong alignment on StatM_MainPickupClass_C_Craft");
static_assert(sizeof(StatM_MainPickupClass_C_Craft) == 0x000008, "Wrong size on StatM_MainPickupClass_C_Craft");
static_assert(offsetof(StatM_MainPickupClass_C_Craft, Player) == 0x000000, "Member 'StatM_MainPickupClass_C_Craft::Player' has a wrong offset!");

// Function StatM_MainPickupClass.StatM_MainPickupClass_C.ExecuteUbergraph_StatM_MainPickupClass
// 0x0078 (0x0078 - 0x0000)
struct StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_TileName_1;                           // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_TileName;                             // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player_1;                             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player;                               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_LootingHeight;                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_LootPointOpened;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALootPoint_C*                           K2Node_Event_LootPoint;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_String;                               // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_Door_C*                             K2Node_Event_Door;                                 // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsOpen;                               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Attach;                               // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Canister_C*                         K2Node_Event_Canister;                             // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_NewParam;                             // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_NewEnable;                            // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateCount_Updated;                      // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Enable_;                              // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Equipped;                             // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x006F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass) == 0x000008, "Wrong alignment on StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass");
static_assert(sizeof(StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass) == 0x000078, "Wrong size on StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass");
static_assert(offsetof(StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass, EntryPoint) == 0x000000, "Member 'StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass::EntryPoint' has a wrong offset!");
static_assert(offsetof(StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass, K2Node_Event_TileName_1) == 0x000004, "Member 'StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass::K2Node_Event_TileName_1' has a wrong offset!");
static_assert(offsetof(StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass, K2Node_Event_TileName) == 0x00000C, "Member 'StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass::K2Node_Event_TileName' has a wrong offset!");
static_assert(offsetof(StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass, K2Node_Event_Player_1) == 0x000018, "Member 'StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass::K2Node_Event_Player_1' has a wrong offset!");
static_assert(offsetof(StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass, K2Node_Event_Player) == 0x000020, "Member 'StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass::K2Node_Event_Player' has a wrong offset!");
static_assert(offsetof(StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass, K2Node_Event_LootingHeight) == 0x000028, "Member 'StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass::K2Node_Event_LootingHeight' has a wrong offset!");
static_assert(offsetof(StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass, K2Node_Event_LootPointOpened) == 0x000030, "Member 'StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass::K2Node_Event_LootPointOpened' has a wrong offset!");
static_assert(offsetof(StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass, K2Node_Event_LootPoint) == 0x000038, "Member 'StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass::K2Node_Event_LootPoint' has a wrong offset!");
static_assert(offsetof(StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass, K2Node_Event_String) == 0x000040, "Member 'StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass::K2Node_Event_String' has a wrong offset!");
static_assert(offsetof(StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass, K2Node_Event_Door) == 0x000050, "Member 'StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass::K2Node_Event_Door' has a wrong offset!");
static_assert(offsetof(StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass, K2Node_Event_IsOpen) == 0x000058, "Member 'StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass::K2Node_Event_IsOpen' has a wrong offset!");
static_assert(offsetof(StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass, K2Node_Event_Attach) == 0x000059, "Member 'StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass::K2Node_Event_Attach' has a wrong offset!");
static_assert(offsetof(StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass, K2Node_Event_Canister) == 0x000060, "Member 'StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass::K2Node_Event_Canister' has a wrong offset!");
static_assert(offsetof(StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass, K2Node_Event_NewParam) == 0x000068, "Member 'StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass::K2Node_Event_NewParam' has a wrong offset!");
static_assert(offsetof(StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass, K2Node_Event_NewEnable) == 0x000069, "Member 'StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass::K2Node_Event_NewEnable' has a wrong offset!");
static_assert(offsetof(StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass, CallFunc_Greater_IntInt_ReturnValue) == 0x00006A, "Member 'StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass, CallFunc_UpdateCount_Updated) == 0x00006B, "Member 'StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass::CallFunc_UpdateCount_Updated' has a wrong offset!");
static_assert(offsetof(StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass, K2Node_Event_Enable_) == 0x00006C, "Member 'StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass::K2Node_Event_Enable_' has a wrong offset!");
static_assert(offsetof(StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass, K2Node_Event_Equipped) == 0x00006D, "Member 'StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass::K2Node_Event_Equipped' has a wrong offset!");
static_assert(offsetof(StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass, CallFunc_K2_AttachToComponent_ReturnValue) == 0x00006E, "Member 'StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass, CallFunc_IsValid_ReturnValue) == 0x00006F, "Member 'StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass, CallFunc_HasAuthority_ReturnValue) == 0x000070, "Member 'StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass, CallFunc_Not_PreBool_ReturnValue) == 0x000071, "Member 'StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass, CallFunc_NotEqual_NameName_ReturnValue) == 0x000072, "Member 'StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass, CallFunc_BooleanAND_ReturnValue) == 0x000073, "Member 'StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass, CallFunc_BooleanAND_ReturnValue_1) == 0x000074, "Member 'StatM_MainPickupClass_C_ExecuteUbergraph_StatM_MainPickupClass::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function StatM_MainPickupClass.StatM_MainPickupClass_C.getMesh
// 0x0008 (0x0008 - 0x0000)
struct StatM_MainPickupClass_C_GetMesh final
{
public:
	class UMeshComponent*                         MeshRef;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StatM_MainPickupClass_C_GetMesh) == 0x000008, "Wrong alignment on StatM_MainPickupClass_C_GetMesh");
static_assert(sizeof(StatM_MainPickupClass_C_GetMesh) == 0x000008, "Wrong size on StatM_MainPickupClass_C_GetMesh");
static_assert(offsetof(StatM_MainPickupClass_C_GetMesh, MeshRef) == 0x000000, "Member 'StatM_MainPickupClass_C_GetMesh::MeshRef' has a wrong offset!");

// Function StatM_MainPickupClass.StatM_MainPickupClass_C.GetMuzzleLocation
// 0x0030 (0x0030 - 0x0000)
struct StatM_MainPickupClass_C_GetMuzzleLocation final
{
public:
	struct FVector                                Muzzle;                                            // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StatM_MainPickupClass_C_GetMuzzleLocation) == 0x000008, "Wrong alignment on StatM_MainPickupClass_C_GetMuzzleLocation");
static_assert(sizeof(StatM_MainPickupClass_C_GetMuzzleLocation) == 0x000030, "Wrong size on StatM_MainPickupClass_C_GetMuzzleLocation");
static_assert(offsetof(StatM_MainPickupClass_C_GetMuzzleLocation, Muzzle) == 0x000000, "Member 'StatM_MainPickupClass_C_GetMuzzleLocation::Muzzle' has a wrong offset!");
static_assert(offsetof(StatM_MainPickupClass_C_GetMuzzleLocation, CallFunc_GetSocketLocation_ReturnValue) == 0x000018, "Member 'StatM_MainPickupClass_C_GetMuzzleLocation::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");

// Function StatM_MainPickupClass.StatM_MainPickupClass_C.GetPickupComponent
// 0x0008 (0x0008 - 0x0000)
struct StatM_MainPickupClass_C_GetPickupComponent final
{
public:
	class UPickupComponent_C*                     PickupCompo;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StatM_MainPickupClass_C_GetPickupComponent) == 0x000008, "Wrong alignment on StatM_MainPickupClass_C_GetPickupComponent");
static_assert(sizeof(StatM_MainPickupClass_C_GetPickupComponent) == 0x000008, "Wrong size on StatM_MainPickupClass_C_GetPickupComponent");
static_assert(offsetof(StatM_MainPickupClass_C_GetPickupComponent, PickupCompo) == 0x000000, "Member 'StatM_MainPickupClass_C_GetPickupComponent::PickupCompo' has a wrong offset!");

// Function StatM_MainPickupClass.StatM_MainPickupClass_C.GetSkeletalAsset
// 0x0008 (0x0008 - 0x0000)
struct StatM_MainPickupClass_C_GetSkeletalAsset final
{
public:
	class USkeletalMesh*                          SkelRef;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StatM_MainPickupClass_C_GetSkeletalAsset) == 0x000008, "Wrong alignment on StatM_MainPickupClass_C_GetSkeletalAsset");
static_assert(sizeof(StatM_MainPickupClass_C_GetSkeletalAsset) == 0x000008, "Wrong size on StatM_MainPickupClass_C_GetSkeletalAsset");
static_assert(offsetof(StatM_MainPickupClass_C_GetSkeletalAsset, SkelRef) == 0x000000, "Member 'StatM_MainPickupClass_C_GetSkeletalAsset::SkelRef' has a wrong offset!");

// Function StatM_MainPickupClass.StatM_MainPickupClass_C.GI_TileLoaded
// 0x0008 (0x0008 - 0x0000)
struct StatM_MainPickupClass_C_GI_TileLoaded final
{
public:
	class FName                                   TileName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StatM_MainPickupClass_C_GI_TileLoaded) == 0x000004, "Wrong alignment on StatM_MainPickupClass_C_GI_TileLoaded");
static_assert(sizeof(StatM_MainPickupClass_C_GI_TileLoaded) == 0x000008, "Wrong size on StatM_MainPickupClass_C_GI_TileLoaded");
static_assert(offsetof(StatM_MainPickupClass_C_GI_TileLoaded, TileName) == 0x000000, "Member 'StatM_MainPickupClass_C_GI_TileLoaded::TileName' has a wrong offset!");

// Function StatM_MainPickupClass.StatM_MainPickupClass_C.GI_TileUnloaded
// 0x0008 (0x0008 - 0x0000)
struct StatM_MainPickupClass_C_GI_TileUnloaded final
{
public:
	class FName                                   TileName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StatM_MainPickupClass_C_GI_TileUnloaded) == 0x000004, "Wrong alignment on StatM_MainPickupClass_C_GI_TileUnloaded");
static_assert(sizeof(StatM_MainPickupClass_C_GI_TileUnloaded) == 0x000008, "Wrong size on StatM_MainPickupClass_C_GI_TileUnloaded");
static_assert(offsetof(StatM_MainPickupClass_C_GI_TileUnloaded, TileName) == 0x000000, "Member 'StatM_MainPickupClass_C_GI_TileUnloaded::TileName' has a wrong offset!");

// Function StatM_MainPickupClass.StatM_MainPickupClass_C.HeatUpBonfire
// 0x0008 (0x0008 - 0x0000)
struct StatM_MainPickupClass_C_HeatUpBonfire final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StatM_MainPickupClass_C_HeatUpBonfire) == 0x000008, "Wrong alignment on StatM_MainPickupClass_C_HeatUpBonfire");
static_assert(sizeof(StatM_MainPickupClass_C_HeatUpBonfire) == 0x000008, "Wrong size on StatM_MainPickupClass_C_HeatUpBonfire");
static_assert(offsetof(StatM_MainPickupClass_C_HeatUpBonfire, Player) == 0x000000, "Member 'StatM_MainPickupClass_C_HeatUpBonfire::Player' has a wrong offset!");

// Function StatM_MainPickupClass.StatM_MainPickupClass_C.Interact
// 0x0001 (0x0001 - 0x0000)
struct StatM_MainPickupClass_C_Interact final
{
public:
	bool                                          NewParam;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StatM_MainPickupClass_C_Interact) == 0x000001, "Wrong alignment on StatM_MainPickupClass_C_Interact");
static_assert(sizeof(StatM_MainPickupClass_C_Interact) == 0x000001, "Wrong size on StatM_MainPickupClass_C_Interact");
static_assert(offsetof(StatM_MainPickupClass_C_Interact, NewParam) == 0x000000, "Member 'StatM_MainPickupClass_C_Interact::NewParam' has a wrong offset!");

// Function StatM_MainPickupClass.StatM_MainPickupClass_C.IsInWater
// 0x0001 (0x0001 - 0x0000)
struct StatM_MainPickupClass_C_IsInWater final
{
public:
	bool                                          InWater;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StatM_MainPickupClass_C_IsInWater) == 0x000001, "Wrong alignment on StatM_MainPickupClass_C_IsInWater");
static_assert(sizeof(StatM_MainPickupClass_C_IsInWater) == 0x000001, "Wrong size on StatM_MainPickupClass_C_IsInWater");
static_assert(offsetof(StatM_MainPickupClass_C_IsInWater, InWater) == 0x000000, "Member 'StatM_MainPickupClass_C_IsInWater::InWater' has a wrong offset!");

// Function StatM_MainPickupClass.StatM_MainPickupClass_C.IsPlayer
// 0x0001 (0x0001 - 0x0000)
struct StatM_MainPickupClass_C_IsPlayer final
{
public:
	bool                                          Param_IsPlayer;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StatM_MainPickupClass_C_IsPlayer) == 0x000001, "Wrong alignment on StatM_MainPickupClass_C_IsPlayer");
static_assert(sizeof(StatM_MainPickupClass_C_IsPlayer) == 0x000001, "Wrong size on StatM_MainPickupClass_C_IsPlayer");
static_assert(offsetof(StatM_MainPickupClass_C_IsPlayer, Param_IsPlayer) == 0x000000, "Member 'StatM_MainPickupClass_C_IsPlayer::Param_IsPlayer' has a wrong offset!");

// Function StatM_MainPickupClass.StatM_MainPickupClass_C.OpenDoorRPC
// 0x0010 (0x0010 - 0x0000)
struct StatM_MainPickupClass_C_OpenDoorRPC final
{
public:
	class ABP_Door_C*                             Door;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOpen;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StatM_MainPickupClass_C_OpenDoorRPC) == 0x000008, "Wrong alignment on StatM_MainPickupClass_C_OpenDoorRPC");
static_assert(sizeof(StatM_MainPickupClass_C_OpenDoorRPC) == 0x000010, "Wrong size on StatM_MainPickupClass_C_OpenDoorRPC");
static_assert(offsetof(StatM_MainPickupClass_C_OpenDoorRPC, Door) == 0x000000, "Member 'StatM_MainPickupClass_C_OpenDoorRPC::Door' has a wrong offset!");
static_assert(offsetof(StatM_MainPickupClass_C_OpenDoorRPC, IsOpen) == 0x000008, "Member 'StatM_MainPickupClass_C_OpenDoorRPC::IsOpen' has a wrong offset!");

// Function StatM_MainPickupClass.StatM_MainPickupClass_C.OpenLootRPC
// 0x0008 (0x0008 - 0x0000)
struct StatM_MainPickupClass_C_OpenLootRPC final
{
public:
	class ALootPoint_C*                           LootPoint;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StatM_MainPickupClass_C_OpenLootRPC) == 0x000008, "Wrong alignment on StatM_MainPickupClass_C_OpenLootRPC");
static_assert(sizeof(StatM_MainPickupClass_C_OpenLootRPC) == 0x000008, "Wrong size on StatM_MainPickupClass_C_OpenLootRPC");
static_assert(offsetof(StatM_MainPickupClass_C_OpenLootRPC, LootPoint) == 0x000000, "Member 'StatM_MainPickupClass_C_OpenLootRPC::LootPoint' has a wrong offset!");

// Function StatM_MainPickupClass.StatM_MainPickupClass_C.PlayerAddItem
// 0x0230 (0x0230 - 0x0000)
struct StatM_MainPickupClass_C_PlayerAddItem final
{
public:
	struct FFItemInfo                             ItemInfo;                                          // 0x0000(0x0220)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	class UWBP_AttachmentCell_C*                  ActiveCell;                                        // 0x0220(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Added;                                             // 0x0228(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StatM_MainPickupClass_C_PlayerAddItem) == 0x000008, "Wrong alignment on StatM_MainPickupClass_C_PlayerAddItem");
static_assert(sizeof(StatM_MainPickupClass_C_PlayerAddItem) == 0x000230, "Wrong size on StatM_MainPickupClass_C_PlayerAddItem");
static_assert(offsetof(StatM_MainPickupClass_C_PlayerAddItem, ItemInfo) == 0x000000, "Member 'StatM_MainPickupClass_C_PlayerAddItem::ItemInfo' has a wrong offset!");
static_assert(offsetof(StatM_MainPickupClass_C_PlayerAddItem, ActiveCell) == 0x000220, "Member 'StatM_MainPickupClass_C_PlayerAddItem::ActiveCell' has a wrong offset!");
static_assert(offsetof(StatM_MainPickupClass_C_PlayerAddItem, Added) == 0x000228, "Member 'StatM_MainPickupClass_C_PlayerAddItem::Added' has a wrong offset!");

// Function StatM_MainPickupClass.StatM_MainPickupClass_C.PlayerCanisterAction
// 0x0010 (0x0010 - 0x0000)
struct StatM_MainPickupClass_C_PlayerCanisterAction final
{
public:
	bool                                          Attach;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Canister_C*                         Canister;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StatM_MainPickupClass_C_PlayerCanisterAction) == 0x000008, "Wrong alignment on StatM_MainPickupClass_C_PlayerCanisterAction");
static_assert(sizeof(StatM_MainPickupClass_C_PlayerCanisterAction) == 0x000010, "Wrong size on StatM_MainPickupClass_C_PlayerCanisterAction");
static_assert(offsetof(StatM_MainPickupClass_C_PlayerCanisterAction, Attach) == 0x000000, "Member 'StatM_MainPickupClass_C_PlayerCanisterAction::Attach' has a wrong offset!");
static_assert(offsetof(StatM_MainPickupClass_C_PlayerCanisterAction, Canister) == 0x000008, "Member 'StatM_MainPickupClass_C_PlayerCanisterAction::Canister' has a wrong offset!");

// Function StatM_MainPickupClass.StatM_MainPickupClass_C.PlayerGetMesh
// 0x0008 (0x0008 - 0x0000)
struct StatM_MainPickupClass_C_PlayerGetMesh final
{
public:
	class USkeletalMeshComponent*                 Mesh;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StatM_MainPickupClass_C_PlayerGetMesh) == 0x000008, "Wrong alignment on StatM_MainPickupClass_C_PlayerGetMesh");
static_assert(sizeof(StatM_MainPickupClass_C_PlayerGetMesh) == 0x000008, "Wrong size on StatM_MainPickupClass_C_PlayerGetMesh");
static_assert(offsetof(StatM_MainPickupClass_C_PlayerGetMesh, Mesh) == 0x000000, "Member 'StatM_MainPickupClass_C_PlayerGetMesh::Mesh' has a wrong offset!");

// Function StatM_MainPickupClass.StatM_MainPickupClass_C.PlayerItemCountByName
// 0x0018 (0x0018 - 0x0000)
struct StatM_MainPickupClass_C_PlayerItemCountByName final
{
public:
	class FString                                 ItemName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StatM_MainPickupClass_C_PlayerItemCountByName) == 0x000008, "Wrong alignment on StatM_MainPickupClass_C_PlayerItemCountByName");
static_assert(sizeof(StatM_MainPickupClass_C_PlayerItemCountByName) == 0x000018, "Wrong size on StatM_MainPickupClass_C_PlayerItemCountByName");
static_assert(offsetof(StatM_MainPickupClass_C_PlayerItemCountByName, ItemName) == 0x000000, "Member 'StatM_MainPickupClass_C_PlayerItemCountByName::ItemName' has a wrong offset!");
static_assert(offsetof(StatM_MainPickupClass_C_PlayerItemCountByName, Count) == 0x000010, "Member 'StatM_MainPickupClass_C_PlayerItemCountByName::Count' has a wrong offset!");

// Function StatM_MainPickupClass.StatM_MainPickupClass_C.SetEnableSmoothSync
// 0x0002 (0x0002 - 0x0000)
struct StatM_MainPickupClass_C_SetEnableSmoothSync final
{
public:
	bool                                          NewEnable;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StatM_MainPickupClass_C_SetEnableSmoothSync) == 0x000001, "Wrong alignment on StatM_MainPickupClass_C_SetEnableSmoothSync");
static_assert(sizeof(StatM_MainPickupClass_C_SetEnableSmoothSync) == 0x000002, "Wrong size on StatM_MainPickupClass_C_SetEnableSmoothSync");
static_assert(offsetof(StatM_MainPickupClass_C_SetEnableSmoothSync, NewEnable) == 0x000000, "Member 'StatM_MainPickupClass_C_SetEnableSmoothSync::NewEnable' has a wrong offset!");
static_assert(offsetof(StatM_MainPickupClass_C_SetEnableSmoothSync, Success) == 0x000001, "Member 'StatM_MainPickupClass_C_SetEnableSmoothSync::Success' has a wrong offset!");

// Function StatM_MainPickupClass.StatM_MainPickupClass_C.SetEquipped
// 0x0001 (0x0001 - 0x0000)
struct StatM_MainPickupClass_C_SetEquipped final
{
public:
	bool                                          Equipped;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StatM_MainPickupClass_C_SetEquipped) == 0x000001, "Wrong alignment on StatM_MainPickupClass_C_SetEquipped");
static_assert(sizeof(StatM_MainPickupClass_C_SetEquipped) == 0x000001, "Wrong size on StatM_MainPickupClass_C_SetEquipped");
static_assert(offsetof(StatM_MainPickupClass_C_SetEquipped, Equipped) == 0x000000, "Member 'StatM_MainPickupClass_C_SetEquipped::Equipped' has a wrong offset!");

// Function StatM_MainPickupClass.StatM_MainPickupClass_C.SetPickupPhysicsEnabled
// 0x0001 (0x0001 - 0x0000)
struct StatM_MainPickupClass_C_SetPickupPhysicsEnabled final
{
public:
	bool                                          Enable_;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StatM_MainPickupClass_C_SetPickupPhysicsEnabled) == 0x000001, "Wrong alignment on StatM_MainPickupClass_C_SetPickupPhysicsEnabled");
static_assert(sizeof(StatM_MainPickupClass_C_SetPickupPhysicsEnabled) == 0x000001, "Wrong size on StatM_MainPickupClass_C_SetPickupPhysicsEnabled");
static_assert(offsetof(StatM_MainPickupClass_C_SetPickupPhysicsEnabled, Enable_) == 0x000000, "Member 'StatM_MainPickupClass_C_SetPickupPhysicsEnabled::Enable_' has a wrong offset!");

// Function StatM_MainPickupClass.StatM_MainPickupClass_C.SetPlayerCollisionInCar
// 0x0001 (0x0001 - 0x0000)
struct StatM_MainPickupClass_C_SetPlayerCollisionInCar final
{
public:
	bool                                          NewEnable;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StatM_MainPickupClass_C_SetPlayerCollisionInCar) == 0x000001, "Wrong alignment on StatM_MainPickupClass_C_SetPlayerCollisionInCar");
static_assert(sizeof(StatM_MainPickupClass_C_SetPlayerCollisionInCar) == 0x000001, "Wrong size on StatM_MainPickupClass_C_SetPlayerCollisionInCar");
static_assert(offsetof(StatM_MainPickupClass_C_SetPlayerCollisionInCar, NewEnable) == 0x000000, "Member 'StatM_MainPickupClass_C_SetPlayerCollisionInCar::NewEnable' has a wrong offset!");

// Function StatM_MainPickupClass.StatM_MainPickupClass_C.ShowSimpleUIText
// 0x0010 (0x0010 - 0x0000)
struct StatM_MainPickupClass_C_ShowSimpleUIText final
{
public:
	class FString                                 String;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(StatM_MainPickupClass_C_ShowSimpleUIText) == 0x000008, "Wrong alignment on StatM_MainPickupClass_C_ShowSimpleUIText");
static_assert(sizeof(StatM_MainPickupClass_C_ShowSimpleUIText) == 0x000010, "Wrong size on StatM_MainPickupClass_C_ShowSimpleUIText");
static_assert(offsetof(StatM_MainPickupClass_C_ShowSimpleUIText, String) == 0x000000, "Member 'StatM_MainPickupClass_C_ShowSimpleUIText::String' has a wrong offset!");

}

