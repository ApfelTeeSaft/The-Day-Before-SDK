#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EffectMain

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "EffectContructor_structs.hpp"
#include "EffectMainContructor_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "EffectType_structs.hpp"
#include "E_WeakeningEffect_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass EffectMain.EffectMain_C
// 0x0120 (0x0148 - 0x0028)
class UEffectMain_C final : public UObject
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0028(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class FText                                   EffectName;                                        // 0x0030(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Description;                                       // 0x0048(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        Duration;                                          // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FEffectContructor>              Effects;                                           // 0x0068(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UEffect_C*>                      CreatedEffects;                                    // 0x0078(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FEffectMainContructor                  Constructor;                                       // 0x0088(0x0078)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class AActor*                                 Target;                                            // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           StopEffectName;                                    // 0x0108(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	EffectType                                    EffectType;                                        // 0x0118(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_EffectsPanelElement_C*               ElementWidget;                                     // 0x0120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   GroupName;                                         // 0x0128(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	E_WeakeningEffect                             WeakeningEffects;                                  // 0x0140(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_EffectMain(int32 EntryPoint);
	void GetEffectStatus(class FText* Param_Name, double* Param_Duration);
	void Init(const struct FEffectMainContructor& Param_Constructor, class AActor* TargetActor);
	void PodEffectEEnded(class UEffect_C* Effect);
	void StartEffect();
	void StopEffect();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"EffectMain_C">();
	}
	static class UEffectMain_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEffectMain_C>();
	}
};
static_assert(alignof(UEffectMain_C) == 0x000008, "Wrong alignment on UEffectMain_C");
static_assert(sizeof(UEffectMain_C) == 0x000148, "Wrong size on UEffectMain_C");
static_assert(offsetof(UEffectMain_C, UberGraphFrame) == 0x000028, "Member 'UEffectMain_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UEffectMain_C, EffectName) == 0x000030, "Member 'UEffectMain_C::EffectName' has a wrong offset!");
static_assert(offsetof(UEffectMain_C, Description) == 0x000048, "Member 'UEffectMain_C::Description' has a wrong offset!");
static_assert(offsetof(UEffectMain_C, Duration) == 0x000060, "Member 'UEffectMain_C::Duration' has a wrong offset!");
static_assert(offsetof(UEffectMain_C, Effects) == 0x000068, "Member 'UEffectMain_C::Effects' has a wrong offset!");
static_assert(offsetof(UEffectMain_C, CreatedEffects) == 0x000078, "Member 'UEffectMain_C::CreatedEffects' has a wrong offset!");
static_assert(offsetof(UEffectMain_C, Constructor) == 0x000088, "Member 'UEffectMain_C::Constructor' has a wrong offset!");
static_assert(offsetof(UEffectMain_C, Target) == 0x000100, "Member 'UEffectMain_C::Target' has a wrong offset!");
static_assert(offsetof(UEffectMain_C, StopEffectName) == 0x000108, "Member 'UEffectMain_C::StopEffectName' has a wrong offset!");
static_assert(offsetof(UEffectMain_C, EffectType) == 0x000118, "Member 'UEffectMain_C::EffectType' has a wrong offset!");
static_assert(offsetof(UEffectMain_C, ElementWidget) == 0x000120, "Member 'UEffectMain_C::ElementWidget' has a wrong offset!");
static_assert(offsetof(UEffectMain_C, GroupName) == 0x000128, "Member 'UEffectMain_C::GroupName' has a wrong offset!");
static_assert(offsetof(UEffectMain_C, WeakeningEffects) == 0x000140, "Member 'UEffectMain_C::WeakeningEffects' has a wrong offset!");

}

