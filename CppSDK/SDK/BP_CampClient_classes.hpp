#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CampClient

#include "Basic.hpp"

#include "E_HouseType_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "FMODStudio_structs.hpp"
#include "E_CampAction_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CampClient.BP_CampClient_C
// 0x01B8 (0x0258 - 0x00A0)
class UBP_CampClient_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          IsCampBuilding;                                    // 0x00A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CampingBase_C*                      LocalCamp;                                         // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          CanBuildCamp;                                      // 0x00B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      Player;                                            // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CampTimerHandle;                                   // 0x00C8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_CampBonfire_C*                      CampBonfire;                                       // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_CampTent_C*                         CampTent;                                          // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_CampChair_C*                        CampChair;                                         // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_CampBonfire_C*                      LocalCampBonfire;                                  // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOnCookPanel;                                     // 0x00F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LocalBuildDuration;                                // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         ExcludedClasses;                                   // 0x0100(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          BlockCampInteract;                                 // 0x0110(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLockMovement;                                     // 0x0111(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_112[0x6];                                      // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODAudioComponent*                    IgniteSound;                                       // 0x0118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAtWarmBonfire;                                   // 0x0120(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     RotSound;                                          // 0x0128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UFMODAudioComponent*                    FS1;                                               // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_Camp_C*                             OwnedCamp;                                         // 0x0138(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCooking;                                         // 0x0140(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCookingActive;                                   // 0x0141(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_142[0x6];                                      // 0x0142(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODAudioComponent*                    CookingSound;                                      // 0x0148(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFMODEventInstance                     CookSound;                                         // 0x0150(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTimerHandle                           BagTimer;                                          // 0x0158(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          BagPlacing;                                        // 0x0160(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SleepingBagStub_C*                  Bag;                                               // 0x0168(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSleep;                                           // 0x0170(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SleepingBag_C*                      SleepingBag;                                       // 0x0178(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_SleepingBag_C*                      MySleepingBag;                                     // 0x0180(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Coords;                                            // 0x0188(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x01A0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          BlockBagSpawn;                                     // 0x01B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           BlockBagTimer;                                     // 0x01C0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          SitForBag;                                         // 0x01C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MovePlayerToPoint;                                 // 0x01C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LoadingCompleted;                                  // 0x01CA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CB[0x5];                                      // 0x01CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                New_Location;                                      // 0x01D0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntVector                             NewVar_0;                                          // 0x01E8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TeleportToHUB;                                     // 0x01F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F5[0x3];                                      // 0x01F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               NewRotation;                                       // 0x01F8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          OnCar;                                             // 0x0210(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APS_TDB_C*>                      Squad;                                             // 0x0218(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class AActor*                                 Car;                                               // 0x0228(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Dont_Play_Cutscene;                                // 0x0230(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_HouseType                                   To_Binker;                                         // 0x0231(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_232[0x6];                                      // 0x0232(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Cutscene_Actor;                                    // 0x0238(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsAllLevelsLoaded;                                // 0x0240(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnStartCutscene;                                   // 0x0248(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void AddBonfireFuel(class ABP_CampBonfire_C* Bonfire);
	void BeginPlace();
	void BeginPlaceBag();
	void BonfireNoFuelInteract(class ABP_CampBonfire_C* Bonfire);
	void BuildCamp();
	void BuildCampInstant();
	void CampTimer();
	void CancelCampBuilding();
	void CheckSurfaceForCamp(bool* CanPlace);
	void ClientDoneCook();
	void ClientDoneCookV2(const class FString& Item, int32 Count);
	void CookFood(class ABP_CampBonfire_C* Bonfire);
	void CustomEvent();
	void DoneCookFoodMulti();
	void EnterTent(class ABP_CampTent_C* Tent);
	void ExecuteUbergraph_BP_CampClient(int32 EntryPoint);
	void FireBonfire(class ABP_CampBonfire_C* Bonfire);
	void GetCampLocation(struct FVector* Location);
	void GetClosestPoint(class USceneComponent** Actor);
	void InteractPressed();
	void MultiBeginPlace();
	void MultiBeginPlaceBag();
	void MultiRelease();
	void MultiRemoveBag(class ABP_SleepingBag_C* Param_Bag);
	void MultiSleep(class ABP_SleepingBag_C* Param_Bag);
	void MultiStopPlace();
	void MultiStopPlacing();
	void MultiWakeUp();
	void NewRotat(const struct FRotator& Param_Rotation);
	void OnBlendOut_04539ACB44C860F205D61589D8FC08CF(class FName NotifyName);
	void OnBlendOut_05978629410461E63E7EB4B73E24D533(class FName NotifyName);
	void OnBlendOut_4083977743A14EC4287E60B3738CCD9C(class FName NotifyName);
	void OnBlendOut_80932E6E463284C29FDCCFB18EC1671A(class FName NotifyName);
	void OnBlendOut_84275A1F430C82E1C054FC9A1A6AE2EA(class FName NotifyName);
	void OnBlendOut_A624A076419412E901A8C187845FDBFD(class FName NotifyName);
	void OnBlendOut_C4CC11B74C277B39F61260A0648E7BA8(class FName NotifyName);
	void OnBlendOut_F68340A04248438899D8EBAC29837A6B(class FName NotifyName);
	void OnBlendOut_FA1E39E7467794B243A1EBBDAA0B81A4(class FName NotifyName);
	void OnBonfireEndFuel();
	void OnCancelPlacingBag();
	void OnClick7();
	void OnClickBagButton();
	void OnClickBagExit();
	void OnClickCampButton();
	void OnCompleted_04539ACB44C860F205D61589D8FC08CF(class FName NotifyName);
	void OnCompleted_05978629410461E63E7EB4B73E24D533(class FName NotifyName);
	void OnCompleted_4083977743A14EC4287E60B3738CCD9C(class FName NotifyName);
	void OnCompleted_80932E6E463284C29FDCCFB18EC1671A(class FName NotifyName);
	void OnCompleted_84275A1F430C82E1C054FC9A1A6AE2EA(class FName NotifyName);
	void OnCompleted_A624A076419412E901A8C187845FDBFD(class FName NotifyName);
	void OnCompleted_C4CC11B74C277B39F61260A0648E7BA8(class FName NotifyName);
	void OnCompleted_F68340A04248438899D8EBAC29837A6B(class FName NotifyName);
	void OnCompleted_FA1E39E7467794B243A1EBBDAA0B81A4(class FName NotifyName);
	void OnEnterBag();
	void OnInterrupted_04539ACB44C860F205D61589D8FC08CF(class FName NotifyName);
	void OnInterrupted_05978629410461E63E7EB4B73E24D533(class FName NotifyName);
	void OnInterrupted_4083977743A14EC4287E60B3738CCD9C(class FName NotifyName);
	void OnInterrupted_80932E6E463284C29FDCCFB18EC1671A(class FName NotifyName);
	void OnInterrupted_84275A1F430C82E1C054FC9A1A6AE2EA(class FName NotifyName);
	void OnInterrupted_A624A076419412E901A8C187845FDBFD(class FName NotifyName);
	void OnInterrupted_C4CC11B74C277B39F61260A0648E7BA8(class FName NotifyName);
	void OnInterrupted_F68340A04248438899D8EBAC29837A6B(class FName NotifyName);
	void OnInterrupted_FA1E39E7467794B243A1EBBDAA0B81A4(class FName NotifyName);
	void OnLoaded_0784F7F7457203CCBD35908322D479F5(class UObject* Loaded);
	void OnLoaded_0784F7F7457203CCBD359083433A957A(class UObject* Loaded);
	void OnLoaded_0784F7F7457203CCBD3590836F4C46D5(class UObject* Loaded);
	void OnLoaded_0784F7F7457203CCBD3590838798152E(class UObject* Loaded);
	void OnLoaded_0784F7F7457203CCBD359083A46BC4A1(class UObject* Loaded);
	void OnLoaded_0784F7F7457203CCBD359083AFC52CA3(class UObject* Loaded);
	void OnLoaded_0784F7F7457203CCBD359083DE330206(class UObject* Loaded);
	void OnLoaded_0784F7F7457203CCBD359083E01796EC(class UObject* Loaded);
	void OnLoaded_0784F7F7457203CCBD359083E560AD79(class UObject* Loaded);
	void OnLoaded_0784F7F7457203CCBD359083E7367173(class UObject* Loaded);
	void OnLoaded_0784F7F7457203CCBD359083F11B53AA(class UObject* Loaded);
	void OnLoaded_0784F7F7457203CCBD359083FE752A29(class UObject* Loaded);
	void OnNotifyBegin_04539ACB44C860F205D61589D8FC08CF(class FName NotifyName);
	void OnNotifyBegin_05978629410461E63E7EB4B73E24D533(class FName NotifyName);
	void OnNotifyBegin_4083977743A14EC4287E60B3738CCD9C(class FName NotifyName);
	void OnNotifyBegin_80932E6E463284C29FDCCFB18EC1671A(class FName NotifyName);
	void OnNotifyBegin_84275A1F430C82E1C054FC9A1A6AE2EA(class FName NotifyName);
	void OnNotifyBegin_A624A076419412E901A8C187845FDBFD(class FName NotifyName);
	void OnNotifyBegin_C4CC11B74C277B39F61260A0648E7BA8(class FName NotifyName);
	void OnNotifyBegin_F68340A04248438899D8EBAC29837A6B(class FName NotifyName);
	void OnNotifyBegin_FA1E39E7467794B243A1EBBDAA0B81A4(class FName NotifyName);
	void OnNotifyEnd_04539ACB44C860F205D61589D8FC08CF(class FName NotifyName);
	void OnNotifyEnd_05978629410461E63E7EB4B73E24D533(class FName NotifyName);
	void OnNotifyEnd_4083977743A14EC4287E60B3738CCD9C(class FName NotifyName);
	void OnNotifyEnd_80932E6E463284C29FDCCFB18EC1671A(class FName NotifyName);
	void OnNotifyEnd_84275A1F430C82E1C054FC9A1A6AE2EA(class FName NotifyName);
	void OnNotifyEnd_A624A076419412E901A8C187845FDBFD(class FName NotifyName);
	void OnNotifyEnd_C4CC11B74C277B39F61260A0648E7BA8(class FName NotifyName);
	void OnNotifyEnd_F68340A04248438899D8EBAC29837A6B(class FName NotifyName);
	void OnNotifyEnd_FA1E39E7467794B243A1EBBDAA0B81A4(class FName NotifyName);
	void OnStartCutscene__DelegateSignature();
	void OnStartPlacingBag();
	void OnUseTrapItem(const class FString& ItemName);
	void OnWheenChange();
	void PlayAnimTeleportMulticast();
	void PlayAnimTeleportServer();
	void PlayerHasBrushwood(bool* Has);
	void PlayerHasCamp(bool* Has);
	void PlayerHasThermos(bool* Has);
	void QuitTent(class ABP_CampTent_C* Tent);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void ReleaseBonfire();
	void ReloadColliMulti(bool On);
	void ReloadCollision(bool On);
	void RemoveBag(class ABP_SleepingBag_C* Param_Bag);
	void RemoveCamp(class ABP_CampingBase_C* Camp);
	void SDF();
	void SendIgniteBonfire(class ABP_CampBonfire_C* Bonfire);
	void ServBeginPlace();
	void ServerBeginPlaceBag();
	void ServerDoneCook(const class FString& NewParam, int32 NewParam2);
	void ServerFire(const class FString& Command);
	void ServerReleaseCampBonfire();
	void ServerReleaseChair();
	void ServerReleaseTent();
	void ServerRemoveBag(class ABP_SleepingBag_C* Param_Bag);
	void ServerRemoveCamp(class ABP_CampingBase_C* Camp);
	void ServerRotation(const struct FRotator& Param_Rotation);
	void ServerSpawnBag(const struct FVector& Location, const struct FRotator& Param_Rotation);
	void ServerSpawnCamp(const struct FTransform& Transform);
	void ServerStartCook(const struct FS_CampCooking& Food);
	void ServerStopPlacing();
	void ServerTeleport(const struct FVector& NewLocation);
	void ServSpawnItem(const class FString& ItemName);
	void ServStopPlace();
	void ServWakeUp();
	void SetBonfire(class ABP_CampBonfire_C* Bonfire);
	void SetBunkerLighting(bool Enter);
	void SetChair(class ABP_CampChair_C* Chair);
	void SetTent(class ABP_CampTent_C* Tent);
	void ShowTimer(double Duration, const class FString& Text);
	void Sleep(class ABP_SleepingBag_C* Param_Bag);
	void SpawnBag(const struct FVector& NewParam, const struct FRotator& NewParam2);
	void SpawnCampLocally();
	void StartCampTimer();
	void StartCook(const struct FS_CampCooking& Food);
	void StartCookMulti();
	void StopCampTimer();
	void StopPlace();
	void StopPlacing();
	void SwitchToCampCamera(class AActor* Actor, E_CampAction Action);
	void SwitchToPlayerCamera(E_CampAction Action);
	void TeleportAt(const struct FVector& NewParam, const struct FRotator& Param_Rotation, E_HouseType ToBinker, bool Param_OnCar, bool DontPlayCutscene, class AActor* CutsceneActor);
	void TeleportNewLocation(const struct FVector& NewLocation);
	void TeleportToBunker();
	void ThrowableHit(class ABP_Throwable_C* Throwable, const struct FVector& HitLocation);
	void ThrowItem(const struct FVector& Forward, class UClass* Throwable);
	void ThrowItemClicked4();
	void ThrowItemClicked5();
	void ThrowItemMulti(const struct FVector& Forward, class UClass* Throwable);
	void UnlockSpawn();
	void WakeUp();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CampClient_C">();
	}
	static class UBP_CampClient_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_CampClient_C>();
	}
};
static_assert(alignof(UBP_CampClient_C) == 0x000008, "Wrong alignment on UBP_CampClient_C");
static_assert(sizeof(UBP_CampClient_C) == 0x000258, "Wrong size on UBP_CampClient_C");
static_assert(offsetof(UBP_CampClient_C, UberGraphFrame) == 0x0000A0, "Member 'UBP_CampClient_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, IsCampBuilding) == 0x0000A8, "Member 'UBP_CampClient_C::IsCampBuilding' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, LocalCamp) == 0x0000B0, "Member 'UBP_CampClient_C::LocalCamp' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, CanBuildCamp) == 0x0000B8, "Member 'UBP_CampClient_C::CanBuildCamp' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, Player) == 0x0000C0, "Member 'UBP_CampClient_C::Player' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, CampTimerHandle) == 0x0000C8, "Member 'UBP_CampClient_C::CampTimerHandle' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, CampBonfire) == 0x0000D0, "Member 'UBP_CampClient_C::CampBonfire' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, CampTent) == 0x0000D8, "Member 'UBP_CampClient_C::CampTent' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, CampChair) == 0x0000E0, "Member 'UBP_CampClient_C::CampChair' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, LocalCampBonfire) == 0x0000E8, "Member 'UBP_CampClient_C::LocalCampBonfire' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, IsOnCookPanel) == 0x0000F0, "Member 'UBP_CampClient_C::IsOnCookPanel' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, LocalBuildDuration) == 0x0000F8, "Member 'UBP_CampClient_C::LocalBuildDuration' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, ExcludedClasses) == 0x000100, "Member 'UBP_CampClient_C::ExcludedClasses' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, BlockCampInteract) == 0x000110, "Member 'UBP_CampClient_C::BlockCampInteract' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, bLockMovement) == 0x000111, "Member 'UBP_CampClient_C::bLockMovement' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, IgniteSound) == 0x000118, "Member 'UBP_CampClient_C::IgniteSound' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, IsAtWarmBonfire) == 0x000120, "Member 'UBP_CampClient_C::IsAtWarmBonfire' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, RotSound) == 0x000128, "Member 'UBP_CampClient_C::RotSound' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, FS1) == 0x000130, "Member 'UBP_CampClient_C::FS1' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, OwnedCamp) == 0x000138, "Member 'UBP_CampClient_C::OwnedCamp' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, IsCooking) == 0x000140, "Member 'UBP_CampClient_C::IsCooking' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, IsCookingActive) == 0x000141, "Member 'UBP_CampClient_C::IsCookingActive' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, CookingSound) == 0x000148, "Member 'UBP_CampClient_C::CookingSound' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, CookSound) == 0x000150, "Member 'UBP_CampClient_C::CookSound' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, BagTimer) == 0x000158, "Member 'UBP_CampClient_C::BagTimer' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, BagPlacing) == 0x000160, "Member 'UBP_CampClient_C::BagPlacing' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, Bag) == 0x000168, "Member 'UBP_CampClient_C::Bag' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, IsSleep) == 0x000170, "Member 'UBP_CampClient_C::IsSleep' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, SleepingBag) == 0x000178, "Member 'UBP_CampClient_C::SleepingBag' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, MySleepingBag) == 0x000180, "Member 'UBP_CampClient_C::MySleepingBag' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, Coords) == 0x000188, "Member 'UBP_CampClient_C::Coords' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, Rotation) == 0x0001A0, "Member 'UBP_CampClient_C::Rotation' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, BlockBagSpawn) == 0x0001B8, "Member 'UBP_CampClient_C::BlockBagSpawn' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, BlockBagTimer) == 0x0001C0, "Member 'UBP_CampClient_C::BlockBagTimer' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, SitForBag) == 0x0001C8, "Member 'UBP_CampClient_C::SitForBag' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, MovePlayerToPoint) == 0x0001C9, "Member 'UBP_CampClient_C::MovePlayerToPoint' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, LoadingCompleted) == 0x0001CA, "Member 'UBP_CampClient_C::LoadingCompleted' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, New_Location) == 0x0001D0, "Member 'UBP_CampClient_C::New_Location' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, NewVar_0) == 0x0001E8, "Member 'UBP_CampClient_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, TeleportToHUB) == 0x0001F4, "Member 'UBP_CampClient_C::TeleportToHUB' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, NewRotation) == 0x0001F8, "Member 'UBP_CampClient_C::NewRotation' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, OnCar) == 0x000210, "Member 'UBP_CampClient_C::OnCar' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, Squad) == 0x000218, "Member 'UBP_CampClient_C::Squad' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, Car) == 0x000228, "Member 'UBP_CampClient_C::Car' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, Dont_Play_Cutscene) == 0x000230, "Member 'UBP_CampClient_C::Dont_Play_Cutscene' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, To_Binker) == 0x000231, "Member 'UBP_CampClient_C::To_Binker' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, Cutscene_Actor) == 0x000238, "Member 'UBP_CampClient_C::Cutscene_Actor' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, bIsAllLevelsLoaded) == 0x000240, "Member 'UBP_CampClient_C::bIsAllLevelsLoaded' has a wrong offset!");
static_assert(offsetof(UBP_CampClient_C, OnStartCutscene) == 0x000248, "Member 'UBP_CampClient_C::OnStartCutscene' has a wrong offset!");

}

