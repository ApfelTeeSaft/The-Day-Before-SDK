#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InventoryCollector

#include "Basic.hpp"

#include "AttachmentInfo_structs.hpp"
#include "FItemInfo_structs.hpp"
#include "DefaultItemInfo_structs.hpp"
#include "ContainerPickupsInfo_structs.hpp"


namespace SDK::Params
{

// Function InventoryCollector.InventoryCollector_C.CollectInventory
// 0x0038 (0x0038 - 0x0000)
struct InventoryCollector_C_CollectInventory final
{
public:
	TArray<class FString>                         Data;                                              // 0x0000(0x0010)(Parm, OutParm)
	TArray<struct FFItemInfo>                     ContainersData;                                    // 0x0010(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<struct FFItemInfo>                     ContainerItems;                                    // 0x0020(0x0010)(Parm, OutParm, ContainsInstancedReference)
	bool                                          Succes_;                                           // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InventoryCollector_C_CollectInventory) == 0x000008, "Wrong alignment on InventoryCollector_C_CollectInventory");
static_assert(sizeof(InventoryCollector_C_CollectInventory) == 0x000038, "Wrong size on InventoryCollector_C_CollectInventory");
static_assert(offsetof(InventoryCollector_C_CollectInventory, Data) == 0x000000, "Member 'InventoryCollector_C_CollectInventory::Data' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_CollectInventory, ContainersData) == 0x000010, "Member 'InventoryCollector_C_CollectInventory::ContainersData' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_CollectInventory, ContainerItems) == 0x000020, "Member 'InventoryCollector_C_CollectInventory::ContainerItems' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_CollectInventory, Succes_) == 0x000030, "Member 'InventoryCollector_C_CollectInventory::Succes_' has a wrong offset!");

// Function InventoryCollector.InventoryCollector_C.DebugPlaceInventory
// 0x0020 (0x0020 - 0x0000)
struct InventoryCollector_C_DebugPlaceInventory final
{
public:
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm)
};
static_assert(alignof(InventoryCollector_C_DebugPlaceInventory) == 0x000008, "Wrong alignment on InventoryCollector_C_DebugPlaceInventory");
static_assert(sizeof(InventoryCollector_C_DebugPlaceInventory) == 0x000020, "Wrong size on InventoryCollector_C_DebugPlaceInventory");
static_assert(offsetof(InventoryCollector_C_DebugPlaceInventory, CallFunc_MakeLiteralString_ReturnValue) == 0x000000, "Member 'InventoryCollector_C_DebugPlaceInventory::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_DebugPlaceInventory, K2Node_MakeArray_Array) == 0x000010, "Member 'InventoryCollector_C_DebugPlaceInventory::K2Node_MakeArray_Array' has a wrong offset!");

// Function InventoryCollector.InventoryCollector_C.ExecuteUbergraph_InventoryCollector
// 0x0004 (0x0004 - 0x0000)
struct InventoryCollector_C_ExecuteUbergraph_InventoryCollector final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InventoryCollector_C_ExecuteUbergraph_InventoryCollector) == 0x000004, "Wrong alignment on InventoryCollector_C_ExecuteUbergraph_InventoryCollector");
static_assert(sizeof(InventoryCollector_C_ExecuteUbergraph_InventoryCollector) == 0x000004, "Wrong size on InventoryCollector_C_ExecuteUbergraph_InventoryCollector");
static_assert(offsetof(InventoryCollector_C_ExecuteUbergraph_InventoryCollector, EntryPoint) == 0x000000, "Member 'InventoryCollector_C_ExecuteUbergraph_InventoryCollector::EntryPoint' has a wrong offset!");

// Function InventoryCollector.InventoryCollector_C.PlaceInventory
// 0x0010 (0x0010 - 0x0000)
struct InventoryCollector_C_PlaceInventory final
{
public:
	TArray<class FString>                         Data;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(InventoryCollector_C_PlaceInventory) == 0x000008, "Wrong alignment on InventoryCollector_C_PlaceInventory");
static_assert(sizeof(InventoryCollector_C_PlaceInventory) == 0x000010, "Wrong size on InventoryCollector_C_PlaceInventory");
static_assert(offsetof(InventoryCollector_C_PlaceInventory, Data) == 0x000000, "Member 'InventoryCollector_C_PlaceInventory::Data' has a wrong offset!");

// Function InventoryCollector.InventoryCollector_C.ProtectiveToString
// 0x0228 (0x0228 - 0x0000)
struct InventoryCollector_C_ProtectiveToString final
{
public:
	TArray<class UJSI_Slot_C*>                    Ref;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class FString>                         Str;                                               // 0x0010(0x0010)(Parm, OutParm)
	TArray<class FString>                         List;                                              // 0x0020(0x0010)(Edit, BlueprintVisible)
	class FString                                 AttachmentsString;                                 // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 NewLocalVar;                                       // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCount_Count;                           // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttachmentInfo                        CallFunc_Array_Get_Item_1;                         // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_2;          // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x01A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_1;               // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x01E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_12;             // 0x0208(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_13;             // 0x0218(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(InventoryCollector_C_ProtectiveToString) == 0x000008, "Wrong alignment on InventoryCollector_C_ProtectiveToString");
static_assert(sizeof(InventoryCollector_C_ProtectiveToString) == 0x000228, "Wrong size on InventoryCollector_C_ProtectiveToString");
static_assert(offsetof(InventoryCollector_C_ProtectiveToString, Ref) == 0x000000, "Member 'InventoryCollector_C_ProtectiveToString::Ref' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_ProtectiveToString, Str) == 0x000010, "Member 'InventoryCollector_C_ProtectiveToString::Str' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_ProtectiveToString, List) == 0x000020, "Member 'InventoryCollector_C_ProtectiveToString::List' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_ProtectiveToString, AttachmentsString) == 0x000030, "Member 'InventoryCollector_C_ProtectiveToString::AttachmentsString' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_ProtectiveToString, NewLocalVar) == 0x000040, "Member 'InventoryCollector_C_ProtectiveToString::NewLocalVar' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_ProtectiveToString, Temp_int_Array_Index_Variable) == 0x000050, "Member 'InventoryCollector_C_ProtectiveToString::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_ProtectiveToString, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'InventoryCollector_C_ProtectiveToString::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_ProtectiveToString, CallFunc_Array_Get_Item) == 0x000058, "Member 'InventoryCollector_C_ProtectiveToString::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_ProtectiveToString, CallFunc_GetCount_Count) == 0x000060, "Member 'InventoryCollector_C_ProtectiveToString::CallFunc_GetCount_Count' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_ProtectiveToString, CallFunc_Conv_IntToString_ReturnValue) == 0x000068, "Member 'InventoryCollector_C_ProtectiveToString::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_ProtectiveToString, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000078, "Member 'InventoryCollector_C_ProtectiveToString::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_ProtectiveToString, Temp_int_Loop_Counter_Variable) == 0x000088, "Member 'InventoryCollector_C_ProtectiveToString::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_ProtectiveToString, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00008C, "Member 'InventoryCollector_C_ProtectiveToString::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_ProtectiveToString, CallFunc_Add_IntInt_ReturnValue) == 0x000090, "Member 'InventoryCollector_C_ProtectiveToString::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_ProtectiveToString, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000098, "Member 'InventoryCollector_C_ProtectiveToString::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_ProtectiveToString, CallFunc_Conv_NameToString_ReturnValue) == 0x0000A8, "Member 'InventoryCollector_C_ProtectiveToString::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_ProtectiveToString, CallFunc_Array_Length_ReturnValue_1) == 0x0000B8, "Member 'InventoryCollector_C_ProtectiveToString::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_ProtectiveToString, CallFunc_Concat_StrStr_ReturnValue) == 0x0000C0, "Member 'InventoryCollector_C_ProtectiveToString::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_ProtectiveToString, CallFunc_Less_IntInt_ReturnValue) == 0x0000D0, "Member 'InventoryCollector_C_ProtectiveToString::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_ProtectiveToString, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000D8, "Member 'InventoryCollector_C_ProtectiveToString::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_ProtectiveToString, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000E8, "Member 'InventoryCollector_C_ProtectiveToString::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_ProtectiveToString, Temp_int_Array_Index_Variable_1) == 0x0000EC, "Member 'InventoryCollector_C_ProtectiveToString::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_ProtectiveToString, CallFunc_Array_Get_Item_1) == 0x0000F0, "Member 'InventoryCollector_C_ProtectiveToString::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_ProtectiveToString, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000100, "Member 'InventoryCollector_C_ProtectiveToString::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_ProtectiveToString, CallFunc_Conv_NameToString_ReturnValue_2) == 0x000110, "Member 'InventoryCollector_C_ProtectiveToString::CallFunc_Conv_NameToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_ProtectiveToString, Temp_int_Loop_Counter_Variable_1) == 0x000120, "Member 'InventoryCollector_C_ProtectiveToString::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_ProtectiveToString, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000128, "Member 'InventoryCollector_C_ProtectiveToString::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_ProtectiveToString, CallFunc_Less_IntInt_ReturnValue_1) == 0x000138, "Member 'InventoryCollector_C_ProtectiveToString::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_ProtectiveToString, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000140, "Member 'InventoryCollector_C_ProtectiveToString::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_ProtectiveToString, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000150, "Member 'InventoryCollector_C_ProtectiveToString::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_ProtectiveToString, CallFunc_Add_IntInt_ReturnValue_1) == 0x000160, "Member 'InventoryCollector_C_ProtectiveToString::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_ProtectiveToString, CallFunc_SelectString_ReturnValue) == 0x000168, "Member 'InventoryCollector_C_ProtectiveToString::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_ProtectiveToString, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000178, "Member 'InventoryCollector_C_ProtectiveToString::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_ProtectiveToString, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000188, "Member 'InventoryCollector_C_ProtectiveToString::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_ProtectiveToString, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000198, "Member 'InventoryCollector_C_ProtectiveToString::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_ProtectiveToString, CallFunc_Concat_StrStr_ReturnValue_8) == 0x0001A8, "Member 'InventoryCollector_C_ProtectiveToString::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_ProtectiveToString, CallFunc_IsEmpty_ReturnValue) == 0x0001B8, "Member 'InventoryCollector_C_ProtectiveToString::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_ProtectiveToString, CallFunc_Concat_StrStr_ReturnValue_9) == 0x0001C0, "Member 'InventoryCollector_C_ProtectiveToString::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_ProtectiveToString, CallFunc_SelectString_ReturnValue_1) == 0x0001D0, "Member 'InventoryCollector_C_ProtectiveToString::CallFunc_SelectString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_ProtectiveToString, CallFunc_Concat_StrStr_ReturnValue_10) == 0x0001E0, "Member 'InventoryCollector_C_ProtectiveToString::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_ProtectiveToString, CallFunc_Concat_StrStr_ReturnValue_11) == 0x0001F0, "Member 'InventoryCollector_C_ProtectiveToString::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_ProtectiveToString, CallFunc_Array_Add_ReturnValue) == 0x000200, "Member 'InventoryCollector_C_ProtectiveToString::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_ProtectiveToString, CallFunc_Concat_StrStr_ReturnValue_12) == 0x000208, "Member 'InventoryCollector_C_ProtectiveToString::CallFunc_Concat_StrStr_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_ProtectiveToString, CallFunc_Concat_StrStr_ReturnValue_13) == 0x000218, "Member 'InventoryCollector_C_ProtectiveToString::CallFunc_Concat_StrStr_ReturnValue_13' has a wrong offset!");

// Function InventoryCollector.InventoryCollector_C.StringListToStructArray
// 0x01C0 (0x01C0 - 0x0000)
struct InventoryCollector_C_StringListToStructArray final
{
public:
	TArray<class FString>                         StringList;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FDefaultItemInfo>               Result;                                            // 0x0010(0x0010)(Parm, OutParm, ContainsInstancedReference)
	bool                                          Clone;                                             // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FDefaultItemInfo>               Data;                                              // 0x0028(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_LeftS;                              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS;                             // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue;                        // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_LeftS_1;                            // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS_1;                           // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue_1;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_1;           // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDefaultItemInfo                       K2Node_MakeStruct_DefaultItemInfo;                 // 0x00B8(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FDefaultItemInfo                       K2Node_MakeStruct_DefaultItemInfo_1;               // 0x00F8(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_LeftS_2;                            // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS_2;                           // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue_2;                      // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_182[0x6];                                      // 0x0182(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Split_LeftS_3;                            // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS_3;                           // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue_3;                      // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x3];                                      // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_2;           // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InventoryCollector_C_StringListToStructArray) == 0x000008, "Wrong alignment on InventoryCollector_C_StringListToStructArray");
static_assert(sizeof(InventoryCollector_C_StringListToStructArray) == 0x0001C0, "Wrong size on InventoryCollector_C_StringListToStructArray");
static_assert(offsetof(InventoryCollector_C_StringListToStructArray, StringList) == 0x000000, "Member 'InventoryCollector_C_StringListToStructArray::StringList' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StringListToStructArray, Result) == 0x000010, "Member 'InventoryCollector_C_StringListToStructArray::Result' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StringListToStructArray, Clone) == 0x000020, "Member 'InventoryCollector_C_StringListToStructArray::Clone' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StringListToStructArray, Data) == 0x000028, "Member 'InventoryCollector_C_StringListToStructArray::Data' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StringListToStructArray, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'InventoryCollector_C_StringListToStructArray::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StringListToStructArray, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'InventoryCollector_C_StringListToStructArray::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StringListToStructArray, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'InventoryCollector_C_StringListToStructArray::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StringListToStructArray, CallFunc_Array_Length_ReturnValue_1) == 0x000044, "Member 'InventoryCollector_C_StringListToStructArray::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StringListToStructArray, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'InventoryCollector_C_StringListToStructArray::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StringListToStructArray, Temp_int_Array_Index_Variable) == 0x00004C, "Member 'InventoryCollector_C_StringListToStructArray::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StringListToStructArray, CallFunc_Array_Get_Item) == 0x000050, "Member 'InventoryCollector_C_StringListToStructArray::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StringListToStructArray, CallFunc_Split_LeftS) == 0x000060, "Member 'InventoryCollector_C_StringListToStructArray::CallFunc_Split_LeftS' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StringListToStructArray, CallFunc_Split_RightS) == 0x000070, "Member 'InventoryCollector_C_StringListToStructArray::CallFunc_Split_RightS' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StringListToStructArray, CallFunc_Split_ReturnValue) == 0x000080, "Member 'InventoryCollector_C_StringListToStructArray::CallFunc_Split_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StringListToStructArray, CallFunc_Conv_StringToInt_ReturnValue) == 0x000084, "Member 'InventoryCollector_C_StringListToStructArray::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StringListToStructArray, CallFunc_Split_LeftS_1) == 0x000088, "Member 'InventoryCollector_C_StringListToStructArray::CallFunc_Split_LeftS_1' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StringListToStructArray, CallFunc_Split_RightS_1) == 0x000098, "Member 'InventoryCollector_C_StringListToStructArray::CallFunc_Split_RightS_1' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StringListToStructArray, CallFunc_Split_ReturnValue_1) == 0x0000A8, "Member 'InventoryCollector_C_StringListToStructArray::CallFunc_Split_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StringListToStructArray, CallFunc_Conv_StringToName_ReturnValue) == 0x0000AC, "Member 'InventoryCollector_C_StringListToStructArray::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StringListToStructArray, CallFunc_Conv_StringToInt_ReturnValue_1) == 0x0000B4, "Member 'InventoryCollector_C_StringListToStructArray::CallFunc_Conv_StringToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StringListToStructArray, K2Node_MakeStruct_DefaultItemInfo) == 0x0000B8, "Member 'InventoryCollector_C_StringListToStructArray::K2Node_MakeStruct_DefaultItemInfo' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StringListToStructArray, K2Node_MakeStruct_DefaultItemInfo_1) == 0x0000F8, "Member 'InventoryCollector_C_StringListToStructArray::K2Node_MakeStruct_DefaultItemInfo_1' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StringListToStructArray, CallFunc_Array_Contains_ReturnValue) == 0x000138, "Member 'InventoryCollector_C_StringListToStructArray::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StringListToStructArray, CallFunc_Array_Add_ReturnValue) == 0x00013C, "Member 'InventoryCollector_C_StringListToStructArray::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StringListToStructArray, Temp_int_Loop_Counter_Variable_1) == 0x000140, "Member 'InventoryCollector_C_StringListToStructArray::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StringListToStructArray, Temp_int_Array_Index_Variable_1) == 0x000144, "Member 'InventoryCollector_C_StringListToStructArray::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StringListToStructArray, CallFunc_Less_IntInt_ReturnValue_1) == 0x000148, "Member 'InventoryCollector_C_StringListToStructArray::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StringListToStructArray, CallFunc_Array_Get_Item_1) == 0x000150, "Member 'InventoryCollector_C_StringListToStructArray::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StringListToStructArray, CallFunc_Split_LeftS_2) == 0x000160, "Member 'InventoryCollector_C_StringListToStructArray::CallFunc_Split_LeftS_2' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StringListToStructArray, CallFunc_Split_RightS_2) == 0x000170, "Member 'InventoryCollector_C_StringListToStructArray::CallFunc_Split_RightS_2' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StringListToStructArray, CallFunc_Split_ReturnValue_2) == 0x000180, "Member 'InventoryCollector_C_StringListToStructArray::CallFunc_Split_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StringListToStructArray, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000181, "Member 'InventoryCollector_C_StringListToStructArray::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StringListToStructArray, CallFunc_Split_LeftS_3) == 0x000188, "Member 'InventoryCollector_C_StringListToStructArray::CallFunc_Split_LeftS_3' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StringListToStructArray, CallFunc_Split_RightS_3) == 0x000198, "Member 'InventoryCollector_C_StringListToStructArray::CallFunc_Split_RightS_3' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StringListToStructArray, CallFunc_Split_ReturnValue_3) == 0x0001A8, "Member 'InventoryCollector_C_StringListToStructArray::CallFunc_Split_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StringListToStructArray, CallFunc_Conv_StringToInt_ReturnValue_2) == 0x0001AC, "Member 'InventoryCollector_C_StringListToStructArray::CallFunc_Conv_StringToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StringListToStructArray, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0001B0, "Member 'InventoryCollector_C_StringListToStructArray::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StringListToStructArray, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001B4, "Member 'InventoryCollector_C_StringListToStructArray::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StringListToStructArray, CallFunc_BooleanAND_ReturnValue) == 0x0001B8, "Member 'InventoryCollector_C_StringListToStructArray::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function InventoryCollector.InventoryCollector_C.StructArrayToStringList
// 0x0490 (0x0490 - 0x0000)
struct InventoryCollector_C_StructArrayToStringList final
{
public:
	TArray<struct FContainerPickupsInfo>          Data;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class FString>                         Result;                                            // 0x0010(0x0010)(Parm, OutParm)
	class FString                                 AttachmentsString;                                 // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         List;                                              // 0x0030(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  CallFunc_Array_Get_Item;                           // 0x0058(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo; // 0x00C0(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x02E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x02F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0308(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FAttachmentInfo                        CallFunc_Array_Get_Item_1;                         // 0x0318(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0328(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33C[0x4];                                      // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0340(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_2;          // 0x0350(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CountCheck_Result;                        // 0x0361(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_362[0x2];                                      // 0x0362(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CountOut_OutInt;                          // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0370(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0380(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0390(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x03A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x03B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C1[0x7];                                      // 0x03C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x03C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_1;               // 0x03D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x03E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x03F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0408(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0418(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x0428(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x0438(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x0448(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_12;             // 0x0458(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46C[0x4];                                      // 0x046C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0470(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0478(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0481(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_482[0x2];                                      // 0x0482(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0484(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InventoryCollector_C_StructArrayToStringList) == 0x000008, "Wrong alignment on InventoryCollector_C_StructArrayToStringList");
static_assert(sizeof(InventoryCollector_C_StructArrayToStringList) == 0x000490, "Wrong size on InventoryCollector_C_StructArrayToStringList");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, Data) == 0x000000, "Member 'InventoryCollector_C_StructArrayToStringList::Data' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, Result) == 0x000010, "Member 'InventoryCollector_C_StructArrayToStringList::Result' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, AttachmentsString) == 0x000020, "Member 'InventoryCollector_C_StructArrayToStringList::AttachmentsString' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, List) == 0x000030, "Member 'InventoryCollector_C_StructArrayToStringList::List' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'InventoryCollector_C_StructArrayToStringList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'InventoryCollector_C_StructArrayToStringList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'InventoryCollector_C_StructArrayToStringList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'InventoryCollector_C_StructArrayToStringList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, Temp_int_Array_Index_Variable) == 0x000050, "Member 'InventoryCollector_C_StructArrayToStringList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, Temp_int_Array_Index_Variable_1) == 0x000054, "Member 'InventoryCollector_C_StructArrayToStringList::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, CallFunc_Array_Get_Item) == 0x000058, "Member 'InventoryCollector_C_StructArrayToStringList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo) == 0x0000C0, "Member 'InventoryCollector_C_StructArrayToStringList::CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, CallFunc_Conv_IntToString_ReturnValue) == 0x0002E0, "Member 'InventoryCollector_C_StructArrayToStringList::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0002F0, "Member 'InventoryCollector_C_StructArrayToStringList::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, CallFunc_Conv_IntToString_ReturnValue_1) == 0x0002F8, "Member 'InventoryCollector_C_StructArrayToStringList::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, CallFunc_Conv_NameToString_ReturnValue) == 0x000308, "Member 'InventoryCollector_C_StructArrayToStringList::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, CallFunc_Array_Get_Item_1) == 0x000318, "Member 'InventoryCollector_C_StructArrayToStringList::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, CallFunc_Concat_StrStr_ReturnValue) == 0x000328, "Member 'InventoryCollector_C_StructArrayToStringList::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, CallFunc_Array_Length_ReturnValue_1) == 0x000338, "Member 'InventoryCollector_C_StructArrayToStringList::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000340, "Member 'InventoryCollector_C_StructArrayToStringList::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, CallFunc_Conv_NameToString_ReturnValue_2) == 0x000350, "Member 'InventoryCollector_C_StructArrayToStringList::CallFunc_Conv_NameToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000360, "Member 'InventoryCollector_C_StructArrayToStringList::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, CallFunc_CountCheck_Result) == 0x000361, "Member 'InventoryCollector_C_StructArrayToStringList::CallFunc_CountCheck_Result' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, CallFunc_CountOut_OutInt) == 0x000364, "Member 'InventoryCollector_C_StructArrayToStringList::CallFunc_CountOut_OutInt' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, CallFunc_Max_ReturnValue) == 0x000368, "Member 'InventoryCollector_C_StructArrayToStringList::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, CallFunc_SelectInt_ReturnValue) == 0x00036C, "Member 'InventoryCollector_C_StructArrayToStringList::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000370, "Member 'InventoryCollector_C_StructArrayToStringList::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000380, "Member 'InventoryCollector_C_StructArrayToStringList::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000390, "Member 'InventoryCollector_C_StructArrayToStringList::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0003A0, "Member 'InventoryCollector_C_StructArrayToStringList::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0003B0, "Member 'InventoryCollector_C_StructArrayToStringList::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, CallFunc_IsEmpty_ReturnValue) == 0x0003C0, "Member 'InventoryCollector_C_StructArrayToStringList::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, CallFunc_SelectString_ReturnValue) == 0x0003C8, "Member 'InventoryCollector_C_StructArrayToStringList::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, CallFunc_SelectString_ReturnValue_1) == 0x0003D8, "Member 'InventoryCollector_C_StructArrayToStringList::CallFunc_SelectString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0003E8, "Member 'InventoryCollector_C_StructArrayToStringList::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0003F8, "Member 'InventoryCollector_C_StructArrayToStringList::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000408, "Member 'InventoryCollector_C_StructArrayToStringList::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000418, "Member 'InventoryCollector_C_StructArrayToStringList::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, CallFunc_Concat_StrStr_ReturnValue_9) == 0x000428, "Member 'InventoryCollector_C_StructArrayToStringList::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, CallFunc_Concat_StrStr_ReturnValue_10) == 0x000438, "Member 'InventoryCollector_C_StructArrayToStringList::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, CallFunc_Concat_StrStr_ReturnValue_11) == 0x000448, "Member 'InventoryCollector_C_StructArrayToStringList::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, CallFunc_Concat_StrStr_ReturnValue_12) == 0x000458, "Member 'InventoryCollector_C_StructArrayToStringList::CallFunc_Concat_StrStr_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, Temp_int_Loop_Counter_Variable_1) == 0x000468, "Member 'InventoryCollector_C_StructArrayToStringList::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, CallFunc_GetOwner_ReturnValue) == 0x000470, "Member 'InventoryCollector_C_StructArrayToStringList::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, K2Node_DynamicCast_AsSurvival_Player) == 0x000478, "Member 'InventoryCollector_C_StructArrayToStringList::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, K2Node_DynamicCast_bSuccess) == 0x000480, "Member 'InventoryCollector_C_StructArrayToStringList::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, CallFunc_Less_IntInt_ReturnValue_1) == 0x000481, "Member 'InventoryCollector_C_StructArrayToStringList::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, CallFunc_Add_IntInt_ReturnValue_1) == 0x000484, "Member 'InventoryCollector_C_StructArrayToStringList::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryCollector_C_StructArrayToStringList, CallFunc_Array_Add_ReturnValue) == 0x000488, "Member 'InventoryCollector_C_StructArrayToStringList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

}

