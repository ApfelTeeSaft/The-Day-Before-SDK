#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TeleportToRegion

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FMODStudio_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "DayCycleState_structs.hpp"
#include "BP_TeleporterDoorMaster_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TeleportToRegion.BP_TeleportToRegion_C
// 0x0090 (0x0348 - 0x02B8)
class ABP_TeleportToRegion_C final : public ABP_TeleporterDoorMaster_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          Box;                                               // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UIconComponent_C*                       IconComponent;                                     // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         TeleportTimer;                                     // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                TeleportSize;                                      // 0x02D8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActorDataLayer                        DataLayer;                                         // 0x02F0(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	class ASurvPC_C*                              CurrentPC;                                         // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FTimerHandle                           Timer;                                             // 0x0300(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerSpawnPoint_C*                 PickedRegion;                                      // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_V2_C*                   As_Survival_Player;                                // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AAVS_VehicleMaster_C*                   As_AVS_Vehicle_Master;                             // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          InCarTp;                                           // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASkyCreatorController_C*                SkyCreatorController;                              // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UObject*                                As_AVS_Vehicle_Master_1;                           // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	EDayCycleState                                New_Day_State;                                     // 0x0338(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoBackpackTeleporter;                              // 0x0339(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33A[0x6];                                      // 0x033A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     Extraction2;                                       // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_TeleportToRegion(int32 EntryPoint);
	void GetMapIconData(struct FVector* Location, class UTexture2D** Icon, struct FVector2D* IconSize, double* RotationYaw, class AActor** WorldActor, class FText* Param_Name, class FText* Description);
	void GetRandomRegion(class ABP_PlayerSpawnPoint_C** SpawnPoint);
	void OnBlackScreenOpened();
	void OnDayStateChange(EDayCycleState NewDayState);
	void ReceiveActorBeginOverlap(class AActor* OtherActor);
	void ReceiveActorEndOverlap(class AActor* OtherActor);
	void ReceiveBeginPlay();
	void TeleportTimerEnded();
	void TPWithTag(bool* Result, bool* bIsWithoutBackpack, bool* NightWarning, bool* DayWarning);
	void UpdateIconPosition(const struct FVector2D& Position);
	void UserConstructionScript();
	void Zoom(bool Out);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TeleportToRegion_C">();
	}
	static class ABP_TeleportToRegion_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_TeleportToRegion_C>();
	}
};
static_assert(alignof(ABP_TeleportToRegion_C) == 0x000008, "Wrong alignment on ABP_TeleportToRegion_C");
static_assert(sizeof(ABP_TeleportToRegion_C) == 0x000348, "Wrong size on ABP_TeleportToRegion_C");
static_assert(offsetof(ABP_TeleportToRegion_C, UberGraphFrame) == 0x0002B8, "Member 'ABP_TeleportToRegion_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_TeleportToRegion_C, Box) == 0x0002C0, "Member 'ABP_TeleportToRegion_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_TeleportToRegion_C, IconComponent) == 0x0002C8, "Member 'ABP_TeleportToRegion_C::IconComponent' has a wrong offset!");
static_assert(offsetof(ABP_TeleportToRegion_C, TeleportTimer) == 0x0002D0, "Member 'ABP_TeleportToRegion_C::TeleportTimer' has a wrong offset!");
static_assert(offsetof(ABP_TeleportToRegion_C, TeleportSize) == 0x0002D8, "Member 'ABP_TeleportToRegion_C::TeleportSize' has a wrong offset!");
static_assert(offsetof(ABP_TeleportToRegion_C, DataLayer) == 0x0002F0, "Member 'ABP_TeleportToRegion_C::DataLayer' has a wrong offset!");
static_assert(offsetof(ABP_TeleportToRegion_C, CurrentPC) == 0x0002F8, "Member 'ABP_TeleportToRegion_C::CurrentPC' has a wrong offset!");
static_assert(offsetof(ABP_TeleportToRegion_C, Timer) == 0x000300, "Member 'ABP_TeleportToRegion_C::Timer' has a wrong offset!");
static_assert(offsetof(ABP_TeleportToRegion_C, PickedRegion) == 0x000308, "Member 'ABP_TeleportToRegion_C::PickedRegion' has a wrong offset!");
static_assert(offsetof(ABP_TeleportToRegion_C, As_Survival_Player) == 0x000310, "Member 'ABP_TeleportToRegion_C::As_Survival_Player' has a wrong offset!");
static_assert(offsetof(ABP_TeleportToRegion_C, As_AVS_Vehicle_Master) == 0x000318, "Member 'ABP_TeleportToRegion_C::As_AVS_Vehicle_Master' has a wrong offset!");
static_assert(offsetof(ABP_TeleportToRegion_C, InCarTp) == 0x000320, "Member 'ABP_TeleportToRegion_C::InCarTp' has a wrong offset!");
static_assert(offsetof(ABP_TeleportToRegion_C, SkyCreatorController) == 0x000328, "Member 'ABP_TeleportToRegion_C::SkyCreatorController' has a wrong offset!");
static_assert(offsetof(ABP_TeleportToRegion_C, As_AVS_Vehicle_Master_1) == 0x000330, "Member 'ABP_TeleportToRegion_C::As_AVS_Vehicle_Master_1' has a wrong offset!");
static_assert(offsetof(ABP_TeleportToRegion_C, New_Day_State) == 0x000338, "Member 'ABP_TeleportToRegion_C::New_Day_State' has a wrong offset!");
static_assert(offsetof(ABP_TeleportToRegion_C, NoBackpackTeleporter) == 0x000339, "Member 'ABP_TeleportToRegion_C::NoBackpackTeleporter' has a wrong offset!");
static_assert(offsetof(ABP_TeleportToRegion_C, Extraction2) == 0x000340, "Member 'ABP_TeleportToRegion_C::Extraction2' has a wrong offset!");

}

