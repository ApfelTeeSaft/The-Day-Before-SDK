#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_AttachmentsSelector

#include "Basic.hpp"

#include "WBP_AttachmentsSelector_classes.hpp"
#include "WBP_AttachmentsSelector_parameters.hpp"


namespace SDK
{

// Function WBP_AttachmentsSelector.WBP_AttachmentsSelector_C.AddAttachment
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAttachmentInfo                  Attachment                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFItemInfo                       NewItem                                                (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)

void UWBP_AttachmentsSelector_C::AddAttachment(const struct FAttachmentInfo& Attachment, struct FFItemInfo* NewItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_AttachmentsSelector_C", "AddAttachment");

	Params::WBP_AttachmentsSelector_C_AddAttachment Parms{};

	Parms.Attachment = std::move(Attachment);

	UObject::ProcessEvent(Func, &Parms);

	if (NewItem != nullptr)
		*NewItem = std::move(Parms.NewItem);
}


// Function WBP_AttachmentsSelector.WBP_AttachmentsSelector_C.AddCellToGrid
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFItemInfo                       Param_Item                                             (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// bool                                    Basic                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReMinusInit                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWBP_AttachmentCell_C*            NewCellWidget                                          (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_AttachmentsSelector_C::AddCellToGrid(const struct FFItemInfo& Param_Item, bool Basic, bool ReMinusInit, class UWBP_AttachmentCell_C** NewCellWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_AttachmentsSelector_C", "AddCellToGrid");

	Params::WBP_AttachmentsSelector_C_AddCellToGrid Parms{};

	Parms.Param_Item = std::move(Param_Item);
	Parms.Basic = Basic;
	Parms.ReMinusInit = ReMinusInit;

	UObject::ProcessEvent(Func, &Parms);

	if (NewCellWidget != nullptr)
		*NewCellWidget = Parms.NewCellWidget;
}


// Function WBP_AttachmentsSelector.WBP_AttachmentsSelector_C.AddEmptySlots
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_AttachmentsSelector_C::AddEmptySlots()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_AttachmentsSelector_C", "AddEmptySlots");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_AttachmentsSelector.WBP_AttachmentsSelector_C.AddItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFItemInfo                       Param_Item                                             (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// class UWBP_AttachmentCell_C*            NewCellWidget                                          (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_AttachmentsSelector_C::AddItem(const struct FFItemInfo& Param_Item, class UWBP_AttachmentCell_C** NewCellWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_AttachmentsSelector_C", "AddItem");

	Params::WBP_AttachmentsSelector_C_AddItem Parms{};

	Parms.Param_Item = std::move(Param_Item);

	UObject::ProcessEvent(Func, &Parms);

	if (NewCellWidget != nullptr)
		*NewCellWidget = Parms.NewCellWidget;
}


// Function WBP_AttachmentsSelector.WBP_AttachmentsSelector_C.AutoSetActiveCell
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_AttachmentsSelector_C::AutoSetActiveCell()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_AttachmentsSelector_C", "AutoSetActiveCell");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_AttachmentsSelector.WBP_AttachmentsSelector_C.Clear
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_AttachmentsSelector_C::Clear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_AttachmentsSelector_C", "Clear");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_AttachmentsSelector.WBP_AttachmentsSelector_C.ExecuteUbergraph_WBP_AttachmentsSelector
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_AttachmentsSelector_C::ExecuteUbergraph_WBP_AttachmentsSelector(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_AttachmentsSelector_C", "ExecuteUbergraph_WBP_AttachmentsSelector");

	Params::WBP_AttachmentsSelector_C_ExecuteUbergraph_WBP_AttachmentsSelector Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_AttachmentsSelector.WBP_AttachmentsSelector_C.GetAttachment
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_TypesOfModes                          Param_ModeType                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_Index                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_Attachment                    Attachment                                             (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)

void UWBP_AttachmentsSelector_C::GetAttachment(E_TypesOfModes Param_ModeType, int32* Param_Index, struct FS_Attachment* Attachment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_AttachmentsSelector_C", "GetAttachment");

	Params::WBP_AttachmentsSelector_C_GetAttachment Parms{};

	Parms.Param_ModeType = Param_ModeType;

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Index != nullptr)
		*Param_Index = Parms.Param_Index;

	if (Attachment != nullptr)
		*Attachment = std::move(Parms.Attachment);
}


// Function WBP_AttachmentsSelector.WBP_AttachmentsSelector_C.GetCellButtonByIndex
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWBP_AttachmentCell_C*            ButtonCell                                             (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_AttachmentsSelector_C::GetCellButtonByIndex(int32 Param_Index, bool* Result, class UWBP_AttachmentCell_C** ButtonCell)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_AttachmentsSelector_C", "GetCellButtonByIndex");

	Params::WBP_AttachmentsSelector_C_GetCellButtonByIndex Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (ButtonCell != nullptr)
		*ButtonCell = Parms.ButtonCell;
}


// Function WBP_AttachmentsSelector.WBP_AttachmentsSelector_C.IsValidAttachment
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FAttachmentInfo                  Attachment                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_AttachmentsSelector_C::IsValidAttachment(const struct FAttachmentInfo& Attachment, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_AttachmentsSelector_C", "IsValidAttachment");

	Params::WBP_AttachmentsSelector_C_IsValidAttachment Parms{};

	Parms.Attachment = std::move(Attachment);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WBP_AttachmentsSelector.WBP_AttachmentsSelector_C.ManageInventory
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFItemInfo                       OldItem                                                (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// struct FFItemInfo                       NewItem                                                (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)

void UWBP_AttachmentsSelector_C::ManageInventory(const struct FFItemInfo& OldItem, const struct FFItemInfo& NewItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_AttachmentsSelector_C", "ManageInventory");

	Params::WBP_AttachmentsSelector_C_ManageInventory Parms{};

	Parms.OldItem = std::move(OldItem);
	Parms.NewItem = std::move(NewItem);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_AttachmentsSelector.WBP_AttachmentsSelector_C.OnNotEnoughSpacceToRemoveAttachment__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UWBP_AttachmentsSelector_C::OnNotEnoughSpacceToRemoveAttachment__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_AttachmentsSelector_C", "OnNotEnoughSpacceToRemoveAttachment__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_AttachmentsSelector.WBP_AttachmentsSelector_C.OnPlaySound
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFMODEvent*                       FMODEvent                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_AttachmentsSelector_C::OnPlaySound(class UFMODEvent* FMODEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_AttachmentsSelector_C", "OnPlaySound");

	Params::WBP_AttachmentsSelector_C_OnPlaySound Parms{};

	Parms.FMODEvent = FMODEvent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_AttachmentsSelector.WBP_AttachmentsSelector_C.OnPressedBack__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UWBP_AttachmentsSelector_C::OnPressedBack__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_AttachmentsSelector_C", "OnPressedBack__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_AttachmentsSelector.WBP_AttachmentsSelector_C.OnReleasedBack__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UWBP_AttachmentsSelector_C::OnReleasedBack__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_AttachmentsSelector_C", "OnReleasedBack__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_AttachmentsSelector.WBP_AttachmentsSelector_C.OnSelectAttachmentOnceInTime
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UUserWidget*                      Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_AttachmentsSelector_C::OnSelectAttachmentOnceInTime(int32 Param_Index, class UUserWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_AttachmentsSelector_C", "OnSelectAttachmentOnceInTime");

	Params::WBP_AttachmentsSelector_C_OnSelectAttachmentOnceInTime Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Widget = Widget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_AttachmentsSelector.WBP_AttachmentsSelector_C.OnSelectedAttachment
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UUserWidget*                      UserWidget                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_AttachmentsSelector_C::OnSelectedAttachment(int32 Param_Index, class UUserWidget* UserWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_AttachmentsSelector_C", "OnSelectedAttachment");

	Params::WBP_AttachmentsSelector_C_OnSelectedAttachment Parms{};

	Parms.Param_Index = Param_Index;
	Parms.UserWidget = UserWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_AttachmentsSelector.WBP_AttachmentsSelector_C.OnToggleLockWidget
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_AttachmentsSelector_C::OnToggleLockWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_AttachmentsSelector_C", "OnToggleLockWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_AttachmentsSelector.WBP_AttachmentsSelector_C.OnUnSelectedAttachment
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UUserWidget*                      UserWidget                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_AttachmentsSelector_C::OnUnSelectedAttachment(int32 Param_Index, class UUserWidget* UserWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_AttachmentsSelector_C", "OnUnSelectedAttachment");

	Params::WBP_AttachmentsSelector_C_OnUnSelectedAttachment Parms{};

	Parms.Param_Index = Param_Index;
	Parms.UserWidget = UserWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_AttachmentsSelector.WBP_AttachmentsSelector_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_AttachmentsSelector_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_AttachmentsSelector_C", "PreConstruct");

	Params::WBP_AttachmentsSelector_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_AttachmentsSelector.WBP_AttachmentsSelector_C.RemoveAttachment
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAttachmentInfo                  DefaultAttachment                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFItemInfo                       NewItem                                                (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)

void UWBP_AttachmentsSelector_C::RemoveAttachment(const struct FAttachmentInfo& DefaultAttachment, struct FFItemInfo* NewItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_AttachmentsSelector_C", "RemoveAttachment");

	Params::WBP_AttachmentsSelector_C_RemoveAttachment Parms{};

	Parms.DefaultAttachment = std::move(DefaultAttachment);

	UObject::ProcessEvent(Func, &Parms);

	if (NewItem != nullptr)
		*NewItem = std::move(Parms.NewItem);
}


// Function WBP_AttachmentsSelector.WBP_AttachmentsSelector_C.RemoveDependencyAttachmets
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_Default                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_AttachmentsSelector_C::RemoveDependencyAttachmets(bool Param_Default)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_AttachmentsSelector_C", "RemoveDependencyAttachmets");

	Params::WBP_AttachmentsSelector_C_RemoveDependencyAttachmets Parms{};

	Parms.Param_Default = Param_Default;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_AttachmentsSelector.WBP_AttachmentsSelector_C.SetDafaultAttachment
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAttachmentInfo                  NewAttachment                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    WithInit                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_AttachmentsSelector_C::SetDafaultAttachment(const struct FAttachmentInfo& NewAttachment, bool WithInit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_AttachmentsSelector_C", "SetDafaultAttachment");

	Params::WBP_AttachmentsSelector_C_SetDafaultAttachment Parms{};

	Parms.NewAttachment = std::move(NewAttachment);
	Parms.WithInit = WithInit;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_AttachmentsSelector.WBP_AttachmentsSelector_C.SetDefaultSpecialAttachments
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FAttachmentInfo>          Attachments                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_AttachmentsSelector_C::SetDefaultSpecialAttachments(TArray<struct FAttachmentInfo>& Attachments)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_AttachmentsSelector_C", "SetDefaultSpecialAttachments");

	Params::WBP_AttachmentsSelector_C_SetDefaultSpecialAttachments Parms{};

	Parms.Attachments = std::move(Attachments);

	UObject::ProcessEvent(Func, &Parms);

	Attachments = std::move(Parms.Attachments);
}


// Function WBP_AttachmentsSelector.WBP_AttachmentsSelector_C.SetFMODAttachEvent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFMODEvent*                       NewFMODEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_AttachmentsSelector_C::SetFMODAttachEvent(class UFMODEvent* NewFMODEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_AttachmentsSelector_C", "SetFMODAttachEvent");

	Params::WBP_AttachmentsSelector_C_SetFMODAttachEvent Parms{};

	Parms.NewFMODEvent = NewFMODEvent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_AttachmentsSelector.WBP_AttachmentsSelector_C.SetFMODDetachEvent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFMODEvent*                       NewFMODEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_AttachmentsSelector_C::SetFMODDetachEvent(class UFMODEvent* NewFMODEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_AttachmentsSelector_C", "SetFMODDetachEvent");

	Params::WBP_AttachmentsSelector_C_SetFMODDetachEvent Parms{};

	Parms.NewFMODEvent = NewFMODEvent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_AttachmentsSelector.WBP_AttachmentsSelector_C.SetItemReference
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFItemInfo                       Param_Item                                             (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)

void UWBP_AttachmentsSelector_C::SetItemReference(const struct FFItemInfo& Param_Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_AttachmentsSelector_C", "SetItemReference");

	Params::WBP_AttachmentsSelector_C_SetItemReference Parms{};

	Parms.Param_Item = std::move(Param_Item);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_AttachmentsSelector.WBP_AttachmentsSelector_C.SetModeType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_TypesOfModes                          NewType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_AttachmentsSelector_C::SetModeType(E_TypesOfModes NewType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_AttachmentsSelector_C", "SetModeType");

	Params::WBP_AttachmentsSelector_C_SetModeType Parms{};

	Parms.NewType = NewType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_AttachmentsSelector.WBP_AttachmentsSelector_C.SetOwnerWidgetReference
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserWidget*                      ParentWidget                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_AttachmentsSelector_C::SetOwnerWidgetReference(class UUserWidget* ParentWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_AttachmentsSelector_C", "SetOwnerWidgetReference");

	Params::WBP_AttachmentsSelector_C_SetOwnerWidgetReference Parms{};

	Parms.ParentWidget = ParentWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_AttachmentsSelector.WBP_AttachmentsSelector_C.SetSpecialAttachments
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FAttachmentInfo>          Attachments                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_AttachmentsSelector_C::SetSpecialAttachments(TArray<struct FAttachmentInfo>& Attachments)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_AttachmentsSelector_C", "SetSpecialAttachments");

	Params::WBP_AttachmentsSelector_C_SetSpecialAttachments Parms{};

	Parms.Attachments = std::move(Attachments);

	UObject::ProcessEvent(Func, &Parms);

	Attachments = std::move(Parms.Attachments);
}


// Function WBP_AttachmentsSelector.WBP_AttachmentsSelector_C.SetTitle
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             NewText                                                (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    Reset                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_AttachmentsSelector_C::SetTitle(const class FText& NewText, bool Reset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_AttachmentsSelector_C", "SetTitle");

	Params::WBP_AttachmentsSelector_C_SetTitle Parms{};

	Parms.NewText = std::move(NewText);
	Parms.Reset = Reset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_AttachmentsSelector.WBP_AttachmentsSelector_C.SetVisibilityWidget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_AttachmentsSelector_C::SetVisibilityWidget(bool NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_AttachmentsSelector_C", "SetVisibilityWidget");

	Params::WBP_AttachmentsSelector_C_SetVisibilityWidget Parms{};

	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_AttachmentsSelector.WBP_AttachmentsSelector_C.StopCellAwaitAnimation
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_AttachmentsSelector_C::StopCellAwaitAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_AttachmentsSelector_C", "StopCellAwaitAnimation");

	UObject::ProcessEvent(Func, nullptr);
}

}

