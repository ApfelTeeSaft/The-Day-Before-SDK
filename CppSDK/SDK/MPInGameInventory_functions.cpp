#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MPInGameInventory

#include "Basic.hpp"

#include "MPInGameInventory_classes.hpp"
#include "MPInGameInventory_parameters.hpp"


namespace SDK
{

// Function MPInGameInventory.MPInGameInventory_C.Accept
// (BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::Accept()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "Accept");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.Add Child Widget Perks
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::Add_Child_Widget_Perks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "Add Child Widget Perks");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.Add Squad Member Entry
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_Group_C*                     SquadEntryWidget                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class APS_TDB_C*                        PlayerPS                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::Add_Squad_Member_Entry(class UWBP_Group_C* SquadEntryWidget, class APS_TDB_C* PlayerPS)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "Add Squad Member Entry");

	Params::MPInGameInventory_C_Add_Squad_Member_Entry Parms{};

	Parms.SquadEntryWidget = SquadEntryWidget;
	Parms.PlayerPS = PlayerPS;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.AddEffect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UEffectMain_C*                    Effect                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ASurvivalPlayer_C*                SurvPlayer                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UW_EffectsPanelElement_C*         Widget                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::AddEffect(class UEffectMain_C* Effect, class ASurvivalPlayer_C* SurvPlayer, class UW_EffectsPanelElement_C** Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "AddEffect");

	Params::MPInGameInventory_C_AddEffect Parms{};

	Parms.Effect = Effect;
	Parms.SurvPlayer = SurvPlayer;

	UObject::ProcessEvent(Func, &Parms);

	if (Widget != nullptr)
		*Widget = Parms.Widget;
}


// Function MPInGameInventory.MPInGameInventory_C.AjustInventoryAfterClosing
// (BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::AjustInventoryAfterClosing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "AjustInventoryAfterClosing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.ArmorSiluetHidden
// (Public, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::ArmorSiluetHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "ArmorSiluetHidden");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.ArmorSiluetShow
// (Public, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::ArmorSiluetShow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "ArmorSiluetShow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.BackpackSiluetHidden
// (Public, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::BackpackSiluetHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BackpackSiluetHidden");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.BackpackSiluetShow
// (Public, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::BackpackSiluetShow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BackpackSiluetShow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.BindLootPoint
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::BindLootPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BindLootPoint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.BindMainContatiner
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::BindMainContatiner()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BindMainContatiner");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.BindTabWindowEvents
// (BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::BindTabWindowEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BindTabWindowEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_17_EventSelectItem__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_17_EventSelectItem__DelegateSignature(class UJSI_Slot_C* Item, class UJSIContainer_C* Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_17_EventSelectItem__DelegateSignature");

	Params::MPInGameInventory_C_BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_17_EventSelectItem__DelegateSignature Parms{};

	Parms.Item = Item;
	Parms.Container = Container;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_41_OnSlotMouseButtonDown__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FKey                             Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_41_OnSlotMouseButtonDown__DelegateSignature(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_41_OnSlotMouseButtonDown__DelegateSignature");

	Params::MPInGameInventory_C_BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_41_OnSlotMouseButtonDown__DelegateSignature Parms{};

	Parms.Container = Container;
	Parms.SlotRef = SlotRef;
	Parms.Button = std::move(Button);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_7_DropInfo_OnItemEquippedChange__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  FromContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ToContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Equipped_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ToPockets_                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_7_DropInfo_OnItemEquippedChange__DelegateSignature(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* SlotRef, bool Equipped_, bool ToPockets_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_7_DropInfo_OnItemEquippedChange__DelegateSignature");

	Params::MPInGameInventory_C_BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_7_DropInfo_OnItemEquippedChange__DelegateSignature Parms{};

	Parms.FromContainer = FromContainer;
	Parms.ToContainer = ToContainer;
	Parms.SlotRef = SlotRef;
	Parms.Equipped_ = Equipped_;
	Parms.ToPockets_ = ToPockets_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_12_DropInfo_OnItemEquippedChange__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  FromContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ToContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Equipped_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ToPockets_                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_12_DropInfo_OnItemEquippedChange__DelegateSignature(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* SlotRef, bool Equipped_, bool ToPockets_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_12_DropInfo_OnItemEquippedChange__DelegateSignature");

	Params::MPInGameInventory_C_BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_12_DropInfo_OnItemEquippedChange__DelegateSignature Parms{};

	Parms.FromContainer = FromContainer;
	Parms.ToContainer = ToContainer;
	Parms.SlotRef = SlotRef;
	Parms.Equipped_ = Equipped_;
	Parms.ToPockets_ = ToPockets_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_18_EventSelectItem__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_18_EventSelectItem__DelegateSignature(class UJSI_Slot_C* Item, class UJSIContainer_C* Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_18_EventSelectItem__DelegateSignature");

	Params::MPInGameInventory_C_BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_18_EventSelectItem__DelegateSignature Parms{};

	Parms.Item = Item;
	Parms.Container = Container;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_42_OnSlotMouseButtonDown__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FKey                             Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_42_OnSlotMouseButtonDown__DelegateSignature(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_42_OnSlotMouseButtonDown__DelegateSignature");

	Params::MPInGameInventory_C_BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_42_OnSlotMouseButtonDown__DelegateSignature Parms{};

	Parms.Container = Container;
	Parms.SlotRef = SlotRef;
	Parms.Button = std::move(Button);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_Button_Close_K2Node_ComponentBoundEvent_28_OnHovered__DelegateSignature
// (BlueprintEvent)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_Button_Close_K2Node_ComponentBoundEvent_28_OnHovered__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_Button_Close_K2Node_ComponentBoundEvent_28_OnHovered__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_Button_Close_K2Node_ComponentBoundEvent_34_OnUnhovered__DelegateSignature
// (BlueprintEvent)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_Button_Close_K2Node_ComponentBoundEvent_34_OnUnhovered__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_Button_Close_K2Node_ComponentBoundEvent_34_OnUnhovered__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_Button_E_K2Node_ComponentBoundEvent_37_OnPressed__DelegateSignature
// (BlueprintEvent)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_Button_E_K2Node_ComponentBoundEvent_37_OnPressed__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_Button_E_K2Node_ComponentBoundEvent_37_OnPressed__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_Button_Q_K2Node_ComponentBoundEvent_38_OnPressed__DelegateSignature
// (BlueprintEvent)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_Button_Q_K2Node_ComponentBoundEvent_38_OnPressed__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_Button_Q_K2Node_ComponentBoundEvent_38_OnPressed__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_Button_Shop_K2Node_ComponentBoundEvent_35_OnPressed__DelegateSignature
// (BlueprintEvent)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_Button_Shop_K2Node_ComponentBoundEvent_35_OnPressed__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_Button_Shop_K2Node_ComponentBoundEvent_35_OnPressed__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_Button_Take_K2Node_ComponentBoundEvent_27_OnPressed__DelegateSignature
// (BlueprintEvent)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_Button_Take_K2Node_ComponentBoundEvent_27_OnPressed__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_Button_Take_K2Node_ComponentBoundEvent_27_OnPressed__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_Button_TakeAll_1_K2Node_ComponentBoundEvent_30_OnPressed__DelegateSignature
// (BlueprintEvent)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_Button_TakeAll_1_K2Node_ComponentBoundEvent_30_OnPressed__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_Button_TakeAll_1_K2Node_ComponentBoundEvent_30_OnPressed__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_DropItemBackGwidget_K2Node_ComponentBoundEvent_13_ItemDropRequest__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      ItemRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FFItemInfo                       ItemInfo                                               (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// int32                                   Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_DropItemBackGwidget_K2Node_ComponentBoundEvent_13_ItemDropRequest__DelegateSignature(class UJSI_Slot_C* ItemRef, const struct FFItemInfo& ItemInfo, int32 Count, class UJSIContainer_C* Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_DropItemBackGwidget_K2Node_ComponentBoundEvent_13_ItemDropRequest__DelegateSignature");

	Params::MPInGameInventory_C_BndEvt__MPInGameInventory_DropItemBackGwidget_K2Node_ComponentBoundEvent_13_ItemDropRequest__DelegateSignature Parms{};

	Parms.ItemRef = ItemRef;
	Parms.ItemInfo = std::move(ItemInfo);
	Parms.Count = Count;
	Parms.Container = Container;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_DropItemBackGwidget_K2Node_ComponentBoundEvent_14_OnButtonPressed__DelegateSignature
// (BlueprintEvent)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_DropItemBackGwidget_K2Node_ComponentBoundEvent_14_OnButtonPressed__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_DropItemBackGwidget_K2Node_ComponentBoundEvent_14_OnButtonPressed__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_DropItemBackGwidget_K2Node_ComponentBoundEvent_36_OnDropDeniedInTutorial__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    TutorReason                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsProtectiveCase                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_DropItemBackGwidget_K2Node_ComponentBoundEvent_36_OnDropDeniedInTutorial__DelegateSignature(bool TutorReason, bool IsProtectiveCase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_DropItemBackGwidget_K2Node_ComponentBoundEvent_36_OnDropDeniedInTutorial__DelegateSignature");

	Params::MPInGameInventory_C_BndEvt__MPInGameInventory_DropItemBackGwidget_K2Node_ComponentBoundEvent_36_OnDropDeniedInTutorial__DelegateSignature Parms{};

	Parms.TutorReason = TutorReason;
	Parms.IsProtectiveCase = IsProtectiveCase;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_16_EventSelectItem__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_16_EventSelectItem__DelegateSignature(class UJSI_Slot_C* Item, class UJSIContainer_C* Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_16_EventSelectItem__DelegateSignature");

	Params::MPInGameInventory_C_BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_16_EventSelectItem__DelegateSignature Parms{};

	Parms.Item = Item;
	Parms.Container = Container;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_43_OnSlotMouseButtonDown__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FKey                             Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_43_OnSlotMouseButtonDown__DelegateSignature(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_43_OnSlotMouseButtonDown__DelegateSignature");

	Params::MPInGameInventory_C_BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_43_OnSlotMouseButtonDown__DelegateSignature Parms{};

	Parms.Container = Container;
	Parms.SlotRef = SlotRef;
	Parms.Button = std::move(Button);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_5_DropInfo_OnItemEquippedChange__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  FromContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ToContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Equipped_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ToPockets_                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_5_DropInfo_OnItemEquippedChange__DelegateSignature(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* SlotRef, bool Equipped_, bool ToPockets_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_5_DropInfo_OnItemEquippedChange__DelegateSignature");

	Params::MPInGameInventory_C_BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_5_DropInfo_OnItemEquippedChange__DelegateSignature Parms{};

	Parms.FromContainer = FromContainer;
	Parms.ToContainer = ToContainer;
	Parms.SlotRef = SlotRef;
	Parms.Equipped_ = Equipped_;
	Parms.ToPockets_ = ToPockets_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_20_EventSelectItem__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_20_EventSelectItem__DelegateSignature(class UJSI_Slot_C* Item, class UJSIContainer_C* Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_20_EventSelectItem__DelegateSignature");

	Params::MPInGameInventory_C_BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_20_EventSelectItem__DelegateSignature Parms{};

	Parms.Item = Item;
	Parms.Container = Container;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_44_OnSlotMouseButtonDown__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FKey                             Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_44_OnSlotMouseButtonDown__DelegateSignature(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_44_OnSlotMouseButtonDown__DelegateSignature");

	Params::MPInGameInventory_C_BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_44_OnSlotMouseButtonDown__DelegateSignature Parms{};

	Parms.Container = Container;
	Parms.SlotRef = SlotRef;
	Parms.Button = std::move(Button);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_8_DropInfo_OnItemEquippedChange__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  FromContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ToContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Equipped_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ToPockets_                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_8_DropInfo_OnItemEquippedChange__DelegateSignature(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* SlotRef, bool Equipped_, bool ToPockets_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_8_DropInfo_OnItemEquippedChange__DelegateSignature");

	Params::MPInGameInventory_C_BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_8_DropInfo_OnItemEquippedChange__DelegateSignature Parms{};

	Parms.FromContainer = FromContainer;
	Parms.ToContainer = ToContainer;
	Parms.SlotRef = SlotRef;
	Parms.Equipped_ = Equipped_;
	Parms.ToPockets_ = ToPockets_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_15_EventSelectItem__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_15_EventSelectItem__DelegateSignature(class UJSI_Slot_C* Item, class UJSIContainer_C* Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_15_EventSelectItem__DelegateSignature");

	Params::MPInGameInventory_C_BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_15_EventSelectItem__DelegateSignature Parms{};

	Parms.Item = Item;
	Parms.Container = Container;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_45_OnSlotMouseButtonDown__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FKey                             Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_45_OnSlotMouseButtonDown__DelegateSignature(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_45_OnSlotMouseButtonDown__DelegateSignature");

	Params::MPInGameInventory_C_BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_45_OnSlotMouseButtonDown__DelegateSignature Parms{};

	Parms.Container = Container;
	Parms.SlotRef = SlotRef;
	Parms.Button = std::move(Button);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_4_DropInfo_OnItemEquippedChange__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  FromContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ToContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Equipped_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ToPockets_                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_4_DropInfo_OnItemEquippedChange__DelegateSignature(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* SlotRef, bool Equipped_, bool ToPockets_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_4_DropInfo_OnItemEquippedChange__DelegateSignature");

	Params::MPInGameInventory_C_BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_4_DropInfo_OnItemEquippedChange__DelegateSignature Parms{};

	Parms.FromContainer = FromContainer;
	Parms.ToContainer = ToContainer;
	Parms.SlotRef = SlotRef;
	Parms.Equipped_ = Equipped_;
	Parms.ToPockets_ = ToPockets_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_MeleeContainer_K2Node_ComponentBoundEvent_26_EventSelectItem__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_MeleeContainer_K2Node_ComponentBoundEvent_26_EventSelectItem__DelegateSignature(class UJSI_Slot_C* Item, class UJSIContainer_C* Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_MeleeContainer_K2Node_ComponentBoundEvent_26_EventSelectItem__DelegateSignature");

	Params::MPInGameInventory_C_BndEvt__MPInGameInventory_MeleeContainer_K2Node_ComponentBoundEvent_26_EventSelectItem__DelegateSignature Parms{};

	Parms.Item = Item;
	Parms.Container = Container;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_MeleeContainer_K2Node_ComponentBoundEvent_3_DropInfo_OnItemEquippedChange__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  FromContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ToContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Equipped_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ToPockets_                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_MeleeContainer_K2Node_ComponentBoundEvent_3_DropInfo_OnItemEquippedChange__DelegateSignature(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* SlotRef, bool Equipped_, bool ToPockets_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_MeleeContainer_K2Node_ComponentBoundEvent_3_DropInfo_OnItemEquippedChange__DelegateSignature");

	Params::MPInGameInventory_C_BndEvt__MPInGameInventory_MeleeContainer_K2Node_ComponentBoundEvent_3_DropInfo_OnItemEquippedChange__DelegateSignature Parms{};

	Parms.FromContainer = FromContainer;
	Parms.ToContainer = ToContainer;
	Parms.SlotRef = SlotRef;
	Parms.Equipped_ = Equipped_;
	Parms.ToPockets_ = ToPockets_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_22_EventSelectItem__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_22_EventSelectItem__DelegateSignature(class UJSI_Slot_C* Item, class UJSIContainer_C* Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_22_EventSelectItem__DelegateSignature");

	Params::MPInGameInventory_C_BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_22_EventSelectItem__DelegateSignature Parms{};

	Parms.Item = Item;
	Parms.Container = Container;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_46_OnSlotMouseButtonDown__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FKey                             Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_46_OnSlotMouseButtonDown__DelegateSignature(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_46_OnSlotMouseButtonDown__DelegateSignature");

	Params::MPInGameInventory_C_BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_46_OnSlotMouseButtonDown__DelegateSignature Parms{};

	Parms.Container = Container;
	Parms.SlotRef = SlotRef;
	Parms.Button = std::move(Button);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_9_DropInfo_OnItemEquippedChange__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  FromContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ToContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Equipped_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ToPockets_                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_9_DropInfo_OnItemEquippedChange__DelegateSignature(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* SlotRef, bool Equipped_, bool ToPockets_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_9_DropInfo_OnItemEquippedChange__DelegateSignature");

	Params::MPInGameInventory_C_BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_9_DropInfo_OnItemEquippedChange__DelegateSignature Parms{};

	Parms.FromContainer = FromContainer;
	Parms.ToContainer = ToContainer;
	Parms.SlotRef = SlotRef;
	Parms.Equipped_ = Equipped_;
	Parms.ToPockets_ = ToPockets_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_PistolWContainer_K2Node_ComponentBoundEvent_11_DropInfo_OnItemEquippedChange__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  FromContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ToContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Equipped_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ToPockets_                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_PistolWContainer_K2Node_ComponentBoundEvent_11_DropInfo_OnItemEquippedChange__DelegateSignature(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* SlotRef, bool Equipped_, bool ToPockets_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_PistolWContainer_K2Node_ComponentBoundEvent_11_DropInfo_OnItemEquippedChange__DelegateSignature");

	Params::MPInGameInventory_C_BndEvt__MPInGameInventory_PistolWContainer_K2Node_ComponentBoundEvent_11_DropInfo_OnItemEquippedChange__DelegateSignature Parms{};

	Parms.FromContainer = FromContainer;
	Parms.ToContainer = ToContainer;
	Parms.SlotRef = SlotRef;
	Parms.Equipped_ = Equipped_;
	Parms.ToPockets_ = ToPockets_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_PistolWContainer_K2Node_ComponentBoundEvent_24_EventSelectItem__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_PistolWContainer_K2Node_ComponentBoundEvent_24_EventSelectItem__DelegateSignature(class UJSI_Slot_C* Item, class UJSIContainer_C* Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_PistolWContainer_K2Node_ComponentBoundEvent_24_EventSelectItem__DelegateSignature");

	Params::MPInGameInventory_C_BndEvt__MPInGameInventory_PistolWContainer_K2Node_ComponentBoundEvent_24_EventSelectItem__DelegateSignature Parms{};

	Parms.Item = Item;
	Parms.Container = Container;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_1_DropInfo_OnItemEquippedChange__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  FromContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ToContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Equipped_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ToPockets_                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_1_DropInfo_OnItemEquippedChange__DelegateSignature(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* SlotRef, bool Equipped_, bool ToPockets_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_1_DropInfo_OnItemEquippedChange__DelegateSignature");

	Params::MPInGameInventory_C_BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_1_DropInfo_OnItemEquippedChange__DelegateSignature Parms{};

	Parms.FromContainer = FromContainer;
	Parms.ToContainer = ToContainer;
	Parms.SlotRef = SlotRef;
	Parms.Equipped_ = Equipped_;
	Parms.ToPockets_ = ToPockets_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_23_EventSelectItem__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_23_EventSelectItem__DelegateSignature(class UJSI_Slot_C* Item, class UJSIContainer_C* Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_23_EventSelectItem__DelegateSignature");

	Params::MPInGameInventory_C_BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_23_EventSelectItem__DelegateSignature Parms{};

	Parms.Item = Item;
	Parms.Container = Container;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_47_OnSlotMouseButtonDown__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FKey                             Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_47_OnSlotMouseButtonDown__DelegateSignature(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_47_OnSlotMouseButtonDown__DelegateSignature");

	Params::MPInGameInventory_C_BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_47_OnSlotMouseButtonDown__DelegateSignature Parms{};

	Parms.Container = Container;
	Parms.SlotRef = SlotRef;
	Parms.Button = std::move(Button);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_ScrollBox_Items_K2Node_ComponentBoundEvent_29_OnUserScrolledEvent__DelegateSignature
// (BlueprintEvent)
// Parameters:
// float                                   CurrentOffset                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_ScrollBox_Items_K2Node_ComponentBoundEvent_29_OnUserScrolledEvent__DelegateSignature(float CurrentOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_ScrollBox_Items_K2Node_ComponentBoundEvent_29_OnUserScrolledEvent__DelegateSignature");

	Params::MPInGameInventory_C_BndEvt__MPInGameInventory_ScrollBox_Items_K2Node_ComponentBoundEvent_29_OnUserScrolledEvent__DelegateSignature Parms{};

	Parms.CurrentOffset = CurrentOffset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_ScrollBox_Loot_K2Node_ComponentBoundEvent_39_OnUserScrolledEvent__DelegateSignature
// (BlueprintEvent)
// Parameters:
// float                                   CurrentOffset                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_ScrollBox_Loot_K2Node_ComponentBoundEvent_39_OnUserScrolledEvent__DelegateSignature(float CurrentOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_ScrollBox_Loot_K2Node_ComponentBoundEvent_39_OnUserScrolledEvent__DelegateSignature");

	Params::MPInGameInventory_C_BndEvt__MPInGameInventory_ScrollBox_Loot_K2Node_ComponentBoundEvent_39_OnUserScrolledEvent__DelegateSignature Parms{};

	Parms.CurrentOffset = CurrentOffset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_25_EventSelectItem__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_25_EventSelectItem__DelegateSignature(class UJSI_Slot_C* Item, class UJSIContainer_C* Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_25_EventSelectItem__DelegateSignature");

	Params::MPInGameInventory_C_BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_25_EventSelectItem__DelegateSignature Parms{};

	Parms.Item = Item;
	Parms.Container = Container;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_2_DropInfo_OnItemEquippedChange__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  FromContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ToContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Equipped_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ToPockets_                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_2_DropInfo_OnItemEquippedChange__DelegateSignature(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* SlotRef, bool Equipped_, bool ToPockets_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_2_DropInfo_OnItemEquippedChange__DelegateSignature");

	Params::MPInGameInventory_C_BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_2_DropInfo_OnItemEquippedChange__DelegateSignature Parms{};

	Parms.FromContainer = FromContainer;
	Parms.ToContainer = ToContainer;
	Parms.SlotRef = SlotRef;
	Parms.Equipped_ = Equipped_;
	Parms.ToPockets_ = ToPockets_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_48_OnSlotMouseButtonDown__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FKey                             Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_48_OnSlotMouseButtonDown__DelegateSignature(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_48_OnSlotMouseButtonDown__DelegateSignature");

	Params::MPInGameInventory_C_BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_48_OnSlotMouseButtonDown__DelegateSignature Parms{};

	Parms.Container = Container;
	Parms.SlotRef = SlotRef;
	Parms.Button = std::move(Button);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_19_EventSelectItem__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_19_EventSelectItem__DelegateSignature(class UJSI_Slot_C* Item, class UJSIContainer_C* Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_19_EventSelectItem__DelegateSignature");

	Params::MPInGameInventory_C_BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_19_EventSelectItem__DelegateSignature Parms{};

	Parms.Item = Item;
	Parms.Container = Container;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_40_OnSlotMouseButtonDown__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FKey                             Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_40_OnSlotMouseButtonDown__DelegateSignature(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_40_OnSlotMouseButtonDown__DelegateSignature");

	Params::MPInGameInventory_C_BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_40_OnSlotMouseButtonDown__DelegateSignature Parms{};

	Parms.Container = Container;
	Parms.SlotRef = SlotRef;
	Parms.Button = std::move(Button);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_6_DropInfo_OnItemEquippedChange__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  FromContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ToContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Equipped_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ToPockets_                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_6_DropInfo_OnItemEquippedChange__DelegateSignature(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* SlotRef, bool Equipped_, bool ToPockets_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_6_DropInfo_OnItemEquippedChange__DelegateSignature");

	Params::MPInGameInventory_C_BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_6_DropInfo_OnItemEquippedChange__DelegateSignature Parms{};

	Parms.FromContainer = FromContainer;
	Parms.ToContainer = ToContainer;
	Parms.SlotRef = SlotRef;
	Parms.Equipped_ = Equipped_;
	Parms.ToPockets_ = ToPockets_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_UnderwearContainer_K2Node_ComponentBoundEvent_10_DropInfo_OnItemEquippedChange__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  FromContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ToContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Equipped_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ToPockets_                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_UnderwearContainer_K2Node_ComponentBoundEvent_10_DropInfo_OnItemEquippedChange__DelegateSignature(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* SlotRef, bool Equipped_, bool ToPockets_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_UnderwearContainer_K2Node_ComponentBoundEvent_10_DropInfo_OnItemEquippedChange__DelegateSignature");

	Params::MPInGameInventory_C_BndEvt__MPInGameInventory_UnderwearContainer_K2Node_ComponentBoundEvent_10_DropInfo_OnItemEquippedChange__DelegateSignature Parms{};

	Parms.FromContainer = FromContainer;
	Parms.ToContainer = ToContainer;
	Parms.SlotRef = SlotRef;
	Parms.Equipped_ = Equipped_;
	Parms.ToPockets_ = ToPockets_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_UnderwearContainer_K2Node_ComponentBoundEvent_21_EventSelectItem__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_UnderwearContainer_K2Node_ComponentBoundEvent_21_EventSelectItem__DelegateSignature(class UJSI_Slot_C* Item, class UJSIContainer_C* Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_UnderwearContainer_K2Node_ComponentBoundEvent_21_EventSelectItem__DelegateSignature");

	Params::MPInGameInventory_C_BndEvt__MPInGameInventory_UnderwearContainer_K2Node_ComponentBoundEvent_21_EventSelectItem__DelegateSignature Parms{};

	Parms.Item = Item;
	Parms.Container = Container;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_WBP_MainCategorySelector_Hoarder_K2Node_ComponentBoundEvent_32_OnCategoryChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_WBP_MainCategorySelector_Hoarder_K2Node_ComponentBoundEvent_32_OnCategoryChanged__DelegateSignature(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_WBP_MainCategorySelector_Hoarder_K2Node_ComponentBoundEvent_32_OnCategoryChanged__DelegateSignature");

	Params::MPInGameInventory_C_BndEvt__MPInGameInventory_WBP_MainCategorySelector_Hoarder_K2Node_ComponentBoundEvent_32_OnCategoryChanged__DelegateSignature Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_WBP_MainCategorySelector_K2Node_ComponentBoundEvent_33_OnCategoryChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_WBP_MainCategorySelector_K2Node_ComponentBoundEvent_33_OnCategoryChanged__DelegateSignature(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_WBP_MainCategorySelector_K2Node_ComponentBoundEvent_33_OnCategoryChanged__DelegateSignature");

	Params::MPInGameInventory_C_BndEvt__MPInGameInventory_WBP_MainCategorySelector_K2Node_ComponentBoundEvent_33_OnCategoryChanged__DelegateSignature Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__MPInGameInventory_WBP_MainCategorySelector_Shop_K2Node_ComponentBoundEvent_31_OnCategoryChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::BndEvt__MPInGameInventory_WBP_MainCategorySelector_Shop_K2Node_ComponentBoundEvent_31_OnCategoryChanged__DelegateSignature(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__MPInGameInventory_WBP_MainCategorySelector_Shop_K2Node_ComponentBoundEvent_31_OnCategoryChanged__DelegateSignature");

	Params::MPInGameInventory_C_BndEvt__MPInGameInventory_WBP_MainCategorySelector_Shop_K2Node_ComponentBoundEvent_31_OnCategoryChanged__DelegateSignature Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.BndEvt__W_HintButtonNew_Close_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature
// (BlueprintEvent)

void UMPInGameInventory_C::BndEvt__W_HintButtonNew_Close_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "BndEvt__W_HintButtonNew_Close_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.CanAddItemToInv
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  ContainerRef                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::CanAddItemToInv(class UJSIContainer_C* ContainerRef, class UJSI_Slot_C* SlotRef, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "CanAddItemToInv");

	Params::MPInGameInventory_C_CanAddItemToInv Parms{};

	Parms.ContainerRef = ContainerRef;
	Parms.SlotRef = SlotRef;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function MPInGameInventory.MPInGameInventory_C.CanAddItemToStash
// (Public, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::CanAddItemToStash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "CanAddItemToStash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.Check Satiety
// (Public, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::Check_Satiety()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "Check Satiety");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.CheckAdrenaline
// (Public, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::CheckAdrenaline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "CheckAdrenaline");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.CheckHunger
// (Public, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::CheckHunger()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "CheckHunger");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.CheckTutorialObjective_DrinkWater
// (BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::CheckTutorialObjective_DrinkWater()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "CheckTutorialObjective_DrinkWater");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.CheckTutorialObjective_StorageItem
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Completed                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::CheckTutorialObjective_StorageItem(bool Completed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "CheckTutorialObjective_StorageItem");

	Params::MPInGameInventory_C_CheckTutorialObjective_StorageItem Parms{};

	Parms.Completed = Completed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.CheckWater
// (Public, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::CheckWater()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "CheckWater");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.CheckWeight
// (Public, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::CheckWeight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "CheckWeight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.ClearAllSelection
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::ClearAllSelection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "ClearAllSelection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.ClearItemsToTrade
// (BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::ClearItemsToTrade()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "ClearItemsToTrade");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.ClearLootPointSelection
// (Public, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::ClearLootPointSelection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "ClearLootPointSelection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.ClearMainContainerSelection
// (Public, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::ClearMainContainerSelection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "ClearMainContainerSelection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UMPInGameInventory_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.ContainerChanged_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Pocket                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::ContainerChanged_Event(class UJSIContainer_C* Pocket)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "ContainerChanged_Event");

	Params::MPInGameInventory_C_ContainerChanged_Event Parms{};

	Parms.Pocket = Pocket;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.Create Invite Home Widget
// (Public, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::Create_Invite_Home_Widget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "Create Invite Home Widget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.CreateChildWidget
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserWidget*                      ChildWidget                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::CreateChildWidget(class UUserWidget* ChildWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "CreateChildWidget");

	Params::MPInGameInventory_C_CreateChildWidget Parms{};

	Parms.ChildWidget = ChildWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.DeleteItem
// (BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::DeleteItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "DeleteItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UMPInGameInventory_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.DragEnd
// (BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::DragEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "DragEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.DragStart
// (BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::DragStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "DragStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.DropItem
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::DropItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "DropItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.EquipItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Container_Ref                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      Slot_Ref                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Equipped                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  To_Container                                           (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::EquipItem(class UJSIContainer_C* Container_Ref, class UJSI_Slot_C* Slot_Ref, bool* Equipped, class UJSIContainer_C** To_Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "EquipItem");

	Params::MPInGameInventory_C_EquipItem Parms{};

	Parms.Container_Ref = Container_Ref;
	Parms.Slot_Ref = Slot_Ref;

	UObject::ProcessEvent(Func, &Parms);

	if (Equipped != nullptr)
		*Equipped = Parms.Equipped;

	if (To_Container != nullptr)
		*To_Container = Parms.To_Container;
}


// Function MPInGameInventory.MPInGameInventory_C.EquippedSlotBG
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotToStash                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::EquippedSlotBG(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotToStash)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "EquippedSlotBG");

	Params::MPInGameInventory_C_EquippedSlotBG Parms{};

	Parms.Container = Container;
	Parms.SlotToStash = SlotToStash;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.EquipStashItem
// (BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::EquipStashItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "EquipStashItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.EventOnContainerAction
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  FromContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ToContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      DroppedSlotRef                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotReceiverRef                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   ToSlotIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Rotated_                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RightMouseButton                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::EventOnContainerAction(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* DroppedSlotRef, class UJSI_Slot_C* SlotReceiverRef, int32 ToSlotIndex, bool Rotated_, bool RightMouseButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "EventOnContainerAction");

	Params::MPInGameInventory_C_EventOnContainerAction Parms{};

	Parms.FromContainer = FromContainer;
	Parms.ToContainer = ToContainer;
	Parms.DroppedSlotRef = DroppedSlotRef;
	Parms.SlotReceiverRef = SlotReceiverRef;
	Parms.ToSlotIndex = ToSlotIndex;
	Parms.Rotated_ = Rotated_;
	Parms.RightMouseButton = RightMouseButton;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.ExecuteUbergraph_MPInGameInventory
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::ExecuteUbergraph_MPInGameInventory(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "ExecuteUbergraph_MPInGameInventory");

	Params::MPInGameInventory_C_ExecuteUbergraph_MPInGameInventory Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.ExitFromSquad
// (BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::ExitFromSquad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "ExitFromSquad");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.Fill Empty Squad Slots
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   StartIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::Fill_Empty_Squad_Slots(int32 StartIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "Fill Empty Squad Slots");

	Params::MPInGameInventory_C_Fill_Empty_Squad_Slots Parms{};

	Parms.StartIndex = StartIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.FindSlotWithItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      Param_ActiveSlot                                       (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::FindSlotWithItem(class UJSI_Slot_C** Param_ActiveSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "FindSlotWithItem");

	Params::MPInGameInventory_C_FindSlotWithItem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_ActiveSlot != nullptr)
		*Param_ActiveSlot = Parms.Param_ActiveSlot;
}


// Function MPInGameInventory.MPInGameInventory_C.Finished_9FA49C4740B52A565E8DB2A802E665CC
// (BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::Finished_9FA49C4740B52A565E8DB2A802E665CC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "Finished_9FA49C4740B52A565E8DB2A802E665CC");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.Finished_F5D87B80432A397B78A6A291C21B83AD
// (BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::Finished_F5D87B80432A397B78A6A291C21B83AD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "Finished_F5D87B80432A397B78A6A291C21B83AD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.Get Counts Perks
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UMPInGameInventory_C::Get_Counts_Perks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "Get Counts Perks");

	Params::MPInGameInventory_C_Get_Counts_Perks Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function MPInGameInventory.MPInGameInventory_C.GetCategorySwitcherIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_WidgetCategorySwitcherIndex                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::GetCategorySwitcherIndex(int32* Param_WidgetCategorySwitcherIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "GetCategorySwitcherIndex");

	Params::MPInGameInventory_C_GetCategorySwitcherIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_WidgetCategorySwitcherIndex != nullptr)
		*Param_WidgetCategorySwitcherIndex = Parms.Param_WidgetCategorySwitcherIndex;
}


// Function MPInGameInventory.MPInGameInventory_C.GetCountMoney
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::GetCountMoney(int32* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "GetCountMoney");

	Params::MPInGameInventory_C_GetCountMoney Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function MPInGameInventory.MPInGameInventory_C.GetFocused
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_Focused                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::GetFocused(bool* Param_Focused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "GetFocused");

	Params::MPInGameInventory_C_GetFocused Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Focused != nullptr)
		*Param_Focused = Parms.Param_Focused;
}


// Function MPInGameInventory.MPInGameInventory_C.GetPocketContainer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  Container                                              (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::GetPocketContainer(bool* Result, class UJSIContainer_C** Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "GetPocketContainer");

	Params::MPInGameInventory_C_GetPocketContainer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (Container != nullptr)
		*Container = Parms.Container;
}


// Function MPInGameInventory.MPInGameInventory_C.GetScrollBarRenderOpacity
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UScrollBox*                       ScrollBoxWidgetRef                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double UMPInGameInventory_C::GetScrollBarRenderOpacity(class UScrollBox* ScrollBoxWidgetRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "GetScrollBarRenderOpacity");

	Params::MPInGameInventory_C_GetScrollBarRenderOpacity Parms{};

	Parms.ScrollBoxWidgetRef = ScrollBoxWidgetRef;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function MPInGameInventory.MPInGameInventory_C.GetStashTutorialItemToTake
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UJSI_Slot_C*                      Param_StashTutorialItemToTake                          (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::GetStashTutorialItemToTake(class UJSI_Slot_C** Param_StashTutorialItemToTake)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "GetStashTutorialItemToTake");

	Params::MPInGameInventory_C_GetStashTutorialItemToTake Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_StashTutorialItemToTake != nullptr)
		*Param_StashTutorialItemToTake = Parms.Param_StashTutorialItemToTake;
}


// Function MPInGameInventory.MPInGameInventory_C.GlassesSiluetHidden
// (Public, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::GlassesSiluetHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "GlassesSiluetHidden");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.GlassesSiluetShow
// (Public, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::GlassesSiluetShow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "GlassesSiluetShow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.GlovesSiluetHidden
// (Public, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::GlovesSiluetHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "GlovesSiluetHidden");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.GlovesSiluetShow
// (Public, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::GlovesSiluetShow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "GlovesSiluetShow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.HandleContainersEvents
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    SetID_                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::HandleContainersEvents(class UJSIContainer_C* Container, bool SetID_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "HandleContainersEvents");

	Params::MPInGameInventory_C_HandleContainersEvents Parms{};

	Parms.Container = Container;
	Parms.SetID_ = SetID_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.HelmetSiluetHidden
// (Public, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::HelmetSiluetHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "HelmetSiluetHidden");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.HelmetSiluetShow
// (Public, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::HelmetSiluetShow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "HelmetSiluetShow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.Hide
// (BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::Hide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "Hide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.Hide Invite Home Widget
// (Public, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::Hide_Invite_Home_Widget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "Hide Invite Home Widget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.Hide Squad Options
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_Group_C*                     SquadEntry                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::Hide_Squad_Options(class UWBP_Group_C* SquadEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "Hide Squad Options");

	Params::MPInGameInventory_C_Hide_Squad_Options Parms{};

	Parms.SquadEntry = SquadEntry;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.HideBackpackContainer
// (BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::HideBackpackContainer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "HideBackpackContainer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.HideDeleteItem
// (BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::HideDeleteItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "HideDeleteItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.HideLootboxWidget
// (BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::HideLootboxWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "HideLootboxWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.HideTrade
// (Public, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::HideTrade()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "HideTrade");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.HideUseButton
// (Public, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::HideUseButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "HideUseButton");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.HideWarningMessage
// (BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::HideWarningMessage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "HideWarningMessage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.HoldRepairAll
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::HoldRepairAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "HoldRepairAll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.InitialHiding
// (BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::InitialHiding()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "InitialHiding");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.InitStatsTrainProgress
// (Public, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::InitStatsTrainProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "InitStatsTrainProgress");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.IsContainerEmpty
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UMPInGameInventory_C::IsContainerEmpty(class UJSIContainer_C* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "IsContainerEmpty");

	Params::MPInGameInventory_C_IsContainerEmpty Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function MPInGameInventory.MPInGameInventory_C.IsDropWidgetVisible
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UMPInGameInventory_C::IsDropWidgetVisible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "IsDropWidgetVisible");

	Params::MPInGameInventory_C_IsDropWidgetVisible Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function MPInGameInventory.MPInGameInventory_C.MakeGuiHidden
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsHidden                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::MakeGuiHidden(bool IsHidden)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "MakeGuiHidden");

	Params::MPInGameInventory_C_MakeGuiHidden Parms{};

	Parms.IsHidden = IsHidden;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.MouseButtonDownInventory
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FKey                             Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UMPInGameInventory_C::MouseButtonDownInventory(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "MouseButtonDownInventory");

	Params::MPInGameInventory_C_MouseButtonDownInventory Parms{};

	Parms.Container = Container;
	Parms.SlotRef = SlotRef;
	Parms.Button = std::move(Button);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.NotEnoughSpace
// (BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::NotEnoughSpace()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "NotEnoughSpace");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.NotEnoughSpace_Trader
// (BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::NotEnoughSpace_Trader()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "NotEnoughSpace_Trader");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.On Buy Item
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::On_Buy_Item()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "On Buy Item");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.On Make Leader Func
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APS_TDB_C*                        Param_PlayerState                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::On_Make_Leader_Func(class APS_TDB_C* Param_PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "On Make Leader Func");

	Params::MPInGameInventory_C_On_Make_Leader_Func Parms{};

	Parms.Param_PlayerState = Param_PlayerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.On Player Exit
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APS_TDB_C*                        Param_PlayerState                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::On_Player_Exit(class APS_TDB_C* Param_PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "On Player Exit");

	Params::MPInGameInventory_C_On_Player_Exit Parms{};

	Parms.Param_PlayerState = Param_PlayerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.On Player Kick
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APS_TDB_C*                        Param_PlayerState                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::On_Player_Kick(class APS_TDB_C* Param_PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "On Player Kick");

	Params::MPInGameInventory_C_On_Player_Kick Parms{};

	Parms.Param_PlayerState = Param_PlayerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.On Update Group List
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::On_Update_Group_List()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "On Update Group List");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.OnChangedPlayerRef_Event
// (BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::OnChangedPlayerRef_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "OnChangedPlayerRef_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.OnContainerAction__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  FromContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ToContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      DroppedSlotRef                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotReceiverRef                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   ToSlotIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DroppedRotated_                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::OnContainerAction__DelegateSignature(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* DroppedSlotRef, class UJSI_Slot_C* SlotReceiverRef, int32 ToSlotIndex, bool DroppedRotated_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "OnContainerAction__DelegateSignature");

	Params::MPInGameInventory_C_OnContainerAction__DelegateSignature Parms{};

	Parms.FromContainer = FromContainer;
	Parms.ToContainer = ToContainer;
	Parms.DroppedSlotRef = DroppedSlotRef;
	Parms.SlotReceiverRef = SlotReceiverRef;
	Parms.ToSlotIndex = ToSlotIndex;
	Parms.DroppedRotated_ = DroppedRotated_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.OnDrop
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    PointerEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// class UDragDropOperation*               Operation                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UMPInGameInventory_C::OnDrop(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "OnDrop");

	Params::MPInGameInventory_C_OnDrop Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.PointerEvent = std::move(PointerEvent);
	Parms.Operation = Operation;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function MPInGameInventory.MPInGameInventory_C.OnHoldRepairAll__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::OnHoldRepairAll__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "OnHoldRepairAll__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UMPInGameInventory_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.OnInitializedDragWidget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::OnInitializedDragWidget(bool NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "OnInitializedDragWidget");

	Params::MPInGameInventory_C_OnInitializedDragWidget Parms{};

	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.OnInitializedTabsWidget_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_TabsWindow_C*                  TabsWindow                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::OnInitializedTabsWidget_Event(class UW_TabsWindow_C* TabsWindow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "OnInitializedTabsWidget_Event");

	Params::MPInGameInventory_C_OnInitializedTabsWidget_Event Parms{};

	Parms.TabsWindow = TabsWindow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.OnInventoryClosed__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::OnInventoryClosed__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "OnInventoryClosed__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.OnMouseButtonDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UMPInGameInventory_C::OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "OnMouseButtonDown");

	Params::MPInGameInventory_C_OnMouseButtonDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function MPInGameInventory.MPInGameInventory_C.OnTakeItem__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::OnTakeItem__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "OnTakeItem__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.OnToggleSplitDialog
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::OnToggleSplitDialog(bool NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "OnToggleSplitDialog");

	Params::MPInGameInventory_C_OnToggleSplitDialog Parms{};

	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.OnUpdateGroupList (multicast)
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::OnUpdateGroupList__multicast_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "OnUpdateGroupList (multicast)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.OnUpdatePerkFunction
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             PerkName                                               (BlueprintVisible, BlueprintReadOnly, Parm)

void UMPInGameInventory_C::OnUpdatePerkFunction(const class FText& PerkName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "OnUpdatePerkFunction");

	Params::MPInGameInventory_C_OnUpdatePerkFunction Parms{};

	Parms.PerkName = std::move(PerkName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.OnUpdatePerksList
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::OnUpdatePerksList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "OnUpdatePerksList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.PantsSiluetHidden
// (Public, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::PantsSiluetHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "PantsSiluetHidden");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.PantsSiluetShow
// (Public, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::PantsSiluetShow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "PantsSiluetShow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.PlayEquipSound
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      Slot_Ref                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::PlayEquipSound(class UJSI_Slot_C* Slot_Ref)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "PlayEquipSound");

	Params::MPInGameInventory_C_PlayEquipSound Parms{};

	Parms.Slot_Ref = Slot_Ref;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.PlayScrollBarOpacityAnim
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Opacity                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UScrollBox*                       ScrollBoxWidgetRef                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::PlayScrollBarOpacityAnim(double Opacity, class UScrollBox* ScrollBoxWidgetRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "PlayScrollBarOpacityAnim");

	Params::MPInGameInventory_C_PlayScrollBarOpacityAnim Parms{};

	Parms.Opacity = Opacity;
	Parms.ScrollBoxWidgetRef = ScrollBoxWidgetRef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "PreConstruct");

	Params::MPInGameInventory_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.PrepareInventoryForOpening
// (BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::PrepareInventoryForOpening()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "PrepareInventoryForOpening");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.Press F
// (BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::Press_F()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "Press F");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.PressedRepairAll
// (Public, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::PressedRepairAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "PressedRepairAll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.PrimarySiluetHidden
// (Public, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::PrimarySiluetHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "PrimarySiluetHidden");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.PrimarySiluetShow
// (Public, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::PrimarySiluetShow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "PrimarySiluetShow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.ProtectCaseUpdateItems
// (BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::ProtectCaseUpdateItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "ProtectCaseUpdateItems");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.RefreshItemsOnGround
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AA_Item_C*>                ItemsOnGround                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UMPInGameInventory_C::RefreshItemsOnGround(TArray<class AA_Item_C*>& ItemsOnGround)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "RefreshItemsOnGround");

	Params::MPInGameInventory_C_RefreshItemsOnGround Parms{};

	Parms.ItemsOnGround = std::move(ItemsOnGround);

	UObject::ProcessEvent(Func, &Parms);

	ItemsOnGround = std::move(Parms.ItemsOnGround);
}


// Function MPInGameInventory.MPInGameInventory_C.ReleasedRepairAll
// (Public, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::ReleasedRepairAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "ReleasedRepairAll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.Remove Item By UID
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Equipped_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::Remove_Item_By_UID(class UJSI_Slot_C* SlotRef, bool Equipped_, class UJSIContainer_C* Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "Remove Item By UID");

	Params::MPInGameInventory_C_Remove_Item_By_UID Parms{};

	Parms.SlotRef = SlotRef;
	Parms.Equipped_ = Equipped_;
	Parms.Container = Container;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.RepairProcess
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::RepairProcess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "RepairProcess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.RigSiluetHidden
// (Public, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::RigSiluetHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "RigSiluetHidden");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.RigSiluetShow
// (Public, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::RigSiluetShow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "RigSiluetShow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.ScrollBarOpacityAnimTick
// (Public, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::ScrollBarOpacityAnimTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "ScrollBarOpacityAnimTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.SecondarySiluetHidden
// (Public, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::SecondarySiluetHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "SecondarySiluetHidden");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.SecondarySiluetShow
// (Public, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::SecondarySiluetShow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "SecondarySiluetShow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.SelectAmountToStore
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::SelectAmountToStore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "SelectAmountToStore");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.Selected Loot Poin Item
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::Selected_Loot_Poin_Item(class UJSI_Slot_C* Item, class UJSIContainer_C* Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "Selected Loot Poin Item");

	Params::MPInGameInventory_C_Selected_Loot_Poin_Item Parms{};

	Parms.Item = Item;
	Parms.Container = Container;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.SelectedMainContainerItem
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::SelectedMainContainerItem(class UJSI_Slot_C* Item, class UJSIContainer_C* Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "SelectedMainContainerItem");

	Params::MPInGameInventory_C_SelectedMainContainerItem Parms{};

	Parms.Item = Item;
	Parms.Container = Container;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.SelectItem
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::SelectItem(class UJSI_Slot_C* Item, class UJSIContainer_C* Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "SelectItem");

	Params::MPInGameInventory_C_SelectItem Parms{};

	Parms.Item = Item;
	Parms.Container = Container;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.Set Equip Pants
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewEquip                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::Set_Equip_Pants(bool NewEquip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "Set Equip Pants");

	Params::MPInGameInventory_C_Set_Equip_Pants Parms{};

	Parms.NewEquip = NewEquip;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.SetActiveCharacterWidget
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   IndexOfActiveWidget                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidgetAnimation*                 ChangeAnimation                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::SetActiveCharacterWidget(int32 IndexOfActiveWidget, class UWidgetAnimation* ChangeAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "SetActiveCharacterWidget");

	Params::MPInGameInventory_C_SetActiveCharacterWidget Parms{};

	Parms.IndexOfActiveWidget = IndexOfActiveWidget;
	Parms.ChangeAnimation = ChangeAnimation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.SetActiveInventoryWidget
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   IndexOfActiveWidget                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidgetAnimation*                 ChangeAnimation                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::SetActiveInventoryWidget(int32 IndexOfActiveWidget, class UWidgetAnimation* ChangeAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "SetActiveInventoryWidget");

	Params::MPInGameInventory_C_SetActiveInventoryWidget Parms{};

	Parms.IndexOfActiveWidget = IndexOfActiveWidget;
	Parms.ChangeAnimation = ChangeAnimation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.SetActiveQuestsWidget
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   IndexOfActiveWidget                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidgetAnimation*                 ChangeAnimation                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::SetActiveQuestsWidget(int32 IndexOfActiveWidget, class UWidgetAnimation* ChangeAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "SetActiveQuestsWidget");

	Params::MPInGameInventory_C_SetActiveQuestsWidget Parms{};

	Parms.IndexOfActiveWidget = IndexOfActiveWidget;
	Parms.ChangeAnimation = ChangeAnimation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.SetActiveSlot
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      Param_Slot                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::SetActiveSlot(class UJSI_Slot_C* Param_Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "SetActiveSlot");

	Params::MPInGameInventory_C_SetActiveSlot Parms{};

	Parms.Param_Slot = Param_Slot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.SetAllowProtectiveCase
// (Public, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::SetAllowProtectiveCase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "SetAllowProtectiveCase");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.SetBackpackContainerName
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UMPInGameInventory_C::SetBackpackContainerName(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "SetBackpackContainerName");

	Params::MPInGameInventory_C_SetBackpackContainerName Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.SetCategorySelectorShops
// (Public, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::SetCategorySelectorShops()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "SetCategorySelectorShops");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.SetContainerPermissions
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Conatiner                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::SetContainerPermissions(class UJSIContainer_C* Conatiner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "SetContainerPermissions");

	Params::MPInGameInventory_C_SetContainerPermissions Parms{};

	Parms.Conatiner = Conatiner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.SetEquipBackpack
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewEquip                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::SetEquipBackpack(bool NewEquip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "SetEquipBackpack");

	Params::MPInGameInventory_C_SetEquipBackpack Parms{};

	Parms.NewEquip = NewEquip;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.SetEquipTacticalRig
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewEquip                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::SetEquipTacticalRig(bool NewEquip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "SetEquipTacticalRig");

	Params::MPInGameInventory_C_SetEquipTacticalRig Parms{};

	Parms.NewEquip = NewEquip;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.SetFillValueRepairAll
// (Public, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::SetFillValueRepairAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "SetFillValueRepairAll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.SetFocused
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewFocus                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::SetFocused(bool NewFocus, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "SetFocused");

	Params::MPInGameInventory_C_SetFocused Parms{};

	Parms.NewFocus = NewFocus;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function MPInGameInventory.MPInGameInventory_C.SetItemsOnGroundContainer
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AA_Item_C*>                ItemsOnGround                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UMPInGameInventory_C::SetItemsOnGroundContainer(TArray<class AA_Item_C*>& ItemsOnGround)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "SetItemsOnGroundContainer");

	Params::MPInGameInventory_C_SetItemsOnGroundContainer Parms{};

	Parms.ItemsOnGround = std::move(ItemsOnGround);

	UObject::ProcessEvent(Func, &Parms);

	ItemsOnGround = std::move(Parms.ItemsOnGround);
}


// Function MPInGameInventory.MPInGameInventory_C.SetLoadingEffect
// (BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::SetLoadingEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "SetLoadingEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.SetLootContainerName
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UMPInGameInventory_C::SetLootContainerName(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "SetLootContainerName");

	Params::MPInGameInventory_C_SetLootContainerName Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.SetNewActiveSlot
// (BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::SetNewActiveSlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "SetNewActiveSlot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.SetPantsContainerName
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UMPInGameInventory_C::SetPantsContainerName(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "SetPantsContainerName");

	Params::MPInGameInventory_C_SetPantsContainerName Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.SetScrollBarRenderOpacity
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UScrollBox*                       ScrollBoxWidgetRef                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  Opacity                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     TinpColor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::SetScrollBarRenderOpacity(class UScrollBox* ScrollBoxWidgetRef, double Opacity, const struct FLinearColor& TinpColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "SetScrollBarRenderOpacity");

	Params::MPInGameInventory_C_SetScrollBarRenderOpacity Parms{};

	Parms.ScrollBoxWidgetRef = ScrollBoxWidgetRef;
	Parms.Opacity = Opacity;
	Parms.TinpColor = std::move(TinpColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.SetSiluetArmor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewEnabled                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::SetSiluetArmor(bool NewEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "SetSiluetArmor");

	Params::MPInGameInventory_C_SetSiluetArmor Parms{};

	Parms.NewEnabled = NewEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.SetSiluetBackpack
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewEnabled                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::SetSiluetBackpack(bool NewEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "SetSiluetBackpack");

	Params::MPInGameInventory_C_SetSiluetBackpack Parms{};

	Parms.NewEnabled = NewEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.SetSiluetHelmet
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewEnabled                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::SetSiluetHelmet(bool NewEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "SetSiluetHelmet");

	Params::MPInGameInventory_C_SetSiluetHelmet Parms{};

	Parms.NewEnabled = NewEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.SetSiluetMelee
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewEnabled                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::SetSiluetMelee(bool NewEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "SetSiluetMelee");

	Params::MPInGameInventory_C_SetSiluetMelee Parms{};

	Parms.NewEnabled = NewEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.SetSiluetPants
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewEnabled                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::SetSiluetPants(bool NewEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "SetSiluetPants");

	Params::MPInGameInventory_C_SetSiluetPants Parms{};

	Parms.NewEnabled = NewEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.SetSiluetPistol
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewEnabled                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::SetSiluetPistol(bool NewEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "SetSiluetPistol");

	Params::MPInGameInventory_C_SetSiluetPistol Parms{};

	Parms.NewEnabled = NewEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.SetSiluetPrimary
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewEnabled                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::SetSiluetPrimary(bool NewEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "SetSiluetPrimary");

	Params::MPInGameInventory_C_SetSiluetPrimary Parms{};

	Parms.NewEnabled = NewEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.SetSiluetSecondary
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewEnabled                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::SetSiluetSecondary(bool NewEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "SetSiluetSecondary");

	Params::MPInGameInventory_C_SetSiluetSecondary Parms{};

	Parms.NewEnabled = NewEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.SetSiluetTacticalRig
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewEnabled                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::SetSiluetTacticalRig(bool NewEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "SetSiluetTacticalRig");

	Params::MPInGameInventory_C_SetSiluetTacticalRig Parms{};

	Parms.NewEnabled = NewEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.SetStashView
// (Public, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::SetStashView()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "SetStashView");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.SetTacticalRigContainerName
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UMPInGameInventory_C::SetTacticalRigContainerName(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "SetTacticalRigContainerName");

	Params::MPInGameInventory_C_SetTacticalRigContainerName Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.SetWindowsType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    WithLootPoint                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ground                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::SetWindowsType(bool WithLootPoint, bool Ground)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "SetWindowsType");

	Params::MPInGameInventory_C_SetWindowsType Parms{};

	Parms.WithLootPoint = WithLootPoint;
	Parms.Ground = Ground;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.Shop Item Hovered Checking
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::Shop_Item_Hovered_Checking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "Shop Item Hovered Checking");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.ShopBind
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::ShopBind()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "ShopBind");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.Show
// (BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::Show()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "Show");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.ShowBackpackContainer
// (BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::ShowBackpackContainer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "ShowBackpackContainer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.ShowDelete item
// (BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::ShowDelete_item()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "ShowDelete item");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.ShowExitButtonTutorial
// (BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::ShowExitButtonTutorial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "ShowExitButtonTutorial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.ShowInventory
// (Public, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::ShowInventory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "ShowInventory");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.ShowInventoryAnimations
// (Public, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::ShowInventoryAnimations()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "ShowInventoryAnimations");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.ShowLootboxWidget
// (BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::ShowLootboxWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "ShowLootboxWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.ShowTradeCanvas
// (BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::ShowTradeCanvas()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "ShowTradeCanvas");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.ShowUseButton
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             ButtonText                                             (BlueprintVisible, BlueprintReadOnly, Parm)

void UMPInGameInventory_C::ShowUseButton(const class FText& ButtonText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "ShowUseButton");

	Params::MPInGameInventory_C_ShowUseButton Parms{};

	Parms.ButtonText = std::move(ButtonText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.ShowWarningMessage_NotEnoughSpace
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             MessageText                                            (BlueprintVisible, BlueprintReadOnly, Parm)

void UMPInGameInventory_C::ShowWarningMessage_NotEnoughSpace(const class FText& MessageText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "ShowWarningMessage_NotEnoughSpace");

	Params::MPInGameInventory_C_ShowWarningMessage_NotEnoughSpace Parms{};

	Parms.MessageText = std::move(MessageText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.ShowWaterTutorialSlide
// (BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::ShowWaterTutorialSlide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "ShowWaterTutorialSlide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.Split Item
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::Split_Item()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "Split Item");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.StartAnimStatusActive
// (Public, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::StartAnimStatusActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "StartAnimStatusActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.StashContainers
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UJSIContainer_C*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UJSIContainer_C* UMPInGameInventory_C::StashContainers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "StashContainers");

	Params::MPInGameInventory_C_StashContainers Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function MPInGameInventory.MPInGameInventory_C.SwitchCategory
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::SwitchCategory(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "SwitchCategory");

	Params::MPInGameInventory_C_SwitchCategory Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.TabsWindowClosed
// (BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::TabsWindowClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "TabsWindowClosed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.Take Item
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::Take_Item()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "Take Item");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.Take or Equip Item From Stash
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::Take_or_Equip_Item_From_Stash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "Take or Equip Item From Stash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.TakeAllItemsFromTheLootpoint
// (BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::TakeAllItemsFromTheLootpoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "TakeAllItemsFromTheLootpoint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.TakeItemProcess
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::TakeItemProcess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "TakeItemProcess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "Tick");

	Params::MPInGameInventory_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.TryToAddItemToStash
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  EquippedContainerRef                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      EquippedSlotRef                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FKey                             Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::TryToAddItemToStash(class UJSIContainer_C* EquippedContainerRef, class UJSI_Slot_C* EquippedSlotRef, const struct FKey& Button, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "TryToAddItemToStash");

	Params::MPInGameInventory_C_TryToAddItemToStash Parms{};

	Parms.EquippedContainerRef = EquippedContainerRef;
	Parms.EquippedSlotRef = EquippedSlotRef;
	Parms.Button = std::move(Button);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function MPInGameInventory.MPInGameInventory_C.TurnOnLight_OverallCategory
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USizeBox*                         GivenSizebox                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    TurnOn_                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::TurnOnLight_OverallCategory(class USizeBox* GivenSizebox, bool TurnOn_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "TurnOnLight_OverallCategory");

	Params::MPInGameInventory_C_TurnOnLight_OverallCategory Parms{};

	Parms.GivenSizebox = GivenSizebox;
	Parms.TurnOn_ = TurnOn_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.UnbindLootPoint
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::UnbindLootPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "UnbindLootPoint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.UnbindMainContainer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::UnbindMainContainer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "UnbindMainContainer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.UnderwearSiluetHidden
// (Public, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::UnderwearSiluetHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "UnderwearSiluetHidden");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.UnderwearSiluetShow
// (Public, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::UnderwearSiluetShow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "UnderwearSiluetShow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.UnhandleAllEvents
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::UnhandleAllEvents(class UJSIContainer_C* Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "UnhandleAllEvents");

	Params::MPInGameInventory_C_UnhandleAllEvents Parms{};

	Parms.Container = Container;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.UnselectItem
// (BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::UnselectItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "UnselectItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.UpdateContainer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::UpdateContainer(class UJSIContainer_C* Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "UpdateContainer");

	Params::MPInGameInventory_C_UpdateContainer Parms{};

	Parms.Container = Container;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.UpdateGrenadeCount
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::UpdateGrenadeCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "UpdateGrenadeCount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.UpdateInventory
// (BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::UpdateInventory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "UpdateInventory");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.UpdateLootInventory
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Once                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Reset                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::UpdateLootInventory(bool Once, bool Reset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "UpdateLootInventory");

	Params::MPInGameInventory_C_UpdateLootInventory Parms{};

	Parms.Once = Once;
	Parms.Reset = Reset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.UpdateLootInventoryTimerHandler
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::UpdateLootInventoryTimerHandler()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "UpdateLootInventoryTimerHandler");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.UpdateMoneyValue
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::UpdateMoneyValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "UpdateMoneyValue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.UpdatePerksInfo
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::UpdatePerksInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "UpdatePerksInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.UpdateStatProgress
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_TrainStatType                         InputPin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::UpdateStatProgress(E_TrainStatType InputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "UpdateStatProgress");

	Params::MPInGameInventory_C_UpdateStatProgress Parms{};

	Parms.InputPin = InputPin;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPInGameInventory.MPInGameInventory_C.UpdateStats
// (BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::UpdateStats()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "UpdateStats");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.UpdateStorageTutorialPointer
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ItemsFound                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMPInGameInventory_C::UpdateStorageTutorialPointer(bool* ItemsFound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "UpdateStorageTutorialPointer");

	Params::MPInGameInventory_C_UpdateStorageTutorialPointer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ItemsFound != nullptr)
		*ItemsFound = Parms.ItemsFound;
}


// Function MPInGameInventory.MPInGameInventory_C.UpdateTradeOffererItems
// (BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::UpdateTradeOffererItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "UpdateTradeOffererItems");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.UpdateWeight
// (Public, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::UpdateWeight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "UpdateWeight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.ValidateLootInventory
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::ValidateLootInventory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "ValidateLootInventory");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPInGameInventory.MPInGameInventory_C.WaterTutorialSlideOnClose
// (BlueprintCallable, BlueprintEvent)

void UMPInGameInventory_C::WaterTutorialSlideOnClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPInGameInventory_C", "WaterTutorialSlideOnClose");

	UObject::ProcessEvent(Func, nullptr);
}

}

