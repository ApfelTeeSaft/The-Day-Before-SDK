#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_TutorHint

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_TutorHint.W_TutorHint_C
// 0x0340 (0x05C0 - 0x0280)
class UW_TutorHint_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FadeObjective;                                     // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FindFoodHintAnimation;                             // 0x0290(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FindWaterHintAnimation;                            // 0x0298(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       DoorHintAnimation;                                 // 0x02A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       BandageUsingHintAnimation;                         // 0x02A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SPACE_Anim;                                        // 0x02B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       CraftHintAnimation;                                // 0x02B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       F_Anim;                                            // 0x02C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       MacheteHintAnimation;                              // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       BleedingHintAnimation;                             // 0x02D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       CraftProcessHintAnimation;                         // 0x02D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AttackHintAnimation;                               // 0x02E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       CraftIconAnimation;                                // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       MouseIconAnim;                                     // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TABIconAnim;                                       // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ColdHintAnimation;                                 // 0x0300(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AidHintAnimation;                                  // 0x0308(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       MultipleHintAnimation;                             // 0x0310(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SingleHintAnimation;                               // 0x0318(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_Hint;                                       // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_AttackButton;                          // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_SPACE_Button;                          // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_TAB_Button;                            // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_194;                                         // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_circle;                                      // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_circle_1;                                    // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_circle_2;                                    // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_lmb;                                         // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_SPACE;                                       // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_TAB;                                         // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         RichTextBlock_Content;                             // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         RichTextBlock_Content_Additional;                  // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         RichTextBlock_Header;                              // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_FakeObjective_C*                     W_FakeObjective;                                   // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   SurvivingHintHeader;                               // 0x03A0(0x0018)(Edit, BlueprintVisible)
	class FText                                   AidHintContent;                                    // 0x03B8(0x0018)(Edit, BlueprintVisible)
	class FText                                   AttackHintHeader;                                  // 0x03D0(0x0018)(Edit, BlueprintVisible)
	class FText                                   AttackHintContent;                                 // 0x03E8(0x0018)(Edit, BlueprintVisible)
	class FText                                   AttackHintAdditional;                              // 0x0400(0x0018)(Edit, BlueprintVisible)
	class FText                                   MacheteHintContent;                                // 0x0418(0x0018)(Edit, BlueprintVisible)
	class FText                                   MacheteHintAdditional;                             // 0x0430(0x0018)(Edit, BlueprintVisible)
	class FText                                   StatsHintHeader;                                   // 0x0448(0x0018)(Edit, BlueprintVisible)
	class FText                                   StatsColdHintContent;                              // 0x0460(0x0018)(Edit, BlueprintVisible)
	class FText                                   StatsHungerHintContent;                            // 0x0478(0x0018)(Edit, BlueprintVisible)
	class FText                                   StatsThirstHintContent;                            // 0x0490(0x0018)(Edit, BlueprintVisible)
	class FText                                   CraftHintHeader;                                   // 0x04A8(0x0018)(Edit, BlueprintVisible)
	class FText                                   CraftHintContent;                                  // 0x04C0(0x0018)(Edit, BlueprintVisible)
	class FText                                   CraftHintAdditional;                               // 0x04D8(0x0018)(Edit, BlueprintVisible)
	class FText                                   CraftProccesseHintContent;                         // 0x04F0(0x0018)(Edit, BlueprintVisible)
	class FText                                   InventoryHintHeader;                               // 0x0508(0x0018)(Edit, BlueprintVisible)
	class FText                                   InventoryOpenHintContent;                          // 0x0520(0x0018)(Edit, BlueprintVisible)
	class FText                                   InventoryItemHintContent;                          // 0x0538(0x0018)(Edit, BlueprintVisible)
	class FText                                   BleedingHintHeader;                                // 0x0550(0x0018)(Edit, BlueprintVisible)
	class FText                                   BleedingHintContent;                               // 0x0568(0x0018)(Edit, BlueprintVisible)
	class FText                                   BleedingHintAdditional;                            // 0x0580(0x0018)(Edit, BlueprintVisible)
	class AActor*                                 ColdActor;                                         // 0x0598(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HungerActor;                                       // 0x05A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ThirstActor;                                       // 0x05A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DoorActor;                                         // 0x05B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 RagActor;                                          // 0x05B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_W_TutorHint(int32 EntryPoint);
	void HideAidHint();
	void HideAttackHint();
	void HideBandageUsingHint();
	void HideBleedingHint();
	void HideCraftHint();
	void HideCraftProcessHint();
	void HideDoorHint();
	void HideInventoryHint();
	void HideInventoryItemHint();
	void HideMacheteHint();
	void HideStatHint();
	void HideStatUsingHint();
	void SequenceEvent__ENTRYPOINTW_TutorHint();
	void SequenceEvent__ENTRYPOINTW_TutorHint_0();
	void SequenceEvent__ENTRYPOINTW_TutorHint_1();
	void SequenceEvent__ENTRYPOINTW_TutorHint_2();
	void SequenceEvent__ENTRYPOINTW_TutorHint_3();
	void SequenceEvent__ENTRYPOINTW_TutorHint_4();
	void ShowAIdHint();
	void ShowAttackHint();
	void ShowBandageUsingHint();
	void ShowBleedingHint(class AActor* Param_RagActor);
	void ShowColdHint(class AActor* Cold_Actor);
	void ShowColdText();
	void ShowCraftHint();
	void ShowCraftProcessHint();
	void ShowDoorHint();
	void ShowFakeObjectve();
	void ShowFindFoodHint();
	void ShowFindWaterHint();
	void ShowFoodUsingHint();
	void ShowHungerAndThirstHint(class AActor* Thirst_Actor, class AActor* Hunger_Actor);
	void ShowHungerText();
	void ShowInventoryHint();
	void ShowInventoryItemHint();
	void ShowLastHint();
	void ShowMacheteHint();
	void ShowRagMark();
	void ShowThirstText();
	void ShowWaterUsingHint();
	void UseItemIcon_SetPos();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_TutorHint_C">();
	}
	static class UW_TutorHint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_TutorHint_C>();
	}
};
static_assert(alignof(UW_TutorHint_C) == 0x000008, "Wrong alignment on UW_TutorHint_C");
static_assert(sizeof(UW_TutorHint_C) == 0x0005C0, "Wrong size on UW_TutorHint_C");
static_assert(offsetof(UW_TutorHint_C, UberGraphFrame) == 0x000280, "Member 'UW_TutorHint_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, FadeObjective) == 0x000288, "Member 'UW_TutorHint_C::FadeObjective' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, FindFoodHintAnimation) == 0x000290, "Member 'UW_TutorHint_C::FindFoodHintAnimation' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, FindWaterHintAnimation) == 0x000298, "Member 'UW_TutorHint_C::FindWaterHintAnimation' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, DoorHintAnimation) == 0x0002A0, "Member 'UW_TutorHint_C::DoorHintAnimation' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, BandageUsingHintAnimation) == 0x0002A8, "Member 'UW_TutorHint_C::BandageUsingHintAnimation' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, SPACE_Anim) == 0x0002B0, "Member 'UW_TutorHint_C::SPACE_Anim' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, CraftHintAnimation) == 0x0002B8, "Member 'UW_TutorHint_C::CraftHintAnimation' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, F_Anim) == 0x0002C0, "Member 'UW_TutorHint_C::F_Anim' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, MacheteHintAnimation) == 0x0002C8, "Member 'UW_TutorHint_C::MacheteHintAnimation' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, BleedingHintAnimation) == 0x0002D0, "Member 'UW_TutorHint_C::BleedingHintAnimation' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, CraftProcessHintAnimation) == 0x0002D8, "Member 'UW_TutorHint_C::CraftProcessHintAnimation' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, AttackHintAnimation) == 0x0002E0, "Member 'UW_TutorHint_C::AttackHintAnimation' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, CraftIconAnimation) == 0x0002E8, "Member 'UW_TutorHint_C::CraftIconAnimation' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, MouseIconAnim) == 0x0002F0, "Member 'UW_TutorHint_C::MouseIconAnim' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, TABIconAnim) == 0x0002F8, "Member 'UW_TutorHint_C::TABIconAnim' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, ColdHintAnimation) == 0x000300, "Member 'UW_TutorHint_C::ColdHintAnimation' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, AidHintAnimation) == 0x000308, "Member 'UW_TutorHint_C::AidHintAnimation' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, MultipleHintAnimation) == 0x000310, "Member 'UW_TutorHint_C::MultipleHintAnimation' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, SingleHintAnimation) == 0x000318, "Member 'UW_TutorHint_C::SingleHintAnimation' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, Canvas_Hint) == 0x000320, "Member 'UW_TutorHint_C::Canvas_Hint' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, CanvasPanel_AttackButton) == 0x000328, "Member 'UW_TutorHint_C::CanvasPanel_AttackButton' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, CanvasPanel_SPACE_Button) == 0x000330, "Member 'UW_TutorHint_C::CanvasPanel_SPACE_Button' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, CanvasPanel_TAB_Button) == 0x000338, "Member 'UW_TutorHint_C::CanvasPanel_TAB_Button' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, Image) == 0x000340, "Member 'UW_TutorHint_C::Image' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, Image_194) == 0x000348, "Member 'UW_TutorHint_C::Image_194' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, Image_circle) == 0x000350, "Member 'UW_TutorHint_C::Image_circle' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, Image_circle_1) == 0x000358, "Member 'UW_TutorHint_C::Image_circle_1' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, Image_circle_2) == 0x000360, "Member 'UW_TutorHint_C::Image_circle_2' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, Image_lmb) == 0x000368, "Member 'UW_TutorHint_C::Image_lmb' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, Image_SPACE) == 0x000370, "Member 'UW_TutorHint_C::Image_SPACE' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, Image_TAB) == 0x000378, "Member 'UW_TutorHint_C::Image_TAB' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, RichTextBlock_Content) == 0x000380, "Member 'UW_TutorHint_C::RichTextBlock_Content' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, RichTextBlock_Content_Additional) == 0x000388, "Member 'UW_TutorHint_C::RichTextBlock_Content_Additional' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, RichTextBlock_Header) == 0x000390, "Member 'UW_TutorHint_C::RichTextBlock_Header' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, W_FakeObjective) == 0x000398, "Member 'UW_TutorHint_C::W_FakeObjective' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, SurvivingHintHeader) == 0x0003A0, "Member 'UW_TutorHint_C::SurvivingHintHeader' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, AidHintContent) == 0x0003B8, "Member 'UW_TutorHint_C::AidHintContent' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, AttackHintHeader) == 0x0003D0, "Member 'UW_TutorHint_C::AttackHintHeader' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, AttackHintContent) == 0x0003E8, "Member 'UW_TutorHint_C::AttackHintContent' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, AttackHintAdditional) == 0x000400, "Member 'UW_TutorHint_C::AttackHintAdditional' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, MacheteHintContent) == 0x000418, "Member 'UW_TutorHint_C::MacheteHintContent' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, MacheteHintAdditional) == 0x000430, "Member 'UW_TutorHint_C::MacheteHintAdditional' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, StatsHintHeader) == 0x000448, "Member 'UW_TutorHint_C::StatsHintHeader' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, StatsColdHintContent) == 0x000460, "Member 'UW_TutorHint_C::StatsColdHintContent' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, StatsHungerHintContent) == 0x000478, "Member 'UW_TutorHint_C::StatsHungerHintContent' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, StatsThirstHintContent) == 0x000490, "Member 'UW_TutorHint_C::StatsThirstHintContent' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, CraftHintHeader) == 0x0004A8, "Member 'UW_TutorHint_C::CraftHintHeader' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, CraftHintContent) == 0x0004C0, "Member 'UW_TutorHint_C::CraftHintContent' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, CraftHintAdditional) == 0x0004D8, "Member 'UW_TutorHint_C::CraftHintAdditional' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, CraftProccesseHintContent) == 0x0004F0, "Member 'UW_TutorHint_C::CraftProccesseHintContent' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, InventoryHintHeader) == 0x000508, "Member 'UW_TutorHint_C::InventoryHintHeader' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, InventoryOpenHintContent) == 0x000520, "Member 'UW_TutorHint_C::InventoryOpenHintContent' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, InventoryItemHintContent) == 0x000538, "Member 'UW_TutorHint_C::InventoryItemHintContent' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, BleedingHintHeader) == 0x000550, "Member 'UW_TutorHint_C::BleedingHintHeader' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, BleedingHintContent) == 0x000568, "Member 'UW_TutorHint_C::BleedingHintContent' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, BleedingHintAdditional) == 0x000580, "Member 'UW_TutorHint_C::BleedingHintAdditional' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, ColdActor) == 0x000598, "Member 'UW_TutorHint_C::ColdActor' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, HungerActor) == 0x0005A0, "Member 'UW_TutorHint_C::HungerActor' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, ThirstActor) == 0x0005A8, "Member 'UW_TutorHint_C::ThirstActor' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, DoorActor) == 0x0005B0, "Member 'UW_TutorHint_C::DoorActor' has a wrong offset!");
static_assert(offsetof(UW_TutorHint_C, RagActor) == 0x0005B8, "Member 'UW_TutorHint_C::RagActor' has a wrong offset!");

}

