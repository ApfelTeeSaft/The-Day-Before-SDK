#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_BreathSystemReplication

#include "Basic.hpp"

#include "BPC_BreathSystemReplication_classes.hpp"
#include "BPC_BreathSystemReplication_parameters.hpp"


namespace SDK
{

// Function BPC_BreathSystemReplication.BPC_BreathSystemReplication_C.CalculateState
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBreathStateChangedStruct        NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UBPC_BreathSystemReplication_C::CalculateState(const struct FBreathStateChangedStruct& NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_BreathSystemReplication_C", "CalculateState");

	Params::BPC_BreathSystemReplication_C_CalculateState Parms{};

	Parms.NewState = std::move(NewState);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_BreathSystemReplication.BPC_BreathSystemReplication_C.CalculateStateServer
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBreathStateChangedStruct        NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UBPC_BreathSystemReplication_C::CalculateStateServer(const struct FBreathStateChangedStruct& NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_BreathSystemReplication_C", "CalculateStateServer");

	Params::BPC_BreathSystemReplication_C_CalculateStateServer Parms{};

	Parms.NewState = std::move(NewState);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_BreathSystemReplication.BPC_BreathSystemReplication_C.CallBreathStateChange
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBreathStateMachineStruct        NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// double                                  CurrentStamina                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DamagedChest                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DamagedBelly                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Painkiller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_BreathSystemReplication_C::CallBreathStateChange(const struct FBreathStateMachineStruct& NewState, double CurrentStamina, bool DamagedChest, bool DamagedBelly, bool Painkiller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_BreathSystemReplication_C", "CallBreathStateChange");

	Params::BPC_BreathSystemReplication_C_CallBreathStateChange Parms{};

	Parms.NewState = std::move(NewState);
	Parms.CurrentStamina = CurrentStamina;
	Parms.DamagedChest = DamagedChest;
	Parms.DamagedBelly = DamagedBelly;
	Parms.Painkiller = Painkiller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_BreathSystemReplication.BPC_BreathSystemReplication_C.ExecuteUbergraph_BPC_BreathSystemReplication
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_BreathSystemReplication_C::ExecuteUbergraph_BPC_BreathSystemReplication(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_BreathSystemReplication_C", "ExecuteUbergraph_BPC_BreathSystemReplication");

	Params::BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_BreathSystemReplication.BPC_BreathSystemReplication_C.FMODBreathingStartEvent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFMODEvent*                       NewEvent                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UFMODAudioComponent*              Active                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UFMODAudioComponent*              Disabled                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBPC_BreathSystemReplication_C::FMODBreathingStartEvent(class UFMODEvent* NewEvent, class UFMODAudioComponent* Active, class UFMODAudioComponent* Disabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_BreathSystemReplication_C", "FMODBreathingStartEvent");

	Params::BPC_BreathSystemReplication_C_FMODBreathingStartEvent Parms{};

	Parms.NewEvent = NewEvent;
	Parms.Active = Active;
	Parms.Disabled = Disabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_BreathSystemReplication.BPC_BreathSystemReplication_C.OnBreathStateChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBreathStateChangedStruct        State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UBPC_BreathSystemReplication_C::OnBreathStateChanged(const struct FBreathStateChangedStruct& State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_BreathSystemReplication_C", "OnBreathStateChanged");

	Params::BPC_BreathSystemReplication_C_OnBreathStateChanged Parms{};

	Parms.State = std::move(State);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_BreathSystemReplication.BPC_BreathSystemReplication_C.OnStateChanged
// (Event, Protected, BlueprintEvent)

void UBPC_BreathSystemReplication_C::OnStateChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_BreathSystemReplication_C", "OnStateChanged");

	UObject::ProcessEvent(Func, nullptr);
}

}

