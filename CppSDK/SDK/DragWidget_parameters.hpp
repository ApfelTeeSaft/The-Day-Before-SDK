#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DragWidget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "InputCore_structs.hpp"
#include "FMODStudio_structs.hpp"


namespace SDK::Params
{

// Function DragWidget.DragWidget_C.AddContainer
// 0x0010 (0x0010 - 0x0000)
struct DragWidget_C_AddContainer final
{
public:
	const class UJSIContainer_C*                  NewContainer;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DragWidget_C_AddContainer) == 0x000008, "Wrong alignment on DragWidget_C_AddContainer");
static_assert(sizeof(DragWidget_C_AddContainer) == 0x000010, "Wrong size on DragWidget_C_AddContainer");
static_assert(offsetof(DragWidget_C_AddContainer, NewContainer) == 0x000000, "Member 'DragWidget_C_AddContainer::NewContainer' has a wrong offset!");
static_assert(offsetof(DragWidget_C_AddContainer, CallFunc_Array_AddUnique_ReturnValue) == 0x000008, "Member 'DragWidget_C_AddContainer::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function DragWidget.DragWidget_C.ExecuteUbergraph_DragWidget
// 0x03E0 (0x03E0 - 0x0000)
struct DragWidget_C_ExecuteUbergraph_DragWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0018(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0054(0x0014)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B[0x1];                                       // 0x006B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x006C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Calculate_Size_With_Ratio_Size;           // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_Select_Default;                             // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_isRotated__ReturnValue;                   // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_GameHUD_C*                          K2Node_DynamicCast_AsBP_Game_HUD;                  // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_GetSlotBrushes_BG_Brush;                  // 0x00C0(0x00D0)()
	struct FSlateBrush                            CallFunc_GetSlotBrushes_Gradient_Brush;            // 0x0190(0x00D0)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0260(0x00D0)()
	double                                        Temp_real_Variable;                                // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0339(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33A[0x6];                                      // 0x033A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetMoveOffset_ReturnValue;                // 0x0340(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPivotIndex_Ind;                        // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354[0x4];                                      // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJigSDragOperation_C*                   K2Node_DynamicCast_AsJig_SDrag_Operation;          // 0x0358(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_379[0x3];                                      // 0x0379(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        CallFunc_Array_Get_Item;                           // 0x0380(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_389[0x7];                                      // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_1;                              // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399[0x7];                                      // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_1;                           // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A9[0x7];                                      // 0x03A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJigSDragOperation_C*                   K2Node_DynamicCast_AsJig_SDrag_Operation_1;        // 0x03B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C1[0x7];                                      // 0x03C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue;                  // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDeprecateSlateVector2D                K2Node_MakeStruct_ImageSize_ImplicitCast;          // 0x03D0(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderTransformAngle_Angle_ImplicitCast; // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderTransformAngle_Angle_ImplicitCast_1; // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DragWidget_C_ExecuteUbergraph_DragWidget) == 0x000010, "Wrong alignment on DragWidget_C_ExecuteUbergraph_DragWidget");
static_assert(sizeof(DragWidget_C_ExecuteUbergraph_DragWidget) == 0x0003E0, "Wrong size on DragWidget_C_ExecuteUbergraph_DragWidget");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, EntryPoint) == 0x000000, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, Temp_bool_Variable) == 0x000004, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, K2Node_Event_MyGeometry) == 0x000018, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, K2Node_Event_InDeltaTime) == 0x000050, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, K2Node_MakeStruct_SlateColor) == 0x000054, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000069, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, Temp_bool_Variable_1) == 0x00006A, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, K2Node_MakeStruct_LinearColor) == 0x00006C, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_Calculate_Size_With_Ratio_Size) == 0x000080, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_Calculate_Size_With_Ratio_Size' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, K2Node_Select_Default) == 0x000090, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_isRotated__ReturnValue) == 0x000098, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_isRotated__ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_GetPlayerController_ReturnValue) == 0x0000A0, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_GetHUD_ReturnValue) == 0x0000A8, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, K2Node_DynamicCast_AsBP_Game_HUD) == 0x0000B0, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::K2Node_DynamicCast_AsBP_Game_HUD' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, K2Node_DynamicCast_bSuccess) == 0x0000B8, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_GetSlotBrushes_BG_Brush) == 0x0000C0, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_GetSlotBrushes_BG_Brush' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_GetSlotBrushes_Gradient_Brush) == 0x000190, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_GetSlotBrushes_Gradient_Brush' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, K2Node_MakeStruct_SlateBrush) == 0x000260, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, Temp_real_Variable) == 0x000330, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_IsValid_ReturnValue_1) == 0x000338, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_IsValid_ReturnValue_2) == 0x000339, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_GetMoveOffset_ReturnValue) == 0x000340, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_GetMoveOffset_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_GetPivotIndex_Ind) == 0x000350, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_GetPivotIndex_Ind' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, K2Node_DynamicCast_AsJig_SDrag_Operation) == 0x000358, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::K2Node_DynamicCast_AsJig_SDrag_Operation' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, K2Node_DynamicCast_bSuccess_1) == 0x000360, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_BreakVector2D_X) == 0x000368, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_BreakVector2D_Y) == 0x000370, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000378, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, Temp_int_Array_Index_Variable) == 0x00037C, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_Array_Get_Item) == 0x000380, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_IsValid_ReturnValue_3) == 0x000388, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, Temp_real_Variable_1) == 0x000390, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_Not_PreBool_ReturnValue) == 0x000398, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, K2Node_Select_Default_1) == 0x0003A0, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x0003A8, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_SelectFloat_ReturnValue) == 0x0003B0, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, K2Node_DynamicCast_AsJig_SDrag_Operation_1) == 0x0003B8, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::K2Node_DynamicCast_AsJig_SDrag_Operation_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, K2Node_DynamicCast_bSuccess_2) == 0x0003C0, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_PlayEvent2D_ReturnValue) == 0x0003C8, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_PlayEvent2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, K2Node_MakeStruct_ImageSize_ImplicitCast) == 0x0003D0, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::K2Node_MakeStruct_ImageSize_ImplicitCast' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_SetRenderTransformAngle_Angle_ImplicitCast) == 0x0003D8, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_SetRenderTransformAngle_Angle_ImplicitCast' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_SetRenderTransformAngle_Angle_ImplicitCast_1) == 0x0003DC, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_SetRenderTransformAngle_Angle_ImplicitCast_1' has a wrong offset!");

// Function DragWidget.DragWidget_C.GetPivotIndex
// 0x00B8 (0x00B8 - 0x0000)
struct DragWidget_C_GetPivotIndex final
{
public:
	int32                                         Ind;                                               // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumberOfCellsInColumn;                             // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumberOfCellsInRow;                                // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Y_Location;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        X_Location;                                        // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue_2;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_3;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_6;          // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_7;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_4;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_8;          // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue_5;                     // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_9;          // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_6;                     // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_7;                     // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_10;         // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_11;         // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DragWidget_C_GetPivotIndex) == 0x000008, "Wrong alignment on DragWidget_C_GetPivotIndex");
static_assert(sizeof(DragWidget_C_GetPivotIndex) == 0x0000B8, "Wrong size on DragWidget_C_GetPivotIndex");
static_assert(offsetof(DragWidget_C_GetPivotIndex, Ind) == 0x000000, "Member 'DragWidget_C_GetPivotIndex::Ind' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetPivotIndex, NumberOfCellsInColumn) == 0x000004, "Member 'DragWidget_C_GetPivotIndex::NumberOfCellsInColumn' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetPivotIndex, NumberOfCellsInRow) == 0x000008, "Member 'DragWidget_C_GetPivotIndex::NumberOfCellsInRow' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetPivotIndex, Y_Location) == 0x000010, "Member 'DragWidget_C_GetPivotIndex::Y_Location' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetPivotIndex, X_Location) == 0x000018, "Member 'DragWidget_C_GetPivotIndex::X_Location' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetPivotIndex, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000020, "Member 'DragWidget_C_GetPivotIndex::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetPivotIndex, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000021, "Member 'DragWidget_C_GetPivotIndex::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetPivotIndex, CallFunc_SelectInt_ReturnValue) == 0x000024, "Member 'DragWidget_C_GetPivotIndex::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetPivotIndex, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000028, "Member 'DragWidget_C_GetPivotIndex::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetPivotIndex, CallFunc_BreakVector2D_X) == 0x000030, "Member 'DragWidget_C_GetPivotIndex::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetPivotIndex, CallFunc_BreakVector2D_Y) == 0x000038, "Member 'DragWidget_C_GetPivotIndex::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetPivotIndex, CallFunc_BreakVector2D_X_1) == 0x000040, "Member 'DragWidget_C_GetPivotIndex::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetPivotIndex, CallFunc_BreakVector2D_Y_1) == 0x000048, "Member 'DragWidget_C_GetPivotIndex::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetPivotIndex, CallFunc_FTrunc_ReturnValue) == 0x000050, "Member 'DragWidget_C_GetPivotIndex::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetPivotIndex, CallFunc_FTrunc_ReturnValue_1) == 0x000054, "Member 'DragWidget_C_GetPivotIndex::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetPivotIndex, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000058, "Member 'DragWidget_C_GetPivotIndex::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetPivotIndex, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x000059, "Member 'DragWidget_C_GetPivotIndex::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetPivotIndex, CallFunc_FTrunc_ReturnValue_2) == 0x00005C, "Member 'DragWidget_C_GetPivotIndex::CallFunc_FTrunc_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetPivotIndex, CallFunc_FTrunc_ReturnValue_3) == 0x000060, "Member 'DragWidget_C_GetPivotIndex::CallFunc_FTrunc_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetPivotIndex, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x000064, "Member 'DragWidget_C_GetPivotIndex::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetPivotIndex, CallFunc_EqualEqual_IntInt_ReturnValue_6) == 0x000065, "Member 'DragWidget_C_GetPivotIndex::CallFunc_EqualEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetPivotIndex, CallFunc_BooleanAND_ReturnValue) == 0x000066, "Member 'DragWidget_C_GetPivotIndex::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetPivotIndex, CallFunc_BooleanAND_ReturnValue_1) == 0x000067, "Member 'DragWidget_C_GetPivotIndex::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetPivotIndex, CallFunc_EqualEqual_IntInt_ReturnValue_7) == 0x000068, "Member 'DragWidget_C_GetPivotIndex::CallFunc_EqualEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetPivotIndex, CallFunc_BreakVector2D_X_2) == 0x000070, "Member 'DragWidget_C_GetPivotIndex::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetPivotIndex, CallFunc_BreakVector2D_Y_2) == 0x000078, "Member 'DragWidget_C_GetPivotIndex::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetPivotIndex, CallFunc_FTrunc_ReturnValue_4) == 0x000080, "Member 'DragWidget_C_GetPivotIndex::CallFunc_FTrunc_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetPivotIndex, CallFunc_SelectInt_ReturnValue_1) == 0x000084, "Member 'DragWidget_C_GetPivotIndex::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetPivotIndex, CallFunc_EqualEqual_IntInt_ReturnValue_8) == 0x000088, "Member 'DragWidget_C_GetPivotIndex::CallFunc_EqualEqual_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetPivotIndex, CallFunc_FTrunc_ReturnValue_5) == 0x00008C, "Member 'DragWidget_C_GetPivotIndex::CallFunc_FTrunc_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetPivotIndex, CallFunc_EqualEqual_IntInt_ReturnValue_9) == 0x000090, "Member 'DragWidget_C_GetPivotIndex::CallFunc_EqualEqual_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetPivotIndex, CallFunc_BooleanAND_ReturnValue_2) == 0x000091, "Member 'DragWidget_C_GetPivotIndex::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetPivotIndex, CallFunc_BreakVector2D_X_3) == 0x000098, "Member 'DragWidget_C_GetPivotIndex::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetPivotIndex, CallFunc_BreakVector2D_Y_3) == 0x0000A0, "Member 'DragWidget_C_GetPivotIndex::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetPivotIndex, CallFunc_FTrunc_ReturnValue_6) == 0x0000A8, "Member 'DragWidget_C_GetPivotIndex::CallFunc_FTrunc_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetPivotIndex, CallFunc_FTrunc_ReturnValue_7) == 0x0000AC, "Member 'DragWidget_C_GetPivotIndex::CallFunc_FTrunc_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetPivotIndex, CallFunc_EqualEqual_IntInt_ReturnValue_10) == 0x0000B0, "Member 'DragWidget_C_GetPivotIndex::CallFunc_EqualEqual_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetPivotIndex, CallFunc_EqualEqual_IntInt_ReturnValue_11) == 0x0000B1, "Member 'DragWidget_C_GetPivotIndex::CallFunc_EqualEqual_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetPivotIndex, CallFunc_BooleanAND_ReturnValue_3) == 0x0000B2, "Member 'DragWidget_C_GetPivotIndex::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetPivotIndex, CallFunc_BooleanOR_ReturnValue) == 0x0000B3, "Member 'DragWidget_C_GetPivotIndex::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function DragWidget.DragWidget_C.GetRotationOffset
// 0x0210 (0x0210 - 0x0000)
struct DragWidget_C_GetRotationOffset final
{
public:
	struct FVector2D                              Param_MoveOffset;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RotationOffset;                                    // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumberOfCellsInRow;                                // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumberOfCellsInColumn;                             // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Y_Location;                                        // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        X_Location;                                        // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_2;     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_3;     // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_4;     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_3;           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_5;     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_9;      // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0180(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeToRange_ReturnValue;             // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeToRange_ReturnValue_1;           // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_6;          // 0x01D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x01D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_7;          // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x01D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D6[0x2];                                      // 0x01D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_4;                        // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_4;                        // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1;   // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2;   // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_3;   // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DragWidget_C_GetRotationOffset) == 0x000008, "Wrong alignment on DragWidget_C_GetRotationOffset");
static_assert(sizeof(DragWidget_C_GetRotationOffset) == 0x000210, "Wrong size on DragWidget_C_GetRotationOffset");
static_assert(offsetof(DragWidget_C_GetRotationOffset, Param_MoveOffset) == 0x000000, "Member 'DragWidget_C_GetRotationOffset::Param_MoveOffset' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, RotationOffset) == 0x000010, "Member 'DragWidget_C_GetRotationOffset::RotationOffset' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, NumberOfCellsInRow) == 0x000020, "Member 'DragWidget_C_GetRotationOffset::NumberOfCellsInRow' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, NumberOfCellsInColumn) == 0x000024, "Member 'DragWidget_C_GetRotationOffset::NumberOfCellsInColumn' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, Y_Location) == 0x000028, "Member 'DragWidget_C_GetRotationOffset::Y_Location' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, X_Location) == 0x000030, "Member 'DragWidget_C_GetRotationOffset::X_Location' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_BreakVector2D_X) == 0x000038, "Member 'DragWidget_C_GetRotationOffset::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_BreakVector2D_Y) == 0x000040, "Member 'DragWidget_C_GetRotationOffset::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_BreakVector2D_X_1) == 0x000048, "Member 'DragWidget_C_GetRotationOffset::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_BreakVector2D_Y_1) == 0x000050, "Member 'DragWidget_C_GetRotationOffset::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000058, "Member 'DragWidget_C_GetRotationOffset::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_BreakVector2D_X_2) == 0x000060, "Member 'DragWidget_C_GetRotationOffset::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_BreakVector2D_Y_2) == 0x000068, "Member 'DragWidget_C_GetRotationOffset::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000070, "Member 'DragWidget_C_GetRotationOffset::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000078, "Member 'DragWidget_C_GetRotationOffset::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000080, "Member 'DragWidget_C_GetRotationOffset::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000088, "Member 'DragWidget_C_GetRotationOffset::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000090, "Member 'DragWidget_C_GetRotationOffset::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000098, "Member 'DragWidget_C_GetRotationOffset::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'DragWidget_C_GetRotationOffset::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x0000A1, "Member 'DragWidget_C_GetRotationOffset::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x0000A8, "Member 'DragWidget_C_GetRotationOffset::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000B0, "Member 'DragWidget_C_GetRotationOffset::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0000B8, "Member 'DragWidget_C_GetRotationOffset::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_LessEqual_DoubleDouble_ReturnValue_2) == 0x0000C0, "Member 'DragWidget_C_GetRotationOffset::CallFunc_LessEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_LessEqual_DoubleDouble_ReturnValue_3) == 0x0000C1, "Member 'DragWidget_C_GetRotationOffset::CallFunc_LessEqual_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_SelectFloat_ReturnValue) == 0x0000C8, "Member 'DragWidget_C_GetRotationOffset::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_LessEqual_DoubleDouble_ReturnValue_4) == 0x0000D0, "Member 'DragWidget_C_GetRotationOffset::CallFunc_LessEqual_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_MakeVector2D_ReturnValue) == 0x0000D8, "Member 'DragWidget_C_GetRotationOffset::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_Conv_IntToDouble_ReturnValue_3) == 0x0000E8, "Member 'DragWidget_C_GetRotationOffset::CallFunc_Conv_IntToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000F0, "Member 'DragWidget_C_GetRotationOffset::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0000F8, "Member 'DragWidget_C_GetRotationOffset::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_LessEqual_DoubleDouble_ReturnValue_5) == 0x000100, "Member 'DragWidget_C_GetRotationOffset::CallFunc_LessEqual_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000101, "Member 'DragWidget_C_GetRotationOffset::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_SelectFloat_ReturnValue_1) == 0x000108, "Member 'DragWidget_C_GetRotationOffset::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_BooleanAND_ReturnValue) == 0x000110, "Member 'DragWidget_C_GetRotationOffset::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_MakeVector2D_ReturnValue_1) == 0x000118, "Member 'DragWidget_C_GetRotationOffset::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, K2Node_MakeStruct_Margin) == 0x000128, "Member 'DragWidget_C_GetRotationOffset::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000138, "Member 'DragWidget_C_GetRotationOffset::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000140, "Member 'DragWidget_C_GetRotationOffset::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000148, "Member 'DragWidget_C_GetRotationOffset::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x000150, "Member 'DragWidget_C_GetRotationOffset::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_Multiply_DoubleDouble_ReturnValue_9) == 0x000158, "Member 'DragWidget_C_GetRotationOffset::CallFunc_Multiply_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000160, "Member 'DragWidget_C_GetRotationOffset::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000168, "Member 'DragWidget_C_GetRotationOffset::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000170, "Member 'DragWidget_C_GetRotationOffset::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000178, "Member 'DragWidget_C_GetRotationOffset::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_MakeVector2D_ReturnValue_2) == 0x000180, "Member 'DragWidget_C_GetRotationOffset::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000190, "Member 'DragWidget_C_GetRotationOffset::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_BreakVector2D_X_3) == 0x000198, "Member 'DragWidget_C_GetRotationOffset::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_BreakVector2D_Y_3) == 0x0001A0, "Member 'DragWidget_C_GetRotationOffset::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_BooleanAND_ReturnValue_1) == 0x0001A8, "Member 'DragWidget_C_GetRotationOffset::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_SelectFloat_ReturnValue_2) == 0x0001B0, "Member 'DragWidget_C_GetRotationOffset::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_NormalizeToRange_ReturnValue) == 0x0001B8, "Member 'DragWidget_C_GetRotationOffset::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_SelectFloat_ReturnValue_3) == 0x0001C0, "Member 'DragWidget_C_GetRotationOffset::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_NormalizeToRange_ReturnValue_1) == 0x0001C8, "Member 'DragWidget_C_GetRotationOffset::CallFunc_NormalizeToRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x0001D0, "Member 'DragWidget_C_GetRotationOffset::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x0001D1, "Member 'DragWidget_C_GetRotationOffset::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_EqualEqual_IntInt_ReturnValue_6) == 0x0001D2, "Member 'DragWidget_C_GetRotationOffset::CallFunc_EqualEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_BooleanAND_ReturnValue_2) == 0x0001D3, "Member 'DragWidget_C_GetRotationOffset::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_EqualEqual_IntInt_ReturnValue_7) == 0x0001D4, "Member 'DragWidget_C_GetRotationOffset::CallFunc_EqualEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_BooleanAND_ReturnValue_3) == 0x0001D5, "Member 'DragWidget_C_GetRotationOffset::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_BreakVector2D_X_4) == 0x0001D8, "Member 'DragWidget_C_GetRotationOffset::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_BreakVector2D_Y_4) == 0x0001E0, "Member 'DragWidget_C_GetRotationOffset::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_FTrunc_ReturnValue) == 0x0001E8, "Member 'DragWidget_C_GetRotationOffset::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_FTrunc_ReturnValue_1) == 0x0001EC, "Member 'DragWidget_C_GetRotationOffset::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x0001F0, "Member 'DragWidget_C_GetRotationOffset::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1) == 0x0001F8, "Member 'DragWidget_C_GetRotationOffset::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2) == 0x000200, "Member 'DragWidget_C_GetRotationOffset::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetRotationOffset, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_3) == 0x000208, "Member 'DragWidget_C_GetRotationOffset::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_3' has a wrong offset!");

// Function DragWidget.DragWidget_C.OnKeyDown
// 0x02C0 (0x02C0 - 0x0000)
struct DragWidget_C_OnKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0130(0x00B8)()
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x01E8(0x0018)(HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0200(0x00B8)()
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DragWidget_C_OnKeyDown) == 0x000008, "Wrong alignment on DragWidget_C_OnKeyDown");
static_assert(sizeof(DragWidget_C_OnKeyDown) == 0x0002C0, "Wrong size on DragWidget_C_OnKeyDown");
static_assert(offsetof(DragWidget_C_OnKeyDown, MyGeometry) == 0x000000, "Member 'DragWidget_C_OnKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(DragWidget_C_OnKeyDown, InKeyEvent) == 0x000038, "Member 'DragWidget_C_OnKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(DragWidget_C_OnKeyDown, ReturnValue) == 0x000078, "Member 'DragWidget_C_OnKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_OnKeyDown, CallFunc_Unhandled_ReturnValue) == 0x000130, "Member 'DragWidget_C_OnKeyDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_OnKeyDown, CallFunc_GetKey_ReturnValue) == 0x0001E8, "Member 'DragWidget_C_OnKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_OnKeyDown, CallFunc_Handled_ReturnValue) == 0x000200, "Member 'DragWidget_C_OnKeyDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x0002B8, "Member 'DragWidget_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");

// Function DragWidget.DragWidget_C.Tick
// 0x003C (0x003C - 0x0000)
struct DragWidget_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DragWidget_C_Tick) == 0x000004, "Wrong alignment on DragWidget_C_Tick");
static_assert(sizeof(DragWidget_C_Tick) == 0x00003C, "Wrong size on DragWidget_C_Tick");
static_assert(offsetof(DragWidget_C_Tick, MyGeometry) == 0x000000, "Member 'DragWidget_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(DragWidget_C_Tick, InDeltaTime) == 0x000038, "Member 'DragWidget_C_Tick::InDeltaTime' has a wrong offset!");

// Function DragWidget.DragWidget_C.GetMoveOffset
// 0x00F0 (0x00F0 - 0x0000)
struct DragWidget_C_GetMoveOffset final
{
public:
	struct FVector2D                              ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0010(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_LocalToViewport_PixelPosition;            // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_LocalToViewport_ViewportPosition;         // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetMousePositionOnViewport_ReturnValue;   // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue;        // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast; // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DragWidget_C_GetMoveOffset) == 0x000008, "Wrong alignment on DragWidget_C_GetMoveOffset");
static_assert(sizeof(DragWidget_C_GetMoveOffset) == 0x0000F0, "Wrong size on DragWidget_C_GetMoveOffset");
static_assert(offsetof(DragWidget_C_GetMoveOffset, ReturnValue) == 0x000000, "Member 'DragWidget_C_GetMoveOffset::ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetMoveOffset, CallFunc_GetCachedGeometry_ReturnValue) == 0x000010, "Member 'DragWidget_C_GetMoveOffset::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetMoveOffset, CallFunc_GetViewportScale_ReturnValue) == 0x000048, "Member 'DragWidget_C_GetMoveOffset::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetMoveOffset, CallFunc_LocalToViewport_PixelPosition) == 0x000050, "Member 'DragWidget_C_GetMoveOffset::CallFunc_LocalToViewport_PixelPosition' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetMoveOffset, CallFunc_LocalToViewport_ViewportPosition) == 0x000060, "Member 'DragWidget_C_GetMoveOffset::CallFunc_LocalToViewport_ViewportPosition' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetMoveOffset, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000070, "Member 'DragWidget_C_GetMoveOffset::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetMoveOffset, CallFunc_GetMousePositionOnViewport_ReturnValue) == 0x000088, "Member 'DragWidget_C_GetMoveOffset::CallFunc_GetMousePositionOnViewport_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetMoveOffset, CallFunc_Conv_Vector2DToVector_ReturnValue) == 0x000098, "Member 'DragWidget_C_GetMoveOffset::CallFunc_Conv_Vector2DToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetMoveOffset, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000B0, "Member 'DragWidget_C_GetMoveOffset::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetMoveOffset, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x0000C8, "Member 'DragWidget_C_GetMoveOffset::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetMoveOffset, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0000D8, "Member 'DragWidget_C_GetMoveOffset::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetMoveOffset, CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast) == 0x0000E8, "Member 'DragWidget_C_GetMoveOffset::CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast' has a wrong offset!");

// Function DragWidget.DragWidget_C.GetSlotBrushes
// 0x03C0 (0x03C0 - 0x0000)
struct DragWidget_C_GetSlotBrushes final
{
public:
	struct FSlateBrush                            BG_Brush;                                          // 0x0000(0x00D0)(Parm, OutParm)
	struct FSlateBrush                            Gradient_Brush;                                    // 0x00D0(0x00D0)(Parm, OutParm)
	struct FVector2D                              CurrentSlotSize;                                   // 0x01A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Hover_Sprite;                                      // 0x01B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                Highlight_Sprite;                                  // 0x01B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                Gradient_Sprite;                                   // 0x01C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                BG_Sprite;                                         // 0x01C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         Y;                                                 // 0x01D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         X;                                                 // 0x01D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x01F0(0x00D0)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x02C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x02C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x02C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x02C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x02C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x02C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_6;          // 0x02C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_7;          // 0x02CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x02CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_8;          // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_9;          // 0x02CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x02CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_10;         // 0x02CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_11;         // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D2[0xE];                                      // 0x02D2(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_1;                    // 0x02E0(0x00D0)()
	struct FDeprecateSlateVector2D                K2Node_MakeStruct_ImageSize_ImplicitCast;          // 0x03B0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FDeprecateSlateVector2D                K2Node_MakeStruct_ImageSize_ImplicitCast_1;        // 0x03B8(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DragWidget_C_GetSlotBrushes) == 0x000010, "Wrong alignment on DragWidget_C_GetSlotBrushes");
static_assert(sizeof(DragWidget_C_GetSlotBrushes) == 0x0003C0, "Wrong size on DragWidget_C_GetSlotBrushes");
static_assert(offsetof(DragWidget_C_GetSlotBrushes, BG_Brush) == 0x000000, "Member 'DragWidget_C_GetSlotBrushes::BG_Brush' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetSlotBrushes, Gradient_Brush) == 0x0000D0, "Member 'DragWidget_C_GetSlotBrushes::Gradient_Brush' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetSlotBrushes, CurrentSlotSize) == 0x0001A0, "Member 'DragWidget_C_GetSlotBrushes::CurrentSlotSize' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetSlotBrushes, Hover_Sprite) == 0x0001B0, "Member 'DragWidget_C_GetSlotBrushes::Hover_Sprite' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetSlotBrushes, Highlight_Sprite) == 0x0001B8, "Member 'DragWidget_C_GetSlotBrushes::Highlight_Sprite' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetSlotBrushes, Gradient_Sprite) == 0x0001C0, "Member 'DragWidget_C_GetSlotBrushes::Gradient_Sprite' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetSlotBrushes, BG_Sprite) == 0x0001C8, "Member 'DragWidget_C_GetSlotBrushes::BG_Sprite' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetSlotBrushes, Y) == 0x0001D0, "Member 'DragWidget_C_GetSlotBrushes::Y' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetSlotBrushes, X) == 0x0001D4, "Member 'DragWidget_C_GetSlotBrushes::X' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetSlotBrushes, CallFunc_BreakVector2D_X) == 0x0001D8, "Member 'DragWidget_C_GetSlotBrushes::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetSlotBrushes, CallFunc_BreakVector2D_Y) == 0x0001E0, "Member 'DragWidget_C_GetSlotBrushes::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetSlotBrushes, CallFunc_Round_ReturnValue) == 0x0001E8, "Member 'DragWidget_C_GetSlotBrushes::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetSlotBrushes, CallFunc_Round_ReturnValue_1) == 0x0001EC, "Member 'DragWidget_C_GetSlotBrushes::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetSlotBrushes, K2Node_MakeStruct_SlateBrush) == 0x0001F0, "Member 'DragWidget_C_GetSlotBrushes::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0002C0, "Member 'DragWidget_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0002C1, "Member 'DragWidget_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetSlotBrushes, CallFunc_BooleanAND_ReturnValue) == 0x0002C2, "Member 'DragWidget_C_GetSlotBrushes::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x0002C3, "Member 'DragWidget_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x0002C4, "Member 'DragWidget_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetSlotBrushes, CallFunc_BooleanAND_ReturnValue_1) == 0x0002C5, "Member 'DragWidget_C_GetSlotBrushes::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x0002C6, "Member 'DragWidget_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x0002C7, "Member 'DragWidget_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetSlotBrushes, CallFunc_BooleanAND_ReturnValue_2) == 0x0002C8, "Member 'DragWidget_C_GetSlotBrushes::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue_6) == 0x0002C9, "Member 'DragWidget_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue_7) == 0x0002CA, "Member 'DragWidget_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetSlotBrushes, CallFunc_BooleanAND_ReturnValue_3) == 0x0002CB, "Member 'DragWidget_C_GetSlotBrushes::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue_8) == 0x0002CC, "Member 'DragWidget_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue_9) == 0x0002CD, "Member 'DragWidget_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetSlotBrushes, CallFunc_BooleanAND_ReturnValue_4) == 0x0002CE, "Member 'DragWidget_C_GetSlotBrushes::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue_10) == 0x0002CF, "Member 'DragWidget_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue_11) == 0x0002D0, "Member 'DragWidget_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetSlotBrushes, CallFunc_BooleanAND_ReturnValue_5) == 0x0002D1, "Member 'DragWidget_C_GetSlotBrushes::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetSlotBrushes, K2Node_MakeStruct_SlateBrush_1) == 0x0002E0, "Member 'DragWidget_C_GetSlotBrushes::K2Node_MakeStruct_SlateBrush_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetSlotBrushes, K2Node_MakeStruct_ImageSize_ImplicitCast) == 0x0003B0, "Member 'DragWidget_C_GetSlotBrushes::K2Node_MakeStruct_ImageSize_ImplicitCast' has a wrong offset!");
static_assert(offsetof(DragWidget_C_GetSlotBrushes, K2Node_MakeStruct_ImageSize_ImplicitCast_1) == 0x0003B8, "Member 'DragWidget_C_GetSlotBrushes::K2Node_MakeStruct_ImageSize_ImplicitCast_1' has a wrong offset!");

}

