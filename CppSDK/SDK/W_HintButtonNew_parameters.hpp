#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_HintButtonNew

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "E_HintButtonType_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FMODStudio_structs.hpp"


namespace SDK::Params
{

// Function W_HintButtonNew.W_HintButtonNew_C.ExecuteUbergraph_W_HintButtonNew
// 0x01A0 (0x01A0 - 0x0000)
struct W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 K2Node_CustomEvent_Image_Fill;                     // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x001C(0x0014)()
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0xF];                                       // 0x0031(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_MakeBrushFromSprite_ReturnValue;          // 0x0040(0x00D0)()
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue;                  // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A[0x6];                                      // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_HintButtonType                              Temp_byte_Variable_8;                              // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         K2Node_Select_Default_3;                           // 0x0138(0x0058)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_192[0x2];                                      // 0x0192(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast; // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew) == 0x000010, "Wrong alignment on W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew");
static_assert(sizeof(W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew) == 0x0001A0, "Wrong size on W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew");
static_assert(offsetof(W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew, EntryPoint) == 0x000000, "Member 'W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew, Temp_byte_Variable) == 0x000004, "Member 'W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew, Temp_byte_Variable_1) == 0x000005, "Member 'W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew, Temp_bool_Variable) == 0x000006, "Member 'W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew, Temp_byte_Variable_2) == 0x000007, "Member 'W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew, Temp_byte_Variable_3) == 0x000008, "Member 'W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew, Temp_bool_Variable_1) == 0x000009, "Member 'W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew, Temp_byte_Variable_4) == 0x00000A, "Member 'W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew, Temp_byte_Variable_5) == 0x00000B, "Member 'W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew, Temp_bool_Variable_2) == 0x00000C, "Member 'W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew, Temp_byte_Variable_6) == 0x00000D, "Member 'W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew, Temp_byte_Variable_7) == 0x00000E, "Member 'W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew, K2Node_CustomEvent_Image_Fill) == 0x000010, "Member 'W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew::K2Node_CustomEvent_Image_Fill' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew, K2Node_Event_IsDesignTime) == 0x000018, "Member 'W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew, K2Node_MakeStruct_SlateColor) == 0x00001C, "Member 'W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew, K2Node_Select_Default) == 0x000030, "Member 'W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew, CallFunc_MakeBrushFromSprite_ReturnValue) == 0x000040, "Member 'W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew::CallFunc_MakeBrushFromSprite_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew, CallFunc_PlayEvent2D_ReturnValue) == 0x000110, "Member 'W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew::CallFunc_PlayEvent2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew, K2Node_Select_Default_1) == 0x000118, "Member 'W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew, K2Node_Select_Default_2) == 0x000119, "Member 'W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000120, "Member 'W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000128, "Member 'W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew, Temp_byte_Variable_8) == 0x000130, "Member 'W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew, K2Node_Select_Default_3) == 0x000138, "Member 'W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew, Temp_bool_Variable_3) == 0x000190, "Member 'W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew, K2Node_Select_Default_4) == 0x000191, "Member 'W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast) == 0x000194, "Member 'W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x000198, "Member 'W_HintButtonNew_C_ExecuteUbergraph_W_HintButtonNew::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");

// Function W_HintButtonNew.W_HintButtonNew_C.ImageFilled
// 0x0008 (0x0008 - 0x0000)
struct W_HintButtonNew_C_ImageFilled final
{
public:
	class UImage*                                 Image_Fill;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_HintButtonNew_C_ImageFilled) == 0x000008, "Wrong alignment on W_HintButtonNew_C_ImageFilled");
static_assert(sizeof(W_HintButtonNew_C_ImageFilled) == 0x000008, "Wrong size on W_HintButtonNew_C_ImageFilled");
static_assert(offsetof(W_HintButtonNew_C_ImageFilled, Image_Fill) == 0x000000, "Member 'W_HintButtonNew_C_ImageFilled::Image_Fill' has a wrong offset!");

// Function W_HintButtonNew.W_HintButtonNew_C.OnFocus
// 0x0010 (0x0010 - 0x0000)
struct W_HintButtonNew_C_OnFocus final
{
public:
	bool                                          NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_HintButtonNew_C_OnFocus) == 0x000008, "Wrong alignment on W_HintButtonNew_C_OnFocus");
static_assert(sizeof(W_HintButtonNew_C_OnFocus) == 0x000010, "Wrong size on W_HintButtonNew_C_OnFocus");
static_assert(offsetof(W_HintButtonNew_C_OnFocus, NewState) == 0x000000, "Member 'W_HintButtonNew_C_OnFocus::NewState' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_OnFocus, Temp_bool_Variable) == 0x000001, "Member 'W_HintButtonNew_C_OnFocus::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_OnFocus, Temp_byte_Variable) == 0x000002, "Member 'W_HintButtonNew_C_OnFocus::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_OnFocus, Temp_byte_Variable_1) == 0x000003, "Member 'W_HintButtonNew_C_OnFocus::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_OnFocus, K2Node_Select_Default) == 0x000004, "Member 'W_HintButtonNew_C_OnFocus::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_OnFocus, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'W_HintButtonNew_C_OnFocus::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function W_HintButtonNew.W_HintButtonNew_C.OnPlayAnimation
// 0x0018 (0x0018 - 0x0000)
struct W_HintButtonNew_C_OnPlayAnimation final
{
public:
	class UWidgetAnimation*                       Animation;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          NewState;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_HintButtonNew_C_OnPlayAnimation) == 0x000008, "Wrong alignment on W_HintButtonNew_C_OnPlayAnimation");
static_assert(sizeof(W_HintButtonNew_C_OnPlayAnimation) == 0x000018, "Wrong size on W_HintButtonNew_C_OnPlayAnimation");
static_assert(offsetof(W_HintButtonNew_C_OnPlayAnimation, Animation) == 0x000000, "Member 'W_HintButtonNew_C_OnPlayAnimation::Animation' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_OnPlayAnimation, NewState) == 0x000008, "Member 'W_HintButtonNew_C_OnPlayAnimation::NewState' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_OnPlayAnimation, Temp_bool_Variable) == 0x000009, "Member 'W_HintButtonNew_C_OnPlayAnimation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_OnPlayAnimation, Temp_byte_Variable) == 0x00000A, "Member 'W_HintButtonNew_C_OnPlayAnimation::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_OnPlayAnimation, Temp_byte_Variable_1) == 0x00000B, "Member 'W_HintButtonNew_C_OnPlayAnimation::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_OnPlayAnimation, K2Node_Select_Default) == 0x00000C, "Member 'W_HintButtonNew_C_OnPlayAnimation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_OnPlayAnimation, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'W_HintButtonNew_C_OnPlayAnimation::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function W_HintButtonNew.W_HintButtonNew_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_HintButtonNew_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_HintButtonNew_C_PreConstruct) == 0x000001, "Wrong alignment on W_HintButtonNew_C_PreConstruct");
static_assert(sizeof(W_HintButtonNew_C_PreConstruct) == 0x000001, "Wrong size on W_HintButtonNew_C_PreConstruct");
static_assert(offsetof(W_HintButtonNew_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_HintButtonNew_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_HintButtonNew.W_HintButtonNew_C.PressedButtonAnimation
// 0x0008 (0x0008 - 0x0000)
struct W_HintButtonNew_C_PressedButtonAnimation final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_HintButtonNew_C_PressedButtonAnimation) == 0x000008, "Wrong alignment on W_HintButtonNew_C_PressedButtonAnimation");
static_assert(sizeof(W_HintButtonNew_C_PressedButtonAnimation) == 0x000008, "Wrong size on W_HintButtonNew_C_PressedButtonAnimation");
static_assert(offsetof(W_HintButtonNew_C_PressedButtonAnimation, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'W_HintButtonNew_C_PressedButtonAnimation::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function W_HintButtonNew.W_HintButtonNew_C.SetBackgroundColorAndOpacity
// 0x0030 (0x0030 - 0x0000)
struct W_HintButtonNew_C_SetBackgroundColorAndOpacity final
{
public:
	struct FLinearColor                           InColorAndOpacity;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_HintButtonNew_C_SetBackgroundColorAndOpacity) == 0x000004, "Wrong alignment on W_HintButtonNew_C_SetBackgroundColorAndOpacity");
static_assert(sizeof(W_HintButtonNew_C_SetBackgroundColorAndOpacity) == 0x000030, "Wrong size on W_HintButtonNew_C_SetBackgroundColorAndOpacity");
static_assert(offsetof(W_HintButtonNew_C_SetBackgroundColorAndOpacity, InColorAndOpacity) == 0x000000, "Member 'W_HintButtonNew_C_SetBackgroundColorAndOpacity::InColorAndOpacity' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_SetBackgroundColorAndOpacity, CallFunc_BreakColor_R) == 0x000010, "Member 'W_HintButtonNew_C_SetBackgroundColorAndOpacity::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_SetBackgroundColorAndOpacity, CallFunc_BreakColor_G) == 0x000014, "Member 'W_HintButtonNew_C_SetBackgroundColorAndOpacity::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_SetBackgroundColorAndOpacity, CallFunc_BreakColor_B) == 0x000018, "Member 'W_HintButtonNew_C_SetBackgroundColorAndOpacity::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_SetBackgroundColorAndOpacity, CallFunc_BreakColor_A) == 0x00001C, "Member 'W_HintButtonNew_C_SetBackgroundColorAndOpacity::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_SetBackgroundColorAndOpacity, K2Node_MakeStruct_LinearColor) == 0x000020, "Member 'W_HintButtonNew_C_SetBackgroundColorAndOpacity::K2Node_MakeStruct_LinearColor' has a wrong offset!");

// Function W_HintButtonNew.W_HintButtonNew_C.SetButtonEnabled
// 0x0038 (0x0038 - 0x0000)
struct W_HintButtonNew_C_SetButtonEnabled final
{
public:
	bool                                          InIsEnabled;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0014(0x0014)()
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_HintButtonNew_C_SetButtonEnabled) == 0x000004, "Wrong alignment on W_HintButtonNew_C_SetButtonEnabled");
static_assert(sizeof(W_HintButtonNew_C_SetButtonEnabled) == 0x000038, "Wrong size on W_HintButtonNew_C_SetButtonEnabled");
static_assert(offsetof(W_HintButtonNew_C_SetButtonEnabled, InIsEnabled) == 0x000000, "Member 'W_HintButtonNew_C_SetButtonEnabled::InIsEnabled' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_SetButtonEnabled, Temp_bool_Variable) == 0x000001, "Member 'W_HintButtonNew_C_SetButtonEnabled::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_SetButtonEnabled, K2Node_Select_Default) == 0x000004, "Member 'W_HintButtonNew_C_SetButtonEnabled::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_SetButtonEnabled, K2Node_MakeStruct_SlateColor) == 0x000014, "Member 'W_HintButtonNew_C_SetButtonEnabled::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_SetButtonEnabled, CallFunc_SelectColor_ReturnValue) == 0x000028, "Member 'W_HintButtonNew_C_SetButtonEnabled::CallFunc_SelectColor_ReturnValue' has a wrong offset!");

// Function W_HintButtonNew.W_HintButtonNew_C.SetButtonTextColorAndOpacity
// 0x0044 (0x0044 - 0x0000)
struct W_HintButtonNew_C_SetButtonTextColorAndOpacity final
{
public:
	struct FLinearColor                           InColorAndOpacity;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0010(0x0014)()
	float                                         CallFunc_BreakColor_R;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_HintButtonNew_C_SetButtonTextColorAndOpacity) == 0x000004, "Wrong alignment on W_HintButtonNew_C_SetButtonTextColorAndOpacity");
static_assert(sizeof(W_HintButtonNew_C_SetButtonTextColorAndOpacity) == 0x000044, "Wrong size on W_HintButtonNew_C_SetButtonTextColorAndOpacity");
static_assert(offsetof(W_HintButtonNew_C_SetButtonTextColorAndOpacity, InColorAndOpacity) == 0x000000, "Member 'W_HintButtonNew_C_SetButtonTextColorAndOpacity::InColorAndOpacity' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_SetButtonTextColorAndOpacity, K2Node_MakeStruct_SlateColor) == 0x000010, "Member 'W_HintButtonNew_C_SetButtonTextColorAndOpacity::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_SetButtonTextColorAndOpacity, CallFunc_BreakColor_R) == 0x000024, "Member 'W_HintButtonNew_C_SetButtonTextColorAndOpacity::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_SetButtonTextColorAndOpacity, CallFunc_BreakColor_G) == 0x000028, "Member 'W_HintButtonNew_C_SetButtonTextColorAndOpacity::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_SetButtonTextColorAndOpacity, CallFunc_BreakColor_B) == 0x00002C, "Member 'W_HintButtonNew_C_SetButtonTextColorAndOpacity::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_SetButtonTextColorAndOpacity, CallFunc_BreakColor_A) == 0x000030, "Member 'W_HintButtonNew_C_SetButtonTextColorAndOpacity::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_SetButtonTextColorAndOpacity, K2Node_MakeStruct_LinearColor) == 0x000034, "Member 'W_HintButtonNew_C_SetButtonTextColorAndOpacity::K2Node_MakeStruct_LinearColor' has a wrong offset!");

// Function W_HintButtonNew.W_HintButtonNew_C.SetText
// 0x0018 (0x0018 - 0x0000)
struct W_HintButtonNew_C_SetText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_HintButtonNew_C_SetText) == 0x000008, "Wrong alignment on W_HintButtonNew_C_SetText");
static_assert(sizeof(W_HintButtonNew_C_SetText) == 0x000018, "Wrong size on W_HintButtonNew_C_SetText");
static_assert(offsetof(W_HintButtonNew_C_SetText, Text) == 0x000000, "Member 'W_HintButtonNew_C_SetText::Text' has a wrong offset!");

// Function W_HintButtonNew.W_HintButtonNew_C.SetTextHidden
// 0x0005 (0x0005 - 0x0000)
struct W_HintButtonNew_C_SetTextHidden final
{
public:
	bool                                          bInIsHidden;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_HintButtonNew_C_SetTextHidden) == 0x000001, "Wrong alignment on W_HintButtonNew_C_SetTextHidden");
static_assert(sizeof(W_HintButtonNew_C_SetTextHidden) == 0x000005, "Wrong size on W_HintButtonNew_C_SetTextHidden");
static_assert(offsetof(W_HintButtonNew_C_SetTextHidden, bInIsHidden) == 0x000000, "Member 'W_HintButtonNew_C_SetTextHidden::bInIsHidden' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_SetTextHidden, Temp_bool_Variable) == 0x000001, "Member 'W_HintButtonNew_C_SetTextHidden::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_SetTextHidden, Temp_byte_Variable) == 0x000002, "Member 'W_HintButtonNew_C_SetTextHidden::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_SetTextHidden, Temp_byte_Variable_1) == 0x000003, "Member 'W_HintButtonNew_C_SetTextHidden::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_HintButtonNew_C_SetTextHidden, K2Node_Select_Default) == 0x000004, "Member 'W_HintButtonNew_C_SetTextHidden::K2Node_Select_Default' has a wrong offset!");

// Function W_HintButtonNew.W_HintButtonNew_C.Unhovered
// 0x0008 (0x0008 - 0x0000)
struct W_HintButtonNew_C_Unhovered final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_HintButtonNew_C_Unhovered) == 0x000008, "Wrong alignment on W_HintButtonNew_C_Unhovered");
static_assert(sizeof(W_HintButtonNew_C_Unhovered) == 0x000008, "Wrong size on W_HintButtonNew_C_Unhovered");
static_assert(offsetof(W_HintButtonNew_C_Unhovered, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'W_HintButtonNew_C_Unhovered::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

}

