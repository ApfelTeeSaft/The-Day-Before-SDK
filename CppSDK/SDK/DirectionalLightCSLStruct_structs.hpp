#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DirectionalLightCSLStruct

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// UserDefinedStruct DirectionalLightCSLStruct.DirectionalLightCSLStruct
// 0x0038 (0x0038 - 0x0000)
struct FDirectionalLightCSLStruct final
{
public:
	double                                        OcclusionMaskDarkness_11_DC7A5DC84C698DB30AA39686314DD428; // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OcclusionDepthRange_13_DFB079C94D31F00E43C72BB0EA3A92B5; // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BloomScale_15_9CE6E0A2402B6EB08788F2B3624BAB0A;    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BloomTreshold_17_C4DDCA3F4E2E9FADE9E924BE43081721; // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BloomMaxBrightness_19_0034CF9C4709EDCB31894EAADDC573C9; // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 BloomTint_24_440C7E9E47759C4BCEFDDFB76D416C12;     // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        VolumetricScatteringIntensity_27_5D76F8004A67CC4A15E0B4BC382EAE14; // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FDirectionalLightCSLStruct) == 0x000008, "Wrong alignment on FDirectionalLightCSLStruct");
static_assert(sizeof(FDirectionalLightCSLStruct) == 0x000038, "Wrong size on FDirectionalLightCSLStruct");
static_assert(offsetof(FDirectionalLightCSLStruct, OcclusionMaskDarkness_11_DC7A5DC84C698DB30AA39686314DD428) == 0x000000, "Member 'FDirectionalLightCSLStruct::OcclusionMaskDarkness_11_DC7A5DC84C698DB30AA39686314DD428' has a wrong offset!");
static_assert(offsetof(FDirectionalLightCSLStruct, OcclusionDepthRange_13_DFB079C94D31F00E43C72BB0EA3A92B5) == 0x000008, "Member 'FDirectionalLightCSLStruct::OcclusionDepthRange_13_DFB079C94D31F00E43C72BB0EA3A92B5' has a wrong offset!");
static_assert(offsetof(FDirectionalLightCSLStruct, BloomScale_15_9CE6E0A2402B6EB08788F2B3624BAB0A) == 0x000010, "Member 'FDirectionalLightCSLStruct::BloomScale_15_9CE6E0A2402B6EB08788F2B3624BAB0A' has a wrong offset!");
static_assert(offsetof(FDirectionalLightCSLStruct, BloomTreshold_17_C4DDCA3F4E2E9FADE9E924BE43081721) == 0x000018, "Member 'FDirectionalLightCSLStruct::BloomTreshold_17_C4DDCA3F4E2E9FADE9E924BE43081721' has a wrong offset!");
static_assert(offsetof(FDirectionalLightCSLStruct, BloomMaxBrightness_19_0034CF9C4709EDCB31894EAADDC573C9) == 0x000020, "Member 'FDirectionalLightCSLStruct::BloomMaxBrightness_19_0034CF9C4709EDCB31894EAADDC573C9' has a wrong offset!");
static_assert(offsetof(FDirectionalLightCSLStruct, BloomTint_24_440C7E9E47759C4BCEFDDFB76D416C12) == 0x000028, "Member 'FDirectionalLightCSLStruct::BloomTint_24_440C7E9E47759C4BCEFDDFB76D416C12' has a wrong offset!");
static_assert(offsetof(FDirectionalLightCSLStruct, VolumetricScatteringIntensity_27_5D76F8004A67CC4A15E0B4BC382EAE14) == 0x000030, "Member 'FDirectionalLightCSLStruct::VolumetricScatteringIntensity_27_5D76F8004A67CC4A15E0B4BC382EAE14' has a wrong offset!");

}

