#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GPSJournal_Entry

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "FMODStudio_structs.hpp"
#include "NPC_Structure_structs.hpp"
#include "F_DialogueNodeInfo_structs.hpp"


namespace SDK::Params
{

// Function WBP_GPSJournal_Entry.WBP_GPSJournal_Entry_C.ExecuteUbergraph_WBP_GPSJournal_Entry
// 0x0030 (0x0030 - 0x0000)
struct WBP_GPSJournal_Entry_C_ExecuteUbergraph_WBP_GPSJournal_Entry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue_1;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_GPSJournal_Entry_C_ExecuteUbergraph_WBP_GPSJournal_Entry) == 0x000008, "Wrong alignment on WBP_GPSJournal_Entry_C_ExecuteUbergraph_WBP_GPSJournal_Entry");
static_assert(sizeof(WBP_GPSJournal_Entry_C_ExecuteUbergraph_WBP_GPSJournal_Entry) == 0x000030, "Wrong size on WBP_GPSJournal_Entry_C_ExecuteUbergraph_WBP_GPSJournal_Entry");
static_assert(offsetof(WBP_GPSJournal_Entry_C_ExecuteUbergraph_WBP_GPSJournal_Entry, EntryPoint) == 0x000000, "Member 'WBP_GPSJournal_Entry_C_ExecuteUbergraph_WBP_GPSJournal_Entry::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_ExecuteUbergraph_WBP_GPSJournal_Entry, CallFunc_PlayEvent2D_ReturnValue) == 0x000008, "Member 'WBP_GPSJournal_Entry_C_ExecuteUbergraph_WBP_GPSJournal_Entry::CallFunc_PlayEvent2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_ExecuteUbergraph_WBP_GPSJournal_Entry, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'WBP_GPSJournal_Entry_C_ExecuteUbergraph_WBP_GPSJournal_Entry::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_ExecuteUbergraph_WBP_GPSJournal_Entry, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'WBP_GPSJournal_Entry_C_ExecuteUbergraph_WBP_GPSJournal_Entry::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_ExecuteUbergraph_WBP_GPSJournal_Entry, CallFunc_PlayEvent2D_ReturnValue_1) == 0x000028, "Member 'WBP_GPSJournal_Entry_C_ExecuteUbergraph_WBP_GPSJournal_Entry::CallFunc_PlayEvent2D_ReturnValue_1' has a wrong offset!");

// Function WBP_GPSJournal_Entry.WBP_GPSJournal_Entry_C.Init
// 0x0460 (0x0460 - 0x0000)
struct WBP_GPSJournal_Entry_C_Init final
{
public:
	class FText                                   NewLocalVar;                                       // 0x0000(0x0018)(Edit, BlueprintVisible)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            Brush;                                             // 0x0020(0x00D0)(Edit, BlueprintVisible)
	class FString                                 Temp_string_Variable;                              // 0x00F0(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UQuestData_C*                     K2Node_DynamicCast_AsQuest_Data;                   // 0x0108(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value;                           // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FNPC_Structure                         CallFunc_GetDataTableRowFromName_OutRow;           // 0x0120(0x0110)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0238(0x0018)()
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FF_DialogueNodeInfo                    CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0258(0x0108)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperSprite*                           K2Node_DynamicCast_AsPaper_Sprite;                 // 0x0368(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371[0x3];                                      // 0x0371(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x037C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37D[0x3];                                      // 0x037D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_384[0x4];                                      // 0x0384(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0388(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C[0x4];                                      // 0x039C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x03B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C4[0x4];                                      // 0x03C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x03C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x03D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x03E8(0x0058)(HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0440(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0450(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GPSJournal_Entry_C_Init) == 0x000010, "Wrong alignment on WBP_GPSJournal_Entry_C_Init");
static_assert(sizeof(WBP_GPSJournal_Entry_C_Init) == 0x000460, "Wrong size on WBP_GPSJournal_Entry_C_Init");
static_assert(offsetof(WBP_GPSJournal_Entry_C_Init, NewLocalVar) == 0x000000, "Member 'WBP_GPSJournal_Entry_C_Init::NewLocalVar' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_Init, Brush) == 0x000020, "Member 'WBP_GPSJournal_Entry_C_Init::Brush' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_Init, Temp_string_Variable) == 0x0000F0, "Member 'WBP_GPSJournal_Entry_C_Init::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_Init, CallFunc_IsValid_ReturnValue) == 0x000100, "Member 'WBP_GPSJournal_Entry_C_Init::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_Init, K2Node_DynamicCast_AsQuest_Data) == 0x000108, "Member 'WBP_GPSJournal_Entry_C_Init::K2Node_DynamicCast_AsQuest_Data' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_Init, K2Node_DynamicCast_bSuccess) == 0x000110, "Member 'WBP_GPSJournal_Entry_C_Init::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_Init, CallFunc_Map_Find_Value) == 0x000114, "Member 'WBP_GPSJournal_Entry_C_Init::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_Init, CallFunc_Map_Find_ReturnValue) == 0x000118, "Member 'WBP_GPSJournal_Entry_C_Init::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_Init, CallFunc_SelectInt_ReturnValue) == 0x00011C, "Member 'WBP_GPSJournal_Entry_C_Init::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_Init, CallFunc_GetDataTableRowFromName_OutRow) == 0x000120, "Member 'WBP_GPSJournal_Entry_C_Init::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_Init, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000230, "Member 'WBP_GPSJournal_Entry_C_Init::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_Init, CallFunc_Conv_IntToText_ReturnValue) == 0x000238, "Member 'WBP_GPSJournal_Entry_C_Init::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_Init, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000250, "Member 'WBP_GPSJournal_Entry_C_Init::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_Init, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000258, "Member 'WBP_GPSJournal_Entry_C_Init::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_Init, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000360, "Member 'WBP_GPSJournal_Entry_C_Init::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_Init, K2Node_DynamicCast_AsPaper_Sprite) == 0x000368, "Member 'WBP_GPSJournal_Entry_C_Init::K2Node_DynamicCast_AsPaper_Sprite' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_Init, K2Node_DynamicCast_bSuccess_1) == 0x000370, "Member 'WBP_GPSJournal_Entry_C_Init::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_Init, CallFunc_Array_Length_ReturnValue) == 0x000374, "Member 'WBP_GPSJournal_Entry_C_Init::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_Init, CallFunc_Subtract_IntInt_ReturnValue) == 0x000378, "Member 'WBP_GPSJournal_Entry_C_Init::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_Init, CallFunc_Greater_IntInt_ReturnValue) == 0x00037C, "Member 'WBP_GPSJournal_Entry_C_Init::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_Init, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000380, "Member 'WBP_GPSJournal_Entry_C_Init::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_Init, CallFunc_Conv_TextToString_ReturnValue) == 0x000388, "Member 'WBP_GPSJournal_Entry_C_Init::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_Init, CallFunc_Len_ReturnValue) == 0x000398, "Member 'WBP_GPSJournal_Entry_C_Init::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_Init, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0003A0, "Member 'WBP_GPSJournal_Entry_C_Init::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_Init, CallFunc_MapRangeClamped_ReturnValue) == 0x0003A8, "Member 'WBP_GPSJournal_Entry_C_Init::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_Init, CallFunc_Conv_DoubleToString_ReturnValue) == 0x0003B0, "Member 'WBP_GPSJournal_Entry_C_Init::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_Init, CallFunc_Round_ReturnValue) == 0x0003C0, "Member 'WBP_GPSJournal_Entry_C_Init::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_Init, CallFunc_Concat_StrStr_ReturnValue) == 0x0003C8, "Member 'WBP_GPSJournal_Entry_C_Init::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_Init, CallFunc_Conv_IntToString_ReturnValue) == 0x0003D8, "Member 'WBP_GPSJournal_Entry_C_Init::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_Init, K2Node_MakeStruct_SlateFontInfo) == 0x0003E8, "Member 'WBP_GPSJournal_Entry_C_Init::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_Init, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000440, "Member 'WBP_GPSJournal_Entry_C_Init::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_Init, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000450, "Member 'WBP_GPSJournal_Entry_C_Init::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function WBP_GPSJournal_Entry.WBP_GPSJournal_Entry_C.Int to Time String
// 0x0050 (0x0050 - 0x0000)
struct WBP_GPSJournal_Entry_C_Int_to_Time_String final
{
public:
	int32                                         Num;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Value;                                             // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GPSJournal_Entry_C_Int_to_Time_String) == 0x000008, "Wrong alignment on WBP_GPSJournal_Entry_C_Int_to_Time_String");
static_assert(sizeof(WBP_GPSJournal_Entry_C_Int_to_Time_String) == 0x000050, "Wrong size on WBP_GPSJournal_Entry_C_Int_to_Time_String");
static_assert(offsetof(WBP_GPSJournal_Entry_C_Int_to_Time_String, Num) == 0x000000, "Member 'WBP_GPSJournal_Entry_C_Int_to_Time_String::Num' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_Int_to_Time_String, Value) == 0x000008, "Member 'WBP_GPSJournal_Entry_C_Int_to_Time_String::Value' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_Int_to_Time_String, Temp_bool_Variable) == 0x000018, "Member 'WBP_GPSJournal_Entry_C_Int_to_Time_String::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_Int_to_Time_String, CallFunc_Less_IntInt_ReturnValue) == 0x000019, "Member 'WBP_GPSJournal_Entry_C_Int_to_Time_String::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_Int_to_Time_String, CallFunc_Conv_IntToString_ReturnValue) == 0x000020, "Member 'WBP_GPSJournal_Entry_C_Int_to_Time_String::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_Int_to_Time_String, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'WBP_GPSJournal_Entry_C_Int_to_Time_String::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_Int_to_Time_String, K2Node_Select_Default) == 0x000040, "Member 'WBP_GPSJournal_Entry_C_Int_to_Time_String::K2Node_Select_Default' has a wrong offset!");

// Function WBP_GPSJournal_Entry.WBP_GPSJournal_Entry_C.OnDetailsClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_GPSJournal_Entry_C_OnDetailsClicked__DelegateSignature final
{
public:
	class UQuest*                                 Param_Quest;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GPSJournal_Entry_C_OnDetailsClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_GPSJournal_Entry_C_OnDetailsClicked__DelegateSignature");
static_assert(sizeof(WBP_GPSJournal_Entry_C_OnDetailsClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_GPSJournal_Entry_C_OnDetailsClicked__DelegateSignature");
static_assert(offsetof(WBP_GPSJournal_Entry_C_OnDetailsClicked__DelegateSignature, Param_Quest) == 0x000000, "Member 'WBP_GPSJournal_Entry_C_OnDetailsClicked__DelegateSignature::Param_Quest' has a wrong offset!");

// Function WBP_GPSJournal_Entry.WBP_GPSJournal_Entry_C.UpdateTime
// 0x01B8 (0x01B8 - 0x0000)
struct WBP_GPSJournal_Entry_C_UpdateTime final
{
public:
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_FromSeconds_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Days;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Hours;                      // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Minutes;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Seconds;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Milliseconds;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Int_to_Time_String_Value;                 // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Int_to_Time_String_Value_1;               // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0048(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0060(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0078(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00C8(0x0050)(HasGetValueTypeHash)
	class FString                                 CallFunc_Int_to_Time_String_Value_2;               // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0128(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0140(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0190(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01A0(0x0018)()
};
static_assert(alignof(WBP_GPSJournal_Entry_C_UpdateTime) == 0x000008, "Wrong alignment on WBP_GPSJournal_Entry_C_UpdateTime");
static_assert(sizeof(WBP_GPSJournal_Entry_C_UpdateTime) == 0x0001B8, "Wrong size on WBP_GPSJournal_Entry_C_UpdateTime");
static_assert(offsetof(WBP_GPSJournal_Entry_C_UpdateTime, CallFunc_IsVisible_ReturnValue) == 0x000000, "Member 'WBP_GPSJournal_Entry_C_UpdateTime::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_UpdateTime, CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue) == 0x000004, "Member 'WBP_GPSJournal_Entry_C_UpdateTime::CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_UpdateTime, CallFunc_FromSeconds_ReturnValue) == 0x000008, "Member 'WBP_GPSJournal_Entry_C_UpdateTime::CallFunc_FromSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_UpdateTime, CallFunc_BreakTimespan_Days) == 0x000010, "Member 'WBP_GPSJournal_Entry_C_UpdateTime::CallFunc_BreakTimespan_Days' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_UpdateTime, CallFunc_BreakTimespan_Hours) == 0x000014, "Member 'WBP_GPSJournal_Entry_C_UpdateTime::CallFunc_BreakTimespan_Hours' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_UpdateTime, CallFunc_BreakTimespan_Minutes) == 0x000018, "Member 'WBP_GPSJournal_Entry_C_UpdateTime::CallFunc_BreakTimespan_Minutes' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_UpdateTime, CallFunc_BreakTimespan_Seconds) == 0x00001C, "Member 'WBP_GPSJournal_Entry_C_UpdateTime::CallFunc_BreakTimespan_Seconds' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_UpdateTime, CallFunc_BreakTimespan_Milliseconds) == 0x000020, "Member 'WBP_GPSJournal_Entry_C_UpdateTime::CallFunc_BreakTimespan_Milliseconds' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_UpdateTime, CallFunc_Int_to_Time_String_Value) == 0x000028, "Member 'WBP_GPSJournal_Entry_C_UpdateTime::CallFunc_Int_to_Time_String_Value' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_UpdateTime, CallFunc_Int_to_Time_String_Value_1) == 0x000038, "Member 'WBP_GPSJournal_Entry_C_UpdateTime::CallFunc_Int_to_Time_String_Value_1' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_UpdateTime, CallFunc_Conv_StringToText_ReturnValue) == 0x000048, "Member 'WBP_GPSJournal_Entry_C_UpdateTime::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_UpdateTime, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000060, "Member 'WBP_GPSJournal_Entry_C_UpdateTime::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_UpdateTime, K2Node_MakeStruct_FormatArgumentData) == 0x000078, "Member 'WBP_GPSJournal_Entry_C_UpdateTime::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_UpdateTime, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000C8, "Member 'WBP_GPSJournal_Entry_C_UpdateTime::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_UpdateTime, CallFunc_Int_to_Time_String_Value_2) == 0x000118, "Member 'WBP_GPSJournal_Entry_C_UpdateTime::CallFunc_Int_to_Time_String_Value_2' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_UpdateTime, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000128, "Member 'WBP_GPSJournal_Entry_C_UpdateTime::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_UpdateTime, K2Node_MakeStruct_FormatArgumentData_2) == 0x000140, "Member 'WBP_GPSJournal_Entry_C_UpdateTime::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_UpdateTime, K2Node_MakeArray_Array) == 0x000190, "Member 'WBP_GPSJournal_Entry_C_UpdateTime::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_Entry_C_UpdateTime, CallFunc_Format_ReturnValue) == 0x0001A0, "Member 'WBP_GPSJournal_Entry_C_UpdateTime::CallFunc_Format_ReturnValue' has a wrong offset!");

}

