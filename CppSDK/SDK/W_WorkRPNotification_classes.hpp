#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_WorkRPNotification

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_WorkRPNotification.W_WorkRPNotification_C
// 0x0140 (0x03C0 - 0x0280)
class UW_WorkRPNotification_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             Text_Current;                                      // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_WorkDescription;                              // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_WorkDescription_1;                            // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_WorkName;                                     // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_WorkName_1;                                   // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           Timecode;                                          // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_WorkRPNotification;                 // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      Owning_SurvivalPlayer;                             // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class APS_TDB_C*                              New_PS_TDB;                                        // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FTimerHandle                           TimerCode;                                         // 0x02D0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Percent;                                           // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TotalTime;                                         // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FText                                   WorkRPName;                                        // 0x02E8(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FText                                   WorkRPDescription;                                 // 0x0300(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FText                                   WorkRPDescription_2;                               // 0x0318(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   WorkRPDescription_3;                               // 0x0330(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   WorkRPDescription_Time;                            // 0x0348(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   WorkRP_Count_current;                              // 0x0360(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FText                                   WorkRP_Count_total;                                // 0x0378(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	int32                                         WidgetSwitcherIndex;                               // 0x0390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_394[0x4];                                      // 0x0394(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           TimerNumber;                                       // 0x0398(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        PercentN;                                          // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Var;                                               // 0x03A8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void Construct();
	void ExecuteUbergraph_W_WorkRPNotification(int32 EntryPoint);
	void InitTimeCode();
	void InitTimeNumber_();
	void PreConstruct(bool IsDesignTime);
	void RemoveRPNotify();
	void SetCurrentProgress(const class FText& Current);
	void StartTimer();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_WorkRPNotification_C">();
	}
	static class UW_WorkRPNotification_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_WorkRPNotification_C>();
	}
};
static_assert(alignof(UW_WorkRPNotification_C) == 0x000008, "Wrong alignment on UW_WorkRPNotification_C");
static_assert(sizeof(UW_WorkRPNotification_C) == 0x0003C0, "Wrong size on UW_WorkRPNotification_C");
static_assert(offsetof(UW_WorkRPNotification_C, UberGraphFrame) == 0x000280, "Member 'UW_WorkRPNotification_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_WorkRPNotification_C, Text_Current) == 0x000288, "Member 'UW_WorkRPNotification_C::Text_Current' has a wrong offset!");
static_assert(offsetof(UW_WorkRPNotification_C, Text_WorkDescription) == 0x000290, "Member 'UW_WorkRPNotification_C::Text_WorkDescription' has a wrong offset!");
static_assert(offsetof(UW_WorkRPNotification_C, Text_WorkDescription_1) == 0x000298, "Member 'UW_WorkRPNotification_C::Text_WorkDescription_1' has a wrong offset!");
static_assert(offsetof(UW_WorkRPNotification_C, Text_WorkName) == 0x0002A0, "Member 'UW_WorkRPNotification_C::Text_WorkName' has a wrong offset!");
static_assert(offsetof(UW_WorkRPNotification_C, Text_WorkName_1) == 0x0002A8, "Member 'UW_WorkRPNotification_C::Text_WorkName_1' has a wrong offset!");
static_assert(offsetof(UW_WorkRPNotification_C, Timecode) == 0x0002B0, "Member 'UW_WorkRPNotification_C::Timecode' has a wrong offset!");
static_assert(offsetof(UW_WorkRPNotification_C, WidgetSwitcher_WorkRPNotification) == 0x0002B8, "Member 'UW_WorkRPNotification_C::WidgetSwitcher_WorkRPNotification' has a wrong offset!");
static_assert(offsetof(UW_WorkRPNotification_C, Owning_SurvivalPlayer) == 0x0002C0, "Member 'UW_WorkRPNotification_C::Owning_SurvivalPlayer' has a wrong offset!");
static_assert(offsetof(UW_WorkRPNotification_C, New_PS_TDB) == 0x0002C8, "Member 'UW_WorkRPNotification_C::New_PS_TDB' has a wrong offset!");
static_assert(offsetof(UW_WorkRPNotification_C, TimerCode) == 0x0002D0, "Member 'UW_WorkRPNotification_C::TimerCode' has a wrong offset!");
static_assert(offsetof(UW_WorkRPNotification_C, Percent) == 0x0002D8, "Member 'UW_WorkRPNotification_C::Percent' has a wrong offset!");
static_assert(offsetof(UW_WorkRPNotification_C, TotalTime) == 0x0002E0, "Member 'UW_WorkRPNotification_C::TotalTime' has a wrong offset!");
static_assert(offsetof(UW_WorkRPNotification_C, WorkRPName) == 0x0002E8, "Member 'UW_WorkRPNotification_C::WorkRPName' has a wrong offset!");
static_assert(offsetof(UW_WorkRPNotification_C, WorkRPDescription) == 0x000300, "Member 'UW_WorkRPNotification_C::WorkRPDescription' has a wrong offset!");
static_assert(offsetof(UW_WorkRPNotification_C, WorkRPDescription_2) == 0x000318, "Member 'UW_WorkRPNotification_C::WorkRPDescription_2' has a wrong offset!");
static_assert(offsetof(UW_WorkRPNotification_C, WorkRPDescription_3) == 0x000330, "Member 'UW_WorkRPNotification_C::WorkRPDescription_3' has a wrong offset!");
static_assert(offsetof(UW_WorkRPNotification_C, WorkRPDescription_Time) == 0x000348, "Member 'UW_WorkRPNotification_C::WorkRPDescription_Time' has a wrong offset!");
static_assert(offsetof(UW_WorkRPNotification_C, WorkRP_Count_current) == 0x000360, "Member 'UW_WorkRPNotification_C::WorkRP_Count_current' has a wrong offset!");
static_assert(offsetof(UW_WorkRPNotification_C, WorkRP_Count_total) == 0x000378, "Member 'UW_WorkRPNotification_C::WorkRP_Count_total' has a wrong offset!");
static_assert(offsetof(UW_WorkRPNotification_C, WidgetSwitcherIndex) == 0x000390, "Member 'UW_WorkRPNotification_C::WidgetSwitcherIndex' has a wrong offset!");
static_assert(offsetof(UW_WorkRPNotification_C, TimerNumber) == 0x000398, "Member 'UW_WorkRPNotification_C::TimerNumber' has a wrong offset!");
static_assert(offsetof(UW_WorkRPNotification_C, PercentN) == 0x0003A0, "Member 'UW_WorkRPNotification_C::PercentN' has a wrong offset!");
static_assert(offsetof(UW_WorkRPNotification_C, Var) == 0x0003A8, "Member 'UW_WorkRPNotification_C::Var' has a wrong offset!");

}

